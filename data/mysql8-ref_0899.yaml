- en: 15.1.13 CREATE EVENT Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.1.13 CREATE EVENT Statement
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-event.html](https://dev.mysql.com/doc/refman/8.0/en/create-event.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-event.html](https://dev.mysql.com/doc/refman/8.0/en/create-event.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This statement creates and schedules a new event. The event does not run unless
    the Event Scheduler is enabled. For information about checking Event Scheduler
    status and enabling it if necessary, see [Section 27.4.2, “Event Scheduler Configuration”](events-configuration.html
    "27.4.2 Event Scheduler Configuration").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句创建并安排了一个新事件。除非启用了事件调度程序，否则事件不会运行。有关检查事件调度程序状态并在必要时启用它的信息，请参阅[Section 27.4.2,
    “Event Scheduler Configuration”](events-configuration.html "27.4.2 Event Scheduler
    Configuration")。
- en: '[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement") requires
    the [`EVENT`](privileges-provided.html#priv_event) privilege for the schema in
    which the event is to be created. If the `DEFINER` clause is present, the privileges
    required depend on the *`user`* value, as discussed in [Section 27.6, “Stored
    Object Access Control”](stored-objects-security.html "27.6 Stored Object Access
    Control").'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement")需要在要创建事件的模式中具有[`EVENT`](privileges-provided.html#priv_event)权限。如果存在`DEFINER`子句，则所需的权限取决于*`user`*值，如[Section 27.6,
    “Stored Object Access Control”](stored-objects-security.html "27.6 Stored Object
    Access Control")中所讨论的那样。'
- en: 'The minimum requirements for a valid [`CREATE EVENT`](create-event.html "15.1.13 CREATE
    EVENT Statement") statement are as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement")语句的最低要求如下：'
- en: The keywords [`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement")
    plus an event name, which uniquely identifies the event in a database schema.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含事件名称的关键字[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement")以及一个事件名称，该名称在数据库模式中唯一标识事件。
- en: An `ON SCHEDULE` clause, which determines when and how often the event executes.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`ON SCHEDULE`子句，确定事件何时以及多久执行一次。
- en: A [`DO`](do.html "15.2.3 DO Statement") clause, which contains the SQL statement
    to be executed by an event.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个包含要由事件执行的SQL语句的[`DO`](do.html "15.2.3 DO Statement")子句。
- en: 'This is an example of a minimal [`CREATE EVENT`](create-event.html "15.1.13 CREATE
    EVENT Statement") statement:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个最简单的[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement")语句的示例：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The previous statement creates an event named `myevent`. This event executes
    once—one hour following its creation—by running an SQL statement that increments
    the value of the `myschema.mytable` table's `mycol` column by 1.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句创建了一个名为`myevent`的事件。此事件在创建后一小时执行一次，通过运行一个SQL语句来增加`myschema.mytable`表的`mycol`列的值。
- en: The *`event_name`* must be a valid MySQL identifier with a maximum length of
    64 characters. Event names are not case-sensitive, so you cannot have two events
    named `myevent` and `MyEvent` in the same schema. In general, the rules governing
    event names are the same as those for names of stored routines. See [Section 11.2,
    “Schema Object Names”](identifiers.html "11.2 Schema Object Names").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*`event_name`*必须是一个有效的MySQL标识符，最大长度为64个字符。事件名称不区分大小写，因此在同一模式中不能有两个名为`myevent`和`MyEvent`的事件。一般来说，事件名称的规则与存储过程名称的规则相同。请参阅[Section 11.2,
    “Schema Object Names”](identifiers.html "11.2 Schema Object Names")。'
- en: An event is associated with a schema. If no schema is indicated as part of *`event_name`*,
    the default (current) schema is assumed. To create an event in a specific schema,
    qualify the event name with a schema using `*`schema_name`*.*`event_name`*` syntax.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 事件与模式相关联。如果*`event_name`*的一部分未指定模式，则假定默认（当前）模式。要在特定模式中创建事件，请使用`*`schema_name`*.*`event_name`*`语法限定事件名称。
- en: The `DEFINER` clause specifies the MySQL account to be used when checking access
    privileges at event execution time. If the `DEFINER` clause is present, the *`user`*
    value should be a MySQL account specified as `'*`user_name`*'@'*`host_name`*'`,
    [`CURRENT_USER`](information-functions.html#function_current-user), or [`CURRENT_USER()`](information-functions.html#function_current-user).
    The permitted *`user`* values depend on the privileges you hold, as discussed
    in [Section 27.6, “Stored Object Access Control”](stored-objects-security.html
    "27.6 Stored Object Access Control"). Also see that section for additional information
    about event security.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`DEFINER`子句指定在事件执行时检查访问权限时要使用的MySQL帐户。如果存在`DEFINER`子句，则*`user`*值应为MySQL帐户，指定为`''*`user_name`*''@''*`host_name`*''`，[`CURRENT_USER`](information-functions.html#function_current-user)，或[`CURRENT_USER()`](information-functions.html#function_current-user)。允许的*`user`*值取决于您拥有的权限，如[Section 27.6,
    “Stored Object Access Control”](stored-objects-security.html "27.6 Stored Object
    Access Control")中所讨论的那样。还请参阅该部分以获取有关事件安全性的其他信息。'
- en: If the `DEFINER` clause is omitted, the default definer is the user who executes
    the [`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement") statement.
    This is the same as specifying `DEFINER = CURRENT_USER` explicitly.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略 `DEFINER` 子句，则默认的定义者是执行 [`CREATE EVENT`](create-event.html "15.1.13 CREATE
    EVENT Statement") 语句的用户。这与明确指定 `DEFINER = CURRENT_USER` 是相同的。
- en: Within an event body, the [`CURRENT_USER`](information-functions.html#function_current-user)
    function returns the account used to check privileges at event execution time,
    which is the `DEFINER` user. For information about user auditing within events,
    see [Section 8.2.23, “SQL-Based Account Activity Auditing”](account-activity-auditing.html
    "8.2.23 SQL-Based Account Activity Auditing").
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在事件体内，[`CURRENT_USER`](information-functions.html#function_current-user) 函数返回用于在事件执行时检查权限的帐户，即
    `DEFINER` 用户。有关事件内用户审计的信息，请参阅 [第 8.2.23 节，“基于 SQL 的帐户活动审计”](account-activity-auditing.html
    "8.2.23 SQL-Based Account Activity Auditing")。
- en: '`IF NOT EXISTS` has the same meaning for [`CREATE EVENT`](create-event.html
    "15.1.13 CREATE EVENT Statement") as for [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement"): If an event named *`event_name`* already exists in the same
    schema, no action is taken, and no error results. (However, a warning is generated
    in such cases.)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`IF NOT EXISTS` 对于 [`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT
    Statement") 与 [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")
    具有相同的含义：如果同一模式中已经存在名为 *`event_name`* 的事件，则不会执行任何操作，也不会产生错误。（但在这种情况下会生成警告。）'
- en: 'The `ON SCHEDULE` clause determines when, how often, and for how long the *`event_body`*
    defined for the event repeats. This clause takes one of two forms:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`ON SCHEDULE` 子句确定事件体 *`event_body`* 重复定义的事件何时、多久以及持续多久。此子句有两种形式之一：'
- en: '`AT *`timestamp`*` is used for a one-time event. It specifies that the event
    executes one time only at the date and time given by *`timestamp`*, which must
    include both the date and time, or must be an expression that resolves to a datetime
    value. You may use a value of either the [`DATETIME`](datetime.html "13.2.2 The
    DATE, DATETIME, and TIMESTAMP Types") or [`TIMESTAMP`](datetime.html "13.2.2 The
    DATE, DATETIME, and TIMESTAMP Types") type for this purpose. If the date is in
    the past, a warning occurs, as shown here:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AT *`timestamp`*` 用于一次性事件。它指定事件仅在由 *`timestamp`* 给出的日期和时间执行一次，该时间戳必须包括日期和时间，或者必须是解析为日期时间值的表达式。你可以为此目的使用
    [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") 或
    [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    类型的值。如果日期已过去，将发出警告，如下所示：'
- en: '[PRE2]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement") statements
    which are themselves invalid—for whatever reason—fail with an error.'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement") 语句本身无效的情况下，无论出于何种原因，都会失败并显示错误。'
- en: You may use [`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    to specify the current date and time. In such a case, the event acts as soon as
    it is created.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用 [`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    来指定当前日期和时间。在这种情况下，事件在创建时立即执行。
- en: To create an event which occurs at some point in the future relative to the
    current date and time—such as that expressed by the phrase “three weeks from now”—you
    can use the optional clause `+ INTERVAL *`interval`*`. The *`interval`* portion
    consists of two parts, a quantity and a unit of time, and follows the syntax rules
    described in [Temporal Intervals](expressions.html#temporal-intervals "Temporal
    Intervals"), except that you cannot use any units keywords that involving microseconds
    when defining an event. With some interval types, complex time units may be used.
    For example, “two minutes and ten seconds” can be expressed as `+ INTERVAL '2:10'
    MINUTE_SECOND`.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要创建一个在未来某个时间点发生的事件，相对于当前日期和时间，比如“从现在起三周”，你可以使用可选子句 `+ INTERVAL *`interval`*`。*`interval`*
    部分由数量和时间单位组成，并遵循 [时间间隔](expressions.html#temporal-intervals "Temporal Intervals")
    中描述的语法规则，但在定义事件时不能使用涉及微秒的任何单位关键字。对于某些间隔类型，可以使用复杂的时间单位。例如，“两分钟十秒” 可以表示为 `+ INTERVAL
    '2:10' MINUTE_SECOND`。
- en: You can also combine intervals. For example, `AT CURRENT_TIMESTAMP + INTERVAL
    3 WEEK + INTERVAL 2 DAY` is equivalent to “three weeks and two days from now”.
    Each portion of such a clause must begin with `+ INTERVAL`.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你也可以组合时间间隔。例如，`AT CURRENT_TIMESTAMP + INTERVAL 3 WEEK + INTERVAL 2 DAY` 相当于“从现在起三周零两天”。这样的子句中的每个部分都必须以
    `+ INTERVAL` 开头。
- en: To repeat actions at a regular interval, use an `EVERY` clause. The `EVERY`
    keyword is followed by an *`interval`* as described in the previous discussion
    of the `AT` keyword. (`+ INTERVAL` is *not* used with `EVERY`.) For example, `EVERY
    6 WEEK` means “every six weeks”.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要定期重复执行动作，使用 `EVERY` 子句。`EVERY` 关键字后面跟着一个如前面讨论的 `AT` 关键字描述的*`间隔`*。(`EVERY` 不与
    `+ INTERVAL` 一起使用。) 例如，`EVERY 6 WEEK` 表示“每六周”。
- en: Although `+ INTERVAL` clauses are not permitted in an `EVERY` clause, you can
    use the same complex time units permitted in a `+ INTERVAL`.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然 `+ INTERVAL` 子句在 `EVERY` 子句中不允许，但你可以使用与 `+ INTERVAL` 允许的相同复杂时间单位。
- en: An `EVERY` clause may contain an optional `STARTS` clause. `STARTS` is followed
    by a *`timestamp`* value that indicates when the action should begin repeating,
    and may also use `+ INTERVAL *`interval`*` to specify an amount of time “from
    now”. For example, `EVERY 3 MONTH STARTS CURRENT_TIMESTAMP + INTERVAL 1 WEEK`
    means “every three months, beginning one week from now”. Similarly, you can express
    “every two weeks, beginning six hours and fifteen minutes from now” as `EVERY
    2 WEEK STARTS CURRENT_TIMESTAMP + INTERVAL '6:15' HOUR_MINUTE`. Not specifying
    `STARTS` is the same as using `STARTS CURRENT_TIMESTAMP`—that is, the action specified
    for the event begins repeating immediately upon creation of the event.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`EVERY` 子句可以包含一个可选的 `STARTS` 子句。`STARTS` 后面跟着一个*`时间戳`*值，表示何时开始重复执行动作，并且还可以使用
    `+ INTERVAL *`间隔`*` 来指定“从现在开始”的时间量。例如，`EVERY 3 MONTH STARTS CURRENT_TIMESTAMP
    + INTERVAL 1 WEEK` 表示“每三个月，从现在开始一周后”。同样，你可以表达“每两周，从现在开始六小时十五分钟后”为 `EVERY 2 WEEK
    STARTS CURRENT_TIMESTAMP + INTERVAL ''6:15'' HOUR_MINUTE`。不指定 `STARTS` 与使用 `STARTS
    CURRENT_TIMESTAMP` 是一样的——也就是说，事件指定的动作在事件创建时立即开始重复执行。'
- en: An `EVERY` clause may contain an optional `ENDS` clause. The `ENDS` keyword
    is followed by a *`timestamp`* value that tells MySQL when the event should stop
    repeating. You may also use `+ INTERVAL *`interval`*` with `ENDS`; for instance,
    `EVERY 12 HOUR STARTS CURRENT_TIMESTAMP + INTERVAL 30 MINUTE ENDS CURRENT_TIMESTAMP
    + INTERVAL 4 WEEK` is equivalent to “every twelve hours, beginning thirty minutes
    from now, and ending four weeks from now”. Not using `ENDS` means that the event
    continues executing indefinitely.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`EVERY` 子句可以包含一个可选的 `ENDS` 子句。`ENDS` 关键字后面跟着一个*`时间戳`*值，告诉 MySQL 事件何时停止重复执行。你也可以在
    `ENDS` 中使用 `+ INTERVAL *`间隔`*`；例如，`EVERY 12 HOUR STARTS CURRENT_TIMESTAMP + INTERVAL
    30 MINUTE ENDS CURRENT_TIMESTAMP + INTERVAL 4 WEEK` 等同于“每十二小时，从现在开始三十分钟后，结束四周后”。不使用
    `ENDS` 意味着事件会无限期执行。'
- en: '`ENDS` supports the same syntax for complex time units as `STARTS` does.'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`ENDS` 支持与 `STARTS` 相同的复杂时间单位语法。'
- en: You may use `STARTS`, `ENDS`, both, or neither in an `EVERY` clause.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 `EVERY` 子句中可以使用 `STARTS`、`ENDS`、两者或者都不使用。
- en: If a repeating event does not terminate within its scheduling interval, the
    result may be multiple instances of the event executing simultaneously. If this
    is undesirable, you should institute a mechanism to prevent simultaneous instances.
    For example, you could use the [`GET_LOCK()`](locking-functions.html#function_get-lock)
    function, or row or table locking.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果重复事件在其调度间隔内没有终止，结果可能是同时执行多个事件实例。如果这是不希望的，你应该建立一个机制来防止同时执行实例。例如，你可以使用 [`GET_LOCK()`](locking-functions.html#function_get-lock)
    函数，或者行或表锁定。
- en: 'The `ON SCHEDULE` clause may use expressions involving built-in MySQL functions
    and user variables to obtain any of the *`timestamp`* or *`interval`* values which
    it contains. You may not use stored functions or loadable functions in such expressions,
    nor may you use any table references; however, you may use `SELECT FROM DUAL`.
    This is true for both [`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT
    Statement") and [`ALTER EVENT`](alter-event.html "15.1.3 ALTER EVENT Statement")
    statements. References to stored functions, loadable functions, and tables in
    such cases are specifically not permitted, and fail with an error (see Bug #22830).'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`ON SCHEDULE` 子句可以使用涉及内置 MySQL 函数和用户变量的表达式来获取其中包含的任何*`时间戳`*或*`间隔`*值。在这样的表达式中，不能使用存储函数或可加载函数，也不能使用任何表引用；但是，你可以使用
    `SELECT FROM DUAL`。这对于 [`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT
    Statement") 和 [`ALTER EVENT`](alter-event.html "15.1.3 ALTER EVENT Statement")
    语句都适用。在这种情况下，对存储函数、可加载函数和表的引用是明确不允许的，并会报错（参见 Bug #22830）。'
- en: Times in the `ON SCHEDULE` clause are interpreted using the current session
    [`time_zone`](server-system-variables.html#sysvar_time_zone) value. This becomes
    the event time zone; that is, the time zone that is used for event scheduling
    and is in effect within the event as it executes. These times are converted to
    UTC and stored along with the event time zone internally. This enables event execution
    to proceed as defined regardless of any subsequent changes to the server time
    zone or daylight saving time effects. For additional information about representation
    of event times, see [Section 27.4.4, “Event Metadata”](events-metadata.html "27.4.4 Event
    Metadata"). See also [Section 15.7.7.18, “SHOW EVENTS Statement”](show-events.html
    "15.7.7.18 SHOW EVENTS Statement"), and [Section 28.3.14, “The INFORMATION_SCHEMA
    EVENTS Table”](information-schema-events-table.html "28.3.14 The INFORMATION_SCHEMA
    EVENTS Table").
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`ON SCHEDULE`子句中的时间使用当前会话的[`time_zone`](server-system-variables.html#sysvar_time_zone)值进行解释。这成为事件的时区；也就是说，用于事件调度并在事件执行时生效的时区。这些时间被转换为UTC并与事件时区一起存储在内部。这使得事件执行可以按照定义进行，而不受服务器时区或夏令时效果的任何后续更改的影响。有关事件时间表示的其他信息，请参见[第27.4.4节，“事件元数据”](events-metadata.html
    "27.4.4 事件元数据")。另请参见[第15.7.7.18节，“SHOW EVENTS语句”](show-events.html "15.7.7.18 SHOW
    EVENTS语句")，以及[第28.3.14节，“INFORMATION_SCHEMA EVENTS表”](information-schema-events-table.html
    "28.3.14 INFORMATION_SCHEMA EVENTS表")。'
- en: Normally, once an event has expired, it is immediately dropped. You can override
    this behavior by specifying `ON COMPLETION PRESERVE`. Using `ON COMPLETION NOT
    PRESERVE` merely makes the default nonpersistent behavior explicit.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一旦事件过期，它将立即被删除。您可以通过指定`ON COMPLETION PRESERVE`来覆盖此行为。使用`ON COMPLETION NOT
    PRESERVE`仅仅是明确默认的非持久性行为。
- en: You can create an event but prevent it from being active using the `DISABLE`
    keyword. Alternatively, you can use `ENABLE` to make explicit the default status,
    which is active. This is most useful in conjunction with [`ALTER EVENT`](alter-event.html
    "15.1.3 ALTER EVENT Statement") (see [Section 15.1.3, “ALTER EVENT Statement”](alter-event.html
    "15.1.3 ALTER EVENT Statement")).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以创建一个事件，但使用`DISABLE`关键字阻止其处于活动状态。或者，您可以使用`ENABLE`来明确默认状态，即活动状态。这在与[`ALTER
    EVENT`](alter-event.html "15.1.3 ALTER EVENT语句")（参见[第15.1.3节，“ALTER EVENT语句”](alter-event.html
    "15.1.3 ALTER EVENT语句")）结合使用时最有用。
- en: A third value may also appear in place of `ENABLE` or `DISABLE`; `DISABLE ON
    SLAVE` is set for the status of an event on a replica to indicate that the event
    was created on the replication source server and replicated to the replica, but
    is not executed on the replica. See [Section 19.5.1.16, “Replication of Invoked
    Features”](replication-features-invoked.html "19.5.1.16 Replication of Invoked
    Features").
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`ENABLE`或`DISABLE`之外，还可以出现第三个值；在副本上设置`DISABLE ON SLAVE`用于指示事件在副本上的状态，表示事件在复制源服务器上创建并复制到副本，但在副本上不执行。参见[第19.5.1.16节，“调用功能的复制”](replication-features-invoked.html
    "19.5.1.16 调用功能的复制")。
- en: You may supply a comment for an event using a `COMMENT` clause. *`comment`*
    may be any string of up to 64 characters that you wish to use for describing the
    event. The comment text, being a string literal, must be surrounded by quotation
    marks.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`COMMENT`子句为事件提供评论。*`comment`*可以是最多64个字符的任何字符串，用于描述事件。评论文本作为字符串文字必须用引号括起来。
- en: 'The [`DO`](do.html "15.2.3 DO Statement") clause specifies an action carried
    by the event, and consists of an SQL statement. Nearly any valid MySQL statement
    that can be used in a stored routine can also be used as the action statement
    for a scheduled event. (See [Section 27.8, “Restrictions on Stored Programs”](stored-program-restrictions.html
    "27.8 Restrictions on Stored Programs").) For example, the following event `e_hourly`
    deletes all rows from the `sessions` table once per hour, where this table is
    part of the `site_activity` schema:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DO`](do.html "15.2.3 DO语句")子句指定事件执行的操作，由SQL语句组成。几乎任何可以在存储过程中使用的有效MySQL语句也可以作为计划事件的操作语句。（参见[第27.8节，“存储程序的限制”](stored-program-restrictions.html
    "27.8 存储程序的限制")。）例如，以下事件`e_hourly`每小时一次从`site_activity`模式中的`sessions`表中删除所有行：'
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: MySQL stores the [`sql_mode`](server-system-variables.html#sysvar_sql_mode)
    system variable setting in effect when an event is created or altered, and always
    executes the event with this setting in force, *regardless of the current server
    SQL mode when the event begins executing*.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL在创建或更改事件时存储了[`sql_mode`](server-system-variables.html#sysvar_sql_mode)系统变量的设置，并始终以此设置执行事件，*无论事件开始执行时当前服务器SQL模式如何*。
- en: A [`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement") statement
    that contains an [`ALTER EVENT`](alter-event.html "15.1.3 ALTER EVENT Statement")
    statement in its [`DO`](do.html "15.2.3 DO Statement") clause appears to succeed;
    however, when the server attempts to execute the resulting scheduled event, the
    execution fails with an error.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 包含在其[`DO`](do.html "15.2.3 DO语句")子句中的[`ALTER EVENT`](alter-event.html "15.1.3 ALTER
    EVENT语句")语句的[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT语句")语句似乎成功；然而，当服务器尝试执行生成的计划事件时，执行将失败并出现错误。
- en: Note
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Statements such as [`SELECT`](select.html "15.2.13 SELECT Statement") or [`SHOW`](show.html
    "15.7.7 SHOW Statements") that merely return a result set have no effect when
    used in an event; the output from these is not sent to the MySQL Monitor, nor
    is it stored anywhere. However, you can use statements such as [`SELECT ... INTO`](select.html
    "15.2.13 SELECT Statement") and [`INSERT INTO ... SELECT`](insert-select.html
    "15.2.7.1 INSERT ... SELECT Statement") that store a result. (See the next example
    in this section for an instance of the latter.)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如[`SELECT`](select.html "15.2.13 SELECT语句")或[`SHOW`](show.html "15.7.7 SHOW语句")等仅返回结果集的语句在事件中使用时没有任何效果；这些语句的输出既不会发送到MySQL监视器，也不会存储在任何地方。但是，您可以使用诸如[`SELECT
    ... INTO`](select.html "15.2.13 SELECT语句")和[`INSERT INTO ... SELECT`](insert-select.html
    "15.2.7.1 INSERT ... SELECT语句")等存储结果的语句。（请参见本节中后续示例中的一个实例。）
- en: The schema to which an event belongs is the default schema for table references
    in the [`DO`](do.html "15.2.3 DO Statement") clause. Any references to tables
    in other schemas must be qualified with the proper schema name.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 事件所属的模式是[`DO`](do.html "15.2.3 DO语句")子句中表引用的默认模式。对其他模式中表的引用必须使用正确的模式名称进行限定。
- en: 'As with stored routines, you can use compound-statement syntax in the [`DO`](do.html
    "15.2.3 DO Statement") clause by using the `BEGIN` and `END` keywords, as shown
    here:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 与存储过程一样，您可以在[`DO`](do.html "15.2.3 DO语句")子句中使用复合语句语法，通过使用`BEGIN`和`END`关键字，如下所示：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This example uses the `delimiter` command to change the statement delimiter.
    See [Section 27.1, “Defining Stored Programs”](stored-programs-defining.html "27.1 Defining
    Stored Programs").
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例使用`delimiter`命令更改语句定界符。请参见[第27.1节，“定义存储程序”](stored-programs-defining.html
    "27.1 定义存储程序")。
- en: 'More complex compound statements, such as those used in stored routines, are
    possible in an event. This example uses local variables, an error handler, and
    a flow control construct:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在事件中可以使用更复杂的复合语句，例如存储过程中使用的语句。此示例使用了局部变量、错误处理程序和流程控制结构：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'There is no way to pass parameters directly to or from events; however, it
    is possible to invoke a stored routine with parameters within an event:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 无法直接传递参数到或从事件中；然而，在事件中调用带参数的存储过程是可能的：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If an event's definer has privileges sufficient to set global system variables
    (see [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges")), the event can read and write global variables.
    As granting such privileges entails a potential for abuse, extreme care must be
    taken in doing so.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果事件的定义者具有足够设置全局系统变量的权限（参见[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")），则事件可以读取和写入全局变量。由于授予此类权限可能导致滥用，因此在执行此操作时必须非常小心。
- en: Generally, any statements that are valid in stored routines may be used for
    action statements executed by events. For more information about statements permissible
    within stored routines, see [Section 27.2.1, “Stored Routine Syntax”](stored-routines-syntax.html
    "27.2.1 Stored Routine Syntax"). It is not possible to create an event as part
    of a stored routine or to create an event by another event.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，存储过程中有效的任何语句都可以用于事件执行的操作语句。有关存储过程中允许的语句的更多信息，请参见[第27.2.1节，“存储过程语法”](stored-routines-syntax.html
    "27.2.1 存储过程语法")。不可能将事件创建为存储过程的一部分，也不可能通过另一个事件创建事件。
