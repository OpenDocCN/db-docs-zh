- en: 17.14 InnoDB Startup Options and System Variables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.14 InnoDB启动选项和系统变量
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html)
- en: System variables that are true or false can be enabled at server startup by
    naming them, or disabled by using a `--skip-` prefix. For example, to enable or
    disable the `InnoDB` adaptive hash index, you can use [`--innodb-adaptive-hash-index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)
    or [`--skip-innodb-adaptive-hash-index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)
    on the command line, or [`innodb_adaptive_hash_index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)
    or `skip_innodb_adaptive_hash_index` in an option file.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过命名启用或使用`--skip-`前缀禁用在服务器启动时为真或假的系统变量。例如，要启用或禁用`InnoDB`自适应哈希索引，可以在命令行上使用[`--innodb-adaptive-hash-index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)或[`--skip-innodb-adaptive-hash-index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)，或在选项文件中使用`innodb_adaptive_hash_index`或`skip_innodb_adaptive_hash_index`。
- en: Some variable descriptions refer to “enabling” or “disabling” a variable. These
    variables can be enabled with the [`SET`](set-variable.html "15.7.6.1 SET Syntax
    for Variable Assignment") statement by setting them to `ON` or `1`, or disabled
    by setting them to `OFF` or `0`. Boolean variables can be set at startup to the
    values `ON`, `TRUE`, `OFF`, and `FALSE` (not case-sensitive), as well as `1` and
    `0`. See [Section 6.2.2.4, “Program Option Modifiers”](option-modifiers.html "6.2.2.4 Program
    Option Modifiers").
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些变量描述涉及“启用”或“禁用”变量。这些变量可以通过将它们设置为`ON`或`1`来使用[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句启用，或通过将它们设置为`OFF`或`0`来禁用。布尔变量可以在启动时设置为`ON`、`TRUE`、`OFF`和`FALSE`（不区分大小写），以及`1`和`0`的值。参见[第6.2.2.4节，“程序选项修饰符”](option-modifiers.html
    "6.2.2.4 程序选项修饰符")。
- en: System variables that take a numeric value can be specified as `--*`var_name`*=*`value`*`
    on the command line or as `*`var_name`*=*`value`*` in option files.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ���受数值的系统变量���以在命令行上指定为`--*`var_name`*=*`value`*`，也可以在选项文件中指定为`*`var_name`*=*`value`*`。
- en: Many system variables can be changed at runtime (see [Section 7.1.9.2, “Dynamic
    System Variables”](dynamic-system-variables.html "7.1.9.2 Dynamic System Variables")).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多系统变量可以在运行时更改（参见[第7.1.9.2节，“动态系统变量”](dynamic-system-variables.html "7.1.9.2 动态系统变量")）。
- en: For information about `GLOBAL` and `SESSION` variable scope modifiers, refer
    to the [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement documentation.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`GLOBAL`和`SESSION`变量范围修饰符的信息，请参考[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句文档。
- en: Certain options control the locations and layout of the `InnoDB` data files.
    [Section 17.8.1, “InnoDB Startup Configuration”](innodb-init-startup-configuration.html
    "17.8.1 InnoDB Startup Configuration") explains how to use these options.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 某些选项控制`InnoDB`数据文件的位置和布局。[第17.8.1节，“InnoDB启动配置”](innodb-init-startup-configuration.html
    "17.8.1 InnoDB启动配置")解释了如何使用这些选项。
- en: Some options, which you might not use initially, help tune `InnoDB` performance
    characteristics based on machine capacity and your database [workload](glossary.html#glos_workload
    "workload").
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些选项，可能最初不会使用，有助于根据机器容量和数据库[工作负载](glossary.html#glos_workload "工作负载")调整`InnoDB`性能特征。
- en: For more information on specifying options and system variables, see [Section 6.2.2,
    “Specifying Program Options”](program-options.html "6.2.2 Specifying Program Options").
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关指定选项和系统变量的更多信息，请参见[第6.2.2节，“指定程序选项”](program-options.html "6.2.2 指定程序选项")。
- en: '**Table 17.24 InnoDB Option and Variable Reference**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**表格 17.24 InnoDB选项和变量参考**'
- en: '| Name | Cmd-Line | Option File | System Var | Status Var | Var Scope | Dynamic
    |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 命令行 | 选项文件 | 系统变量 | 状态变量 | 变量范围 | 动态 |'
- en: '| [daemon_memcached_enable_binlog](innodb-parameters.html#sysvar_daemon_memcached_enable_binlog)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [daemon_memcached_enable_binlog](innodb-parameters.html#sysvar_daemon_memcached_enable_binlog)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [daemon_memcached_engine_lib_name](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_name)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [daemon_memcached_engine_lib_name](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_name)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [daemon_memcached_engine_lib_path](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_path)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [daemon_memcached_engine_lib_path](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_path)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [daemon_memcached_option](innodb-parameters.html#sysvar_daemon_memcached_option)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [daemon_memcached_option](innodb-parameters.html#sysvar_daemon_memcached_option)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [daemon_memcached_r_batch_size](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [daemon_memcached_r_batch_size](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [daemon_memcached_w_batch_size](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [daemon_memcached_w_batch_size](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [foreign_key_checks](server-system-variables.html#sysvar_foreign_key_checks)
    |  |  | Yes |  | Both | Yes |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [foreign_key_checks](server-system-variables.html#sysvar_foreign_key_checks)
    |  |  | 是 |  | 两者 | 是 |'
- en: '| [innodb](innodb-parameters.html#option_mysqld_innodb) | Yes | Yes |  |  |  |  |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [innodb](innodb-parameters.html#option_mysqld_innodb) | 是 | 是 |  |  |  |  |'
- en: '| [innodb_adaptive_flushing](innodb-parameters.html#sysvar_innodb_adaptive_flushing)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_adaptive_flushing](innodb-parameters.html#sysvar_innodb_adaptive_flushing)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_adaptive_flushing_lwm](innodb-parameters.html#sysvar_innodb_adaptive_flushing_lwm)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_adaptive_flushing_lwm](innodb-parameters.html#sysvar_innodb_adaptive_flushing_lwm)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_adaptive_hash_index](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_adaptive_hash_index](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_adaptive_hash_index_parts](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_adaptive_hash_index_parts](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_adaptive_max_sleep_delay](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_adaptive_max_sleep_delay](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_api_bk_commit_interval](innodb-parameters.html#sysvar_innodb_api_bk_commit_interval)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_api_bk_commit_interval](innodb-parameters.html#sysvar_innodb_api_bk_commit_interval)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_api_disable_rowlock](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_api_disable_rowlock](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_api_enable_binlog](innodb-parameters.html#sysvar_innodb_api_enable_binlog)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_api_enable_binlog](innodb-parameters.html#sysvar_innodb_api_enable_binlog)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_api_enable_mdl](innodb-parameters.html#sysvar_innodb_api_enable_mdl)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_api_enable_mdl](innodb-parameters.html#sysvar_innodb_api_enable_mdl)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_api_trx_level](innodb-parameters.html#sysvar_innodb_api_trx_level)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_api_trx_level](innodb-parameters.html#sysvar_innodb_api_trx_level)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_autoextend_increment](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_autoextend_increment](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_autoinc_lock_mode](innodb-parameters.html#sysvar_innodb_autoinc_lock_mode)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_autoinc_lock_mode](innodb-parameters.html#sysvar_innodb_autoinc_lock_mode)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_background_drop_list_empty](innodb-parameters.html#sysvar_innodb_background_drop_list_empty)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_background_drop_list_empty](innodb-parameters.html#sysvar_innodb_background_drop_list_empty)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_buffer_pool_bytes_data](server-status-variables.html#statvar_Innodb_buffer_pool_bytes_data)
    |  |  |  | Yes | Global | No |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_bytes_data](server-status-variables.html#statvar_Innodb_buffer_pool_bytes_data)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_bytes_dirty](server-status-variables.html#statvar_Innodb_buffer_pool_bytes_dirty)
    |  |  |  | Yes | Global | No |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_bytes_dirty](server-status-variables.html#statvar_Innodb_buffer_pool_bytes_dirty)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_buffer_pool_chunk_size](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_chunk_size](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_buffer_pool_debug](innodb-parameters.html#sysvar_innodb_buffer_pool_debug)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_debug](innodb-parameters.html#sysvar_innodb_buffer_pool_debug)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_buffer_pool_dump_at_shutdown](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_dump_at_shutdown](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_buffer_pool_dump_now](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_dump_now](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_buffer_pool_dump_pct](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_dump_pct](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_buffer_pool_dump_status](server-status-variables.html#statvar_Innodb_buffer_pool_dump_status)
    |  |  |  | Yes | Global | No |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_dump_status](server-status-variables.html#statvar_Innodb_buffer_pool_dump_status)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_buffer_pool_filename](innodb-parameters.html#sysvar_innodb_buffer_pool_filename)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_filename](innodb-parameters.html#sysvar_innodb_buffer_pool_filename)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_buffer_pool_in_core_file](innodb-parameters.html#sysvar_innodb_buffer_pool_in_core_file)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_in_core_file](innodb-parameters.html#sysvar_innodb_buffer_pool_in_core_file)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_buffer_pool_instances](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_instances](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_buffer_pool_load_abort](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_load_abort](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_buffer_pool_load_at_startup](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_load_at_startup](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_buffer_pool_load_now](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_load_now](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_buffer_pool_load_status](server-status-variables.html#statvar_Innodb_buffer_pool_load_status)
    |  |  |  | Yes | Global | No |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_load_status](server-status-variables.html#statvar_Innodb_buffer_pool_load_status)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_pages_data](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)
    |  |  |  | Yes | Global | No |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_pages_data](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_pages_dirty](server-status-variables.html#statvar_Innodb_buffer_pool_pages_dirty)
    |  |  |  | Yes | Global | No |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_pages_dirty](server-status-variables.html#statvar_Innodb_buffer_pool_pages_dirty)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_pages_flushed](server-status-variables.html#statvar_Innodb_buffer_pool_pages_flushed)
    |  |  |  | Yes | Global | No |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_pages_flushed](server-status-variables.html#statvar_Innodb_buffer_pool_pages_flushed)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_pages_free](server-status-variables.html#statvar_Innodb_buffer_pool_pages_free)
    |  |  |  | Yes | Global | No |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_pages_free](server-status-variables.html#statvar_Innodb_buffer_pool_pages_free)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_pages_latched](server-status-variables.html#statvar_Innodb_buffer_pool_pages_latched)
    |  |  |  | Yes | Global | No |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_pages_latched](server-status-variables.html#statvar_Innodb_buffer_pool_pages_latched)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_pages_misc](server-status-variables.html#statvar_Innodb_buffer_pool_pages_misc)
    |  |  |  | Yes | Global | No |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_pages_misc](server-status-variables.html#statvar_Innodb_buffer_pool_pages_misc)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_pages_total](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)
    |  |  |  | Yes | Global | No |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_pages_total](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_read_ahead](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead)
    |  |  |  | Yes | Global | No |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_read_ahead](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_read_ahead_evicted](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_evicted)
    |  |  |  | Yes | Global | No |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_read_ahead_evicted](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_evicted)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_read_ahead_rnd](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_rnd)
    |  |  |  | Yes | Global | No |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_read_ahead_rnd](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_rnd)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_read_requests](server-status-variables.html#statvar_Innodb_buffer_pool_read_requests)
    |  |  |  | Yes | Global | No |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_read_requests](server-status-variables.html#statvar_Innodb_buffer_pool_read_requests)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_reads](server-status-variables.html#statvar_Innodb_buffer_pool_reads)
    |  |  |  | Yes | Global | No |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_reads](server-status-variables.html#statvar_Innodb_buffer_pool_reads)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_resize_status](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status)
    |  |  |  | Yes | Global | No |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_resize_status](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_buffer_pool_size](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_buffer_pool_size](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_buffer_pool_wait_free](server-status-variables.html#statvar_Innodb_buffer_pool_wait_free)
    |  |  |  | Yes | Global | No |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_wait_free](server-status-variables.html#statvar_Innodb_buffer_pool_wait_free)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_buffer_pool_write_requests](server-status-variables.html#statvar_Innodb_buffer_pool_write_requests)
    |  |  |  | Yes | Global | No |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_buffer_pool_write_requests](server-status-variables.html#statvar_Innodb_buffer_pool_write_requests)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_change_buffer_max_size](innodb-parameters.html#sysvar_innodb_change_buffer_max_size)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_change_buffer_max_size](innodb-parameters.html#sysvar_innodb_change_buffer_max_size)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_change_buffering](innodb-parameters.html#sysvar_innodb_change_buffering)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_change_buffering](innodb-parameters.html#sysvar_innodb_change_buffering)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_change_buffering_debug](innodb-parameters.html#sysvar_innodb_change_buffering_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_change_buffering_debug](innodb-parameters.html#sysvar_innodb_change_buffering_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_checkpoint_disabled](innodb-parameters.html#sysvar_innodb_checkpoint_disabled)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_checkpoint_disabled](innodb-parameters.html#sysvar_innodb_checkpoint_disabled)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_checksum_algorithm](innodb-parameters.html#sysvar_innodb_checksum_algorithm)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_checksum_algorithm](innodb-parameters.html#sysvar_innodb_checksum_algorithm)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_cmp_per_index_enabled](innodb-parameters.html#sysvar_innodb_cmp_per_index_enabled)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_cmp_per_index_enabled](innodb-parameters.html#sysvar_innodb_cmp_per_index_enabled)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_commit_concurrency](innodb-parameters.html#sysvar_innodb_commit_concurrency)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_commit_concurrency](innodb-parameters.html#sysvar_innodb_commit_concurrency)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_compress_debug](innodb-parameters.html#sysvar_innodb_compress_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_compress_debug](innodb-parameters.html#sysvar_innodb_compress_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_compression_failure_threshold_pct](innodb-parameters.html#sysvar_innodb_compression_failure_threshold_pct)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_compression_failure_threshold_pct](innodb-parameters.html#sysvar_innodb_compression_failure_threshold_pct)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_compression_level](innodb-parameters.html#sysvar_innodb_compression_level)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_compression_level](innodb-parameters.html#sysvar_innodb_compression_level)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_compression_pad_pct_max](innodb-parameters.html#sysvar_innodb_compression_pad_pct_max)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_compression_pad_pct_max](innodb-parameters.html#sysvar_innodb_compression_pad_pct_max)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_concurrency_tickets](innodb-parameters.html#sysvar_innodb_concurrency_tickets)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_concurrency_tickets](innodb-parameters.html#sysvar_innodb_concurrency_tickets)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_data_file_path](innodb-parameters.html#sysvar_innodb_data_file_path)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_data_file_path](innodb-parameters.html#sysvar_innodb_data_file_path)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [Innodb_data_fsyncs](server-status-variables.html#statvar_Innodb_data_fsyncs)
    |  |  |  | Yes | Global | No |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_data_fsyncs](server-status-variables.html#statvar_Innodb_data_fsyncs)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_data_home_dir](innodb-parameters.html#sysvar_innodb_data_home_dir)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_data_home_dir](innodb-parameters.html#sysvar_innodb_data_home_dir)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [Innodb_data_pending_fsyncs](server-status-variables.html#statvar_Innodb_data_pending_fsyncs)
    |  |  |  | Yes | Global | No |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_data_pending_fsyncs](server-status-variables.html#statvar_Innodb_data_pending_fsyncs)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_data_pending_reads](server-status-variables.html#statvar_Innodb_data_pending_reads)
    |  |  |  | Yes | Global | No |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_data_pending_reads](server-status-variables.html#statvar_Innodb_data_pending_reads)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_data_pending_writes](server-status-variables.html#statvar_Innodb_data_pending_writes)
    |  |  |  | Yes | Global | No |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_data_pending_writes](server-status-variables.html#statvar_Innodb_data_pending_writes)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_data_read](server-status-variables.html#statvar_Innodb_data_read)
    |  |  |  | Yes | Global | No |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_data_read](server-status-variables.html#statvar_Innodb_data_read)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_data_reads](server-status-variables.html#statvar_Innodb_data_reads)
    |  |  |  | Yes | Global | No |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_data_reads](server-status-variables.html#statvar_Innodb_data_reads)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_data_writes](server-status-variables.html#statvar_Innodb_data_writes)
    |  |  |  | Yes | Global | No |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_data_writes](server-status-variables.html#statvar_Innodb_data_writes)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_data_written](server-status-variables.html#statvar_Innodb_data_written)
    |  |  |  | Yes | Global | No |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_data_written](server-status-variables.html#statvar_Innodb_data_written)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_dblwr_pages_written](server-status-variables.html#statvar_Innodb_dblwr_pages_written)
    |  |  |  | Yes | Global | No |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_dblwr_pages_written](server-status-variables.html#statvar_Innodb_dblwr_pages_written)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_dblwr_writes](server-status-variables.html#statvar_Innodb_dblwr_writes)
    |  |  |  | Yes | Global | No |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_dblwr_writes](server-status-variables.html#statvar_Innodb_dblwr_writes)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_ddl_buffer_size](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
    | Yes | Yes | Yes |  | Both | Yes |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ddl_buffer_size](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
    | 是 | 是 | 是 |  | 两者 | 是 |'
- en: '| [innodb_ddl_log_crash_reset_debug](innodb-parameters.html#sysvar_innodb_ddl_log_crash_reset_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ddl_log_crash_reset_debug](innodb-parameters.html#sysvar_innodb_ddl_log_crash_reset_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_ddl_threads](innodb-parameters.html#sysvar_innodb_ddl_threads) |
    Yes | Yes | Yes |  | Both | Yes |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ddl_threads](innodb-parameters.html#sysvar_innodb_ddl_threads) |
    是 | 是 | 是 |  | 两者 | 是 |'
- en: '| [innodb_deadlock_detect](innodb-parameters.html#sysvar_innodb_deadlock_detect)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_deadlock_detect](innodb-parameters.html#sysvar_innodb_deadlock_detect)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_dedicated_server](innodb-parameters.html#sysvar_innodb_dedicated_server)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_dedicated_server](innodb-parameters.html#sysvar_innodb_dedicated_server)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_default_row_format](innodb-parameters.html#sysvar_innodb_default_row_format)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_default_row_format](innodb-parameters.html#sysvar_innodb_default_row_format)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_directories](innodb-parameters.html#sysvar_innodb_directories) |
    Yes | Yes | Yes |  | Global | No |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_directories](innodb-parameters.html#sysvar_innodb_directories) |
    是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_disable_sort_file_cache](innodb-parameters.html#sysvar_innodb_disable_sort_file_cache)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_disable_sort_file_cache](innodb-parameters.html#sysvar_innodb_disable_sort_file_cache)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_doublewrite](innodb-parameters.html#sysvar_innodb_doublewrite) |
    Yes | Yes | Yes |  | Global | Varies |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_doublewrite](innodb-parameters.html#sysvar_innodb_doublewrite) |
    是 | 是 | 是 |  | 全局 | 不定 |'
- en: '| [innodb_doublewrite_batch_size](innodb-parameters.html#sysvar_innodb_doublewrite_batch_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_doublewrite_batch_size](innodb-parameters.html#sysvar_innodb_doublewrite_batch_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_doublewrite_dir](innodb-parameters.html#sysvar_innodb_doublewrite_dir)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_doublewrite_dir](innodb-parameters.html#sysvar_innodb_doublewrite_dir)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_doublewrite_files](innodb-parameters.html#sysvar_innodb_doublewrite_files)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_doublewrite_files](innodb-parameters.html#sysvar_innodb_doublewrite_files)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_doublewrite_pages](innodb-parameters.html#sysvar_innodb_doublewrite_pages)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_doublewrite_pages](innodb-parameters.html#sysvar_innodb_doublewrite_pages)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_fast_shutdown](innodb-parameters.html#sysvar_innodb_fast_shutdown)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_fast_shutdown](innodb-parameters.html#sysvar_innodb_fast_shutdown)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_fil_make_page_dirty_debug](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_fil_make_page_dirty_debug](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_file_per_table](innodb-parameters.html#sysvar_innodb_file_per_table)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_file_per_table](innodb-parameters.html#sysvar_innodb_file_per_table)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_fill_factor](innodb-parameters.html#sysvar_innodb_fill_factor) |
    Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_fill_factor](innodb-parameters.html#sysvar_innodb_fill_factor) |
    是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_flush_log_at_timeout](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_flush_log_at_timeout](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_flush_log_at_trx_commit](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_flush_log_at_trx_commit](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_flush_method](innodb-parameters.html#sysvar_innodb_flush_method)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_flush_method](innodb-parameters.html#sysvar_innodb_flush_method)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_flush_neighbors](innodb-parameters.html#sysvar_innodb_flush_neighbors)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_flush_neighbors](innodb-parameters.html#sysvar_innodb_flush_neighbors)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_flush_sync](innodb-parameters.html#sysvar_innodb_flush_sync) | Yes
    | Yes | Yes |  | Global | Yes |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_flush_sync](innodb-parameters.html#sysvar_innodb_flush_sync) | 是
    | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_flushing_avg_loops](innodb-parameters.html#sysvar_innodb_flushing_avg_loops)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_flushing_avg_loops](innodb-parameters.html#sysvar_innodb_flushing_avg_loops)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_force_load_corrupted](innodb-parameters.html#sysvar_innodb_force_load_corrupted)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_force_load_corrupted](innodb-parameters.html#sysvar_innodb_force_load_corrupted)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_force_recovery](innodb-parameters.html#sysvar_innodb_force_recovery)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_force_recovery](innodb-parameters.html#sysvar_innodb_force_recovery)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_fsync_threshold](innodb-parameters.html#sysvar_innodb_fsync_threshold)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_fsync_threshold](innodb-parameters.html#sysvar_innodb_fsync_threshold)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_ft_aux_table](innodb-parameters.html#sysvar_innodb_ft_aux_table)
    |  |  | Yes |  | Global | Yes |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_aux_table](innodb-parameters.html#sysvar_innodb_ft_aux_table)
    |  |  | 是 |  | 全局 | 是 |'
- en: '| [innodb_ft_cache_size](innodb-parameters.html#sysvar_innodb_ft_cache_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_cache_size](innodb-parameters.html#sysvar_innodb_ft_cache_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_ft_enable_diag_print](innodb-parameters.html#sysvar_innodb_ft_enable_diag_print)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_enable_diag_print](innodb-parameters.html#sysvar_innodb_ft_enable_diag_print)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_ft_enable_stopword](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)
    | Yes | Yes | Yes |  | Both | Yes |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_enable_stopword](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)
    | 是 | 是 | 是 |  | 两者 | 是 |'
- en: '| [innodb_ft_max_token_size](innodb-parameters.html#sysvar_innodb_ft_max_token_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_max_token_size](innodb-parameters.html#sysvar_innodb_ft_max_token_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_ft_min_token_size](innodb-parameters.html#sysvar_innodb_ft_min_token_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_min_token_size](innodb-parameters.html#sysvar_innodb_ft_min_token_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_ft_num_word_optimize](innodb-parameters.html#sysvar_innodb_ft_num_word_optimize)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_num_word_optimize](innodb-parameters.html#sysvar_innodb_ft_num_word_optimize)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_ft_result_cache_limit](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_result_cache_limit](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_ft_server_stopword_table](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_server_stopword_table](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_ft_sort_pll_degree](innodb-parameters.html#sysvar_innodb_ft_sort_pll_degree)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_sort_pll_degree](innodb-parameters.html#sysvar_innodb_ft_sort_pll_degree)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_ft_total_cache_size](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_total_cache_size](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_ft_user_stopword_table](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    | Yes | Yes | Yes |  | Both | Yes |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_ft_user_stopword_table](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    | 是 | 是 | 是 |  | 两者 | 是 |'
- en: '| [Innodb_have_atomic_builtins](server-status-variables.html#statvar_Innodb_have_atomic_builtins)
    |  |  |  | Yes | Global | No |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_have_atomic_builtins](server-status-variables.html#statvar_Innodb_have_atomic_builtins)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_idle_flush_pct](innodb-parameters.html#sysvar_innodb_idle_flush_pct)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_idle_flush_pct](innodb-parameters.html#sysvar_innodb_idle_flush_pct)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_io_capacity](innodb-parameters.html#sysvar_innodb_io_capacity) |
    Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_io_capacity](innodb-parameters.html#sysvar_innodb_io_capacity) |
    是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_io_capacity_max](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_io_capacity_max](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_limit_optimistic_insert_debug](innodb-parameters.html#sysvar_innodb_limit_optimistic_insert_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_limit_optimistic_insert_debug](innodb-parameters.html#sysvar_innodb_limit_optimistic_insert_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_lock_wait_timeout](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    | Yes | Yes | Yes |  | Both | Yes |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_lock_wait_timeout](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    | 是 | 是 | 是 |  | 两者 | 是 |'
- en: '| [innodb_log_buffer_size](innodb-parameters.html#sysvar_innodb_log_buffer_size)
    | Yes | Yes | Yes |  | Global | Varies |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_buffer_size](innodb-parameters.html#sysvar_innodb_log_buffer_size)
    | 是 | 是 | 是 |  | 全局 | 变化 |'
- en: '| [innodb_log_checkpoint_fuzzy_now](innodb-parameters.html#sysvar_innodb_log_checkpoint_fuzzy_now)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_checkpoint_fuzzy_now](innodb-parameters.html#sysvar_innodb_log_checkpoint_fuzzy_now)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_log_checkpoint_now](innodb-parameters.html#sysvar_innodb_log_checkpoint_now)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_checkpoint_now](innodb-parameters.html#sysvar_innodb_log_checkpoint_now)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_log_checksums](innodb-parameters.html#sysvar_innodb_log_checksums)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_checksums](innodb-parameters.html#sysvar_innodb_log_checksums)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_log_compressed_pages](innodb-parameters.html#sysvar_innodb_log_compressed_pages)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_compressed_pages](innodb-parameters.html#sysvar_innodb_log_compressed_pages)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_log_file_size](innodb-parameters.html#sysvar_innodb_log_file_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_file_size](innodb-parameters.html#sysvar_innodb_log_file_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_log_files_in_group](innodb-parameters.html#sysvar_innodb_log_files_in_group)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_files_in_group](innodb-parameters.html#sysvar_innodb_log_files_in_group)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_log_group_home_dir](innodb-parameters.html#sysvar_innodb_log_group_home_dir)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_group_home_dir](innodb-parameters.html#sysvar_innodb_log_group_home_dir)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_log_spin_cpu_abs_lwm](innodb-parameters.html#sysvar_innodb_log_spin_cpu_abs_lwm)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_spin_cpu_abs_lwm](innodb-parameters.html#sysvar_innodb_log_spin_cpu_abs_lwm)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_log_spin_cpu_pct_hwm](innodb-parameters.html#sysvar_innodb_log_spin_cpu_pct_hwm)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_spin_cpu_pct_hwm](innodb-parameters.html#sysvar_innodb_log_spin_cpu_pct_hwm)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_log_wait_for_flush_spin_hwm](innodb-parameters.html#sysvar_innodb_log_wait_for_flush_spin_hwm)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_wait_for_flush_spin_hwm](innodb-parameters.html#sysvar_innodb_log_wait_for_flush_spin_hwm)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_log_waits](server-status-variables.html#statvar_Innodb_log_waits)
    |  |  |  | Yes | Global | No |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_log_waits](server-status-variables.html#statvar_Innodb_log_waits)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_log_write_ahead_size](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_write_ahead_size](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_log_write_requests](server-status-variables.html#statvar_Innodb_log_write_requests)
    |  |  |  | Yes | Global | No |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_log_write_requests](server-status-variables.html#statvar_Innodb_log_write_requests)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_log_writer_threads](innodb-parameters.html#sysvar_innodb_log_writer_threads)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_log_writer_threads](innodb-parameters.html#sysvar_innodb_log_writer_threads)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_log_writes](server-status-variables.html#statvar_Innodb_log_writes)
    |  |  |  | Yes | Global | No |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_log_writes](server-status-variables.html#statvar_Innodb_log_writes)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_lru_scan_depth](innodb-parameters.html#sysvar_innodb_lru_scan_depth)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_lru_scan_depth](innodb-parameters.html#sysvar_innodb_lru_scan_depth)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_max_dirty_pages_pct](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_max_dirty_pages_pct](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_max_dirty_pages_pct_lwm](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct_lwm)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_max_dirty_pages_pct_lwm](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct_lwm)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_max_purge_lag](innodb-parameters.html#sysvar_innodb_max_purge_lag)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_max_purge_lag](innodb-parameters.html#sysvar_innodb_max_purge_lag)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_max_purge_lag_delay](innodb-parameters.html#sysvar_innodb_max_purge_lag_delay)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_max_purge_lag_delay](innodb-parameters.html#sysvar_innodb_max_purge_lag_delay)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_max_undo_log_size](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_max_undo_log_size](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_merge_threshold_set_all_debug](innodb-parameters.html#sysvar_innodb_merge_threshold_set_all_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_merge_threshold_set_all_debug](innodb-parameters.html#sysvar_innodb_merge_threshold_set_all_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_monitor_disable](innodb-parameters.html#sysvar_innodb_monitor_disable)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_monitor_disable](innodb-parameters.html#sysvar_innodb_monitor_disable)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_monitor_enable](innodb-parameters.html#sysvar_innodb_monitor_enable)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_monitor_enable](innodb-parameters.html#sysvar_innodb_monitor_enable)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_monitor_reset](innodb-parameters.html#sysvar_innodb_monitor_reset)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_monitor_reset](innodb-parameters.html#sysvar_innodb_monitor_reset)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_monitor_reset_all](innodb-parameters.html#sysvar_innodb_monitor_reset_all)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_monitor_reset_all](innodb-parameters.html#sysvar_innodb_monitor_reset_all)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_num_open_files](server-status-variables.html#statvar_Innodb_num_open_files)
    |  |  |  | Yes | Global | No |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_num_open_files](server-status-variables.html#statvar_Innodb_num_open_files)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_numa_interleave](innodb-parameters.html#sysvar_innodb_numa_interleave)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_numa_interleave](innodb-parameters.html#sysvar_innodb_numa_interleave)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_old_blocks_pct](innodb-parameters.html#sysvar_innodb_old_blocks_pct)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_old_blocks_pct](innodb-parameters.html#sysvar_innodb_old_blocks_pct)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_old_blocks_time](innodb-parameters.html#sysvar_innodb_old_blocks_time)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_old_blocks_time](innodb-parameters.html#sysvar_innodb_old_blocks_time)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_online_alter_log_max_size](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_online_alter_log_max_size](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_open_files](innodb-parameters.html#sysvar_innodb_open_files) | Yes
    | Yes | Yes |  | Global | Varies |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_open_files](innodb-parameters.html#sysvar_innodb_open_files) | 是
    | 是 | 是 |  | 全局 | 不定 |'
- en: '| [innodb_optimize_fulltext_only](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_optimize_fulltext_only](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_os_log_fsyncs](server-status-variables.html#statvar_Innodb_os_log_fsyncs)
    |  |  |  | Yes | Global | No |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_os_log_fsyncs](server-status-variables.html#statvar_Innodb_os_log_fsyncs)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_os_log_pending_fsyncs](server-status-variables.html#statvar_Innodb_os_log_pending_fsyncs)
    |  |  |  | Yes | Global | No |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_os_log_pending_fsyncs](server-status-variables.html#statvar_Innodb_os_log_pending_fsyncs)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_os_log_pending_writes](server-status-variables.html#statvar_Innodb_os_log_pending_writes)
    |  |  |  | Yes | Global | No |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_os_log_pending_writes](server-status-variables.html#statvar_Innodb_os_log_pending_writes)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_os_log_written](server-status-variables.html#statvar_Innodb_os_log_written)
    |  |  |  | Yes | Global | No |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_os_log_written](server-status-variables.html#statvar_Innodb_os_log_written)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_page_cleaners](innodb-parameters.html#sysvar_innodb_page_cleaners)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_page_cleaners](innodb-parameters.html#sysvar_innodb_page_cleaners)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [Innodb_page_size](server-status-variables.html#statvar_Innodb_page_size)
    |  |  |  | Yes | Global | No |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_page_size](server-status-variables.html#statvar_Innodb_page_size)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_page_size](innodb-parameters.html#sysvar_innodb_page_size) | Yes
    | Yes | Yes |  | Global | No |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_page_size](innodb-parameters.html#sysvar_innodb_page_size) | 是 |
    是 | 是 |  | 全局 | 否 |'
- en: '| [Innodb_pages_created](server-status-variables.html#statvar_Innodb_pages_created)
    |  |  |  | Yes | Global | No |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_pages_created](server-status-variables.html#statvar_Innodb_pages_created)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_pages_read](server-status-variables.html#statvar_Innodb_pages_read)
    |  |  |  | Yes | Global | No |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_pages_read](server-status-variables.html#statvar_Innodb_pages_read)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_pages_written](server-status-variables.html#statvar_Innodb_pages_written)
    |  |  |  | Yes | Global | No |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_pages_written](server-status-variables.html#statvar_Innodb_pages_written)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_parallel_read_threads](innodb-parameters.html#sysvar_innodb_parallel_read_threads)
    | Yes | Yes | Yes |  | Session | Yes |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_parallel_read_threads](innodb-parameters.html#sysvar_innodb_parallel_read_threads)
    | 是 | 是 | 是 |  | 会话 | 是 |'
- en: '| [innodb_print_all_deadlocks](innodb-parameters.html#sysvar_innodb_print_all_deadlocks)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_print_all_deadlocks](innodb-parameters.html#sysvar_innodb_print_all_deadlocks)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_print_ddl_logs](innodb-parameters.html#sysvar_innodb_print_ddl_logs)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_print_ddl_logs](innodb-parameters.html#sysvar_innodb_print_ddl_logs)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_purge_batch_size](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_purge_batch_size](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_purge_rseg_truncate_frequency](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_purge_rseg_truncate_frequency](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_purge_threads](innodb-parameters.html#sysvar_innodb_purge_threads)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_purge_threads](innodb-parameters.html#sysvar_innodb_purge_threads)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_random_read_ahead](innodb-parameters.html#sysvar_innodb_random_read_ahead)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_random_read_ahead](innodb-parameters.html#sysvar_innodb_random_read_ahead)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_read_ahead_threshold](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_read_ahead_threshold](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_read_io_threads](innodb-parameters.html#sysvar_innodb_read_io_threads)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_read_io_threads](innodb-parameters.html#sysvar_innodb_read_io_threads)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_read_only](innodb-parameters.html#sysvar_innodb_read_only) | Yes
    | Yes | Yes |  | Global | No |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_read_only](innodb-parameters.html#sysvar_innodb_read_only) | 是 |
    是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_redo_log_archive_dirs](innodb-parameters.html#sysvar_innodb_redo_log_archive_dirs)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_redo_log_archive_dirs](innodb-parameters.html#sysvar_innodb_redo_log_archive_dirs)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_redo_log_capacity](innodb-parameters.html#sysvar_innodb_redo_log_capacity)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_redo_log_capacity](innodb-parameters.html#sysvar_innodb_redo_log_capacity)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_redo_log_capacity_resized](server-status-variables.html#statvar_Innodb_redo_log_capacity_resized)
    |  |  |  | Yes | Global | No |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_capacity_resized](server-status-variables.html#statvar_Innodb_redo_log_capacity_resized)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_redo_log_checkpoint_lsn](server-status-variables.html#statvar_Innodb_redo_log_checkpoint_lsn)
    |  |  |  | Yes | Global | No |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_checkpoint_lsn](server-status-variables.html#statvar_Innodb_redo_log_checkpoint_lsn)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_redo_log_current_lsn](server-status-variables.html#statvar_Innodb_redo_log_current_lsn)
    |  |  |  | Yes | Global | No |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_current_lsn](server-status-variables.html#statvar_Innodb_redo_log_current_lsn)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_redo_log_enabled](server-status-variables.html#statvar_Innodb_redo_log_enabled)
    |  |  |  | Yes | Global | No |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_enabled](server-status-variables.html#statvar_Innodb_redo_log_enabled)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_redo_log_encrypt](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_redo_log_encrypt](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_redo_log_flushed_to_disk_lsn](server-status-variables.html#statvar_Innodb_redo_log_flushed_to_disk_lsn)
    |  |  |  | Yes | Global | No |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_flushed_to_disk_lsn](server-status-variables.html#statvar_Innodb_redo_log_flushed_to_disk_lsn)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_redo_log_logical_size](server-status-variables.html#statvar_Innodb_redo_log_logical_size)
    |  |  |  | Yes | Global | No |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_logical_size](server-status-variables.html#statvar_Innodb_redo_log_logical_size)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_redo_log_physical_size](server-status-variables.html#statvar_Innodb_redo_log_physical_size)
    |  |  |  | Yes | Global | No |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_physical_size](server-status-variables.html#statvar_Innodb_redo_log_physical_size)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_redo_log_read_only](server-status-variables.html#statvar_Innodb_redo_log_read_only)
    |  |  |  | Yes | Global | No |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_read_only](server-status-variables.html#statvar_Innodb_redo_log_read_only)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_redo_log_resize_status](server-status-variables.html#statvar_Innodb_redo_log_resize_status)
    |  |  |  | Yes | Global | No |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_resize_status](server-status-variables.html#statvar_Innodb_redo_log_resize_status)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_redo_log_uuid](server-status-variables.html#statvar_Innodb_redo_log_uuid)
    |  |  |  | Yes | Global | No |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_redo_log_uuid](server-status-variables.html#statvar_Innodb_redo_log_uuid)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_replication_delay](innodb-parameters.html#sysvar_innodb_replication_delay)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_replication_delay](innodb-parameters.html#sysvar_innodb_replication_delay)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_rollback_on_timeout](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_rollback_on_timeout](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_rollback_segments](innodb-parameters.html#sysvar_innodb_rollback_segments)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_rollback_segments](innodb-parameters.html#sysvar_innodb_rollback_segments)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_row_lock_current_waits](server-status-variables.html#statvar_Innodb_row_lock_current_waits)
    |  |  |  | Yes | Global | No |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_row_lock_current_waits](server-status-variables.html#statvar_Innodb_row_lock_current_waits)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_row_lock_time](server-status-variables.html#statvar_Innodb_row_lock_time)
    |  |  |  | Yes | Global | No |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_row_lock_time](server-status-variables.html#statvar_Innodb_row_lock_time)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_row_lock_time_avg](server-status-variables.html#statvar_Innodb_row_lock_time_avg)
    |  |  |  | Yes | Global | No |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_row_lock_time_avg](server-status-variables.html#statvar_Innodb_row_lock_time_avg)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_row_lock_time_max](server-status-variables.html#statvar_Innodb_row_lock_time_max)
    |  |  |  | Yes | Global | No |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_row_lock_time_max](server-status-variables.html#statvar_Innodb_row_lock_time_max)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_row_lock_waits](server-status-variables.html#statvar_Innodb_row_lock_waits)
    |  |  |  | Yes | Global | No |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_row_lock_waits](server-status-variables.html#statvar_Innodb_row_lock_waits)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_rows_deleted](server-status-variables.html#statvar_Innodb_rows_deleted)
    |  |  |  | Yes | Global | No |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_rows_deleted](server-status-variables.html#statvar_Innodb_rows_deleted)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_rows_inserted](server-status-variables.html#statvar_Innodb_rows_inserted)
    |  |  |  | Yes | Global | No |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_rows_inserted](server-status-variables.html#statvar_Innodb_rows_inserted)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_rows_read](server-status-variables.html#statvar_Innodb_rows_read)
    |  |  |  | Yes | Global | No |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_rows_read](server-status-variables.html#statvar_Innodb_rows_read)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_rows_updated](server-status-variables.html#statvar_Innodb_rows_updated)
    |  |  |  | Yes | Global | No |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_rows_updated](server-status-variables.html#statvar_Innodb_rows_updated)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_saved_page_number_debug](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_saved_page_number_debug](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_segment_reserve_factor](innodb-parameters.html#sysvar_innodb_segment_reserve_factor)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_segment_reserve_factor](innodb-parameters.html#sysvar_innodb_segment_reserve_factor)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_sort_buffer_size](innodb-parameters.html#sysvar_innodb_sort_buffer_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_sort_buffer_size](innodb-parameters.html#sysvar_innodb_sort_buffer_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_spin_wait_delay](innodb-parameters.html#sysvar_innodb_spin_wait_delay)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_spin_wait_delay](innodb-parameters.html#sysvar_innodb_spin_wait_delay)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_spin_wait_pause_multiplier](innodb-parameters.html#sysvar_innodb_spin_wait_pause_multiplier)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_spin_wait_pause_multiplier](innodb-parameters.html#sysvar_innodb_spin_wait_pause_multiplier)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_stats_auto_recalc](innodb-parameters.html#sysvar_innodb_stats_auto_recalc)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_stats_auto_recalc](innodb-parameters.html#sysvar_innodb_stats_auto_recalc)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_stats_include_delete_marked](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_stats_include_delete_marked](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_stats_method](innodb-parameters.html#sysvar_innodb_stats_method)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_stats_method](innodb-parameters.html#sysvar_innodb_stats_method)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_stats_on_metadata](innodb-parameters.html#sysvar_innodb_stats_on_metadata)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_stats_on_metadata](innodb-parameters.html#sysvar_innodb_stats_on_metadata)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_stats_persistent](innodb-parameters.html#sysvar_innodb_stats_persistent)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_stats_persistent](innodb-parameters.html#sysvar_innodb_stats_persistent)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_stats_persistent_sample_pages](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_stats_persistent_sample_pages](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_stats_transient_sample_pages](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_stats_transient_sample_pages](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb-status-file](innodb-parameters.html#option_mysqld_innodb-status-file)
    | Yes | Yes |  |  |  |  |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| [innodb-status-file](innodb-parameters.html#option_mysqld_innodb-status-file)
    | 是 | 是 |  |  |  |  |'
- en: '| [innodb_status_output](innodb-parameters.html#sysvar_innodb_status_output)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_status_output](innodb-parameters.html#sysvar_innodb_status_output)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_status_output_locks](innodb-parameters.html#sysvar_innodb_status_output_locks)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_status_output_locks](innodb-parameters.html#sysvar_innodb_status_output_locks)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_strict_mode](innodb-parameters.html#sysvar_innodb_strict_mode) |
    Yes | Yes | Yes |  | Both | Yes |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_strict_mode](innodb-parameters.html#sysvar_innodb_strict_mode) |
    是 | 是 | 是 |  | 两者 | 是 |'
- en: '| [innodb_sync_array_size](innodb-parameters.html#sysvar_innodb_sync_array_size)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_sync_array_size](innodb-parameters.html#sysvar_innodb_sync_array_size)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_sync_debug](innodb-parameters.html#sysvar_innodb_sync_debug) | Yes
    | Yes | Yes |  | Global | No |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_sync_debug](innodb-parameters.html#sysvar_innodb_sync_debug) | 是
    | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_sync_spin_loops](innodb-parameters.html#sysvar_innodb_sync_spin_loops)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_sync_spin_loops](innodb-parameters.html#sysvar_innodb_sync_spin_loops)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [Innodb_system_rows_deleted](server-status-variables.html#statvar_Innodb_system_rows_deleted)
    |  |  |  | Yes | Global | No |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_system_rows_deleted](server-status-variables.html#statvar_Innodb_system_rows_deleted)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_system_rows_inserted](server-status-variables.html#statvar_Innodb_system_rows_inserted)
    |  |  |  | Yes | Global | No |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_system_rows_inserted](server-status-variables.html#statvar_Innodb_system_rows_inserted)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_system_rows_read](server-status-variables.html#statvar_Innodb_system_rows_read)
    |  |  |  | Yes | Global | No |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_system_rows_read](server-status-variables.html#statvar_Innodb_system_rows_read)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_table_locks](innodb-parameters.html#sysvar_innodb_table_locks) |
    Yes | Yes | Yes |  | Both | Yes |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_table_locks](innodb-parameters.html#sysvar_innodb_table_locks) |
    是 | 是 | 是 |  | 两者 | 是 |'
- en: '| [innodb_temp_data_file_path](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_temp_data_file_path](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_temp_tablespaces_dir](innodb-parameters.html#sysvar_innodb_temp_tablespaces_dir)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_temp_tablespaces_dir](innodb-parameters.html#sysvar_innodb_temp_tablespaces_dir)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_thread_concurrency](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_thread_concurrency](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_thread_sleep_delay](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_thread_sleep_delay](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_tmpdir](innodb-parameters.html#sysvar_innodb_tmpdir) | Yes | Yes
    | Yes |  | Both | Yes |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_tmpdir](innodb-parameters.html#sysvar_innodb_tmpdir) | 是 | 是 | 是
    |  | 两者 | 是 |'
- en: '| [Innodb_truncated_status_writes](server-status-variables.html#statvar_Innodb_truncated_status_writes)
    |  |  |  | Yes | Global | No |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_truncated_status_writes](server-status-variables.html#statvar_Innodb_truncated_status_writes)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_trx_purge_view_update_only_debug](innodb-parameters.html#sysvar_innodb_trx_purge_view_update_only_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_trx_purge_view_update_only_debug](innodb-parameters.html#sysvar_innodb_trx_purge_view_update_only_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_trx_rseg_n_slots_debug](innodb-parameters.html#sysvar_innodb_trx_rseg_n_slots_debug)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_trx_rseg_n_slots_debug](innodb-parameters.html#sysvar_innodb_trx_rseg_n_slots_debug)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_undo_directory](innodb-parameters.html#sysvar_innodb_undo_directory)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_undo_directory](innodb-parameters.html#sysvar_innodb_undo_directory)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_undo_log_encrypt](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_undo_log_encrypt](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_undo_log_truncate](innodb-parameters.html#sysvar_innodb_undo_log_truncate)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_undo_log_truncate](innodb-parameters.html#sysvar_innodb_undo_log_truncate)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_undo_tablespaces](innodb-parameters.html#sysvar_innodb_undo_tablespaces)
    | Yes | Yes | Yes |  | Global | Varies |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_undo_tablespaces](innodb-parameters.html#sysvar_innodb_undo_tablespaces)
    | 是 | 是 | 是 |  | 全局 | 不定 |'
- en: '| [Innodb_undo_tablespaces_active](server-status-variables.html#statvar_Innodb_undo_tablespaces_active)
    |  |  |  | Yes | Global | No |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_undo_tablespaces_active](server-status-variables.html#statvar_Innodb_undo_tablespaces_active)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_undo_tablespaces_explicit](server-status-variables.html#statvar_Innodb_undo_tablespaces_explicit)
    |  |  |  | Yes | Global | No |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_undo_tablespaces_explicit](server-status-variables.html#statvar_Innodb_undo_tablespaces_explicit)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_undo_tablespaces_implicit](server-status-variables.html#statvar_Innodb_undo_tablespaces_implicit)
    |  |  |  | Yes | Global | No |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_undo_tablespaces_implicit](server-status-variables.html#statvar_Innodb_undo_tablespaces_implicit)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [Innodb_undo_tablespaces_total](server-status-variables.html#statvar_Innodb_undo_tablespaces_total)
    |  |  |  | Yes | Global | No |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| [Innodb_undo_tablespaces_total](server-status-variables.html#statvar_Innodb_undo_tablespaces_total)
    |  |  |  | 是 | 全局 | 否 |'
- en: '| [innodb_use_fdatasync](innodb-parameters.html#sysvar_innodb_use_fdatasync)
    | Yes | Yes | Yes |  | Global | Yes |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_use_fdatasync](innodb-parameters.html#sysvar_innodb_use_fdatasync)
    | 是 | 是 | 是 |  | 全局 | 是 |'
- en: '| [innodb_use_native_aio](innodb-parameters.html#sysvar_innodb_use_native_aio)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_use_native_aio](innodb-parameters.html#sysvar_innodb_use_native_aio)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_validate_tablespace_paths](innodb-parameters.html#sysvar_innodb_validate_tablespace_paths)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_validate_tablespace_paths](innodb-parameters.html#sysvar_innodb_validate_tablespace_paths)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [innodb_version](innodb-parameters.html#sysvar_innodb_version) |  |  | Yes
    |  | Global | No |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_version](innodb-parameters.html#sysvar_innodb_version) |  |  | 是
    |  | 全局 | 否 |'
- en: '| [innodb_write_io_threads](innodb-parameters.html#sysvar_innodb_write_io_threads)
    | Yes | Yes | Yes |  | Global | No |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| [innodb_write_io_threads](innodb-parameters.html#sysvar_innodb_write_io_threads)
    | 是 | 是 | 是 |  | 全局 | 否 |'
- en: '| [unique_checks](server-system-variables.html#sysvar_unique_checks) |  |  |
    Yes |  | Both | Yes |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| [unique_checks](server-system-variables.html#sysvar_unique_checks) |  |  |
    是 |  | 两者 | 是 |'
- en: '| Name | Cmd-Line | Option File | System Var | Status Var | Var Scope | Dynamic
    |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 命令行 | 选项文件 | 系统变量 | 状态变量 | 变量范围 | 动态 |'
- en: InnoDB Command Options
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: InnoDB 命令选项
- en: '[`--innodb[=*`value`*]`](innodb-parameters.html#option_mysqld_innodb)'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--innodb[=*`value`*]`](innodb-parameters.html#option_mysqld_innodb)'
- en: '| Command-Line Format | `--innodb[=value]` |'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb[=value]` |'
- en: '| Deprecated | Yes |'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 是 |'
- en: '| Type | Enumeration |'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `ON` |'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: '| Valid Values | `OFF``ON``FORCE` |'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `OFF``ON``FORCE` |'
- en: Controls loading of the `InnoDB` storage engine, if the server was compiled
    with `InnoDB` support. This option has a tristate format, with possible values
    of `OFF`, `ON`, or `FORCE`. See [Section 7.6.1, “Installing and Uninstalling Plugins”](plugin-loading.html
    "7.6.1 Installing and Uninstalling Plugins").
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制 `InnoDB` 存储引擎的加载，如果服务器编译时支持 `InnoDB`。此选项具有三态格式，可能的值为 `OFF`、`ON` 或 `FORCE`。请参阅
    [第 7.6.1 节，“安装和卸载插件”](plugin-loading.html "7.6.1 Installing and Uninstalling Plugins")。
- en: To disable `InnoDB`, use [`--innodb=OFF`](innodb-parameters.html#option_mysqld_innodb)
    or [`--skip-innodb`](innodb-parameters.html#option_mysqld_innodb). In this case,
    because the default storage engine is [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine"), the server does not start unless you also use [`--default-storage-engine`](server-system-variables.html#sysvar_default_storage_engine)
    and [`--default-tmp-storage-engine`](server-system-variables.html#sysvar_default_tmp_storage_engine)
    to set the default to some other engine for both permanent and `TEMPORARY` tables.
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要禁用 `InnoDB`，请使用 [`--innodb=OFF`](innodb-parameters.html#option_mysqld_innodb)
    或 [`--skip-innodb`](innodb-parameters.html#option_mysqld_innodb)。在这种情况下，由于默认存储引擎是
    [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine")，除非还使用
    [`--default-storage-engine`](server-system-variables.html#sysvar_default_storage_engine)
    和 [`--default-tmp-storage-engine`](server-system-variables.html#sysvar_default_tmp_storage_engine)
    将默认值设置为其他引擎，否则服务器不会启动，用于永久表和 `TEMPORARY` 表。
- en: The `InnoDB` storage engine can no longer be disabled, and the [`--innodb=OFF`](innodb-parameters.html#option_mysqld_innodb)
    and [`--skip-innodb`](innodb-parameters.html#option_mysqld_innodb) options are
    deprecated and have no effect. Their use results in a warning. Expect these options
    to be removed in a future MySQL release.
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` 存储引擎不再可以被禁用，[`--innodb=OFF`](innodb-parameters.html#option_mysqld_innodb)
    和 [`--skip-innodb`](innodb-parameters.html#option_mysqld_innodb) 选项已被弃用且无效。使用它们会产生警告。预计这些选项将在未来的
    MySQL 版本中被移除。'
- en: '[`--innodb-status-file`](innodb-parameters.html#option_mysqld_innodb-status-file)'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--innodb-status-file`](innodb-parameters.html#option_mysqld_innodb-status-file)'
- en: '| Command-Line Format | `--innodb-status-file[={OFF&#124;ON}]` |'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-status-file[={OFF&#124;ON}]` |'
- en: '| Type | Boolean |'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `OFF` |'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: The `--innodb-status-file` startup option controls whether `InnoDB` creates
    a file named `innodb_status.*`pid`*` in the data directory and writes [`SHOW ENGINE
    INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE Statement") output to
    it every 15 seconds, approximately.
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`--innodb-status-file` 启动选项控制 `InnoDB` 是否在数据目录中创建一个名为 `innodb_status.*`pid`*`
    的文件，并每隔约 15 秒将 [`SHOW ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW
    ENGINE Statement") 输出到其中。'
- en: The `innodb_status.*`pid`*` file is not created by default. To create it, start
    [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") with the `--innodb-status-file`
    option. `InnoDB` removes the file when the server is shut down normally. If an
    abnormal shutdown occurs, the status file may have to be removed manually.
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下不会创建 `innodb_status.*`pid`*` 文件。要创建该文件，请使用 `--innodb-status-file` 选项启动
    [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")。`InnoDB` 在服务器正常关闭时会删除该文件。如果发生异常关闭，则可能需要手动删除状态文件。
- en: The `--innodb-status-file` option is intended for temporary use, as [`SHOW ENGINE
    INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE Statement") output generation
    can affect performance, and the `innodb_status.*`pid`*` file can become quite
    large over time.
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`--innodb-status-file`选项仅供临时使用，因为[`SHOW ENGINE INNODB STATUS`](show-engine.html
    "15.7.7.15 SHOW ENGINE语句")输出生成可能会影响性能，并且随着时间的推移，`innodb_status.*pid`*`文件可能会变得非常大。'
- en: For related information, see [Section 17.17.2, “Enabling InnoDB Monitors”](innodb-enabling-monitors.html
    "17.17.2 Enabling InnoDB Monitors").
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参见[第17.17.2节，“启用InnoDB监视器”](innodb-enabling-monitors.html "17.17.2 启用InnoDB监视器")。
- en: '[`--skip-innodb`](innodb-parameters.html#option_mysqld_innodb)'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--skip-innodb`](innodb-parameters.html#option_mysqld_innodb)'
- en: Disable the `InnoDB` storage engine. See the description of [`--innodb`](innodb-parameters.html#option_mysqld_innodb).
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 禁用`InnoDB`存储引擎。请参阅[`--innodb`](innodb-parameters.html#option_mysqld_innodb)的描述。
- en: InnoDB System Variables
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: InnoDB系统变量
- en: '[`daemon_memcached_enable_binlog`](innodb-parameters.html#sysvar_daemon_memcached_enable_binlog)'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`daemon_memcached_enable_binlog`](innodb-parameters.html#sysvar_daemon_memcached_enable_binlog)'
- en: '| Command-Line Format | `--daemon-memcached-enable-binlog[={OFF&#124;ON}]`
    |'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--daemon-memcached-enable-binlog[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[daemon_memcached_enable_binlog](innodb-parameters.html#sysvar_daemon_memcached_enable_binlog)`
    |'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[daemon_memcached_enable_binlog](innodb-parameters.html#sysvar_daemon_memcached_enable_binlog)`
    |'
- en: '| Scope | Global |'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enable this option on the source server to use the `InnoDB` **memcached** plugin
    (`daemon_memcached`) with the MySQL [binary log](glossary.html#glos_binary_log
    "binary log"). This option can only be set at server startup. You must also enable
    the MySQL binary log on the source server using the [`--log-bin`](replication-options-binary-log.html#sysvar_log_bin)
    option.
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在源服务器上启用此选项以使用MySQL的`InnoDB` **memcached**插件（`daemon_memcached`）与MySQL的[二进制日志](glossary.html#glos_binary_log
    "二进制日志")。此选项只能在服务器启动时设置。您还必须使用[`--log-bin`](replication-options-binary-log.html#sysvar_log_bin)选项在源服务器上启用MySQL二进制日志。
- en: For more information, see [Section 17.20.7, “The InnoDB memcached Plugin and
    Replication”](innodb-memcached-replication.html "17.20.7 The InnoDB memcached
    Plugin and Replication").
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.20.7节，“InnoDB memcached插件和复制”](innodb-memcached-replication.html
    "17.20.7 InnoDB memcached插件和复制")。
- en: '[`daemon_memcached_engine_lib_name`](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_name)'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`daemon_memcached_engine_lib_name`](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_name)'
- en: '| Command-Line Format | `--daemon-memcached-engine-lib-name=file_name` |'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--daemon-memcached-engine-lib-name=file_name` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[daemon_memcached_engine_lib_name](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_name)`
    |'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[daemon_memcached_engine_lib_name](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_name)`
    |'
- en: '| Scope | Global |'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "���量设置提示语法")提示适用
    | 否 |'
- en: '| Type | File name |'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: '| Default Value | `innodb_engine.so` |'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `innodb_engine.so` |'
- en: Specifies the shared library that implements the `InnoDB` **memcached** plugin.
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定实现`InnoDB` **memcached**插件的共享库。
- en: For more information, see [Section 17.20.3, “Setting Up the InnoDB memcached
    Plugin”](innodb-memcached-setup.html "17.20.3 Setting Up the InnoDB memcached
    Plugin").
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.20.3节，“设置InnoDB memcached插件”](innodb-memcached-setup.html "17.20.3 设置InnoDB
    memcached插件")。
- en: '[`daemon_memcached_engine_lib_path`](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_path)'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`daemon_memcached_engine_lib_path`](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_path)'
- en: '| Command-Line Format | `--daemon-memcached-engine-lib-path=dir_name` |'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--daemon-memcached-engine-lib-path=dir_name` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[daemon_memcached_engine_lib_path](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_path)`
    |'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[daemon_memcached_engine_lib_path](innodb-parameters.html#sysvar_daemon_memcached_engine_lib_path)`
    |'
- en: '| Scope | Global |'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Directory name |'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名 |'
- en: '| Default Value | `NULL` |'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NULL` |'
- en: The path of the directory containing the shared library that implements the
    `InnoDB` **memcached** plugin. The default value is NULL, representing the MySQL
    plugin directory. You should not need to modify this parameter unless specifying
    a `memcached` plugin for a different storage engine that is located outside of
    the MySQL plugin directory.
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含实现`InnoDB` **memcached**插件的共享库的目录路径。默认值为NULL，表示MySQL插件目录。除非指定位于MySQL插件目录之外的不同存储引擎的`memcached`插件，否则您不应该需要修改此参数。
- en: For more information, see [Section 17.20.3, “Setting Up the InnoDB memcached
    Plugin”](innodb-memcached-setup.html "17.20.3 Setting Up the InnoDB memcached
    Plugin").
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第17.20.3节，“设置InnoDB memcached插件”](innodb-memcached-setup.html "17.20.3 设置InnoDB
    memcached插件")。
- en: '[`daemon_memcached_option`](innodb-parameters.html#sysvar_daemon_memcached_option)'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`daemon_memcached_option`](innodb-parameters.html#sysvar_daemon_memcached_option)'
- en: '| Command-Line Format | `--daemon-memcached-option=options` |'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--daemon-memcached-option=options` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[daemon_memcached_option](innodb-parameters.html#sysvar_daemon_memcached_option)`
    |'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[daemon_memcached_option](innodb-parameters.html#sysvar_daemon_memcached_option)`
    |'
- en: '| Scope | Global |'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value |  |'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 |  |'
- en: Used to pass space-separated memcached options to the underlying **memcached**
    memory object caching daemon on startup. For example, you might change the port
    that **memcached** listens on, reduce the maximum number of simultaneous connections,
    change the maximum memory size for a key-value pair, or enable debugging messages
    for the error log.
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于在启动时将空格分隔的**memcached**选项传递给底层**memcached**内存对象缓存守护程序。例如，您可以更改**memcached**侦听的端口，减少最大同时连接数，更改键值对的最大内存大小，或者为错误日志启用调试消息。
- en: See [Section 17.20.3, “Setting Up the InnoDB memcached Plugin”](innodb-memcached-setup.html
    "17.20.3 Setting Up the InnoDB memcached Plugin") for usage details. For information
    about **memcached** options, refer to the **memcached** man page.
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关使用详细信息，请参阅[第17.20.3节，“设置InnoDB memcached插件”](innodb-memcached-setup.html "17.20.3 设置InnoDB
    memcached插件")。有关**memcached**选项的信息，请参考**memcached**手册页。
- en: '[`daemon_memcached_r_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`daemon_memcached_r_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)'
- en: '| Command-Line Format | `--daemon-memcached-r-batch-size=#` |'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--daemon-memcached-r-batch-size=#` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[daemon_memcached_r_batch_size](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)`
    |'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[daemon_memcached_r_batch_size](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1` |'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1` |'
- en: '| Minimum Value | `1` |'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `1073741824` |'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1073741824` |'
- en: Specifies how many **memcached** read operations (`get` operations) to perform
    before doing a [`COMMIT`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK
    Statements") to start a new transaction. Counterpart of [`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size).
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定在启动新事务之前执行多少个**memcached**读取操作（`get`操作）。与[`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)相对应。
- en: This value is set to 1 by default, so that any changes made to the table through
    SQL statements are immediately visible to **memcached** operations. You might
    increase it to reduce the overhead from frequent commits on a system where the
    underlying table is only being accessed through the **memcached** interface. If
    you set the value too large, the amount of undo or redo data could impose some
    storage overhead, as with any long-running transaction.
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为1，因此通过SQL语句对表进行的任何更改都会立即对**memcached**操作可见。您可以增加它以减少在仅通过**memcached**接口访问底层表的系统上频繁提交的开销。如果将值设置得太大，则撤消或重做数据量可能会对存储造成一些开销，就像任何长时间运行的事务一样。
- en: For more information, see [Section 17.20.3, “Setting Up the InnoDB memcached
    Plugin”](innodb-memcached-setup.html "17.20.3 Setting Up the InnoDB memcached
    Plugin").
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅 [第17.20.3节，“设置InnoDB memcached插件”](innodb-memcached-setup.html "17.20.3 设置InnoDB
    memcached插件")。
- en: '[`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)'
- en: '| Command-Line Format | `--daemon-memcached-w-batch-size=#` |'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--daemon-memcached-w-batch-size=#` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[daemon_memcached_w_batch_size](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)`
    |'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[daemon_memcached_w_batch_size](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1` |'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1` |'
- en: '| Minimum Value | `1` |'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `1048576` |'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1048576` |'
- en: Specifies how many **memcached** write operations, such as `add`, `set`, and
    `incr`, to perform before doing a [`COMMIT`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements") to start a new transaction. Counterpart of [`daemon_memcached_r_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size).
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定在启动新事务之前执行多少个**memcached**写操作，例如`add`、`set`和`incr`。与[`daemon_memcached_r_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)相对应。
- en: This value is set to 1 by default, on the assumption that data being stored
    is important to preserve in case of an outage and should immediately be committed.
    When storing non-critical data, you might increase this value to reduce the overhead
    from frequent commits; but then the last *`N`*-1 uncommitted write operations
    could be lost if an unexpected exit occurs.
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，此值设置为1，假设存储的数据在发生故障时很重要并且应立即提交。当存储非关键数据时，您可以增加此值以减少频繁提交的开销；但是如果发生意外退出，则最后*`N`*-1个未提交的写操作可能会丢失。
- en: For more information, see [Section 17.20.3, “Setting Up the InnoDB memcached
    Plugin”](innodb-memcached-setup.html "17.20.3 Setting Up the InnoDB memcached
    Plugin").
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅 [第17.20.3节，“设置InnoDB memcached插件”](innodb-memcached-setup.html "17.20.3 设置InnoDB
    memcached插件")。
- en: '[`innodb_adaptive_flushing`](innodb-parameters.html#sysvar_innodb_adaptive_flushing)'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_adaptive_flushing`](innodb-parameters.html#sysvar_innodb_adaptive_flushing)'
- en: '| Command-Line Format | `--innodb-adaptive-flushing[={OFF&#124;ON}]` |'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-adaptive-flushing[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_adaptive_flushing](innodb-parameters.html#sysvar_innodb_adaptive_flushing)`
    |'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_adaptive_flushing](innodb-parameters.html#sysvar_innodb_adaptive_flushing)`
    |'
- en: '| Scope | Global |'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Specifies whether to dynamically adjust the rate of flushing [dirty pages](glossary.html#glos_dirty_page
    "dirty page") in the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool "buffer
    pool") based on the workload. Adjusting the flush rate dynamically is intended
    to avoid bursts of I/O activity. This setting is enabled by default. See [Section 17.8.3.5,
    “Configuring Buffer Pool Flushing”](innodb-buffer-pool-flushing.html "17.8.3.5 Configuring
    Buffer Pool Flushing") for more information. For general I/O tuning advice, see
    [Section 10.5.8, “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing
    InnoDB Disk I/O").
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定是否根据工作负载动态调整`InnoDB`[缓冲池](glossary.html#glos_buffer_pool "缓冲池")中[脏页](glossary.html#glos_dirty_page
    "脏页")的刷新速率。动态调整刷新速率旨在避免I/O活动的突发发生。此设置默认启用。有关更多信息，请参阅 [第17.8.3.5节，“配置缓冲池刷新”](innodb-buffer-pool-flushing.html
    "17.8.3.5 配置缓冲池刷新")。有关一般I/O调优建议，请参阅 [第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。
- en: '[`innodb_adaptive_flushing_lwm`](innodb-parameters.html#sysvar_innodb_adaptive_flushing_lwm)'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_adaptive_flushing_lwm`](innodb-parameters.html#sysvar_innodb_adaptive_flushing_lwm)'
- en: '| Command-Line Format | `--innodb-adaptive-flushing-lwm=#` |'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-adaptive-flushing-lwm=#` |'
- en: '| System Variable | `[innodb_adaptive_flushing_lwm](innodb-parameters.html#sysvar_innodb_adaptive_flushing_lwm)`
    |'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_adaptive_flushing_lwm](innodb-parameters.html#sysvar_innodb_adaptive_flushing_lwm)`
    |'
- en: '| Scope | Global |'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `10` |'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10` |'
- en: '| Minimum Value | `0` |'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `70` |'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `70` |'
- en: Defines the low water mark representing percentage of [redo log](glossary.html#glos_redo_log
    "redo log") capacity at which [adaptive flushing](glossary.html#glos_adaptive_flushing
    "adaptive flushing") is enabled. For more information, see [Section 17.8.3.5,
    “Configuring Buffer Pool Flushing”](innodb-buffer-pool-flushing.html "17.8.3.5 Configuring
    Buffer Pool Flushing").
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义表示[重做日志](glossary.html#glos_redo_log "重做日志")容量百分比的低水位标记，在此百分比下启用[自适应刷新](glossary.html#glos_adaptive_flushing
    "自适应刷新")。有关更多信息，请参阅[第17.8.3.5节，“配置缓冲池刷新”](innodb-buffer-pool-flushing.html "17.8.3.5 配置缓冲池刷新")。
- en: '[`innodb_adaptive_hash_index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_adaptive_hash_index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)'
- en: '| Command-Line Format | `--innodb-adaptive-hash-index[={OFF&#124;ON}]` |'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-adaptive-hash-index[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_adaptive_hash_index](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)`
    |'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_adaptive_hash_index](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)`
    |'
- en: '| Scope | Global |'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Whether the `InnoDB` [adaptive hash index](glossary.html#glos_adaptive_hash_index
    "adaptive hash index") is enabled or disabled. It may be desirable, depending
    on your workload, to dynamically enable or disable [adaptive hash indexing](glossary.html#glos_adaptive_hash_index
    "adaptive hash index") to improve query performance. Because the adaptive hash
    index may not be useful for all workloads, conduct benchmarks with it both enabled
    and disabled, using realistic workloads. See [Section 17.5.3, “Adaptive Hash Index”](innodb-adaptive-hash.html
    "17.5.3 Adaptive Hash Index") for details.
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [自适应哈希索引](glossary.html#glos_adaptive_hash_index "自适应哈希索引")是否启用或禁用。根据您的工作负载，动态启用或禁用[自适应哈希索引](glossary.html#glos_adaptive_hash_index
    "自适应哈希索引")可能是有益的，以提高查询性能。由于自适应哈希索引可能并非适用于所有工作负载，因此请使用真实工作负载分别启用和禁用它进行基准测试。有关详细信息，请参阅[第17.5.3节，“自适应哈希索引”](innodb-adaptive-hash.html
    "17.5.3 自适应哈希索引")。'
- en: This variable is enabled by default. You can modify this parameter using the
    `SET GLOBAL` statement, without restarting the server. Changing the setting at
    runtime requires privileges sufficient to set global system variables. See [Section 7.1.9.1,
    “System Variable Privileges”](system-variable-privileges.html "7.1.9.1 System
    Variable Privileges"). You can also use `--skip-innodb-adaptive-hash-index` at
    server startup to disable it.
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量默认启用。您可以使用`SET GLOBAL`语句修改此参数，无需重新启动服务器。在运行时更改设置需要具有足够权限设置全局系统变量。请参阅[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。您也可以在服务器启动时使用`--skip-innodb-adaptive-hash-index`来禁用它。
- en: Disabling the adaptive hash index empties the hash table immediately. Normal
    operations can continue while the hash table is emptied, and executing queries
    that were using the hash table access the index B-trees directly instead. When
    the adaptive hash index is re-enabled, the hash table is populated again during
    normal operation.
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 禁用自适应哈希索引会立即清空哈希表。在清空哈希表的同时，正常操作可以继续进行，并且执行使用哈希表的查询将直接访问索引B树。重新启用自适应哈希索引时，在正常操作期间哈希表将再次填充。
- en: '[`innodb_adaptive_hash_index_parts`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_adaptive_hash_index_parts`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)'
- en: '| Command-Line Format | `--innodb-adaptive-hash-index-parts=#` |'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-adaptive-hash-index-parts=#` |'
- en: '| System Variable | `[innodb_adaptive_hash_index_parts](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)`
    |'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_adaptive_hash_index_parts](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)`
    |'
- en: '| Scope | Global |'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Numeric |'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 数值 |'
- en: '| Default Value | `8` |'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `8` |'
- en: '| Minimum Value | `1` |'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `512` |'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `512` |'
- en: Partitions the adaptive hash index search system. Each index is bound to a specific
    partition, with each partition protected by a separate latch.
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对自适应哈希索引搜索系统进行分区。每个索引绑定到特定分区，每个分区由单独的闩保护。
- en: The adaptive hash index search system is partitioned into 8 parts by default.
    The maximum setting is 512.
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自适应哈希索引搜索系统默认分为8部分。最大设置为512。
- en: For related information, see [Section 17.5.3, “Adaptive Hash Index”](innodb-adaptive-hash.html
    "17.5.3 Adaptive Hash Index").
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参见[第17.5.3节，“自适应哈希索引”](innodb-adaptive-hash.html "17.5.3 自适应哈希索引")。
- en: '[`innodb_adaptive_max_sleep_delay`](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_adaptive_max_sleep_delay`](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)'
- en: '| Command-Line Format | `--innodb-adaptive-max-sleep-delay=#` |'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-adaptive-max-sleep-delay=#` |'
- en: '| System Variable | `[innodb_adaptive_max_sleep_delay](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)`
    |'
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_adaptive_max_sleep_delay](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)`
    |'
- en: '| Scope | Global |'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `150000` |'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `150000` |'
- en: '| Minimum Value | `0` |'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1000000` |'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1000000` |'
- en: '| Unit | microseconds |'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 微秒 |'
- en: Permits `InnoDB` to automatically adjust the value of [`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)
    up or down according to the current workload. Any nonzero value enables automated,
    dynamic adjustment of the [`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)
    value, up to the maximum value specified in the [`innodb_adaptive_max_sleep_delay`](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)
    option. The value represents the number of microseconds. This option can be useful
    in busy systems, with greater than 16 `InnoDB` threads. (In practice, it is most
    valuable for MySQL systems with hundreds or thousands of simultaneous connections.)
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 允许`InnoDB`根据当前工作负载自动调整[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)的值。任何非零值都会启用[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)值的自动动态调整，最高值不超过[`innodb_adaptive_max_sleep_delay`](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)选项中指定的最大值。该值表示微秒数。此选项在繁忙系统中非常有用，具有超过16个`InnoDB`线程。（实际上，对于具有数百或数千个同时连接的MySQL系统来说，这是最有价值的。）
- en: For more information, see [Section 17.8.4, “Configuring Thread Concurrency for
    InnoDB”](innodb-performance-thread_concurrency.html "17.8.4 Configuring Thread
    Concurrency for InnoDB").
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.8.4节，“配置InnoDB的线程并发性”](innodb-performance-thread_concurrency.html
    "17.8.4 配置InnoDB的线程并发性")。
- en: '[`innodb_api_bk_commit_interval`](innodb-parameters.html#sysvar_innodb_api_bk_commit_interval)'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_api_bk_commit_interval`](innodb-parameters.html#sysvar_innodb_api_bk_commit_interval)'
- en: '| Command-Line Format | `--innodb-api-bk-commit-interval=#` |'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-api-bk-commit-interval=#` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[innodb_api_bk_commit_interval](innodb-parameters.html#sysvar_innodb_api_bk_commit_interval)`
    |'
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_api_bk_commit_interval](innodb-parameters.html#sysvar_innodb_api_bk_commit_interval)`
    |'
- en: '| Scope | Global |'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `5` |'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `5` |'
- en: '| Minimum Value | `1` |'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `1073741824` |'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1073741824` |'
- en: '| Unit | seconds |'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 秒 |'
- en: How often to auto-commit idle connections that use the `InnoDB` **memcached**
    interface, in seconds. For more information, see [Section 17.20.6.4, “Controlling
    Transactional Behavior of the InnoDB memcached Plugin”](innodb-memcached-txn.html
    "17.20.6.4 Controlling Transactional Behavior of the InnoDB memcached Plugin").
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自动提交使用`InnoDB` **memcached**接口的空闲连接的频率，单位为秒。更多信息，请参见[第17.20.6.4节，“控制InnoDB memcached插件的事务行为”](innodb-memcached-txn.html
    "17.20.6.4 控制InnoDB memcached插件的事务行为")。
- en: '[`innodb_api_disable_rowlock`](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_api_disable_rowlock`](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)'
- en: '| Command-Line Format | `--innodb-api-disable-rowlock[={OFF&#124;ON}]` |'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-api-disable-rowlock[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[innodb_api_disable_rowlock](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)`
    |'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_api_disable_rowlock](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)`
    |'
- en: '| Scope | Global |'
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Use this option to disable row locks when `InnoDB` **memcached** performs DML
    operations. By default, [`innodb_api_disable_rowlock`](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)
    is disabled, which means that **memcached** requests row locks for `get` and `set`
    operations. When [`innodb_api_disable_rowlock`](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)
    is enabled, **memcached** requests a table lock instead of row locks.
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用此选项禁用 `InnoDB` **memcached** 执行 DML 操作时的行锁。默认情况下，[`innodb_api_disable_rowlock`](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)
    处于禁用状态，这意味着 **memcached** 请求行锁用于 `get` 和 `set` 操作。当启用 [`innodb_api_disable_rowlock`](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)
    时，**memcached** 请求表锁而不是行锁。
- en: '[`innodb_api_disable_rowlock`](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)
    is not dynamic. It must be specified on the [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") command line or entered in the MySQL configuration file.
    Configuration takes effect when the plugin is installed, which occurs when the
    MySQL server is started.'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_api_disable_rowlock`](innodb-parameters.html#sysvar_innodb_api_disable_rowlock)
    不是动态的。必须在[**mysqld**](mysqld.html "6.3.1 mysqld — MySQL 服务器")命令行上指定，或者输入到 MySQL
    配置文件中。配置在插件安装时生效，插件安装发生在 MySQL 服务器启动时。'
- en: For more information, see [Section 17.20.6.4, “Controlling Transactional Behavior
    of the InnoDB memcached Plugin”](innodb-memcached-txn.html "17.20.6.4 Controlling
    Transactional Behavior of the InnoDB memcached Plugin").
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见 [Section 17.20.6.4, “控制 InnoDB memcached 插件的事务行为”](innodb-memcached-txn.html
    "17.20.6.4 控制 InnoDB memcached 插件的事务行为")。
- en: '[`innodb_api_enable_binlog`](innodb-parameters.html#sysvar_innodb_api_enable_binlog)'
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_api_enable_binlog`](innodb-parameters.html#sysvar_innodb_api_enable_binlog)'
- en: '| Command-Line Format | `--innodb-api-enable-binlog[={OFF&#124;ON}]` |'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-api-enable-binlog[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[innodb_api_enable_binlog](innodb-parameters.html#sysvar_innodb_api_enable_binlog)`
    |'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_api_enable_binlog](innodb-parameters.html#sysvar_innodb_api_enable_binlog)`
    |'
- en: '| Scope | Global |'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Lets you use the `InnoDB` **memcached** plugin with the MySQL [binary log](glossary.html#glos_binary_log
    "binary log"). For more information, see [Enabling the InnoDB memcached Binary
    Log](innodb-memcached-replication.html#innodb-memcached-replication-enable-binlog
    "Enabling the InnoDB memcached Binary Log").
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 允许您使用 MySQL [二进制日志](glossary.html#glos_binary_log "二进制日志") 的 `InnoDB` **memcached**
    插件。更多信息，请参见 [启用 InnoDB memcached 二进制日志](innodb-memcached-replication.html#innodb-memcached-replication-enable-binlog
    "启用 InnoDB memcached 二进制日志")。
- en: '[`innodb_api_enable_mdl`](innodb-parameters.html#sysvar_innodb_api_enable_mdl)'
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_api_enable_mdl`](innodb-parameters.html#sysvar_innodb_api_enable_mdl)'
- en: '| Command-Line Format | `--innodb-api-enable-mdl[={OFF&#124;ON}]` |'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-api-enable-mdl[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ���弃用 | 8.0.22 |'
- en: '| System Variable | `[innodb_api_enable_mdl](innodb-parameters.html#sysvar_innodb_api_enable_mdl)`
    |'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_api_enable_mdl](innodb-parameters.html#sysvar_innodb_api_enable_mdl)`
    |'
- en: '| Scope | Global |'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Locks the table used by the `InnoDB` **memcached** plugin, so that it cannot
    be dropped or altered by [DDL](glossary.html#glos_ddl "DDL") through the SQL interface.
    For more information, see [Section 17.20.6.4, “Controlling Transactional Behavior
    of the InnoDB memcached Plugin”](innodb-memcached-txn.html "17.20.6.4 Controlling
    Transactional Behavior of the InnoDB memcached Plugin").
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 锁定`InnoDB` **memcached** 插件使用的表，以防止通过 SQL 接口的 [DDL](glossary.html#glos_ddl "DDL")
    删除或更改。更多信息，请参见 [Section 17.20.6.4, “控制 InnoDB memcached 插件的事务行为”](innodb-memcached-txn.html
    "17.20.6.4 控制 InnoDB memcached 插件的事务行为")。
- en: '[`innodb_api_trx_level`](innodb-parameters.html#sysvar_innodb_api_trx_level)'
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_api_trx_level`](innodb-parameters.html#sysvar_innodb_api_trx_level)'
- en: '| Command-Line Format | `--innodb-api-trx-level=#` |'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-api-trx-level=#` |'
- en: '| Deprecated | 8.0.22 |'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.22 |'
- en: '| System Variable | `[innodb_api_trx_level](innodb-parameters.html#sysvar_innodb_api_trx_level)`
    |'
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_api_trx_level](innodb-parameters.html#sysvar_innodb_api_trx_level)`
    |'
- en: '| Scope | Global |'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `3` |'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `3` |'
- en: 'Controls the transaction [isolation level](glossary.html#glos_isolation_level
    "isolation level") on queries processed by the **memcached** interface. The constants
    corresponding to the familiar names are:'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制由**memcached**接口处理的查询的事务[隔离级别](glossary.html#glos_isolation_level "隔离级别")。对应于熟悉名称的常量为：
- en: 0 = [`READ UNCOMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-uncommitted)
  id: totrans-464
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0 = [`READ UNCOMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-uncommitted)
- en: 1 = [`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)
  id: totrans-465
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 = [`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)
- en: 2 = [`REPEATABLE READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read)
  id: totrans-466
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2 = [`REPEATABLE READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read)
- en: 3 = [`SERIALIZABLE`](innodb-transaction-isolation-levels.html#isolevel_serializable)
  id: totrans-467
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3 = [`SERIALIZABLE`](innodb-transaction-isolation-levels.html#isolevel_serializable)
- en: For more information, see [Section 17.20.6.4, “Controlling Transactional Behavior
    of the InnoDB memcached Plugin”](innodb-memcached-txn.html "17.20.6.4 Controlling
    Transactional Behavior of the InnoDB memcached Plugin").
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第17.20.6.4节，“控制InnoDB memcached插件的事务行为”](innodb-memcached-txn.html
    "17.20.6.4 控制InnoDB memcached插件的事务行为")。
- en: '[`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)'
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)'
- en: '| Command-Line Format | `--innodb-autoextend-increment=#` |'
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-autoextend-increment=#` |'
- en: '| System Variable | `[innodb_autoextend_increment](innodb-parameters.html#sysvar_innodb_autoextend_increment)`
    |'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_autoextend_increment](innodb-parameters.html#sysvar_innodb_autoextend_increment)`
    |'
- en: '| Scope | Global |'
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-474
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `64` |'
  id: totrans-476
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `64` |'
- en: '| Minimum Value | `1` |'
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `1000` |'
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1000` |'
- en: '| Unit | megabytes |'
  id: totrans-479
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 兆字节 |'
- en: The increment size (in megabytes) for extending the size of an auto-extending
    `InnoDB` [system tablespace](glossary.html#glos_system_tablespace "system tablespace")
    file when it becomes full. The default value is 64\. For related information,
    see [System Tablespace Data File Configuration](innodb-init-startup-configuration.html#innodb-startup-data-file-configuration
    "System Tablespace Data File Configuration"), and [Resizing the System Tablespace](innodb-system-tablespace.html#innodb-resize-system-tablespace
    "Resizing the System Tablespace").
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当`InnoDB` [系统表空间](glossary.html#glos_system_tablespace "系统表空间")文件满时，自动扩展大小的增量大小（以兆字节为单位）。默认值为64。有关相关信息，请参阅[系统表空间数据文件配置](innodb-init-startup-configuration.html#innodb-startup-data-file-configuration
    "系统表空间数据文件配置")和[调整系统表空间大小](innodb-system-tablespace.html#innodb-resize-system-tablespace
    "调整系统表空间大小")。
- en: The [`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    setting does not affect [file-per-table](glossary.html#glos_file_per_table "file-per-table")
    tablespace files or [general tablespace](glossary.html#glos_general_tablespace
    "general tablespace") files. These files are auto-extending regardless of the
    [`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    setting. The initial extensions are by small amounts, after which extensions occur
    in increments of 4MB.
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    设置不影响[file-per-table](glossary.html#glos_file_per_table "file-per-table")表空间文件或[general
    tablespace](glossary.html#glos_general_tablespace "general tablespace")文件。这些文件会自动扩展，不受[`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)设置的影响。初始扩展量较小，之后每次扩展增加4MB。'
- en: '[`innodb_autoinc_lock_mode`](innodb-parameters.html#sysvar_innodb_autoinc_lock_mode)'
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_autoinc_lock_mode`](innodb-parameters.html#sysvar_innodb_autoinc_lock_mode)'
- en: '| Command-Line Format | `--innodb-autoinc-lock-mode=#` |'
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-autoinc-lock-mode=#` |'
- en: '| System Variable | `[innodb_autoinc_lock_mode](innodb-parameters.html#sysvar_innodb_autoinc_lock_mode)`
    |'
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_autoinc_lock_mode](innodb-parameters.html#sysvar_innodb_autoinc_lock_mode)`
    |'
- en: '| Scope | Global |'
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `2` |'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `2` |'
- en: '| Valid Values | `0``1``2` |'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `0``1``2` |'
- en: The [lock mode](glossary.html#glos_lock_mode "lock mode") to use for generating
    [auto-increment](glossary.html#glos_auto_increment "auto-increment") values. Permissible
    values are 0, 1, or 2, for traditional, consecutive, or interleaved, respectively.
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于生成[自增](glossary.html#glos_auto_increment "自增")值的[锁定模式](glossary.html#glos_lock_mode
    "锁定模式")。允许的值为0、1或2，分别表示传统、连续或交错。
- en: The default setting is 2 (interleaved) as of MySQL 8.0, and 1 (consecutive)
    before that. The change to interleaved lock mode as the default setting reflects
    the change from statement-based to row-based replication as the default replication
    type, which occurred in MySQL 5.7. Statement-based replication requires the consecutive
    auto-increment lock mode to ensure that auto-increment values are assigned in
    a predictable and repeatable order for a given sequence of SQL statements, whereas
    row-based replication is not sensitive to the execution order of SQL statements.
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0，默认设置为2（交错），之前为1（连续）。从语句为基础的复制变为行为基础的复制作为默认复制类型的变化反映在默认设置为交错锁定模式上，这发生在MySQL
    5.7中。语句为基础的复制需要连续的自增锁定模式，以确保自增值按照给定SQL语句序列的可预测和可重复的顺序分配，而行为基础的复制不受SQL语句执行顺序的影响。
- en: For the characteristics of each lock mode, see [InnoDB AUTO_INCREMENT Lock Modes](innodb-auto-increment-handling.html#innodb-auto-increment-lock-modes
    "InnoDB AUTO_INCREMENT Lock Modes").
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '有关每种锁定模式的特性，请参阅[InnoDB AUTO_INCREMENT Lock Modes](innodb-auto-increment-handling.html#innodb-auto-increment-lock-modes
    "InnoDB AUTO_INCREMENT Lock Modes")。 '
- en: '[`innodb_background_drop_list_empty`](innodb-parameters.html#sysvar_innodb_background_drop_list_empty)'
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_background_drop_list_empty`](innodb-parameters.html#sysvar_innodb_background_drop_list_empty)'
- en: '| Command-Line Format | `--innodb-background-drop-list-empty[={OFF&#124;ON}]`
    |'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-background-drop-list-empty[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_background_drop_list_empty](innodb-parameters.html#sysvar_innodb_background_drop_list_empty)`
    |'
  id: totrans-496
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_background_drop_list_empty](innodb-parameters.html#sysvar_innodb_background_drop_list_empty)`
    |'
- en: '| Scope | Global |'
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-501
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enabling the [`innodb_background_drop_list_empty`](innodb-parameters.html#sysvar_innodb_background_drop_list_empty)
    debug option helps avoid test case failures by delaying table creation until the
    background drop list is empty. For example, if test case A places table `t1` on
    the background drop list, test case B waits until the background drop list is
    empty before creating table `t1`.
  id: totrans-502
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用[`innodb_background_drop_list_empty`](innodb-parameters.html#sysvar_innodb_background_drop_list_empty)调试选项有助于避免测试用例失败，延迟表的创建直到后台删除列表为空。例如，如果测试用例A将表`t1`放在后台删除列表中，测试用例B将等待直到后台删除列表为空才创建表`t1`。
- en: '[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)'
- en: '| Command-Line Format | `--innodb-buffer-pool-chunk-size=#` |'
  id: totrans-504
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-chunk-size=#` |'
- en: '| System Variable | `[innodb_buffer_pool_chunk_size](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)`
    |'
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_chunk_size](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-506
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-508
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `134217728` |'
  id: totrans-510
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `134217728` |'
- en: '| Minimum Value | `1048576` |'
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1048576` |'
- en: '| Maximum Value | `innodb_buffer_pool_size / innodb_buffer_pool_instances`
    |'
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `innodb_buffer_pool_size / innodb_buffer_pool_instances` |'
- en: '| Unit | bytes |'
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    defines the chunk size for `InnoDB` buffer pool resizing operations.'
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)定义了`InnoDB`缓冲池调整大小操作的块大小。'
- en: To avoid copying all buffer pool pages during resizing operations, the operation
    is performed in “chunks”. By default, [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    is 128MB (134217728 bytes). The number of pages contained in a chunk depends on
    the value of [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size).
    [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    can be increased or decreased in units of 1MB (1048576 bytes).
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为避免在调整大小操作期间复制所有缓冲池页面，操作是以“块”进行的。默认情况下，[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)为128MB（134217728字节）。块中包含的页面数量取决于[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)的值。[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)可以以1MB（1048576字节）的单位增加或减少。
- en: 'The following conditions apply when altering the [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    value:'
  id: totrans-516
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)值时应满足以下条件：
- en: If [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    is larger than the current buffer pool size when the buffer pool is initialized,
    [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    is truncated to [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    / [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances).
  id: totrans-517
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在初始化缓冲池时，[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)大于当前缓冲池大小，则[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)会被截断为[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    / [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)。
- en: Buffer pool size must always be equal to or a multiple of [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances).
    If you alter [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size),
    [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    is automatically rounded to a value that is equal to or a multiple of [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances).
    The adjustment occurs when the buffer pool is initialized.
  id: totrans-518
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓冲池大小必须始终等于或是[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)的倍数。如果更改[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)，[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)会自动舍入为等于或是[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)的值。此调整发生在初始化缓冲池时。
- en: Important
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: Care should be taken when changing [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size),
    as changing this value can automatically increase the size of the buffer pool.
    Before changing [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size),
    calculate its effect on [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    to ensure that the resulting buffer pool size is acceptable.
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)时需谨慎，因为更改此值可能会自动增加缓冲池的大小。在更改[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)之前，计算其对[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)的影响，以确保生成的缓冲池大小是可接受的。
- en: To avoid potential performance issues, the number of chunks ([`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    / [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size))
    should not exceed 1000.
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为避免潜在的性能问题，块的数量([`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    / [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size))不应超过1000。
- en: The [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    variable is dynamic, which permits resizing the buffer pool while the server is
    online. However, the buffer pool size must be equal to or a multiple of [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances),
    and changing either of those variable settings requires restarting the server.
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    变量是动态的，允许在服务器在线时调整缓冲池的大小。然而，缓冲池的大小必须等于或是 [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    的倍数，改变这两个变量设置中的任何一个都需要重新启动服务器。'
- en: See [Section 17.8.3.1, “Configuring InnoDB Buffer Pool Size”](innodb-buffer-pool-resize.html
    "17.8.3.1 Configuring InnoDB Buffer Pool Size") for more information.
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息请参见 [第17.8.3.1节，“配置InnoDB缓冲池大小”](innodb-buffer-pool-resize.html "17.8.3.1 配置InnoDB缓冲池大小")。
- en: '[`innodb_buffer_pool_debug`](innodb-parameters.html#sysvar_innodb_buffer_pool_debug)'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_debug`](innodb-parameters.html#sysvar_innodb_buffer_pool_debug)'
- en: '| Command-Line Format | `--innodb-buffer-pool-debug[={OFF&#124;ON}]` |'
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-debug[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_buffer_pool_debug](innodb-parameters.html#sysvar_innodb_buffer_pool_debug)`
    |'
  id: totrans-526
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_debug](innodb-parameters.html#sysvar_innodb_buffer_pool_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-528
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-530
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enabling this option permits multiple buffer pool instances when the buffer
    pool is less than 1GB in size, ignoring the 1GB minimum buffer pool size constraint
    imposed on [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances).
    The [`innodb_buffer_pool_debug`](innodb-parameters.html#sysvar_innodb_buffer_pool_debug)
    option is only available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-532
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此选项允许在缓冲池小于1GB时存在多个缓冲池实例，忽略对 [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    强加的1GB最小缓冲池大小约束。只有在使用 [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译时才可用 [`innodb_buffer_pool_debug`](innodb-parameters.html#sysvar_innodb_buffer_pool_debug)
    选项。
- en: '[`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)'
  id: totrans-533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)'
- en: '| Command-Line Format | `--innodb-buffer-pool-dump-at-shutdown[={OFF&#124;ON}]`
    |'
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-dump-at-shutdown[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_buffer_pool_dump_at_shutdown](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)`
    |'
  id: totrans-535
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_dump_at_shutdown](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)`
    |'
- en: '| Scope | Global |'
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-538
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-540
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Specifies whether to record the pages cached in the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") when the MySQL server is shut down, to shorten the [warmup](glossary.html#glos_warm_up
    "warm up") process at the next restart. Typically used in combination with [`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup).
    The [`innodb_buffer_pool_dump_pct`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)
    option defines the percentage of most recently used buffer pool pages to dump.
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定在 MySQL 服务器关闭时记录缓存在 `InnoDB` [缓冲池](glossary.html#glos_buffer_pool "缓冲池") 中的页面，以缩短下次重启时的
    [预热](glossary.html#glos_warm_up "预热") 过程。通常与 [`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)
    结合使用。[`innodb_buffer_pool_dump_pct`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)
    选项定义要转储的最近使用的缓冲池页面的百分比。
- en: Both [`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)
    and [`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)
    are enabled by default.
  id: totrans-542
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)
    和 [`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)
    默认启用。'
- en: For more information, see [Section 17.8.3.6, “Saving and Restoring the Buffer
    Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving and Restoring the
    Buffer Pool State").
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[Section 17.8.3.6，“保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html "17.8.3.6 保存和恢复缓冲池状态")。
- en: '[`innodb_buffer_pool_dump_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)'
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_dump_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)'
- en: '| Command-Line Format | `--innodb-buffer-pool-dump-now[={OFF&#124;ON}]` |'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-dump-now[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_buffer_pool_dump_now](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)`
    |'
  id: totrans-546
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_dump_now](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)`
    |'
- en: '| Scope | Global |'
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-548
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Immediately makes a record of pages cached in the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool"). Typically used in combination with [`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now).
  id: totrans-552
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 立即记录在`InnoDB`[缓冲池](glossary.html#glos_buffer_pool "缓冲池")中缓存的页面。通常与[`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)结合使用。
- en: Enabling [`innodb_buffer_pool_dump_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)
    triggers the recording action but does not alter the variable setting, which always
    remains `OFF` or `0`. To view buffer pool dump status after triggering a dump,
    query the [`Innodb_buffer_pool_dump_status`](server-status-variables.html#statvar_Innodb_buffer_pool_dump_status)
    variable.
  id: totrans-553
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用[`innodb_buffer_pool_dump_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)会触发记录操作，但不会改变变量设置，该设置始终保持`OFF`或`0`。要在触发转储后查看缓冲池转储状态，请查询[`Innodb_buffer_pool_dump_status`](server-status-variables.html#statvar_Innodb_buffer_pool_dump_status)变量。
- en: Enabling [`innodb_buffer_pool_dump_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)
    triggers the dump action but does not alter the variable setting, which always
    remains `OFF` or `0`. To view buffer pool dump status after triggering a dump,
    query the [`Innodb_buffer_pool_dump_status`](server-status-variables.html#statvar_Innodb_buffer_pool_dump_status)
    variable.
  id: totrans-554
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用[`innodb_buffer_pool_dump_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)会触发转储操作，但不会改变变量设置，该设置始终保持`OFF`或`0`。要在触发转储后查看缓冲池转储状态，请查询[`Innodb_buffer_pool_dump_status`](server-status-variables.html#statvar_Innodb_buffer_pool_dump_status)变量。
- en: For more information, see [Section 17.8.3.6, “Saving and Restoring the Buffer
    Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving and Restoring the
    Buffer Pool State").
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[Section 17.8.3.6，“保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html "17.8.3.6 保存和恢复缓冲池状态")。
- en: '[`innodb_buffer_pool_dump_pct`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)'
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_dump_pct`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)'
- en: '| Command-Line Format | `--innodb-buffer-pool-dump-pct=#` |'
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-dump-pct=#` |'
- en: '| System Variable | `[innodb_buffer_pool_dump_pct](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)`
    |'
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_dump_pct](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)`
    |'
- en: '| Scope | Global |'
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-560
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-561
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-562
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `25` |'
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `25` |'
- en: '| Minimum Value | `1` |'
  id: totrans-564
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `100` |'
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ��大值 | `100` |'
- en: Specifies the percentage of the most recently used pages for each buffer pool
    to read out and dump. The range is 1 to 100. The default value is 25\. For example,
    if there are 4 buffer pools with 100 pages each, and [`innodb_buffer_pool_dump_pct`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)
    is set to 25, the 25 most recently used pages from each buffer pool are dumped.
  id: totrans-566
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定每个缓冲池中最近使用的页面的百分比以读取并转储。范围为1到100。默认值为25。例如，如果有4个每个有100页的缓冲池，并且[`innodb_buffer_pool_dump_pct`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_pct)设置为25，则从每个缓冲池中转储最近使用的25页。
- en: '[`innodb_buffer_pool_filename`](innodb-parameters.html#sysvar_innodb_buffer_pool_filename)'
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_filename`](innodb-parameters.html#sysvar_innodb_buffer_pool_filename)'
- en: '| Command-Line Format | `--innodb-buffer-pool-filename=file_name` |'
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-filename=file_name` |'
- en: '| System Variable | `[innodb_buffer_pool_filename](innodb-parameters.html#sysvar_innodb_buffer_pool_filename)`
    |'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_filename](innodb-parameters.html#sysvar_innodb_buffer_pool_filename)`
    |'
- en: '| Scope | Global |'
  id: totrans-570
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-572
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | File name |'
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: '| Default Value | `ib_buffer_pool` |'
  id: totrans-574
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ib_buffer_pool` |'
- en: 'Specifies the name of the file that holds the list of tablespace IDs and page
    IDs produced by [`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)
    or [`innodb_buffer_pool_dump_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now).
    Tablespace IDs and page IDs are saved in the following format: `space, page_id`.
    By default, the file is named `ib_buffer_pool` and is located in the `InnoDB`
    data directory. A non-default location must be specified relative to the data
    directory.'
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定保存由[`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)或[`innodb_buffer_pool_dump_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_now)生成的表空间ID和页面ID列表的文件的名称。表空间ID和页面ID以以下格式保存：`space,
    page_id`。默认情况下，文件名为`ib_buffer_pool`，位于`InnoDB`数据目录中。必须相对于数据目录指定非默认位置。
- en: 'A file name can be specified at runtime, using a [`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment") statement:'
  id: totrans-576
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以在运行时使用[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句指定文件名：
- en: '[PRE0]'
  id: totrans-577
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can also specify a file name at startup, in a startup string or MySQL configuration
    file. When specifying a file name at startup, the file must exist or `InnoDB`
    returns a startup error indicating that there is no such file or directory.
  id: totrans-578
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以在启动时指定文件名，在启动字符串或MySQL配置文件中。在启动时指定文件名时，文件必须存在，否则`InnoDB`会返回启动错误，指示没有这样的文件或目录。
- en: For more information, see [Section 17.8.3.6, “Saving and Restoring the Buffer
    Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving and Restoring the
    Buffer Pool State").
  id: totrans-579
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.8.3.6节，“保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html "17.8.3.6 保存和恢复缓冲池状态")。
- en: '[`innodb_buffer_pool_in_core_file`](innodb-parameters.html#sysvar_innodb_buffer_pool_in_core_file)'
  id: totrans-580
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_in_core_file`](innodb-parameters.html#sysvar_innodb_buffer_pool_in_core_file)'
- en: '| Command-Line Format | `--innodb-buffer-pool-in-core-file[={OFF&#124;ON}]`
    |'
  id: totrans-581
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-in-core-file[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.14 |'
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.14 |'
- en: '| System Variable | `[innodb_buffer_pool_in_core_file](innodb-parameters.html#sysvar_innodb_buffer_pool_in_core_file)`
    |'
  id: totrans-583
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_in_core_file](innodb-parameters.html#sysvar_innodb_buffer_pool_in_core_file)`
    |'
- en: '| Scope | Global |'
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-585
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-586
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-587
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Disabling the [`innodb_buffer_pool_in_core_file`](innodb-parameters.html#sysvar_innodb_buffer_pool_in_core_file)
    variable reduces the size of core files by excluding `InnoDB` buffer pool pages.
    To use this variable, the [`core_file`](server-system-variables.html#sysvar_core_file)
    variable must be enabled and the operating system must support the `MADV_DONTDUMP`
    non-POSIX extension to `madvise()`, which is supported in Linux 3.4 and later.
    For more information, see [Section 17.8.3.7, “Excluding Buffer Pool Pages from
    Core Files”](innodb-buffer-pool-in-core-file.html "17.8.3.7 Excluding Buffer Pool
    Pages from Core Files").
  id: totrans-589
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 禁用[`innodb_buffer_pool_in_core_file`](innodb-parameters.html#sysvar_innodb_buffer_pool_in_core_file)变量可通过排除`InnoDB`缓冲池页面来减小核心文件的大小。要使用此变量，必须启用[`core_file`](server-system-variables.html#sysvar_core_file)变量，并且操作系统必须支持`MADV_DONTDUMP`非POSIX扩展到`madvise()`，该扩展在Linux
    3.4及更高版本中受支持。有关更多信息，请参见[第17.8.3.7节，“从核心文件中排除缓冲池页面”](innodb-buffer-pool-in-core-file.html
    "17.8.3.7 从核心文件中排除缓冲池页面")。
- en: '[`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)'
  id: totrans-590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)'
- en: '| Command-Line Format | `--innodb-buffer-pool-instances=#` |'
  id: totrans-591
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-instances=#` |'
- en: '| System Variable | `[innodb_buffer_pool_instances](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)`
    |'
  id: totrans-592
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_instances](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)`
    |'
- en: '| Scope | Global |'
  id: totrans-593
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-594
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-595
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-596
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value (Windows, 32-bit platforms) | `(autosized)` |'
  id: totrans-597
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（Windows，32位平台） | `(autosized)` |'
- en: '| Default Value (Other) | `8 (or 1 if innodb_buffer_pool_size < 1GB)` |'
  id: totrans-598
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（其他） | `8（如果innodb_buffer_pool_size < 1GB，则为1）` |'
- en: '| Minimum Value | `1` |'
  id: totrans-599
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `64` |'
  id: totrans-600
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `64` |'
- en: The number of regions that the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") is divided into. For systems with buffer pools in the multi-gigabyte
    range, dividing the buffer pool into separate instances can improve concurrency,
    by reducing contention as different threads read and write to cached pages. Each
    page that is stored in or read from the buffer pool is assigned to one of the
    buffer pool instances randomly, using a hashing function. Each buffer pool manages
    its own free lists, [flush lists](glossary.html#glos_flush_list "flush list"),
    [LRUs](glossary.html#glos_lru "LRU"), and all other data structures connected
    to a buffer pool, and is protected by its own buffer pool [mutex](glossary.html#glos_mutex
    "mutex").
  id: totrans-601
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool") 分成的区域数量。对于具有多个千兆字节范围的缓冲池的系统，将缓冲池分成单独的实例可以通过减少不同线程读取和写入缓存页面时的争用来提高并发性。存储在缓冲池中或从缓冲池中读取的每个页面都会随机分配给缓冲池实例之一，使用哈希函数。每个缓冲池管理自己的空闲列表、[刷新列表](glossary.html#glos_flush_list
    "flush list")、[LRU](glossary.html#glos_lru "LRU")以及与缓冲池相关的所有其他数据结构，并由自己的缓冲池[互斥锁](glossary.html#glos_mutex
    "mutex")保护。'
- en: This option only takes effect when setting [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    to 1GB or more. The total buffer pool size is divided among all the buffer pools.
    For best efficiency, specify a combination of [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    and [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    so that each buffer pool instance is at least 1GB.
  id: totrans-602
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当将[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)设置为1GB或更高时，此选项才会生效。总缓冲池大小将分配给所有缓冲池。为了达到最佳效率，请指定[`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)和[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)的组合，以便每个缓冲池实例至少为1GB。
- en: 'The default value on 32-bit Windows systems depends on the value of [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size),
    as described below:'
  id: totrans-603
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在32位Windows系统上的默认值取决于[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)的值，如下所述：
- en: If [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    is greater than 1.3GB, the default for [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    is [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)/128MB,
    with individual memory allocation requests for each chunk. 1.3GB was chosen as
    the boundary at which there is significant risk for 32-bit Windows to be unable
    to allocate the contiguous address space needed for a single buffer pool.
  id: totrans-604
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)大于1.3GB，则[`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)的默认值为[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)/128MB，每个块的内存分配请求。选择1.3GB作为边界是因为在此处，32位Windows无法为单个缓冲池分配所需的连续地址空间存在显著风险。
- en: Otherwise, the default is 1.
  id: totrans-605
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，默认值为1。
- en: On all other platforms, the default value is 8 when [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    is greater than or equal to 1GB. Otherwise, the default is 1.
  id: totrans-606
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在所有其他平台上，当[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)大于或等于1GB时，默认值为8。否则，默认值为1。
- en: For related information, see [Section 17.8.3.1, “Configuring InnoDB Buffer Pool
    Size”](innodb-buffer-pool-resize.html "17.8.3.1 Configuring InnoDB Buffer Pool
    Size").
  id: totrans-607
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参阅[第17.8.3.1节，“配置InnoDB缓冲池大小”](innodb-buffer-pool-resize.html "17.8.3.1 Configuring
    InnoDB Buffer Pool Size")。
- en: '[`innodb_buffer_pool_load_abort`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)'
  id: totrans-608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_load_abort`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)'
- en: '| Command-Line Format | `--innodb-buffer-pool-load-abort[={OFF&#124;ON}]` |'
  id: totrans-609
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-load-abort[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_buffer_pool_load_abort](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)`
    |'
  id: totrans-610
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_load_abort](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)`
    |'
- en: '| Scope | Global |'
  id: totrans-611
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-612
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-613
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-614
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-615
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Interrupts the process of restoring `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") contents triggered by [`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)
    or [`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now).
  id: totrans-616
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 中断由[`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)或[`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)触发的`InnoDB`[缓冲池](glossary.html#glos_buffer_pool
    "缓冲池")内容恢复过程。
- en: Enabling [`innodb_buffer_pool_load_abort`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)
    triggers the abort action but does not alter the variable setting, which always
    remains `OFF` or `0`. To view buffer pool load status after triggering an abort
    action, query the [`Innodb_buffer_pool_load_status`](server-status-variables.html#statvar_Innodb_buffer_pool_load_status)
    variable.
  id: totrans-617
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用[`innodb_buffer_pool_load_abort`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)会触发中止操作，但不会改变变量设置，其始终保持为`OFF`或`0`。要在触发中止操作后查看缓冲池加载状态，请查询[`Innodb_buffer_pool_load_status`](server-status-variables.html#statvar_Innodb_buffer_pool_load_status)变量。
- en: For more information, see [Section 17.8.3.6, “Saving and Restoring the Buffer
    Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving and Restoring the
    Buffer Pool State").
  id: totrans-618
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.8.3.6节，“保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html "17.8.3.6 保存和恢复缓冲池状态")。
- en: '[`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)'
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)'
- en: '| Command-Line Format | `--innodb-buffer-pool-load-at-startup[={OFF&#124;ON}]`
    |'
  id: totrans-620
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-load-at-startup[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_buffer_pool_load_at_startup](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)`
    |'
  id: totrans-621
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_load_at_startup](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)`
    |'
- en: '| Scope | Global |'
  id: totrans-622
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-623
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-624
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-625
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-626
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Specifies that, on MySQL server startup, the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") is automatically [warmed up](glossary.html#glos_warm_up "warm up")
    by loading the same pages it held at an earlier time. Typically used in combination
    with [`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown).
  id: totrans-627
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定在MySQL服务器启动时，`InnoDB`[缓冲池](glossary.html#glos_buffer_pool "缓冲池")会自动通过加载先前保存的页面来[预热](glossary.html#glos_warm_up
    "预热")。通常与[`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)一起使用。
- en: Both [`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)
    and [`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)
    are enabled by default.
  id: totrans-628
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_dump_at_shutdown`](innodb-parameters.html#sysvar_innodb_buffer_pool_dump_at_shutdown)和[`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)默认启用。'
- en: For more information, see [Section 17.8.3.6, “Saving and Restoring the Buffer
    Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving and Restoring the
    Buffer Pool State").
  id: totrans-629
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.8.3.6节，“保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html "17.8.3.6 保存和恢复缓冲池状态")。
- en: '[`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)'
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)'
- en: '| Command-Line Format | `--innodb-buffer-pool-load-now[={OFF&#124;ON}]` |'
  id: totrans-631
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-load-now[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_buffer_pool_load_now](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)`
    |'
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_load_now](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)`
    |'
- en: '| Scope | Global |'
  id: totrans-633
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-635
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-637
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Immediately [warms up](glossary.html#glos_warm_up "warm up") the `InnoDB` [buffer
    pool](glossary.html#glos_buffer_pool "buffer pool") by loading data pages without
    waiting for a server restart. Can be useful to bring cache memory back to a known
    state during benchmarking or to ready the MySQL server to resume its normal workload
    after running queries for reports or maintenance.
  id: totrans-638
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过加载数据页立即 [预热](glossary.html#glos_warm_up "预热") `InnoDB` [缓冲池](glossary.html#glos_buffer_pool
    "缓冲池")，无需等待服务器重新启动。在进行基准测试期间，或在运行报告或维护查询后准备 MySQL 服务器恢复其正常工作负载时，这可能很有用。
- en: Enabling [`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)
    triggers the load action but does not alter the variable setting, which always
    remains `OFF` or `0`. To view buffer pool load progress after triggering a load,
    query the [`Innodb_buffer_pool_load_status`](server-status-variables.html#statvar_Innodb_buffer_pool_load_status)
    variable.
  id: totrans-639
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用 [`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)
    触发加载操作，但不会改变变量设置，变量始终保持 `OFF` 或 `0`。在触发加载后查看缓冲池加载进度，请查询 [`Innodb_buffer_pool_load_status`](server-status-variables.html#statvar_Innodb_buffer_pool_load_status)
    变量。
- en: For more information, see [Section 17.8.3.6, “Saving and Restoring the Buffer
    Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving and Restoring the
    Buffer Pool State").
  id: totrans-640
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅 [Section 17.8.3.6, “保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html "17.8.3.6 保存和恢复缓冲池状态")。
- en: '[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)'
  id: totrans-641
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)'
- en: '| Command-Line Format | `--innodb-buffer-pool-size=#` |'
  id: totrans-642
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-buffer-pool-size=#` |'
- en: '| System Variable | `[innodb_buffer_pool_size](innodb-parameters.html#sysvar_innodb_buffer_pool_size)`
    |'
  id: totrans-643
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_buffer_pool_size](innodb-parameters.html#sysvar_innodb_buffer_pool_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-644
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-645
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-646
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-647
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `134217728` |'
  id: totrans-648
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `134217728` |'
- en: '| Minimum Value | `5242880` |'
  id: totrans-649
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `5242880` |'
- en: '| Maximum Value (64-bit platforms) | `2**64-1` |'
  id: totrans-650
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `2**64-1` |'
- en: '| Maximum Value (32-bit platforms) | `2**32-1` |'
  id: totrans-651
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `2**32-1` |'
- en: '| Unit | bytes |'
  id: totrans-652
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字�� |'
- en: The size in bytes of the [buffer pool](glossary.html#glos_buffer_pool "buffer
    pool"), the memory area where `InnoDB` caches table and index data. The default
    value is 134217728 bytes (128MB). The maximum value depends on the CPU architecture;
    the maximum is 4294967295 (2^(32)-1) on 32-bit systems and 18446744073709551615
    (2^(64)-1) on 64-bit systems. On 32-bit systems, the CPU architecture and operating
    system may impose a lower practical maximum size than the stated maximum. When
    the size of the buffer pool is greater than 1GB, setting [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    to a value greater than 1 can improve the scalability on a busy server.
  id: totrans-653
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 缓冲池的大小（以字节为单位），即 `InnoDB` 缓存表和索引数据的内存区域。默认值为 134217728 字节（128MB）。最大值取决于 CPU
    架构；32位系统上的最大值为 4294967295（2^(32)-1），64位系统上的最大值为 18446744073709551615（2^(64)-1）。在32位系统上，CPU
    架构和操作系统可能会强加一个比规定最大值更低的实际最大值。当缓冲池的大小大于1GB时，将 [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    设置为大于1的值可以提高繁忙服务器的可伸缩性。
- en: A larger buffer pool requires less disk I/O to access the same table data more
    than once. On a dedicated database server, you might set the buffer pool size
    to 80% of the machine's physical memory size. Be aware of the following potential
    issues when configuring buffer pool size, and be prepared to scale back the size
    of the buffer pool if necessary.
  id: totrans-654
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更大的缓冲池需要更少的磁盘 I/O 来多次访问相同的表数据。在专用数据库服务器上，您可能会将缓冲池大小设置为机器物理内存大小的 80%。在配置缓冲池大小时，请注意以下潜在问题，并准备根据需要缩小缓冲池的大小。
- en: Competition for physical memory can cause paging in the operating system.
  id: totrans-655
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理内存的竞争可能导致操作系统进行分页。
- en: '`InnoDB` reserves additional memory for buffers and control structures, so
    that the total allocated space is approximately 10% greater than the specified
    buffer pool size.'
  id: totrans-656
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB` 为缓冲区和控制结构保留额外的内存，因此总分配空间大约比指定的缓冲池大小大约多10%。'
- en: Address space for the buffer pool must be contiguous, which can be an issue
    on Windows systems with DLLs that load at specific addresses.
  id: totrans-657
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓冲池的地址空间必须是连续的，在 Windows 系统中，DLL 可能会加载到特定地址，这可能会成为一个问题。
- en: The time to initialize the buffer pool is roughly proportional to its size.
    On instances with large buffer pools, initialization time might be significant.
    To reduce the initialization period, you can save the buffer pool state at server
    shutdown and restore it at server startup. See [Section 17.8.3.6, “Saving and
    Restoring the Buffer Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving
    and Restoring the Buffer Pool State").
  id: totrans-658
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始化缓冲池的时间大致与其大小成正比。在具有大型缓冲池的实例上，初始化时间可能很显著。为了缩短初始化时间，您可以在服务器关闭时保存缓冲池状态，并在服务器启动时恢复它。参见[第17.8.3.6节，“保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html
    "17.8.3.6 保存和恢复缓冲池状态")。
- en: When you increase or decrease buffer pool size, the operation is performed in
    chunks. Chunk size is defined by the [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    variable, which has a default of 128 MB.
  id: totrans-659
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当您增加或减少缓冲池大小时，操作是以块为单位执行的。块大小由[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)变量定义，默认值为128
    MB。
- en: Buffer pool size must always be equal to or a multiple of [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances).
    If you alter the buffer pool size to a value that is not equal to or a multiple
    of [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances),
    buffer pool size is automatically adjusted to a value that is equal to or a multiple
    of [`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances).
  id: totrans-660
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 缓冲池大小必须始终等于或是[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)的倍数。如果您将缓冲池大小更改为不等于或不是[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)的倍数的值，则缓冲池大小会自动调整为等于或是[`innodb_buffer_pool_chunk_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_chunk_size)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)的倍数的值。
- en: '[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    can be set dynamically, which allows you to resize the buffer pool without restarting
    the server. The [`Innodb_buffer_pool_resize_status`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status)
    status variable reports the status of online buffer pool resizing operations.
    See [Section 17.8.3.1, “Configuring InnoDB Buffer Pool Size”](innodb-buffer-pool-resize.html
    "17.8.3.1 Configuring InnoDB Buffer Pool Size") for more information.'
  id: totrans-661
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)可以动态设置，这允许您在不重启服务器的情况下调整缓冲池大小。[`Innodb_buffer_pool_resize_status`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status)状态变量报告在线缓冲池调整操作的状态。有关更多信息，请参见[第17.8.3.1节，“配置InnoDB缓冲池大小”](innodb-buffer-pool-resize.html
    "17.8.3.1 配置InnoDB缓冲池大小")。'
- en: If [`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)
    is enabled, the [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    value is automatically configured if it is not explicitly defined. For more information,
    see [Section 17.8.12, “Enabling Automatic Configuration for a Dedicated MySQL
    Server”](innodb-dedicated-server.html "17.8.12 Enabling Automatic Configuration
    for a Dedicated MySQL Server").
  id: totrans-662
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)，并且未明确定义[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)的值，则该值会自动配置。有关更多信息，请参见[第17.8.12节，“为专用MySQL服务器启用自动配置”](innodb-dedicated-server.html
    "17.8.12 为专用MySQL服务器启用自动配置")��
- en: '[`innodb_change_buffer_max_size`](innodb-parameters.html#sysvar_innodb_change_buffer_max_size)'
  id: totrans-663
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_change_buffer_max_size`](innodb-parameters.html#sysvar_innodb_change_buffer_max_size)'
- en: '| Command-Line Format | `--innodb-change-buffer-max-size=#` |'
  id: totrans-664
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-change-buffer-max-size=#` |'
- en: '| System Variable | `[innodb_change_buffer_max_size](innodb-parameters.html#sysvar_innodb_change_buffer_max_size)`
    |'
  id: totrans-665
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_change_buffer_max_size](innodb-parameters.html#sysvar_innodb_change_buffer_max_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-666
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-667
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-668
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-669
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `25` |'
  id: totrans-670
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `25` |'
- en: '| Minimum Value | `0` |'
  id: totrans-671
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `50` |'
  id: totrans-672
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `50` |'
- en: Maximum size for the `InnoDB` [change buffer](glossary.html#glos_change_buffer
    "change buffer"), as a percentage of the total size of the [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool"). You might increase this value for a MySQL server with heavy insert,
    update, and delete activity, or decrease it for a MySQL server with unchanging
    data used for reporting. For more information, see [Section 17.5.2, “Change Buffer”](innodb-change-buffer.html
    "17.5.2 Change Buffer"). For general I/O tuning advice, see [Section 10.5.8, “Optimizing
    InnoDB Disk I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing InnoDB Disk
    I/O").
  id: totrans-673
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [更改缓冲区](glossary.html#glos_change_buffer "更改缓冲区")的最大大小，作为[缓冲池](glossary.html#glos_buffer_pool
    "缓冲池")总大小的百分比。您可能会增加此值，用于具有大量插入、更新和删除活动的 MySQL 服务器，或者减少用于报告中使用的数据保持不变的 MySQL 服务器。有关更多信息，请参见[第
    17.5.2 节，“更改缓冲区”](innodb-change-buffer.html "17.5.2 更改缓冲区")。有关一般 I/O 调优建议，请参见[第
    10.5.8 节，“优化 InnoDB 磁盘 I/O”](optimizing-innodb-diskio.html "10.5.8 优化 InnoDB 磁盘
    I/O")。'
- en: '[`innodb_change_buffering`](innodb-parameters.html#sysvar_innodb_change_buffering)'
  id: totrans-674
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_change_buffering`](innodb-parameters.html#sysvar_innodb_change_buffering)'
- en: '| Command-Line Format | `--innodb-change-buffering=value` |'
  id: totrans-675
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-change-buffering=value` |'
- en: '| System Variable | `[innodb_change_buffering](innodb-parameters.html#sysvar_innodb_change_buffering)`
    |'
  id: totrans-676
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_change_buffering](innodb-parameters.html#sysvar_innodb_change_buffering)`
    |'
- en: '| Scope | Global |'
  id: totrans-677
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-678
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-679
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-680
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `all` |'
  id: totrans-681
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `all` |'
- en: '| Valid Values | `none``inserts``deletes``changes``purges``all` |'
  id: totrans-682
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `none``inserts``deletes``changes``purges``all` |'
- en: Whether `InnoDB` performs [change buffering](glossary.html#glos_change_buffering
    "change buffering"), an optimization that delays write operations to secondary
    indexes so that the I/O operations can be performed sequentially. Permitted values
    are described in the following table. Values may also be specified numerically.
  id: totrans-683
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` 是否执行[更改缓冲](glossary.html#glos_change_buffering "更改缓冲")，这是一种优化，延迟写入操作到次要索引，以便
    I/O 操作可以按顺序执行。允许的值在下表中描述。值也可以用数字指定。'
- en: '**Table 17.25 Permitted Values for innodb_change_buffering**'
  id: totrans-684
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**表 17.25 innodb_change_buffering 允许的值**'
- en: '| Value | Numeric Value | Description |'
  id: totrans-685
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 值 | 数值 | 描述 |'
- en: '| `none` | `0` | Do not buffer any operations. |'
  id: totrans-686
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `none` | `0` | 不缓冲任何操作。 |'
- en: '| `inserts` | `1` | Buffer insert operations. |'
  id: totrans-687
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `inserts` | `1` | 缓冲插入操作。 |'
- en: '| `deletes` | `2` | Buffer delete marking operations; strictly speaking, the
    writes that mark index records for later deletion during a purge operation. |'
  id: totrans-688
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `deletes` | `2` | 缓冲删除标记操作；严格来说，标记索引记录以便稍后在清除操作期间删除。 |'
- en: '| `changes` | `3` | Buffer inserts and delete-marking operations. |'
  id: totrans-689
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `changes` | `3` | 缓冲插入和删除标记操作。 |'
- en: '| `purges` | `4` | Buffer the physical deletion operations that happen in the
    background. |'
  id: totrans-690
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `purges` | `4` | 缓冲后台中发生的物理删除操作。 |'
- en: '| `all` | `5` | The default. Buffer inserts, delete-marking operations, and
    purges. |'
  id: totrans-691
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `all` | `5` | 默认值。缓冲插入、删除标记操作和清除。 |'
- en: For more information, see [Section 17.5.2, “Change Buffer”](innodb-change-buffer.html
    "17.5.2 Change Buffer"). For general I/O tuning advice, see [Section 10.5.8, “Optimizing
    InnoDB Disk I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing InnoDB Disk
    I/O").
  id: totrans-692
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第 17.5.2 节，“更改缓冲区”](innodb-change-buffer.html "17.5.2 更改缓冲区")。有关一般
    I/O 调优建议，请参见[第 10.5.8 节，“优化 InnoDB 磁盘 I/O”](optimizing-innodb-diskio.html "10.5.8
    优化 InnoDB 磁盘 I/O")。
- en: '[`innodb_change_buffering_debug`](innodb-parameters.html#sysvar_innodb_change_buffering_debug)'
  id: totrans-693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_change_buffering_debug`](innodb-parameters.html#sysvar_innodb_change_buffering_debug)'
- en: '| Command-Line Format | `--innodb-change-buffering-debug=#` |'
  id: totrans-694
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-change-buffering-debug=#` |'
- en: '| System Variable | `[innodb_change_buffering_debug](innodb-parameters.html#sysvar_innodb_change_buffering_debug)`
    |'
  id: totrans-695
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_change_buffering_debug](innodb-parameters.html#sysvar_innodb_change_buffering_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-696
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-697
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-698
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-699
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-700
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-701
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `2` |'
  id: totrans-702
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2` |'
- en: Sets a debug flag for `InnoDB` change buffering. A value of 1 forces all changes
    to the change buffer. A value of 2 causes an unexpected exit at merge. A default
    value of 0 indicates that the change buffering debug flag is not set. This option
    is only available when debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-703
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置`InnoDB`更改缓冲区的调试标志。值为1会强制所有更改进入更改缓冲区。值为2会在合并时导致意外退出。默认值为0表示更改缓冲区调试标志未设置。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译调试支持时才可用。
- en: '[`innodb_checkpoint_disabled`](innodb-parameters.html#sysvar_innodb_checkpoint_disabled)'
  id: totrans-704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_checkpoint_disabled`](innodb-parameters.html#sysvar_innodb_checkpoint_disabled)'
- en: '| Command-Line Format | `--innodb-checkpoint-disabled[={OFF&#124;ON}]` |'
  id: totrans-705
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-checkpoint-disabled[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_checkpoint_disabled](innodb-parameters.html#sysvar_innodb_checkpoint_disabled)`
    |'
  id: totrans-706
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_checkpoint_disabled](innodb-parameters.html#sysvar_innodb_checkpoint_disabled)`
    |'
- en: '| Scope | Global |'
  id: totrans-707
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-708
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-709
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-710
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-711
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: This is a debug option that is only intended for expert debugging use. It disables
    checkpoints so that a deliberate server exit always initiates `InnoDB` recovery.
    It should only be enabled for a short interval, typically before running DML operations
    that write redo log entries that would require recovery following a server exit.
    This option is only available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-712
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是一个仅供专家调试使用的调试选项。它禁用了检查点，以便有意的服务器退出始终会启动`InnoDB`恢复。通常在运行写入重做日志条目的DML操作之前，应该仅启用它一小段时间。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译调试支持时才可用。
- en: '[`innodb_checksum_algorithm`](innodb-parameters.html#sysvar_innodb_checksum_algorithm)'
  id: totrans-713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_checksum_algorithm`](innodb-parameters.html#sysvar_innodb_checksum_algorithm)'
- en: '| Command-Line Format | `--innodb-checksum-algorithm=value` |'
  id: totrans-714
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-checksum-algorithm=value` |'
- en: '| System Variable | `[innodb_checksum_algorithm](innodb-parameters.html#sysvar_innodb_checksum_algorithm)`
    |'
  id: totrans-715
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_checksum_algorithm](innodb-parameters.html#sysvar_innodb_checksum_algorithm)`
    |'
- en: '| Scope | Global |'
  id: totrans-716
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-717
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-718
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-719
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `crc32` |'
  id: totrans-720
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `crc32` |'
- en: '| Valid Values | `crc32``strict_crc32``innodb``strict_innodb``none``strict_none`
    |'
  id: totrans-721
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `crc32``strict_crc32``innodb``strict_innodb``none``strict_none` |'
- en: Specifies how to generate and verify the [checksum](glossary.html#glos_checksum
    "checksum") stored in the disk blocks of `InnoDB` [tablespaces](glossary.html#glos_tablespace
    "tablespace"). The default value for [`innodb_checksum_algorithm`](innodb-parameters.html#sysvar_innodb_checksum_algorithm)
    is `crc32`.
  id: totrans-722
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定如何生成和验证`InnoDB`[表空间](glossary.html#glos_tablespace "tablespace")中磁盘块中存储的[校验和](glossary.html#glos_checksum
    "checksum")。[`innodb_checksum_algorithm`](innodb-parameters.html#sysvar_innodb_checksum_algorithm)的默认值为`crc32`。
- en: Versions of [MySQL Enterprise Backup](mysql-enterprise-backup.html "32.1 MySQL
    Enterprise Backup Overview") up to 3.8.0 do not support backing up tablespaces
    that use CRC32 checksums. [MySQL Enterprise Backup](mysql-enterprise-backup.html
    "32.1 MySQL Enterprise Backup Overview") adds CRC32 checksum support in 3.8.1,
    with some limitations. Refer to the [MySQL Enterprise Backup](mysql-enterprise-backup.html
    "32.1 MySQL Enterprise Backup Overview") 3.8.1 Change History for more information.
  id: totrans-723
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[MySQL企业备份](mysql-enterprise-backup.html "32.1 MySQL企业备份概述")版本直到3.8.0不支持备份使用CRC32校验和的表空间。[MySQL企业备份](mysql-enterprise-backup.html
    "32.1 MySQL企业备份概述")在3.8.1中添加了CRC32校验和支持，但有一些限制。有关更多信息，请参考[MySQL企业备份](mysql-enterprise-backup.html
    "32.1 MySQL企业备份概述") 3.8.1变更历史。'
- en: The value `innodb` is backward-compatible with earlier versions of MySQL. The
    value `crc32` uses an algorithm that is faster to compute the checksum for every
    modified block, and to check the checksums for each disk read. It scans blocks
    64 bits at a time, which is faster than the `innodb` checksum algorithm, which
    scans blocks 8 bits at a time. The value `none` writes a constant value in the
    checksum field rather than computing a value based on the block data. The blocks
    in a tablespace can use a mix of old, new, and no checksum values, being updated
    gradually as the data is modified; once blocks in a tablespace are modified to
    use the `crc32` algorithm, the associated tables cannot be read by earlier versions
    of MySQL.
  id: totrans-724
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 值`innodb`向后兼容早期版本的MySQL。值`crc32`使用一种更快的算法来计算每个修改块的校验和，并检查每个磁盘读取的校验和。它每次扫描64位块，比每次扫描8位块的`innodb`校验算法更快。值`none`在校验字段中写入一个常数值，而不是基于块数据计算值。表空间中的块可以使用旧、新和无校验和值的混合，随着数据逐渐修改而逐步更新；一旦表空间中的块被修改为使用`crc32`算法，相关表将无法被早期版本的MySQL读取。
- en: The strict form of a checksum algorithm reports an error if it encounters a
    valid but non-matching checksum value in a tablespace. It is recommended that
    you only use strict settings in a new instance, to set up tablespaces for the
    first time. Strict settings are somewhat faster, because they do not need to compute
    all checksum values during disk reads.
  id: totrans-725
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 校验算法的严格形式在表空间中遇到有效但不匹配的校验和值时会报错。建议您只在新实例中使用严格设置，首次设置表空间。严格设置略快，因为在磁盘读取期间不需要计算所有校验和值。
- en: The following table shows the difference between the `none`, `innodb`, and `crc32`
    option values, and their strict counterparts. `none`, `innodb`, and `crc32` write
    the specified type of checksum value into each data block, but for compatibility
    accept other checksum values when verifying a block during a read operation. Strict
    settings also accept valid checksum values but print an error message when a valid
    non-matching checksum value is encountered. Using the strict form can make verification
    faster if all `InnoDB` data files in an instance are created under an identical
    [`innodb_checksum_algorithm`](innodb-parameters.html#sysvar_innodb_checksum_algorithm)
    value.
  id: totrans-726
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下表格显示了`none`、`innodb`和`crc32`选项值及其严格对应项之间的区别。`none`、`innodb`和`crc32`将指定类型的校验和值写入每个数据块，但在验证读取操作期间的块时，也接受其他校验和值以确保兼容性。严格设置还接受有效的校验和值，但在遇到有效但不匹配的校验和值时会打印错误消息。如果实例中的所有`InnoDB`数据文件都是在相同的[`innodb_checksum_algorithm`](innodb-parameters.html#sysvar_innodb_checksum_algorithm)值下创建的，则使用严格形式可以使验证更快。
- en: '**Table 17.26 Permitted innodb_checksum_algorithm Values**'
  id: totrans-727
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**表 17.26 允许的innodb_checksum_algorithm值**'
- en: '| Value | Generated checksum (when writing) | Permitted checksums (when reading)
    |'
  id: totrans-728
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 值 | 生成的校验和（写入时） | 允许的校验和（读取时） |'
- en: '| none | A constant number. | Any of the checksums generated by `none`, `innodb`,
    or `crc32`. |'
  id: totrans-729
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| none | 一个常数值。 | 由`none`、`innodb`或`crc32`生成的任何校验和。 |'
- en: '| innodb | A checksum calculated in software, using the original algorithm
    from `InnoDB`. | Any of the checksums generated by `none`, `innodb`, or `crc32`.
    |'
  id: totrans-730
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| innodb | 使用`InnoDB`原始算法在软件中计算的校验和。 | 由`none`、`innodb`或`crc32`生成的任何校验和。 |'
- en: '| crc32 | A checksum calculated using the `crc32` algorithm, possibly done
    with a hardware assist. | Any of the checksums generated by `none`, `innodb`,
    or `crc32`. |'
  id: totrans-731
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| crc32 | 使用`crc32`算法计算的校验和，可能使用硬件辅助完成。 | 由`none`、`innodb`或`crc32`生成的任何校验和。
    |'
- en: '| strict_none | A constant number | Any of the checksums generated by `none`,
    `innodb`, or `crc32`. `InnoDB` prints an error message if a valid but non-matching
    checksum is encountered. |'
  id: totrans-732
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| strict_none | 一个常数值 | 由`none`、`innodb`或`crc32`生成的任何校验和。如果遇到有效但不匹配的校验和，`InnoDB`会打印错误消息。
    |'
- en: '| strict_innodb | A checksum calculated in software, using the original algorithm
    from `InnoDB`. | Any of the checksums generated by `none`, `innodb`, or `crc32`.
    `InnoDB` prints an error message if a valid but non-matching checksum is encountered.
    |'
  id: totrans-733
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| strict_innodb | 使用`InnoDB`原始算法在软件中计算的校验和。 | 由`none`、`innodb`或`crc32`生成的任何校验和。如果遇到有效但不匹配的校验和，`InnoDB`会打印错误消息。
    |'
- en: '| strict_crc32 | A checksum calculated using the `crc32` algorithm, possibly
    done with a hardware assist. | Any of the checksums generated by `none`, `innodb`,
    or `crc32`. `InnoDB` prints an error message if a valid but non-matching checksum
    is encountered. |'
  id: totrans-734
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| strict_crc32 | 使用`crc32`算法计算的校验和，可能使用硬件辅助完成。 | 由`none`、`innodb`或`crc32`生成的任何校验和。如果遇到有效但不匹配的校验和，`InnoDB`会打印错误消息。
    |'
- en: '[`innodb_cmp_per_index_enabled`](innodb-parameters.html#sysvar_innodb_cmp_per_index_enabled)'
  id: totrans-735
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_cmp_per_index_enabled`](innodb-parameters.html#sysvar_innodb_cmp_per_index_enabled)'
- en: '| Command-Line Format | `--innodb-cmp-per-index-enabled[={OFF&#124;ON}]` |'
  id: totrans-736
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-cmp-per-index-enabled[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_cmp_per_index_enabled](innodb-parameters.html#sysvar_innodb_cmp_per_index_enabled)`
    |'
  id: totrans-737
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_cmp_per_index_enabled](innodb-parameters.html#sysvar_innodb_cmp_per_index_enabled)`
    |'
- en: '| Scope | Global |'
  id: totrans-738
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-739
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-740
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-741
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-742
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enables per-index compression-related statistics in the Information Schema [`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 The INFORMATION_SCHEMA INNODB_CMP_PER_INDEX and INNODB_CMP_PER_INDEX_RESET
    Tables") table. Because these statistics can be expensive to gather, only enable
    this option on development, test, or replica instances during performance tuning
    related to `InnoDB` [compressed](glossary.html#glos_compression "compression")
    tables.
  id: totrans-743
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用信息模式[`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 INFORMATION_SCHEMA INNODB_CMP_PER_INDEX和INNODB_CMP_PER_INDEX_RESET表")表中每个索引的压缩相关统计信息。由于这些统计信息可能很昂贵，只在与`InnoDB`
    [压缩](glossary.html#glos_compression "压缩")表相关的性能调优期间的开发、测试或副本实例上启用此选项。
- en: For more information, see [Section 28.4.8, “The INFORMATION_SCHEMA INNODB_CMP_PER_INDEX
    and INNODB_CMP_PER_INDEX_RESET Tables”](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 The INFORMATION_SCHEMA INNODB_CMP_PER_INDEX and INNODB_CMP_PER_INDEX_RESET
    Tables"), and [Section 17.9.1.4, “Monitoring InnoDB Table Compression at Runtime”](innodb-compression-tuning-monitoring.html
    "17.9.1.4 Monitoring InnoDB Table Compression at Runtime").
  id: totrans-744
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第28.4.8节，“INFORMATION_SCHEMA INNODB_CMP_PER_INDEX和INNODB_CMP_PER_INDEX_RESET表”](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 INFORMATION_SCHEMA INNODB_CMP_PER_INDEX和INNODB_CMP_PER_INDEX_RESET表")，以及[第17.9.1.4节，“运行时监视InnoDB表压缩”](innodb-compression-tuning-monitoring.html
    "17.9.1.4 运行时监视InnoDB表���缩")。
- en: '[`innodb_commit_concurrency`](innodb-parameters.html#sysvar_innodb_commit_concurrency)'
  id: totrans-745
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_commit_concurrency`](innodb-parameters.html#sysvar_innodb_commit_concurrency)'
- en: '| Command-Line Format | `--innodb-commit-concurrency=#` |'
  id: totrans-746
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-commit-concurrency=#` |'
- en: '| System Variable | `[innodb_commit_concurrency](innodb-parameters.html#sysvar_innodb_commit_concurrency)`
    |'
  id: totrans-747
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_commit_concurrency](innodb-parameters.html#sysvar_innodb_commit_concurrency)`
    |'
- en: '| Scope | Global |'
  id: totrans-748
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-749
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-750
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-751
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-752
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-753
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1000` |'
  id: totrans-754
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1000` |'
- en: The number of [threads](glossary.html#glos_thread "thread") that can [commit](glossary.html#glos_commit
    "commit") at the same time. A value of 0 (the default) permits any number of [transactions](glossary.html#glos_transaction
    "transaction") to commit simultaneously.
  id: totrans-755
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以同时提交的[线程](glossary.html#glos_thread "线程")数量。值为0（默认值）允许任意数量的[事务](glossary.html#glos_transaction
    "事务")同时提交。
- en: The value of [`innodb_commit_concurrency`](innodb-parameters.html#sysvar_innodb_commit_concurrency)
    cannot be changed at runtime from zero to nonzero or vice versa. The value can
    be changed from one nonzero value to another.
  id: totrans-756
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_commit_concurrency`](innodb-parameters.html#sysvar_innodb_commit_concurrency)的值不能在运行时从零更改为非零或反之。可以从一个非零值更改为另一个非零值。'
- en: '[`innodb_compress_debug`](innodb-parameters.html#sysvar_innodb_compress_debug)'
  id: totrans-757
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_compress_debug`](innodb-parameters.html#sysvar_innodb_compress_debug)'
- en: '| Command-Line Format | `--innodb-compress-debug=value` |'
  id: totrans-758
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-compress-debug=value` |'
- en: '| System Variable | `[innodb_compress_debug](innodb-parameters.html#sysvar_innodb_compress_debug)`
    |'
  id: totrans-759
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_compress_debug](innodb-parameters.html#sysvar_innodb_compress_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-760
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-761
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-762
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-763
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `none` |'
  id: totrans-764
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `none` |'
- en: '| Valid Values | `none``zlib``lz4``lz4hc` |'
  id: totrans-765
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `none``zlib``lz4``lz4hc` |'
- en: Compresses all tables using a specified compression algorithm without having
    to define a `COMPRESSION` attribute for each table. This option is only available
    if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-766
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用指定的压缩算法压缩所有表，而无需为每个表定义`COMPRESSION`属性。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译调试支持时才可用。
- en: For related information, see [Section 17.9.2, “InnoDB Page Compression”](innodb-page-compression.html
    "17.9.2 InnoDB Page Compression").
  id: totrans-767
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第17.9.2节，“InnoDB页面压缩”](innodb-page-compression.html "17.9.2 InnoDB
    Page Compression")。
- en: '[`innodb_compression_failure_threshold_pct`](innodb-parameters.html#sysvar_innodb_compression_failure_threshold_pct)'
  id: totrans-768
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_compression_failure_threshold_pct`](innodb-parameters.html#sysvar_innodb_compression_failure_threshold_pct)'
- en: '| Command-Line Format | `--innodb-compression-failure-threshold-pct=#` |'
  id: totrans-769
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-compression-failure-threshold-pct=#` |'
- en: '| System Variable | `[innodb_compression_failure_threshold_pct](innodb-parameters.html#sysvar_innodb_compression_failure_threshold_pct)`
    |'
  id: totrans-770
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_compression_failure_threshold_pct](innodb-parameters.html#sysvar_innodb_compression_failure_threshold_pct)`
    |'
- en: '| Scope | Global |'
  id: totrans-771
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-772
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-773
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-774
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `5` |'
  id: totrans-775
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `5` |'
- en: '| Minimum Value | `0` |'
  id: totrans-776
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `100` |'
  id: totrans-777
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `100` |'
- en: Defines the compression failure rate threshold for a table, as a percentage,
    at which point MySQL begins adding padding within [compressed](glossary.html#glos_compression
    "compression") pages to avoid expensive [compression failures](glossary.html#glos_compression_failure
    "compression failure"). When this threshold is passed, MySQL begins to leave additional
    free space within each new compressed page, dynamically adjusting the amount of
    free space up to the percentage of page size specified by [`innodb_compression_pad_pct_max`](innodb-parameters.html#sysvar_innodb_compression_pad_pct_max).
    A value of zero disables the mechanism that monitors compression efficiency and
    dynamically adjusts the padding amount.
  id: totrans-778
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义表的压缩失败率阈值，以百分比表示，在此阈值之上，MySQL开始在[压缩](glossary.html#glos_compression "compression")页面内添加填充，以避免昂贵的[压缩失败](glossary.html#glos_compression_failure
    "compression failure")。当超过此阈值时，MySQL开始在每个新的压缩页面内留下额外的空闲空间，动态调整空闲空间的量，直到达到由[`innodb_compression_pad_pct_max`](innodb-parameters.html#sysvar_innodb_compression_pad_pct_max)指定的页面大小百分比。值为零会禁用监视压缩效率并动态调整填充量的机制。
- en: For more information, see [Section 17.9.1.6, “Compression for OLTP Workloads”](innodb-performance-compression-oltp.html
    "17.9.1.6 Compression for OLTP Workloads").
  id: totrans-779
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第17.9.1.6节，“OLTP工作负载的压缩”](innodb-performance-compression-oltp.html
    "17.9.1.6 Compression for OLTP Workloads")。
- en: '[`innodb_compression_level`](innodb-parameters.html#sysvar_innodb_compression_level)'
  id: totrans-780
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_compression_level`](innodb-parameters.html#sysvar_innodb_compression_level)'
- en: '| Command-Line Format | `--innodb-compression-level=#` |'
  id: totrans-781
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-compression-level=#` |'
- en: '| System Variable | `[innodb_compression_level](innodb-parameters.html#sysvar_innodb_compression_level)`
    |'
  id: totrans-782
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_compression_level](innodb-parameters.html#sysvar_innodb_compression_level)`
    |'
- en: '| Scope | Global |'
  id: totrans-783
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-784
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-785
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-786
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `6` |'
  id: totrans-787
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `6` |'
- en: '| Minimum Value | `0` |'
  id: totrans-788
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `9` |'
  id: totrans-789
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `9` |'
- en: Specifies the level of zlib compression to use for `InnoDB` [compressed](glossary.html#glos_compression
    "compression") tables and indexes. A higher value lets you fit more data onto
    a storage device, at the expense of more CPU overhead during compression. A lower
    value lets you reduce CPU overhead when storage space is not critical, or you
    expect the data is not especially compressible.
  id: totrans-790
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定用于`InnoDB`[压缩](glossary.html#glos_compression "compression")表和索引的zlib压缩级别。较高的值可以让您将更多数据放入存储设备，但会增加压缩时的CPU开销。较低的值可以减少CPU开销，当存储空间不是关键问题，或者您预计数据不太容易压缩时使用。
- en: For more information, see [Section 17.9.1.6, “Compression for OLTP Workloads”](innodb-performance-compression-oltp.html
    "17.9.1.6 Compression for OLTP Workloads").
  id: totrans-791
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第17.9.1.6节，“OLTP工作负载的压缩”](innodb-performance-compression-oltp.html
    "17.9.1.6 OLTP工作负载的压缩")。
- en: '[`innodb_compression_pad_pct_max`](innodb-parameters.html#sysvar_innodb_compression_pad_pct_max)'
  id: totrans-792
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_compression_pad_pct_max`](innodb-parameters.html#sysvar_innodb_compression_pad_pct_max)'
- en: '| Command-Line Format | `--innodb-compression-pad-pct-max=#` |'
  id: totrans-793
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-compression-pad-pct-max=#` |'
- en: '| System Variable | `[innodb_compression_pad_pct_max](innodb-parameters.html#sysvar_innodb_compression_pad_pct_max)`
    |'
  id: totrans-794
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_compression_pad_pct_max](innodb-parameters.html#sysvar_innodb_compression_pad_pct_max)`
    |'
- en: '| Scope | Global |'
  id: totrans-795
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-796
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-797
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-798
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `50` |'
  id: totrans-799
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `50` |'
- en: '| Minimum Value | `0` |'
  id: totrans-800
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `75` |'
  id: totrans-801
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `75` |'
- en: Specifies the maximum percentage that can be reserved as free space within each
    compressed [page](glossary.html#glos_page "page"), allowing room to reorganize
    the data and modification log within the page when a [compressed](glossary.html#glos_compression
    "compression") table or index is updated and the data might be recompressed. Only
    applies when [`innodb_compression_failure_threshold_pct`](innodb-parameters.html#sysvar_innodb_compression_failure_threshold_pct)
    is set to a nonzero value, and the rate of [compression failures](glossary.html#glos_compression_failure
    "compression failure") passes the cutoff point.
  id: totrans-802
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定每个压缩[页](glossary.html#glos_page "页")内可保留为自由空间的最大百分比，以便在更新[压缩](glossary.html#glos_compression
    "压缩")表或索引时重新组织数据和修改日志，并在数据可能被重新压缩时为页内留出空间。仅在[`innodb_compression_failure_threshold_pct`](innodb-parameters.html#sysvar_innodb_compression_failure_threshold_pct)设置为非零值，并且[压缩失败](glossary.html#glos_compression_failure
    "压缩失败")的速率超过截止点时才适用。
- en: For more information, see [Section 17.9.1.6, “Compression for OLTP Workloads”](innodb-performance-compression-oltp.html
    "17.9.1.6 Compression for OLTP Workloads").
  id: totrans-803
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第17.9.1.6节，“OLTP工作负载的压缩”](innodb-performance-compression-oltp.html
    "17.9.1.6 OLTP工作负载的压缩")。
- en: '[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)'
  id: totrans-804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)'
- en: '| Command-Line Format | `--innodb-concurrency-tickets=#` |'
  id: totrans-805
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-concurrency-tickets=#` |'
- en: '| System Variable | `[innodb_concurrency_tickets](innodb-parameters.html#sysvar_innodb_concurrency_tickets)`
    |'
  id: totrans-806
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_concurrency_tickets](innodb-parameters.html#sysvar_innodb_concurrency_tickets)`
    |'
- en: '| Scope | Global |'
  id: totrans-807
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-808
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-809
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-810
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `5000` |'
  id: totrans-811
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `5000` |'
- en: '| Minimum Value | `1` |'
  id: totrans-812
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-813
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: Determines the number of [threads](glossary.html#glos_thread "thread") that
    can enter `InnoDB` concurrently. A thread is placed in a queue when it tries to
    enter `InnoDB` if the number of threads has already reached the concurrency limit.
    When a thread is permitted to enter `InnoDB`, it is given a number of “ tickets”
    equal to the value of [`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets),
    and the thread can enter and leave `InnoDB` freely until it has used up its tickets.
    After that point, the thread again becomes subject to the concurrency check (and
    possible queuing) the next time it tries to enter `InnoDB`. The default value
    is 5000.
  id: totrans-814
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确定可以同时进入`InnoDB`的[线程](glossary.html#glos_thread "线程")数量。当尝试进入`InnoDB`的线程数已达到并发限制时，线程将被放置在队列中。当线程被允许进入`InnoDB`时，它将获得与[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)值相等的“票”，并且线程可以自由进入和离开`InnoDB`直到使用完票为止。在那之后，线程再次成为并发检查的对象（可能排队），下次尝试进入`InnoDB`时。默认值为5000。
- en: With a small [`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)
    value, small transactions that only need to process a few rows compete fairly
    with larger transactions that process many rows. The disadvantage of a small [`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)
    value is that large transactions must loop through the queue many times before
    they can complete, which extends the amount of time required to complete their
    task.
  id: totrans-815
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 具有较小的[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)值时，只需要处理少量行的小事务与处理许多行的大事务公平竞争。较小的[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)值的缺点是，大型事务必须多次遍历队列才能完成，这会延长完成任务所需的时间。
- en: With a large [`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)
    value, large transactions spend less time waiting for a position at the end of
    the queue (controlled by [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency))
    and more time retrieving rows. Large transactions also require fewer trips through
    the queue to complete their task. The disadvantage of a large [`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)
    value is that too many large transactions running at the same time can starve
    smaller transactions by making them wait a longer time before executing.
  id: totrans-816
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 具有较大的[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)值，大型事务等待队列末尾位置的时间较短（由[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)控制），更多时间用于检索行。大型事务还需要较少的队列遍历次数才能完成任务。较大的[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)值的缺点是，同时运行太多大型事务可能会通过使它们等待更长时间来执行，使较小事务饥饿。
- en: With a nonzero [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    value, you may need to adjust the [`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)
    value up or down to find the optimal balance between larger and smaller transactions.
    The `SHOW ENGINE INNODB STATUS` report shows the number of tickets remaining for
    an executing transaction in its current pass through the queue. This data may
    also be obtained from the `TRX_CONCURRENCY_TICKETS` column of the Information
    Schema [`INNODB_TRX`](information-schema-innodb-trx-table.html "28.4.28 The INFORMATION_SCHEMA
    INNODB_TRX Table") table.
  id: totrans-817
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 具有非零的[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)值时，您可能需要调整[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)值，以找到较大和较小事务之间的最佳平衡。`SHOW
    ENGINE INNODB STATUS`报告显示了当前通过队列执行事务时剩余的票数。此数据也可以从信息模式[`INNODB_TRX`](information-schema-innodb-trx-table.html
    "28.4.28 The INFORMATION_SCHEMA INNODB_TRX Table")表的`TRX_CONCURRENCY_TICKETS`列中获取。
- en: For more information, see [Section 17.8.4, “Configuring Thread Concurrency for
    InnoDB”](innodb-performance-thread_concurrency.html "17.8.4 Configuring Thread
    Concurrency for InnoDB").
  id: totrans-818
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.8.4节，“配置InnoDB的线程并发性”](innodb-performance-thread_concurrency.html
    "17.8.4 Configuring Thread Concurrency for InnoDB")。
- en: '[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)'
  id: totrans-819
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)'
- en: '| Command-Line Format | `--innodb-data-file-path=file_name` |'
  id: totrans-820
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-data-file-path=file_name` |'
- en: '| System Variable | `[innodb_data_file_path](innodb-parameters.html#sysvar_innodb_data_file_path)`
    |'
  id: totrans-821
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_data_file_path](innodb-parameters.html#sysvar_innodb_data_file_path)`
    |'
- en: '| Scope | Global |'
  id: totrans-822
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-823
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-824
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | String |'
  id: totrans-825
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `ibdata1:12M:autoextend` |'
  id: totrans-826
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ibdata1:12M:autoextend` |'
- en: Defines the name, size, and attributes of `InnoDB` system tablespace data files.
    If you do not specify a value for [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path),
    the default behavior is to create a single auto-extending data file, slightly
    larger than 12MB, named `ibdata1`.
  id: totrans-827
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义`InnoDB`系统表空间数据文件的名称、大小和属性。如果未为[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)指定值，则默认行为是创建一个稍大于12MB的单个自动扩展数据文件，命名为`ibdata1`。
- en: 'The full syntax for a data file specification includes the file name, file
    size, `autoextend` attribute, and `max` attribute:'
  id: totrans-828
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据文件规范的完整语法包括文件名、文件大小、`autoextend`属性和`max`属性：
- en: '[PRE1]'
  id: totrans-829
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: File sizes are specified in kilobytes, megabytes, or gigabytes by appending
    `K`, `M` or `G` to the size value. If specifying the data file size in kilobytes,
    do so in multiples of 1024\. Otherwise, KB values are rounded to nearest megabyte
    (MB) boundary. The sum of file sizes must be, at a minimum, slightly larger than
    12MB.
  id: totrans-830
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文件大小通过在大小值后附加`K`、`M`或`G`来指定为千字节、兆字节或千兆字节。如果以千字节指定数据文件大小，请以1024的倍数进行。否则，KB值将四舍五入到最近的兆字节（MB）边界。文件大小之和必须至少略大于12MB。
- en: For additional configuration information, see [System Tablespace Data File Configuration](innodb-init-startup-configuration.html#innodb-startup-data-file-configuration
    "System Tablespace Data File Configuration"). For resizing instructions, see [Resizing
    the System Tablespace](innodb-system-tablespace.html#innodb-resize-system-tablespace
    "Resizing the System Tablespace").
  id: totrans-831
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关其他配置信息，请参阅[系统表空间数据文件配置](innodb-init-startup-configuration.html#innodb-startup-data-file-configuration
    "System Tablespace Data File Configuration")。有关调整大小的说明，请参阅[调整系统表空间大小](innodb-system-tablespace.html#innodb-resize-system-tablespace
    "Resizing the System Tablespace")。
- en: '[`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)'
  id: totrans-832
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)'
- en: '| Command-Line Format | `--innodb-data-home-dir=dir_name` |'
  id: totrans-833
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-data-home-dir=dir_name` |'
- en: '| System Variable | `[innodb_data_home_dir](innodb-parameters.html#sysvar_innodb_data_home_dir)`
    |'
  id: totrans-834
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_data_home_dir](innodb-parameters.html#sysvar_innodb_data_home_dir)`
    |'
- en: '| Scope | Global |'
  id: totrans-835
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-836
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-837
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Directory name |'
  id: totrans-838
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: The common part of the directory path for `InnoDB` [system tablespace](glossary.html#glos_system_tablespace
    "system tablespace") data files. The default value is the MySQL `data` directory.
    The setting is concatenated with the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting, unless that setting is defined with an absolute path.
  id: totrans-839
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`[系统表空间](glossary.html#glos_system_tablespace "系统表空间")数据文件的目录路径的公共部分。默认值为MySQL的`data`目录。该设置与[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)设置连接在一起，除非该设置使用绝对路径定义。'
- en: 'A trailing slash is required when specifying a value for [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir).
    For example:'
  id: totrans-840
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在为[`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)指定值时，需要添加尾随斜杠。例如：
- en: '[PRE2]'
  id: totrans-841
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This setting does not affect the location of [file-per-table](glossary.html#glos_file_per_table
    "file-per-table") tablespaces.
  id: totrans-842
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此设置不影响[file-per-table](glossary.html#glos_file_per_table "file-per-table")表空间的位置。
- en: For related information, see [Section 17.8.1, “InnoDB Startup Configuration”](innodb-init-startup-configuration.html
    "17.8.1 InnoDB Startup Configuration").
  id: totrans-843
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关信息，请参阅[第17.8.1节，“InnoDB启动配置”](innodb-init-startup-configuration.html "17.8.1 InnoDB
    Startup Configuration")。
- en: '[`innodb_ddl_buffer_size`](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)'
  id: totrans-844
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ddl_buffer_size`](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)'
- en: '| Command-Line Format | `--innodb-ddl-buffer-size=#` |'
  id: totrans-845
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ddl-buffer-size=#` |'
- en: '| Introduced | 8.0.27 |'
  id: totrans-846
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.27 |'
- en: '| System Variable | `[innodb_ddl_buffer_size](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)`
    |'
  id: totrans-847
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ddl_buffer_size](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-848
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-849
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-850
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-851
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1048576` |'
  id: totrans-852
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1048576` |'
- en: '| Minimum Value | `65536` |'
  id: totrans-853
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `65536` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-854
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: '| Unit | bytes |'
  id: totrans-855
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: Defines the maximum buffer size for DDL operations. The default setting is 1048576
    bytes (approximately 1 MB). Applies to online DDL operations that create or rebuild
    secondary indexes. See [Section 17.12.4, “Online DDL Memory Management”](online-ddl-memory-management.html
    "17.12.4 Online DDL Memory Management"). The maximum buffer size per DDL thread
    is the maximum buffer size divided by the number of DDL threads ([`innodb_ddl_buffer_size`](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)/[`innodb_ddl_threads`](innodb-parameters.html#sysvar_innodb_ddl_threads)).
  id: totrans-856
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了DDL操作的最大缓冲区大小。默认设置为1048576字节（约1 MB）。适用于创建或重建二级索引的在线DDL操作。请参见[第17.12.4节，“在线DDL内存管理”](online-ddl-memory-management.html
    "17.12.4 在线DDL内存管理")。每个DDL线程的最大缓冲区大小是最大缓冲区大小除以DDL线程数（[`innodb_ddl_buffer_size`](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)/[`innodb_ddl_threads`](innodb-parameters.html#sysvar_innodb_ddl_threads)）。
- en: '[`innodb_ddl_log_crash_reset_debug`](innodb-parameters.html#sysvar_innodb_ddl_log_crash_reset_debug)'
  id: totrans-857
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ddl_log_crash_reset_debug`](innodb-parameters.html#sysvar_innodb_ddl_log_crash_reset_debug)'
- en: '| Command-Line Format | `--innodb-ddl-log-crash-reset-debug[={OFF&#124;ON}]`
    |'
  id: totrans-858
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ddl-log-crash-reset-debug[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_ddl_log_crash_reset_debug](innodb-parameters.html#sysvar_innodb_ddl_log_crash_reset_debug)`
    |'
  id: totrans-859
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ddl_log_crash_reset_debug](innodb-parameters.html#sysvar_innodb_ddl_log_crash_reset_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-860
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-861
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-862
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Boolean |'
  id: totrans-863
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-864
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enable this debug option to reset DDL log crash injection counters to 1\. This
    option is only available when debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-865
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此调试选项可将DDL日志崩溃注入计数器重置为1。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译时才可用。
- en: '[`innodb_ddl_threads`](innodb-parameters.html#sysvar_innodb_ddl_threads)'
  id: totrans-866
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ddl_threads`](innodb-parameters.html#sysvar_innodb_ddl_threads)'
- en: '| Command-Line Format | `--innodb-ddl-threads=#` |'
  id: totrans-867
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ddl-threads=#` |'
- en: '| Introduced | 8.0.27 |'
  id: totrans-868
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.27 |'
- en: '| System Variable | `[innodb_ddl_threads](innodb-parameters.html#sysvar_innodb_ddl_threads)`
    |'
  id: totrans-869
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ddl_threads](innodb-parameters.html#sysvar_innodb_ddl_threads)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-870
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-871
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-872
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Integer |'
  id: totrans-873
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `4` |'
  id: totrans-874
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `4` |'
- en: '| Minimum Value | `1` |'
  id: totrans-875
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `64` |'
  id: totrans-876
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `64` |'
- en: Defines the maximum number of parallel threads for the sort and build phases
    of index creation. Applies to online DDL operations that create or rebuild secondary
    indexes. For related information, see [Section 17.12.5, “Configuring Parallel
    Threads for Online DDL Operations”](online-ddl-parallel-thread-configuration.html
    "17.12.5 Configuring Parallel Threads for Online DDL Operations"), and [Section 17.12.4,
    “Online DDL Memory Management”](online-ddl-memory-management.html "17.12.4 Online
    DDL Memory Management").
  id: totrans-877
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了索引创建的排序和构建阶段的最大并行线程数。适用于创建或重建二级索引的在线DDL操作。有关更多信息，请参见[第17.12.5节，“配置在线DDL操作的并行线程”](online-ddl-parallel-thread-configuration.html
    "17.12.5 配置在线DDL操作的并行线程")和[第17.12.4节，“在线DDL内存管理”](online-ddl-memory-management.html
    "17.12.4 在线DDL内存管理")。
- en: '[`innodb_deadlock_detect`](innodb-parameters.html#sysvar_innodb_deadlock_detect)'
  id: totrans-878
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_deadlock_detect`](innodb-parameters.html#sysvar_innodb_deadlock_detect)'
- en: '| Command-Line Format | `--innodb-deadlock-detect[={OFF&#124;ON}]` |'
  id: totrans-879
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-deadlock-detect[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_deadlock_detect](innodb-parameters.html#sysvar_innodb_deadlock_detect)`
    |'
  id: totrans-880
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_deadlock_detect](innodb-parameters.html#sysvar_innodb_deadlock_detect)`
    |'
- en: '| Scope | Global |'
  id: totrans-881
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-882
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-883
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Boolean |'
  id: totrans-884
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-885
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: This option is used to disable deadlock detection. On high concurrency systems,
    deadlock detection can cause a slowdown when numerous threads wait for the same
    lock. At times, it may be more efficient to disable deadlock detection and rely
    on the [`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    setting for transaction rollback when a deadlock occurs.
  id: totrans-886
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项用于禁用死锁检测。在高并发系统中，死锁检测可能导致大量线程等待同一锁时减速。有时，更有效的做法是禁用死锁检测，并依赖于[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)设置在死锁发生时进行事务回滚。
- en: For related information, see [Section 17.7.5.2, “Deadlock Detection”](innodb-deadlock-detection.html
    "17.7.5.2 Deadlock Detection").
  id: totrans-887
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第17.7.5.2节，“死锁检测”](innodb-deadlock-detection.html "17.7.5.2 死锁检测")。
- en: '[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)'
  id: totrans-888
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)'
- en: '| Command-Line Format | `--innodb-dedicated-server[={OFF&#124;ON}]` |'
  id: totrans-889
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-dedicated-server[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_dedicated_server](innodb-parameters.html#sysvar_innodb_dedicated_server)`
    |'
  id: totrans-890
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_dedicated_server](innodb-parameters.html#sysvar_innodb_dedicated_server)`
    |'
- en: '| Scope | Global |'
  id: totrans-891
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-892
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-893
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-894
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-895
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: 'When [`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)
    is enabled, `InnoDB` automatically configures the following variables:'
  id: totrans-896
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)时，`InnoDB`会自动配置以下变量：
- en: '[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)'
  id: totrans-897
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)'
- en: '[`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)
    or, prior to MySQL 8.0.30, [`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    and [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group).'
  id: totrans-898
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)或在MySQL
    8.0.30之前，[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)和[`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)。'
- en: Note
  id: totrans-899
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '`innodb_log_file_size` and `innodb_log_files_in_group` are deprecated in MySQL
    8.0.30\. These variables are superseded by `innodb_redo_log_capacity`. For more
    information, see [Section 17.6.5, “Redo Log”](innodb-redo-log.html "17.6.5 Redo
    Log").'
  id: totrans-900
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`innodb_log_file_size`和`innodb_log_files_in_group`在MySQL 8.0.30中已弃用。这些变量已被`innodb_redo_log_capacity`取代。有关更多信息，请参阅[第17.6.5节，“重做日志”](innodb-redo-log.html
    "17.6.5 重做日志")。'
- en: '[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)'
  id: totrans-901
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)'
- en: Only consider enabling [`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)
    if the MySQL instance resides on a dedicated server where it can use all available
    system resources. Enabling [`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)
    is not recommended if the MySQL instance shares system resources with other applications.
  id: totrans-902
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只有在MySQL实例位于可以使用所有可用系统资源的专用服务器上时，才考虑启用[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)。如果MySQL实例与其他应用程序共享系统资源，则不建议启用[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)。
- en: For more information, see [Section 17.8.12, “Enabling Automatic Configuration
    for a Dedicated MySQL Server”](innodb-dedicated-server.html "17.8.12 Enabling
    Automatic Configuration for a Dedicated MySQL Server").
  id: totrans-903
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第17.8.12节，“为专用MySQL服务器启用自动配置”](innodb-dedicated-server.html "17.8.12 为专用MySQL服务器启用自动配置")。
- en: '[`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)'
  id: totrans-904
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)'
- en: '| Command-Line Format | `--innodb-default-row-format=value` |'
  id: totrans-905
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-default-row-format=value` |'
- en: '| System Variable | `[innodb_default_row_format](innodb-parameters.html#sysvar_innodb_default_row_format)`
    |'
  id: totrans-906
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_default_row_format](innodb-parameters.html#sysvar_innodb_default_row_format)`
    |'
- en: '| Scope | Global |'
  id: totrans-907
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-908
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-909
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-910
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `DYNAMIC` |'
  id: totrans-911
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `DYNAMIC` |'
- en: '| Valid Values | `REDUNDANT``COMPACT``DYNAMIC` |'
  id: totrans-912
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `REDUNDANT``COMPACT``DYNAMIC` |'
- en: The [`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)
    option defines the default row format for `InnoDB` tables and user-created temporary
    tables. The default setting is `DYNAMIC`. Other permitted values are `COMPACT`
    and `REDUNDANT`. The `COMPRESSED` row format, which is not supported for use in
    the [system tablespace](glossary.html#glos_system_tablespace "system tablespace"),
    cannot be defined as the default.
  id: totrans-913
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)选项定义了`InnoDB`表和用户创建的临时表的默认行格式。默认设置为`DYNAMIC`。其他允许的值为`COMPACT`和`REDUNDANT`。不支持在[系统表空间](glossary.html#glos_system_tablespace
    "系统表空间")中使用的`COMPRESSED`行格式不能定义为默认值。'
- en: Newly created tables use the row format defined by [`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)
    when a `ROW_FORMAT` option is not specified explicitly or when `ROW_FORMAT=DEFAULT`
    is used.
  id: totrans-914
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新创建的表在未明确指定`ROW_FORMAT`选项或使用`ROW_FORMAT=DEFAULT`时，会使用由[`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)定义的行格式。
- en: When a `ROW_FORMAT` option is not specified explicitly or when `ROW_FORMAT=DEFAULT`
    is used, any operation that rebuilds a table also silently changes the row format
    of the table to the format defined by [`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format).
    For more information, see [Defining the Row Format of a Table](innodb-row-format.html#innodb-row-format-defining
    "Defining the Row Format of a Table").
  id: totrans-915
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当未明确指定`ROW_FORMAT`选项或使用`ROW_FORMAT=DEFAULT`时，任何重建表的操作都会悄无声息地将表的行格式更改为由[`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)定义的格式。更多信息，请参阅[定义表的行格式](innodb-row-format.html#innodb-row-format-defining
    "定义表的行格式")。
- en: Internal `InnoDB` temporary tables created by the server to process queries
    use the `DYNAMIC` row format, regardless of the [`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)
    setting.
  id: totrans-916
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器为处理查询而创建的内部`InnoDB`临时表使用`DYNAMIC`行格式，不受[`innodb_default_row_format`](innodb-parameters.html#sysvar_innodb_default_row_format)设置的影响。
- en: '[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)'
  id: totrans-917
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)'
- en: '| Command-Line Format | `--innodb-directories=dir_name` |'
  id: totrans-918
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-directories=dir_name` |'
- en: '| System Variable | `[innodb_directories](innodb-parameters.html#sysvar_innodb_directories)`
    |'
  id: totrans-919
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    |'
- en: '| Scope | Global |'
  id: totrans-920
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-921
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-922
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Directory name |'
  id: totrans-923
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: '| Default Value | `NULL` |'
  id: totrans-924
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NULL` |'
- en: Defines directories to scan at startup for tablespace files. This option is
    used when moving or restoring tablespace files to a new location while the server
    is offline. It is also used to specify directories of tablespace files created
    using an absolute path or that reside outside of the data directory.
  id: totrans-925
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义在启动时扫描用于表空间文件的目录。在服务器离线时移动或恢复表空间文件到新位置时使用此选项。还用于指定使用绝对路径创建或位于数据目录之外的表空间文件的目录。
- en: Tablespace discovery during crash recovery relies on the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    setting to identify tablespaces referenced in the redo logs. For more information,
    see [Tablespace Discovery During Crash Recovery](innodb-recovery.html#innodb-recovery-tablespace-discovery
    "Tablespace Discovery During Crash Recovery").
  id: totrans-926
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在崩溃恢复期间，表空间的发现依赖于[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)设置来识别重做日志中引用的表空间。更多信息，请参阅[崩溃恢复期间的表空间发现](innodb-recovery.html#innoDB-recovery-tablespace-discovery
    "崩溃恢复期间的表空间发现")。
- en: The default value is NULL, but directories defined by [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir),
    [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory),
    and [`datadir`](server-system-variables.html#sysvar_datadir) are always appended
    to the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    argument value when `InnoDB` builds a list of directories to scan at startup.
    These directories are appended regardless of whether an [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    setting is specified explicitly.
  id: totrans-927
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为NULL，但由[`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)、[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)和[`datadir`](server-system-variables.html#sysvar_datadir)定义的目录始终会在`InnoDB`在启动时构建要扫描的目录列表时附加到[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)参数值。这些目录会被附加，无论是否明确指定了[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)设置。
- en: '[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories) may
    be specified as an option in a startup command or in a MySQL option file. Quotes
    surround the argument value because otherwise some command interpreters interpret
    semicolon (`;`) as a special character. (For example, Unix shells treat it as
    a command terminator.)'
  id: totrans-928
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)可以作为启动命令中的选项或MySQL选项文件中的选项指定。引号包围参数值，否则某些命令解释器会将分号（`;`）解释为特殊字符。（例如，Unix
    shell将其视为命令终止符。）'
- en: 'Startup command:'
  id: totrans-929
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启动命令：
- en: '[PRE3]'
  id: totrans-930
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'MySQL option file:'
  id: totrans-931
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL选项文件：
- en: '[PRE4]'
  id: totrans-932
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Wildcard expressions cannot be used to specify directories.
  id: totrans-933
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不能使用通配符表达式来指定目录。
- en: The [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    scan also traverses the subdirectories of specified directories. Duplicate directories
    and subdirectories are discarded from the list of directories to be scanned.
  id: totrans-934
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)扫描还会遍历指���目录的子目录。重复的目录和子目录将从要扫描的目录列表中丢弃。'
- en: For more information, see [Section 17.6.3.6, “Moving Tablespace Files While
    the Server is Offline”](innodb-moving-data-files-offline.html "17.6.3.6 Moving
    Tablespace Files While the Server is Offline").
  id: totrans-935
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.6.3.6节，“服务器离线时移动表空间文件”](innodb-moving-data-files-offline.html
    "17.6.3.6 服务器离线时移动表空间文件")。
- en: '[`innodb_disable_sort_file_cache`](innodb-parameters.html#sysvar_innodb_disable_sort_file_cache)'
  id: totrans-936
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_disable_sort_file_cache`](innodb-parameters.html#sysvar_innodb_disable_sort_file_cache)'
- en: '| Command-Line Format | `--innodb-disable-sort-file-cache[={OFF&#124;ON}]`
    |'
  id: totrans-937
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-disable-sort-file-cache[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_disable_sort_file_cache](innodb-parameters.html#sysvar_innodb_disable_sort_file_cache)`
    |'
  id: totrans-938
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_disable_sort_file_cache](innodb-parameters.html#sysvar_innodb_disable_sort_file_cache)`
    |'
- en: '| Scope | Global |'
  id: totrans-939
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-940
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-941
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-942
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-943
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Disables the operating system file system cache for merge-sort temporary files.
    The effect is to open such files with the equivalent of `O_DIRECT`.
  id: totrans-944
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 禁用合并排序临时文件的操作系统文件系统缓存。效果是以`O_DIRECT`的等效方式打开这些文件。
- en: '[`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)'
  id: totrans-945
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)'
- en: '| Command-Line Format | `--innodb-doublewrite=value` (≥ 8.0.30)`--innodb-doublewrite[={OFF&#124;ON}]`
    (≤ 8.0.29) |'
  id: totrans-946
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-doublewrite=value`（≥ 8.0.30）`--innodb-doublewrite[={OFF&#124;ON}]`（≤
    8.0.29） |'
- en: '| System Variable | `[innodb_doublewrite](innodb-parameters.html#sysvar_innodb_doublewrite)`
    |'
  id: totrans-947
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_doublewrite](innodb-parameters.html#sysvar_innodb_doublewrite)`
    |'
- en: '| Scope | Global |'
  id: totrans-948
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic (≥ 8.0.30) | Yes |'
  id: totrans-949
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态（≥ 8.0.30） | 是 |'
- en: '| Dynamic (≤ 8.0.29) | No |'
  id: totrans-950
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态（≤ 8.0.29） | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-951
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type (≥ 8.0.30) | Enumeration |'
  id: totrans-952
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型（≥ 8.0.30） | 枚举 |'
- en: '| Type (≤ 8.0.29) | Boolean |'
  id: totrans-953
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型（≤ 8.0.29） | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-954
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: '| Valid Values | `ON``OFF``DETECT_AND_RECOVER``DETECT_ONLY` |'
  id: totrans-955
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `ON``OFF``DETECT_AND_RECOVER``DETECT_ONLY` |'
- en: The [`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)
    variable controls doublewrite buffering. Doublewrite buffering is enabled by default
    in most cases.
  id: totrans-956
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)变量控制双写缓冲。在大多数情况下，默认情况下启用双写缓冲。'
- en: Prior to MySQL 8.0.30, you can set [`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)
    to `ON` or `OFF` when starting the server to enable or disable doublewrite buffering,
    respectively. From MySQL 8.0.30, [`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)
    also supports `DETECT_AND_RECOVER` and `DETECT_ONLY` settings.
  id: totrans-957
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.30之前，您可以在启动服务器时将[`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)设置为`ON`或`OFF`以分别启用或禁用双写缓冲，从MySQL
    8.0.30开始，[`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)还支持`DETECT_AND_RECOVER`和`DETECT_ONLY`设置。
- en: The `DETECT_AND_RECOVER` setting is the same as the `ON` setting. With this
    setting, the doublewrite buffer is fully enabled, with database page content written
    to the doublewrite buffer where it is accessed during recovery to fix incomplete
    page writes.
  id: totrans-958
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`DETECT_AND_RECOVER`设置与`ON`设置相同。使用此设置，双写缓冲区完全启用，数据库页面内容被写入双写缓冲区，在恢复过程中访问以修复不完整的页面写入。'
- en: With the `DETECT_ONLY` setting, only metadata is written to the doublewrite
    buffer. Database page content is not written to the doublewrite buffer, and recovery
    does not use the doublewrite buffer to fix incomplete page writes. This lightweight
    setting is intended for detecting incomplete page writes only.
  id: totrans-959
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`DETECT_ONLY`设置时，只有元数据被写入双写缓冲区。数据库页面内容不会被写入双写缓冲区，并且恢复不使用双写缓冲区来修复不完整的页面写入。此轻量级设置仅用于检测不完整的页面写入。
- en: MySQL 8.0.30 onwards supports dynamic changes to the [`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)
    setting that enables the doublewrite buffer, between `ON`, `DETECT_AND_RECOVER`,
    and `DETECT_ONLY`. MySQL does not support dynamic changes between a setting that
    enables the doublewrite buffer and `OFF` or vice versa.
  id: totrans-960
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL 8.0.30及更高版本支持动态更改[`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)设置，可以在`ON`、`DETECT_AND_RECOVER`和`DETECT_ONLY`之间启用双写缓冲区。MySQL不支持在启用双写缓冲区和`OFF`之间进行动态更改。
- en: If the doublewrite buffer is located on a Fusion-io device that supports atomic
    writes, the doublewrite buffer is automatically disabled and data file writes
    are performed using Fusion-io atomic writes instead. However, be aware that the
    [`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite) setting
    is global. When the doublewrite buffer is disabled, it is disabled for all data
    files including those that do not reside on Fusion-io hardware. This feature is
    only supported on Fusion-io hardware and is only enabled for Fusion-io NVMFS on
    Linux. To take full advantage of this feature, an [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    setting of `O_DIRECT` is recommended.
  id: totrans-961
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果双写缓冲区位于支持原子写入的Fusion-io设备上，则双写缓冲区将自动禁用，并且数据文件写入将使用Fusion-io原子写入。但是，请注意[`innodb_doublewrite`](innodb-parameters.html#sysvar_innodb_doublewrite)设置是全局的。当双写缓冲区被禁用时，所有数据文件都被禁用，包括那些不位于Fusion-io硬件上的文件。此功能仅在Fusion-io硬件上受支持，并且仅在Linux上为Fusion-io
    NVMFS启用。为了充分利用此功能，建议将[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)设置为`O_DIRECT`。
- en: For related information, see [Section 17.6.4, “Doublewrite Buffer”](innodb-doublewrite-buffer.html
    "17.6.4 Doublewrite Buffer").
  id: totrans-962
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参见[第17.6.4节，“双写缓冲区”](innodb-doublewrite-buffer.html "17.6.4 双写缓冲区")。
- en: '[`innodb_doublewrite_batch_size`](innodb-parameters.html#sysvar_innodb_doublewrite_batch_size)'
  id: totrans-963
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_doublewrite_batch_size`](innodb-parameters.html#sysvar_innodb_doublewrite_batch_size)'
- en: '| Command-Line Format | `--innodb-doublewrite-batch-size=#` |'
  id: totrans-964
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-doublewrite-batch-size=#` |'
- en: '| Introduced | 8.0.20 |'
  id: totrans-965
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.20 |'
- en: '| System Variable | `[innodb_doublewrite_batch_size](innodb-parameters.html#sysvar_innodb_doublewrite_batch_size)`
    |'
  id: totrans-966
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_doublewrite_batch_size](innodb-parameters.html#sysvar_innodb_doublewrite_batch_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-967
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-968
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-969
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-970
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-971
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-972
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `256` |'
  id: totrans-973
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `256` |'
- en: Defines the number of doublewrite pages to write in a batch.
  id: totrans-974
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义要批量写入的双写页面数。
- en: For more information, see [Section 17.6.4, “Doublewrite Buffer”](innodb-doublewrite-buffer.html
    "17.6.4 Doublewrite Buffer").
  id: totrans-975
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.6.4节，“双写缓冲区”](innodb-doublewrite-buffer.html "17.6.4 双写缓冲区")。
- en: '[`innodb_doublewrite_dir`](innodb-parameters.html#sysvar_innodb_doublewrite_dir)'
  id: totrans-976
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_doublewrite_dir`](innodb-parameters.html#sysvar_innodb_doublewrite_dir)'
- en: '| Command-Line Format | `--innodb-doublewrite-dir=dir_name` |'
  id: totrans-977
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-doublewrite-dir=dir_name` |'
- en: '| Introduced | 8.0.20 |'
  id: totrans-978
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.20 |'
- en: '| System Variable | `[innodb_doublewrite_dir](innodb-parameters.html#sysvar_innodb_doublewrite_dir)`
    |'
  id: totrans-979
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_doublewrite_dir](innodb-parameters.html#sysvar_innodb_doublewrite_dir)`
    |'
- en: '| Scope | Global |'
  id: totrans-980
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-981
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-982
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Directory name |'
  id: totrans-983
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: Defines the directory for doublewrite files. If no directory is specified, doublewrite
    files are created in the [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)
    directory, which defaults to the data directory if unspecified.
  id: totrans-984
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义双写文件的目录。如果未指定目录，则双写文件将在[`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)目录中创建，默认情况下为数据目录（如果未指定）。
- en: For more information, see [Section 17.6.4, “Doublewrite Buffer”](innodb-doublewrite-buffer.html
    "17.6.4 Doublewrite Buffer").
  id: totrans-985
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第17.6.4节，“双写缓冲区”](innodb-doublewrite-buffer.html "17.6.4 双写缓冲区")。
- en: '[`innodb_doublewrite_files`](innodb-parameters.html#sysvar_innodb_doublewrite_files)'
  id: totrans-986
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_doublewrite_files`](innodb-parameters.html#sysvar_innodb_doublewrite_files)'
- en: '| Command-Line Format | `--innodb-doublewrite-files=#` |'
  id: totrans-987
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-doublewrite-files=#` |'
- en: '| Introduced | 8.0.20 |'
  id: totrans-988
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.20 |'
- en: '| System Variable | `[innodb_doublewrite_files](innodb-parameters.html#sysvar_innodb_doublewrite_files)`
    |'
  id: totrans-989
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_doublewrite_files](innodb-parameters.html#sysvar_innodb_doublewrite_files)`
    |'
- en: '| Scope | Global |'
  id: totrans-990
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-991
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-992
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-993
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `innodb_buffer_pool_instances * 2` |'
  id: totrans-994
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `innodb_buffer_pool_instances * 2` |'
- en: '| Minimum Value | `2` |'
  id: totrans-995
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `2` |'
- en: '| Maximum Value | `256` |'
  id: totrans-996
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `256` |'
- en: Defines the number of doublewrite files. By default, two doublewrite files are
    created for each buffer pool instance.
  id: totrans-997
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义双写文件的数量。默认情况下，为每个缓冲池实例创建两个双写文件。
- en: At a minimum, there are two doublewrite files. The maximum number of doublewrite
    files is two times the number of buffer pool instances. (The number of buffer
    pool instances is controlled by the [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    variable.)
  id: totrans-998
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 至少有两个双写文件。双写文件的最大数量是缓冲池实例数量的两倍。（缓冲池实例数量由[`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)变量控制。）
- en: For more information, see [Section 17.6.4, “Doublewrite Buffer”](innodb-doublewrite-buffer.html
    "17.6.4 Doublewrite Buffer").
  id: totrans-999
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第17.6.4节，“双写缓冲区”](innodb-doublewrite-buffer.html "17.6.4 双写缓冲区")。
- en: '[`innodb_doublewrite_pages`](innodb-parameters.html#sysvar_innodb_doublewrite_pages)'
  id: totrans-1000
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_doublewrite_pages`](innodb-parameters.html#sysvar_innodb_doublewrite_pages)'
- en: '| Command-Line Format | `--innodb-doublewrite-pages=#` |'
  id: totrans-1001
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-doublewrite-pages=#` |'
- en: '| Introduced | 8.0.20 |'
  id: totrans-1002
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.20 |'
- en: '| System Variable | `[innodb_doublewrite_pages](innodb-parameters.html#sysvar_innodb_doublewrite_pages)`
    |'
  id: totrans-1003
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_doublewrite_pages](innodb-parameters.html#sysvar_innodb_doublewrite_pages)`
    |'
- en: '| Scope | Global |'
  id: totrans-1004
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1005
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1006
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1007
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `innodb_write_io_threads value` |'
  id: totrans-1008
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `innodb_write_io_threads value` |'
- en: '| Minimum Value | `innodb_write_io_threads value` |'
  id: totrans-1009
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `innodb_write_io_threads value` |'
- en: '| Maximum Value | `512` |'
  id: totrans-1010
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `512` |'
- en: Defines the maximum number of doublewrite pages per thread for a batch write.
    If no value is specified, [`innodb_doublewrite_pages`](innodb-parameters.html#sysvar_innodb_doublewrite_pages)
    is set to the [`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads)
    value.
  id: totrans-1011
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义每个线程的批量写入的双写页面的最大数量。如果未指定值，则[`innodb_doublewrite_pages`](innodb-parameters.html#sysvar_innodb_doublewrite_pages)设置为[`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads)的值。
- en: For more information, see [Section 17.6.4, “Doublewrite Buffer”](innodb-doublewrite-buffer.html
    "17.6.4 Doublewrite Buffer").
  id: totrans-1012
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第17.6.4节，“双写缓冲区”](innodb-doublewrite-buffer.html "17.6.4 双写缓冲区")。
- en: '[`innodb_extend_and_initialize`](innodb-parameters.html#sysvar_innodb_extend_and_initialize)'
  id: totrans-1013
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_extend_and_initialize`](innodb-parameters.html#sysvar_innodb_extend_and_initialize)'
- en: '| Command-Line Format | `--innodb=extend-and-initialize[={OFF&#124;ON}]` |'
  id: totrans-1014
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb=extend-and-initialize[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.22 |'
  id: totrans-1015
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.22 |'
- en: '| System Variable | `[innodb_extend_and_initialize](innodb-parameters.html#sysvar_innodb_extend_and_initialize)`
    |'
  id: totrans-1016
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_extend_and_initialize](innodb-parameters.html#sysvar_innodb_extend_and_initialize)`
    |'
- en: '| Scope | Global |'
  id: totrans-1017
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1018
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1019
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1020
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-1021
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Controls how space is allocated to file-per-table and general tablespaces on
    Linux systems.
  id: totrans-1022
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制在Linux系统上为每个表和通用表空间分配空间的方式。
- en: When enabled, `InnoDB` writes NULLs to newly allocated pages. When disabled,
    space is allocated using `posix_fallocate()` calls, which reserve space without
    physically writing NULLs.
  id: totrans-1023
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用时，`InnoDB`会将NULL写入新分配的页面。禁用时，空间是通过`posix_fallocate()`调用进行分配的，该调用保留空间而不实际写入NULL。
- en: For more information, see [Section 17.6.3.8, “Optimizing Tablespace Space Allocation
    on Linux”](innodb-optimize-tablespace-page-allocation.html "17.6.3.8 Optimizing
    Tablespace Space Allocation on Linux").
  id: totrans-1024
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[第17.6.3.8节，“优化Linux上的表空间空间分配”](innodb-optimize-tablespace-page-allocation.html
    "17.6.3.8 优化Linux上的表空间空间分配")。
- en: '[`innodb_fast_shutdown`](innodb-parameters.html#sysvar_innodb_fast_shutdown)'
  id: totrans-1025
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_fast_shutdown`](innodb-parameters.html#sysvar_innodb_fast_shutdown)'
- en: '| Command-Line Format | `--innodb-fast-shutdown=#` |'
  id: totrans-1026
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-fast-shutdown=#` |'
- en: '| System Variable | `[innodb_fast_shutdown](innodb-parameters.html#sysvar_innodb_fast_shutdown)`
    |'
  id: totrans-1027
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_fast_shutdown](innodb-parameters.html#sysvar_innodb_fast_shutdown)`
    |'
- en: '| Scope | Global |'
  id: totrans-1028
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1029
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1030
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1031
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1` |'
  id: totrans-1032
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1` |'
- en: '| Valid Values | `0``1``2` |'
  id: totrans-1033
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `0``1``2` |'
- en: The `InnoDB` [shutdown](glossary.html#glos_shutdown "shutdown") mode. If the
    value is 0, `InnoDB` does a [slow shutdown](glossary.html#glos_slow_shutdown "slow
    shutdown"), a full [purge](glossary.html#glos_purge "purge") and a change buffer
    merge before shutting down. If the value is 1 (the default), `InnoDB` skips these
    operations at shutdown, a process known as a [fast shutdown](glossary.html#glos_fast_shutdown
    "fast shutdown"). If the value is 2, `InnoDB` flushes its logs and shuts down
    cold, as if MySQL had crashed; no committed transactions are lost, but the [crash
    recovery](glossary.html#glos_crash_recovery "crash recovery") operation makes
    the next startup take longer.
  id: totrans-1034
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [关闭](glossary.html#glos_shutdown "关闭")模式。如果值为0，则`InnoDB`在关闭之前执行[慢关闭](glossary.html#glos_slow_shutdown
    "慢关闭")、完全[清理](glossary.html#glos_purge "清理")和更改缓冲区合并。如果值为1（默认值），`InnoDB`在关闭时跳过这些操作，这个过程称为[快速关闭](glossary.html#glos_fast_shutdown
    "快速关闭")。如果值为2，则`InnoDB`刷新其日志并冷静���闭，就像MySQL崩溃了一样；没有提交的事务会丢失，但[崩溃恢复](glossary.html#glos_crash_recovery
    "崩溃恢复")操作会使下一次启动时间变长。'
- en: The slow shutdown can take minutes, or even hours in extreme cases where substantial
    amounts of data are still buffered. Use the slow shutdown technique before upgrading
    or downgrading between MySQL major releases, so that all data files are fully
    prepared in case the upgrade process updates the file format.
  id: totrans-1035
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 慢关闭可能需要几分钟，甚至在极端情况下，仍有大量数据缓冲时可能需要几个小时。在升级或降级MySQL主要版本之前，请使用慢关闭技术，以便在升级过程中更新文件格式时，所有数据文件都已准备就绪。
- en: Use [`innodb_fast_shutdown=2`](innodb-parameters.html#sysvar_innodb_fast_shutdown)
    in emergency or troubleshooting situations, to get the absolute fastest shutdown
    if data is at risk of corruption.
  id: totrans-1036
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在紧急情况或故障排除情况下使用[`innodb_fast_shutdown=2`](innodb-parameters.html#sysvar_innodb_fast_shutdown)，以获得绝对最快的关闭速度，如果数据有损坏风险。
- en: '[`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)'
  id: totrans-1037
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)'
- en: '| Command-Line Format | `--innodb-fil-make-page-dirty-debug=#` |'
  id: totrans-1038
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-fil-make-page-dirty-debug=#` |'
- en: '| System Variable | `[innodb_fil_make_page_dirty_debug](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)`
    |'
  id: totrans-1039
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_fil_make_page_dirty_debug](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-1040
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1041
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1042
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1043
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-1044
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1045
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `2**32-1` |'
  id: totrans-1046
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2**32-1` |'
- en: By default, setting [`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    to the ID of a tablespace immediately dirties the first page of the tablespace.
    If [`innodb_saved_page_number_debug`](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)
    is set to a non-default value, setting [`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    dirties the specified page. The [`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    option is only available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-1047
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，将 [`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    设置为表空间的 ID 会立即使表空间的第一页变脏。如果 [`innodb_saved_page_number_debug`](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)
    设置为非默认值，则设置 [`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    会使指定页变脏。只有在使用 [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译时，才能使用 [`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    选项。
- en: '[`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)'
  id: totrans-1048
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)'
- en: '| Command-Line Format | `--innodb-file-per-table[={OFF&#124;ON}]` |'
  id: totrans-1049
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-file-per-table[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_file_per_table](innodb-parameters.html#sysvar_innodb_file_per_table)`
    |'
  id: totrans-1050
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_file_per_table](innodb-parameters.html#sysvar_innodb_file_per_table)`
    |'
- en: '| Scope | Global |'
  id: totrans-1051
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1052
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1053
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1054
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-1055
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: When [`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    is enabled, tables are created in file-per-table tablespaces by default. When
    disabled, tables are created in the system tablespace by default. For information
    about file-per-table tablespaces, see [Section 17.6.3.2, “File-Per-Table Tablespaces”](innodb-file-per-table-tablespaces.html
    "17.6.3.2 File-Per-Table Tablespaces"). For information about the `InnoDB` system
    tablespace, see [Section 17.6.3.1, “The System Tablespace”](innodb-system-tablespace.html
    "17.6.3.1 The System Tablespace").
  id: totrans-1056
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用 [`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    时，默认情况下表会在文件表空间中创建。当禁用时，默认情况下表会在系统表空间中创建。有关文件表空间的信息，请参阅 [第 17.6.3.2 节，“文件表空间”](innodb-file-per-table-tablespaces.html
    "17.6.3.2 文件表空间")。有关 `InnoDB` 系统表空间的信息，请参阅 [第 17.6.3.1 节，“系统表空间”](innodb-system-tablespace.html
    "17.6.3.1 系统表空间")。
- en: The [`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    variable can be configured at runtime using a [`SET GLOBAL`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment") statement, specified on the command
    line at startup, or specified in an option file. Configuration at runtime requires
    privileges sufficient to set global system variables (see [Section 7.1.9.1, “System
    Variable Privileges”](system-variable-privileges.html "7.1.9.1 System Variable
    Privileges")) and immediately affects the operation of all connections.
  id: totrans-1057
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    变量可以通过 [`SET GLOBAL`](set-variable.html "15.7.6.1 变量赋值的 SET 语法") 语句在运行时配置，在启动时在命令行上指定，或在选项文件中指定。在运行时配置需要足够的权限来设置全局系统变量（参见
    [第 7.1.9.1 节，“系统变量权限”](system-variable-privileges.html "7.1.9.1 系统变量权限")），并立即影响所有连接的操作。'
- en: When a table that resides in a file-per-table tablespace is truncated or dropped,
    the freed space is returned to the operating system. Truncating or dropping a
    table that resides in the system tablespace only frees space in the system tablespace.
    Freed space in the system tablespace can be used again for `InnoDB` data but is
    not returned to the operating system, as system tablespace data files never shrink.
  id: totrans-1058
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当位于文件表空间中的表被截断或删除时，释放的空间会返回给操作系统。截断或删除位于系统表空间中的表只会释放系统表空间中的空间。系统表空间中释放的空间可以再次用于
    `InnoDB` 数据，但不会返回给操作系统，因为系统表空间数据文件永远不会收缩。
- en: The [`innodb_file_per-table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    setting does not affect the creation of temporary tables. As of MySQL 8.0.14,
    temporary tables are created in session temporary tablespaces, and in the global
    temporary tablespace before that. See [Section 17.6.3.5, “Temporary Tablespaces”](innodb-temporary-tablespace.html
    "17.6.3.5 Temporary Tablespaces").
  id: totrans-1059
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_file_per-table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    设置不影响临时表的创建。从 MySQL 8.0.14 开始，临时表在会话临时表空间中创建，在此之前是在全局临时表空间中创建。请参阅 [第17.6.3.5节，“临时表空间”](innodb-temporary-tablespace.html
    "17.6.3.5 临时表空间")。'
- en: '[`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor)'
  id: totrans-1060
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor)'
- en: '| Command-Line Format | `--innodb-fill-factor=#` |'
  id: totrans-1061
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-fill-factor=#` |'
- en: '| System Variable | `[innodb_fill_factor](innodb-parameters.html#sysvar_innodb_fill_factor)`
    |'
  id: totrans-1062
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_fill_factor](innodb-parameters.html#sysvar_innodb_fill_factor)`
    |'
- en: '| Scope | Global |'
  id: totrans-1063
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1064
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1065
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1066
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `100` |'
  id: totrans-1067
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `100` |'
- en: '| Minimum Value | `10` |'
  id: totrans-1068
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `10` |'
- en: '| Maximum Value | `100` |'
  id: totrans-1069
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `100` |'
- en: '`InnoDB` performs a bulk load when creating or rebuilding indexes. This method
    of index creation is known as a “sorted index build”.'
  id: totrans-1070
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` 在创建或重建索引时执行批量加载。这种索引创建方法被称为“排序索引构建”。'
- en: '[`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor) defines
    the percentage of space on each B-tree page that is filled during a sorted index
    build, with the remaining space reserved for future index growth. For example,
    setting [`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor)
    to 80 reserves 20 percent of the space on each B-tree page for future index growth.
    Actual percentages may vary. The [`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor)
    setting is interpreted as a hint rather than a hard limit.'
  id: totrans-1071
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor) 定义了在排序索引构建期间填充在每个
    B 树页上的空间百分比，剩余空间保留用于未来的索引增长���例如，将 [`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor)
    设置为 80，将在每个 B 树页上保留 20% 的空间用于未来的索引增长。实际百分比可能有所不同。[`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor)
    设置被解释为提示而不是硬限制。'
- en: An [`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor)
    setting of 100 leaves 1/16 of the space in clustered index pages free for future
    index growth.
  id: totrans-1072
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 [`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor) 设置为
    100，将聚簇索引页中的 1/16 空间留给未来的索引增长。
- en: '[`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor) applies
    to both B-tree leaf and non-leaf pages. It does not apply to external pages used
    for [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types") or [`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types") entries.'
  id: totrans-1073
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_fill_factor`](innodb-parameters.html#sysvar_innodb_fill_factor) 适用于
    B 树叶子页和非叶子页。它不适用于用于 [`TEXT`](blob.html "13.3.4 BLOB 和 TEXT 类型") 或 [`BLOB`](blob.html
    "13.3.4 BLOB 和 TEXT 类型") 条目的外部页。'
- en: For more information, see [Section 17.6.2.3, “Sorted Index Builds”](sorted-index-builds.html
    "17.6.2.3 Sorted Index Builds").
  id: totrans-1074
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 [第17.6.2.3节，“排序索引构建”](sorted-index-builds.html "17.6.2.3 排序索引构建")。
- en: '[`innodb_flush_log_at_timeout`](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)'
  id: totrans-1075
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_flush_log_at_timeout`](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)'
- en: '| Command-Line Format | `--innodb-flush-log-at-timeout=#` |'
  id: totrans-1076
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-flush-log-at-timeout=#` |'
- en: '| System Variable | `[innodb_flush_log_at_timeout](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)`
    |'
  id: totrans-1077
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_flush_log_at_timeout](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)`
    |'
- en: '| Scope | Global |'
  id: totrans-1078
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1079
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1080
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1081
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1` |'
  id: totrans-1082
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1083
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `2700` |'
  id: totrans-1084
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2700` |'
- en: '| Unit | seconds |'
  id: totrans-1085
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 秒 |'
- en: Write and flush the logs every *`N`* seconds. [`innodb_flush_log_at_timeout`](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)
    allows the timeout period between flushes to be increased in order to reduce flushing
    and avoid impacting performance of binary log group commit. The default setting
    for [`innodb_flush_log_at_timeout`](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)
    is once per second.
  id: totrans-1086
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每隔*`N`*秒写入并刷新日志。[`innodb_flush_log_at_timeout`](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)允许增加刷新之间的超时时间，以减少刷新并避免影响二进制日志组提交的性能。[`innodb_flush_log_at_timeout`](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)的默认设置是每秒一次。
- en: '[`innodb_flush_log_at_trx_commit`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)'
  id: totrans-1087
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_flush_log_at_trx_commit`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)'
- en: '| Command-Line Format | `--innodb-flush-log-at-trx-commit=#` |'
  id: totrans-1088
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-flush-log-at-trx-commit=#` |'
- en: '| System Variable | `[innodb_flush_log_at_trx_commit](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)`
    |'
  id: totrans-1089
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_flush_log_at_trx_commit](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)`
    |'
- en: '| Scope | Global |'
  id: totrans-1090
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1091
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1092
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-1093
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `1` |'
  id: totrans-1094
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1` |'
- en: '| Valid Values | `0``1``2` |'
  id: totrans-1095
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `0``1``2` |'
- en: Controls the balance between strict [ACID](glossary.html#glos_acid "ACID") compliance
    for [commit](glossary.html#glos_commit "commit") operations and higher performance
    that is possible when commit-related I/O operations are rearranged and done in
    batches. You can achieve better performance by changing the default value but
    then you can lose transactions in a crash.
  id: totrans-1096
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制严格的[ACID](glossary.html#glos_acid "ACID")合规性和在重新排列和批量执行与提交相关的I/O操作时可能实现的更高性能之间的平衡。通过更改默认值，您可以获得更好的性能，但在崩溃时可能会丢失事务。
- en: The default setting of 1 is required for full ACID compliance. Logs are written
    and flushed to disk at each transaction commit.
  id: totrans-1097
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认设置为1是为了完全符合ACID要求。日志在每次事务提交时被写入并刷新到磁盘。
- en: With a setting of 0, logs are written and flushed to disk once per second. Transactions
    for which logs have not been flushed can be lost in a crash.
  id: totrans-1098
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置为0时，日志每秒写入并刷新到磁盘一次。在崩溃时可能会丢失未刷新日志的事务。
- en: With a setting of 2, logs are written after each transaction commit and flushed
    to disk once per second. Transactions for which logs have not been flushed can
    be lost in a crash.
  id: totrans-1099
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置为2时，日志在每次事务提交后写入并每秒刷新到磁盘一次。在崩溃时可能会丢失未刷新日志的事务。
- en: For settings 0 and 2, once-per-second flushing is not 100% guaranteed. Flushing
    may occur more frequently due to DDL changes and other internal `InnoDB` activities
    that cause logs to be flushed independently of the [`innodb_flush_log_at_trx_commit`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)
    setting, and sometimes less frequently due to scheduling issues. If logs are flushed
    once per second, up to one second of transactions can be lost in a crash. If logs
    are flushed more or less frequently than once per second, the amount of transactions
    that can be lost varies accordingly.
  id: totrans-1100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于设置为0和2的情况，每秒刷新并不是100%保证的。由于DDL更改和其他内部`InnoDB`活动可能导致日志独立于[`innodb_flush_log_at_trx_commit`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)设置而更频繁地刷新，有时由于调度问题而更少地刷新。如果日志每秒刷新一次，在崩溃时可能会丢失最多一秒钟的事务。如果日志的刷新频率高于或低于每秒一次，可能会相应地丢失不同数量的事务。
- en: Log flushing frequency is controlled by [`innodb_flush_log_at_timeout`](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout),
    which allows you to set log flushing frequency to *`N`* seconds (where *`N`* is
    `1 ... 2700`, with a default value of 1). However, any unexpected [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") process exit can erase up to *`N`* seconds
    of transactions.
  id: totrans-1101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志刷新频率由[`innodb_flush_log_at_timeout`](innodb-parameters.html#sysvar_innodb_flush_log_at_timeout)控制，允许您将日志刷新频率设置为*`N`*秒（其中*`N`*为`1
    ... 2700`，默认值为1）。然而，任何意外的[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")进程退出可能会擦除最多*`N`*秒的事务。
- en: DDL changes and other internal `InnoDB` activities flush the log independently
    of the [`innodb_flush_log_at_trx_commit`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)
    setting.
  id: totrans-1102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DDL更改和其他内部`InnoDB`活动会独立于[`innodb_flush_log_at_trx_commit`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)设置刷新日志。
- en: '`InnoDB` [crash recovery](glossary.html#glos_crash_recovery "crash recovery")
    works regardless of the [`innodb_flush_log_at_trx_commit`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)
    setting. Transactions are either applied entirely or erased entirely.'
  id: totrans-1103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB` [崩溃恢复](glossary.html#glos_crash_recovery "崩溃恢复")无论[`innodb_flush_log_at_trx_commit`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)设置如何都能正常工作。事务要么完全应用，要么完全擦除。'
- en: 'For durability and consistency in a replication setup that uses `InnoDB` with
    transactions:'
  id: totrans-1104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于使用带有事务的`InnoDB`的复制设置中的耐用性和一致性：
- en: If binary logging is enabled, set `sync_binlog=1`.
  id: totrans-1105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果启用了二进制日志记录，请设置`sync_binlog=1`。
- en: Always set [`innodb_flush_log_at_trx_commit=1`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit).
  id: totrans-1106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终设置[`innodb_flush_log_at_trx_commit=1`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)。
- en: For information on the combination of settings on a replica that is most resilient
    to unexpected halts, see [Section 19.4.2, “Handling an Unexpected Halt of a Replica”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 Handling an Unexpected Halt of a Replica").
  id: totrans-1107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于在复制品上组合设置的信息，以使其对意外停机最具弹性，请参阅[第19.4.2节，“处理复制品意外停机”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 处理复制品意外停机")。
- en: Caution
  id: totrans-1108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: Many operating systems and some disk hardware fool the flush-to-disk operation.
    They may tell [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") that
    the flush has taken place, even though it has not. In this case, the durability
    of transactions is not guaranteed even with the recommended settings, and in the
    worst case, a power outage can corrupt `InnoDB` data. Using a battery-backed disk
    cache in the SCSI disk controller or in the disk itself speeds up file flushes,
    and makes the operation safer. You can also try to disable the caching of disk
    writes in hardware caches.
  id: totrans-1109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 许多操作系统和一些磁盘硬件欺骗了刷新到磁盘的操作。它们可能会告诉[**mysqld**](mysqld.html "6.3.1 mysqld — MySQL服务器")刷新已经完成，尽管实际上并没有。在这种情况下，即使使用推荐的设置，事务的持久性也无法得到保证，最坏的情况下，断电可能会损坏`InnoDB`数据。在SCSI磁盘控制器或磁盘本身中使用带电池后备的磁盘缓存可以加快文件刷新速度，并使操作更安全。您还可以尝试禁用硬件缓存中的磁盘写入缓存。
- en: '[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)'
  id: totrans-1110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)'
- en: '| Command-Line Format | `--innodb-flush-method=value` |'
  id: totrans-1111
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-flush-method=value` |'
- en: '| System Variable | `[innodb_flush_method](innodb-parameters.html#sysvar_innodb_flush_method)`
    |'
  id: totrans-1112
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_flush_method](innodb-parameters.html#sysvar_innodb_flush_method)`
    |'
- en: '| Scope | Global |'
  id: totrans-1113
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1114
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1115
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-1116
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value (Unix) | `fsync` |'
  id: totrans-1117
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（Unix） | `fsync` |'
- en: '| Default Value (Windows) | `unbuffered` |'
  id: totrans-1118
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（Windows） | `unbuffered` |'
- en: '| Valid Values (Unix) | `fsync``O_DSYNC``littlesync``nosync``O_DIRECT``O_DIRECT_NO_FSYNC`
    |'
  id: totrans-1119
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值（Unix） | `fsync``O_DSYNC``littlesync``nosync``O_DIRECT``O_DIRECT_NO_FSYNC`
    |'
- en: '| Valid Values (Windows) | `unbuffered``normal` |'
  id: totrans-1120
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值（Windows） | `unbuffered``normal` |'
- en: Defines the method used to [flush](glossary.html#glos_flush "flush") data to
    `InnoDB` [data files](glossary.html#glos_data_files "data files") and [log files](glossary.html#glos_log_file
    "log file"), which can affect I/O throughput.
  id: totrans-1121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义用于将数据刷新到`InnoDB`[数据文件](glossary.html#glos_data_files "数据文件")和[日志文件](glossary.html#glos_log_file
    "日志文件")的方法，这可能会影响I/O吞吐量。
- en: On Unix-like systems, the default value is `fsync`. On Windows, the default
    value is `unbuffered`.
  id: totrans-1122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在类Unix系统上，默认值为`fsync`。在Windows上，默认值为`unbuffered`。
- en: Note
  id: totrans-1123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: In MySQL 8.0, [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    options can be specified numerically.
  id: totrans-1124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0中，可以通过数字方式指定[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)选项。
- en: 'The [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    options for Unix-like systems include:'
  id: totrans-1125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 适用于类Unix系统的[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)选项包括：
- en: '`fsync` or `0`: `InnoDB` uses the `fsync()` system call to flush both the data
    and log files. `fsync` is the default setting.'
  id: totrans-1126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fsync`或`0`：`InnoDB`使用`fsync()`系统调用来刷新数据和日志文件。`fsync`是默认设置。'
- en: '`O_DSYNC` or `1`: `InnoDB` uses `O_SYNC` to open and flush the log files, and
    `fsync()` to flush the data files. `InnoDB` does not use `O_DSYNC` directly because
    there have been problems with it on many varieties of Unix.'
  id: totrans-1127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`O_DSYNC`或`1`：`InnoDB`使用`O_SYNC`来打开和刷新日志文件，并使用`fsync()`来刷新数据文件。`InnoDB`不直接使用`O_DSYNC`，因为在许多Unix变种上存在问题。'
- en: '`littlesync` or `2`: This option is used for internal performance testing and
    is currently unsupported. Use at your own risk.'
  id: totrans-1128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`littlesync`或`2`：此选项用于内部性能测试，目前不受支持。请自行承担风险。'
- en: '`nosync` or `3`: This option is used for internal performance testing and is
    currently unsupported. Use at your own risk.'
  id: totrans-1129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nosync`或`3`：此选项用于内部性能测试，目前不受支持。请自行承担风险。'
- en: '`O_DIRECT` or `4`: `InnoDB` uses `O_DIRECT` (or `directio()` on Solaris) to
    open the data files, and uses `fsync()` to flush both the data and log files.
    This option is available on some GNU/Linux versions, FreeBSD, and Solaris.'
  id: totrans-1130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`O_DIRECT`或`4`：`InnoDB`使用`O_DIRECT`（或Solaris上的`directio()`）来打开数据文件，并使用`fsync()`来刷新数据和日志文件。此选项适用于某些GNU/Linux版本、FreeBSD和Solaris。'
- en: '`O_DIRECT_NO_FSYNC`: `InnoDB` uses `O_DIRECT` during flushing I/O, but skips
    the `fsync()` system call after each write operation.'
  id: totrans-1131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`O_DIRECT_NO_FSYNC`：`InnoDB`在刷新I/O时使用`O_DIRECT`，但在每次写操作后跳过`fsync()`系统调用。'
- en: Prior to MySQL 8.0.14, this setting is not suitable for file systems such as
    XFS and EXT4, which require an `fsync()` system call to synchronize file system
    metadata changes. If you are not sure whether your file system requires an `fsync()`
    system call to synchronize file system metadata changes, use `O_DIRECT` instead.
  id: totrans-1132
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.14之前，此设置不适用于需要`fsync()`系统调用同步文件系统元数据更改的文件系统，如XFS和EXT4。如果不确定您的文件系统是否需要`fsync()`系统调用来同步文件系统元数据更改，请改用`O_DIRECT`。
- en: As of MySQL 8.0.14, `fsync()` is called after creating a new file, after increasing
    file size, and after closing a file, to ensure that file system metadata changes
    are synchronized. The `fsync()` system call is still skipped after each write
    operation.
  id: totrans-1133
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自MySQL 8.0.14起，在创建新文件、增加文件大小和关闭文件后，会调用`fsync()`以确保文件系统元数据更改被同步。每次写操作后仍会跳过`fsync()`系统调用。
- en: Data loss is possible if redo log files and data files reside on different storage
    devices, and an unexpected exit occurs before data file writes are flushed from
    a device cache that is not battery-backed. If you use or intend to use different
    storage devices for redo log files and data files, and your data files reside
    on a device with a cache that is not battery-backed, use `O_DIRECT` instead.
  id: totrans-1134
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果重做日志文件和数据文件位于不同存储设备上，并且在数据文件写入未从非带电池备份的设备缓存中刷新时发生意外退出，则可能会发生数据丢失。如果您使用或打算使用不同的存储设备用于重做日志文件和数据文件，并且您的数据文件位于没有带电池备份的缓存的设备上，请改用`O_DIRECT`。
- en: On platforms that support `fdatasync()` system calls, the [`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)
    variable, introduced in MySQL 8.0.26, permits [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    options that use `fsync()` to use `fdatasync()` instead. An `fdatasync()` system
    call does not flush changes to file metadata unless required for subsequent data
    retrieval, providing a potential performance benefit.
  id: totrans-1135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在支持`fdatasync()`系统调用的平台上，MySQL 8.0.26中引入的[`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)变量允许使用`fsync()`的[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)选项来代替`fdatasync()`。`fdatasync()`系统调用不会刷新文件元数据，除非需要用于后续数据检索，从而提供潜在的性能优势。
- en: 'The [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    options for Windows systems include:'
  id: totrans-1136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Windows系统的[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)选项包括：
- en: '`unbuffered` or `0`: `InnoDB` uses simulated asynchronous I/O and non-buffered
    I/O.'
  id: totrans-1137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unbuffered`或`0`：`InnoDB`使用模拟异步I/O和非缓冲I/O。'
- en: '`normal` or `1`: `InnoDB` uses simulated asynchronous I/O and buffered I/O.'
  id: totrans-1138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`normal`或`1`：`InnoDB`使用模拟异步I/O和缓冲I/O。'
- en: How each setting affects performance depends on hardware configuration and workload.
    Benchmark your particular configuration to decide which setting to use, or whether
    to keep the default setting. Examine the [`Innodb_data_fsyncs`](server-status-variables.html#statvar_Innodb_data_fsyncs)
    status variable to see the overall number of `fsync()` calls (or `fdatasync()`
    calls if [`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)
    is enabled) for each setting. The mix of read and write operations in your workload
    can affect how a setting performs. For example, on a system with a hardware RAID
    controller and battery-backed write cache, `O_DIRECT` can help to avoid double
    buffering between the `InnoDB` buffer pool and the operating system file system
    cache. On some systems where `InnoDB` data and log files are located on a SAN,
    the default value or `O_DSYNC` might be faster for a read-heavy workload with
    mostly `SELECT` statements. Always test this parameter with hardware and workload
    that reflect your production environment. For general I/O tuning advice, see [Section 10.5.8,
    “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing
    InnoDB Disk I/O").
  id: totrans-1139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个设置如何影响性能取决于硬件配置和工作负载。基准测试您的特定配置以决定使用哪个设置，或者是否保留默认设置。检查[`Innodb_data_fsyncs`](server-status-variables.html#statvar_Innodb_data_fsyncs)状态变量，查看每个设置的`fsync()`调用总数（如果启用了[`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)，则为`fdatasync()`调用）。工作负载中读取和写入操作的混合可能会影响设置的性能。例如，在具有硬件RAID控制器和带电池后备写缓存的系统上，`O_DIRECT`可以帮助避免`InnoDB`缓冲池和操作系统文件系统缓存之间的双重缓冲。在一些`InnoDB`数据和日志文件位于SAN上的系统中，默认值或`O_DSYNC`可能对大部分为`SELECT`语句的读取密集型工作负载更快。始终使用反映生产环境的硬件和工作负载测试此参数。有关一般I/O调优建议，请参见[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。
- en: If [`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)
    is enabled, the [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    value is automatically configured if it is not explicitly defined. For more information,
    see [Section 17.8.12, “Enabling Automatic Configuration for a Dedicated MySQL
    Server”](innodb-dedicated-server.html "17.8.12 Enabling Automatic Configuration
    for a Dedicated MySQL Server").
  id: totrans-1140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)，则如果未明确定义，[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)值将自动配置。有关更多信息，请参见[第17.8.12节，“为专用MySQL服务器启用自动配置”](innodb-dedicated-server.html
    "17.8.12 为专用MySQL服务器启用自动配置")。
- en: '[`innodb_flush_neighbors`](innodb-parameters.html#sysvar_innodb_flush_neighbors)'
  id: totrans-1141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_flush_neighbors`](innodb-parameters.html#sysvar_innodb_flush_neighbors)'
- en: '| Command-Line Format | `--innodb-flush-neighbors=#` |'
  id: totrans-1142
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-flush-neighbors=#` |'
- en: '| System Variable | `[innodb_flush_neighbors](innodb-parameters.html#sysvar_innodb_flush_neighbors)`
    |'
  id: totrans-1143
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_flush_neighbors](innodb-parameters.html#sysvar_innodb_flush_neighbors)`
    |'
- en: '| Scope | Global |'
  id: totrans-1144
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1145
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1146
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-1147
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `0` |'
  id: totrans-1148
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Valid Values | `0``1``2` |'
  id: totrans-1149
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `0``1``2` |'
- en: Specifies whether [flushing](glossary.html#glos_flush "flush") a page from the
    `InnoDB` [buffer pool](glossary.html#glos_buffer_pool "buffer pool") also flushes
    other [dirty pages](glossary.html#glos_dirty_page "dirty page") in the same [extent](glossary.html#glos_extent
    "extent").
  id: totrans-1150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定从`InnoDB`[缓冲池](glossary.html#glos_buffer_pool "缓冲池")刷新页面时是否也刷新同一[范围](glossary.html#glos_extent
    "范围")中的其他[脏页](glossary.html#glos_dirty_page "脏页")。
- en: A setting of 0 disables [`innodb_flush_neighbors`](innodb-parameters.html#sysvar_innodb_flush_neighbors).
    Dirty pages in the same extent are not flushed.
  id: totrans-1151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置为0会禁用[`innodb_flush_neighbors`](innodb-parameters.html#sysvar_innodb_flush_neighbors)。同一范围内的脏页不会被刷新。
- en: A setting of 1 flushes contiguous dirty pages in the same extent.
  id: totrans-1152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置为1会刷新同一范围内连续的脏页。
- en: A setting of 2 flushes dirty pages in the same extent.
  id: totrans-1153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置为2会刷新同一范围内的脏页。
- en: When the table data is stored on a traditional [HDD](glossary.html#glos_hdd
    "HDD") storage device, flushing such [neighbor pages](glossary.html#glos_neighbor_page
    "neighbor page") in one operation reduces I/O overhead (primarily for disk seek
    operations) compared to flushing individual pages at different times. For table
    data stored on [SSD](glossary.html#glos_ssd "SSD"), seek time is not a significant
    factor and you can set this option to 0 to spread out write operations. For related
    information, see [Section 17.8.3.5, “Configuring Buffer Pool Flushing”](innodb-buffer-pool-flushing.html
    "17.8.3.5 Configuring Buffer Pool Flushing").
  id: totrans-1154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当表数据存储在传统的[HDD](glossary.html#glos_hdd "HDD")存储设备上时，一次刷新这样的[相邻页](glossary.html#glos_neighbor_page
    "相邻页")减少了I/O开销（主要是磁盘寻道操作）与在不同时间刷新单个页相比。对于存储在[SSD](glossary.html#glos_ssd "SSD")上的表数据，寻道时间不是一个重要因素，您可以将此选项设置为0以分散写操作。有关相关信息，请参见[第17.8.3.5节，“配置缓冲池刷新”](innodb-buffer-pool-flushing.html
    "17.8.3.5 配置缓冲池刷新")。
- en: '[`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)'
  id: totrans-1155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)'
- en: '| Command-Line Format | `--innodb-flush-sync[={OFF&#124;ON}]` |'
  id: totrans-1156
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-flush-sync[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_flush_sync](innodb-parameters.html#sysvar_innodb_flush_sync)`
    |'
  id: totrans-1157
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_flush_sync](innodb-parameters.html#sysvar_innodb_flush_sync)`
    |'
- en: '| Scope | Global |'
  id: totrans-1158
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1159
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1160
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1161
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `ON` |'
  id: totrans-1162
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: The [`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync) variable,
    which is enabled by default, causes the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting to be ignored during bursts of I/O activity that occur at [checkpoints](glossary.html#glos_checkpoint
    "checkpoint"). To adhere to the I/O rate defined by the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting, disable [`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync).
  id: totrans-1163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下启用的[`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)变量导致在[检查点](glossary.html#glos_checkpoint
    "检查点")发生I/O活动突发时忽略[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置。要遵守由[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置定义的I/O速率，在I/O活动突发时禁用[`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)。
- en: For information about configuring the [`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)
    variable, see [Section 17.8.7, “Configuring InnoDB I/O Capacity”](innodb-configuring-io-capacity.html
    "17.8.7 Configuring InnoDB I/O Capacity").
  id: totrans-1164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关配置[`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)变量的信息，请参见[第17.8.7节，“配置InnoDB
    I/O容量”](innodb-configuring-io-capacity.html "17.8.7 配置InnoDB I/O容量")。
- en: '[`innodb_flushing_avg_loops`](innodb-parameters.html#sysvar_innodb_flushing_avg_loops)'
  id: totrans-1165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_flushing_avg_loops`](innodb-parameters.html#sysvar_innodb_flushing_avg_loops)'
- en: '| Command-Line Format | `--innodb-flushing-avg-loops=#` |'
  id: totrans-1166
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-flushing-avg-loops=#` |'
- en: '| System Variable | `[innodb_flushing_avg_loops](innodb-parameters.html#sysvar_innodb_flushing_avg_loops)`
    |'
  id: totrans-1167
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_flushing_avg_loops](innodb-parameters.html#sysvar_innodb_flushing_avg_loops)`
    |'
- en: '| Scope | Global |'
  id: totrans-1168
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1169
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1170
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1171
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `30` |'
  id: totrans-1172
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `30` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1173
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `1000` |'
  id: totrans-1174
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1000` |'
- en: Number of iterations for which `InnoDB` keeps the previously calculated snapshot
    of the flushing state, controlling how quickly [adaptive flushing](glossary.html#glos_adaptive_flushing
    "adaptive flushing") responds to changing [workloads](glossary.html#glos_workload
    "workload"). Increasing the value makes the rate of [flush](glossary.html#glos_flush
    "flush") operations change smoothly and gradually as the workload changes. Decreasing
    the value makes adaptive flushing adjust quickly to workload changes, which can
    cause spikes in flushing activity if the workload increases and decreases suddenly.
  id: totrans-1175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`保留先前计算的刷新状态快照的迭代次数，控制[自适应刷新](glossary.html#glos_adaptive_flushing "自适应刷新")对变化的[工作负载](glossary.html#glos_workload
    "工作负载")作出响应的速度。增加该值使得刷新操作的速率在工作负载变化时平稳逐渐变化。减少该值使得自适应刷新快速调整到工作负载变化，这可能导致刷新活动在工作负载突然增加和减少时出现波动。'
- en: For related information, see [Section 17.8.3.5, “Configuring Buffer Pool Flushing”](innodb-buffer-pool-flushing.html
    "17.8.3.5 Configuring Buffer Pool Flushing").
  id: totrans-1176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参阅[第17.8.3.5节，“配置缓冲池刷新”](innodb-buffer-pool-flushing.html "17.8.3.5 Configuring
    Buffer Pool Flushing")。
- en: '[`innodb_force_load_corrupted`](innodb-parameters.html#sysvar_innodb_force_load_corrupted)'
  id: totrans-1177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_force_load_corrupted`](innodb-parameters.html#sysvar_innodb_force_load_corrupted)'
- en: '| Command-Line Format | `--innodb-force-load-corrupted[={OFF&#124;ON}]` |'
  id: totrans-1178
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-force-load-corrupted[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_force_load_corrupted](innodb-parameters.html#sysvar_innodb_force_load_corrupted)`
    |'
  id: totrans-1179
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_force_load_corrupted](innodb-parameters.html#sysvar_innodb_force_load_corrupted)`
    |'
- en: '| Scope | Global |'
  id: totrans-1180
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1181
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1182
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1183
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1184
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Permits `InnoDB` to load tables at startup that are marked as corrupted. Use
    only during troubleshooting, to recover data that is otherwise inaccessible. When
    troubleshooting is complete, disable this setting and restart the server.
  id: totrans-1185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 允许`InnoDB`在启动时加载标记为损坏的表格。仅在故障排除期间使用，以恢复其他无法访问的数据。故障排除完成后，请禁用此设置并重新启动服务器。
- en: '[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)'
  id: totrans-1186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)'
- en: '| Command-Line Format | `--innodb-force-recovery=#` |'
  id: totrans-1187
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-force-recovery=#` |'
- en: '| System Variable | `[innodb_force_recovery](innodb-parameters.html#sysvar_innodb_force_recovery)`
    |'
  id: totrans-1188
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_force_recovery](innodb-parameters.html#sysvar_innodb_force_recovery)`
    |'
- en: '| Scope | Global |'
  id: totrans-1189
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1190
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1191
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1192
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-1193
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1194
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `6` |'
  id: totrans-1195
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `6` |'
- en: The [crash recovery](glossary.html#glos_crash_recovery "crash recovery") mode,
    typically only changed in serious troubleshooting situations. Possible values
    are from 0 to 6\. For the meanings of these values and important information about
    [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery),
    see [Section 17.21.3, “Forcing InnoDB Recovery”](forcing-innodb-recovery.html
    "17.21.3 Forcing InnoDB Recovery").
  id: totrans-1196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[崩溃恢复](glossary.html#glos_crash_recovery "crash recovery")模式，通常仅在严重故障排除情况下更改。可能的值为0到6。有关这些值的含义以及关于[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)的重要信息，请参阅[第17.21.3节，“强制InnoDB恢复”](forcing-innodb-recovery.html
    "17.21.3 Forcing InnoDB Recovery")。'
- en: Warning
  id: totrans-1197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: Only set this variable to a value greater than 0 in an emergency situation so
    that you can start `InnoDB` and dump your tables. As a safety measure, `InnoDB`
    prevents [`INSERT`](insert.html "15.2.7 INSERT Statement"), [`UPDATE`](update.html
    "15.2.17 UPDATE Statement"), or [`DELETE`](delete.html "15.2.2 DELETE Statement")
    operations when [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    is greater than 0\. An [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    setting of 4 or greater places `InnoDB` into read-only mode.
  id: totrans-1198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅在紧急情况下将此变量设置为大于0的值，以便您可以启动`InnoDB`并转储表格。作为安全措施，当[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)大于0时，`InnoDB`会阻止[`INSERT`](insert.html
    "15.2.7 INSERT Statement")、[`UPDATE`](update.html "15.2.17 UPDATE Statement")或[`DELETE`](delete.html
    "15.2.2 DELETE Statement")操作。[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)设置为4或更高时，将`InnoDB`置于只读模式。
- en: These restrictions may cause replication administration commands to fail with
    an error, as replication stores the replica status logs in `InnoDB` tables.
  id: totrans-1199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些限制可能导致复制管理命令失败并显示错误，因为复制将副本状态日志存储在`InnoDB`表中。
- en: '[`innodb_fsync_threshold`](innodb-parameters.html#sysvar_innodb_fsync_threshold)'
  id: totrans-1200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_fsync_threshold`](innodb-parameters.html#sysvar_innodb_fsync_threshold)'
- en: '| Command-Line Format | `--innodb-fsync-threshold=#` |'
  id: totrans-1201
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-fsync-threshold=#` |'
- en: '| Introduced | 8.0.13 |'
  id: totrans-1202
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.13 |'
- en: '| System Variable | `[innodb_fsync_threshold](innodb-parameters.html#sysvar_innodb_fsync_threshold)`
    |'
  id: totrans-1203
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_fsync_threshold](innodb-parameters.html#sysvar_innodb_fsync_threshold)`
    |'
- en: '| Scope | Global |'
  id: totrans-1204
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1205
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1206
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1207
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-1208
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1209
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `2**64-1` |'
  id: totrans-1210
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2**64-1` |'
- en: By default, when `InnoDB` creates a new data file, such as a new log file or
    tablespace file, the file is fully written to the operating system cache before
    it is flushed to disk, which can cause a large amount of disk write activity to
    occur at once. To force smaller, periodic flushes of data from the operating system
    cache, you can use the [`innodb_fsync_threshold`](innodb-parameters.html#sysvar_innodb_fsync_threshold)
    variable to define a threshold value, in bytes. When the byte threshold is reached,
    the contents of the operating system cache are flushed to disk. The default value
    of 0 forces the default behavior, which is to flush data to disk only after a
    file is fully written to the cache.
  id: totrans-1211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，当`InnoDB`创建新的数据文件，例如新的日志文件或表空间文件时，文件在刷新到磁盘之前会完全写入操作系统缓存，这可能导致大量的磁盘写入活动一次性发生。为了强制从操作系统缓存中定期刷新较小的数据块，您可以使用[`innodb_fsync_threshold`](innodb-parameters.html#sysvar_innodb_fsync_threshold)变量定义一个阈值值，以字节为单位。当达到字节阈值时，操作系统缓存的内容会刷新到磁盘。默认值为0，强制默认行为，即仅在文件完全写入缓存后才将数据刷新到磁盘。
- en: Specifying a threshold to force smaller, periodic flushes may be beneficial
    in cases where multiple MySQL instances use the same storage devices. For example,
    creating a new MySQL instance and its associated data files could cause large
    surges of disk write activity, impeding the performance of other MySQL instances
    that use the same storage devices. Configuring a threshold helps avoid such surges
    in write activity.
  id: totrans-1212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定阈值以强制较小的定期刷新可能有益于多个MySQL实例使用相同存储设备的情况。例如，创建新的MySQL实例及其关联的数据文件可能导致大量的磁盘写入活动激增，影响使用相同存储设备的其他MySQL实例的性能。配置阈值有助于避免此类写入活动激增。
- en: '[`innodb_ft_aux_table`](innodb-parameters.html#sysvar_innodb_ft_aux_table)'
  id: totrans-1213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_aux_table`](innodb-parameters.html#sysvar_innodb_ft_aux_table)'
- en: '| System Variable | `[innodb_ft_aux_table](innodb-parameters.html#sysvar_innodb_ft_aux_table)`
    |'
  id: totrans-1214
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_aux_table](innodb-parameters.html#sysvar_innodb_ft_aux_table)`
    |'
- en: '| Scope | Global |'
  id: totrans-1215
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1216
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1217
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | String |'
  id: totrans-1218
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: 'Specifies the qualified name of an `InnoDB` table containing a `FULLTEXT` index.
    This variable is intended for diagnostic purposes and can only be set at runtime.
    For example:'
  id: totrans-1219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定包含`FULLTEXT`索引的`InnoDB`表的限定名称。此变量仅用于诊断目的，并且只能在运行时设置。例如：
- en: '[PRE5]'
  id: totrans-1220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: After you set this variable to a name in the format `*`db_name`*/*`table_name`*`,
    the `INFORMATION_SCHEMA` tables [`INNODB_FT_INDEX_TABLE`](information-schema-innodb-ft-index-table-table.html
    "28.4.19 The INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE Table"), [`INNODB_FT_INDEX_CACHE`](information-schema-innodb-ft-index-cache-table.html
    "28.4.18 The INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE Table"), [`INNODB_FT_CONFIG`](information-schema-innodb-ft-config-table.html
    "28.4.15 The INFORMATION_SCHEMA INNODB_FT_CONFIG Table"), [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 The INFORMATION_SCHEMA INNODB_FT_DELETED Table"), and [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table") show information
    about the search index for the specified table.
  id: totrans-1221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将此变量设置为格式为`*`db_name`*/*`table_name`*`的名称后，`INFORMATION_SCHEMA`表[`INNODB_FT_INDEX_TABLE`](information-schema-innodb-ft-index-table-table.html
    "28.4.19 The INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE Table")、[`INNODB_FT_INDEX_CACHE`](information-schema-innodb-ft-index-cache-table.html
    "28.4.18 The INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE Table")、[`INNODB_FT_CONFIG`](information-schema-innodb-ft-config-table.html
    "28.4.15 The INFORMATION_SCHEMA INNODB_FT_CONFIG Table")、[`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 The INFORMATION_SCHEMA INNODB_FT_DELETED Table")和[`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table")显示关于指定表的搜索索引的信息。
- en: For more information, see [Section 17.15.4, “InnoDB INFORMATION_SCHEMA FULLTEXT
    Index Tables”](innodb-information-schema-fulltext_index-tables.html "17.15.4 InnoDB
    INFORMATION_SCHEMA FULLTEXT Index Tables").
  id: totrans-1222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见 [第17.15.4节，“InnoDB INFORMATION_SCHEMA FULLTEXT Index Tables”](innodb-information-schema-fulltext_index-tables.html
    "17.15.4 InnoDB INFORMATION_SCHEMA FULLTEXT Index Tables")。
- en: '[`innodb_ft_cache_size`](innodb-parameters.html#sysvar_innodb_ft_cache_size)'
  id: totrans-1223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_cache_size`](innodb-parameters.html#sysvar_innodb_ft_cache_size)'
- en: '| Command-Line Format | `--innodb-ft-cache-size=#` |'
  id: totrans-1224
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-cache-size=#` |'
- en: '| System Variable | `[innodb_ft_cache_size](innodb-parameters.html#sysvar_innodb_ft_cache_size)`
    |'
  id: totrans-1225
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_cache_size](innodb-parameters.html#sysvar_innodb_ft_cache_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1226
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1227
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1228
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1229
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `8000000` |'
  id: totrans-1230
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `8000000` |'
- en: '| Minimum Value | `1600000` |'
  id: totrans-1231
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1600000` |'
- en: '| Maximum Value | `80000000` |'
  id: totrans-1232
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `80000000` |'
- en: '| Unit | bytes |'
  id: totrans-1233
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: The memory allocated, in bytes, for the `InnoDB` `FULLTEXT` search index cache,
    which holds a parsed document in memory while creating an `InnoDB` `FULLTEXT`
    index. Index inserts and updates are only committed to disk when the [`innodb_ft_cache_size`](innodb-parameters.html#sysvar_innodb_ft_cache_size)
    size limit is reached. [`innodb_ft_cache_size`](innodb-parameters.html#sysvar_innodb_ft_cache_size)
    defines the cache size on a per table basis. To set a global limit for all tables,
    see [`innodb_ft_total_cache_size`](innodb-parameters.html#sysvar_innodb_ft_total_cache_size).
  id: totrans-1234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为 `InnoDB` `FULLTEXT` 搜索索引缓存分配的内存量（以字节为单位），在创建 `InnoDB` `FULLTEXT` 索引时，该缓存在内存中保存解析的文档。仅当达到
    [`innodb_ft_cache_size`](innodb-parameters.html#sysvar_innodb_ft_cache_size) 大小限制时，索引插入和更新才会提交到磁盘。[`innodb_ft_cache_size`](innodb-parameters.html#sysvar_innodb_ft_cache_size)
    定义了每个表的缓存大小。要为所有表设置全局限制，请参阅 [`innodb_ft_total_cache_size`](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)。
- en: For more information, see [InnoDB Full-Text Index Cache](innodb-fulltext-index.html#innodb-fulltext-index-cache
    "InnoDB Full-Text Index Cache").
  id: totrans-1235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[InnoDB 全文索引缓存](innodb-fulltext-index.html#innodb-fulltext-index-cache
    "InnoDB Full-Text Index Cache")。
- en: '[`innodb_ft_enable_diag_print`](innodb-parameters.html#sysvar_innodb_ft_enable_diag_print)'
  id: totrans-1236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_enable_diag_print`](innodb-parameters.html#sysvar_innodb_ft_enable_diag_print)'
- en: '| Command-Line Format | `--innodb-ft-enable-diag-print[={OFF&#124;ON}]` |'
  id: totrans-1237
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-enable-diag-print[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_ft_enable_diag_print](innodb-parameters.html#sysvar_innodb_ft_enable_diag_print)`
    |'
  id: totrans-1238
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_enable_diag_print](innodb-parameters.html#sysvar_innodb_ft_enable_diag_print)`
    |'
- en: '| Scope | Global |'
  id: totrans-1239
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1240
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1241
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1242
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1243
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: 'Whether to enable additional full-text search (FTS) diagnostic output. This
    option is primarily intended for advanced FTS debugging and is not of interest
    to most users. Output is printed to the error log and includes information such
    as:'
  id: totrans-1244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 是否启用额外的全文搜索（FTS）诊断输出。此选项主要用于高级 FTS 调试，对大多数用户不感兴趣。输出打印到错误日志中，包括以下信息：
- en: 'FTS index sync progress (when the FTS cache limit is reached). For example:'
  id: totrans-1245
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: FTS 索引同步进度（当达到 FTS 缓存限制时）。例如：
- en: '[PRE6]'
  id: totrans-1246
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'FTS optimize progress. For example:'
  id: totrans-1247
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: FTS 优化进度。例如：
- en: '[PRE7]'
  id: totrans-1248
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'FTS index build progress. For example:'
  id: totrans-1249
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: FTS 索引构建进度。例如：
- en: '[PRE8]'
  id: totrans-1250
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'For FTS queries, the query parsing tree, word weight, query processing time,
    and memory usage are printed. For example:'
  id: totrans-1251
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 FTS 查询，会打印查询解析树、词权重、查询处理时间和内存使用情况。例如：
- en: '[PRE9]'
  id: totrans-1252
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[`innodb_ft_enable_stopword`](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)'
  id: totrans-1253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_enable_stopword`](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)'
- en: '| Command-Line Format | `--innodb-ft-enable-stopword[={OFF&#124;ON}]` |'
  id: totrans-1254
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-enable-stopword[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_ft_enable_stopword](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)`
    |'
  id: totrans-1255
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_enable_stopword](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-1256
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-1257
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1258
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1259
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-1260
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Specifies that a set of [stopwords](glossary.html#glos_stopword "stopword")
    is associated with an `InnoDB` `FULLTEXT` index at the time the index is created.
    If the [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    option is set, the stopwords are taken from that table. Else, if the [`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)
    option is set, the stopwords are taken from that table. Otherwise, a built-in
    set of default stopwords is used.
  id: totrans-1261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定在创建 `InnoDB` `FULLTEXT` 索引时，与之关联的一组[停用词](glossary.html#glos_stopword "stopword")。如果设置了
    [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    选项，则从该表中获取停用词。否则，如果设置了 [`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)
    选项，则从该表中获取停用词。否则，将使用内置的默认停用词集。
- en: For more information, see [Section 14.9.4, “Full-Text Stopwords”](fulltext-stopwords.html
    "14.9.4 Full-Text Stopwords").
  id: totrans-1262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 [第 14.9.4 节，“全文搜索停用词”](fulltext-stopwords.html "14.9.4 全文搜索停用词")。
- en: '[`innodb_ft_max_token_size`](innodb-parameters.html#sysvar_innodb_ft_max_token_size)'
  id: totrans-1263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_max_token_size`](innodb-parameters.html#sysvar_innodb_ft_max_token_size)'
- en: '| Command-Line Format | `--innodb-ft-max-token-size=#` |'
  id: totrans-1264
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-max-token-size=#` |'
- en: '| System Variable | `[innodb_ft_max_token_size](innodb-parameters.html#sysvar_innodb_ft_max_token_size)`
    |'
  id: totrans-1265
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_max_token_size](innodb-parameters.html#sysvar_innodb_ft_max_token_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1266
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1267
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1268
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1269
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `84` |'
  id: totrans-1270
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `84` |'
- en: '| Minimum Value | `10` |'
  id: totrans-1271
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `10` |'
- en: '| Maximum Value | `84` |'
  id: totrans-1272
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `84` |'
- en: Maximum character length of words that are stored in an `InnoDB` `FULLTEXT`
    index. Setting a limit on this value reduces the size of the index, thus speeding
    up queries, by omitting long keywords or arbitrary collections of letters that
    are not real words and are not likely to be search terms.
  id: totrans-1273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储在 `InnoDB` `FULLTEXT` 索引中的单词的最大字符长度。设置此值的限制会减小索引的大小，从而加快查询速度，通过省略长关键词或不是真实单词且不太可能是搜索词的任意字母集合。
- en: For more information, see [Section 14.9.6, “Fine-Tuning MySQL Full-Text Search”](fulltext-fine-tuning.html
    "14.9.6 Fine-Tuning MySQL Full-Text Search").
  id: totrans-1274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 [第 14.9.6 节，“调整 MySQL 全文搜索”](fulltext-fine-tuning.html "14.9.6 调整
    MySQL 全文搜索")。
- en: '[`innodb_ft_min_token_size`](innodb-parameters.html#sysvar_innodb_ft_min_token_size)'
  id: totrans-1275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_min_token_size`](innodb-parameters.html#sysvar_innodb_ft_min_token_size)'
- en: '| Command-Line Format | `--innodb-ft-min-token-size=#` |'
  id: totrans-1276
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-min-token-size=#` |'
- en: '| System Variable | `[innodb_ft_min_token_size](innodb-parameters.html#sysvar_innodb_ft_min_token_size)`
    |'
  id: totrans-1277
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_min_token_size](innodb-parameters.html#sysvar_innodb_ft_min_token_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1278
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1279
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1280
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1281
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `3` |'
  id: totrans-1282
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `3` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1283
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `16` |'
  id: totrans-1284
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `16` |'
- en: Minimum length of words that are stored in an `InnoDB` `FULLTEXT` index. Increasing
    this value reduces the size of the index, thus speeding up queries, by omitting
    common words that are unlikely to be significant in a search context, such as
    the English words “a” and “to”. For content using a CJK (Chinese, Japanese, Korean)
    character set, specify a value of 1.
  id: totrans-1285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储在 `InnoDB` `FULLTEXT` 索引中的单词的最小长度。增加此值会减小索引的大小，从而加快查询速度，通过省略在搜索上下文中不太可能重要的常见单词，例如英语单词“a”和“to”。对于使用
    CJK（中文、日文、韩文）字符集的内容，请指定值为 1。
- en: For more information, see [Section 14.9.6, “Fine-Tuning MySQL Full-Text Search”](fulltext-fine-tuning.html
    "14.9.6 Fine-Tuning MySQL Full-Text Search").
  id: totrans-1286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 [第 14.9.6 节，“调整 MySQL 全文搜索”](fulltext-fine-tuning.html "14.9.6 调整
    MySQL 全文搜索")。
- en: '[`innodb_ft_num_word_optimize`](innodb-parameters.html#sysvar_innodb_ft_num_word_optimize)'
  id: totrans-1287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_num_word_optimize`](innodb-parameters.html#sysvar_innodb_ft_num_word_optimize)'
- en: '| Command-Line Format | `--innodb-ft-num-word-optimize=#` |'
  id: totrans-1288
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-num-word-optimize=#` |'
- en: '| System Variable | `[innodb_ft_num_word_optimize](innodb-parameters.html#sysvar_innodb_ft_num_word_optimize)`
    |'
  id: totrans-1289
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_num_word_optimize](innodb-parameters.html#sysvar_innodb_ft_num_word_optimize)`
    |'
- en: '| Scope | Global |'
  id: totrans-1290
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1291
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1292
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1293
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `2000` |'
  id: totrans-1294
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `2000` |'
- en: '| Minimum Value | `1000` |'
  id: totrans-1295
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1000` |'
- en: '| Maximum Value | `10000` |'
  id: totrans-1296
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `10000` |'
- en: Number of words to process during each [`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE Statement") operation on an `InnoDB` `FULLTEXT` index.
    Because a bulk insert or update operation to a table containing a full-text search
    index could require substantial index maintenance to incorporate all changes,
    you might do a series of [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") statements, each picking up where the last left off.
  id: totrans-1297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在每次对 `InnoDB` `FULLTEXT` 索引执行 [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") 操作期间要处理的单词数。因为对包含全文搜索索引的表进行大量插入或更新操作可能需要大量的索引维护来合并所有更改，您可能需要执行一系列
    [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement") 语句，每个语句从上一个语句结束的地方开始。
- en: For more information, see [Section 14.9.6, “Fine-Tuning MySQL Full-Text Search”](fulltext-fine-tuning.html
    "14.9.6 Fine-Tuning MySQL Full-Text Search").
  id: totrans-1298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见 [第14.9.6节，“调整 MySQL 全文搜索”](fulltext-fine-tuning.html "14.9.6 Fine-Tuning
    MySQL Full-Text Search")。
- en: '[`innodb_ft_result_cache_limit`](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)'
  id: totrans-1299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_result_cache_limit`](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)'
- en: '| Command-Line Format | `--innodb-ft-result-cache-limit=#` |'
  id: totrans-1300
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-result-cache-limit=#` |'
- en: '| System Variable | `[innodb_ft_result_cache_limit](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)`
    |'
  id: totrans-1301
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_result_cache_limit](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)`
    |'
- en: '| Scope | Global |'
  id: totrans-1302
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1303
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1304
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提��适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1305
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `2000000000` |'
  id: totrans-1306
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `2000000000` |'
- en: '| Minimum Value | `1000000` |'
  id: totrans-1307
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1000000` |'
- en: '| Maximum Value | `2**32-1` |'
  id: totrans-1308
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2**32-1` |'
- en: '| Unit | bytes |'
  id: totrans-1309
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: The `InnoDB` full-text search query result cache limit (defined in bytes) per
    full-text search query or per thread. Intermediate and final `InnoDB` full-text
    search query results are handled in memory. Use [`innodb_ft_result_cache_limit`](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)
    to place a size limit on the full-text search query result cache to avoid excessive
    memory consumption in case of very large `InnoDB` full-text search query results
    (millions or hundreds of millions of rows, for example). Memory is allocated as
    required when a full-text search query is processed. If the result cache size
    limit is reached, an error is returned indicating that the query exceeds the maximum
    allowed memory.
  id: totrans-1310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个全文搜索查询或每个线程的 `InnoDB` 全文搜索查询结果缓存限制（以字节为单位）。中间和最终的 `InnoDB` 全文搜索查询结果在内存中处理。使用
    [`innodb_ft_result_cache_limit`](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)
    来对全文搜索查询结果缓存设置大小限制，以避免在出现非常大的 `InnoDB` 全文搜索查询结果（例如数百万或数亿行）时导致过多的内存消耗。在处理全文搜索查询时根据需要分配内存。如果达到结果缓存大小限制，将返回错误，指示查询超过允许的最大内存。
- en: The maximum value of [`innodb_ft_result_cache_limit`](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)
    for all platform types and bit sizes is 2**32-1.
  id: totrans-1311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有平台类型和位数的 [`innodb_ft_result_cache_limit`](innodb-parameters.html#sysvar_innodb_ft_result_cache_limit)
    的最大值为 2**32-1。
- en: '[`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)'
  id: totrans-1312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)'
- en: '| Command-Line Format | `--innodb-ft-server-stopword-table=db_name/table_name`
    |'
  id: totrans-1313
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-server-stopword-table=db_name/table_name` |'
- en: '| System Variable | `[innodb_ft_server_stopword_table](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)`
    |'
  id: totrans-1314
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_server_stopword_table](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)`
    |'
- en: '| Scope | Global |'
  id: totrans-1315
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1316
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1317
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | String |'
  id: totrans-1318
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `NULL` |'
  id: totrans-1319
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NULL` |'
- en: This option is used to specify your own `InnoDB` `FULLTEXT` index stopword list
    for all `InnoDB` tables. To configure your own stopword list for a specific `InnoDB`
    table, use [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table).
  id: totrans-1320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项用于为所有 `InnoDB` 表指定自己的 `InnoDB` `FULLTEXT` 索引停用词列表。要为特定的 `InnoDB` 表配置自己的停用词列表，请使用
    [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)。
- en: Set [`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)
    to the name of the table containing a list of stopwords, in the format `*`db_name`*/*`table_name`*`.
  id: totrans-1321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将[`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)设置为包含停用词列表的表的名称，格式为`*`db_name`*/*`table_name`*`。
- en: The stopword table must exist before you configure [`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table).
    [`innodb_ft_enable_stopword`](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)
    must be enabled and [`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)
    option must be configured before you create the `FULLTEXT` index.
  id: totrans-1322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在配置[`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)之前，停用词表必须存在。在创建`FULLTEXT`索引之前，必须启用[`innodb_ft_enable_stopword`](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)，并配置[`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)选项。
- en: The stopword table must be an `InnoDB` table, containing a single `VARCHAR`
    column named `value`.
  id: totrans-1323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 停用词表必须是一个`InnoDB`表，包含一个名为`value`的单个`VARCHAR`列。
- en: For more information, see [Section 14.9.4, “Full-Text Stopwords”](fulltext-stopwords.html
    "14.9.4 Full-Text Stopwords").
  id: totrans-1324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第14.9.4节，“全文停用词”](fulltext-stopwords.html "14.9.4 全文停用词")。
- en: '[`innodb_ft_sort_pll_degree`](innodb-parameters.html#sysvar_innodb_ft_sort_pll_degree)'
  id: totrans-1325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_sort_pll_degree`](innodb-parameters.html#sysvar_innodb_ft_sort_pll_degree)'
- en: '| Command-Line Format | `--innodb-ft-sort-pll-degree=#` |'
  id: totrans-1326
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-sort-pll-degree=#` |'
- en: '| System Variable | `[innodb_ft_sort_pll_degree](innodb-parameters.html#sysvar_innodb_ft_sort_pll_degree)`
    |'
  id: totrans-1327
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_sort_pll_degree](innodb-parameters.html#sysvar_innodb_ft_sort_pll_degree)`
    |'
- en: '| Scope | Global |'
  id: totrans-1328
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1329
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1330
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1331
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `2` |'
  id: totrans-1332
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `2` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1333
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `16` |'
  id: totrans-1334
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `16` |'
- en: Number of threads used in parallel to index and tokenize text in an `InnoDB`
    `FULLTEXT` index when building a [search index](glossary.html#glos_search_index
    "search index").
  id: totrans-1335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在构建[搜索索引](glossary.html#glos_search_index "搜索索引")时，用于并行索引和标记`InnoDB` `FULLTEXT`索引中文本的线程数。
- en: For related information, see [Section 17.6.2.4, “InnoDB Full-Text Indexes”](innodb-fulltext-index.html
    "17.6.2.4 InnoDB Full-Text Indexes"), and [`innodb_sort_buffer_size`](innodb-parameters.html#sysvar_innodb_sort_buffer_size).
  id: totrans-1336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关信息，请参见[第17.6.2.4节，“InnoDB全文索引”](innodb-fulltext-index.html "17.6.2.4 InnoDB全文索引")，以及[`innodb_sort_buffer_size`](innodb-parameters.html#sysvar_innodb_sort_buffer_size)。
- en: '[`innodb_ft_total_cache_size`](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)'
  id: totrans-1337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_total_cache_size`](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)'
- en: '| Command-Line Format | `--innodb-ft-total-cache-size=#` |'
  id: totrans-1338
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-total-cache-size=#` |'
- en: '| System Variable | `[innodb_ft_total_cache_size](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)`
    |'
  id: totrans-1339
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_total_cache_size](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1340
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1341
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1342
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1343
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `640000000` |'
  id: totrans-1344
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `640000000` |'
- en: '| Minimum Value | `32000000` |'
  id: totrans-1345
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `32000000` |'
- en: '| Maximum Value | `1600000000` |'
  id: totrans-1346
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1600000000` |'
- en: '| Unit | bytes |'
  id: totrans-1347
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: The total memory allocated, in bytes, for the `InnoDB` full-text search index
    cache for all tables. Creating numerous tables, each with a `FULLTEXT` search
    index, could consume a significant portion of available memory. [`innodb_ft_total_cache_size`](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)
    defines a global memory limit for all full-text search indexes to help avoid excessive
    memory consumption. If the global limit is reached by an index operation, a forced
    sync is triggered.
  id: totrans-1348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为所有表的`InnoDB`全文搜索索引缓存分配的总内存，以字节为单位。创建多个具有`FULLTEXT`搜索索引的表可能会消耗大量可用内存。[`innodb_ft_total_cache_size`](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)定义了所有全文搜索索引的全局内存限制，以帮助避免过度内存消耗。如果索引操作达到全局限制，将触发强制同步。
- en: For more information, see [InnoDB Full-Text Index Cache](innodb-fulltext-index.html#innodb-fulltext-index-cache
    "InnoDB Full-Text Index Cache").
  id: totrans-1349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[InnoDB全文索引缓存](innodb-fulltext-index.html#innodb-fulltext-index-cache
    "InnoDB全文索引缓存")。
- en: '[`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)'
  id: totrans-1350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)'
- en: '| Command-Line Format | `--innodb-ft-user-stopword-table=db_name/table_name`
    |'
  id: totrans-1351
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-ft-user-stopword-table=db_name/table_name` |'
- en: '| System Variable | `[innodb_ft_user_stopword_table](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)`
    |'
  id: totrans-1352
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_ft_user_stopword_table](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-1353
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-1354
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1355
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-1356
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `NULL` |'
  id: totrans-1357
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NULL` |'
- en: This option is used to specify your own `InnoDB` `FULLTEXT` index stopword list
    on a specific table. To configure your own stopword list for all `InnoDB` tables,
    use [`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table).
  id: totrans-1358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项用于在特定表上指定自己的 `InnoDB` `FULLTEXT` 索引停用词列表。要为所有 `InnoDB` 表配置自己的停用词列表，请使用 [`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)。
- en: Set [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    to the name of the table containing a list of stopwords, in the format `*`db_name`*/*`table_name`*`.
  id: totrans-1359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    设置为包含停用词列表的表的名称，格式为 `*`db_name`*/*`table_name`*`。
- en: The stopword table must exist before you configure [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table).
    [`innodb_ft_enable_stopword`](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)
    must be enabled and [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    must be configured before you create the `FULLTEXT` index.
  id: totrans-1360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在配置 [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    之前，停用词表必须存在。在创建 `FULLTEXT` 索引之前，必须启用 [`innodb_ft_enable_stopword`](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)
    并配置 [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)。
- en: The stopword table must be an `InnoDB` table, containing a single `VARCHAR`
    column named `value`.
  id: totrans-1361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 停用词表必须是一个 `InnoDB` 表，包含一个名为 `value` 的单个 `VARCHAR` 列。
- en: For more information, see [Section 14.9.4, “Full-Text Stopwords”](fulltext-stopwords.html
    "14.9.4 Full-Text Stopwords").
  id: totrans-1362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅 [第 14.9.4 节，“全文本停用词”](fulltext-stopwords.html "14.9.4 全文本停用词")。
- en: '[`innodb_idle_flush_pct`](innodb-parameters.html#sysvar_innodb_idle_flush_pct)'
  id: totrans-1363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_idle_flush_pct`](innodb-parameters.html#sysvar_innodb_idle_flush_pct)'
- en: '| Command-Line Format | `--innodb-idle-flush-pct=#` |'
  id: totrans-1364
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-idle-flush-pct=#` |'
- en: '| Introduced | 8.0.18 |'
  id: totrans-1365
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.18 |'
- en: '| System Variable | `[innodb_idle_flush_pct](innodb-parameters.html#sysvar_innodb_idle_flush_pct)`
    |'
  id: totrans-1366
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_idle_flush_pct](innodb-parameters.html#sysvar_innodb_idle_flush_pct)`
    |'
- en: '| Scope | Global |'
  id: totrans-1367
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1368
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1369
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1370
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `100` |'
  id: totrans-1371
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `100` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1372
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `100` |'
  id: totrans-1373
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `100` |'
- en: Limits page flushing when `InnoDB` is idle. The [`innodb_idle_flush_pct`](innodb-parameters.html#sysvar_innodb_idle_flush_pct)
    value is a percentage of the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting, which defines the number of I/O operations per second available to `InnoDB`.
    For more information, see [Limiting Buffer Flushing During Idle Periods](innodb-buffer-pool-flushing.html#innodb-limit-flushing-rate
    "Limiting Buffer Flushing During Idle Periods").
  id: totrans-1374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 `InnoDB` 空闲时限制页面刷新。[`innodb_idle_flush_pct`](innodb-parameters.html#sysvar_innodb_idle_flush_pct)
    值是 [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity) 设置的百分比，该设置定义了
    `InnoDB` 每秒可用的 I/O 操作数。更多信息，请参阅 [在空闲时期限制缓冲区刷新](innodb-buffer-pool-flushing.html#innodb-limit-flushing-rate
    "在空闲时期限制缓冲区刷新")。
- en: '[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)'
  id: totrans-1375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)'
- en: '| Command-Line Format | `--innodb-io-capacity=#` |'
  id: totrans-1376
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-io-capacity=#` |'
- en: '| System Variable | `[innodb_io_capacity](innodb-parameters.html#sysvar_innodb_io_capacity)`
    |'
  id: totrans-1377
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_io_capacity](innodb-parameters.html#sysvar_innodb_io_capacity)`
    |'
- en: '| Scope | Global |'
  id: totrans-1378
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1379
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1380
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1381
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `200` |'
  id: totrans-1382
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `200` |'
- en: '| Minimum Value | `100` |'
  id: totrans-1383
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `100` |'
- en: '| Maximum Value (64-bit platforms) | `2**64-1` |'
  id: totrans-1384
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `2**64-1` |'
- en: '| Maximum Value (32-bit platforms) | `2**32-1` |'
  id: totrans-1385
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `2**32-1` |'
- en: The [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    variable defines the number of I/O operations per second (IOPS) available to `InnoDB`
    background tasks, such as [flushing](glossary.html#glos_flush "flush") pages from
    the [buffer pool](glossary.html#glos_buffer_pool "buffer pool") and merging data
    from the [change buffer](glossary.html#glos_change_buffer "change buffer").
  id: totrans-1386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)变量定义了`InnoDB`后台任务每秒（IOPS）可用的I/O操作数量，例如从[缓冲池](glossary.html#glos_buffer_pool
    "缓冲池")刷新页面和从[更改缓冲区](glossary.html#glos_change_buffer "更改缓冲区")合并数据。'
- en: For information about configuring the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    variable, see [Section 17.8.7, “Configuring InnoDB I/O Capacity”](innodb-configuring-io-capacity.html
    "17.8.7 Configuring InnoDB I/O Capacity").
  id: totrans-1387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关配置[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)变量的信息，请参见[第17.8.7节，“配置InnoDB
    I/O容量”](innodb-configuring-io-capacity.html "17.8.7 配置InnoDB I/O容量")。
- en: '[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)'
  id: totrans-1388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)'
- en: '| Command-Line Format | `--innodb-io-capacity-max=#` |'
  id: totrans-1389
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-io-capacity-max=#` |'
- en: '| System Variable | `[innodb_io_capacity_max](innodb-parameters.html#sysvar_innodb_io_capacity_max)`
    |'
  id: totrans-1390
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_io_capacity_max](innodb-parameters.html#sysvar_innodb_io_capacity_max)`
    |'
- en: '| Scope | Global |'
  id: totrans-1391
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1392
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1393
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1394
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `see description` |'
  id: totrans-1395
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `见描述` |'
- en: '| Minimum Value | `100` |'
  id: totrans-1396
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `100` |'
- en: '| Maximum Value (32-bit platforms) | `2**32-1` |'
  id: totrans-1397
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `2**32-1` |'
- en: '| Maximum Value (Unix, 64-bit platforms, ≥ 8.0.29) | `2**32-1` |'
  id: totrans-1398
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（Unix，64位平台，≥ 8.0.29） | `2**32-1` |'
- en: '| Maximum Value (Unix, 64-bit platforms, ≤ 8.0.28) | `2**64-1` |'
  id: totrans-1399
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（Unix，64位平台，≤ 8.0.28） | `2**64-1` |'
- en: '| Maximum Value (Windows, 64-bit platforms) | `2**32-1` |'
  id: totrans-1400
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（Windows，64位平台） | `2**32-1` |'
- en: If flushing activity falls behind, `InnoDB` can flush more aggressively, at
    a higher rate of I/O operations per second (IOPS) than defined by the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    variable. The [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    variable defines a maximum number of IOPS performed by `InnoDB` background tasks
    in such situations.
  id: totrans-1401
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果刷新活动落后，`InnoDB`可以以比[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)变量定义的更高的I/O操作每秒（IOPS）速率更积极地刷新。[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)变量定义了在这种情况下`InnoDB`后台任务执行的最大IOPS数量。
- en: For information about configuring the [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    variable, see [Section 17.8.7, “Configuring InnoDB I/O Capacity”](innodb-configuring-io-capacity.html
    "17.8.7 Configuring InnoDB I/O Capacity").
  id: totrans-1402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关配置[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)变量的信息，请参见[第17.8.7节，“配置InnoDB
    I/O容量”](innodb-configuring-io-capacity.html "17.8.7 配置InnoDB I/O容量")。
- en: '[`innodb_limit_optimistic_insert_debug`](innodb-parameters.html#sysvar_innodb_limit_optimistic_insert_debug)'
  id: totrans-1403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_limit_optimistic_insert_debug`](innodb-parameters.html#sysvar_innodb_limit_optimistic_insert_debug)'
- en: '| Command-Line Format | `--innodb-limit-optimistic-insert-debug=#` |'
  id: totrans-1404
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-limit-optimistic-insert-debug=#` |'
- en: '| System Variable | `[innodb_limit_optimistic_insert_debug](innodb-parameters.html#sysvar_innodb_limit_optimistic_insert_debug)`
    |'
  id: totrans-1405
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_limit_optimistic_insert_debug](innodb-parameters.html#sysvar_innodb_limit_optimistic_insert_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-1406
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1407
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1408
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1409
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-1410
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1411
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `2**32-1` |'
  id: totrans-1412
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2**32-1` |'
- en: Limits the number of records per [B-tree](glossary.html#glos_b_tree "B-tree")
    page. A default value of 0 means that no limit is imposed. This option is only
    available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-1413
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 限制每个[B树](glossary.html#glos_b_tree "B树")页面的记录数。默认值为0表示不施加限制。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译调试支持时才可用。
- en: '[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)'
  id: totrans-1414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)'
- en: '| Command-Line Format | `--innodb-lock-wait-timeout=#` |'
  id: totrans-1415
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-lock-wait-timeout=#` |'
- en: '| System Variable | `[innodb_lock_wait_timeout](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)`
    |'
  id: totrans-1416
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_lock_wait_timeout](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-1417
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-1418
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1419
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1420
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `50` |'
  id: totrans-1421
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `50` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1422
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `1073741824` |'
  id: totrans-1423
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1073741824` |'
- en: '| Unit | seconds |'
  id: totrans-1424
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 秒 |'
- en: 'The length of time in seconds an `InnoDB` [transaction](glossary.html#glos_transaction
    "transaction") waits for a [row lock](glossary.html#glos_row_lock "row lock")
    before giving up. The default value is 50 seconds. A transaction that tries to
    access a row that is locked by another `InnoDB` transaction waits at most this
    many seconds for write access to the row before issuing the following error:'
  id: totrans-1425
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在`InnoDB` [事务](glossary.html#glos_transaction "事务")在放弃之前等待[行锁](glossary.html#glos_row_lock
    "行锁")的时间长度（以秒为单位）。默认值为50秒。尝试访问被另一个`InnoDB`事务锁定的行的事务在发出以下错误之前最多等待这么多秒以获得对行的写访问：
- en: '[PRE10]'
  id: totrans-1426
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: When a lock wait timeout occurs, the current statement is [rolled back](glossary.html#glos_rollback
    "rollback") (not the entire transaction). To have the entire transaction roll
    back, start the server with the [`--innodb-rollback-on-timeout`](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)
    option. See also [Section 17.21.5, “InnoDB Error Handling”](innodb-error-handling.html
    "17.21.5 InnoDB Error Handling").
  id: totrans-1427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当发生锁等待超时时，当前语句会被[回滚](glossary.html#glos_rollback "回滚")（而不是整个事务）。要使整个事务回滚，请使用[`--innodb-rollback-on-timeout`](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)选项启动服务器。另请参见[第17.21.5节，“InnoDB错误处理”](innodb-error-handling.html
    "17.21.5 InnoDB错误处理")。
- en: You might decrease this value for highly interactive applications or [OLTP](glossary.html#glos_oltp
    "OLTP") systems, to display user feedback quickly or put the update into a queue
    for processing later. You might increase this value for long-running back-end
    operations, such as a transform step in a data warehouse that waits for other
    large insert or update operations to finish.
  id: totrans-1428
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于高度交互式应用程序或[OLTP](glossary.html#glos_oltp "OLTP")系统，您可以减少此值，以便快速显示用户反馈或将更新放入队列以供稍后处理。对于长时间运行的后端操作，例如数据仓库中等待其他大型插入或更新操作完成的转换步骤，您可以增加此值。
- en: '[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    applies to `InnoDB` row locks. A MySQL [table lock](glossary.html#glos_table_lock
    "table lock") does not happen inside `InnoDB` and this timeout does not apply
    to waits for table locks.'
  id: totrans-1429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    适用于 `InnoDB` 行锁。MySQL的[表锁](glossary.html#glos_table_lock "表锁")不会发生在 `InnoDB` 中，因此此超时不适用于等待表锁。'
- en: The lock wait timeout value does not apply to [deadlocks](glossary.html#glos_deadlock
    "deadlock") when [`innodb_deadlock_detect`](innodb-parameters.html#sysvar_innodb_deadlock_detect)
    is enabled (the default) because `InnoDB` detects deadlocks immediately and rolls
    back one of the deadlocked transactions. When [`innodb_deadlock_detect`](innodb-parameters.html#sysvar_innodb_deadlock_detect)
    is disabled, `InnoDB` relies on [`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    for transaction rollback when a deadlock occurs. See [Section 17.7.5.2, “Deadlock
    Detection”](innodb-deadlock-detection.html "17.7.5.2 Deadlock Detection").
  id: totrans-1430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用（默认）[`innodb_deadlock_detect`](innodb-parameters.html#sysvar_innodb_deadlock_detect)
    时，锁等待超时值不适用于[死锁](glossary.html#glos_deadlock "死锁")，因为 `InnoDB` 立即检测到死锁并回滚其中一个死锁事务。当禁用[`innodb_deadlock_detect`](innodb-parameters.html#sysvar_innodb_deadlock_detect)
    时，`InnoDB` 依赖于[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    在发生死锁时进行事务回滚。参见[第17.7.5.2节，“死锁检测”](innodb-deadlock-detection.html "17.7.5.2 死锁检测")。
- en: '[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    can be set at runtime with the `SET GLOBAL` or `SET SESSION` statement. Changing
    the `GLOBAL` setting requires privileges sufficient to set global system variables
    (see [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges")) and affects the operation of all clients
    that subsequently connect. Any client can change the `SESSION` setting for [`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout),
    which affects only that client.'
  id: totrans-1431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)可以使用`SET
    GLOBAL`或`SET SESSION`语句在运行时设置。更改`GLOBAL`设置需要足够权限来设置全局系统变量（请参阅[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")），并影响随后连接的所有客户端的操作。任何客户端都可以更改[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)的`SESSION`设置，这仅影响该客户端。'
- en: '[`innodb_log_buffer_size`](innodb-parameters.html#sysvar_innodb_log_buffer_size)'
  id: totrans-1432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_buffer_size`](innodb-parameters.html#sysvar_innodb_log_buffer_size)'
- en: '| Command-Line Format | `--innodb-log-buffer-size=#` |'
  id: totrans-1433
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-buffer-size=#` |'
- en: '| System Variable | `[innodb_log_buffer_size](innodb-parameters.html#sysvar_innodb_log_buffer_size)`
    |'
  id: totrans-1434
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_buffer_size](innodb-parameters.html#sysvar_innodb_log_buffer_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1435
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1436
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1437
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1438
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `16777216` |'
  id: totrans-1439
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `16777216` |'
- en: '| Minimum Value | `1048576` |'
  id: totrans-1440
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1048576` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1441
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: The size in bytes of the buffer that `InnoDB` uses to write to the [log files](glossary.html#glos_log_file
    "log file") on disk. The default is 16MB. A large [log buffer](glossary.html#glos_log_buffer
    "log buffer") enables large [transactions](glossary.html#glos_transaction "transaction")
    to run without the need to write the log to disk before the transactions [commit](glossary.html#glos_commit
    "commit"). Thus, if you have transactions that update, insert, or delete many
    rows, making the log buffer larger saves disk I/O. For related information, see
    [Memory Configuration](innodb-init-startup-configuration.html#innodb-startup-memory-configuration
    "Memory Configuration"), and [Section 10.5.4, “Optimizing InnoDB Redo Logging”](optimizing-innodb-logging.html
    "10.5.4 Optimizing InnoDB Redo Logging"). For general I/O tuning advice, see [Section 10.5.8,
    “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing
    InnoDB Disk I/O").
  id: totrans-1442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`用于在磁盘上写入[日志文件](glossary.html#glos_log_file "日志文件")的缓冲区大小（以字节为单位）。默认值为16MB。较大的[日志缓冲区](glossary.html#glos_log_buffer
    "日志缓冲区")使得大型[事务](glossary.html#glos_transaction "事务")可以在提交之前无需将日志写入磁盘。因此，如果您有更新、插入或删除多行的事务，增大日志缓冲区可以节省磁盘I/O。有关相关信息，请参阅[内存配置](innodb-init-startup-configuration.html#innodb-startup-memory-configuration
    "内存配置")和[第10.5.4节，“优化InnoDB重做日志记录”](optimizing-innodb-logging.html "10.5.4 优化InnoDB重做日志记录")。有关一般I/O调优建议，请参阅[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。'
- en: '[`innodb_log_checkpoint_fuzzy_now`](innodb-parameters.html#sysvar_innodb_log_checkpoint_fuzzy_now)'
  id: totrans-1443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_checkpoint_fuzzy_now`](innodb-parameters.html#sysvar_innodb_log_checkpoint_fuzzy_now)'
- en: '| Command-Line Format | `--innodb-log-checkpoint-fuzzy-now[={OFF&#124;ON}]`
    |'
  id: totrans-1444
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-checkpoint-fuzzy-now[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.13 |'
  id: totrans-1445
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.13 |'
- en: '| System Variable | `[innodb_log_checkpoint_fuzzy_now](innodb-parameters.html#sysvar_innodb_log_checkpoint_fuzzy_now)`
    |'
  id: totrans-1446
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_checkpoint_fuzzy_now](innodb-parameters.html#sysvar_innodb_log_checkpoint_fuzzy_now)`
    |'
- en: '| Scope | Global |'
  id: totrans-1447
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1448
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1449
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1450
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1451
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enable this debug option to force `InnoDB` to write a fuzzy checkpoint. This
    option is only available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-1452
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此调试选项以强制`InnoDB`执行模糊检查点。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译时才可用。
- en: '[`innodb_log_checkpoint_now`](innodb-parameters.html#sysvar_innodb_log_checkpoint_now)'
  id: totrans-1453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_checkpoint_now`](innodb-parameters.html#sysvar_innodb_log_checkpoint_now)'
- en: '| Command-Line Format | `--innodb-log-checkpoint-now[={OFF&#124;ON}]` |'
  id: totrans-1454
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-checkpoint-now[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_log_checkpoint_now](innodb-parameters.html#sysvar_innodb_log_checkpoint_now)`
    |'
  id: totrans-1455
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_checkpoint_now](innodb-parameters.html#sysvar_innodb_log_checkpoint_now)`
    |'
- en: '| Scope | Global |'
  id: totrans-1456
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1457
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1458
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1459
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1460
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enable this debug option to force `InnoDB` to write a checkpoint. This option
    is only available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-1461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此调试选项以强制`InnoDB`写入检查点。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake**选项编译时才可用。
- en: '[`innodb_log_checksums`](innodb-parameters.html#sysvar_innodb_log_checksums)'
  id: totrans-1462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_checksums`](innodb-parameters.html#sysvar_innodb_log_checksums)'
- en: '| Command-Line Format | `--innodb-log-checksums[={OFF&#124;ON}]` |'
  id: totrans-1463
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-checksums[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_log_checksums](innodb-parameters.html#sysvar_innodb_log_checksums)`
    |'
  id: totrans-1464
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_checksums](innodb-parameters.html#sysvar_innodb_log_checksums)`
    |'
- en: '| Scope | Global |'
  id: totrans-1465
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1466
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1467
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1468
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-1469
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Enables or disables checksums for redo log pages.
  id: totrans-1470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用或禁用重做日志页面的校验和。
- en: '[`innodb_log_checksums=ON`](innodb-parameters.html#sysvar_innodb_log_checksums)
    enables the `CRC-32C` checksum algorithm for redo log pages. When [`innodb_log_checksums`](innodb-parameters.html#sysvar_innodb_log_checksums)
    is disabled, the contents of the redo log page checksum field are ignored.'
  id: totrans-1471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_log_checksums=ON`](innodb-parameters.html#sysvar_innodb_log_checksums)启用`CRC-32C`校验算法用于重做日志页面。当禁用[`innodb_log_checksums`](innodb-parameters.html#sysvar_innodb_log_checksums)时，重做日志页面校验字段的内容将被忽略。'
- en: Checksums on the redo log header page and redo log checkpoint pages are never
    disabled.
  id: totrans-1472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重做日志头页面和重做日志检查点页面上的校验和永远不会被禁用。
- en: '[`innodb_log_compressed_pages`](innodb-parameters.html#sysvar_innodb_log_compressed_pages)'
  id: totrans-1473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_compressed_pages`](innodb-parameters.html#sysvar_innodb_log_compressed_pages)'
- en: '| Command-Line Format | `--innodb-log-compressed-pages[={OFF&#124;ON}]` |'
  id: totrans-1474
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-compressed-pages[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_log_compressed_pages](innodb-parameters.html#sysvar_innodb_log_compressed_pages)`
    |'
  id: totrans-1475
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_compressed_pages](innodb-parameters.html#sysvar_innodb_log_compressed_pages)`
    |'
- en: '| Scope | Global |'
  id: totrans-1476
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1477
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1478
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1479
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-1480
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Specifies whether images of [re-compressed](glossary.html#glos_compression "compression")
    [pages](glossary.html#glos_page "page") are written to the [redo log](glossary.html#glos_redo_log
    "redo log"). Re-compression may occur when changes are made to compressed data.
  id: totrans-1481
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定是否将[重新压缩](glossary.html#glos_compression "compression")的[页面](glossary.html#glos_page
    "page")图像写入[重做日志](glossary.html#glos_redo_log "redo log")。当对压缩数据进行更改时可能会发生重新压缩。
- en: '[`innodb_log_compressed_pages`](innodb-parameters.html#sysvar_innodb_log_compressed_pages)
    is enabled by default to prevent corruption that could occur if a different version
    of the `zlib` compression algorithm is used during recovery. If you are certain
    that the `zlib` version is not subject to change, you can disable [`innodb_log_compressed_pages`](innodb-parameters.html#sysvar_innodb_log_compressed_pages)
    to reduce redo log generation for workloads that modify compressed data.'
  id: totrans-1482
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_log_compressed_pages`](innodb-parameters.html#sysvar_innodb_log_compressed_pages)默认启用，以防止在恢复期间使用不同版本的`zlib`压缩算法时可能发生的损坏。如果您确定`zlib`版本不会更改，可以禁用[`innodb_log_compressed_pages`](innodb-parameters.html#sysvar_innodb_log_compressed_pages)以减少修改压缩数据的工作负载的重做日志生成。'
- en: To measure the effect of enabling or disabling [`innodb_log_compressed_pages`](innodb-parameters.html#sysvar_innodb_log_compressed_pages),
    compare redo log generation for both settings under the same workload. Options
    for measuring redo log generation include observing the `Log sequence number`
    (LSN) in the `LOG` section of [`SHOW ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW
    ENGINE Statement") output, or monitoring [`Innodb_os_log_written`](server-status-variables.html#statvar_Innodb_os_log_written)
    status for the number of bytes written to the redo log files.
  id: totrans-1483
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要衡量启用或禁用[`innodb_log_compressed_pages`](innodb-parameters.html#sysvar_innodb_log_compressed_pages)的影响，请比较相同工作负载下两种设置的重做日志生成情况。衡量重做日志生成的选项包括观察[`SHOW
    ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE Statement")输出中`LOG`部分中的`Log
    sequence number`（LSN），或监视[`Innodb_os_log_written`](server-status-variables.html#statvar_Innodb_os_log_written)状态，查看写入重做日志文件的字节数。
- en: For related information, see [Section 17.9.1.6, “Compression for OLTP Workloads”](innodb-performance-compression-oltp.html
    "17.9.1.6 Compression for OLTP Workloads").
  id: totrans-1484
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参阅[第17.9.1.6节，“OLTP工作负载的压缩”](innodb-performance-compression-oltp.html
    "17.9.1.6 OLTP工作负载的压缩")。
- en: '[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)'
  id: totrans-1485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)'
- en: '| Command-Line Format | `--innodb-log-file-size=#` |'
  id: totrans-1486
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-file-size=#` |'
- en: '| Deprecated | 8.0.30 |'
  id: totrans-1487
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.30 |'
- en: '| System Variable | `[innodb_log_file_size](innodb-parameters.html#sysvar_innodb_log_file_size)`
    |'
  id: totrans-1488
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_file_size](innodb-parameters.html#sysvar_innodb_log_file_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1489
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1490
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1491
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1492
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `50331648` |'
  id: totrans-1493
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `50331648` |'
- en: '| Minimum Value | `4194304` |'
  id: totrans-1494
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `4194304` |'
- en: '| Maximum Value | `512GB / innodb_log_files_in_group` |'
  id: totrans-1495
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `512GB / innodb_log_files_in_group` |'
- en: '| Unit | bytes |'
  id: totrans-1496
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: Note
  id: totrans-1497
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    and [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)
    are deprecated in MySQL 8.0.30\. These variables are superseded by [`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity).
    For more information, see [Section 17.6.5, “Redo Log”](innodb-redo-log.html "17.6.5 Redo
    Log").'
  id: totrans-1498
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)和[`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)在MySQL
    8.0.30中已弃用。这些变量已被[`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)取代。有关更多信息，请参阅[第17.6.5节，“重做日志”](innodb-redo-log.html
    "17.6.5 重做日志")。'
- en: The size in bytes of each [log file](glossary.html#glos_log_file "log file")
    in a [log group](glossary.html#glos_log_group "log group"). The combined size
    of log files ([`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    * [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group))
    cannot exceed a maximum value that is slightly less than 512GB. A pair of 255
    GB log files, for example, approaches the limit but does not exceed it. The default
    value is 48MB.
  id: totrans-1499
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个[日志组](glossary.html#glos_log_group "日志组")中每个[日志文件](glossary.html#glos_log_file
    "日志文件")的大小（[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    * [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)）。日志文件的组合大小（[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    * [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)）不能超过略小于512GB的最大值。例如，一对255GB的日志文件接近限制但不超过。默认值为48MB。
- en: Generally, the combined size of the log files should be large enough that the
    server can smooth out peaks and troughs in workload activity, which often means
    that there is enough redo log space to handle more than an hour of write activity.
    The larger the value, the less checkpoint flush activity is required in the buffer
    pool, saving disk I/O. Larger log files also make [crash recovery](glossary.html#glos_crash_recovery
    "crash recovery") slower.
  id: totrans-1500
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常，日志文件的组合大小应足够大，以便服务器可以平滑处理工作负载活动的峰值和谷值，这通常意味着有足够的重做日志空间来处理超过一个小时的写入活动。数值越大，在缓冲池中需要的检查点刷新活动就越少，从而节省磁盘I/O。更大的日志文件也会使[崩溃恢复](glossary.html#glos_crash_recovery
    "崩溃恢复")变慢。
- en: The minimum [`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    is 4MB.
  id: totrans-1501
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)的最小值为4MB。'
- en: For related information, see [Redo Log Configuration](innodb-init-startup-configuration.html#innodb-startup-log-file-configuration
    "Redo Log Configuration"). For general I/O tuning advice, see [Section 10.5.8,
    “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing
    InnoDB Disk I/O").
  id: totrans-1502
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[重做日志配置](innodb-init-startup-configuration.html#innodb-startup-log-file-configuration
    "Redo Log Configuration")。有关一般I/O调优建议，请参阅[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 Optimizing InnoDB Disk I/O")。
- en: If [`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)
    is enabled, the [`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    value is automatically configured if it is not explicitly defined. For more information,
    see [Section 17.8.12, “Enabling Automatic Configuration for a Dedicated MySQL
    Server”](innodb-dedicated-server.html "17.8.12 Enabling Automatic Configuration
    for a Dedicated MySQL Server").
  id: totrans-1503
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)，并且未明确定义，则[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)的值将自动配置。有关更多信息，请参阅[第17.8.12节，“为专用MySQL服务器启用自动配置”](innodb-dedicated-server.html
    "17.8.12 Enabling Automatic Configuration for a Dedicated MySQL Server")。
- en: '[`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)'
  id: totrans-1504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)'
- en: '| Command-Line Format | `--innodb-log-files-in-group=#` |'
  id: totrans-1505
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-files-in-group=#` |'
- en: '| Deprecated | 8.0.30 |'
  id: totrans-1506
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.30 |'
- en: '| System Variable | `[innodb_log_files_in_group](innodb-parameters.html#sysvar_innodb_log_files_in_group)`
    |'
  id: totrans-1507
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_files_in_group](innodb-parameters.html#sysvar_innodb_log_files_in_group)`
    |'
- en: '| Scope | Global |'
  id: totrans-1508
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1509
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1510
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1511
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `2` |'
  id: totrans-1512
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `2` |'
- en: '| Minimum Value | `2` |'
  id: totrans-1513
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `2` |'
- en: '| Maximum Value | `100` |'
  id: totrans-1514
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `100` |'
- en: Note
  id: totrans-1515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    and [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)
    are deprecated in MySQL 8.0.30\. These variables are superseded by [`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity).
    For more information, see [Section 17.6.5, “Redo Log”](innodb-redo-log.html "17.6.5 Redo
    Log").'
  id: totrans-1516
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)和[`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)在MySQL
    8.0.30中已弃用。这些变量已被[`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)取代。有关更多信息，请参阅[第17.6.5节，“重做日志”](innodb-redo-log.html
    "17.6.5 Redo Log")。'
- en: The number of [log files](glossary.html#glos_log_file "log file") in the [log
    group](glossary.html#glos_log_group "log group"). `InnoDB` writes to the files
    in a circular fashion. The default (and recommended) value is 2\. The location
    of the files is specified by [`innodb_log_group_home_dir`](innodb-parameters.html#sysvar_innodb_log_group_home_dir).
    The combined size of log files ([`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    * [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group))
    can be up to 512GB.
  id: totrans-1517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[日志文件](glossary.html#glos_log_file "log file")在[日志组](glossary.html#glos_log_group
    "log group")中的数量。`InnoDB`以循环方式写入这些文件。默认（也是推荐的）值为2。文件的位置由[`innodb_log_group_home_dir`](innodb-parameters.html#sysvar_innodb_log_group_home_dir)指定。日志文件的组合大小（[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    * [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)）最多可达512GB。'
- en: For related information, see [Redo Log Configuration](innodb-init-startup-configuration.html#innodb-startup-log-file-configuration
    "Redo Log Configuration").
  id: totrans-1518
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[重做日志配置](innodb-init-startup-configuration.html#innodb-startup-log-file-configuration
    "Redo Log Configuration")。
- en: If [`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)
    is enabled, [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)
    is automatically configured if it is not explicitly defined. For more information,
    see [Section 17.8.12, “Enabling Automatic Configuration for a Dedicated MySQL
    Server”](innodb-dedicated-server.html "17.8.12 Enabling Automatic Configuration
    for a Dedicated MySQL Server").
  id: totrans-1519
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了[`innodb_dedicated_server`](innodb-parameters.html#sysvar_innodb_dedicated_server)，并且未明确定义，则[`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)将自动配置。有关更多信息，请参阅[第17.8.12节，“为专用MySQL服务器启用自动配置”](innodb-dedicated-server.html
    "17.8.12 Enabling Automatic Configuration for a Dedicated MySQL Server")。
- en: '[`innodb_log_group_home_dir`](innodb-parameters.html#sysvar_innodb_log_group_home_dir)'
  id: totrans-1520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_group_home_dir`](innodb-parameters.html#sysvar_innodb_log_group_home_dir)'
- en: '| Command-Line Format | `--innodb-log-group-home-dir=dir_name` |'
  id: totrans-1521
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-group-home-dir=dir_name` |'
- en: '| System Variable | `[innodb_log_group_home_dir](innodb-parameters.html#sysvar_innodb_log_group_home_dir)`
    |'
  id: totrans-1522
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_group_home_dir](innodb-parameters.html#sysvar_innodb_log_group_home_dir)`
    |'
- en: '| Scope | Global |'
  id: totrans-1523
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1524
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1525
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Directory name |'
  id: totrans-1526
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: The directory path to the `InnoDB` [redo log](glossary.html#glos_redo_log "redo
    log") files.
  id: totrans-1527
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [重做日志](glossary.html#glos_redo_log "redo log")文件的目录路径。'
- en: For related information, see [Redo Log Configuration](innodb-init-startup-configuration.html#innodb-startup-log-file-configuration
    "Redo Log Configuration").
  id: totrans-1528
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关信息，请参阅[重做日志配置](innodb-init-startup-configuration.html#innodb-startup-log-file-configuration
    "Redo Log Configuration")。
- en: '[`innodb_log_spin_cpu_abs_lwm`](innodb-parameters.html#sysvar_innodb_log_spin_cpu_abs_lwm)'
  id: totrans-1529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_spin_cpu_abs_lwm`](innodb-parameters.html#sysvar_innodb_log_spin_cpu_abs_lwm)'
- en: '| Command-Line Format | `--innodb-log-spin-cpu-abs-lwm=#` |'
  id: totrans-1530
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-spin-cpu-abs-lwm=#` |'
- en: '| System Variable | `[innodb_log_spin_cpu_abs_lwm](innodb-parameters.html#sysvar_innodb_log_spin_cpu_abs_lwm)`
    |'
  id: totrans-1531
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_spin_cpu_abs_lwm](innodb-parameters.html#sysvar_innodb_log_spin_cpu_abs_lwm)`
    |'
- en: '| Scope | Global |'
  id: totrans-1532
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1533
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1534
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1535
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `80` |'
  id: totrans-1536
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `80` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1537
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1538
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: Defines the minimum amount of CPU usage below which user threads no longer spin
    while waiting for flushed redo. The value is expressed as a sum of CPU core usage.
    For example, The default value of 80 is 80% of a single CPU core. On a system
    with a multi-core processor, a value of 150 represents 100% usage of one CPU core
    plus 50% usage of a second CPU core.
  id: totrans-1539
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了用户线程在等待刷新的重做时不再自旋的最小CPU使用率。该值表示为CPU核心使用率的总和。例如，80的默认值是单个CPU核心的80%。在具有多核处理器的系统上，值为150表示一个CPU核心的100%使用率加上第二个CPU核心的50%使用率。
- en: For related information, see [Section 10.5.4, “Optimizing InnoDB Redo Logging”](optimizing-innodb-logging.html
    "10.5.4 Optimizing InnoDB Redo Logging").
  id: totrans-1540
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关信息，请参阅[第10.5.4节，“优化InnoDB重做日志”](optimizing-innodb-logging.html "10.5.4 Optimizing
    InnoDB Redo Logging")。
- en: '[`innodb_log_spin_cpu_pct_hwm`](innodb-parameters.html#sysvar_innodb_log_spin_cpu_pct_hwm)'
  id: totrans-1541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_spin_cpu_pct_hwm`](innodb-parameters.html#sysvar_innodb_log_spin_cpu_pct_hwm)'
- en: '| Command-Line Format | `--innodb-log-spin-cpu-pct-hwm=#` |'
  id: totrans-1542
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-spin-cpu-pct-hwm=#` |'
- en: '| System Variable | `[innodb_log_spin_cpu_pct_hwm](innodb-parameters.html#sysvar_innodb_log_spin_cpu_pct_hwm)`
    |'
  id: totrans-1543
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_spin_cpu_pct_hwm](innodb-parameters.html#sysvar_innodb_log_spin_cpu_pct_hwm)`
    |'
- en: '| Scope | Global |'
  id: totrans-1544
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1545
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1546
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1547
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `50` |'
  id: totrans-1548
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `50` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1549
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `100` |'
  id: totrans-1550
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `100` |'
- en: Defines the maximum amount of CPU usage above which user threads no longer spin
    while waiting for flushed redo. The value is expressed as a percentage of the
    combined total processing power of all CPU cores. The default value is 50%. For
    example, 100% usage of two CPU cores is 50% of the combined CPU processing power
    on a server with four CPU cores.
  id: totrans-1551
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了用户线程在等待刷新的重做时不再自旋的最大CPU使用率。该值表示为所有CPU核心的总处理能力的百分比。默认值为50%。例如，对于具有四个CPU核心的服务器，两个CPU核心的100%使用率是组合CPU处理能力的50%。
- en: The [`innodb_log_spin_cpu_pct_hwm`](innodb-parameters.html#sysvar_innodb_log_spin_cpu_pct_hwm)
    variable respects processor affinity. For example, if a server has 48 cores but
    the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") process is pinned
    to only four CPU cores, the other 44 CPU cores are ignored.
  id: totrans-1552
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_log_spin_cpu_pct_hwm`](innodb-parameters.html#sysvar_innodb_log_spin_cpu_pct_hwm)变量遵守处理器亲和性。例如，如果服务器有48个核心，但[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")进程只固定在四个CPU核心上，则其他44个CPU核心将被忽略。'
- en: For related information, see [Section 10.5.4, “Optimizing InnoDB Redo Logging”](optimizing-innodb-logging.html
    "10.5.4 Optimizing InnoDB Redo Logging").
  id: totrans-1553
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关信息，请参阅[第10.5.4节，“优化InnoDB重做日志”](optimizing-innodb-logging.html "10.5.4 Optimizing
    InnoDB Redo Logging")。
- en: '[`innodb_log_wait_for_flush_spin_hwm`](innodb-parameters.html#sysvar_innodb_log_wait_for_flush_spin_hwm)'
  id: totrans-1554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_wait_for_flush_spin_hwm`](innodb-parameters.html#sysvar_innodb_log_wait_for_flush_spin_hwm)'
- en: '| Command-Line Format | `--innodb-log-wait-for-flush-spin-hwm=#` |'
  id: totrans-1555
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-wait-for-flush-spin-hwm=#` |'
- en: '| System Variable | `[innodb_log_wait_for_flush_spin_hwm](innodb-parameters.html#sysvar_innodb_log_wait_for_flush_spin_hwm)`
    |'
  id: totrans-1556
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_wait_for_flush_spin_hwm](innodb-parameters.html#sysvar_innodb_log_wait_for_flush_spin_hwm)`
    |'
- en: '| Scope | Global |'
  id: totrans-1557
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1558
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1559
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1560
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `400` |'
  id: totrans-1561
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `400` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1562
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value (64-bit platforms) | `2**64-1` |'
  id: totrans-1563
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `2**64-1` |'
- en: '| Maximum Value (32-bit platforms) | `2**32-1` |'
  id: totrans-1564
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `2**32-1` |'
- en: '| Unit | microseconds |'
  id: totrans-1565
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 微秒 |'
- en: Defines the maximum average log flush time beyond which user threads no longer
    spin while waiting for flushed redo. The default value is 400 microseconds.
  id: totrans-1566
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了超过最大平均日志刷新时间的值，用户线程在等待刷新的重做时不再旋转。默认值为400微秒。
- en: For related information, see [Section 10.5.4, “Optimizing InnoDB Redo Logging”](optimizing-innodb-logging.html
    "10.5.4 Optimizing InnoDB Redo Logging").
  id: totrans-1567
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关信息，请参见[Section 10.5.4, “Optimizing InnoDB Redo Logging”](optimizing-innodb-logging.html
    "10.5.4 Optimizing InnoDB Redo Logging")。
- en: '[`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)'
  id: totrans-1568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)'
- en: '| Command-Line Format | `--innodb-log-write-ahead-size=#` |'
  id: totrans-1569
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-write-ahead-size=#` |'
- en: '| System Variable | `[innodb_log_write_ahead_size](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)`
    |'
  id: totrans-1570
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_write_ahead_size](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1571
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1572
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1573
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1574
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `8192` |'
  id: totrans-1575
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `8192` |'
- en: '| Minimum Value | `512 (log file block size)` |'
  id: totrans-1576
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `512（日志文件块大小）` |'
- en: '| Maximum Value | `Equal to innodb_page_size` |'
  id: totrans-1577
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `等于innodb_page_size` |'
- en: '| Unit | bytes |'
  id: totrans-1578
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: Defines the write-ahead block size for the redo log, in bytes. To avoid “read-on-write”,
    set [`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)
    to match the operating system or file system cache block size. The default setting
    is 8192 bytes. Read-on-write occurs when redo log blocks are not entirely cached
    to the operating system or file system due to a mismatch between write-ahead block
    size for the redo log and operating system or file system cache block size.
  id: totrans-1579
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了重做日志的预写块大小，以字节为单位。为避免“读写”，将[`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)设置为与操作系统或文件系统缓存块大小相匹配。默认设置为8192字节。当由于重做日志块与操作系统或文件系统的缓存块大小不匹配而导致重做日志块未完全缓存在操作系统或文件系统中时，就会发生读写。
- en: Valid values for [`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)
    are multiples of the `InnoDB` log file block size (2^n). The minimum value is
    the `InnoDB` log file block size (512). Write-ahead does not occur when the minimum
    value is specified. The maximum value is equal to the [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    value. If you specify a value for [`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)
    that is larger than the [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    value, the [`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)
    setting is truncated to the [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    value.
  id: totrans-1580
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)的有效值是`InnoDB`日志文件块大小（2^n）的倍数。最小值是`InnoDB`日志文件块大小（512）。当指定最小值时，不会发生预写。最大值等于[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)值。如果为[`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)指定的值大于[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)值，则[`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)设置将被截断为[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)值。'
- en: Setting the [`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)
    value too low in relation to the operating system or file system cache block size
    results in “read-on-write”. Setting the value too high may have a slight impact
    on `fsync` performance for log file writes due to several blocks being written
    at once.
  id: totrans-1581
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果[`innodb_log_write_ahead_size`](innodb-parameters.html#sysvar_innodb_log_write_ahead_size)的值相对于操作系统或文件系统缓存块大小设置得太低，会导致“写入时读取”。如果值设置得太高，可能会对`fsync`性能产生轻微影响，因为多个块一次被写入。
- en: For related information, see [Section 10.5.4, “Optimizing InnoDB Redo Logging”](optimizing-innodb-logging.html
    "10.5.4 Optimizing InnoDB Redo Logging").
  id: totrans-1582
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第10.5.4节，“优化InnoDB重做日志记录”](optimizing-innodb-logging.html "10.5.4 Optimizing
    InnoDB Redo Logging")。
- en: '[`innodb_log_writer_threads`](innodb-parameters.html#sysvar_innodb_log_writer_threads)'
  id: totrans-1583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_log_writer_threads`](innodb-parameters.html#sysvar_innodb_log_writer_threads)'
- en: '| Command-Line Format | `--innodb-log-writer-threads[={OFF&#124;ON}]` |'
  id: totrans-1584
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-log-writer-threads[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.22 |'
  id: totrans-1585
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.22 |'
- en: '| System Variable | `[innodb_log_writer_threads](innodb-parameters.html#sysvar_innodb_log_writer_threads)`
    |'
  id: totrans-1586
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_log_writer_threads](innodb-parameters.html#sysvar_innodb_log_writer_threads)`
    |'
- en: '| Scope | Global |'
  id: totrans-1587
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1588
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1589
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1590
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-1591
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Enables dedicated log writer threads for writing redo log records from the log
    buffer to the system buffers and flushing the system buffers to the redo log files.
    Dedicated log writer threads can improve performance on high-concurrency systems,
    but for low-concurrency systems, disabling dedicated log writer threads provides
    better performance.
  id: totrans-1592
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用专用日志写入线程，用于将重做日志记录从日志缓冲区写入系统缓冲区并将系统缓冲区刷新到重做日志文件。专用日志写入线程可以提高高并发系统的性能，但对于低并发系统，禁用专用日志写入线程可以提供更好的性能。
- en: For more information, see [Section 10.5.4, “Optimizing InnoDB Redo Logging”](optimizing-innodb-logging.html
    "10.5.4 Optimizing InnoDB Redo Logging").
  id: totrans-1593
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第10.5.4节，“优化InnoDB重做日志记录”](optimizing-innodb-logging.html "10.5.4 Optimizing
    InnoDB Redo Logging")。
- en: '[`innodb_lru_scan_depth`](innodb-parameters.html#sysvar_innodb_lru_scan_depth)'
  id: totrans-1594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_lru_scan_depth`](innodb-parameters.html#sysvar_innodb_lru_scan_depth)'
- en: '| Command-Line Format | `--innodb-lru-scan-depth=#` |'
  id: totrans-1595
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-lru-scan-depth=#` |'
- en: '| System Variable | `[innodb_lru_scan_depth](innodb-parameters.html#sysvar_innodb_lru_scan_depth)`
    |'
  id: totrans-1596
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_lru_scan_depth](innodb-parameters.html#sysvar_innodb_lru_scan_depth)`
    |'
- en: '| Scope | Global |'
  id: totrans-1597
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1598
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1599
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1600
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1024` |'
  id: totrans-1601
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1024` |'
- en: '| Minimum Value | `100` |'
  id: totrans-1602
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `100` |'
- en: '| Maximum Value (64-bit platforms) | `2**64-1` |'
  id: totrans-1603
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `2**64-1` |'
- en: '| Maximum Value (32-bit platforms) | `2**32-1` |'
  id: totrans-1604
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `2**32-1` |'
- en: A parameter that influences the algorithms and heuristics for the [flush](glossary.html#glos_flush
    "flush") operation for the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool"). Primarily of interest to performance experts tuning I/O-intensive
    workloads. It specifies, per buffer pool instance, how far down the buffer pool
    LRU page list the page cleaner thread scans looking for [dirty pages](glossary.html#glos_dirty_page
    "dirty page") to flush. This is a background operation performed once per second.
  id: totrans-1605
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 影响`InnoDB`[缓冲池](glossary.html#glos_buffer_pool "buffer pool")的[刷新](glossary.html#glos_flush
    "flush")操作算法和启发式的参数。主要关注性能专家调整I/O密集型工作负载。它指定了每个缓冲池实例，页面清理线程在LRU页面列表中扫描多深以查找要刷新的[脏页](glossary.html#glos_dirty_page
    "dirty page")。这是一个每秒执行一次的后台操作。
- en: A setting smaller than the default is generally suitable for most workloads.
    A value that is much higher than necessary may impact performance. Only consider
    increasing the value if you have spare I/O capacity under a typical workload.
    Conversely, if a write-intensive workload saturates your I/O capacity, decrease
    the value, especially in the case of a large buffer pool.
  id: totrans-1606
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一般来说，比默认值小的设置对大多数工作负载都适用。如果值远高于必要值，可能会影响性能。只有在典型工作负载下有多余I/O容量时才考虑增加该值。相反，如果写入密集型工作负载使I/O容量饱和，降低该值，尤其是在有大缓冲池的情况下。
- en: When tuning [`innodb_lru_scan_depth`](innodb-parameters.html#sysvar_innodb_lru_scan_depth),
    start with a low value and configure the setting upward with the goal of rarely
    seeing zero free pages. Also, consider adjusting [`innodb_lru_scan_depth`](innodb-parameters.html#sysvar_innodb_lru_scan_depth)
    when changing the number of buffer pool instances, since [`innodb_lru_scan_depth`](innodb-parameters.html#sysvar_innodb_lru_scan_depth)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    defines the amount of work performed by the page cleaner thread each second.
  id: totrans-1607
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在调整[`innodb_lru_scan_depth`](innodb-parameters.html#sysvar_innodb_lru_scan_depth)时，从一个较低值开始，并将设置向上配置，目标是很少看到零空闲页。此外，考虑在更改缓冲池实例数时调整[`innodb_lru_scan_depth`](innodb-parameters.html#sysvar_innodb_lru_scan_depth)，因为[`innodb_lru_scan_depth`](innodb-parameters.html#sysvar_innodb_lru_scan_depth)
    * [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)定义了页面清理线程每秒执行的工作量。
- en: For related information, see [Section 17.8.3.5, “Configuring Buffer Pool Flushing”](innodb-buffer-pool-flushing.html
    "17.8.3.5 Configuring Buffer Pool Flushing"). For general I/O tuning advice, see
    [Section 10.5.8, “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing
    InnoDB Disk I/O").
  id: totrans-1608
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参见[第17.8.3.5节，“配置缓冲池刷新”](innodb-buffer-pool-flushing.html "17.8.3.5 配置缓冲池刷新")。有关一般I/O调优建议，请参见[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。
- en: '[`innodb_max_dirty_pages_pct`](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)'
  id: totrans-1609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_max_dirty_pages_pct`](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)'
- en: '| Command-Line Format | `--innodb-max-dirty-pages-pct=#` |'
  id: totrans-1610
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-max-dirty-pages-pct=#` |'
- en: '| System Variable | `[innodb_max_dirty_pages_pct](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)`
    |'
  id: totrans-1611
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_max_dirty_pages_pct](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)`
    |'
- en: '| Scope | Global |'
  id: totrans-1612
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1613
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1614
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Numeric |'
  id: totrans-1615
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 数值 |'
- en: '| Default Value | `90` |'
  id: totrans-1616
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `90` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1617
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `99.999` |'
  id: totrans-1618
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `99.999` |'
- en: '`InnoDB` tries to [flush](glossary.html#glos_flush "flush") data from the [buffer
    pool](glossary.html#glos_buffer_pool "buffer pool") so that the percentage of
    [dirty pages](glossary.html#glos_dirty_page "dirty page") does not exceed this
    value.'
  id: totrans-1619
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`尝试从[缓冲池](glossary.html#glos_buffer_pool "缓冲池")中刷新数据，以使[脏页](glossary.html#glos_dirty_page
    "脏页")的百分比不超过此值。'
- en: The [`innodb_max_dirty_pages_pct`](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)
    setting establishes a target for flushing activity. It does not affect the rate
    of flushing. For information about managing the rate of flushing, see [Section 17.8.3.5,
    “Configuring Buffer Pool Flushing”](innodb-buffer-pool-flushing.html "17.8.3.5 Configuring
    Buffer Pool Flushing").
  id: totrans-1620
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_max_dirty_pages_pct`](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)
    设置了刷新活动的目标，不影响刷新速率。有关管理刷新速率的信息，请参见[第17.8.3.5节，“配置缓冲池刷新”](innodb-buffer-pool-flushing.html
    "17.8.3.5 配置缓冲池刷新")。'
- en: For related information, see [Section 17.8.3.5, “Configuring Buffer Pool Flushing”](innodb-buffer-pool-flushing.html
    "17.8.3.5 Configuring Buffer Pool Flushing"). For general I/O tuning advice, see
    [Section 10.5.8, “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing
    InnoDB Disk I/O").
  id: totrans-1621
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参见[第17.8.3.5节，“配置缓冲池刷新”](innodb-buffer-pool-flushing.html "17.8.3.5 配置缓冲池刷新")。有关一般I/O调优建议，请参见[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。
- en: '[`innodb_max_dirty_pages_pct_lwm`](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct_lwm)'
  id: totrans-1622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_max_dirty_pages_pct_lwm`](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct_lwm)'
- en: '| Command-Line Format | `--innodb-max-dirty-pages-pct-lwm=#` |'
  id: totrans-1623
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-max-dirty-pages-pct-lwm=#` |'
- en: '| System Variable | `[innodb_max_dirty_pages_pct_lwm](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct_lwm)`
    |'
  id: totrans-1624
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_max_dirty_pages_pct_lwm](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct_lwm)`
    |'
- en: '| Scope | Global |'
  id: totrans-1625
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1626
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1627
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Numeric |'
  id: totrans-1628
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 数值 |'
- en: '| Default Value | `10` |'
  id: totrans-1629
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1630
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `99.999` |'
  id: totrans-1631
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `99.999` |'
- en: Defines a low water mark representing the percentage of [dirty pages](glossary.html#glos_dirty_page
    "dirty page") at which preflushing is enabled to control the dirty page ratio.
    A value of 0 disables the pre-flushing behavior entirely. The configured value
    should always be lower than the [`innodb_max_dirty_pages_pct`](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)
    value. For more information, see [Section 17.8.3.5, “Configuring Buffer Pool Flushing”](innodb-buffer-pool-flushing.html
    "17.8.3.5 Configuring Buffer Pool Flushing").
  id: totrans-1632
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了表示[脏页](glossary.html#glos_dirty_page "脏页")百分比的低水位，当预刷写启用以控制脏页比率时。值为0会完全禁用预刷写行为。配置的值应始终低于[`innodb_max_dirty_pages_pct`](innodb-parameters.html#sysvar_innodb_max_dirty_pages_pct)的值。更多信息，请参见[第17.8.3.5节，“配置缓冲池刷新”](innodb-buffer-pool-flushing.html
    "17.8.3.5 配置缓冲池刷新")。
- en: '[`innodb_max_purge_lag`](innodb-parameters.html#sysvar_innodb_max_purge_lag)'
  id: totrans-1633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_max_purge_lag`](innodb-parameters.html#sysvar_innodb_max_purge_lag)'
- en: '| Command-Line Format | `--innodb-max-purge-lag=#` |'
  id: totrans-1634
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-max-purge-lag=#` |'
- en: '| System Variable | `[innodb_max_purge_lag](innodb-parameters.html#sysvar_innodb_max_purge_lag)`
    |'
  id: totrans-1635
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_max_purge_lag](innodb-parameters.html#sysvar_innodb_max_purge_lag)`
    |'
- en: '| Scope | Global |'
  id: totrans-1636
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1637
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1638
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1639
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-1640
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1641
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1642
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: Defines the desired maximum purge lag. If this value is exceeded, a delay is
    imposed on [`INSERT`](insert.html "15.2.7 INSERT Statement"), [`UPDATE`](update.html
    "15.2.17 UPDATE Statement"), and [`DELETE`](delete.html "15.2.2 DELETE Statement")
    operations to allow time for purge to catch up. The default value is 0, which
    means there is no maximum purge lag and no delay.
  id: totrans-1643
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了期望的最大清除延迟。如果超过此值，将对[`INSERT`](insert.html "15.2.7 INSERT语句")、[`UPDATE`](update.html
    "15.2.17 UPDATE语句")和[`DELETE`](delete.html "15.2.2 DELETE语句")操作施加延迟，以便清除赶上。默认值为0，这意味着没有最大清除延迟和没有延迟。
- en: For more information, see [Section 17.8.9, “Purge Configuration”](innodb-purge-configuration.html
    "17.8.9 Purge Configuration").
  id: totrans-1644
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第17.8.9节，“清除配置”](innodb-purge-configuration.html "17.8.9 清除配置")。
- en: '[`innodb_max_purge_lag_delay`](innodb-parameters.html#sysvar_innodb_max_purge_lag_delay)'
  id: totrans-1645
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_max_purge_lag_delay`](innodb-parameters.html#sysvar_innodb_max_purge_lag_delay)'
- en: '| Command-Line Format | `--innodb-max-purge-lag-delay=#` |'
  id: totrans-1646
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-max-purge-lag-delay=#` |'
- en: '| System Variable | `[innodb_max_purge_lag_delay](innodb-parameters.html#sysvar_innodb_max_purge_lag_delay)`
    |'
  id: totrans-1647
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_max_purge_lag_delay](innodb-parameters.html#sysvar_innodb_max_purge_lag_delay)`
    |'
- en: '| Scope | Global |'
  id: totrans-1648
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1649
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1650
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1651
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-1652
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1653
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `10000000` |'
  id: totrans-1654
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `10000000` |'
- en: '| Unit | microseconds |'
  id: totrans-1655
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 微秒 |'
- en: Specifies the maximum delay in microseconds for the delay imposed when the [`innodb_max_purge_lag`](innodb-parameters.html#sysvar_innodb_max_purge_lag)
    threshold is exceeded. The specified [`innodb_max_purge_lag_delay`](innodb-parameters.html#sysvar_innodb_max_purge_lag_delay)
    value is an upper limit on the delay period calculated by the [`innodb_max_purge_lag`](innodb-parameters.html#sysvar_innodb_max_purge_lag)
    formula.
  id: totrans-1656
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定了当超过[`innodb_max_purge_lag`](innodb-parameters.html#sysvar_innodb_max_purge_lag)阈值时施加的延迟的最大延迟时间（以微秒为单位）。指定的[`innodb_max_purge_lag_delay`](innodb-parameters.html#sysvar_innodb_max_purge_lag_delay)值是由[`innodb_max_purge_lag`](innodb-parameters.html#sysvar_innodb_max_purge_lag)公式计算的延迟期限的上限。
- en: For more information, see [Section 17.8.9, “Purge Configuration”](innodb-purge-configuration.html
    "17.8.9 Purge Configuration").
  id: totrans-1657
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第17.8.9节，“清除配置”](innodb-purge-configuration.html "17.8.9 清除配置")。
- en: '[`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)'
  id: totrans-1658
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)'
- en: '| Command-Line Format | `--innodb-max-undo-log-size=#` |'
  id: totrans-1659
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-max-undo-log-size=#` |'
- en: '| System Variable | `[innodb_max_undo_log_size](innodb-parameters.html#sysvar_innodb_max_undo_log_size)`
    |'
  id: totrans-1660
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_max_undo_log_size](innodb-parameters.html#sysvar_innodb_max_undo_log_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1661
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1662
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1663
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1664
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1073741824` |'
  id: totrans-1665
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1073741824` |'
- en: '| Minimum Value | `10485760` |'
  id: totrans-1666
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `10485760` |'
- en: '| Maximum Value | `2**64-1` |'
  id: totrans-1667
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2**64-1` |'
- en: '| Unit | bytes |'
  id: totrans-1668
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: Defines a threshold size for undo tablespaces. If an undo tablespace exceeds
    the threshold, it can be marked for truncation when [`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)
    is enabled. The default value is 1073741824 bytes (1024 MiB).
  id: totrans-1669
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义回滚表空间的阈值大小。如果回滚表空间超过阈值，则在启用[`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)时可以标记为截断。默认值为1073741824字节（1024
    MiB）。
- en: For more information, see [Truncating Undo Tablespaces](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "Truncating Undo Tablespaces").
  id: totrans-1670
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[截断回滚表空间](innodb-undo-tablespaces.html#truncate-undo-tablespace "截断回滚表空间")。
- en: '[`innodb_merge_threshold_set_all_debug`](innodb-parameters.html#sysvar_innodb_merge_threshold_set_all_debug)'
  id: totrans-1671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_merge_threshold_set_all_debug`](innodb-parameters.html#sysvar_innodb_merge_threshold_set_all_debug)'
- en: '| Command-Line Format | `--innodb-merge-threshold-set-all-debug=#` |'
  id: totrans-1672
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-merge-threshold-set-all-debug=#` |'
- en: '| System Variable | `[innodb_merge_threshold_set_all_debug](innodb-parameters.html#sysvar_innodb_merge_threshold_set_all_debug)`
    |'
  id: totrans-1673
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_merge_threshold_set_all_debug](innodb-parameters.html#sysvar_innodb_merge_threshold_set_all_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-1674
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1675
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1676
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1677
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `50` |'
  id: totrans-1678
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `50` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1679
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `50` |'
  id: totrans-1680
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `50` |'
- en: Defines a page-full percentage value for index pages that overrides the current
    `MERGE_THRESHOLD` setting for all indexes that are currently in the dictionary
    cache. This option is only available if debugging support is compiled in using
    the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option. For related information, see [Section 17.8.11, “Configuring
    the Merge Threshold for Index Pages”](index-page-merge-threshold.html "17.8.11 Configuring
    the Merge Threshold for Index Pages").
  id: totrans-1681
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义索引页的页面满百分比值，该值覆盖当前字典缓存中当前所有索引的`MERGE_THRESHOLD`设置。仅当使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake**选项编译调试支持时才可用此选项。有关相关信息，请参见[第17.8.11节，“配置索引页合并阈值”](index-page-merge-threshold.html
    "17.8.11 配置索引页合并阈值")。
- en: '[`innodb_monitor_disable`](innodb-parameters.html#sysvar_innodb_monitor_disable)'
  id: totrans-1682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_monitor_disable`](innodb-parameters.html#sysvar_innodb_monitor_disable)'
- en: '| Command-Line Format | `--innodb-monitor-disable={counter&#124;module&#124;pattern&#124;all}`
    |'
  id: totrans-1683
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-monitor-disable={counter&#124;module&#124;pattern&#124;all}`
    |'
- en: '| System Variable | `[innodb_monitor_disable](innodb-parameters.html#sysvar_innodb_monitor_disable)`
    |'
  id: totrans-1684
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_monitor_disable](innodb-parameters.html#sysvar_innodb_monitor_disable)`
    |'
- en: '| Scope | Global |'
  id: totrans-1685
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1686
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1687
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-1688
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: This variable acts as a switch, disabling `InnoDB` [metrics counters](glossary.html#glos_metrics_counter
    "metrics counter"). Counter data may be queried using the Information Schema [`INNODB_METRICS`](information-schema-innodb-metrics-table.html
    "28.4.21 The INFORMATION_SCHEMA INNODB_METRICS Table") table. For usage information,
    see [Section 17.15.6, “InnoDB INFORMATION_SCHEMA Metrics Table”](innodb-information-schema-metrics-table.html
    "17.15.6 InnoDB INFORMATION_SCHEMA Metrics Table").
  id: totrans-1689
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量充当开关，禁用`InnoDB`[度量计数器](glossary.html#glos_metrics_counter "度量计数器")。可以使用信息模式[`INNODB_METRICS`](information-schema-innodb-metrics-table.html
    "28.4.21 INFORMATION_SCHEMA INNODB_METRICS表")表查询计数器数据。有关使用信息，请参见[第17.15.6节，“InnoDB
    INFORMATION_SCHEMA度量表”](innodb-information-schema-metrics-table.html "17.15.6 InnoDB
    INFORMATION_SCHEMA度量表")。
- en: '[`innodb_monitor_disable=''latch''`](innodb-parameters.html#sysvar_innodb_monitor_disable)
    disables statistics collection for [`SHOW ENGINE INNODB MUTEX`](show-engine.html
    "15.7.7.15 SHOW ENGINE Statement"). For more information, see [Section 15.7.7.15,
    “SHOW ENGINE Statement”](show-engine.html "15.7.7.15 SHOW ENGINE Statement").'
  id: totrans-1690
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_monitor_disable=''latch''`](innodb-parameters.html#sysvar_innodb_monitor_disable)
    禁用 [`SHOW ENGINE INNODB MUTEX`](show-engine.html "15.7.7.15 SHOW ENGINE 语句") 的统计信息收集。更多信息，请参见
    [第 15.7.7.15 节，“SHOW ENGINE 语句”](show-engine.html "15.7.7.15 SHOW ENGINE 语句")。'
- en: '[`innodb_monitor_enable`](innodb-parameters.html#sysvar_innodb_monitor_enable)'
  id: totrans-1691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_monitor_enable`](innodb-parameters.html#sysvar_innodb_monitor_enable)'
- en: '| Command-Line Format | `--innodb-monitor-enable={counter&#124;module&#124;pattern&#124;all}`
    |'
  id: totrans-1692
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-monitor-enable={counter&#124;module&#124;pattern&#124;all}`
    |'
- en: '| System Variable | `[innodb_monitor_enable](innodb-parameters.html#sysvar_innodb_monitor_enable)`
    |'
  id: totrans-1693
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_monitor_enable](innodb-parameters.html#sysvar_innodb_monitor_enable)`
    |'
- en: '| Scope | Global |'
  id: totrans-1694
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1695
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1696
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-1697
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: This variable acts as a switch, enabling `InnoDB` [metrics counters](glossary.html#glos_metrics_counter
    "metrics counter"). Counter data may be queried using the Information Schema [`INNODB_METRICS`](information-schema-innodb-metrics-table.html
    "28.4.21 The INFORMATION_SCHEMA INNODB_METRICS Table") table. For usage information,
    see [Section 17.15.6, “InnoDB INFORMATION_SCHEMA Metrics Table”](innodb-information-schema-metrics-table.html
    "17.15.6 InnoDB INFORMATION_SCHEMA Metrics Table").
  id: totrans-1698
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量充当开关，启用 `InnoDB` 的 [度量计数器](glossary.html#glos_metrics_counter "度量计数器")。可以使用信息模式
    [`INNODB_METRICS`](information-schema-innodb-metrics-table.html "28.4.21 INFORMATION_SCHEMA
    INNODB_METRICS 表") 表查询计数器数据。有关使用信息，请参见 [第 17.15.6 节，“InnoDB INFORMATION_SCHEMA
    Metrics Table”](innodb-information-schema-metrics-table.html "17.15.6 InnoDB INFORMATION_SCHEMA
    Metrics Table")。
- en: '[`innodb_monitor_enable=''latch''`](innodb-parameters.html#sysvar_innodb_monitor_enable)
    enables statistics collection for [`SHOW ENGINE INNODB MUTEX`](show-engine.html
    "15.7.7.15 SHOW ENGINE Statement"). For more information, see [Section 15.7.7.15,
    “SHOW ENGINE Statement”](show-engine.html "15.7.7.15 SHOW ENGINE Statement").'
  id: totrans-1699
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_monitor_enable=''latch''`](innodb-parameters.html#sysvar_innodb_monitor_enable)
    启用统计信息收集，用于 [`SHOW ENGINE INNODB MUTEX`](show-engine.html "15.7.7.15 SHOW ENGINE
    语句")。更多信息，请参见 [第 15.7.7.15 节，“SHOW ENGINE 语句”](show-engine.html "15.7.7.15 SHOW
    ENGINE 语句")。'
- en: '[`innodb_monitor_reset`](innodb-parameters.html#sysvar_innodb_monitor_reset)'
  id: totrans-1700
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_monitor_reset`](innodb-parameters.html#sysvar_innodb_monitor_reset)'
- en: '| Command-Line Format | `--innodb-monitor-reset={counter&#124;module&#124;pattern&#124;all}`
    |'
  id: totrans-1701
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-monitor-reset={counter&#124;module&#124;pattern&#124;all}`
    |'
- en: '| System Variable | `[innodb_monitor_reset](innodb-parameters.html#sysvar_innodb_monitor_reset)`
    |'
  id: totrans-1702
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_monitor_reset](innodb-parameters.html#sysvar_innodb_monitor_reset)`
    |'
- en: '| Scope | Global |'
  id: totrans-1703
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | ��局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1704
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1705
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-1706
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `NULL` |'
  id: totrans-1707
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NULL` |'
- en: '| Valid Values | `counter``module``pattern``all` |'
  id: totrans-1708
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `counter``module``pattern``all` |'
- en: This variable acts as a switch, resetting the count value for `InnoDB` [metrics
    counters](glossary.html#glos_metrics_counter "metrics counter") to zero. Counter
    data may be queried using the Information Schema [`INNODB_METRICS`](information-schema-innodb-metrics-table.html
    "28.4.21 The INFORMATION_SCHEMA INNODB_METRICS Table") table. For usage information,
    see [Section 17.15.6, “InnoDB INFORMATION_SCHEMA Metrics Table”](innodb-information-schema-metrics-table.html
    "17.15.6 InnoDB INFORMATION_SCHEMA Metrics Table").
  id: totrans-1709
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量充当开关，将 `InnoDB` 的 [度量计数器](glossary.html#glos_metrics_counter "度量计数器") 的计数值重置为零。可以使用信息模式
    [`INNODB_METRICS`](information-schema-innodb-metrics-table.html "28.4.21 INFORMATION_SCHEMA
    INNODB_METRICS 表") 表查询计数器数据。有关使用信息，请参见 [第 17.15.6 节，“InnoDB INFORMATION_SCHEMA
    Metrics Table”](innodb-information-schema-metrics-table.html "17.15.6 InnoDB INFORMATION_SCHEMA
    Metrics Table")。
- en: '[`innodb_monitor_reset=''latch''`](innodb-parameters.html#sysvar_innodb_monitor_reset)
    resets statistics reported by [`SHOW ENGINE INNODB MUTEX`](show-engine.html "15.7.7.15 SHOW
    ENGINE Statement"). For more information, see [Section 15.7.7.15, “SHOW ENGINE
    Statement”](show-engine.html "15.7.7.15 SHOW ENGINE Statement").'
  id: totrans-1710
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_monitor_reset=''latch''`](innodb-parameters.html#sysvar_innodb_monitor_reset)
    重置由 [`SHOW ENGINE INNODB MUTEX`](show-engine.html "15.7.7.15 SHOW ENGINE 语句")
    报告的统计信息。更多信息，请参见 [第 15.7.7.15 节，“SHOW ENGINE 语句”](show-engine.html "15.7.7.15 SHOW
    ENGINE 语句")。'
- en: '[`innodb_monitor_reset_all`](innodb-parameters.html#sysvar_innodb_monitor_reset_all)'
  id: totrans-1711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_monitor_reset_all`](innodb-parameters.html#sysvar_innodb_monitor_reset_all)'
- en: '| Command-Line Format | `--innodb-monitor-reset-all={counter&#124;module&#124;pattern&#124;all}`
    |'
  id: totrans-1712
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-monitor-reset-all={counter&#124;module&#124;pattern&#124;all}`
    |'
- en: '| System Variable | `[innodb_monitor_reset_all](innodb-parameters.html#sysvar_innodb_monitor_reset_all)`
    |'
  id: totrans-1713
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_monitor_reset_all](innodb-parameters.html#sysvar_innodb_monitor_reset_all)`
    |'
- en: '| Scope | Global |'
  id: totrans-1714
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1715
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1716
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-1717
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `NULL` |'
  id: totrans-1718
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NULL` |'
- en: '| Valid Values | `counter``module``pattern``all` |'
  id: totrans-1719
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `counter``module``pattern``all` |'
- en: This variable acts as a switch, resetting all values (minimum, maximum, and
    so on) for `InnoDB` [metrics counters](glossary.html#glos_metrics_counter "metrics
    counter"). Counter data may be queried using the Information Schema [`INNODB_METRICS`](information-schema-innodb-metrics-table.html
    "28.4.21 The INFORMATION_SCHEMA INNODB_METRICS Table") table. For usage information,
    see [Section 17.15.6, “InnoDB INFORMATION_SCHEMA Metrics Table”](innodb-information-schema-metrics-table.html
    "17.15.6 InnoDB INFORMATION_SCHEMA Metrics Table").
  id: totrans-1720
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量充当开关，重置所有`InnoDB`[度量计数器](glossary.html#glos_metrics_counter "度量计数器")的值（最小值、最大值等）。可以使用信息模式[`INNODB_METRICS`](information-schema-innodb-metrics-table.html
    "28.4.21 INFORMATION_SCHEMA INNODB_METRICS表")表查询计数器数据。有关使用信息，请参见[第17.15.6节，“InnoDB
    INFORMATION_SCHEMA度量表”](innodb-information-schema-metrics-table.html "17.15.6 InnoDB
    INFORMATION_SCHEMA度量表")。
- en: '[`innodb_numa_interleave`](innodb-parameters.html#sysvar_innodb_numa_interleave)'
  id: totrans-1721
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_numa_interleave`](innodb-parameters.html#sysvar_innodb_numa_interleave)'
- en: '| Command-Line Format | `--innodb-numa-interleave[={OFF&#124;ON}]` |'
  id: totrans-1722
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-numa-interleave[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_numa_interleave](innodb-parameters.html#sysvar_innodb_numa_interleave)`
    |'
  id: totrans-1723
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_numa_interleave](innodb-parameters.html#sysvar_innodb_numa_interleave)`
    |'
- en: '| Scope | Global |'
  id: totrans-1724
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1725
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1726
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1727
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1728
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enables the NUMA interleave memory policy for allocation of the `InnoDB` buffer
    pool. When [`innodb_numa_interleave`](innodb-parameters.html#sysvar_innodb_numa_interleave)
    is enabled, the NUMA memory policy is set to `MPOL_INTERLEAVE` for the [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") process. After the `InnoDB` buffer pool is
    allocated, the NUMA memory policy is set back to `MPOL_DEFAULT`. For the [`innodb_numa_interleave`](innodb-parameters.html#sysvar_innodb_numa_interleave)
    option to be available, MySQL must be compiled on a NUMA-enabled Linux system.
  id: totrans-1729
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用NUMA交错内存策略以分配`InnoDB`缓冲池。当启用[`innodb_numa_interleave`](innodb-parameters.html#sysvar_innodb_numa_interleave)时，NUMA内存策略设置为`MPOL_INTERLEAVE`用于[**mysqld**](mysqld.html
    "6.3.1 mysqld — MySQL服务器")进程。分配`InnoDB`缓冲池后，NUMA内存策略将恢复为`MPOL_DEFAULT`。要使[`innodb_numa_interleave`](innodb-parameters.html#sysvar_innodb_numa_interleave)选项可用，必须在启用NUMA的Linux系统上编译MySQL。
- en: '**CMake** sets the default [`WITH_NUMA`](source-configuration-options.html#option_cmake_with_numa)
    value based on whether the current platform has `NUMA` support. For more information,
    see [Section 2.8.7, “MySQL Source-Configuration Options”](source-configuration-options.html
    "2.8.7 MySQL Source-Configuration Options").'
  id: totrans-1730
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**CMake**根据当前平台是否支持`NUMA`，设置默认[`WITH_NUMA`](source-configuration-options.html#option_cmake_with_numa)值。有关更多信息，请参见[第2.8.7节，“MySQL源配置选项”](source-configuration-options.html
    "2.8.7 MySQL源配置选项")。'
- en: '[`innodb_old_blocks_pct`](innodb-parameters.html#sysvar_innodb_old_blocks_pct)'
  id: totrans-1731
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_old_blocks_pct`](innodb-parameters.html#sysvar_innodb_old_blocks_pct)'
- en: '| Command-Line Format | `--innodb-old-blocks-pct=#` |'
  id: totrans-1732
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-old-blocks-pct=#` |'
- en: '| System Variable | `[innodb_old_blocks_pct](innodb-parameters.html#sysvar_innodb_old_blocks_pct)`
    |'
  id: totrans-1733
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_old_blocks_pct](innodb-parameters.html#sysvar_innodb_old_blocks_pct)`
    |'
- en: '| Scope | Global |'
  id: totrans-1734
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1735
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1736
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1737
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `37` |'
  id: totrans-1738
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `37` |'
- en: '| Minimum Value | `5` |'
  id: totrans-1739
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `5` |'
- en: '| Maximum Value | `95` |'
  id: totrans-1740
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `95` |'
- en: Specifies the approximate percentage of the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") used for the old block [sublist](glossary.html#glos_sublist "sublist").
    The range of values is 5 to 95\. The default value is 37 (that is, 3/8 of the
    pool). Often used in combination with [`innodb_old_blocks_time`](innodb-parameters.html#sysvar_innodb_old_blocks_time).
  id: totrans-1741
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定用于旧块[sublist](glossary.html#glos_sublist "子列表")的`InnoDB`[缓冲池](glossary.html#glos_buffer_pool
    "缓冲池")的近似百分比。值的范围为5到95。默认值为37（即池的3/8）。通常与[`innodb_old_blocks_time`](innodb-parameters.html#sysvar_innodb_old_blocks_time)结合使用。
- en: For more information, see [Section 17.8.3.3, “Making the Buffer Pool Scan Resistant”](innodb-performance-midpoint_insertion.html
    "17.8.3.3 Making the Buffer Pool Scan Resistant"). For information about buffer
    pool management, the [LRU](glossary.html#glos_lru "LRU") algorithm, and [eviction](glossary.html#glos_eviction
    "eviction") policies, see [Section 17.5.1, “Buffer Pool”](innodb-buffer-pool.html
    "17.5.1 Buffer Pool").
  id: totrans-1742
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第17.8.3.3节，“使缓冲池具有扫描抵抗力”](innodb-performance-midpoint_insertion.html
    "17.8.3.3 使缓冲池具有扫描抵抗力")。有关缓冲池管理、[LRU](glossary.html#glos_lru "LRU")算法和[驱逐](glossary.html#glos_eviction
    "驱逐")策略的信息，请参阅[第17.5.1节，“缓冲池”](innodb-buffer-pool.html "17.5.1 缓冲池")。
- en: '[`innodb_old_blocks_time`](innodb-parameters.html#sysvar_innodb_old_blocks_time)'
  id: totrans-1743
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_old_blocks_time`](innodb-parameters.html#sysvar_innodb_old_blocks_time)'
- en: '| Command-Line Format | `--innodb-old-blocks-time=#` |'
  id: totrans-1744
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-old-blocks-time=#` |'
- en: '| System Variable | `[innodb_old_blocks_time](innodb-parameters.html#sysvar_innodb_old_blocks_time)`
    |'
  id: totrans-1745
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_old_blocks_time](innodb-parameters.html#sysvar_innodb_old_blocks_time)`
    |'
- en: '| Scope | Global |'
  id: totrans-1746
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1747
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1748
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1749
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1000` |'
  id: totrans-1750
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1000` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1751
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `2**32-1` |'
  id: totrans-1752
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2**32-1` |'
- en: '| Unit | milliseconds |'
  id: totrans-1753
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 毫秒 |'
- en: Non-zero values protect against the [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") being filled by data that is referenced only for a brief period,
    such as during a [full table scan](glossary.html#glos_full_table_scan "full table
    scan"). Increasing this value offers more protection against full table scans
    interfering with data cached in the buffer pool.
  id: totrans-1754
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 非零值可防止[缓冲池](glossary.html#glos_buffer_pool "缓冲池")被仅在短时间内引用的数据填满，例如在[全表扫描](glossary.html#glos_full_table_scan
    "全表扫描")期间。增加此值可提供更多保护，防止全表扫描干扰缓冲池中缓存的数据。
- en: Specifies how long in milliseconds a block inserted into the old [sublist](glossary.html#glos_sublist
    "sublist") must stay there after its first access before it can be moved to the
    new sublist. If the value is 0, a block inserted into the old sublist moves immediately
    to the new sublist the first time it is accessed, no matter how soon after insertion
    the access occurs. If the value is greater than 0, blocks remain in the old sublist
    until an access occurs at least that many milliseconds after the first access.
    For example, a value of 1000 causes blocks to stay in the old sublist for 1 second
    after the first access before they become eligible to move to the new sublist.
  id: totrans-1755
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定一个块插入到旧[sublist](glossary.html#glos_sublist "子列表")后，在第一次访问之后必须在那里停留多长时间（以毫秒为单位），然后才能移动到新的子列表。如果值为0，则插入到旧子列表的块在第一次访问时立即移动到新子列表，无论插入后多久发生访问。如果值大于0，则块保留在旧子列表中，直到第一次访问后至少经过那么多毫秒。例如，值为1000会导致块在第一次访问后在旧子列表中停留1秒，然后才能移动到新子列表。
- en: The default value is 1000.
  id: totrans-1756
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为1000。
- en: This variable is often used in combination with [`innodb_old_blocks_pct`](innodb-parameters.html#sysvar_innodb_old_blocks_pct).
    For more information, see [Section 17.8.3.3, “Making the Buffer Pool Scan Resistant”](innodb-performance-midpoint_insertion.html
    "17.8.3.3 Making the Buffer Pool Scan Resistant"). For information about buffer
    pool management, the [LRU](glossary.html#glos_lru "LRU") algorithm, and [eviction](glossary.html#glos_eviction
    "eviction") policies, see [Section 17.5.1, “Buffer Pool”](innodb-buffer-pool.html
    "17.5.1 Buffer Pool").
  id: totrans-1757
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个变量通常与[`innodb_old_blocks_pct`](innodb-parameters.html#sysvar_innodb_old_blocks_pct)结合使用。更多信息，请参阅[第17.8.3.3节，“使缓冲池具有扫描抵抗力”](innodb-performance-midpoint_insertion.html
    "17.8.3.3 使缓冲池具有扫描抵抗力")。有关缓冲池管理、[LRU](glossary.html#glos_lru "LRU")算法和[驱逐](glossary.html#glos_eviction
    "驱逐")策略的信息，请参阅[第17.5.1节，“缓冲池”](innodb-buffer-pool.html "17.5.1 缓冲池")。
- en: '[`innodb_online_alter_log_max_size`](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)'
  id: totrans-1758
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_online_alter_log_max_size`](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)'
- en: '| Command-Line Format | `--innodb-online-alter-log-max-size=#` |'
  id: totrans-1759
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-online-alter-log-max-size=#` |'
- en: '| System Variable | `[innodb_online_alter_log_max_size](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)`
    |'
  id: totrans-1760
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_online_alter_log_max_size](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1761
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1762
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1763
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1764
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `134217728` |'
  id: totrans-1765
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `134217728` |'
- en: '| Minimum Value | `65536` |'
  id: totrans-1766
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `65536` |'
- en: '| Maximum Value | `2**64-1` |'
  id: totrans-1767
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2**64-1` |'
- en: '| Unit | bytes |'
  id: totrans-1768
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: Specifies an upper limit in bytes on the size of the temporary log files used
    during [online DDL](glossary.html#glos_online_ddl "online DDL") operations for
    `InnoDB` tables. There is one such log file for each index being created or table
    being altered. This log file stores data inserted, updated, or deleted in the
    table during the DDL operation. The temporary log file is extended when needed
    by the value of [`innodb_sort_buffer_size`](innodb-parameters.html#sysvar_innodb_sort_buffer_size),
    up to the maximum specified by [`innodb_online_alter_log_max_size`](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size).
    If a temporary log file exceeds the upper size limit, the [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") operation fails and all uncommitted concurrent
    DML operations are rolled back. Thus, a large value for this option allows more
    DML to happen during an online DDL operation, but also extends the period of time
    at the end of the DDL operation when the table is locked to apply the data from
    the log.
  id: totrans-1769
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定`InnoDB`表的[在线 DDL](glossary.html#glos_online_ddl "在线 DDL")操作期间使用的临时日志文件大小上限（以字节为单位）。每个正在创建的索引或正在更改的表都有一个这样的日志文件。此日志文件存储在DDL操作期间插入、更新或删除的表中的数据。临时日志文件在需要时通过[`innodb_sort_buffer_size`](innodb-parameters.html#sysvar_innodb_sort_buffer_size)的值扩展，最多扩展到[`innodb_online_alter_log_max_size`](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)指定的最大值。如果临时日志文件超过上限大小，[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE 语句")操作将失败，并且所有未提交的并发DML操作都将被回滚。因此，此选项的较大值允许在在线DDL操作期间发生更多的DML操作，但也会延长DDL操作结束时表被锁定以应用日志中数据的时间。
- en: '[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)'
  id: totrans-1770
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)'
- en: '| Command-Line Format | `--innodb-open-files=#` |'
  id: totrans-1771
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-open-files=#` |'
- en: '| System Variable | `[innodb_open_files](innodb-parameters.html#sysvar_innodb_open_files)`
    |'
  id: totrans-1772
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_open_files](innodb-parameters.html#sysvar_innodb_open_files)`
    |'
- en: '| Scope | Global |'
  id: totrans-1773
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic (≥ 8.0.28) | Yes |'
  id: totrans-1774
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 (≥ 8.0.28) | 是 |'
- en: '| Dynamic (≤ 8.0.27) | No |'
  id: totrans-1775
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 (≤ 8.0.27) | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1776
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1777
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `-1` (signifies autosizing; do not assign this literal value)
    |'
  id: totrans-1778
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `-1`（表示自动调整大小；不要分配此字面值） |'
- en: '| Minimum Value | `10` |'
  id: totrans-1779
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `10` |'
- en: '| Maximum Value | `2147483647` |'
  id: totrans-1780
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2147483647` |'
- en: Specifies the maximum number of files that `InnoDB` can have open at one time.
    The minimum value is 10\. If [`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    is disabled, the default value is 300; otherwise, the default value is 300 or
    the [`table_open_cache`](server-system-variables.html#sysvar_table_open_cache)
    setting, whichever is higher.
  id: totrans-1781
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定`InnoDB`在同一时间内可以打开的文件的最大数量。最小值为10。如果禁用了[`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)，默认值为300；否则，默认值为300或[`table_open_cache`](server-system-variables.html#sysvar_table_open_cache)设置中的较高值。
- en: 'As of MySQL 8.0.28, the [`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)
    limit can be set at runtime using a `SELECT innodb_set_open_files_limit(*`N`*)`
    statement, where *`N`* is the desired [`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)
    limit; for example:'
  id: totrans-1782
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.28，可以使用`SELECT innodb_set_open_files_limit(*N*)`语句在运行时设置[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)限制，其中*N*是所需的[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)限制；例如：
- en: '[PRE11]'
  id: totrans-1783
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The statement executes a stored procedure that sets the new limit. If the procedure
    is successful, it returns the value of the newly set limit; otherwise, a failure
    message is returned.
  id: totrans-1784
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该语句执行一个存储过程，设置新的限制。如果过程成功，则返回新设置限制的值；否则，返回失败消息。
- en: It is not permitted to set [`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)
    using a [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement. To set [`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)
    at runtime, use the `SELECT innodb_set_open_files_limit(*`N`*)` statement described
    above.
  id: totrans-1785
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不允许使用[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")语句设置[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)。要在运行时设置[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)，请使用上述描述的`SELECT
    innodb_set_open_files_limit(*`N`*)`语句。
- en: Setting [`innodb_open_files=default`](innodb-parameters.html#sysvar_innodb_open_files)
    is not supported. Only integer values are permitted.
  id: totrans-1786
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置[`innodb_open_files=default`](innodb-parameters.html#sysvar_innodb_open_files)不受支持。只允许整数值。
- en: As of MySQL 8.0.28, to prevent non-LRU manged files from consuming the entire
    [`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files) limit,
    non-LRU managed files are limited to 90 percent of the [`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)
    limit, which reserves 10 percent of the [`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)
    limit for LRU managed files.
  id: totrans-1787
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.28 开始，为防止非LRU管理文件占用整个[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)限制，非LRU管理文件限制为[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)限制的90%，这样就为LRU管理文件保留了[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)限制的10%。
- en: Temporary tablespace files were not counted toward the [`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)
    limit from MySQL 8.0.24 to MySQL 8.0.27.
  id: totrans-1788
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.24 到 MySQL 8.0.27，临时表空间文件不计入[`innodb_open_files`](innodb-parameters.html#sysvar_innodb_open_files)限制。
- en: '[`innodb_optimize_fulltext_only`](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)'
  id: totrans-1789
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_optimize_fulltext_only`](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)'
- en: '| Command-Line Format | `--innodb-optimize-fulltext-only[={OFF&#124;ON}]` |'
  id: totrans-1790
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-optimize-fulltext-only[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_optimize_fulltext_only](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)`
    |'
  id: totrans-1791
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_optimize_fulltext_only](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)`
    |'
- en: '| Scope | Global |'
  id: totrans-1792
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1793
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1794
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1795
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1796
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Changes the way [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE
    Statement") operates on `InnoDB` tables. Intended to be enabled temporarily, during
    maintenance operations for `InnoDB` tables with `FULLTEXT` indexes.
  id: totrans-1797
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改变了[`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")在`InnoDB`表上的操作方式。旨在在具有`FULLTEXT`索引的`InnoDB`表的维护操作期间暂时启用。
- en: By default, [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE
    Statement") reorganizes data in the [clustered index](glossary.html#glos_clustered_index
    "clustered index") of the table. When this option is enabled, [`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE Statement") skips the reorganization of table data, and
    instead processes newly added, deleted, and updated token data for `InnoDB` `FULLTEXT`
    indexes. For more information, see [Optimizing InnoDB Full-Text Indexes](fulltext-fine-tuning.html#fulltext-optimize
    "Optimizing InnoDB Full-Text Indexes").
  id: totrans-1798
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，[`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")
    重新组织表的[聚簇索引](glossary.html#glos_clustered_index "clustered index")中的数据。当启用此选项时，[`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement") 将跳过表数据的重新组织，而是处理`InnoDB`
    `FULLTEXT`索引中新添加、删除和更新的标记数据。更多信息，请参见[优化 InnoDB 全文索引](fulltext-fine-tuning.html#fulltext-optimize
    "Optimizing InnoDB Full-Text Indexes")。
- en: '[`innodb_page_cleaners`](innodb-parameters.html#sysvar_innodb_page_cleaners)'
  id: totrans-1799
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_page_cleaners`](innodb-parameters.html#sysvar_innodb_page_cleaners)'
- en: '| Command-Line Format | `--innodb-page-cleaners=#` |'
  id: totrans-1800
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-page-cleaners=#` |'
- en: '| System Variable | `[innodb_page_cleaners](innodb-parameters.html#sysvar_innodb_page_cleaners)`
    |'
  id: totrans-1801
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_page_cleaners](innodb-parameters.html#sysvar_innodb_page_cleaners)`
    |'
- en: '| Scope | Global |'
  id: totrans-1802
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1803
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1804
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1805
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `4` |'
  id: totrans-1806
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `4` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1807
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `64` |'
  id: totrans-1808
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `64` |'
- en: The number of page cleaner threads that flush dirty pages from buffer pool instances.
    Page cleaner threads perform flush list and LRU flushing. When there are multiple
    page cleaner threads, buffer pool flushing tasks for each buffer pool instance
    are dispatched to idle page cleaner threads. The [`innodb_page_cleaners`](innodb-parameters.html#sysvar_innodb_page_cleaners)
    default value is 4\. If the number of page cleaner threads exceeds the number
    of buffer pool instances, [`innodb_page_cleaners`](innodb-parameters.html#sysvar_innodb_page_cleaners)
    is automatically set to the same value as [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances).
  id: totrans-1809
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从缓冲池实例刷新脏页的页面清理线程数量。页面清理线程执行刷新列表和 LRU 刷新。当存在多个页面清理线程时，每个缓冲池实例的缓冲池刷新任务将分派给空闲的页面清理线程。[`innodb_page_cleaners`](innodb-parameters.html#sysvar_innodb_page_cleaners)
    的默认值为 4。如果页面清理线程的数量超过缓冲池实例的数量，则 [`innodb_page_cleaners`](innodb-parameters.html#sysvar_innodb_page_cleaners)
    会自动设置为与 [`innodb_buffer_pool_instances`](innodb-parameters.html#sysvar_innodb_buffer_pool_instances)
    相同的值。
- en: If your workload is write-IO bound when flushing dirty pages from buffer pool
    instances to data files, and if your system hardware has available capacity, increasing
    the number of page cleaner threads may help improve write-IO throughput.
  id: totrans-1810
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在将脏页从缓冲池实例刷新到数据文件时，您的工作负载受写入 IO 限制，并且系统硬件有可用容量，则增加页面清理线程的数量可能有助于提高写入 IO 吞吐量。
- en: Multithreaded page cleaner support extends to shutdown and recovery phases.
  id: totrans-1811
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 多线程页面清理支持扩展到关闭和恢复阶段。
- en: 'The `setpriority()` system call is used on Linux platforms where it is supported,
    and where the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") execution
    user is authorized to give `page_cleaner` threads priority over other MySQL and
    `InnoDB` threads to help page flushing keep pace with the current workload. `setpriority()`
    support is indicated by this `InnoDB` startup message:'
  id: totrans-1812
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`setpriority()` 系统调用在支持的 Linux 平台上使用，在 [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") 执行用户被授权为帮助页面刷新跟上当前工作负载而给 `page_cleaner` 线程优先级高于其他 MySQL 和
    `InnoDB` 线程的情况下。`setpriority()` 支持由此 `InnoDB` 启动消息指示：'
- en: '[PRE12]'
  id: totrans-1813
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'For systems where server startup and shutdown is not managed by systemd, [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") execution user authorization can be configured
    in `/etc/security/limits.conf`. For example, if [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") is run under the `mysql` user, you can authorize the `mysql`
    user by adding these lines to `/etc/security/limits.conf`:'
  id: totrans-1814
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于不由 systemd 管理服务器启动和关闭的系统，可以在 `/etc/security/limits.conf` 中配置 [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") 执行用户授权。例如，如果 [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") 在 `mysql` 用户下运行，则可以通过将以下行添加到 `/etc/security/limits.conf`
    来授权 `mysql` 用户：
- en: '[PRE13]'
  id: totrans-1815
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'For systemd managed systems, the same can be achieved by specifying `LimitNICE=-20`
    in a localized systemd configuration file. For example, create a file named `override.conf`
    in `/etc/systemd/system/mysqld.service.d/override.conf` and add this entry:'
  id: totrans-1816
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于由 systemd 管理的系统，可以通过在本地化 systemd 配置文件中指定 `LimitNICE=-20` 来实现相同的效果。例如，在 `/etc/systemd/system/mysqld.service.d/override.conf`
    中创建一个名为 `override.conf` 的文件，并添加以下条目：
- en: '[PRE14]'
  id: totrans-1817
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'After creating or changing `override.conf`, reload the systemd configuration,
    then tell systemd to restart the MySQL service:'
  id: totrans-1818
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建或更改 `override.conf` 后，重新加载 systemd 配置，然后告诉 systemd 重新启动 MySQL 服务：
- en: '[PRE15]'
  id: totrans-1819
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: For more information about using a localized systemd configuration file, see
    [Configuring systemd for MySQL](using-systemd.html#systemd-mysql-configuration
    "Configuring systemd for MySQL").
  id: totrans-1820
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关使用本地化 systemd 配置文件的更多信息，请参见[为 MySQL 配置 systemd](using-systemd.html#systemd-mysql-configuration
    "Configuring systemd for MySQL")。
- en: 'After authorizing the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    execution user, use the **cat** command to verify the configured `Nice` limits
    for the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") process:'
  id: totrans-1821
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 授权 [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") 执行用户后，使用 **cat**
    命令验证 [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") 进程配置的 `Nice`
    限制：
- en: '[PRE16]'
  id: totrans-1822
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)'
  id: totrans-1823
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)'
- en: '| Command-Line Format | `--innodb-page-size=#` |'
  id: totrans-1824
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-page-size=#` |'
- en: '| System Variable | `[innodb_page_size](innodb-parameters.html#sysvar_innodb_page_size)`
    |'
  id: totrans-1825
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_page_size](innodb-parameters.html#sysvar_innodb_page_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1826
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1827
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1828
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-1829
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `16384` |'
  id: totrans-1830
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `16384` |'
- en: '| Valid Values | `4096``8192``16384``32768``65536` |'
  id: totrans-1831
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `4096``8192``16384``32768``65536` |'
- en: Specifies the [page size](glossary.html#glos_page_size "page size") for `InnoDB`
    [tablespaces](glossary.html#glos_tablespace "tablespace"). Values can be specified
    in bytes or kilobytes. For example, a 16 kilobyte page size value can be specified
    as 16384, 16KB, or 16k.
  id: totrans-1832
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定`InnoDB`[表空间](glossary.html#glos_tablespace "表空间")的[页面大小](glossary.html#glos_page_size
    "页面大小")。值可以以字节或千字节为单位指定。例如，可以将16KB页面大小值指定为16384、16KB或16k。
- en: '[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size) can only
    be configured prior to initializing the MySQL instance and cannot be changed afterward.
    If no value is specified, the instance is initialized using the default page size.
    See [Section 17.8.1, “InnoDB Startup Configuration”](innodb-init-startup-configuration.html
    "17.8.1 InnoDB Startup Configuration").'
  id: totrans-1833
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)只能在初始化MySQL实例之前配置，之后不能更改。如果未指定任何值，则实例将使用默认页面大小进行初始化。请参阅[第17.8.1节，“InnoDB启动配置”](innodb-init-startup-configuration.html
    "17.8.1 InnoDB Startup Configuration")。'
- en: For both 32KB and 64KB page sizes, the maximum row length is approximately 16000
    bytes. `ROW_FORMAT=COMPRESSED` is not supported when [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    is set to 32KB or 64KB. For [`innodb_page_size=32KB`](innodb-parameters.html#sysvar_innodb_page_size),
    extent size is 2MB. For [`innodb_page_size=64KB`](innodb-parameters.html#sysvar_innodb_page_size),
    extent size is 4MB. [`innodb_log_buffer_size`](innodb-parameters.html#sysvar_innodb_log_buffer_size)
    should be set to at least 16M (the default) when using 32KB or 64KB page sizes.
  id: totrans-1834
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于32KB和64KB页面大小，最大行长度约为16000字节。当[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)设置为32KB或64KB时，不支持`ROW_FORMAT=COMPRESSED`。对于[`innodb_page_size=32KB`](innodb-parameters.html#sysvar_innodb_page_size)，扩展大小为2MB。对于[`innodb_page_size=64KB`](innodb-parameters.html#sysvar_innodb_page_size)，扩展大小为4MB。在使用32KB或64KB页面大小时，[`innodb_log_buffer_size`](innodb-parameters.html#sysvar_innodb_log_buffer_size)应至少设置为16M（默认值）。
- en: The default 16KB page size or larger is appropriate for a wide range of [workloads](glossary.html#glos_workload
    "workload"), particularly for queries involving table scans and DML operations
    involving bulk updates. Smaller page sizes might be more efficient for [OLTP](glossary.html#glos_oltp
    "OLTP") workloads involving many small writes, where contention can be an issue
    when single pages contain many rows. Smaller pages might also be efficient with
    [SSD](glossary.html#glos_ssd "SSD") storage devices, which typically use small
    block sizes. Keeping the `InnoDB` page size close to the storage device block
    size minimizes the amount of unchanged data that is rewritten to disk.
  id: totrans-1835
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认的16KB页面大小或更大适用于各种[工作负载](glossary.html#glos_workload "工作负载")，特别是涉及表扫描和涉及大量更新的DML操作的查询。较小的页面大小可能对涉及许多小写入的[OLTP](glossary.html#glos_oltp
    "OLTP")工作负载更有效，当单个页面包含许多行时，争用可能是一个问题。较小的页面在通常使用小块大小的[SSD](glossary.html#glos_ssd
    "SSD")存储设备上也可能更有效。保持`InnoDB`页面大小接近存储设备块大小可以最大程度地减少被重写到磁盘的未更改数据量。
- en: The minimum file size for the first system tablespace data file (`ibdata1`)
    differs depending on the [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    value. See the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    option description for more information.
  id: totrans-1836
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一个系统表空间数据文件（`ibdata1`）的最小文件大小取决于[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)值。有关更多信息，请参阅[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)选项描述。
- en: A MySQL instance using a particular `InnoDB` page size cannot use data files
    or log files from an instance that uses a different page size.
  id: totrans-1837
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用特定`InnoDB`页面大小的MySQL实例不能使用来自使用不同页面大小的实例的数据文件或日志文件。
- en: For general I/O tuning advice, see [Section 10.5.8, “Optimizing InnoDB Disk
    I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing InnoDB Disk I/O").
  id: totrans-1838
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关一般I/O调优建议，请参阅[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing
    InnoDB Disk I/O")。
- en: '[`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)'
  id: totrans-1839
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)'
- en: '| Command-Line Format | `--innodb-parallel-read-threads=#` |'
  id: totrans-1840
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-parallel-read-threads=#` |'
- en: '| Introduced | 8.0.14 |'
  id: totrans-1841
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入 | 8.0.14 |'
- en: '| System Variable | `[innodb_parallel_read_threads](innodb-parameters.html#sysvar_innodb_parallel_read_threads)`
    |'
  id: totrans-1842
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_parallel_read_threads](innodb-parameters.html#sysvar_innodb_parallel_read_threads)`
    |'
- en: '| Scope | Session |'
  id: totrans-1843
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-1844
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1845
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Integer |'
  id: totrans-1846
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `4` |'
  id: totrans-1847
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `4` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1848
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `256` |'
  id: totrans-1849
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `256` |'
- en: Defines the number of threads that can be used for parallel clustered index
    reads. Parallel scanning of partitions is supported as of MySQL 8.0.17\. Parallel
    read threads can improve [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE
    Statement") performance. `InnoDB` reads the clustered index twice during a [`CHECK
    TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") operation. The second
    read can be performed in parallel. This feature does not apply to secondary index
    scans. The [`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)
    session variable must be set to a value greater than 1 for parallel clustered
    index reads to occur. The actual number of threads used to perform a parallel
    clustered index read is determined by the [`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)
    setting or the number of index subtrees to scan, whichever is smaller. The pages
    read into the buffer pool during the scan are kept at the tail of the buffer pool
    LRU list so that they can be discarded quickly when free buffer pool pages are
    required.
  id: totrans-1850
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义可用于并行集群索引读取的线程数。截至MySQL 8.0.17版本，支持对分区进行并行扫描。并行读取线程可以提高[`CHECK TABLE`](check-table.html
    "15.7.3.2 CHECK TABLE Statement")性能。`InnoDB`在[`CHECK TABLE`](check-table.html
    "15.7.3.2 CHECK TABLE Statement")操作期间两次读取聚簇索引。第二次读取可以并行执行。此功能不适用于二级索引扫描。必须将[`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)会话变量设置为大于1的值，才能进行并行集群索引读取。执行并行集群索引读取的实际线程数由[`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)设置或要扫描的索引子树数量决定，取两者中较小的值。扫描期间读取到缓冲池的页面保持在缓冲池LRU列表的尾部，以便在需要空闲缓冲池页面时可以快速丢弃它们。
- en: As of MySQL 8.0.17, the maximum number of parallel read threads (256) is the
    total number of threads for all client connections. If the thread limit is reached,
    connections fall back to using a single thread.
  id: totrans-1851
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.17版本，最大并行读取线程数（256）是所有客户端连接的总线程数。如果达到线程限制，连接将回退到使用单个线程。
- en: '[`innodb_print_all_deadlocks`](innodb-parameters.html#sysvar_innodb_print_all_deadlocks)'
  id: totrans-1852
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_print_all_deadlocks`](innodb-parameters.html#sysvar_innodb_print_all_deadlocks)'
- en: '| Command-Line Format | `--innodb-print-all-deadlocks[={OFF&#124;ON}]` |'
  id: totrans-1853
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-print-all-deadlocks[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_print_all_deadlocks](innodb-parameters.html#sysvar_innodb_print_all_deadlocks)`
    |'
  id: totrans-1854
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_print_all_deadlocks](innodb-parameters.html#sysvar_innodb_print_all_deadlocks)`
    |'
- en: '| Scope | Global |'
  id: totrans-1855
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1856
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1857
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1858
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1859
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: When this option is enabled, information about all [deadlocks](glossary.html#glos_deadlock
    "deadlock") in `InnoDB` user transactions is recorded in the `mysqld` [error log](error-log.html
    "7.4.2 The Error Log"). Otherwise, you see information about only the last deadlock,
    using the `SHOW ENGINE INNODB STATUS` command. An occasional `InnoDB` deadlock
    is not necessarily an issue, because `InnoDB` detects the condition immediately
    and rolls back one of the transactions automatically. You might use this option
    to troubleshoot why deadlocks are occurring if an application does not have appropriate
    error-handling logic to detect the rollback and retry its operation. A large number
    of deadlocks might indicate the need to restructure transactions that issue [DML](glossary.html#glos_dml
    "DML") or `SELECT ... FOR UPDATE` statements for multiple tables, so that each
    transaction accesses the tables in the same order, thus avoiding the deadlock
    condition.
  id: totrans-1860
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用此选项时，`InnoDB` 用户事务中所有 [死锁](glossary.html#glos_deadlock "死锁") 的信息都记录在 `mysqld`
    [错误日志](error-log.html "7.4.2 错误日志") 中。否则，您只会看到关于最后一个死锁的信息，使用 `SHOW ENGINE INNODB
    STATUS` 命令。偶尔的 `InnoDB` 死锁并不一定是问题，因为 `InnoDB` 立即检测到条件并自动回滚其中一个事务。如果应用程序没有适当的错误处理逻辑来检测回滚并重试其操作，您可能会使用此选项来排除死锁发生的原因。大量的死锁可能表明需要重新构造为多个表发出
    [DML](glossary.html#glos_dml "DML") 或 `SELECT ... FOR UPDATE` 语句的事务，以便每个事务以相同顺序访问表，从而避免死锁条件。
- en: For related information, see [Section 17.7.5, “Deadlocks in InnoDB”](innodb-deadlocks.html
    "17.7.5 Deadlocks in InnoDB").
  id: totrans-1861
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见 [第 17.7.5 节，“InnoDB 中的死锁”](innodb-deadlocks.html "17.7.5 InnoDB 中的死锁")。
- en: '[`innodb_print_ddl_logs`](innodb-parameters.html#sysvar_innodb_print_ddl_logs)'
  id: totrans-1862
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_print_ddl_logs`](innodb-parameters.html#sysvar_innodb_print_ddl_logs)'
- en: '| Command-Line Format | `--innodb-print-ddl-logs[={OFF&#124;ON}]` |'
  id: totrans-1863
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-print-ddl-logs[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_print_ddl_logs](innodb-parameters.html#sysvar_innodb_print_ddl_logs)`
    |'
  id: totrans-1864
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_print_ddl_logs](innodb-parameters.html#sysvar_innodb_print_ddl_logs)`
    |'
- en: '| Scope | Global |'
  id: totrans-1865
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1866
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1867
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1868
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1869
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enabling this option causes MySQL to write DDL logs to `stderr`. For more information,
    see [Viewing DDL Logs](atomic-ddl.html#atomic-ddl-view-logs "Viewing DDL Logs").
  id: totrans-1870
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此选项会导致 MySQL 将 DDL 日志写入 `stderr`。更多信息，请参见 [查看 DDL 日志](atomic-ddl.html#atomic-ddl-view-logs
    "查看 DDL 日志")。
- en: '[`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)'
  id: totrans-1871
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)'
- en: '| Command-Line Format | `--innodb-purge-batch-size=#` |'
  id: totrans-1872
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-purge-batch-size=#` |'
- en: '| System Variable | `[innodb_purge_batch_size](innodb-parameters.html#sysvar_innodb_purge_batch_size)`
    |'
  id: totrans-1873
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_purge_batch_size](innodb-parameters.html#sysvar_innodb_purge_batch_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-1874
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1875
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1876
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1877
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `300` |'
  id: totrans-1878
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `300` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1879
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `5000` |'
  id: totrans-1880
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `5000` |'
- en: Defines the number of undo log pages that purge parses and processes in one
    batch from the [history list](glossary.html#glos_history_list "history list").
    In a multithreaded purge configuration, the coordinator purge thread divides [`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    by [`innodb_purge_threads`](innodb-parameters.html#sysvar_innodb_purge_threads)
    and assigns that number of pages to each purge thread. The [`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    variable also defines the number of undo log pages that purge frees after every
    128 iterations through the undo logs.
  id: totrans-1881
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义了一批从 [历史列表](glossary.html#glos_history_list "历史列表") 中解析和处理的撤销日志页数。在多线程清除配置中，协调员清除线程将
    [`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    除以 [`innodb_purge_threads`](innodb-parameters.html#sysvar_innodb_purge_threads)，并将该数量的页分配给每个清除线程。[`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    变量还定义了清除在通过撤销日志的每 128 次迭代后释放的撤销日志页数。
- en: The [`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    option is intended for advanced performance tuning in combination with the [`innodb_purge_threads`](innodb-parameters.html#sysvar_innodb_purge_threads)
    setting. Most users need not change [`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    from its default value.
  id: totrans-1882
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    选项旨在与 [`innodb_purge_threads`](innodb-parameters.html#sysvar_innodb_purge_threads)
    设置结合进行高级性能调优。大多数用户不需要更改 [`innodb_purge_batch_size`](innodb-parameters.html#sysvar_innodb_purge_batch_size)
    的默认值。'
- en: For related information, see [Section 17.8.9, “Purge Configuration”](innodb-purge-configuration.html
    "17.8.9 Purge Configuration").
  id: totrans-1883
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见 [第17.8.9节，“清除配置”](innodb-purge-configuration.html "17.8.9 清除配置")。
- en: '[`innodb_purge_threads`](innodb-parameters.html#sysvar_innodb_purge_threads)'
  id: totrans-1884
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_purge_threads`](innodb-parameters.html#sysvar_innodb_purge_threads) '
- en: '| Command-Line Format | `--innodb-purge-threads=#` |'
  id: totrans-1885
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-purge-threads=#` |'
- en: '| System Variable | `[innodb_purge_threads](innodb-parameters.html#sysvar_innodb_purge_threads)`
    |'
  id: totrans-1886
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_purge_threads](innodb-parameters.html#sysvar_innodb_purge_threads)`
    |'
- en: '| Scope | Global |'
  id: totrans-1887
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1888
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1889
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1890
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `4` |'
  id: totrans-1891
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `4` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1892
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `32` |'
  id: totrans-1893
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `32` |'
- en: The number of background threads devoted to the `InnoDB` [purge](glossary.html#glos_purge
    "purge") operation. Increasing the value creates additional purge threads, which
    can improve efficiency on systems where [DML](glossary.html#glos_dml "DML") operations
    are performed on multiple tables.
  id: totrans-1894
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 专用于 `InnoDB` [清除](glossary.html#glos_purge "清除") 操作的后台线程数。增加该值会创建额外的清除线程，可以提高在执行多个表的
    [DML](glossary.html#glos_dml "DML") 操作的系统上的效率。
- en: For related information, see [Section 17.8.9, “Purge Configuration”](innodb-purge-configuration.html
    "17.8.9 Purge Configuration").
  id: totrans-1895
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见 [第17.8.9节，“清除配置”](innodb-purge-configuration.html "17.8.9 清除配置")。
- en: '[`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)'
  id: totrans-1896
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)'
- en: '| Command-Line Format | `--innodb-purge-rseg-truncate-frequency=#` |'
  id: totrans-1897
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-purge-rseg-truncate-frequency=#` |'
- en: '| System Variable | `[innodb_purge_rseg_truncate_frequency](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)`
    |'
  id: totrans-1898
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_purge_rseg_truncate_frequency](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)`
    |'
- en: '| Scope | Global |'
  id: totrans-1899
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1900
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1901
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1902
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `128` |'
  id: totrans-1903
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `128` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1904
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `128` |'
  id: totrans-1905
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `128` |'
- en: Defines the frequency with which the purge system frees rollback segments in
    terms of the number of times that purge is invoked. An undo tablespace cannot
    be truncated until its rollback segments are freed. Normally, the purge system
    frees rollback segments once every 128 times that purge is invoked. The default
    value is 128\. Reducing this value increases the frequency with which the purge
    thread frees rollback segments.
  id: totrans-1906
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义清除系统释放回滚段的频率，以调用清除的次数来衡量。在回滚段被释放之前，无法截断撤消表空间。通常，清除系统每调用128次就会释放一次回滚段。默认值为128。减少此值会增加清除线程释放回滚段的频率。
- en: '[`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    is intended for use with [`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate).
    For more information, see [Truncating Undo Tablespaces](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "Truncating Undo Tablespaces").'
  id: totrans-1907
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    旨在与 [`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)
    一起使用。有关更多信息，请参见 [截断撤消表空间](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "截断撤消表空间")。'
- en: '[`innodb_random_read_ahead`](innodb-parameters.html#sysvar_innodb_random_read_ahead)'
  id: totrans-1908
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_random_read_ahead`](innodb-parameters.html#sysvar_innodb_random_read_ahead)'
- en: '| Command-Line Format | `--innodb-random-read-ahead[={OFF&#124;ON}]` |'
  id: totrans-1909
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-random-read-ahead[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_random_read_ahead](innodb-parameters.html#sysvar_innodb_random_read_ahead)`
    |'
  id: totrans-1910
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_random_read_ahead](innodb-parameters.html#sysvar_innodb_random_read_ahead)`
    |'
- en: '| Scope | Global |'
  id: totrans-1911
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1912
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1913
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1914
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1915
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `关闭` |'
- en: Enables the random [read-ahead](glossary.html#glos_read_ahead "read-ahead")
    technique for optimizing `InnoDB` I/O.
  id: totrans-1916
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用随机[预读](glossary.html#glos_read_ahead "预读")技术，优化`InnoDB` I/O。
- en: For details about performance considerations for different types of read-ahead
    requests, see [Section 17.8.3.4, “Configuring InnoDB Buffer Pool Prefetching (Read-Ahead)”](innodb-performance-read_ahead.html
    "17.8.3.4 Configuring InnoDB Buffer Pool Prefetching (Read-Ahead)"). For general
    I/O tuning advice, see [Section 10.5.8, “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html
    "10.5.8 Optimizing InnoDB Disk I/O").
  id: totrans-1917
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关不同类型预读请求的性能考虑的详细信息，请参见[第17.8.3.4节，“配置InnoDB缓冲池预取（预读）”](innodb-performance-read_ahead.html
    "17.8.3.4 配置InnoDB缓冲池预取（预读）")。有关一般I/O调优建议，请参见[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。
- en: '[`innodb_read_ahead_threshold`](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)'
  id: totrans-1918
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_read_ahead_threshold`](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)'
- en: '| Command-Line Format | `--innodb-read-ahead-threshold=#` |'
  id: totrans-1919
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-read-ahead-threshold=#` |'
- en: '| System Variable | `[innodb_read_ahead_threshold](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)`
    |'
  id: totrans-1920
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_read_ahead_threshold](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)`
    |'
- en: '| Scope | Global |'
  id: totrans-1921
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1922
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1923
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1924
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `56` |'
  id: totrans-1925
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `56` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1926
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `64` |'
  id: totrans-1927
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `64` |'
- en: Controls the sensitivity of linear [read-ahead](glossary.html#glos_read_ahead
    "read-ahead") that `InnoDB` uses to prefetch pages into the [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool"). If `InnoDB` reads at least [`innodb_read_ahead_threshold`](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)
    pages sequentially from an [extent](glossary.html#glos_extent "extent") (64 pages),
    it initiates an asynchronous read for the entire following extent. The permissible
    range of values is 0 to 64\. A value of 0 disables read-ahead. For the default
    of 56, `InnoDB` must read at least 56 pages sequentially from an extent to initiate
    an asynchronous read for the following extent.
  id: totrans-1928
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制`InnoDB`用于预取页面到[缓冲池](glossary.html#glos_buffer_pool "缓冲池")的线性[预读](glossary.html#glos_read_ahead
    "预读")的灵敏度。如果`InnoDB`按顺序从一个[extent](glossary.html#glos_extent "extent")（64页）中至少读取[`innodb_read_ahead_threshold`](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)页，它将启动对整个后续extent的异步读取。允许的值范围是0到64。值为0表示禁用预读。对于默认值56，`InnoDB`必须按顺序从一个extent中至少读取56页，才能启动对后续extent的异步读取。
- en: Knowing how many pages are read through the read-ahead mechanism, and how many
    of these pages are evicted from the buffer pool without ever being accessed, can
    be useful when fine-tuning the [`innodb_read_ahead_threshold`](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)
    setting. [`SHOW ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE
    Statement") output displays counter information from the [`Innodb_buffer_pool_read_ahead`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead)
    and [`Innodb_buffer_pool_read_ahead_evicted`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_evicted)
    global status variables, which report the number of pages brought into the [buffer
    pool](glossary.html#glos_buffer_pool "buffer pool") by read-ahead requests, and
    the number of such pages [evicted](glossary.html#glos_eviction "eviction") from
    the buffer pool without ever being accessed, respectively. The status variables
    report global values since the last server restart.
  id: totrans-1929
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 了解通过预读机制读取了多少页面，以及这些页面中有多少被从缓冲池中驱逐而从未被访问，对于微调[`innodb_read_ahead_threshold`](innodb-parameters.html#sysvar_innodb_read_ahead_threshold)设置可能是有用的。[`SHOW
    ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE语句")输出显示了来自[`Innodb_buffer_pool_read_ahead`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead)和[`Innodb_buffer_pool_read_ahead_evicted`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_evicted)全局状态变量的计数器信息，这些变量报告了通过预读请求带入缓冲池的页面数，以及这些页面从未被访问而从缓冲池中驱逐的页面数。这些状态变量报告自上次服务器重启以来的全局值。
- en: '[`SHOW ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE Statement")
    also shows the rate at which the read-ahead pages are read and the rate at which
    such pages are evicted without being accessed. The per-second averages are based
    on the statistics collected since the last invocation of `SHOW ENGINE INNODB STATUS`
    and are displayed in the `BUFFER POOL AND MEMORY` section of the [`SHOW ENGINE
    INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE Statement") output.'
  id: totrans-1930
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`SHOW ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE语句")还显示了预读页面的读取速率以及这些页面被驱逐而没有被访问的速率。每秒平均值基于自上次调用`SHOW
    ENGINE INNODB STATUS`以来收集的统计数据，并显示在[`SHOW ENGINE INNODB STATUS`](show-engine.html
    "15.7.7.15 SHOW ENGINE语句")输出的`BUFFER POOL AND MEMORY`部分。'
- en: For more information, see [Section 17.8.3.4, “Configuring InnoDB Buffer Pool
    Prefetching (Read-Ahead)”](innodb-performance-read_ahead.html "17.8.3.4 Configuring
    InnoDB Buffer Pool Prefetching (Read-Ahead)"). For general I/O tuning advice,
    see [Section 10.5.8, “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html
    "10.5.8 Optimizing InnoDB Disk I/O").
  id: totrans-1931
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第17.8.3.4节，“配置InnoDB缓冲池预取（预读）”](innodb-performance-read_ahead.html
    "17.8.3.4 配置InnoDB缓冲池预取（预读）")。有关一般I/O调优建议，请参见[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。
- en: '[`innodb_read_io_threads`](innodb-parameters.html#sysvar_innodb_read_io_threads)'
  id: totrans-1932
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_read_io_threads`](innodb-parameters.html#sysvar_innodb_read_io_threads)'
- en: '| Command-Line Format | `--innodb-read-io-threads=#` |'
  id: totrans-1933
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-read-io-threads=#` |'
- en: '| System Variable | `[innodb_read_io_threads](innodb-parameters.html#sysvar_innodb_read_io_threads)`
    |'
  id: totrans-1934
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_read_io_threads](innodb-parameters.html#sysvar_innodb_read_io_threads)`
    |'
- en: '| Scope | Global |'
  id: totrans-1935
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1936
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1937
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1938
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `4` |'
  id: totrans-1939
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `4` |'
- en: '| Minimum Value | `1` |'
  id: totrans-1940
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `64` |'
  id: totrans-1941
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `64` |'
- en: The number of I/O threads for read operations in `InnoDB`. Its counterpart for
    write threads is [`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads).
    For more information, see [Section 17.8.5, “Configuring the Number of Background
    InnoDB I/O Threads”](innodb-performance-multiple_io_threads.html "17.8.5 Configuring
    the Number of Background InnoDB I/O Threads"). For general I/O tuning advice,
    see [Section 10.5.8, “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html
    "10.5.8 Optimizing InnoDB Disk I/O").
  id: totrans-1942
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于`InnoDB`读操作的I/O线程数。其写线程的对应项是[`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads)。有关更多信息，请参见[第17.8.5节，“配置后台InnoDB
    I/O线程数”](innodb-performance-multiple_io_threads.html "17.8.5 配置后台InnoDB I/O线程数")。有关一般I/O调优建议，请参见[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。
- en: Note
  id: totrans-1943
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: On Linux systems, running multiple MySQL servers (typically more than 12) with
    default settings for [`innodb_read_io_threads`](innodb-parameters.html#sysvar_innodb_read_io_threads),
    [`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads),
    and the Linux `aio-max-nr` setting can exceed system limits. Ideally, increase
    the `aio-max-nr` setting; as a workaround, you might reduce the settings for one
    or both of the MySQL variables.
  id: totrans-1944
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Linux系统上，使用默认设置的[`innodb_read_io_threads`](innodb-parameters.html#sysvar_innodb_read_io_threads)、[`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads)和Linux的`aio-max-nr`设置运行多个MySQL服务器（通常超过12个）可能超出系统限制。理想情况下，增加`aio-max-nr`设置；作为解决方法，您可以减少一个或两个MySQL变量的设置。
- en: '[`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)'
  id: totrans-1945
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)'
- en: '| Command-Line Format | `--innodb-read-only[={OFF&#124;ON}]` |'
  id: totrans-1946
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-read-only[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_read_only](innodb-parameters.html#sysvar_innodb_read_only)`
    |'
  id: totrans-1947
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_read_only](innodb-parameters.html#sysvar_innodb_read_only)`
    |'
- en: '| Scope | Global |'
  id: totrans-1948
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1949
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1950
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1951
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1952
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Starts `InnoDB` in read-only mode. For distributing database applications or
    data sets on read-only media. Can also be used in data warehouses to share the
    same data directory between multiple instances. For more information, see [Section 17.8.2,
    “Configuring InnoDB for Read-Only Operation”](innodb-read-only-instance.html "17.8.2 Configuring
    InnoDB for Read-Only Operation").
  id: totrans-1953
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以只读模式启动`InnoDB`。用于在只读媒体上分发数据库应用程序或数据集。也可用于数据仓库，在多个实例之间共享相同的数据目录。有关更多信息，请参见[第17.8.2节，“配置InnoDB进行只读操作”](innodb-read-only-instance.html
    "17.8.2 Configuring InnoDB for Read-Only Operation")。
- en: 'Previously, enabling the [`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)
    system variable prevented creating and dropping tables only for the `InnoDB` storage
    engine. As of MySQL 8.0, enabling [`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)
    prevents these operations for all storage engines. Table creation and drop operations
    for any storage engine modify data dictionary tables in the `mysql` system database,
    but those tables use the `InnoDB` storage engine and cannot be modified when [`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)
    is enabled. The same principle applies to other table operations that require
    modifying data dictionary tables. Examples:'
  id: totrans-1954
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，启用[`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)系统变量仅阻止了`InnoDB`存储引擎的表的创建和删除。从MySQL
    8.0开始，启用[`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)将阻止所有存储引擎的这些操作。任何存储引擎的表创建和删除操作都会修改`mysql`系统数据库中的数据字典表，但这些表使用`InnoDB`存储引擎，在启用[`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)时无法修改。同样的原则也适用于其他需要修改数据字典表的表操作。例如：
- en: If the [`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)
    system variable is enabled, [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement") may fail because it cannot update statistics tables in the data
    dictionary, which use `InnoDB`. For [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement") operations that update the key distribution, failure may occur
    even if the operation updates the table itself (for example, if it is a `MyISAM`
    table). To obtain the updated distribution statistics, set [`information_schema_stats_expiry=0`](server-system-variables.html#sysvar_information_schema_stats_expiry).
  id: totrans-1955
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果启用了[`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)系统变量，[`ANALYZE
    TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")可能会失败，因为它无法更新使用`InnoDB`的数据字典中的统计表。对于更新键分布的[`ANALYZE
    TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")操作，即使操作更新了表本身（例如，如果它是一个`MyISAM`表），也可能会发生失败。要获取更新后的分布统计信息，请设置[`information_schema_stats_expiry=0`](server-system-variables.html#sysvar_information_schema_stats_expiry)。
- en: '[`ALTER TABLE *`tbl_name`* ENGINE=*`engine_name`*`](alter-table.html "15.1.9 ALTER
    TABLE Statement") fails because it updates the storage engine designation, which
    is stored in the data dictionary.'
  id: totrans-1956
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ALTER TABLE *`tbl_name`* ENGINE=*`engine_name`*`](alter-table.html "15.1.9 ALTER
    TABLE Statement") 失败，因为它更新了存储引擎的指定，这些信息存储在数据字典中。'
- en: 'In addition, other tables in the `mysql` system database use the `InnoDB` storage
    engine in MySQL 8.0\. Making those tables read only results in restrictions on
    operations that modify them. Examples:'
  id: totrans-1957
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，MySQL 8.0 中 `mysql` 系统数据库中的其他表使用 `InnoDB` 存储引擎。将这些表设置为只读会导致修改它们的操作受到限制。例如：
- en: Account-management statements such as [`CREATE USER`](create-user.html "15.7.1.3 CREATE
    USER Statement") and [`GRANT`](grant.html "15.7.1.6 GRANT Statement") fail because
    the grant tables use `InnoDB`.
  id: totrans-1958
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帐户管理语句，如 [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")
    和 [`GRANT`](grant.html "15.7.1.6 GRANT Statement") 失败，因为授权表使用了 `InnoDB`。
- en: The [`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN Statement")
    and [`UNINSTALL PLUGIN`](uninstall-plugin.html "15.7.4.6 UNINSTALL PLUGIN Statement")
    plugin-management statements fail because the `mysql.plugin` system table uses
    `InnoDB`.
  id: totrans-1959
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN Statement")
    和 [`UNINSTALL PLUGIN`](uninstall-plugin.html "15.7.4.6 UNINSTALL PLUGIN Statement")
    插件管理语句失败，因为 `mysql.plugin` 系统表使用了 `InnoDB`。'
- en: The [`CREATE FUNCTION`](create-function-loadable.html "15.7.4.1 CREATE FUNCTION
    Statement for Loadable Functions") and [`DROP FUNCTION`](drop-function-loadable.html
    "15.7.4.2 DROP FUNCTION Statement for Loadable Functions") loadable function-management
    statements fail because the `mysql.func` system table uses `InnoDB`.
  id: totrans-1960
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE FUNCTION`](create-function-loadable.html "15.7.4.1 CREATE FUNCTION
    Statement for Loadable Functions") 和 [`DROP FUNCTION`](drop-function-loadable.html
    "15.7.4.2 DROP FUNCTION Statement for Loadable Functions") 可加载函数管理语句失败，因为 `mysql.func`
    系统表使用了 `InnoDB`。'
- en: '[`innodb_redo_log_archive_dirs`](innodb-parameters.html#sysvar_innodb_redo_log_archive_dirs)'
  id: totrans-1961
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_redo_log_archive_dirs`](innodb-parameters.html#sysvar_innodb_redo_log_archive_dirs)'
- en: '| Command-Line Format | `--innodb-redo-log-archive-dirs` |'
  id: totrans-1962
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-redo-log-archive-dirs` |'
- en: '| Introduced | 8.0.17 |'
  id: totrans-1963
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入 | 8.0.17 |'
- en: '| System Variable | `[innodb_redo_log_archive_dirs](innodb-parameters.html#sysvar_innodb_redo_log_archive_dirs)`
    |'
  id: totrans-1964
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_redo_log_archive_dirs](innodb-parameters.html#sysvar_innodb_redo_log_archive_dirs)`
    |'
- en: '| Scope | Global |'
  id: totrans-1965
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1966
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1967
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | String |'
  id: totrans-1968
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `NULL` |'
  id: totrans-1969
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NULL` |'
- en: 'Defines labeled directories where redo log archive files can be created. You
    can define multiple labeled directories in a semicolon-separated list. For example:'
  id: totrans-1970
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义标记目录，可以在其中创建重做日志归档文件。您可以在分号分隔的列表中定义多个标记目录。例如：
- en: '[PRE17]'
  id: totrans-1971
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: A label can be any string of characters, with the exception of colons (:), which
    are not permitted. An empty label is also permitted, but the colon (:) is still
    required in this case.
  id: totrans-1972
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 标签可以是任意字符的字符串，但不允许使用冒号（:）。空标签也是允许的，但在这种情况下仍然需要冒号(:)。
- en: A path must be specified, and the directory must exist. The path can contain
    colons (':'), but semicolons (;) are not permitted.
  id: totrans-1973
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 必须指定路径，并且目录必须存在。路径可以包含冒号（':'），但不允许使用分号（;）。
- en: '[`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)'
  id: totrans-1974
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)'
- en: '| Command-Line Format | `--innodb-redo-log-capacity=#` |'
  id: totrans-1975
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-redo-log-capacity=#` |'
- en: '| Introduced | 8.0.30 |'
  id: totrans-1976
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入 | 8.0.30 |'
- en: '| System Variable | `[innodb_redo_log_capacity](innodb-parameters.html#sysvar_innodb_redo_log_capacity)`
    |'
  id: totrans-1977
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_redo_log_capacity](innodb-parameters.html#sysvar_innodb_redo_log_capacity)`
    |'
- en: '| Scope | Global |'
  id: totrans-1978
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1979
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1980
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1981
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `104857600` |'
  id: totrans-1982
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `104857600` |'
- en: '| Minimum Value | `8388608` |'
  id: totrans-1983
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `8388608` |'
- en: '| Maximum Value (≥ 8.0.34) | `549755813888` |'
  id: totrans-1984
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 (≥ 8.0.34) | `549755813888` |'
- en: '| Maximum Value (≥ 8.0.30, ≤ 8.0.33) | `137438953472` |'
  id: totrans-1985
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 (≥ 8.0.30, ≤ 8.0.33) | `137438953472` |'
- en: '| Unit | bytes |'
  id: totrans-1986
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: Defines the amount of disk space occupied by redo log files.
  id: totrans-1987
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义重做日志文件占用的磁盘空间量。
- en: This variable supersedes the [`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)
    and [`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)
    variables. When a `innodb_redo_log_capacity` setting is defined, the `innodb_log_files_in_group`
    and `innodb_log_file_size` settings are ignored; otherwise, these settings are
    used to compute the [`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)
    setting (`innodb_log_files_in_group` * `innodb_log_file_size` = `innodb_redo_log_capacity`).
    If none of those variables are set, redo log capacity is set to the `innodb_redo_log_capacity`
    default value.
  id: totrans-1988
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量取代了[`innodb_log_files_in_group`](innodb-parameters.html#sysvar_innodb_log_files_in_group)和[`innodb_log_file_size`](innodb-parameters.html#sysvar_innodb_log_file_size)变量。当定义了`innodb_redo_log_capacity`设置时，`innodb_log_files_in_group`和`innodb_log_file_size`设置将被忽略；否则，这些设置将用于计算[`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)设置（`innodb_log_files_in_group`
    * `innodb_log_file_size` = `innodb_redo_log_capacity`）。如果没有设置这些变量中的任何一个，重做日志容量将设置为`innodb_redo_log_capacity`的默认值。
- en: For more information, see [Section 17.6.5, “Redo Log”](innodb-redo-log.html
    "17.6.5 Redo Log").
  id: totrans-1989
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.6.5节，“重做日志”](innodb-redo-log.html "17.6.5 重做日志")。
- en: '[`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)'
  id: totrans-1990
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)'
- en: '| Command-Line Format | `--innodb-redo-log-encrypt[={OFF&#124;ON}]` |'
  id: totrans-1991
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-redo-log-encrypt[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_redo_log_encrypt](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)`
    |'
  id: totrans-1992
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_redo_log_encrypt](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)`
    |'
- en: '| Scope | Global |'
  id: totrans-1993
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1994
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1995
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1996
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1997
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Controls encryption of redo log data for tables encrypted using the `InnoDB`
    [data-at-rest encryption feature](innodb-data-encryption.html "17.13 InnoDB Data-at-Rest
    Encryption"). Encryption of redo log data is disabled by default. For more information,
    see [Redo Log Encryption](innodb-data-encryption.html#innodb-data-encryption-redo-log
    "Redo Log Encryption").
  id: totrans-1998
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制使用`InnoDB`[数据静态加密功能](innodb-data-encryption.html "17.13 InnoDB数据静态加密")加密的表的重做日志数据的加密。默认情况下，重做日志数据的加密是禁用的。有关更多信息，请参见[重做日志加密](innodb-data-encryption.html#innodb-data-encryption-redo-log
    "重做日志加密")。
- en: '[`innodb_replication_delay`](innodb-parameters.html#sysvar_innodb_replication_delay)'
  id: totrans-1999
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_replication_delay`](innodb-parameters.html#sysvar_innodb_replication_delay)'
- en: '| Command-Line Format | `--innodb-replication-delay=#` |'
  id: totrans-2000
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-replication-delay=#` |'
- en: '| System Variable | `[innodb_replication_delay](innodb-parameters.html#sysvar_innodb_replication_delay)`
    |'
  id: totrans-2001
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_replication_delay](innodb-parameters.html#sysvar_innodb_replication_delay)`
    |'
- en: '| Scope | Global |'
  id: totrans-2002
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2003
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2004
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2005
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-2006
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-2007
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-2008
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: '| Unit | milliseconds |'
  id: totrans-2009
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 毫秒 |'
- en: The replication thread delay in milliseconds on a replica server if [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    is reached.
  id: totrans-2010
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果达到[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)时，在副本服务器上的复制线程延迟���以毫秒为单位）。
- en: '[`innodb_rollback_on_timeout`](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)'
  id: totrans-2011
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_rollback_on_timeout`](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)'
- en: '| Command-Line Format | `--innodb-rollback-on-timeout[={OFF&#124;ON}]` |'
  id: totrans-2012
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-rollback-on-timeout[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_rollback_on_timeout](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)`
    |'
  id: totrans-2013
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_rollback_on_timeout](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)`
    |'
- en: '| Scope | Global |'
  id: totrans-2014
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2015
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2016
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2017
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-2018
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: '`InnoDB` [rolls back](glossary.html#glos_rollback "rollback") only the last
    statement on a transaction timeout by default. If [`--innodb-rollback-on-timeout`](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)
    is specified, a transaction timeout causes `InnoDB` to abort and roll back the
    entire transaction.'
  id: totrans-2019
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` 默认仅在事务超时时回滚最后一个语句。如果指定了 [`--innodb-rollback-on-timeout`](innodb-parameters.html#sysvar_innodb_rollback_on_timeout)，事务超时会导致
    `InnoDB` 中止并回滚整个事务。'
- en: For more information, see [Section 17.21.5, “InnoDB Error Handling”](innodb-error-handling.html
    "17.21.5 InnoDB Error Handling").
  id: totrans-2020
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见 [第17.21.5节，“InnoDB错误处理”](innodb-error-handling.html "17.21.5 InnoDB
    Error Handling")。
- en: '[`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)'
  id: totrans-2021
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)'
- en: '| Command-Line Format | `--innodb-rollback-segments=#` |'
  id: totrans-2022
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-rollback-segments=#` |'
- en: '| System Variable | `[innodb_rollback_segments](innodb-parameters.html#sysvar_innodb_rollback_segments)`
    |'
  id: totrans-2023
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_rollback_segments](innodb-parameters.html#sysvar_innodb_rollback_segments)`
    |'
- en: '| Scope | Global |'
  id: totrans-2024
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2025
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2026
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2027
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `128` |'
  id: totrans-2028
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `128` |'
- en: '| Minimum Value | `1` |'
  id: totrans-2029
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `128` |'
  id: totrans-2030
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `128` |'
- en: '[`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)
    defines the number of [rollback segments](glossary.html#glos_rollback_segment
    "rollback segment") allocated to each undo tablespace and the global temporary
    tablespace for transactions that generate undo records. The number of transactions
    that each rollback segment supports depends on the `InnoDB` page size and the
    number of undo logs assigned to each transaction. For more information, see [Section 17.6.6,
    “Undo Logs”](innodb-undo-logs.html "17.6.6 Undo Logs").'
  id: totrans-2031
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)
    定义了分配给每个撤消表空间和生成撤消记录的全局临时表空间的[撤消段](glossary.html#glos_rollback_segment "rollback
    segment")数量。每个撤消段支持的事务数量取决于 `InnoDB` 页大小和分配给每个事务的撤消日志数量。更多信息，请参见 [第17.6.6节，“撤消日志”](innodb-undo-logs.html
    "17.6.6 Undo Logs")。'
- en: For related information, see [Section 17.3, “InnoDB Multi-Versioning”](innodb-multi-versioning.html
    "17.3 InnoDB Multi-Versioning"). For information about undo tablespaces, see [Section 17.6.3.4,
    “Undo Tablespaces”](innodb-undo-tablespaces.html "17.6.3.4 Undo Tablespaces").
  id: totrans-2032
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 相关信息，请参见 [第17.3节，“InnoDB多版本”](innodb-multi-versioning.html "17.3 InnoDB Multi-Versioning")。有关撤消表空间的信息，请参见
    [第17.6.3.4节，“撤消表空间”](innodb-undo-tablespaces.html "17.6.3.4 Undo Tablespaces")。
- en: '[`innodb_saved_page_number_debug`](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)'
  id: totrans-2033
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_saved_page_number_debug`](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)'
- en: '| Command-Line Format | `--innodb-saved-page-number-debug=#` |'
  id: totrans-2034
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-saved-page-number-debug=#` |'
- en: '| System Variable | `[innodb_saved_page_number_debug](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)`
    |'
  id: totrans-2035
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_saved_page_number_debug](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-2036
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2037
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2038
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2039
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-2040
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-2041
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `2**32-1` |'
  id: totrans-2042
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `2**32-1` |'
- en: Saves a page number. Setting the [`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    option dirties the page defined by [`innodb_saved_page_number_debug`](innodb-parameters.html#sysvar_innodb_saved_page_number_debug).
    The [`innodb_saved_page_number_debug`](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)
    option is only available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.
  id: totrans-2043
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保存一个页面编号。设置 [`innodb_fil_make_page_dirty_debug`](innodb-parameters.html#sysvar_innodb_fil_make_page_dirty_debug)
    选项会使由 [`innodb_saved_page_number_debug`](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)
    定义的页面变脏。只有在使用 [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** 选项编译支持调试时，才能使用 [`innodb_saved_page_number_debug`](innodb-parameters.html#sysvar_innodb_saved_page_number_debug)
    选项。
- en: '[`innodb_segment_reserve_factor`](innodb-parameters.html#sysvar_innodb_segment_reserve_factor)'
  id: totrans-2044
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_segment_reserve_factor`](innodb-parameters.html#sysvar_innodb_segment_reserve_factor)'
- en: '| Command-Line Format | `--innodb-segment-reserve-factor=#` |'
  id: totrans-2045
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-segment-reserve-factor=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-2046
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[innodb_segment_reserve_factor](innodb-parameters.html#sysvar_innodb_segment_reserve_factor)`
    |'
  id: totrans-2047
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_segment_reserve_factor](innodb-parameters.html#sysvar_innodb_segment_reserve_factor)`
    |'
- en: '| Scope | Global |'
  id: totrans-2048
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2049
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2050
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Numeric |'
  id: totrans-2051
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 数值 |'
- en: '| Default Value | `12.5` |'
  id: totrans-2052
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `12.5` |'
- en: '| Minimum Value | `0.03` |'
  id: totrans-2053
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0.03` |'
- en: '| Maximum Value | `40` |'
  id: totrans-2054
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `40` |'
- en: Defines the percentage of tablespace file segment pages reserved as empty pages.
    The setting is applicable to file-per-table and general tablespaces. The [`innodb_segment_reserve_factor`](innodb-parameters.html#sysvar_innodb_segment_reserve_factor)
    default setting is 12.5 percent, which is the same percentage of pages reserved
    in previous MySQL releases.
  id: totrans-2055
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义表空间文件段页面保留为空页面的百分比。该设置适用于每表文件和通用表空间。[`innodb_segment_reserve_factor`](innodb-parameters.html#sysvar_innodb_segment_reserve_factor)默认设置为12.5%，这与之前的MySQL版本中保留的页面百分比相同。
- en: For more information, see [Configuring the Percentage of Reserved File Segment
    Pages](innodb-file-space.html#innodb-config-reserved-file-segment-pages "Configuring
    the Percentage of Reserved File Segment Pages").
  id: totrans-2056
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[配置保留文件段页面的百分比](innodb-file-space.html#innodb-config-reserved-file-segment-pages
    "配置保留文件段页面的百分比")。
- en: '[`innodb_sort_buffer_size`](innodb-parameters.html#sysvar_innodb_sort_buffer_size)'
  id: totrans-2057
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_sort_buffer_size`](innodb-parameters.html#sysvar_innodb_sort_buffer_size)'
- en: '| Command-Line Format | `--innodb-sort-buffer-size=#` |'
  id: totrans-2058
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-sort-buffer-size=#` |'
- en: '| System Variable | `[innodb_sort_buffer_size](innodb-parameters.html#sysvar_innodb_sort_buffer_size)`
    |'
  id: totrans-2059
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_sort_buffer_size](innodb-parameters.html#sysvar_innodb_sort_buffer_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-2060
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2061
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2062
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2063
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1048576` |'
  id: totrans-2064
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1048576` |'
- en: '| Minimum Value | `65536` |'
  id: totrans-2065
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `65536` |'
- en: '| Maximum Value | `67108864` |'
  id: totrans-2066
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `67108864` |'
- en: '| Unit | bytes |'
  id: totrans-2067
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: 'This variable defines:'
  id: totrans-2068
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量定义：
- en: The sort buffer size for online DDL operations that create or rebuild secondary
    indexes. However, as of MySQL 8.0.27, this responsibility is subsumed by the [`innodb_ddl_buffer_size`](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)
    variable.
  id: totrans-2069
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于创建或重建二级索引的在线DDL操作的排序缓冲区大小。然而，从MySQL 8.0.27开始，这一责任被[`innodb_ddl_buffer_size`](innodb-parameters.html#sysvar_innodb_ddl_buffer_size)变量所取代。
- en: The amount by which the temporary log file is extended when recording concurrent
    DML during an [online DDL](glossary.html#glos_online_ddl "online DDL") operation,
    and the size of the temporary log file read buffer and write buffer.
  id: totrans-2070
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[在线DDL](glossary.html#glos_online_ddl "在线DDL")操作期间记录并发DML时，临时日志文件扩展的量，以及临时日志文件读缓冲区和写缓冲区的大小。
- en: For related information, see [Section 17.12.3, “Online DDL Space Requirements”](innodb-online-ddl-space-requirements.html
    "17.12.3 Online DDL Space Requirements").
  id: totrans-2071
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第17.12.3节，“在线DDL空间要求”](innodb-online-ddl-space-requirements.html
    "17.12.3 在线DDL空间要求")。
- en: '[`innodb_spin_wait_delay`](innodb-parameters.html#sysvar_innodb_spin_wait_delay)'
  id: totrans-2072
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_spin_wait_delay`](innodb-parameters.html#sysvar_innodb_spin_wait_delay)'
- en: '| Command-Line Format | `--innodb-spin-wait-delay=#` |'
  id: totrans-2073
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-spin-wait-delay=#` |'
- en: '| System Variable | `[innodb_spin_wait_delay](innodb-parameters.html#sysvar_innodb_spin_wait_delay)`
    |'
  id: totrans-2074
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_spin_wait_delay](innodb-parameters.html#sysvar_innodb_spin_wait_delay)`
    |'
- en: '| Scope | Global |'
  id: totrans-2075
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2076
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2077
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2078
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `6` |'
  id: totrans-2079
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `6` |'
- en: '| Minimum Value | `0` |'
  id: totrans-2080
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value (64-bit platforms, ≤ 8.0.13) | `2**64-1` |'
  id: totrans-2081
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台，≤ 8.0.13） | `2**64-1` |'
- en: '| Maximum Value (32-bit platforms, ≤ 8.0.13) | `2**32-1` |'
  id: totrans-2082
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台，≤ 8.0.13） | `2**32-1` |'
- en: '| Maximum Value (≥ 8.0.14) | `1000` |'
  id: totrans-2083
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（≥ 8.0.14） | `1000` |'
- en: The maximum delay between polls for a [spin](glossary.html#glos_spin "spin")
    lock. The low-level implementation of this mechanism varies depending on the combination
    of hardware and operating system, so the delay does not correspond to a fixed
    time interval.
  id: totrans-2084
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[自旋](glossary.html#glos_spin "自旋")锁之间轮询的最大延迟。此机制的底层实现因硬件和操作系统的组合而异，因此延迟不对应固定的时间间隔。'
- en: Can be used in combination with the [`innodb_spin_wait_pause_multiplier`](innodb-parameters.html#sysvar_innodb_spin_wait_pause_multiplier)
    variable for greater control over the duration of spin-lock polling delays.
  id: totrans-2085
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可与[`innodb_spin_wait_pause_multiplier`](innodb-parameters.html#sysvar_innodb_spin_wait_pause_multiplier)变量结合使用，以更好地控制自旋锁轮询延迟的持续时间。
- en: For more information, see [Section 17.8.8, “Configuring Spin Lock Polling”](innodb-performance-spin_lock_polling.html
    "17.8.8 Configuring Spin Lock Polling").
  id: totrans-2086
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[��17.8.8节，“配置自旋锁轮询”](innodb-performance-spin_lock_polling.html "17.8.8 配置自旋锁轮询")。
- en: '[`innodb_spin_wait_pause_multiplier`](innodb-parameters.html#sysvar_innodb_spin_wait_pause_multiplier)'
  id: totrans-2087
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_spin_wait_pause_multiplier`](innodb-parameters.html#sysvar_innodb_spin_wait_pause_multiplier)'
- en: '| Command-Line Format | `--innodb-spin-wait-pause-multiplier=#` |'
  id: totrans-2088
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-spin-wait-pause-multiplier=#` |'
- en: '| Introduced | 8.0.16 |'
  id: totrans-2089
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.16 |'
- en: '| System Variable | `[innodb_spin_wait_pause_multiplier](innodb-parameters.html#sysvar_innodb_spin_wait_pause_multiplier)`
    |'
  id: totrans-2090
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_spin_wait_pause_multiplier](innodb-parameters.html#sysvar_innodb_spin_wait_pause_multiplier)`
    |'
- en: '| Scope | Global |'
  id: totrans-2091
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2092
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2093
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2094
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `50` |'
  id: totrans-2095
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `50` |'
- en: '| Minimum Value | `0` |'
  id: totrans-2096
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `100` |'
  id: totrans-2097
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `100` |'
- en: Defines a multiplier value used to determine the number of PAUSE instructions
    in spin-wait loops that occur when a thread waits to acquire a mutex or rw-lock.
  id: totrans-2098
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义一个乘数值，用于确定线程在等待获取互斥锁或读写锁时发生自旋等待循环中的PAUSE指令数量。
- en: For more information, see [Section 17.8.8, “Configuring Spin Lock Polling”](innodb-performance-spin_lock_polling.html
    "17.8.8 Configuring Spin Lock Polling").
  id: totrans-2099
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第17.8.8节，“配置自旋锁轮询”](innodb-performance-spin_lock_polling.html "17.8.8 配置自旋锁轮询")。
- en: '[`innodb_stats_auto_recalc`](innodb-parameters.html#sysvar_innodb_stats_auto_recalc)'
  id: totrans-2100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_stats_auto_recalc`](innodb-parameters.html#sysvar_innodb_stats_auto_recalc)'
- en: '| Command-Line Format | `--innodb-stats-auto-recalc[={OFF&#124;ON}]` |'
  id: totrans-2101
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-stats-auto-recalc[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_stats_auto_recalc](innodb-parameters.html#sysvar_innodb_stats_auto_recalc)`
    |'
  id: totrans-2102
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_stats_auto_recalc](innodb-parameters.html#sysvar_innodb_stats_auto_recalc)`
    |'
- en: '| Scope | Global |'
  id: totrans-2103
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2104
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2105
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2106
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-2107
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Causes `InnoDB` to automatically recalculate [persistent statistics](glossary.html#glos_persistent_statistics
    "persistent statistics") after the data in a table is changed substantially. The
    threshold value is 10% of the rows in the table. This setting applies to tables
    created when the [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    option is enabled. Automatic statistics recalculation may also be configured by
    specifying `STATS_PERSISTENT=1` in a [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") or [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    statement. The amount of data sampled to produce the statistics is controlled
    by the [`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    variable.
  id: totrans-2108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 导致`InnoDB`在表中的数据发生重大更改后自动重新计算[持久性统计信息](glossary.html#glos_persistent_statistics
    "持久性统计信息")。阈值为表中行数的10%。此设置适用于启用[`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)选项时创建的表。还可以通过在[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE语句")或[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE语句")语句中指定`STATS_PERSISTENT=1`来配置自动统计信息重新计算。用于生成统计信息的采样数据量由[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)变量控制。
- en: For more information, see [Section 17.8.10.1, “Configuring Persistent Optimizer
    Statistics Parameters”](innodb-persistent-stats.html "17.8.10.1 Configuring Persistent
    Optimizer Statistics Parameters").
  id: totrans-2109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第17.8.10.1节，“配置持久性优化器统计参数”](innodb-persistent-stats.html "17.8.10.1 配置持久性优化器统计参数")。
- en: '[`innodb_stats_include_delete_marked`](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)'
  id: totrans-2110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_stats_include_delete_marked`](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)'
- en: '| Command-Line Format | `--innodb-stats-include-delete-marked[={OFF&#124;ON}]`
    |'
  id: totrans-2111
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-stats-include-delete-marked[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_stats_include_delete_marked](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)`
    |'
  id: totrans-2112
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_stats_include_delete_marked](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)`
    |'
- en: '| Scope | Global |'
  id: totrans-2113
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2114
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2115
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2116
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-2117
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: By default, `InnoDB` reads uncommitted data when calculating statistics. In
    the case of an uncommitted transaction that deletes rows from a table, `InnoDB`
    excludes records that are delete-marked when calculating row estimates and index
    statistics, which can lead to non-optimal execution plans for other transactions
    that are operating on the table concurrently using a transaction isolation level
    other than [`READ UNCOMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-uncommitted).
    To avoid this scenario, [`innodb_stats_include_delete_marked`](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)
    can be enabled to ensure that `InnoDB` includes delete-marked records when calculating
    persistent optimizer statistics.
  id: totrans-2118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，`InnoDB`在计算统计信息时读取未提交的数据。在未提交事务删除表中的行的情况下，`InnoDB`在计算行估计和索引统计信息时排除了被标记为删除的记录，这可能导致其他使用事务隔离级别为[`READ
    UNCOMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-uncommitted)并发操作表的事务执行计划不佳。为避免这种情况，可以启用[`innodb_stats_include_delete_marked`](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)以确保`InnoDB`在计算持久优化器统计信息时包括被标记为删除的记录。
- en: When [`innodb_stats_include_delete_marked`](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)
    is enabled, [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")
    considers delete-marked records when recalculating statistics.
  id: totrans-2119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用[`innodb_stats_include_delete_marked`](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)时，[`ANALYZE
    TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")在重新计算统计信息时考虑了删除标记记录。
- en: '[`innodb_stats_include_delete_marked`](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)
    is a global setting that affects all `InnoDB` tables. It is only applicable to
    persistent optimizer statistics.'
  id: totrans-2120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_stats_include_delete_marked`](innodb-parameters.html#sysvar_innodb_stats_include_delete_marked)是一个影响所有`InnoDB`表的全局设置。仅适用于持久优化器统计信息。'
- en: For related information, see [Section 17.8.10.1, “Configuring Persistent Optimizer
    Statistics Parameters”](innodb-persistent-stats.html "17.8.10.1 Configuring Persistent
    Optimizer Statistics Parameters").
  id: totrans-2121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参阅[第17.8.10.1节，“配置持久优化器统计参数”](innodb-persistent-stats.html "17.8.10.1 Configuring
    Persistent Optimizer Statistics Parameters")。
- en: '[`innodb_stats_method`](innodb-parameters.html#sysvar_innodb_stats_method)'
  id: totrans-2122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_stats_method`](innodb-parameters.html#sysvar_innodb_stats_method)'
- en: '| Command-Line Format | `--innodb-stats-method=value` |'
  id: totrans-2123
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-stats-method=value` |'
- en: '| System Variable | `[innodb_stats_method](innodb-parameters.html#sysvar_innodb_stats_method)`
    |'
  id: totrans-2124
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_stats_method](innodb-parameters.html#sysvar_innodb_stats_method)`
    |'
- en: '| Scope | Global |'
  id: totrans-2125
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2126
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2127
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-2128
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `nulls_equal` |'
  id: totrans-2129
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `nulls_equal` |'
- en: '| Valid Values | `nulls_equal``nulls_unequal``nulls_ignored` |'
  id: totrans-2130
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效取值 | `nulls_equal``nulls_unequal``nulls_ignored` |'
- en: How the server treats `NULL` values when collecting [statistics](glossary.html#glos_statistics
    "statistics") about the distribution of index values for `InnoDB` tables. Permitted
    values are `nulls_equal`, `nulls_unequal`, and `nulls_ignored`. For `nulls_equal`,
    all `NULL` index values are considered equal and form a single value group with
    a size equal to the number of `NULL` values. For `nulls_unequal`, `NULL` values
    are considered unequal, and each `NULL` forms a distinct value group of size 1\.
    For `nulls_ignored`, `NULL` values are ignored.
  id: totrans-2131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在收集关于`InnoDB`表索引值分布的[统计信息](glossary.html#glos_statistics "statistics")时如何处理`NULL`值。允许的取值为`nulls_equal`、`nulls_unequal`和`nulls_ignored`。对于`nulls_equal`，所有`NULL`索引值被视为相等，并形成一个大小等于`NULL`值数量的值组。对于`nulls_unequal`，`NULL`值被视为不相等，每个`NULL`形成一个大小为1的独立值组。对于`nulls_ignored`，`NULL`值被忽略。
- en: The method used to generate table statistics influences how the optimizer chooses
    indexes for query execution, as described in [Section 10.3.8, “InnoDB and MyISAM
    Index Statistics Collection”](index-statistics.html "10.3.8 InnoDB and MyISAM
    Index Statistics Collection").
  id: totrans-2132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成表统计信息的方法会影响优化器选择查询执行时使用的索引，详见[第10.3.8节，“InnoDB和MyISAM索引统计信息收集”](index-statistics.html
    "10.3.8 InnoDB和MyISAM索引统计信息收集")。
- en: '[`innodb_stats_on_metadata`](innodb-parameters.html#sysvar_innodb_stats_on_metadata)'
  id: totrans-2133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_stats_on_metadata`](innodb-parameters.html#sysvar_innodb_stats_on_metadata)'
- en: '| Command-Line Format | `--innodb-stats-on-metadata[={OFF&#124;ON}]` |'
  id: totrans-2134
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-stats-on-metadata[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_stats_on_metadata](innodb-parameters.html#sysvar_innodb_stats_on_metadata)`
    |'
  id: totrans-2135
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_stats_on_metadata](innodb-parameters.html#sysvar_innodb_stats_on_metadata)`
    |'
- en: '| Scope | Global |'
  id: totrans-2136
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2137
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2138
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2139
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-2140
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: This option only applies when optimizer [statistics](glossary.html#glos_statistics
    "statistics") are configured to be non-persistent. Optimizer statistics are not
    persisted to disk when [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    is disabled or when individual tables are created or altered with `STATS_PERSISTENT=0`.
    For more information, see [Section 17.8.10.2, “Configuring Non-Persistent Optimizer
    Statistics Parameters”](innodb-statistics-estimation.html "17.8.10.2 Configuring
    Non-Persistent Optimizer Statistics Parameters").
  id: totrans-2141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项仅在优化器[统计信息](glossary.html#glos_statistics "统计信息")配置为非持久性时适用。当禁用[`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)或使用`STATS_PERSISTENT=0`创建或更改单个表时，优化器统计信息不会持久保存到磁盘。有关更多信息，请参阅[第17.8.10.2节，“配置非持久性优化器统计参数”](innodb-statistics-estimation.html
    "17.8.10.2 配置非持久性优化器统计参数")。
- en: When [`innodb_stats_on_metadata`](innodb-parameters.html#sysvar_innodb_stats_on_metadata)
    is enabled, `InnoDB` updates non-persistent [statistics](glossary.html#glos_statistics
    "statistics") when metadata statements such as [`SHOW TABLE STATUS`](show-table-status.html
    "15.7.7.38 SHOW TABLE STATUS Statement") or when accessing the Information Schema
    [`TABLES`](information-schema-tables-table.html "28.3.38 The INFORMATION_SCHEMA
    TABLES Table") or [`STATISTICS`](information-schema-statistics-table.html "28.3.34 The
    INFORMATION_SCHEMA STATISTICS Table") tables. (These updates are similar to what
    happens for [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement").)
    When disabled, `InnoDB` does not update statistics during these operations. Leaving
    the setting disabled can improve access speed for schemas that have a large number
    of tables or indexes. It can also improve the stability of [execution plans](glossary.html#glos_query_execution_plan
    "query execution plan") for queries that involve `InnoDB` tables.
  id: totrans-2142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用[`innodb_stats_on_metadata`](innodb-parameters.html#sysvar_innodb_stats_on_metadata)时，`InnoDB`在元数据语句（如[`SHOW
    TABLE STATUS`](show-table-status.html "15.7.7.38 SHOW TABLE STATUS Statement")）或访问信息模式[`TABLES`](information-schema-tables-table.html
    "28.3.38 The INFORMATION_SCHEMA TABLES Table")或[`STATISTICS`](information-schema-statistics-table.html
    "28.3.34 The INFORMATION_SCHEMA STATISTICS Table")表时更新非持久性[统计信息](glossary.html#glos_statistics
    "统计信息")。（这些更新类似于[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")的操作。）禁用时，`InnoDB`在这些操作期间不会更新统计信息。保持禁用设置可以提高对具有大量表或索引的模式的访问速度。它还可以改善涉及`InnoDB`表的查询的[执行计划](glossary.html#glos_query_execution_plan
    "查询执行计划")的稳定性。
- en: To change the setting, issue the statement `SET GLOBAL innodb_stats_on_metadata=*`mode`*`,
    where `*`mode`*` is either `ON` or `OFF` (or `1` or `0`). Changing the setting
    requires privileges sufficient to set global system variables (see [Section 7.1.9.1,
    “System Variable Privileges”](system-variable-privileges.html "7.1.9.1 System
    Variable Privileges")) and immediately affects the operation of all connections.
  id: totrans-2143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要更改设置，请发出语句`SET GLOBAL innodb_stats_on_metadata=*`mode`*`，其中`*`mode`*`为`ON`或`OFF`（或`1`或`0`）。更改设置需要足够设置全局系统变量的权限（请参阅[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")），并立即影响所有连接的操作。
- en: '[`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)'
  id: totrans-2144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)'
- en: '| Command-Line Format | `--innodb-stats-persistent[={OFF&#124;ON}]` |'
  id: totrans-2145
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-stats-persistent[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_stats_persistent](innodb-parameters.html#sysvar_innodb_stats_persistent)`
    |'
  id: totrans-2146
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_stats_persistent](innodb-parameters.html#sysvar_innodb_stats_persistent)`
    |'
- en: '| Scope | Global |'
  id: totrans-2147
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2148
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2149
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2150
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `ON` |'
  id: totrans-2151
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Specifies whether `InnoDB` index statistics are persisted to disk. Otherwise,
    statistics may be recalculated frequently which can lead to variations in [query
    execution plans](glossary.html#glos_query_execution_plan "query execution plan").
    This setting is stored with each table when the table is created. You can set
    [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    at the global level before creating a table, or use the `STATS_PERSISTENT` clause
    of the [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") and
    [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") statements to
    override the system-wide setting and configure persistent statistics for individual
    tables.
  id: totrans-2152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定`InnoDB`索引统计信息是否持久化到磁盘。否则，统计信息可能会经常重新计算，这可能导致[查询执行计划](glossary.html#glos_query_execution_plan
    "查询执行计划")的变化。此设置在创建表时与每个表一起存储。您可以在创建表之前在全局级别设置[`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)，或者使用[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE语句")和[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE语句")语句的`STATS_PERSISTENT`子句覆盖系统级设置，并为单个表配置持久性统计信息。
- en: For more information, see [Section 17.8.10.1, “Configuring Persistent Optimizer
    Statistics Parameters”](innodb-persistent-stats.html "17.8.10.1 Configuring Persistent
    Optimizer Statistics Parameters").
  id: totrans-2153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅 [第17.8.10.1节，“配置持久性优化器统计参数”](innodb-persistent-stats.html "17.8.10.1 配置持久性优化器统计参数")。
- en: '[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)'
  id: totrans-2154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)'
- en: '| Command-Line Format | `--innodb-stats-persistent-sample-pages=#` |'
  id: totrans-2155
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-stats-persistent-sample-pages=#` |'
- en: '| System Variable | `[innodb_stats_persistent_sample_pages](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)`
    |'
  id: totrans-2156
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_stats_persistent_sample_pages](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)`
    |'
- en: '| Scope | Global |'
  id: totrans-2157
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2158
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2159
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2160
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `20` |'
  id: totrans-2161
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `20` |'
- en: '| Minimum Value | `1` |'
  id: totrans-2162
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `18446744073709551615` |'
  id: totrans-2163
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `18446744073709551615` |'
- en: The number of index [pages](glossary.html#glos_page "page") to sample when estimating
    [cardinality](glossary.html#glos_cardinality "cardinality") and other [statistics](glossary.html#glos_statistics
    "statistics") for an indexed column, such as those calculated by [`ANALYZE TABLE`](analyze-table.html
    "15.7.3.1 ANALYZE TABLE Statement"). Increasing the value improves the accuracy
    of index statistics, which can improve the [query execution plan](glossary.html#glos_query_execution_plan
    "query execution plan"), at the expense of increased I/O during the execution
    of [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement") for
    an `InnoDB` table. For more information, see [Section 17.8.10.1, “Configuring
    Persistent Optimizer Statistics Parameters”](innodb-persistent-stats.html "17.8.10.1 Configuring
    Persistent Optimizer Statistics Parameters").
  id: totrans-2164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于估算索引列的[基数](glossary.html#glos_page "页")和其他[统计信息](glossary.html#glos_cardinality
    "基数")的索引[页](glossary.html#glos_statistics "统计信息")的数量，例如[`ANALYZE TABLE`](analyze-table.html
    "15.7.3.1 ANALYZE TABLE语句")计算的那些。增加该值可以提高索引统计信息的准确性，从而可以改善[查询执行计划](glossary.html#glos_query_execution_plan
    "查询执行计划")，但会增加执行[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE语句")时`InnoDB`表的I/O开销。更多信息，请参阅
    [第17.8.10.1节，“配置持久性优化器统计参数”](innodb-persistent-stats.html "17.8.10.1 配置持久性优化器统计参数")。
- en: Note
  id: totrans-2165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Setting a high value for [`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    could result in lengthy [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement") execution time. To estimate the number of database pages accessed
    by [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement"), see
    [Section 17.8.10.3, “Estimating ANALYZE TABLE Complexity for InnoDB Tables”](innodb-analyze-table-complexity.html
    "17.8.10.3 Estimating ANALYZE TABLE Complexity for InnoDB Tables").
  id: totrans-2166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为 [`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    设置一个较高的值可能导致 [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")
    执行时间过长。要估算 [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")
    访问的数据库页数，请参见 [Section 17.8.10.3, “Estimating ANALYZE TABLE Complexity for InnoDB
    Tables”](innodb-analyze-table-complexity.html "17.8.10.3 Estimating ANALYZE TABLE
    Complexity for InnoDB Tables")。
- en: '[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    only applies when [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    is enabled for a table; when [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    is disabled, [`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
    applies instead.'
  id: totrans-2167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当为表启用 [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    时，[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    才适用；当禁用 [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    时，将使用 [`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)。
- en: '[`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)'
  id: totrans-2168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)'
- en: '| Command-Line Format | `--innodb-stats-transient-sample-pages=#` |'
  id: totrans-2169
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-stats-transient-sample-pages=#` |'
- en: '| System Variable | `[innodb_stats_transient_sample_pages](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)`
    |'
  id: totrans-2170
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_stats_transient_sample_pages](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)`
    |'
- en: '| Scope | Global |'
  id: totrans-2171
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2172
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2173
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-2174
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `8` |'
  id: totrans-2175
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `8` |'
- en: '| Minimum Value | `1` |'
  id: totrans-2176
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `18446744073709551615` |'
  id: totrans-2177
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `18446744073709551615` |'
- en: The number of index [pages](glossary.html#glos_page "page") to sample when estimating
    [cardinality](glossary.html#glos_cardinality "cardinality") and other [statistics](glossary.html#glos_statistics
    "statistics") for an indexed column, such as those calculated by [`ANALYZE TABLE`](analyze-table.html
    "15.7.3.1 ANALYZE TABLE Statement"). The default value is 8\. Increasing the value
    improves the accuracy of index statistics, which can improve the [query execution
    plan](glossary.html#glos_query_execution_plan "query execution plan"), at the
    expense of increased I/O when opening an `InnoDB` table or recalculating statistics.
    For more information, see [Section 17.8.10.2, “Configuring Non-Persistent Optimizer
    Statistics Parameters”](innodb-statistics-estimation.html "17.8.10.2 Configuring
    Non-Persistent Optimizer Statistics Parameters").
  id: totrans-2178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在估算索引列的[基数](glossary.html#glos_cardinality "cardinality")和其他[统计信息](glossary.html#glos_statistics
    "statistics")时要采样的索引[页](glossary.html#glos_page "page")数，例如通过 [`ANALYZE TABLE`](analyze-table.html
    "15.7.3.1 ANALYZE TABLE Statement") 计算的那些。默认值为 8。增加该值可以提高索引统计信息的准确性，从而改善[查询执行计划](glossary.html#glos_query_execution_plan
    "query execution plan")，但会增加打开 `InnoDB` 表或重新计算统计信息时的 I/O。有关更多信息，请参见 [Section 17.8.10.2,
    “Configuring Non-Persistent Optimizer Statistics Parameters”](innodb-statistics-estimation.html
    "17.8.10.2 Configuring Non-Persistent Optimizer Statistics Parameters")。
- en: Note
  id: totrans-2179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Setting a high value for [`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
    could result in lengthy [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement") execution time. To estimate the number of database pages accessed
    by [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement"), see
    [Section 17.8.10.3, “Estimating ANALYZE TABLE Complexity for InnoDB Tables”](innodb-analyze-table-complexity.html
    "17.8.10.3 Estimating ANALYZE TABLE Complexity for InnoDB Tables").
  id: totrans-2180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为 [`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
    设置一个较高的值可能导致 [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")
    执行时间过长。要估算 [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")
    访问的数据库页数，请参见 [Section 17.8.10.3, “Estimating ANALYZE TABLE Complexity for InnoDB
    Tables”](innodb-analyze-table-complexity.html "17.8.10.3 Estimating ANALYZE TABLE
    Complexity for InnoDB Tables")。
- en: '[`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)
    only applies when [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    is disabled for a table; when [`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)
    is enabled, [`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    applies instead. Takes the place of [`innodb_stats_sample_pages`](/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_stats_sample_pages).
    For more information, see [Section 17.8.10.2, “Configuring Non-Persistent Optimizer
    Statistics Parameters”](innodb-statistics-estimation.html "17.8.10.2 Configuring
    Non-Persistent Optimizer Statistics Parameters").'
  id: totrans-2181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)仅在为表禁用[`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)时适用；当启用[`innodb_stats_persistent`](innodb-parameters.html#sysvar_innodb_stats_persistent)时，将使用[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)。取代[`innodb_stats_sample_pages`](/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_stats_sample_pages)。更多信息，请参见[第17.8.10.2节，“配置非持久性优化器统计参数”](innodb-statistics-estimation.html
    "17.8.10.2 配置非持久性优化器统计参数")。'
- en: '[`innodb_status_output`](innodb-parameters.html#sysvar_innodb_status_output)'
  id: totrans-2182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_status_output`](innodb-parameters.html#sysvar_innodb_status_output)'
- en: '| Command-Line Format | `--innodb-status-output[={OFF&#124;ON}]` |'
  id: totrans-2183
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-status-output[={OFF|ON}]` |'
- en: '| System Variable | `[innodb_status_output](innodb-parameters.html#sysvar_innodb_status_output)`
    |'
  id: totrans-2184
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_status_output](innodb-parameters.html#sysvar_innodb_status_output)`
    |'
- en: '| Scope | Global |'
  id: totrans-2185
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2186
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2187
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2188
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `OFF` |'
  id: totrans-2189
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enables or disables periodic output for the standard `InnoDB` Monitor. Also
    used in combination with [`innodb_status_output_locks`](innodb-parameters.html#sysvar_innodb_status_output_locks)
    to enable or disable periodic output for the `InnoDB` Lock Monitor. For more information,
    see [Section 17.17.2, “Enabling InnoDB Monitors”](innodb-enabling-monitors.html
    "17.17.2 Enabling InnoDB Monitors").
  id: totrans-2190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用或禁用标准`InnoDB`监视器的定期输出。也与[`innodb_status_output_locks`](innodb-parameters.html#sysvar_innodb_status_output_locks)结合使用，以启用或禁用`InnoDB`锁监视器的定期输出。更多信息，请参见[第17.17.2节，“启用InnoDB监视器”](innodb-enabling-monitors.html
    "17.17.2 启用InnoDB监视器")。
- en: '[`innodb_status_output_locks`](innodb-parameters.html#sysvar_innodb_status_output_locks)'
  id: totrans-2191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_status_output_locks`](innodb-parameters.html#sysvar_innodb_status_output_locks)'
- en: '| Command-Line Format | `--innodb-status-output-locks[={OFF&#124;ON}]` |'
  id: totrans-2192
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-status-output-locks[={OFF|ON}]` |'
- en: '| System Variable | `[innodb_status_output_locks](innodb-parameters.html#sysvar_innodb_status_output_locks)`
    |'
  id: totrans-2193
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_status_output_locks](innodb-parameters.html#sysvar_innodb_status_output_locks)`
    |'
- en: '| Scope | Global |'
  id: totrans-2194
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2195
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2196
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2197
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `OFF` |'
  id: totrans-2198
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enables or disables the `InnoDB` Lock Monitor. When enabled, the `InnoDB` Lock
    Monitor prints additional information about locks in `SHOW ENGINE INNODB STATUS`
    output and in periodic output printed to the MySQL error log. Periodic output
    for the `InnoDB` Lock Monitor is printed as part of the standard `InnoDB` Monitor
    output. The standard `InnoDB` Monitor must therefore be enabled for the `InnoDB`
    Lock Monitor to print data to the MySQL error log periodically. For more information,
    see [Section 17.17.2, “Enabling InnoDB Monitors”](innodb-enabling-monitors.html
    "17.17.2 Enabling InnoDB Monitors").
  id: totrans-2199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用或禁用`InnoDB`锁监视器。启用后，`InnoDB`锁监视器会在`SHOW ENGINE INNODB STATUS`输出和定期输出中打印有关锁的附加信息，并在MySQL错误日志中打印。`InnoDB`锁监视器的定期输出作为标准`InnoDB`监视器输出的一部分打印。因此，必须启用标准`InnoDB`监视器，`InnoDB`锁监视器才能定期将数据打印到MySQL错误日志中。更多信息，请参见[第17.17.2节，“启用InnoDB监视器”](innodb-enabling-monitors.html
    "17.17.2 启用InnoDB监视器")。
- en: '[`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)'
  id: totrans-2200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)'
- en: '| Command-Line Format | `--innodb-strict-mode[={OFF&#124;ON}]` |'
  id: totrans-2201
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--innodb-strict-mode[={OFF|ON}]` |'
- en: '| System Variable | `[innodb_strict_mode](innodb-parameters.html#sysvar_innodb_strict_mode)`
    |'
  id: totrans-2202
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_strict_mode](innodb-parameters.html#sysvar_innodb_strict_mode)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-2203
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-2204
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2205
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2206
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-2207
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: When [`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)
    is enabled, `InnoDB` returns errors rather than warnings when checking for invalid
    or incompatible table options.
  id: totrans-2208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用[`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)时，`InnoDB`在检查无效或不兼容表选项时返回错误而不是警告。
- en: It checks that `KEY_BLOCK_SIZE`, `ROW_FORMAT`, `DATA DIRECTORY`, `TEMPORARY`,
    and `TABLESPACE` options are compatible with each other and other settings.
  id: totrans-2209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它检查`KEY_BLOCK_SIZE`、`ROW_FORMAT`、`DATA DIRECTORY`、`TEMPORARY`和`TABLESPACE`选项是否与彼此和其他设置兼容。
- en: '`innodb_strict_mode=ON` also enables a row size check when creating or altering
    a table, to prevent `INSERT` or `UPDATE` from failing due to the record being
    too large for the selected page size.'
  id: totrans-2210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`innodb_strict_mode=ON`还在创建或更改表时启用行大小检查，以防止由于记录对所选页面大小过大而导致`INSERT`或`UPDATE`失败。'
- en: '`You can enable or disable [`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)
    on the command line when starting `mysqld`, or in a MySQL [configuration file](glossary.html#glos_configuration_file
    "configuration file"). You can also enable or disable [`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)
    at runtime with the statement `SET [GLOBAL|SESSION] innodb_strict_mode=*`mode`*`,
    where `*`mode`*` is either `ON` or `OFF`. Changing the `GLOBAL` setting requires
    privileges sufficient to set global system variables (see [Section 7.1.9.1, “System
    Variable Privileges”](system-variable-privileges.html "7.1.9.1 System Variable
    Privileges")) and affects the operation of all clients that subsequently connect.
    Any client can change the `SESSION` setting for [`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode),
    and the setting affects only that client.`'
  id: totrans-2211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`您可以在启动`mysqld`时在命令行上启用或禁用[`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)，或者在
    MySQL [配置文件](glossary.html#glos_configuration_file "配置文件")中启用或禁用[`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)。您还可以使用语句`SET
    [GLOBAL|SESSION] innodb_strict_mode=*`mode`*`在运行时启用或禁用[`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)，其中`*`mode`*`为`ON`或`OFF`。更改`GLOBAL`设置需要具有足够权限设置全局系统变量的权限（请参阅
    [Section 7.1.9.1, “系统变量权限”](system-variable-privileges.html "7.1.9.1 系统变量权限")），并影响随后连接的所有客户端的操作。任何客户端都可以更改[`innodb_strict_mode`](innodb-parameters.html#sysvar_innodb_strict_mode)的`SESSION`设置，该设置仅影响该客户端。`'
- en: '`As of MySQL 8.0.26, setting the session value of this system variable is a
    restricted operation. The session user must have privileges sufficient to set
    restricted session variables. See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").`'
  id: totrans-2212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`从 MySQL 8.0.26 开始，设置此系统变量的会话值是受限制的操作。会话用户必须具有足够的权限来设置受限制的会话变量。请参阅 [Section 7.1.9.1,
    “系统变量权限”](system-variable-privileges.html "7.1.9.1 系统变量权限")。`'
- en: '`[`innodb_sync_array_size`](innodb-parameters.html#sysvar_innodb_sync_array_size)`'
  id: totrans-2213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_sync_array_size`](innodb-parameters.html#sysvar_innodb_sync_array_size)`'
- en: '`| Command-Line Format | `--innodb-sync-array-size=#` |'
  id: totrans-2214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-sync-array-size=#` |'
- en: '| System Variable | `[innodb_sync_array_size](innodb-parameters.html#sysvar_innodb_sync_array_size)`
    |'
  id: totrans-2215
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_sync_array_size](innodb-parameters.html#sysvar_innodb_sync_array_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-2216
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2217
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2218
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2219
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1` |'
  id: totrans-2220
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1` |'
- en: '| Minimum Value | `1` |'
  id: totrans-2221
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `1024` |'
  id: totrans-2222
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1024` |'
- en: Defines the size of the mutex/lock wait array. Increasing the value splits the
    internal data structure used to coordinate threads, for higher concurrency in
    workloads with large numbers of waiting threads. This setting must be configured
    when the MySQL instance is starting up, and cannot be changed afterward. Increasing
    the value is recommended for workloads that frequently produce a large number
    of waiting threads, typically greater than 768.`
  id: totrans-2223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义互斥锁/锁等待数组的大小。增加该值会分割用于协调线程的内部数据结构，以提高在具有大量等待线程的工作负载中的并发性。必须在 MySQL 实例启动时配置此设置，之后无法更改。建议增加该值以适应频繁产生大量等待线程的工作负载，通常大于768个。`
- en: '`[`innodb_sync_spin_loops`](innodb-parameters.html#sysvar_innodb_sync_spin_loops)`'
  id: totrans-2224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_sync_spin_loops`](innodb-parameters.html#sysvar_innodb_sync_spin_loops)`'
- en: '`| Command-Line Format | `--innodb-sync-spin-loops=#` |'
  id: totrans-2225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-sync-spin-loops=#` |'
- en: '| System Variable | `[innodb_sync_spin_loops](innodb-parameters.html#sysvar_innodb_sync_spin_loops)`
    |'
  id: totrans-2226
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| System Variable | `[innodb_sync_spin_loops](innodb-parameters.html#sysvar_innodb_sync_spin_loops)`
    |'
- en: '| Scope | Global |'
  id: totrans-2227
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Scope | Global |'
- en: '| Dynamic | Yes |'
  id: totrans-2228
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Dynamic | Yes |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2229
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
- en: '| Type | Integer |'
  id: totrans-2230
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Type | Integer |'
- en: '| Default Value | `30` |'
  id: totrans-2231
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Default Value | `30` |'
- en: '| Minimum Value | `0` |'
  id: totrans-2232
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Minimum Value | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-2233
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Maximum Value | `4294967295` |'
- en: The number of times a thread waits for an `InnoDB` mutex to be freed before
    the thread is suspended.`
  id: totrans-2234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 线程等待`InnoDB`互斥锁被释放的次数，超过后线程将被挂起。
- en: '`[`innodb_sync_debug`](innodb-parameters.html#sysvar_innodb_sync_debug)`'
  id: totrans-2235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_sync_debug`](innodb-parameters.html#sysvar_innodb_sync_debug)`'
- en: '`| Command-Line Format | `--innodb-sync-debug[={OFF&#124;ON}]` |'
  id: totrans-2236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| Command-Line Format | `--innodb-sync-debug[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_sync_debug](innodb-parameters.html#sysvar_innodb_sync_debug)`
    |'
  id: totrans-2237
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| System Variable | `[innodb_sync_debug](innodb-parameters.html#sysvar_innodb_sync_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-2238
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Scope | Global |'
- en: '| Dynamic | No |'
  id: totrans-2239
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Dynamic | No |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2240
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
- en: '| Type | Boolean |'
  id: totrans-2241
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Type | Boolean |'
- en: '| Default Value | `OFF` |'
  id: totrans-2242
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Default Value | `OFF` |'
- en: Enables sync debug checking for the `InnoDB` storage engine. This option is
    only available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.`
  id: totrans-2243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用`InnoDB`存储引擎的同步调试检查。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake**选项编译时才可用。
- en: '`[`innodb_table_locks`](innodb-parameters.html#sysvar_innodb_table_locks)`'
  id: totrans-2244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_table_locks`](innodb-parameters.html#sysvar_innodb_table_locks)`'
- en: '`| Command-Line Format | `--innodb-table-locks[={OFF&#124;ON}]` |'
  id: totrans-2245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| Command-Line Format | `--innodb-table-locks[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_table_locks](innodb-parameters.html#sysvar_innodb_table_locks)`
    |'
  id: totrans-2246
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| System Variable | `[innodb_table_locks](innodb-parameters.html#sysvar_innodb_table_locks)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-2247
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Scope | Global, Session |'
- en: '| Dynamic | Yes |'
  id: totrans-2248
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Dynamic | Yes |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2249
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
- en: '| Type | Boolean |'
  id: totrans-2250
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Type | Boolean |'
- en: '| Default Value | `ON` |'
  id: totrans-2251
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Default Value | `ON` |'
- en: If [`autocommit = 0`](server-system-variables.html#sysvar_autocommit), `InnoDB`
    honors [`LOCK TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES
    Statements"); MySQL does not return from `LOCK TABLES ... WRITE` until all other
    threads have released all their locks to the table. The default value of [`innodb_table_locks`](innodb-parameters.html#sysvar_innodb_table_locks)
    is 1, which means that [`LOCK TABLES`](lock-tables.html "15.3.6 LOCK TABLES and
    UNLOCK TABLES Statements") causes InnoDB to lock a table internally if [`autocommit
    = 0`](server-system-variables.html#sysvar_autocommit).
  id: totrans-2252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果[`autocommit = 0`](server-system-variables.html#sysvar_autocommit)，`InnoDB`会遵守[`LOCK
    TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES Statements")；MySQL在`LOCK
    TABLES ... WRITE`直到所有其他线程都释放对表的锁之前不会返回。[`innodb_table_locks`](innodb-parameters.html#sysvar_innodb_table_locks)的默认值为1，这意味着[`LOCK
    TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES Statements")会导致InnoDB在[`autocommit
    = 0`](server-system-variables.html#sysvar_autocommit)时内部锁定表。
- en: '[`innodb_table_locks = 0`](innodb-parameters.html#sysvar_innodb_table_locks)
    has no effect for tables locked explicitly with [`LOCK TABLES ... WRITE`](lock-tables.html
    "15.3.6 LOCK TABLES and UNLOCK TABLES Statements"). It does have an effect for
    tables locked for read or write by [`LOCK TABLES ... WRITE`](lock-tables.html
    "15.3.6 LOCK TABLES and UNLOCK TABLES Statements") implicitly (for example, through
    triggers) or by [`LOCK TABLES ... READ`](lock-tables.html "15.3.6 LOCK TABLES
    and UNLOCK TABLES Statements").'
  id: totrans-2253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_table_locks = 0`](innodb-parameters.html#sysvar_innodb_table_locks)对使用[`LOCK
    TABLES ... WRITE`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES Statements")显式锁定的表没有影响。但对通过触发器隐式锁定的表或通过[`LOCK
    TABLES ... READ`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES Statements")读写锁定的表有影响。'
- en: For related information, see [Section 17.7, “InnoDB Locking and Transaction
    Model”](innodb-locking-transaction-model.html "17.7 InnoDB Locking and Transaction
    Model").`
  id: totrans-2254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.7节，“InnoDB锁定和事务模型”](innodb-locking-transaction-model.html "17.7 InnoDB
    Locking and Transaction Model")。
- en: '`[`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)`'
  id: totrans-2255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)`'
- en: '`| Command-Line Format | `--innodb-temp-data-file-path=file_name` |'
  id: totrans-2256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| Command-Line Format | `--innodb-temp-data-file-path=file_name` |'
- en: '| System Variable | `[innodb_temp_data_file_path](innodb-parameters.html#sysvar_innodb_temp_data_file_path)`
    |'
  id: totrans-2257
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    |'
- en: '| Scope | Global |'
  id: totrans-2258
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2259
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2260
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | String |'
  id: totrans-2261
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `ibtmp1:12M:autoextend` |'
  id: totrans-2262
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ibtmp1:12M:autoextend` |'
- en: Defines the relative path, name, size, and attributes of global temporary tablespace
    data files. The global temporary tablespace stores rollback segments for changes
    made to user-created temporary tables.
  id: totrans-2263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义全局临时表空间数据文件的相对路径、名称、大小和属性。全局临时表空间存储对用户创建的临时表所做更改的回滚段。
- en: If no value is specified for [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path),
    the default behavior is to create a single auto-extending data file named `ibtmp1`
    in the [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)
    directory. The initial file size is slightly larger than 12MB.
  id: totrans-2264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果未为 [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    指定任何值，则默认行为是在 [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)
    目录中创建一个名为 `ibtmp1` 的单个自动扩展数据文件。初始文件大小略大于 12MB。
- en: 'The syntax for a global temporary tablespace data file specification includes
    the file name, file size, and `autoextend` and `max` attributes:'
  id: totrans-2265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局临时表空间数据文件规范的语法包括文件名、文件大小以及 `autoextend` 和 `max` 属性���
- en: '[PRE18]'
  id: totrans-2266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The global temporary tablespace data file cannot have the same name as another
    `InnoDB` data file. Any inability or error creating the global temporary tablespace
    data file is treated as fatal and server startup is refused.
  id: totrans-2267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局临时表空间数据文件的名称不能与另一个 `InnoDB` 数据文件相同。任何无法创建全局临时表空间数据文件或出现错误的情况都被视为致命，服务器启动将被拒绝。
- en: File sizes are specified in KB, MB, or GB by appending `K`, `M` or `G` to the
    size value. The sum of file sizes must be slightly larger than 12MB.
  id: totrans-2268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文件大小通过在大小值后附加 `K`、`M` 或 `G` 来指定为 KB、MB 或 GB。文件大小之和必须略大于 12MB。
- en: The size limit of individual files is determined by the operating system. File
    size can be more than 4GB on operating systems that support large files. Use of
    raw disk partitions for global temporary tablespace data files is not supported.
  id: totrans-2269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 单个文件的大小限制由操作系统确定。在支持大文件的操作系统上，文件大小可以超过 4GB。不支持使用原始磁盘分区用于全局临时表空间数据文件。
- en: 'The `autoextend` and `max` attributes can be used only for the data file specified
    last in the [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    setting. For example:'
  id: totrans-2270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`autoextend` 和 `max` 属性只能用于在 [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    设置中指定的最后一个数据文件。例如：'
- en: '[PRE19]'
  id: totrans-2271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The `autoextend` option causes the data file to automatically increase in size
    when it runs out of free space. The `autoextend` increment is 64MB by default.
    To modify the increment, change the [`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    variable setting.
  id: totrans-2272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`autoextend` 选项会在数据文件用尽空间时自动增加大小。`autoextend` 增量默认为 64MB。要修改增量，请更改 [`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    变量设置。'
- en: The directory path for global temporary tablespace data files is formed by concatenating
    the paths defined by [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)
    and [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path).
  id: totrans-2273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局临时表空间数据文件的目录路径是通过连接由 [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)
    和 [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    定义的路径形成的。
- en: 'Before running `InnoDB` in read-only mode, set [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    to a location outside of the data directory. The path must be relative to the
    data directory. For example:'
  id: totrans-2274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在以只读模式运行 `InnoDB` 之前，将 [`innodb_temp_data_file_path`](innodb-parameters.html#sysvar_innodb_temp_data_file_path)
    设置为数据目录之外的位置。路径必须相对于数据目录。例如：
- en: '[PRE20]'
  id: totrans-2275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: For more information, see [Global Temporary Tablespace](innodb-temporary-tablespace.html#innodb-global-temporary-tablespace
    "Global Temporary Tablespace").`
  id: totrans-2276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅 [全局临时表空间](innodb-temporary-tablespace.html#innodb-global-temporary-tablespace
    "Global Temporary Tablespace")。`
- en: '`[`innodb_temp_tablespaces_dir`](innodb-parameters.html#sysvar_innodb_temp_tablespaces_dir)`'
  id: totrans-2277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_temp_tablespaces_dir`](innodb-parameters.html#sysvar_innodb_temp_tablespaces_dir)'
- en: '`| Command-Line Format | `--innodb-temp-tablespaces-dir=dir_name` |'
  id: totrans-2278
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-temp-tablespaces-dir=dir_name` |'
- en: '| Introduced | 8.0.13 |'
  id: totrans-2279
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.13 |'
- en: '| System Variable | `[innodb_temp_tablespaces_dir](innodb-parameters.html#sysvar_innodb_temp_tablespaces_dir)`
    |'
  id: totrans-2280
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_temp_tablespaces_dir](innodb-parameters.html#sysvar_innodb_temp_tablespaces_dir)`
    |'
- en: '| Scope | Global |'
  id: totrans-2281
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2282
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Dynamic | No |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2283
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
- en: '| Type | Directory name |'
  id: totrans-2284
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: '| Default Value | `#innodb_temp` |'
  id: totrans-2285
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Default Value | `#innodb_temp` |'
- en: Defines the location where `InnoDB` creates a pool of session temporary tablespaces
    at startup. The default location is the `#innodb_temp` directory in the data directory.
    A fully qualified path or path relative to the data directory is permitted.
  id: totrans-2286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义`InnoDB`在启动时创建会话临时表空间池的位置。默认位置是数据目录中的`#innodb_temp`目录。允许使用完全限定路径或相对于数据目录的路径。
- en: As of MySQL 8.0.16, session temporary tablespaces always store user-created
    temporary tables and internal temporary tables created by the optimizer using
    `InnoDB`. (Previously, the on-disk storage engine for internal temporary tables
    was determined by the [`internal_tmp_disk_storage_engine`](server-system-variables.html#sysvar_internal_tmp_disk_storage_engine)
    system variable, which is no longer supported. See [Storage Engine for On-Disk
    Internal Temporary Tables](internal-temporary-tables.html#internal-temporary-tables-engines-disk
    "Storage Engine for On-Disk Internal Temporary Tables").)
  id: totrans-2287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.16，会话临时表空间始终存储用户创建的临时表和使用`InnoDB`创建的优化器内部临时表。（以前，内部临时表的磁盘存储引擎由不再支持的[`internal_tmp_disk_storage_engine`](server-system-variables.html#sysvar_internal_tmp_disk_storage_engine)系统变量确定。请参阅[磁盘内部临时表的存储引擎](internal-temporary-tables.html#internal-temporary-tables-engines-disk
    "磁盘内部临时表的存储引擎")。）
- en: For more information, see [Session Temporary Tablespaces](innodb-temporary-tablespace.html#innodb-session-temporary-tablespaces
    "Session Temporary Tablespaces").`
  id: totrans-2288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[会话临时表空间](innodb-temporary-tablespace.html#innodb-session-temporary-tablespaces
    "会话临时表空间")。
- en: '`[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)`'
  id: totrans-2289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)`'
- en: '`| Command-Line Format | `--innodb-thread-concurrency=#` |'
  id: totrans-2290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-thread-concurrency=#` |'
- en: '| System Variable | `[innodb_thread_concurrency](innodb-parameters.html#sysvar_innodb_thread_concurrency)`
    |'
  id: totrans-2291
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_thread_concurrency](innodb-parameters.html#sysvar_innodb_thread_concurrency)`
    |'
- en: '| Scope | Global |'
  id: totrans-2292
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Scope | Global |'
- en: '| Dynamic | Yes |'
  id: totrans-2293
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2294
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
- en: '| Type | Integer |'
  id: totrans-2295
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-2296
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Default Value | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-2297
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1000` |'
  id: totrans-2298
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1000` |'
- en: Defines the maximum number of threads permitted inside of `InnoDB`. A value
    of 0 (the default) is interpreted as infinite concurrency (no limit). This variable
    is intended for performance tuning on high concurrency systems.
  id: totrans-2299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义`InnoDB`内允许的最大线程数。值为0（默认值）被解释为无限并发（无限制）。此变量旨在用于高并发系统的性能调优。
- en: '`InnoDB` tries to keep the number of threads inside `InnoDB` less than or equal
    to the [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    limit. Threads waiting for locks are not counted in the number of concurrently
    executing threads.'
  id: totrans-2300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`试图保持`InnoDB`内部线程的数量小于或等于[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)限制。等待锁的线程不计入并发执行线程数。'
- en: The correct setting depends on workload and computing environment. Consider
    setting this variable if your MySQL instance shares CPU resources with other applications
    or if your workload or number of concurrent users is growing. Test a range of
    values to determine the setting that provides the best performance. [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    is a dynamic variable, which permits experimenting with different settings on
    a live test system. If a particular setting performs poorly, you can quickly set
    [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    back to 0.
  id: totrans-2301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正确的设置取决于工作负载和计算环境。如果你的 MySQL 实例与其他应用程序共享 CPU 资源，或者你的工作负载或并发用户数量正在增加，考虑设置这个变量。测试一系列值以确定提供最佳性能的设置。[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)是一个动态变量，允许在实时测试系统上尝试不同的设置。如果某个设置表现不佳，你可以快速将[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)设置回
    0。
- en: 'Use the following guidelines to help find and maintain an appropriate setting:'
  id: totrans-2302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下准则来帮助找到并保持适当的设置：
- en: If the number of concurrent user threads for a workload is consistently small
    and does not affect performance, set [`innodb_thread_concurrency=0`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    (no limit).
  id: totrans-2303
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果工作负载的并发用户线程数量始终很少且不影响性能，设置[`innodb_thread_concurrency=0`](innodb-parameters.html#sysvar_innodb_thread_concurrency)（无限制）。
- en: If your workload is consistently heavy or occasionally spikes, set an [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    value and adjust it until you find the number of threads that provides the best
    performance. For example, suppose that your system typically has 40 to 50 users,
    but periodically the number increases to 60, 70, or more. Through testing, you
    find that performance remains largely stable with a limit of 80 concurrent users.
    In this case, set [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    to 80.
  id: totrans-2304
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的工作负载始终很重或偶尔会出现峰值，设置一个[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)值，并调整直到找到提供最佳性能的线程数量。例如，假设你的系统通常有
    40 到 50 个用户，但有时用户数量增加到 60、70 或更多。通过测试，你发现限制为 80 个并发用户时性能基本稳定。在这种情况下，将[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)设置为
    80。
- en: If you do not want `InnoDB` to use more than a certain number of virtual CPUs
    for user threads (20 virtual CPUs, for example), set [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    to this number (or possibly lower, depending on performance testing). If your
    goal is to isolate MySQL from other applications, consider binding the `mysqld`
    process exclusively to the virtual CPUs. Be aware, however, that exclusive binding
    can result in non-optimal hardware usage if the `mysqld` process is not consistently
    busy. In this case, you can bind the `mysqld` process to the virtual CPUs but
    allow other applications to use some or all of the virtual CPUs.
  id: totrans-2305
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你不希望`InnoDB`为用户线程使用超过一定数量的虚拟 CPU（例如 20 个虚拟 CPU），将[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)设置为这个数字（或根据性能测试可能更低）。如果你的目标是将
    MySQL 与其他应用程序隔离开来，考虑将`mysqld`进程专门绑定到虚拟 CPU。然而，请注意，独占绑定可能导致硬件使用不佳，如果`mysqld`进程没有持续繁忙。在这种情况下，你可以将`mysqld`进程绑定到虚拟
    CPU，但允许其他应用程序使用部分或全部虚拟 CPU。
- en: Note
  id: totrans-2306
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: From an operating system perspective, using a resource management solution to
    manage how CPU time is shared among applications may be preferable to binding
    the `mysqld` process. For example, you could assign 90% of virtual CPU time to
    a given application while other critical processes *are not* running, and scale
    that value back to 40% when other critical processes *are* running.
  id: totrans-2307
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从操作系统的角度来看，使用资源管理解决方案来管理 CPU 时间在应用程序之间的共享可能比绑定`mysqld`进程更可取。例如，你可以在其他关键进程*不运行*时将
    90% 的虚拟 CPU 时间分配给特定应用程序，而在其他关键进程*运行*时将该值缩减到 40%。
- en: In some cases, the optimal [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    setting can be smaller than the number of virtual CPUs.
  id: totrans-2308
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些情况下，最佳的[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)设置可能小于虚拟
    CPU 的数量。
- en: An [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    value that is too high can cause performance regression due to increased contention
    on system internals and resources.
  id: totrans-2309
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)值过高，可能会导致性能下降，因为系统内部和资源的争用增加。
- en: Monitor and analyze your system regularly. Changes to workload, number of users,
    or computing environment may require that you adjust the [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    setting.
  id: totrans-2310
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期监视和分析您的系统。工作负载、用户数量或计算环境的变化可能需要您调整[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)设置。
- en: A value of 0 disables the `queries inside InnoDB` and `queries in queue` counters
    in the `ROW OPERATIONS` section of `SHOW ENGINE INNODB STATUS` output.
  id: totrans-2311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 值为0会禁用`SHOW ENGINE INNODB STATUS`输出中`ROW OPERATIONS`部分的`InnoDB`内部查询和队列中查询计数器。
- en: For related information, see [Section 17.8.4, “Configuring Thread Concurrency
    for InnoDB”](innodb-performance-thread_concurrency.html "17.8.4 Configuring Thread
    Concurrency for InnoDB").`
  id: totrans-2312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第17.8.4节，“配置InnoDB的线程并发性”](innodb-performance-thread_concurrency.html
    "17.8.4 Configuring Thread Concurrency for InnoDB")。
- en: '`[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)`'
  id: totrans-2313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)`'
- en: '`| Command-Line Format | `--innodb-thread-sleep-delay=#` |'
  id: totrans-2314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-thread-sleep-delay=#` |'
- en: '| System Variable | `[innodb_thread_sleep_delay](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)`
    |'
  id: totrans-2315
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_thread_sleep_delay](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)`
    |'
- en: '| Scope | Global |'
  id: totrans-2316
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2317
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2318
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Integer |'
  id: totrans-2319
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `10000` |'
  id: totrans-2320
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10000` |'
- en: '| Minimum Value | `0` |'
  id: totrans-2321
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1000000` |'
  id: totrans-2322
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1000000` |'
- en: '| Unit | microseconds |'
  id: totrans-2323
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 微秒 |'
- en: How long `InnoDB` threads sleep before joining the `InnoDB` queue, in microseconds.
    The default value is 10000\. A value of 0 disables sleep. You can set [`innodb_adaptive_max_sleep_delay`](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)
    to the highest value you would allow for [`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay),
    and `InnoDB` automatically adjusts [`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)
    up or down depending on current thread-scheduling activity. This dynamic adjustment
    helps the thread scheduling mechanism to work smoothly during times when the system
    is lightly loaded or when it is operating near full capacity.
  id: totrans-2324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`线程在加入`InnoDB`队列之前睡眠的时间，单位为微秒。默认值为10000。值为0会禁用睡眠。您可以将[`innodb_adaptive_max_sleep_delay`](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)设置为允许的最高值，以供[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)使用，`InnoDB`会根据当前线程调度活动自动调整[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)的值，以适应系统轻载或接近满负荷运行时的情况，这种动态调整有助于线程调度机制在系统轻载或接近满负荷运行时平稳工作。'
- en: For more information, see [Section 17.8.4, “Configuring Thread Concurrency for
    InnoDB”](innodb-performance-thread_concurrency.html "17.8.4 Configuring Thread
    Concurrency for InnoDB").`
  id: totrans-2325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第17.8.4节，“配置InnoDB的线程并发性”](innodb-performance-thread_concurrency.html
    "17.8.4 Configuring Thread Concurrency for InnoDB")。
- en: '`[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)`'
  id: totrans-2326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)`'
- en: '`| Command-Line Format | `--innodb-tmpdir=dir_name` |'
  id: totrans-2327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-tmpdir=dir_name` |'
- en: '| System Variable | `[innodb_tmpdir](innodb-parameters.html#sysvar_innodb_tmpdir)`
    |'
  id: totrans-2328
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_tmpdir](innodb-parameters.html#sysvar_innodb_tmpdir)` |'
- en: '| Scope | Global, Session |'
  id: totrans-2329
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-2330
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2331
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Directory name |'
  id: totrans-2332
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: '| Default Value | `NULL` |'
  id: totrans-2333
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NULL` |'
- en: Used to define an alternate directory for temporary sort files created during
    online [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") operations
    that rebuild the table.
  id: totrans-2334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于定义在线[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作重建表时创建的临时排序文件的替代目录。
- en: Online [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") operations
    that rebuild the table also create an *intermediate* table file in the same directory
    as the original table. The [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)
    option is not applicable to intermediate table files.
  id: totrans-2335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在线[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作重建表时，还会在与原始表相同目录中创建一个*中间*表文件。[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)选项不适用于中间表文件。
- en: A valid value is any directory path other than the MySQL data directory path.
    If the value is NULL (the default), temporary files are created MySQL temporary
    directory (`$TMPDIR` on Unix, `%TEMP%` on Windows, or the directory specified
    by the [`--tmpdir`](server-system-variables.html#sysvar_tmpdir) configuration
    option). If a directory is specified, existence of the directory and permissions
    are only checked when [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)
    is configured using a [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable
    Assignment") statement. If a symlink is provided in a directory string, the symlink
    is resolved and stored as an absolute path. The path should not exceed 512 bytes.
    An online [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") operation
    reports an error if [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)
    is set to an invalid directory. [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)
    overrides the MySQL [`tmpdir`](server-system-variables.html#sysvar_tmpdir) setting
    but only for online [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    operations.
  id: totrans-2336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有效值是除MySQL数据目录路径之外的任何目录路径。如果值为NULL（默认值），则临时文件将在MySQL临时目录（Unix上的`$TMPDIR`，Windows上的`%TEMP%`，或由[`--tmpdir`](server-system-variables.html#sysvar_tmpdir)配置选项指定的目录）中创建。如果指定了目录，则仅在使用[`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment")语句配置[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)时才检查目录的存在和权限。如果在目录字符串中提供了符号链接，则符号链接将被解析并存储为绝对路径。路径不应超过512字节。如果将[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)设置为无效目录，则在线[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作将报告错误。[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)覆盖了MySQL的[`tmpdir`](server-system-variables.html#sysvar_tmpdir)设置，但仅适用于在线[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作。
- en: The `FILE` privilege is required to configure [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir).
  id: totrans-2337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)需要`FILE`权限。
- en: The [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir) option was
    introduced to help avoid overflowing a temporary file directory located on a `tmpfs`
    file system. Such overflows could occur as a result of large temporary sort files
    created during online [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    operations that rebuild the table.
  id: totrans-2338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir) 选项的引入是为了帮助避免在`tmpfs`文件系统上的临时文件目录溢出。这种溢出可能是由在线[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作中创建的大型临时排序文件导致的，这些操作会重建表。'
- en: In replication environments, only consider replicating the [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)
    setting if all servers have the same operating system environment. Otherwise,
    replicating the [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)
    setting could result in a replication failure when running online [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") operations that rebuild the table. If server operating
    environments differ, it is recommended that you configure [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)
    on each server individually.
  id: totrans-2339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在复制环境中，只有当所有服务器具有相同的操作系统环境时，才考虑复制[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)设置。否则，在运行重建表的在线[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作时，复制[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)设置可能导致复制失败。如果服务器操作环境不同，建议在每台服务器上单独配置[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)。
- en: For more information, see [Section 17.12.3, “Online DDL Space Requirements”](innodb-online-ddl-space-requirements.html
    "17.12.3 Online DDL Space Requirements"). For information about online [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") operations, see [Section 17.12,
    “InnoDB and Online DDL”](innodb-online-ddl.html "17.12 InnoDB and Online DDL").`
  id: totrans-2340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第17.12.3节，“在线DDL空间要求”](innodb-online-ddl-space-requirements.html "17.12.3 Online
    DDL Space Requirements")。有关在线[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE
    Statement")操作的信息，请参见[第17.12节，“InnoDB和在线DDL”](innodb-online-ddl.html "17.12 InnoDB
    and Online DDL")。
- en: '`[`innodb_trx_purge_view_update_only_debug`](innodb-parameters.html#sysvar_innodb_trx_purge_view_update_only_debug)`'
  id: totrans-2341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_trx_purge_view_update_only_debug`](innodb-parameters.html#sysvar_innodb_trx_purge_view_update_only_debug)`'
- en: '`| Command-Line Format | `--innodb-trx-purge-view-update-only-debug[={OFF&#124;ON}]`
    |'
  id: totrans-2342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-trx-purge-view-update-only-debug[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_trx_purge_view_update_only_debug](innodb-parameters.html#sysvar_innodb_trx_purge_view_update_only_debug)`
    |'
  id: totrans-2343
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_trx_purge_view_update_only_debug](innodb-parameters.html#sysvar_innodb_trx_purge_view_update_only_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-2344
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2345
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2346
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2347
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-2348
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Pauses purging of delete-marked records while allowing the purge view to be
    updated. This option artificially creates a situation in which the purge view
    is updated but purges have not yet been performed. This option is only available
    if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.`
  id: totrans-2349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 暂停删除标记记录的清除，同时允许更新清除视图。此选项人为地创建了一种情况，即清除视图已更新但尚未执行清除。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake**选项编译时才可用。
- en: '`[`innodb_trx_rseg_n_slots_debug`](innodb-parameters.html#sysvar_innodb_trx_rseg_n_slots_debug)`'
  id: totrans-2350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_trx_rseg_n_slots_debug`](innodb-parameters.html#sysvar_innodb_trx_rseg_n_slots_debug)`'
- en: '`| Command-Line Format | `--innodb-trx-rseg-n-slots-debug=#` |'
  id: totrans-2351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '| 命令行格式 | `--innodb-trx-rseg-n-slots-debug=#` |'
- en: '| System Variable | `[innodb_trx_rseg_n_slots_debug](innodb-parameters.html#sysvar_innodb_trx_rseg_n_slots_debug)`
    |'
  id: totrans-2352
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_trx_rseg_n_slots_debug](innodb-parameters.html#sysvar_innodb_trx_rseg_n_slots_debug)`
    |'
- en: '| Scope | Global |'
  id: totrans-2353
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2354
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2355
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2356
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-2357
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-2358
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1024` |'
  id: totrans-2359
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1024` |'
- en: Sets a debug flag that limits `TRX_RSEG_N_SLOTS` to a given value for the `trx_rsegf_undo_find_free`
    function that looks for free slots for undo log segments. This option is only
    available if debugging support is compiled in using the [`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake** option.`
  id: totrans-2360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置一个调试标志，将`TRX_RSEG_N_SLOTS`限制为`trx_rsegf_undo_find_free`函数中查找撤销日志段的空闲槽位的给定值。此选项仅在使用[`WITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)
    **CMake**选项编译时才可用。
- en: '`[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)`'
  id: totrans-2361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)`'
- en: '`| Command-Line Format | `--innodb-undo-directory=dir_name` |'
  id: totrans-2362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '| 命令行格式 | `--innodb-undo-directory=dir_name` |'
- en: '| System Variable | `[innodb_undo_directory](innodb-parameters.html#sysvar_innodb_undo_directory)`
    |'
  id: totrans-2363
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_undo_directory](innodb-parameters.html#sysvar_innodb_undo_directory)`
    |'
- en: '| Scope | Global |'
  id: totrans-2364
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2365
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2366
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Directory name |'
  id: totrans-2367
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: The path where `InnoDB` creates undo tablespaces. Typically used to place undo
    tablespaces on a different storage device.
  id: totrans-2368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`创建撤销表空间的路径。通常用于将撤销表空间放置在不同的存储设备上。'
- en: There is no default value (it is NULL). If the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable is undefined, undo tablespaces are created in the data directory.
  id: totrans-2369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 没有默认值（为NULL）。如果未定义[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量，则撤销表空间将在数据目录中创建。
- en: The default undo tablespaces (`innodb_undo_001` and `innodb_undo_002`) created
    when the MySQL instance is initialized always reside in the directory defined
    by the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable.
  id: totrans-2370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL实例初始化时创建的默认撤销表空间（`innodb_undo_001`和`innodb_undo_002`）始终驻留在由[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量定义的目录中。
- en: Undo tablespaces created using [`CREATE UNDO TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement") syntax are created in the directory defined
    by the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable if a different path is not specified.
  id: totrans-2371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用[`CREATE UNDO TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE
    Statement")语法创建的撤销表空间将在由[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量定义的目录中创建，如果没有指定不同的路径。
- en: For more information, see [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html
    "17.6.3.4 Undo Tablespaces").`
  id: totrans-2372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第17.6.3.4节，“撤销表空间”](innodb-undo-tablespaces.html "17.6.3.4 Undo Tablespaces")。
- en: '`[`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)`'
  id: totrans-2373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)`'
- en: '`| Command-Line Format | `--innodb-undo-log-encrypt[={OFF&#124;ON}]` |'
  id: totrans-2374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '| 命令行格式 | `--innodb-undo-log-encrypt[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_undo_log_encrypt](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)`
    |'
  id: totrans-2375
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_undo_log_encrypt](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)`
    |'
- en: '| Scope | Global |'
  id: totrans-2376
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2377
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2378
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2379
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-2380
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Controls encryption of undo log data for tables encrypted using the `InnoDB`
    [data-at-rest encryption feature](innodb-data-encryption.html "17.13 InnoDB Data-at-Rest
    Encryption"). Only applies to undo logs that reside in separate [undo tablespaces](glossary.html#glos_undo_tablespace
    "undo tablespace"). See [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html
    "17.6.3.4 Undo Tablespaces"). Encryption is not supported for undo log data that
    resides in the system tablespace. For more information, see [Undo Log Encryption](innodb-data-encryption.html#innodb-data-encryption-undo-log
    "Undo Log Encryption").`
  id: totrans-2381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制使用 `InnoDB` [数据静态加密功能](innodb-data-encryption.html "17.13 InnoDB数据静态加密")加密的表的撤消日志数据的加密。仅适用于驻留在单独的[撤消表空间](glossary.html#glos_undo_tablespace
    "undo tablespace")中的撤消日志。请参阅[第17.6.3.4节，“撤消表空间”](innodb-undo-tablespaces.html
    "17.6.3.4 撤消表空间")。不支持对驻留在系统表空间中的撤消日志数据进行加密。有关更多信息，请参阅[撤消日志加密](innodb-data-encryption.html#innodb-data-encryption-undo-log
    "撤消日志加密")。
- en: '`[`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)`'
  id: totrans-2382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)`'
- en: '`| Command-Line Format | `--innodb-undo-log-truncate[={OFF&#124;ON}]` |'
  id: totrans-2383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-undo-log-truncate[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_undo_log_truncate](innodb-parameters.html#sysvar_innodb_undo_log_truncate)`
    |'
  id: totrans-2384
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_undo_log_truncate](innodb-parameters.html#sysvar_innodb_undo_log_truncate)`
    |'
- en: '| Scope | Global |'
  id: totrans-2385
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2386
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2387
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2388
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-2389
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: When enabled, undo tablespaces that exceed the threshold value defined by [`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    are marked for truncation. Only undo tablespaces can be truncated. Truncating
    undo logs that reside in the system tablespace is not supported. For truncation
    to occur, there must be at least two undo tablespaces.
  id: totrans-2390
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用后，超过由 [`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    定义的阈值的撤消表空间将被标记为截断。只能截断撤消表空间。不支持截断驻留在系统表空间中的撤消日志。要进行截断，必须至少有两个撤消表空间。
- en: The [`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    variable can be used to expedite truncation of undo tablespaces.
  id: totrans-2391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    变量可用于加快截断撤消表空间的速度。'
- en: For more information, see [Truncating Undo Tablespaces](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "Truncating Undo Tablespaces").`
  id: totrans-2392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[截断撤消表空间](innodb-undo-tablespaces.html#truncate-undo-tablespace "截断撤消表空间")。
- en: '`[`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)`'
  id: totrans-2393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)`'
- en: '`| Command-Line Format | `--innodb-undo-tablespaces=#` |'
  id: totrans-2394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-undo-tablespaces=#` |'
- en: '| Deprecated | Yes |'
  id: totrans-2395
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 是 |'
- en: '| System Variable | `[innodb_undo_tablespaces](innodb-parameters.html#sysvar_innodb_undo_tablespaces)`
    |'
  id: totrans-2396
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_undo_tablespaces](innodb-parameters.html#sysvar_innodb_undo_tablespaces)`
    |'
- en: '| Scope | Global |'
  id: totrans-2397
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2398
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2399
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2400
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `2` |'
  id: totrans-2401
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `2` |'
- en: '| Minimum Value | `2` |'
  id: totrans-2402
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `2` |'
- en: '| Maximum Value | `127` |'
  id: totrans-2403
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `127` |'
- en: Defines the number of [undo tablespaces](glossary.html#glos_undo_tablespace
    "undo tablespace") used by `InnoDB`. The default and minimum value is 2.
  id: totrans-2404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义 `InnoDB` 使用的[撤消表空间](glossary.html#glos_undo_tablespace "undo tablespace")的数量。默认值和最小值均为
    2。
- en: Note
  id: totrans-2405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The [`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)
    variable is deprecated and is no longer configurable as of MySQL 8.0.14\. Expect
    it to be removed in a future release.
  id: totrans-2406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)
    变量已被弃用，并且自 MySQL 8.0.14 版本起不再可配置。预计在未来的版本中将被移除。'
- en: For more information, see [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html
    "17.6.3.4 Undo Tablespaces").`
  id: totrans-2407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第 17.6.3.4 节，“撤销表空间”](innodb-undo-tablespaces.html "17.6.3.4 撤销表空间")。`
- en: '`[`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)`'
  id: totrans-2408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)`'
- en: '`| Command-Line Format | `--innodb-use-fdatasync[={OFF&#124;ON}]` |'
  id: totrans-2409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '| 命令行格式 | `--innodb-use-fdatasync[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-2410
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[innodb_use_fdatasync](innodb-parameters.html#sysvar_innodb_use_fdatasync)`
    |'
  id: totrans-2411
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_use_fdatasync](innodb-parameters.html#sysvar_innodb_use_fdatasync)`
    |'
- en: '| Scope | Global |'
  id: totrans-2412
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-2413
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2414
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2415
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-2416
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: On platforms that support `fdatasync()` system calls, enabling the [`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)
    variable permits using `fdatasync()` instead of `fsync()` system calls for operating
    system flushes. An `fdatasync()` call does not flush changes to file metadata
    unless required for subsequent data retrieval, providing a potential performance
    benefit.
  id: totrans-2417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在支持`fdatasync()`系统调用的平台上，启用[`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)变量允许使用`fdatasync()`而不是`fsync()`系统调用进行操作系统刷新。`fdatasync()`调用不会刷新文件元数据，除非需要进行后续数据检索，从而提供潜在的性能优势。
- en: A subset of [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    settings such as `fsync`, `O_DSYNC`, and `O_DIRECT` use `fsync()` system calls.
    The [`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)
    variable is applicable when using those settings.`
  id: totrans-2418
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)设置的子集，如`fsync`、`O_DSYNC`和`O_DIRECT`使用`fsync()`系统调用。在使用这些设置时，[`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)变量是适用的。`
- en: '`[`innodb_use_native_aio`](innodb-parameters.html#sysvar_innodb_use_native_aio)`'
  id: totrans-2419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_use_native_aio`](innodb-parameters.html#sysvar_innodb_use_native_aio)`'
- en: '`| Command-Line Format | `--innodb-use-native-aio[={OFF&#124;ON}]` |'
  id: totrans-2420
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '| 命令行格式 | `--innodb-use-native-aio[={OFF&#124;ON}]` |'
- en: '| System Variable | `[innodb_use_native_aio](innodb-parameters.html#sysvar_innodb_use_native_aio)`
    |'
  id: totrans-2421
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_use_native_aio](innodb-parameters.html#sysvar_innodb_use_native_aio)`
    |'
- en: '| Scope | Global |'
  id: totrans-2422
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2423
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2424
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2425
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-2426
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Specifies whether to use the Linux asynchronous I/O subsystem. This variable
    applies to Linux systems only, and cannot be changed while the server is running.
    Normally, you do not need to configure this option, because it is enabled by default.
  id: totrans-2427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定是否使用 Linux 异步 I/O 子系统。此变量仅适用于 Linux 系统，并且不能在服务器运行时更改。通常情况下，您不需要配置此选项，因为它默认启用。
- en: The [asynchronous I/O](glossary.html#glos_asynchronous_io "asynchronous I/O")
    capability that `InnoDB` has on Windows systems is available on Linux systems.
    (Other Unix-like systems continue to use synchronous I/O calls.) This feature
    improves the scalability of heavily I/O-bound systems, which typically show many
    pending reads/writes in `SHOW ENGINE INNODB STATUS\G` output.
  id: totrans-2428
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` 在 Windows 系统上具有的[异步 I/O](glossary.html#glos_asynchronous_io "异步 I/O")功能也适用于
    Linux 系统。（其他类 Unix 系统继续使用同步 I/O 调用。）此功能提高了通常在`SHOW ENGINE INNODB STATUS\G`输出中显示许多待处理读取/写入的
    I/O 密集型系统的可伸缩性。'
- en: 'Running with a large number of `InnoDB` I/O threads, and especially running
    multiple such instances on the same server machine, can exceed capacity limits
    on Linux systems. In this case, you may receive the following error:'
  id: totrans-2429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用大量`InnoDB` I/O 线程运行，尤其是在同一台服务器上运行多个这样的实例，可能会超出 Linux 系统的容量限制。在这种情况下，您可能会收到以下错误：
- en: '[PRE21]'
  id: totrans-2430
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: You can typically address this error by writing a higher limit to `/proc/sys/fs/aio-max-nr`.
  id: totrans-2431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常情况下，您可以通过将更高的限制写入`/proc/sys/fs/aio-max-nr`来解决此错误。
- en: However, if a problem with the asynchronous I/O subsystem in the OS prevents
    `InnoDB` from starting, you can start the server with [`innodb_use_native_aio=0`](innodb-parameters.html#sysvar_innodb_use_native_aio).
    This option may also be disabled automatically during startup if `InnoDB` detects
    a potential problem such as a combination of `tmpdir` location, `tmpfs` file system,
    and Linux kernel that does not support AIO on `tmpfs`.
  id: totrans-2432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，如果操作系统中异步 I/O 子系统出现问题导致 `InnoDB` 无法启动，您可以使用 [`innodb_use_native_aio=0`](innodb-parameters.html#sysvar_innodb_use_native_aio)
    启动服务器。在启动过程中，如果 `InnoDB` 检测到潜在问题，例如 `tmpdir` 位置、`tmpfs` 文件系统和不支持 `tmpfs` 上的 AIO
    的 Linux 内核的组合，此选项也可能会被自动禁用。
- en: For more information, see [Section 17.8.6, “Using Asynchronous I/O on Linux”](innodb-linux-native-aio.html
    "17.8.6 Using Asynchronous I/O on Linux").`
  id: totrans-2433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 [第 17.8.6 节，“在 Linux 上使用异步 I/O”](innodb-linux-native-aio.html "17.8.6
    在 Linux 上使用异步 I/O")。
- en: '``innodb_validate_tablespace_paths``'
  id: totrans-2434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '``innodb_validate_tablespace_paths``'
- en: '`| Command-Line Format | `--innodb-validate-tablespace-paths[={OFF&#124;ON}]`
    |'
  id: totrans-2435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-validate-tablespace-paths[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.21 |'
  id: totrans-2436
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.21 |'
- en: '| System Variable | `[innodb_validate_tablespace_paths](innodb-parameters.html#sysvar_innodb_validate_tablespace_paths)`
    |'
  id: totrans-2437
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_validate_tablespace_paths](innodb-parameters.html#sysvar_innodb_validate_tablespace_paths)`
    |'
- en: '| Scope | Global |'
  id: totrans-2438
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2439
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2440
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-2441
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `ON` |'
  id: totrans-2442
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Controls tablespace file path validation. At startup, `InnoDB` validates the
    paths of known tablespace files against tablespace file paths stored in the data
    dictionary in case tablespace files have been moved to a different location. The
    [`innodb_validate_tablespace_paths`](innodb-parameters.html#sysvar_innodb_validate_tablespace_paths)
    variable permits disabling tablespace path validation. This feature is intended
    for environments where tablespaces files are not moved. Disabling path validation
    improves startup time on systems with a large number of tablespace files.
  id: totrans-2443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制表空间文件路径验证。在启动时，`InnoDB` 验证已知表空间文件的路径与数据字典中存储的表空间文件路径是否匹配，以防表空间文件已移至其他位置。[`innodb_validate_tablespace_paths`](innodb-parameters.html#sysvar_innodb_validate_tablespace_paths)
    变量允许禁用表空间路径验证。此功能适用于表空间文件未移动的环境。禁用路径验证可提高在具有大量表空间文件的系统上的启动时间。
- en: Warning
  id: totrans-2444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: Starting the server with tablespace path validation disabled after moving tablespace
    files can lead to undefined behavior.
  id: totrans-2445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在移动表空间文件后以禁用表空间路径验证启动服务器可能导致未定义行为。
- en: For more information, see [Section 17.6.3.7, “Disabling Tablespace Path Validation”](innodb-disabling-tablespace-path-validation.html
    "17.6.3.7 Disabling Tablespace Path Validation").`
  id: totrans-2446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 [第 17.6.3.7 节，“禁用表空间路径验证”](innodb-disabling-tablespace-path-validation.html
    "17.6.3.7 禁用表空间路径验证")。
- en: '`[`innodb_version`](innodb-parameters.html#sysvar_innodb_version)`'
  id: totrans-2447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_version`](innodb-parameters.html#sysvar_innodb_version)`'
- en: '`The `InnoDB` version number. In MySQL 8.0, separate version numbering for
    `InnoDB` does not apply and this value is the same the [`version`](server-system-variables.html#sysvar_version)
    number of the server.`'
  id: totrans-2448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` 版本号。在 MySQL 8.0 中，`InnoDB` 的单独版本编号不适用，此值与服务器的 [`version`](server-system-variables.html#sysvar_version)
    编号相同。`'
- en: '`[`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads)`'
  id: totrans-2449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads)`'
- en: '`| Command-Line Format | `--innodb-write-io-threads=#` |'
  id: totrans-2450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`| 命令行格式 | `--innodb-write-io-threads=#` |'
- en: '| System Variable | `[innodb_write_io_threads](innodb-parameters.html#sysvar_innodb_write_io_threads)`
    |'
  id: totrans-2451
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[innodb_write_io_threads](innodb-parameters.html#sysvar_innodb_write_io_threads)`
    |'
- en: '| Scope | Global |'
  id: totrans-2452
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-2453
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-2454
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-2455
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `4` |'
  id: totrans-2456
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `4` |'
- en: '| Minimum Value | `1` |'
  id: totrans-2457
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `64` |'
  id: totrans-2458
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `64` |'
- en: The number of I/O threads for write operations in `InnoDB`. The default value
    is 4\. Its counterpart for read threads is [`innodb_read_io_threads`](innodb-parameters.html#sysvar_innodb_read_io_threads).
    For more information, see [Section 17.8.5, “Configuring the Number of Background
    InnoDB I/O Threads”](innodb-performance-multiple_io_threads.html "17.8.5 Configuring
    the Number of Background InnoDB I/O Threads"). For general I/O tuning advice,
    see [Section 10.5.8, “Optimizing InnoDB Disk I/O”](optimizing-innodb-diskio.html
    "10.5.8 Optimizing InnoDB Disk I/O").
  id: totrans-2459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`写操作的I/O线程数。默认值为4。读线程的对应值是[`innodb_read_io_threads`](innodb-parameters.html#sysvar_innodb_read_io_threads)。更多信息，请参见[第17.8.5节，“配置后台InnoDB
    I/O线程数”](innodb-performance-multiple_io_threads.html "17.8.5 配置后台InnoDB I/O线程数")。有关一般I/O调优建议，请参见[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html
    "10.5.8 优化InnoDB磁盘I/O")。'
- en: Note
  id: totrans-2460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: On Linux systems, running multiple MySQL servers (typically more than 12) with
    default settings for [`innodb_read_io_threads`](innodb-parameters.html#sysvar_innodb_read_io_threads),
    [`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads),
    and the Linux `aio-max-nr` setting can exceed system limits. Ideally, increase
    the `aio-max-nr` setting; as a workaround, you might reduce the settings for one
    or both of the MySQL variables.
  id: totrans-2461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Linux系统上，使用默认设置运行多个MySQL服务器（通常超过12个），[`innodb_read_io_threads`](innodb-parameters.html#sysvar_innodb_read_io_threads)，[`innodb_write_io_threads`](innodb-parameters.html#sysvar_innodb_write_io_threads)，以及Linux
    `aio-max-nr`设置可能超出系统限制。理想情况下，增加`aio-max-nr`设置；作为解决方法，您可以减少一个或两个MySQL变量的设置。
- en: Also take into consideration the value of [`sync_binlog`](replication-options-binary-log.html#sysvar_sync_binlog),
    which controls synchronization of the binary log to disk.
  id: totrans-2462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 考虑到[`sync_binlog`](replication-options-binary-log.html#sysvar_sync_binlog)的价值，它控制着二进制日志与磁盘的同步。
- en: For general I/O tuning advice, see [Section 10.5.8, “Optimizing InnoDB Disk
    I/O”](optimizing-innodb-diskio.html "10.5.8 Optimizing InnoDB Disk I/O").`
  id: totrans-2463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关一般I/O调优建议，请参见[第10.5.8节，“优化InnoDB磁盘I/O”](optimizing-innodb-diskio.html "10.5.8 优化InnoDB磁盘I/O")。
