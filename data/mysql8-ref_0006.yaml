- en: 1.2.2 The Main Features of MySQL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.2.2 MySQL 的主要特性
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/features.html](https://dev.mysql.com/doc/refman/8.0/en/features.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/features.html](https://dev.mysql.com/doc/refman/8.0/en/features.html)
- en: 'This section describes some of the important characteristics of the MySQL Database
    Software. In most respects, the roadmap applies to all versions of MySQL. For
    information about features as they are introduced into MySQL on a series-specific
    basis, see the “In a Nutshell” section of the appropriate Manual:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了 MySQL 数据库软件的一些重要特性。在大多数方面，路线图适用于所有 MySQL 版本。有关在特定系列基础上引入 MySQL 的功能的信息，请参见适当手册的“简介”部分：
- en: 'MySQL 8.0: [Section 1.3, “What Is New in MySQL 8.0”](mysql-nutshell.html "1.3 What
    Is New in MySQL 8.0")'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8.0：[第 1.3 节，“MySQL 8.0 中的新功能”](mysql-nutshell.html "1.3 MySQL 8.0 中的新功能")
- en: 'MySQL 5.7: [What Is New in MySQL 5.7](/doc/refman/5.7/en/mysql-nutshell.html)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 5.7：[MySQL 5.7 中的新功能](/doc/refman/5.7/en/mysql-nutshell.html)
- en: Internals and Portability
  id: totrans-5
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 内部结构和可移植性
- en: Written in C and C++.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用 C 和 C++ 编写。
- en: Tested with a broad range of different compilers.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用各种不同编译器进行测试。
- en: Works on many different platforms. See [https://www.mysql.com/support/supportedplatforms/database.html](https://www.mysql.com/support/supportedplatforms/database.html).
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可在许多不同平台上运行。参见[https://www.mysql.com/support/supportedplatforms/database.html](https://www.mysql.com/support/supportedplatforms/database.html)。
- en: For portability, configured using **CMake**.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了可移植性，使用**CMake**进行配置。
- en: Tested with Purify (a commercial memory leakage detector) as well as with Valgrind,
    a GPL tool ([https://valgrind.org/](https://valgrind.org/)).
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Purify（一种商业内存泄漏检测器）以及 Valgrind 进行测试，Valgrind 是一个 GPL 工具（[https://valgrind.org/](https://valgrind.org/)）。
- en: Uses multi-layered server design with independent modules.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用具有独立模块的多层服务器设计。
- en: Designed to be fully multithreaded using kernel threads, to easily use multiple
    CPUs if they are available.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计为完全多线程，使用内核线程，以便在有多个 CPU 可用时轻松使用。
- en: Provides transactional and nontransactional storage engines.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供事务性和非事务性存储引擎。
- en: Uses very fast B-tree disk tables (`MyISAM`) with index compression.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用非常快速的 B 树磁盘表（`MyISAM`），具有索引压缩。
- en: Designed to make it relatively easy to add other storage engines. This is useful
    if you want to provide an SQL interface for an in-house database.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计为相对容易添加其他存储引擎。如果您想为内部数据库提供 SQL 接口，这将非常有用。
- en: Uses a very fast thread-based memory allocation system.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用非常快速的基于线程的内存分配系统。
- en: Executes very fast joins using an optimized nested-loop join.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用优化的嵌套循环连接执行非常快速的连接。
- en: Implements in-memory hash tables, which are used as temporary tables.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现内存中的哈希表，用作临时表。
- en: Implements SQL functions using a highly optimized class library that should
    be as fast as possible. Usually there is no memory allocation at all after query
    initialization.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用高度优化的类库实现 SQL 函数，应尽可能快速。通常在查询初始化后根本不需要任何内存分配。
- en: Provides the server as a separate program for use in a client/server networked
    environment.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将服务器作为单独的程序提供，用于客户端/服务器网络环境。
- en: Data Types
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据类型
- en: 'Many data types: signed/unsigned integers 1, 2, 3, 4, and 8 bytes long, [`FLOAT`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE"), [`DOUBLE`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE"), [`CHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types"), [`VARCHAR`](char.html "13.3.2 The CHAR and
    VARCHAR Types"), [`BINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY
    Types"), [`VARBINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY
    Types"), [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types"), [`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types"), [`DATE`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types"), [`TIME`](time.html "13.2.3 The TIME Type"), [`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), [`TIMESTAMP`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), [`YEAR`](year.html "13.2.4 The
    YEAR Type"), [`SET`](set.html "13.3.6 The SET Type"), [`ENUM`](enum.html "13.3.5 The
    ENUM Type"), and OpenGIS spatial types. See [Chapter 13, *Data Types*](data-types.html
    "Chapter 13 Data Types").'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多数据类型：有符号/无符号整数，长度分别为 1、2、3、4 和 8 字节，[`FLOAT`](floating-point-types.html "13.1.4 Floating-Point
    Types (Approximate Value) - FLOAT, DOUBLE")，[`DOUBLE`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE")，[`CHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types")，[`VARCHAR`](char.html "13.3.2 The CHAR and
    VARCHAR Types")，[`BINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY
    Types")，[`VARBINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY Types")，[`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")，[`BLOB`](blob.html "13.3.4 The BLOB and TEXT
    Types")，[`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")，[`TIME`](time.html
    "13.2.3 The TIME Type")，[`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types")，[`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types")，[`YEAR`](year.html "13.2.4 The YEAR Type")，[`SET`](set.html
    "13.3.6 The SET Type")，[`ENUM`](enum.html "13.3.5 The ENUM Type") 和 OpenGIS 空间类型。参见[第
    13 章，*数据类型*](data-types.html "第 13 章 数据类型")。
- en: Fixed-length and variable-length string types.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 固定长度和可变长度的字符串类型。
- en: Statements and Functions
  id: totrans-24
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 语句和函数
- en: 'Full operator and function support in the [`SELECT`](select.html "15.2.13 SELECT
    Statement") list and `WHERE` clause of queries. For example:'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在查询的[`SELECT`](select.html "15.2.13 SELECT Statement")列表和`WHERE`子句中完整支持运算符和函数。例如：
- en: '[PRE0]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Full support for SQL `GROUP BY` and `ORDER BY` clauses. Support for group functions
    ([`COUNT()`](aggregate-functions.html#function_count), [`AVG()`](aggregate-functions.html#function_avg),
    [`STD()`](aggregate-functions.html#function_std), [`SUM()`](aggregate-functions.html#function_sum),
    [`MAX()`](aggregate-functions.html#function_max), [`MIN()`](aggregate-functions.html#function_min),
    and [`GROUP_CONCAT()`](aggregate-functions.html#function_group-concat)).
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全支持 SQL 的`GROUP BY`和`ORDER BY`子句。支持分组函数（[`COUNT()`](aggregate-functions.html#function_count)，[`AVG()`](aggregate-functions.html#function_avg)，[`STD()`](aggregate-functions.html#function_std)，[`SUM()`](aggregate-functions.html#function_sum)，[`MAX()`](aggregate-functions.html#function_max)，[`MIN()`](aggregate-functions.html#function_min)
    和[`GROUP_CONCAT()`](aggregate-functions.html#function_group-concat))。
- en: Support for `LEFT OUTER JOIN` and `RIGHT OUTER JOIN` with both standard SQL
    and ODBC syntax.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持使用标准 SQL 和 ODBC 语法进行`LEFT OUTER JOIN`和`RIGHT OUTER JOIN`。
- en: Support for aliases on tables and columns as required by standard SQL.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持标准 SQL 所需的表和列的别名。
- en: Support for [`DELETE`](delete.html "15.2.2 DELETE Statement"), [`INSERT`](insert.html
    "15.2.7 INSERT Statement"), [`REPLACE`](replace.html "15.2.12 REPLACE Statement"),
    and [`UPDATE`](update.html "15.2.17 UPDATE Statement") to return the number of
    rows that were changed (affected), or to return the number of rows matched instead
    by setting a flag when connecting to the server.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持[`DELETE`](delete.html "15.2.2 DELETE Statement")，[`INSERT`](insert.html "15.2.7 INSERT
    Statement")，[`REPLACE`](replace.html "15.2.12 REPLACE Statement") 和[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")语句，以返回更改（受影响）的行数，或者通过在连接到服务器时设置标志来返回匹配的行数。
- en: Support for MySQL-specific [`SHOW`](show.html "15.7.7 SHOW Statements") statements
    that retrieve information about databases, storage engines, tables, and indexes.
    Support for the `INFORMATION_SCHEMA` database, implemented according to standard
    SQL.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持特定于 MySQL 的[`SHOW`](show.html "15.7.7 SHOW Statements")语句，用于检索有关数据库、存储引擎、表和索引的信息。支持根据标准
    SQL 实现的`INFORMATION_SCHEMA`数据库。
- en: An [`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement") statement to show how
    the optimizer resolves a query.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")语句，显示优化器如何解析查询。
- en: Independence of function names from table or column names. For example, `ABS`
    is a valid column name. The only restriction is that for a function call, no spaces
    are permitted between the function name and the “`(`” that follows it. See [Section 11.3,
    “Keywords and Reserved Words”](keywords.html "11.3 Keywords and Reserved Words").
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数名称与表或列名称无关。例如，`ABS`是一个有效的列名。唯一的限制是对于函数调用，函数名称和随后的“`(`”之间不允许有空格。参见[第11.3节，“关键字和保留字”](keywords.html
    "11.3 关键字和保留字")。
- en: You can refer to tables from different databases in the same statement.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以在同一语句中引用来自不同数据库的表。
- en: Security
  id: totrans-35
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 安全性
- en: A privilege and password system that is very flexible and secure, and that enables
    host-based verification.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常灵活和安全的权限和密码系统，支持基于主机的验证。
- en: Password security by encryption of all password traffic when you connect to
    a server.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过加密所有密码流量来实现密码安全性，当您连接到服务器时。
- en: Scalability and Limits
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 可扩展性和限制
- en: Support for large databases. We use MySQL Server with databases that contain
    50 million records. We also know of users who use MySQL Server with 200,000 tables
    and about 5,000,000,000 rows.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持大型数据库。我们使用包含5000万条记录的MySQL服务器。我们还知道有用户使用具有20万个表和约50亿行的MySQL服务器。
- en: Support for up to 64 indexes per table. Each index may consist of 1 to 16 columns
    or parts of columns. The maximum index width for [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") tables is either 767 bytes or 3072 bytes.
    See [Section 17.22, “InnoDB Limits”](innodb-limits.html "17.22 InnoDB Limits").
    The maximum index width for [`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM
    Storage Engine") tables is 1000 bytes. See [Section 18.2, “The MyISAM Storage
    Engine”](myisam-storage-engine.html "18.2 The MyISAM Storage Engine"). An index
    may use a prefix of a column for [`CHAR`](char.html "13.3.2 The CHAR and VARCHAR
    Types"), [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types"), [`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types"), or [`TEXT`](blob.html "13.3.4 The BLOB and
    TEXT Types") column types.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个表最多支持64个索引。每个索引可以由1到16列或列的部分组成。对于[`InnoDB`](innodb-storage-engine.html "第17章
    InnoDB存储引擎")表，最大索引宽度为767字节或3072字节。参见[第17.22节，“InnoDB限制”](innodb-limits.html "17.22
    InnoDB限制")。对于[`MyISAM`](myisam-storage-engine.html "第18.2章 MyISAM存储引擎")表，最大索引宽度为1000字节。参见[第18.2节，“MyISAM存储引擎”](myisam-storage-engine.html
    "18.2 MyISAM存储引擎")。索引可以使用列的前缀，适用于[`CHAR`](char.html "13.3.2 CHAR和VARCHAR类型")、[`VARCHAR`](char.html
    "13.3.2 CHAR和VARCHAR类型")、[`BLOB`](blob.html "13.3.4 BLOB和TEXT类型")或[`TEXT`](blob.html
    "13.3.4 BLOB和TEXT类型")列类型。
- en: Connectivity
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 连接性
- en: 'Clients can connect to MySQL Server using several protocols:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端可以使用多种协议连接到MySQL服务器：
- en: Clients can connect using TCP/IP sockets on any platform.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端可以在任何平台上使用TCP/IP套接字进行连接。
- en: On Windows systems, clients can connect using named pipes if the server is started
    with the [`named_pipe`](server-system-variables.html#sysvar_named_pipe) system
    variable enabled. Windows servers also support shared-memory connections if started
    with the [`shared_memory`](server-system-variables.html#sysvar_shared_memory)
    system variable enabled. Clients can connect through shared memory by using the
    [`--protocol=memory`](connection-options.html#option_general_protocol) option.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows系统上，如果服务器启用了[`named_pipe`](server-system-variables.html#sysvar_named_pipe)系统变量，客户端可以使用命名管道进行连接。如果启用了[`shared_memory`](server-system-variables.html#sysvar_shared_memory)系统变量，Windows服务器还支持共享内存连接。客户端可以通过使用[`--protocol=memory`](connection-options.html#option_general_protocol)选项通过共享内存进行连接。
- en: On Unix systems, clients can connect using Unix domain socket files.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Unix系统上，客户端可以使用Unix域套接字文件进行连接。
- en: MySQL client programs can be written in many languages. A client library written
    in C is available for clients written in C or C++, or for any language that provides
    C bindings.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL客户端程序可以用许多语言编写。为使用C或C++编写的客户端或提供C绑定的任何语言提供了一个用C编写的客户端库。
- en: APIs for C, C++, Eiffel, Java, Perl, PHP, Python, Ruby, and Tcl are available,
    enabling MySQL clients to be written in many languages. See [Chapter 31, *Connectors
    and APIs*](connectors-apis.html "Chapter 31 Connectors and APIs").
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供了C、C++、Eiffel、Java、Perl、PHP、Python、Ruby和Tcl的API，可以使用这些API在许多语言中编写MySQL客户端。参见[第31章，*连接器和API*](connectors-apis.html
    "第31章 连接器和API")。
- en: The Connector/ODBC (MyODBC) interface provides MySQL support for client programs
    that use ODBC (Open Database Connectivity) connections. For example, you can use
    MS Access to connect to your MySQL server. Clients can be run on Windows or Unix.
    Connector/ODBC source is available. All ODBC 2.5 functions are supported, as are
    many others. See [MySQL Connector/ODBC Developer Guide](/doc/connector-odbc/en/).
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Connector/ODBC（MyODBC）接口为使用ODBC（开放数据库连接）连接的客户端程序提供MySQL支持。例如，您可以使用MS Access连接到您的MySQL服务器。客户端可在Windows或Unix上运行。Connector/ODBC源代码可用。支持所有ODBC
    2.5函数，以及许多其他函数。参见[MySQL Connector/ODBC开发指南](/doc/connector-odbc/en/)。
- en: The Connector/J interface provides MySQL support for Java client programs that
    use JDBC connections. Clients can be run on Windows or Unix. Connector/J source
    is available. See [MySQL Connector/J 8.0 Developer Guide](/doc/connector-j/8.0/en/).
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Connector/J接口为使用JDBC连接的Java客户端程序提供MySQL支持。客户端可在Windows或Unix上运行。Connector/J源代码可用。参见[MySQL
    Connector/J 8.0开发指南](/doc/connector-j/8.0/en/)。
- en: MySQL Connector/NET enables developers to easily create .NET applications that
    require secure, high-performance data connectivity with MySQL. It implements the
    required ADO.NET interfaces and integrates into ADO.NET aware tools. Developers
    can build applications using their choice of .NET languages. MySQL Connector/NET
    is a fully managed ADO.NET driver written in 100% pure C#. See [MySQL Connector/NET
    Developer Guide](/doc/connector-net/en/).
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL Connector/NET使开发人员能够轻松创建需要与MySQL进行安全、高性能数据连接的.NET应用程序。它实现了所需的ADO.NET接口，并集成到了ADO.NET感知工具中。开发人员可以使用他们选择的.NET语言构建应用程序。MySQL
    Connector/NET是一个完全托管的ADO.NET驱动程序，使用100%纯C#编写。参见[MySQL Connector/NET开发指南](/doc/connector-net/en/)。
- en: Localization
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 本地化
- en: The server can provide error messages to clients in many languages. See [Section 12.12,
    “Setting the Error Message Language”](error-message-language.html "12.12 Setting
    the Error Message Language").
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器可以向客户端提供多种语言的错误消息。参见[第12.12节，“设置错误消息语言”](error-message-language.html "12.12 设置错误消息语言")。
- en: Full support for several different character sets, including `latin1` (cp1252),
    `german`, `big5`, `ujis`, several Unicode character sets, and more. For example,
    the Scandinavian characters “`å`”, “`ä`” and “`ö`” are permitted in table and
    column names.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全支持多种不同的字符集，包括`latin1`（cp1252）、`german`、`big5`、`ujis`、几种Unicode字符集等。例如，表和列名中允许使用斯堪的纳维亚字符“`å`”、“`ä`”和“`ö`”。
- en: All data is saved in the chosen character set.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有数据都保存在选择的字符集中。
- en: Sorting and comparisons are done according to the default character set and
    collation. It is possible to change this when the MySQL server is started (see
    [Section 12.3.2, “Server Character Set and Collation”](charset-server.html "12.3.2 Server
    Character Set and Collation")). To see an example of very advanced sorting, look
    at the Czech sorting code. MySQL Server supports many different character sets
    that can be specified at compile time and runtime.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排序和比较根据默认字符集和排序规则进行。在启动MySQL服务器时可以更改这一点（参见[第12.3.2节，“服务器字符集和排序规则”](charset-server.html
    "12.3.2 服务器字符集和排序规则")）。要查看非常高级排序的示例，请查看捷克排序代码。MySQL服务器支持许多不同的字符集，可以在编译时和运行时指定。
- en: The server time zone can be changed dynamically, and individual clients can
    specify their own time zone. See [Section 7.1.15, “MySQL Server Time Zone Support”](time-zone-support.html
    "7.1.15 MySQL Server Time Zone Support").
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器时区可以动态更改，个别客户端可以指定自己的时区。参见[第7.1.15节，“MySQL服务器时区支持”](time-zone-support.html
    "7.1.15 MySQL服务器时区支持")。
- en: Clients and Tools
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 客户端和工具
- en: MySQL includes several client and utility programs. These include both command-line
    programs such as [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program") and [**mysqladmin**](mysqladmin.html "6.5.2 mysqladmin — A MySQL
    Server Administration Program"), and graphical programs such as [MySQL Workbench](workbench.html
    "Chapter 33 MySQL Workbench").
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL包括几个客户端和实用程序。这些包括命令行程序，如[**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — 一个数据库备份程序")和[**mysqladmin**](mysqladmin.html "6.5.2 mysqladmin — 一个MySQL服务器管理程序")，以及图形程序，如[MySQL
    Workbench](workbench.html "第33章 MySQL Workbench")。
- en: MySQL Server has built-in support for SQL statements to check, optimize, and
    repair tables. These statements are available from the command line through the
    [**mysqlcheck**](mysqlcheck.html "6.5.3 mysqlcheck — A Table Maintenance Program")
    client. MySQL also includes [**myisamchk**](myisamchk.html "6.6.4 myisamchk —
    MyISAM Table-Maintenance Utility"), a very fast command-line utility for performing
    these operations on `MyISAM` tables. See [Chapter 6, *MySQL Programs*](programs.html
    "Chapter 6 MySQL Programs").
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL服务器内置支持SQL语句来检查、优化和修复表格。这些语句可以通过命令行中的[**mysqlcheck**](mysqlcheck.html "6.5.3 mysqlcheck
    — A Table Maintenance Program")客户端使用。MySQL还包括[**myisamchk**](myisamchk.html "6.6.4 myisamchk
    — MyISAM Table-Maintenance Utility")，一个非常快速的命令行实用程序，用于在`MyISAM`表上执行这些操作。参见[第6章，*MySQL程序*](programs.html
    "第6章 MySQL程序")。
- en: MySQL programs can be invoked with the `--help` or `-?` option to obtain online
    assistance.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL程序可以通过`--help`或`-?`选项调用以获取在线帮助。
