- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-table-select.html](https://dev.mysql.com/doc/refman/8.0/en/create-table-select.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-table-select.html](https://dev.mysql.com/doc/refman/8.0/en/create-table-select.html)
- en: 15.1.20.4 CREATE TABLE ... SELECT Statement
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.1.20.4 创建表...选择语句
- en: 'You can create one table from another by adding a [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement at the end of the [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") statement:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")语句末尾添加一个[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句来从另一个表创建一个表：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'MySQL creates new columns for all elements in the [`SELECT`](select.html "15.2.13 SELECT
    Statement"). For example:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL为[`SELECT`](select.html "15.2.13 SELECT Statement")中的所有元素创建新列。例如：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This creates an [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB
    Storage Engine") table with three columns, `a`, `b`, and `c`. The `ENGINE` option
    is part of the [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")
    statement, and should not be used following the [`SELECT`](select.html "15.2.13 SELECT
    Statement"); this would result in a syntax error. The same is true for other [`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") options such as `CHARSET`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个带有三列`a`、`b`和`c`的[`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine")表。`ENGINE`选项是[`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement")语句的一部分，不应在[`SELECT`](select.html "15.2.13 SELECT Statement")之后使用；否则会导致语法错误。其他[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")选项如`CHARSET`也是如此。
- en: 'Notice that the columns from the [`SELECT`](select.html "15.2.13 SELECT Statement")
    statement are appended to the right side of the table, not overlapped onto it.
    Take the following example:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，[`SELECT`](select.html "15.2.13 SELECT Statement")语句中的列附加在表的右侧，而不是重叠在其上。看下面的例子：
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For each row in table `foo`, a row is inserted in `bar` with the values from
    `foo` and default values for the new columns.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于表`foo`中的每一行，在`bar`中插入一行，其值来自`foo`并且新列使用默认值。
- en: In a table resulting from [`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE
    TABLE Statement"), columns named only in the [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") part come first. Columns named in both parts
    or only in the [`SELECT`](select.html "15.2.13 SELECT Statement") part come after
    that. The data type of [`SELECT`](select.html "15.2.13 SELECT Statement") columns
    can be overridden by also specifying the column in the [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") part.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在由[`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement")生成的表中，仅在[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")部分命名的列首先出现。在两个部分或仅在[`SELECT`](select.html
    "15.2.13 SELECT Statement")部分命名的列在其后出现。[`SELECT`](select.html "15.2.13 SELECT
    Statement")列的数据类型可以通过在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement")部分中指定该列来覆盖。
- en: If errors occur while copying data to the table, the table is automatically
    dropped and not created. However, prior to MySQL 8.0.21, when row-based replication
    is in use, a [`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE
    TABLE ... SELECT Statement") statement is recorded in the binary log as two transactions,
    one to create the table, and the other to insert data. When the statement applied
    from the binary log, a failure between the two transactions or while copying data
    can result in replication of an empty table. That limitation is removed in MySQL
    8.0.21\. On storage engines that support atomic DDL, [`CREATE TABLE ... SELECT`](create-table-select.html
    "15.1.20.4 CREATE TABLE ... SELECT Statement") is now recorded and applied as
    one transaction when row-based replication is in use. For more information, see
    [Section 15.1.1, “Atomic Data Definition Statement Support”](atomic-ddl.html "15.1.1 Atomic
    Data Definition Statement Support").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在将数据复制到表时发生错误，则表会自动删除而不会创建。然而，在MySQL 8.0.21之前，当使用基于行的复制时，[`CREATE TABLE ...
    SELECT`](create-table-select.html "15.1.20.4 CREATE TABLE ... SELECT Statement")语句会在二进制日志中记录为两个事务，一个用于创建表，另一个用于插入数据。当从二进制日志应用语句时，在两个事务之间或在复制数据时发生故障可能导致复制空表。这个限制在MySQL
    8.0.21中被移除。在支持原子DDL的存储引擎上，当使用基于行的复制时，[`CREATE TABLE ... SELECT`](create-table-select.html
    "15.1.20.4 CREATE TABLE ... SELECT Statement")现在被记录并应用为一个事务。更多信息，请参见[第15.1.1节，“原子数据定义语句支持”](atomic-ddl.html
    "15.1.1 Atomic Data Definition Statement Support")。
- en: As of MySQL 8.0.21, on storage engines that support both atomic DDL and foreign
    key constraints, creation of foreign keys is not permitted in [`CREATE TABLE ...
    SELECT`](create-table-select.html "15.1.20.4 CREATE TABLE ... SELECT Statement")
    statements when row-based replication is in use. Foreign key constraints can be
    added later using [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.21，在支持原子DDL和外键约束的存储引擎上，在使用基于行的复制时，不允许在[`CREATE TABLE ... SELECT`](create-table-select.html
    "15.1.20.4 CREATE TABLE ... SELECT Statement")语句中创建外键。可以稍后使用[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement")添加外键约束。
- en: You can precede the [`SELECT`](select.html "15.2.13 SELECT Statement") by `IGNORE`
    or `REPLACE` to indicate how to handle rows that duplicate unique key values.
    With `IGNORE`, rows that duplicate an existing row on a unique key value are discarded.
    With `REPLACE`, new rows replace rows that have the same unique key value. If
    neither `IGNORE` nor `REPLACE` is specified, duplicate unique key values result
    in an error. For more information, see [The Effect of IGNORE on Statement Execution](sql-mode.html#ignore-effect-on-execution
    "The Effect of IGNORE on Statement Execution").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[`SELECT`](select.html "15.2.13 SELECT Statement")之前加上`IGNORE`或`REPLACE`来指示如何处理重复唯一键值的行。使用`IGNORE`，重复唯一键值的行将被丢弃。使用`REPLACE`，新行将替换具有相同唯一键值的行。如果未指定`IGNORE`或`REPLACE`，重复的唯一键值将导致错误。有关更多信息，请参见[IGNORE对语句执行的影响](sql-mode.html#ignore-effect-on-execution
    "IGNORE对语句执行的影响")。
- en: In MySQL 8.0.19 and later, you can also use a [`VALUES`](values.html "15.2.19 VALUES
    Statement") statement in the [`SELECT`](select.html "15.2.13 SELECT Statement")
    part of `CREATE TABLE ... SELECT`; the `VALUES` portion of the statement must
    include a table alias using an `AS` clause. To name the columns coming from `VALUES`,
    supply column aliases with the table alias; otherwise, the default column names
    `column_0`, `column_1`, `column_2`, ..., are used.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.19及更高版本中，您还可以在`CREATE TABLE ... SELECT`语句的[`SELECT`](select.html
    "15.2.13 SELECT Statement")部分使用[`VALUES`](values.html "15.2.19 VALUES Statement")语句；`VALUES`语句的部分必须包含使用`AS`子句的表别名。为了命名来自`VALUES`的列，使用表别名提供列别名；否则，默认列名`column_0`、`column_1`、`column_2`等将被使用。
- en: 'Otherwise, naming of columns in the table thus created follows the same rules
    as described previously in this section. Examples:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，在创建的表中列的命名遵循本节中先前描述的相同规则。示例：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When selecting all columns and using the default column names, you can omit
    `SELECT *`, so the statement just used to create table `tv1` can also be written
    as shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择所有列并使用默认列名时，可以省略`SELECT *`，因此刚刚用于创建表`tv1`的语句也可以写成如下所示：
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'When using [`VALUES`](values.html "15.2.19 VALUES Statement") as the source
    of the [`SELECT`](select.html "15.2.13 SELECT Statement"), all columns are always
    selected into the new table, and individual columns cannot be selected as they
    can be when selecting from a named table; each of the following statements produces
    an error ([`ER_OPERAND_COLUMNS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_operand_columns)):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用[`VALUES`](values.html "15.2.19 VALUES Statement")作为[`SELECT`](select.html
    "15.2.13 SELECT Statement")的源时，所有列始终被选入新表中，无法像从命名表中选择时那样选择单独的列；以下每个语句都会产生错误([`ER_OPERAND_COLUMNS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_operand_columns))：
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Similarly, you can use a [`TABLE`](table.html "15.2.16 TABLE Statement") statement
    in place of the [`SELECT`](select.html "15.2.13 SELECT Statement"). This follows
    the same rules as with [`VALUES`](values.html "15.2.19 VALUES Statement"); all
    columns of the source table and their names in the source table are always inserted
    into the new table. Examples:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，您可以在[`SELECT`](select.html "15.2.13 SELECT Statement")语句的位置使用[`TABLE`](table.html
    "15.2.16 TABLE Statement")语句。这遵循与[`VALUES`](values.html "15.2.19 VALUES Statement")相同的规则；源表的所有列及其在源表中的名称始终被插入到新表中。示例：
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Because the ordering of the rows in the underlying [`SELECT`](select.html "15.2.13 SELECT
    Statement") statements cannot always be determined, `CREATE TABLE ... IGNORE SELECT`
    and `CREATE TABLE ... REPLACE SELECT` statements are flagged as unsafe for statement-based
    replication. Such statements produce a warning in the error log when using statement-based
    mode and are written to the binary log using the row-based format when using `MIXED`
    mode. See also [Section 19.2.1.1, “Advantages and Disadvantages of Statement-Based
    and Row-Based Replication”](replication-sbr-rbr.html "19.2.1.1 Advantages and
    Disadvantages of Statement-Based and Row-Based Replication").
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 由于底层[`SELECT`](select.html "15.2.13 SELECT Statement")语句中行的排序不能总是确定，`CREATE
    TABLE ... IGNORE SELECT`和`CREATE TABLE ... REPLACE SELECT`语句被标记为不安全的基于语句的复制。在使用基于语句的模式时，这些语句在错误日志中产生警告，并在使用`MIXED`模式时以基于行的格式写入二进制日志。另请参阅[第19.2.1.1节，“基于语句和基于行的复制的优缺点”](replication-sbr-rbr.html
    "19.2.1.1 Advantages and Disadvantages of Statement-Based and Row-Based Replication")。
- en: '[`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement")
    does not automatically create any indexes for you. This is done intentionally
    to make the statement as flexible as possible. If you want to have indexes in
    the created table, you should specify these before the [`SELECT`](select.html
    "15.2.13 SELECT Statement") statement:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement")不会为您自动创建任何索引。这是有意为之，以使语句尽可能灵活。如果您希望在创建的表中有索引，您应该在[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句之前指定这些索引：'
- en: '[PRE7]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: For `CREATE TABLE ... SELECT`, the destination table does not preserve information
    about whether columns in the selected-from table are generated columns. The [`SELECT`](select.html
    "15.2.13 SELECT Statement") part of the statement cannot assign values to generated
    columns in the destination table.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`CREATE TABLE ... SELECT`，目标表不会保留所选自表中列是否为生成列的信息。语句的[`SELECT`](select.html
    "15.2.13 SELECT Statement")部分不能为目标表中的生成列分配值。
- en: For `CREATE TABLE ... SELECT`, the destination table does preserve expression
    default values from the original table.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`CREATE TABLE ... SELECT`，目标表会保留原始表中的表达式默认值。
- en: Some conversion of data types might occur. For example, the `AUTO_INCREMENT`
    attribute is not preserved, and [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR
    Types") columns can become [`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types")
    columns. Retrained attributes are `NULL` (or `NOT NULL`) and, for those columns
    that have them, `CHARACTER SET`, `COLLATION`, `COMMENT`, and the `DEFAULT` clause.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会发生一些数据类型的转换。例如，`AUTO_INCREMENT`属性不会被保留，[`VARCHAR`](char.html "13.3.2 The
    CHAR and VARCHAR Types")列可能会变成[`CHAR`](char.html "13.3.2 The CHAR and VARCHAR
    Types")列。保留的属性包括`NULL`（或`NOT NULL`）以及对于那些具有的列，`CHARACTER SET`，`COLLATION`，`COMMENT`和`DEFAULT`子句。
- en: When creating a table with [`CREATE TABLE ... SELECT`](create-table-select.html
    "15.1.20.4 CREATE TABLE ... SELECT Statement"), make sure to alias any function
    calls or expressions in the query. If you do not, the `CREATE` statement might
    fail or result in undesirable column names.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用[`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE TABLE
    ... SELECT Statement")创建表时，请确保为查询中的任何函数调用或表达式设置别名。如果不这样做，`CREATE`语句可能会失败或导致不良的列名称。
- en: '[PRE8]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can also explicitly specify the data type for a column in the created table:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以明确指定创建表中列的数据类型：
- en: '[PRE9]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: For [`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement"),
    if `IF NOT EXISTS` is given and the target table exists, nothing is inserted into
    the destination table, and the statement is not logged.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement")，如果指定了`IF
    NOT EXISTS`并且目标表存在，则不会将任何内容插入目标表，并且该语句不会被记录。
- en: To ensure that the binary log can be used to re-create the original tables,
    MySQL does not permit concurrent inserts during [`CREATE TABLE ... SELECT`](create-table.html
    "15.1.20 CREATE TABLE Statement"). However, prior to MySQL 8.0.21, when a [`CREATE
    TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement") operation
    is applied from the binary log when row-based replication is in use, concurrent
    inserts are permitted on the replicated table while copying data. That limitation
    is removed in MySQL 8.0.21 on storage engines that support atomic DDL. For more
    information, see [Section 15.1.1, “Atomic Data Definition Statement Support”](atomic-ddl.html
    "15.1.1 Atomic Data Definition Statement Support").
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保二进制日志可以用于重新创建原始表，MySQL 不允许在 [`CREATE TABLE ... SELECT`](create-table.html
    "15.1.20 CREATE TABLE Statement") 过程中进行并发插入。然而，在 MySQL 8.0.21 之前，当使用基于行的复制时，从二进制日志应用
    [`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement")
    操作时，允许在复制表上进行并发插入。这个限制在支持原子 DDL 的存储引擎上在 MySQL 8.0.21 中被移除。更多信息，请参见 [Section 15.1.1,
    “Atomic Data Definition Statement Support”](atomic-ddl.html "15.1.1 Atomic Data
    Definition Statement Support")。
- en: You cannot use `FOR UPDATE` as part of the [`SELECT`](select.html "15.2.13 SELECT
    Statement") in a statement such as [`CREATE TABLE *`new_table`* SELECT ... FROM
    *`old_table`* ...`](create-table-select.html "15.1.20.4 CREATE TABLE ... SELECT
    Statement"). If you attempt to do so, the statement fails.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能在类似 [`CREATE TABLE *`new_table`* SELECT ... FROM *`old_table`* ...`](create-table-select.html
    "15.1.20.4 CREATE TABLE ... SELECT Statement") 的语句中将 `FOR UPDATE` 作为 [`SELECT`](select.html
    "15.2.13 SELECT Statement") 的一部分。如果尝试这样做，该语句将失败。
- en: '[`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE TABLE
    ... SELECT Statement") operations apply `ENGINE_ATTRIBUTE` and `SECONDARY_ENGINE_ATTRIBUTE`
    values to columns only. Table and index `ENGINE_ATTRIBUTE` and `SECONDARY_ENGINE_ATTRIBUTE`
    values are not applied to the new table unless specified explicitly.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE TABLE
    ... SELECT Statement") 操作仅对列应用 `ENGINE_ATTRIBUTE` 和 `SECONDARY_ENGINE_ATTRIBUTE`
    值。除非明确指定，否则表和索引的 `ENGINE_ATTRIBUTE` 和 `SECONDARY_ENGINE_ATTRIBUTE` 值不会应用于新表。'
