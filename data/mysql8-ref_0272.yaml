- en: 7.4.3 The General Query Log
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7.4.3 通用查询日志
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/query-log.html](https://dev.mysql.com/doc/refman/8.0/en/query-log.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/query-log.html](https://dev.mysql.com/doc/refman/8.0/en/query-log.html)
- en: The general query log is a general record of what [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") is doing. The server writes information to this log when
    clients connect or disconnect, and it logs each SQL statement received from clients.
    The general query log can be very useful when you suspect an error in a client
    and want to know exactly what the client sent to [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 通用查询日志是[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")正在执行的一般记录。当客户端连接或断开连接时，服务器会将信息写入此日志，并记录从客户端接收的每个SQL语句。当您怀疑客户端中存在错误并想确切知道客户端发送给[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")的内容时，通用查询日志可能非常有用。
- en: Each line that shows when a client connects also includes `using *`connection_type`*`
    to indicate the protocol used to establish the connection. *`connection_type`*
    is one of `TCP/IP` (TCP/IP connection established without SSL), `SSL/TLS` (TCP/IP
    connection established with SSL), `Socket` (Unix socket file connection), `Named
    Pipe` (Windows named pipe connection), or `Shared Memory` (Windows shared memory
    connection).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每当客户端连接时显示的每一行还包括`using *`connection_type`*`，表示建立连接所使用的协议。*`connection_type`*可以是`TCP/IP`（未使用SSL建立的TCP/IP连接）、`SSL/TLS`（使用SSL建立的TCP/IP连接）、`Socket`（Unix套接字文件连接）、`Named
    Pipe`（Windows命名管道连接）或`Shared Memory`（Windows共享内存连接）。
- en: '[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") writes statements
    to the query log in the order that it receives them, which might differ from the
    order in which they are executed. This logging order is in contrast with that
    of the binary log, for which statements are written after they are executed but
    before any locks are released. In addition, the query log may contain statements
    that only select data while such statements are never written to the binary log.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")按照接收到的顺序将语句写入查询日志，这可能与执行顺序不同。这种记录顺序与二进制日志的记录顺序相反，二进制日志中的语句是在执行后但在释放任何锁之前写入的。此外，查询日志可能包含仅选择数据的语句，而这些语句永远不会写入二进制日志。'
- en: When using statement-based binary logging on a replication source server, statements
    received by its replicas are written to the query log of each replica. Statements
    are written to the query log of the source if a client reads events with the [**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — Utility for Processing Binary Log Files") utility and passes
    them to the server.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制源服务器上使用基于语句的二进制日志记录时，其副本接收的语句将写入每个副本的查询日志。如果客户端使用[**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — 用于处理二进制日志文件的实用程序")实用程序读取事件并将其传递给服务器，则语句将写入源的查询日志。
- en: However, when using row-based binary logging, updates are sent as row changes
    rather than SQL statements, and thus these statements are never written to the
    query log when [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is `ROW`. A given update also might not be written to the query log when this
    variable is set to `MIXED`, depending on the statement used. See [Section 19.2.1.1,
    “Advantages and Disadvantages of Statement-Based and Row-Based Replication”](replication-sbr-rbr.html
    "19.2.1.1 Advantages and Disadvantages of Statement-Based and Row-Based Replication"),
    for more information.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当使用基于行的二进制日志记录时，更新以行更改的形式发送，而不是SQL语句，因此当[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)设置为`ROW`时，这些语句永远不会写入查询日志。当此变量设置为`MIXED`时，根据使用的语句，给定的更新也可能不会写入查询日志。有关更多信息，请参见[Section 19.2.1.1,
    “基于语句和基于行的复制的优缺点”](replication-sbr-rbr.html "19.2.1.1 基于语句和基于行的复制的优缺点")。
- en: By default, the general query log is disabled. To specify the initial general
    query log state explicitly, use [`--general_log[={0|1}]`](server-system-variables.html#sysvar_general_log).
    With no argument or an argument of 1, [`--general_log`](server-system-variables.html#sysvar_general_log)
    enables the log. With an argument of 0, this option disables the log. To specify
    a log file name, use [`--general_log_file=*`file_name`*`](server-system-variables.html#sysvar_general_log_file).
    To specify the log destination, use the [`log_output`](server-system-variables.html#sysvar_log_output)
    system variable (as described in [Section 7.4.1, “Selecting General Query Log
    and Slow Query Log Output Destinations”](log-destinations.html "7.4.1 Selecting
    General Query Log and Slow Query Log Output Destinations")).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，通用查询日志被禁用。要明确指定初始通用查询日志状态，请使用[`--general_log[={0|1}]`](server-system-variables.html#sysvar_general_log)。没有参数或参数为1时，[`--general_log`](server-system-variables.html#sysvar_general_log)启用日志。参数为0时，此选项禁用日志。要指定日志文件名，请使用[`--general_log_file=*`file_name`*`](server-system-variables.html#sysvar_general_log_file)。要指定日志目的地，请使用[`log_output`](server-system-variables.html#sysvar_log_output)系统变量（如[第7.4.1节，“选择通用查询日志和慢查询日志输出目的地”](log-destinations.html
    "7.4.1 选择通用查询日志和慢查询日志输出目的地")中所述）。
- en: Note
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you specify the `TABLE` log destination, see [Log Tables and “Too many open
    files” Errors](log-destinations.html#log-destinations-tables-open-files "Log Tables
    and “Too many open files” Errors").
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定了`TABLE`日志目的地，请参阅[日志表和“打开文件过多”错误](log-destinations.html#log-destinations-tables-open-files
    "日志表和“打开文件过多”错误")。
- en: If you specify no name for the general query log file, the default name is `*`host_name`*.log`.
    The server creates the file in the data directory unless an absolute path name
    is given to specify a different directory.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未为通用查询日志文件指定名称，则默认名称为`*`host_name`*.log`。服务器会在数据目录中创建文件，除非给定绝对路径名以指定不同的目录。
- en: To disable or enable the general query log or change the log file name at runtime,
    use the global [`general_log`](server-system-variables.html#sysvar_general_log)
    and [`general_log_file`](server-system-variables.html#sysvar_general_log_file)
    system variables. Set [`general_log`](server-system-variables.html#sysvar_general_log)
    to 0 (or `OFF`) to disable the log or to 1 (or `ON`) to enable it. Set [`general_log_file`](server-system-variables.html#sysvar_general_log_file)
    to specify the name of the log file. If a log file already is open, it is closed
    and the new file is opened.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要在运行时禁用或启用通用查询日志或更改日志文件名，请使用全局[`general_log`](server-system-variables.html#sysvar_general_log)和[`general_log_file`](server-system-variables.html#sysvar_general_log_file)系统变量。将[`general_log`](server-system-variables.html#sysvar_general_log)设置为0（或`OFF`）以禁用日志，设置为1（或`ON`）以启用日志。设置[`general_log_file`](server-system-variables.html#sysvar_general_log_file)以指定日志文件的名称。如果已经打开了日志文件，则会关闭该文件并打开新文件。
- en: When the general query log is enabled, the server writes output to any destinations
    specified by the [`log_output`](server-system-variables.html#sysvar_log_output)
    system variable. If you enable the log, the server opens the log file and writes
    startup messages to it. However, further logging of queries to the file does not
    occur unless the `FILE` log destination is selected. If the destination is `NONE`,
    the server writes no queries even if the general log is enabled. Setting the log
    file name has no effect on logging if the log destination value does not contain
    `FILE`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用通用查询日志时，服务器会将输出写入由[`log_output`](server-system-variables.html#sysvar_log_output)系统变量指定的任何目的地。如果启用日志，服务器会打开日志文件并将启动消息写入其中。但是，除非选择了`FILE`日志目的地，否则不会进一步记录查询到文件中。如果目的地是`NONE`，即使启用了通用日志，服务器也不会写入任何查询。如果日志目的地值不包含`FILE`，设置日志文件名对日志记录没有影响。
- en: 'Server restarts and log flushing do not cause a new general query log file
    to be generated (although flushing closes and reopens it). To rename the file
    and create a new one, use the following commands:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器重启和日志刷新不会导致生成新的通用查询日志文件（尽管刷新会关闭并重新打开它）。要重命名文件并创建一个新文件，请使用以下命令：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: On Windows, use **rename** rather than **mv**.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，使用**rename**而不是**mv**。
- en: 'You can also rename the general query log file at runtime by disabling the
    log:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过禁用日志来在运行时重命名通用查询日志文件：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'With the log disabled, rename the log file externally (for example, from the
    command line). Then enable the log again:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用日志后，通过外部重命名日志文件（例如，从命令行）然后再次启用日志：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This method works on any platform and does not require a server restart.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法适用于任何平台，不需要服务器重启。
- en: To disable or enable general query logging for the current session, set the
    session [`sql_log_off`](server-system-variables.html#sysvar_sql_log_off) variable
    to `ON` or `OFF`. (This assumes that the general query log itself is enabled.)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要为当前会话禁用或启用一般查询日志记录，请将会话 [`sql_log_off`](server-system-variables.html#sysvar_sql_log_off)
    变量设置为 `ON` 或 `OFF`。（这假定一般查询日志本身已启用。）
- en: Passwords in statements written to the general query log are rewritten by the
    server not to occur literally in plain text. Password rewriting can be suppressed
    for the general query log by starting the server with the [`--log-raw`](server-options.html#option_mysqld_log-raw)
    option. This option may be useful for diagnostic purposes, to see the exact text
    of statements as received by the server, but for security reasons is not recommended
    for production use. See also [Section 8.1.2.3, “Passwords and Logging”](password-logging.html
    "8.1.2.3 Passwords and Logging").
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 写入一般查询日志的语句中的密码会被服务器重写，以避免以明文形式出现。可以通过使用 [`--log-raw`](server-options.html#option_mysqld_log-raw)
    选项启动服务器来阻止一般查询日志的密码重写。这个选项可能对诊断目的有用，以查看服务器接收到的语句的确切文本，但出于安全原因，不建议在生产环境中使用。另请参见
    [Section 8.1.2.3, “Passwords and Logging”](password-logging.html "8.1.2.3 Passwords
    and Logging")。
- en: An implication of password rewriting is that statements that cannot be parsed
    (due, for example, to syntax errors) are not written to the general query log
    because they cannot be known to be password free. Use cases that require logging
    of all statements including those with errors should use the [`--log-raw`](server-options.html#option_mysqld_log-raw)
    option, bearing in mind that this also bypasses password rewriting.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 密码重写的一个影响是无法解析的语句（例如由于语法错误）不会被写入一般查询日志，因为无法知道它们是否不包含密码。需要记录所有语句（包括带有错误的语句）的用例应该使用
    [`--log-raw`](server-options.html#option_mysqld_log-raw) 选项，需要注意的是这也会绕过密码重写。
- en: Password rewriting occurs only when plain text passwords are expected. For statements
    with syntax that expect a password hash value, no rewriting occurs. If a plain
    text password is supplied erroneously for such syntax, the password is logged
    as given, without rewriting.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在预期明文密码时才会进行密码重写。对于期望密码哈希值的语法的语句，不会进行重写。如果错误地为这种语法提供了明文密码，则密码将按原样记录，而不进行重写。
- en: The [`log_timestamps`](server-system-variables.html#sysvar_log_timestamps) system
    variable controls the time zone of timestamps in messages written to the general
    query log file (as well as to the slow query log file and the error log). It does
    not affect the time zone of general query log and slow query log messages written
    to log tables, but rows retrieved from those tables can be converted from the
    local system time zone to any desired time zone with [`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz)
    or by setting the session [`time_zone`](server-system-variables.html#sysvar_time_zone)
    system variable.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`log_timestamps`](server-system-variables.html#sysvar_log_timestamps) 系统变量控制着写入一般查询日志文件（以及慢查询日志文件和错误日志）中的时间戳的时区。它不影响写入日志表的一般查询日志和慢查询日志消息的时区，但是从这些表中检索的行可以通过
    [`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz) 或设置会话 [`time_zone`](server-system-variables.html#sysvar_time_zone)
    系统变量将其从本地系统时区转换为任何所需的时区。'
