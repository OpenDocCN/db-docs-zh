- en: 20.4.1 GTIDs and Group Replication
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 20.4.1 GTIDs 和组复制
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-gtids.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-gtids.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-gtids.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-gtids.html)
- en: Group Replication uses GTIDs (global transaction identifiers) to track exactly
    which transactions have been committed on every server instance. The settings
    [`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode) and [`enforce_gtid_consistency=ON`](replication-options-gtids.html#sysvar_enforce_gtid_consistency)
    are required on all group members. Incoming transactions from clients are assigned
    a GTID by the group member that receives them. Any replicated transactions that
    are received by group members on asynchronous replication channels from source
    servers outside the group retain the GTIDs that they have when they arrive on
    the group member.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 组复制使用GTIDs（全局事务标识符）来精确跟踪每个服务器实例上已提交的事务。所有组成员都需要设置[`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)和[`enforce_gtid_consistency=ON`](replication-options-gtids.html#sysvar_enforce_gtid_consistency)。从客户端接收的事务由接收它们的组成员分配一个GTID。从组外部源服务器通过异步复制通道接收到的任何复制事务在到达组成员时保留它们的GTID。
- en: The GTIDs that are assigned to incoming transactions from clients use the group
    name specified by the [`group_replication_group_name`](group-replication-system-variables.html#sysvar_group_replication_group_name)
    system variable as the UUID part of the identifier, rather than the server UUID
    of the individual group member that received the transaction. All the transactions
    received directly by the group can therefore be identified and are grouped together
    in GTID sets, and it does not matter which member originally received them. Each
    group member has a block of consecutive GTIDs reserved for its use, and when these
    are consumed it reserves more. The [`group_replication_gtid_assignment_block_size`](group-replication-system-variables.html#sysvar_group_replication_gtid_assignment_block_size)
    system variable sets the size of the blocks, with a default of 1 million GTIDs
    in each block.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从客户端接收的事务分配的GTID使用[`group_replication_group_name`](group-replication-system-variables.html#sysvar_group_replication_group_name)系统变量指定的组名作为标识符的UUID部分，而不是接收事务的单个组成员的服务器UUID。因此，所有直接由组接收的事务都可以被识别并分组在GTID集合中，不管最初接收它们的成员是谁。每个组成员都有一块连续的GTID保留供其使用，当这些GTID被消耗完时，它会保留更多。[`group_replication_gtid_assignment_block_size`](group-replication-system-variables.html#sysvar_group_replication_gtid_assignment_block_size)系统变量设置了块的大小，默认情况下每个块中有100万个GTID。
- en: View change events (`View_change_log_event`), which are generated by the group
    itself when a new member joins, are given GTIDs when they are recorded in the
    binary log. By default, the GTIDs for these events also use the group name specified
    by the [`group_replication_group_name`](group-replication-system-variables.html#sysvar_group_replication_group_name)
    system variable as the UUID part of the identifier. From MySQL 8.0.26, you can
    set the Group Replication system variable [`group_replication_view_change_uuid`](group-replication-system-variables.html#sysvar_group_replication_view_change_uuid)
    to use an alternative UUID in the GTIDs for view change events, so that they are
    easy to distinguish from transactions received by the group from clients. This
    can be useful if your setup allows for failover between groups, and you need to
    identify and discard transactions that were specific to the backup group. The
    alternative UUID must be different from the server UUIDs of the members. It must
    also be different from any UUIDs in the GTIDs applied to anonymous transactions
    using the `ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS` option of the `CHANGE REPLICATION
    SOURCE TO` statement.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当新成员加入时，由组自动生成的视图更改事件（`View_change_log_event`）在二进制日志中记录时被赋予GTID。默认情况下，这些事件的GTID也使用[`group_replication_group_name`](group-replication-system-variables.html#sysvar_group_replication_group_name)系统变量指定的组名作为标识符的UUID部分。从MySQL
    8.0.26开始，您可以设置Group Replication系统变量[`group_replication_view_change_uuid`](group-replication-system-variables.html#sysvar_group_replication_view_change_uuid)以在视图更改事件的GTID中使用替代UUID，以便它们易于与从客户端接收的事务区分开来。如果您的设置允许在组之间进行故障切换，并且您需要识别和丢弃特定于备份组的事务，则这可能很有用。替代UUID必须与成员的服务器UUID不同。它还必须与使用`CHANGE
    REPLICATION SOURCE TO`语句的`ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS`选项应用于匿名事务的GTID中的任何UUID不同。
- en: From MySQL 8.0.27, the settings `GTID_ONLY=1`, `REQUIRE_ROW_FORMAT = 1`, and
    `SOURCE_AUTO_POSITION = 1` are applied for the Group Replication channels `group_replication_applier`
    and `group_replication_recovery`. The settings are made automatically on the Group
    Replication channels when they are created, or when a member server in a replication
    group is upgraded to 8.0.27 or higher. These options are normally set using a
    [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE
    REPLICATION SOURCE TO Statement") statement, but note that you cannot disable
    them for a Group Replication channel. With these options set, the group member
    does not persist file names and file positions in the replication metadata repositories
    for these channels. GTID auto-positioning and GTID auto-skip are used to locate
    the correct receiver and applier positions when necessary.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.27 开始，设置 `GTID_ONLY=1`、`REQUIRE_ROW_FORMAT = 1` 和 `SOURCE_AUTO_POSITION
    = 1` 适用于 Group Replication 通道 `group_replication_applier` 和 `group_replication_recovery`。这些设置在创建
    Group Replication 通道时自动设置，或者当复制组中的成员服务器升级到 8.0.27 或更高版本时自动设置。通常使用 [`CHANGE REPLICATION
    SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION SOURCE
    TO 语句") 语句设置这些选项，但请注意，您无法为 Group Replication 通道禁用它们。设置了这些选项后，组成员不会在这些通道的复制元数据存储库中持久保存文件名和文件位置。在必要时，GTID
    自动定位和 GTID 自动跳过用于定位正确的接收器和应用程序位置。
- en: Extra Transactions
  id: totrans-6
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 额外事务
- en: If a joining member has transactions in its GTID set that are not present on
    the existing members of the group, it is not allowed to complete the distributed
    recovery process, and cannot join the group. If a remote cloning operation was
    carried out, these transactions would be deleted and lost, because the data directory
    on the joining member is erased. If state transfer from a donor's binary log was
    carried out, these transactions could conflict with the group's transactions.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果加入成员的 GTID 集中存在在组中现有成员中不存在的事务，则不允许完成分布式恢复过程，并且无法加入该组。如果进行了远程克隆操作，则这些事务将被删除和丢失，因为加入成员的数据目录被擦除。如果从捐赠者的二进制日志进行状态传输，则这些事务可能与组的事务发生冲突。
- en: 'Extra transactions might be present on a member if an administrative transaction
    is carried out on the instance while Group Replication is stopped. To avoid introducing
    new transactions in that way, always set the value of the [`sql_log_bin`](replication-options-binary-log.html#sysvar_sql_log_bin)
    system variable to `OFF` before issuing administrative statements, and back to
    `ON` afterwards:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在 Group Replication 停止时在实例上执行管理事务，则可能会存在额外的事务。为了避免以这种方式引入新事务，请在发出管理语句之前始终将
    [`sql_log_bin`](replication-options-binary-log.html#sysvar_sql_log_bin) 系统变量的值设置为
    `OFF`，然后在之后设置回 `ON`：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Setting this system variable to `OFF` means that the transactions that occur
    from that point until you set it back to `ON` are not written to the binary log
    and do not have GTIDs assigned to them.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 将此系统变量设置为 `OFF` 意味着从那一点开始发生的事务不会写入二进制日志，并且不会分配 GTID。
- en: If an extra transaction is present on a joining member, check the binary log
    for the affected server to see what the extra transaction actually contains. The
    safest method to reconcile the joining member’s data and GTID set with the members
    currently in the group is to use MySQL's cloning functionality to transfer the
    content from a server in the group to the affected server. For instructions to
    do this, see [Section 7.6.7.3, “Cloning Remote Data”](clone-plugin-remote.html
    "7.6.7.3 Cloning Remote Data"). If the transaction is required, rerun it after
    the member has successfully rejoined.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果加入成员存在额外的事务，请检查受影响服务器的二进制日志，查看额外事务的实际内容。将加入成员的数据和 GTID 集与当前组中的成员进行协调的最安全方法是使用
    MySQL 的克隆功能，将内容从组中的一个服务器传输到受影响的服务器。有关如何执行此操作的说明，请参见 [Section 7.6.7.3, “克隆远程数据”](clone-plugin-remote.html
    "7.6.7.3 克隆远程数据")。如果需要该事务，请在成员成功重新加入后重新运行它。
