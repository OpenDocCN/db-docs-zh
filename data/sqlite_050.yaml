- en: 1\. How To Use Indexes On Expressions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '-   如何在表达式上使用索引'
- en: 原文：[https://sqlite.com/expridx.html](https://sqlite.com/expridx.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/expridx.html](https://sqlite.com/expridx.html)
- en: Normally, an SQL index references columns of a table. But an index can also
    be formed on expressions involving table columns.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，SQL 索引引用表的列。但是，索引也可以形成涉及表列的表达式。
- en: 'As an example, consider the following table that tracks dollar-amount changes
    on various "accounts":'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑下面的跟踪各种 "账户" 上美元金额变动的表：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Each entry in the account_change table records a deposit or a withdrawal into
    an account. Deposits have a positive "amt" and withdrawals have a negative "amt".
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 每条账户变动表中的条目记录了对账户的存款或取款。存款的 "amt" 是正数，取款是负数。
- en: 'The acctchng_magnitude index is over the account number ("acct_no") and on
    the absolute value of the amount. This index allows one to do efficient queries
    over the magnitude of a change to the account. For example, to list all changes
    to account number $xyz that are more than $100.00, one can say:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: acctchng_magnitude 索引是基于账户号 ("acct_no") 和金额绝对值的。该索引允许高效查询账户变动的幅度。例如，要列出所有账户号为
    $xyz 的变动金额超过 $100.00 的记录，可以这样写：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Or, to list all changes to one particular account ($xyz) in order of decreasing
    magnitude, one can write:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要列出某一特定账户 ($xyz) 的所有变动，并按幅度降序排列，可以这样写：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Both of the above example queries would work fine without the acctchng_magnitude
    index. The acctchng_magnitude index merely helps the queries to run faster, especially
    on databases where there are many entries in the table for each account.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 上述两个示例查询即使没有 acctchng_magnitude 索引也能正常工作。acctchng_magnitude 索引仅仅帮助查询运行得更快，特别是在每个账户表中有很多条目的数据库上。
- en: Use a [CREATE INDEX](lang_createindex.html) statement to create a new index
    on one or more expressions just like you would to create an index on columns.
    The only difference is that expressions are listed as the elements to be indexed
    rather than column names.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [CREATE INDEX](lang_createindex.html) 语句创建一个新的索引，就像在列上创建索引一样。唯一的区别在于，表达式被列为要索引的元素，而不是列名。
- en: 'The SQLite query planner will consider using an index on an expression when
    the expression that is indexed appears in the WHERE clause or in the ORDER BY
    clause of a query, *exactly* as it is written in the CREATE INDEX statement. The
    query planner does not do algebra. In order to match WHERE clause constraints
    and ORDER BY terms to indexes, SQLite requires that the expressions be the same,
    except for minor syntactic differences such as white-space changes. So if you
    have:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite 查询优化器会考虑在表达式上使用索引，当索引中的表达式出现在查询的 WHERE 子句或 ORDER BY 子句中时，*必须*与 CREATE
    INDEX 语句中的写法完全一致。查询优化器不会进行代数运算。为了将 WHERE 子句约束和 ORDER BY 条件与索引匹配，SQLite 要求这些表达式必须完全相同，除了像空格这样的微小语法差异。因此，如果你有：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'And then you run the query:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行查询：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then the index will not be used because the expression on the CREATE INDEX
    statement (x+y) is not the same as the expression as it appears in the query (y+x).
    The two expressions might be mathematically equivalent, but the SQLite query planner
    insists that they be the same, not merely equivalent. Consider rewriting the query
    thusly:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后由于 CREATE INDEX 语句中的表达式 (x+y) 与查询中显示的表达式 (y+x) 不同，因此不会使用索引。这两个表达式在数学上可能是等价的，但
    SQLite 查询优化器坚持它们必须完全相同，而不仅仅是等价的。考虑这样重写查询：
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This second query will likely use the index because now the expression in the
    WHERE clause (x+y) matches the expression in the index exactly.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 WHERE 子句中的表达式 (x+y) 与索引中的表达式完全匹配，因此第二个查询很可能使用索引。
- en: 2\. Restrictions
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '-   限制'
- en: 'There are certain reasonable restrictions on expressions that appear in CREATE
    INDEX statements:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 关于出现在 CREATE INDEX 语句中的表达式，有一些合理的限制：
- en: Expressions in CREATE INDEX statements may only refer to columns of the table
    being indexed, not to columns in other tables.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CREATE INDEX 语句中的表达式只能引用正在创建索引的表的列，而不能引用其他表的列。
- en: 'Expressions in CREATE INDEX statements may contain function calls, but only
    to functions whose output is always determined completely by its input parameters
    (a.k.a.: [deterministic functions](deterministic.html)). Obviously, functions
    like [random()](lang_corefunc.html#random) will not work well in an index. But
    also functions like [sqlite_version()](lang_corefunc.html#sqlite_version), though
    they are constant across any one database connection, are not constant across
    the life of the underlying database file, and hence may not be used in a CREATE
    INDEX statement.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CREATE INDEX 语句中的表达式可以包含函数调用，但只能调用那些其输出完全由输入参数决定的函数（也称为 [确定性函数](deterministic.html)）。显然，像
    [random()](lang_corefunc.html#random) 这样的函数在索引中效果不佳。同时像 [sqlite_version()](lang_corefunc.html#sqlite_version)
    这样的函数，虽然在任何一个数据库连接中是常量，但在底层数据库文件的生命周期内并非常量，因此不能在 CREATE INDEX 语句中使用。
- en: Note that [application-defined SQL functions](appfunc.html) are by default considered
    non-deterministic and may not be used in a CREATE INDEX statement unless the [SQLITE_DETERMINISTIC](c3ref/c_deterministic.html#sqlitedeterministic)
    flag is used when the function is registered.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，默认情况下，[应用定义的 SQL 函数](appfunc.html) 被视为非确定性的，可能不能在注册函数时使用 [SQLITE_DETERMINISTIC](c3ref/c_deterministic.html#sqlitedeterministic)
    标志，并且不能在 CREATE INDEX 语句中使用。
- en: Expressions in CREATE INDEX statements may not use subqueries.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CREATE INDEX 语句中的表达式不能使用子查询。
- en: Expressions may only be used in CREATE INDEX statements, not within [UNIQUE](lang_createtable.html#uniqueconst)
    or [PRIMARY KEY](lang_createtable.html#primkeyconst) constraints within the [CREATE
    TABLE](lang_createtable.html) statement.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CREATE INDEX 语句中的表达式只能用于 CREATE INDEX 语句中，而不能在 [CREATE TABLE](lang_createtable.html)
    语句中的 [UNIQUE](lang_createtable.html#uniqueconst) 或 [PRIMARY KEY](lang_createtable.html#primkeyconst)
    约束内部使用。
- en: 3\. Compatibility
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 兼容性
- en: The ability to index expressions was added to SQLite with [version 3.9.0](releaselog/3_9_0.html)
    (2015-10-14). A database that uses an index on expressions will not be usable
    by earlier versions of SQLite.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite 在 [版本 3.9.0](releaselog/3_9_0.html)（2015-10-14）中增加了对表达式建索引的功能。使用表达式索引的数据库将无法在较早版本的
    SQLite 中使用。
