- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/midpoint-insertion.html](https://dev.mysql.com/doc/refman/8.0/en/midpoint-insertion.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/midpoint-insertion.html](https://dev.mysql.com/doc/refman/8.0/en/midpoint-insertion.html)
- en: 10.10.2.3 Midpoint Insertion Strategy
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.10.2.3 中点插入策略
- en: By default, the key cache management system uses a simple LRU strategy for choosing
    key cache blocks to be evicted, but it also supports a more sophisticated method
    called the midpoint insertion strategy.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，键缓存管理系统使用简单的LRU策略来选择要驱逐的键缓存块，但它还支持一种更复杂的称为中点插入策略的方法。
- en: 'When using the midpoint insertion strategy, the LRU chain is divided into two
    parts: a hot sublist and a warm sublist. The division point between two parts
    is not fixed, but the key cache management system takes care that the warm part
    is not “too short,” always containing at least [`key_cache_division_limit`](server-system-variables.html#sysvar_key_cache_division_limit)
    percent of the key cache blocks. [`key_cache_division_limit`](server-system-variables.html#sysvar_key_cache_division_limit)
    is a component of structured key cache variables, so its value is a parameter
    that can be set per cache.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用中点插入策略时，LRU链被分为两部分：热子列表和温热子列表。两部分之间的分界点不是固定的，但键缓存管理系统确保温热部分不会“太短”，始终至少包含[`key_cache_division_limit`](server-system-variables.html#sysvar_key_cache_division_limit)的百分比的键缓存块。[`key_cache_division_limit`](server-system-variables.html#sysvar_key_cache_division_limit)是结构化键缓存变量的组成部分，因此它的值是可以针对每个缓存设置的参数。
- en: When an index block is read from a table into the key cache, it is placed at
    the end of the warm sublist. After a certain number of hits (accesses of the block),
    it is promoted to the hot sublist. At present, the number of hits required to
    promote a block (3) is the same for all index blocks.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当从表中读取索引块到键缓存时，它被放置在温热子列表的末尾。在一定数量的命中（对块的访问）之后，它将被提升到热子列表。目前，提升块所需的命中次数（3）对所有索引块都是相同的。
- en: A block promoted into the hot sublist is placed at the end of the list. The
    block then circulates within this sublist. If the block stays at the beginning
    of the sublist for a long enough time, it is demoted to the warm sublist. This
    time is determined by the value of the [`key_cache_age_threshold`](server-system-variables.html#sysvar_key_cache_age_threshold)
    component of the key cache.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 提升到热子列表的块被放置在列表的末尾。然后，该块在该子列表内循环。如果该块在子列表的开头停留足够长的时间，它将被降级到温热子列表。这个时间由键缓存的[`key_cache_age_threshold`](server-system-variables.html#sysvar_key_cache_age_threshold)组件的值确定。
- en: The threshold value prescribes that, for a key cache containing *`N`* blocks,
    the block at the beginning of the hot sublist not accessed within the last `*`N`*
    * key_cache_age_threshold / 100` hits is to be moved to the beginning of the warm
    sublist. It then becomes the first candidate for eviction, because blocks for
    replacement always are taken from the beginning of the warm sublist.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 阈值值规定，对于包含*`N`*块的键缓存，未在最后`*`N`* * key_cache_age_threshold / 100`次命中内访问的热子列表开头的块将移动到温热子列表的开头。然后它成为驱逐的第一个候选，因为替换块总是从温热子列表的开头取出。
- en: The midpoint insertion strategy enables you to keep more-valued blocks always
    in the cache. If you prefer to use the plain LRU strategy, leave the [`key_cache_division_limit`](server-system-variables.html#sysvar_key_cache_division_limit)
    value set to its default of 100.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 中点插入策略使您能够始终将更有价值的块保留在缓存中。如果您更喜欢使用普通的LRU策略，请将[`key_cache_division_limit`](server-system-variables.html#sysvar_key_cache_division_limit)的值保持默认值100。
- en: The midpoint insertion strategy helps to improve performance when execution
    of a query that requires an index scan effectively pushes out of the cache all
    the index blocks corresponding to valuable high-level B-tree nodes. To avoid this,
    you must use a midpoint insertion strategy with the [`key_cache_division_limit`](server-system-variables.html#sysvar_key_cache_division_limit)
    set to much less than 100\. Then valuable frequently hit nodes are preserved in
    the hot sublist during an index scan operation as well.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 中点插入策略有助于提高性能，当执行需要索引扫描的查询时，有效地将与有价值的高级B树节点对应的所有索引块推出缓存。为了避免这种情况，您必须使用中点插入策略，并将[`key_cache_division_limit`](server-system-variables.html#sysvar_key_cache_division_limit)设置为远低于100。然后，在索引扫描操作期间，频繁命中的有价值节点将在热子列表中保留。
