- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/constraint-primary-key.html](https://dev.mysql.com/doc/refman/8.0/en/constraint-primary-key.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/constraint-primary-key.html](https://dev.mysql.com/doc/refman/8.0/en/constraint-primary-key.html)
- en: 1.6.3.1 PRIMARY KEY and UNIQUE Index Constraints
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 1.6.3.1 主键和唯一索引约束
- en: Normally, errors occur for data-change statements (such as [`INSERT`](insert.html
    "15.2.7 INSERT Statement") or [`UPDATE`](update.html "15.2.17 UPDATE Statement"))
    that would violate primary-key, unique-key, or foreign-key constraints. If you
    are using a transactional storage engine such as `InnoDB`, MySQL automatically
    rolls back the statement. If you are using a nontransactional storage engine,
    MySQL stops processing the statement at the row for which the error occurred and
    leaves any remaining rows unprocessed.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，数据更改语句（如 [`INSERT`](insert.html "15.2.7 INSERT Statement") 或 [`UPDATE`](update.html
    "15.2.17 UPDATE Statement")）可能违反主键、唯一键或外键约束而导致错误。如果你使用事务性存储引擎如 `InnoDB`，MySQL
    会自动回滚该语句。如果你使用非事务性存储引擎，MySQL 会在发生错误的行处停止处理该语句，并留下任何未处理的行。
- en: MySQL supports an `IGNORE` keyword for [`INSERT`](insert.html "15.2.7 INSERT
    Statement"), [`UPDATE`](update.html "15.2.17 UPDATE Statement"), and so forth.
    If you use it, MySQL ignores primary-key or unique-key violations and continues
    processing with the next row. See the section for the statement that you are using
    ([Section 15.2.7, “INSERT Statement”](insert.html "15.2.7 INSERT Statement"),
    [Section 15.2.17, “UPDATE Statement”](update.html "15.2.17 UPDATE Statement"),
    and so forth).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 支持 `IGNORE` 关键字用于 [`INSERT`](insert.html "15.2.7 INSERT Statement")、[`UPDATE`](update.html
    "15.2.17 UPDATE Statement") 等语句。如果使用它，MySQL 会忽略主键或唯一键违规，并继续处理下一行。请参阅你正在使用的语句的部分（[15.2.7 “INSERT
    Statement”](insert.html "15.2.7 INSERT Statement")，[15.2.17 “UPDATE Statement”](update.html
    "15.2.17 UPDATE Statement") 等）。
- en: You can get information about the number of rows actually inserted or updated
    with the [`mysql_info()`](/doc/c-api/8.0/en/mysql-info.html) C API function. You
    can also use the [`SHOW WARNINGS`](show-warnings.html "15.7.7.42 SHOW WARNINGS
    Statement") statement. See [mysql_info()](/doc/c-api/8.0/en/mysql-info.html),
    and [Section 15.7.7.42, “SHOW WARNINGS Statement”](show-warnings.html "15.7.7.42 SHOW
    WARNINGS Statement").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 [`mysql_info()`](/doc/c-api/8.0/en/mysql-info.html) C API 函数获取实际插入或更新的行数信息。你也可以使用
    [`SHOW WARNINGS`](show-warnings.html "15.7.7.42 SHOW WARNINGS Statement") 语句。参见
    [mysql_info()](/doc/c-api/8.0/en/mysql-info.html)，以及 [15.7.7.42 “SHOW WARNINGS
    Statement”](show-warnings.html "15.7.7.42 SHOW WARNINGS Statement")。
- en: '`InnoDB` and `NDB` tables support foreign keys. See [Section 1.6.3.2, “FOREIGN
    KEY Constraints”](constraint-foreign-key.html "1.6.3.2 FOREIGN KEY Constraints").'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB` 和 `NDB` 表支持外键。参见 [1.6.3.2 “外键约束”](constraint-foreign-key.html "1.6.3.2 FOREIGN
    KEY Constraints")。'
