- en: 'A.10 MySQL 8.0 FAQ: NDB Cluster'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'A.10 MySQL 8.0 FAQ: NDB Cluster'
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-mysql-cluster.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-mysql-cluster.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-mysql-cluster.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-mysql-cluster.html)
- en: In the following section, we answer questions that are frequently asked about
    MySQL NDB Cluster and the [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") storage engine.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们回答了关于MySQL NDB Cluster和[`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0")存储引擎经常被问到的问题。
- en: A.10.1\. [Which versions of the MySQL software support NDB Cluster? Do I have
    to compile from source?](faqs-mysql-cluster.html#faq-cluster-which-versions-support-cluster)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.1\. [MySQL软件的哪些版本支持NDB Cluster？我需要从源代码编译吗？](faqs-mysql-cluster.html#faq-cluster-which-versions-support-cluster)
- en: A.10.2\. [What do “NDB” and “NDBCLUSTER” mean?](faqs-mysql-cluster.html#faq-cluster-what-is-ndb)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.2\. [“NDB”和“NDBCLUSTER”是什么意思？](faqs-mysql-cluster.html#faq-cluster-what-is-ndb)
- en: A.10.3\. [What is the difference between using NDB Cluster versus using MySQL
    Replication?](faqs-mysql-cluster.html#faq-cluster-what-cluster-vs-replication)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.3\. [使用NDB Cluster与使用MySQL复制有什么区别？](faqs-mysql-cluster.html#faq-cluster-what-cluster-vs-replication)
- en: A.10.4\. [Do I need any special networking to run NDB Cluster? How do computers
    in a cluster communicate?](faqs-mysql-cluster.html#faq-cluster-how-cluster-network-need)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.4\. [运行NDB Cluster需要特殊的网络设置吗？集群中的计算机如何通信？](faqs-mysql-cluster.html#faq-cluster-how-cluster-network-need)
- en: A.10.5\. [How many computers do I need to run an NDB Cluster, and why?](faqs-mysql-cluster.html#faq-cluster-what-min-hosts-cluster)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.5\. [运行NDB Cluster需要多少台计算机，以及为什么？](faqs-mysql-cluster.html#faq-cluster-what-min-hosts-cluster)
- en: A.10.6\. [What do the different computers do in an NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-what-hosts-do-clustering)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.6\. [NDB Cluster中的不同计算机有什么作用？](faqs-mysql-cluster.html#faq-cluster-what-hosts-do-clustering)
- en: A.10.7\. [When I run the SHOW command in the NDB Cluster management client,
    I see a line of output that looks like this:](faqs-mysql-cluster.html#faq-cluster-what-show-nodegroup-star)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.7\. [当我在NDB Cluster管理客户端中运行SHOW命令时，我看到一行输出看起来像这样：](faqs-mysql-cluster.html#faq-cluster-what-show-nodegroup-star)
- en: A.10.8\. [With which operating systems can I use NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-which-os-clustering)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.8\. [我可以在哪些操作系统上使用NDB Cluster？](faqs-mysql-cluster.html#faq-cluster-which-os-clustering)
- en: A.10.9\. [What are the hardware requirements for running NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-what-cluster-requirements)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.9\. [运行NDB Cluster的硬件要求是什么？](faqs-mysql-cluster.html#faq-cluster-what-cluster-requirements)
- en: A.10.10\. [How much RAM do I need to use NDB Cluster? Is it possible to use
    disk memory at all?](faqs-mysql-cluster.html#faq-cluster-what-memory-needed-cluster)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.10\. [我需要多少RAM才能使用NDB Cluster？是否可以使用磁盘内存？](faqs-mysql-cluster.html#faq-cluster-what-memory-needed-cluster)
- en: A.10.11\. [What file systems can I use with NDB Cluster? What about network
    file systems or network shares?](faqs-mysql-cluster.html#faq-cluster-what-cluster-file-systems)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.11\. [NDB Cluster可以使用哪些文件系统？网络文件系统或网络共享呢？](faqs-mysql-cluster.html#faq-cluster-what-cluster-file-systems)
- en: A.10.12\. [Can I run NDB Cluster nodes inside virtual machines (such as those
    created by VMWare, VirtualBox, Parallels, or Xen)?](faqs-mysql-cluster.html#faq-cluster-can-cluster-vm)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.12\. [我可以在虚拟机中运行NDB Cluster节点吗（比如VMWare、VirtualBox、Parallels或Xen创建的）？](faqs-mysql-cluster.html#faq-cluster-can-cluster-vm)
- en: A.10.13\. [I am trying to populate an NDB Cluster database. The loading process
    terminates prematurely and I get an error message like this one:](faqs-mysql-cluster.html#faq-cluster-why-error-1114)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.13\. [我正在填充NDB Cluster数据库。加载过程提前终止，我收到了这样的错误消息：](faqs-mysql-cluster.html#faq-cluster-why-error-1114)
- en: A.10.14\. [NDB Cluster uses TCP/IP. Does this mean that I can run it over the
    Internet, with one or more nodes in remote locations?](faqs-mysql-cluster.html#faq-cluster-can-cluster-remote-network)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.14\. [NDB Cluster使用TCP/IP。这是否意味着我可以在Internet上运行它，远程位置有一个或多个节点？](faqs-mysql-cluster.html#faq-cluster-can-cluster-remote-network)
- en: A.10.15\. [Do I have to learn a new programming or query language to use NDB
    Cluster?](faqs-mysql-cluster.html#faq-cluster-what-language-needed-cluster)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.15\. [我是否需要学习新的编程或查询语言来使用NDB Cluster？](faqs-mysql-cluster.html#faq-cluster-what-language-needed-cluster)
- en: A.10.16\. [What programming languages and APIs are supported by NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-what-api-cluster-support)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.16\. [NDB Cluster支持哪些编程语言和API？](faqs-mysql-cluster.html#faq-cluster-what-api-cluster-support)
- en: A.10.17\. [Does NDB Cluster include any management tools?](faqs-mysql-cluster.html#faq-cluster-what-cluster-management-tools)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.17\. [NDB Cluster包含哪些管理工具？](faqs-mysql-cluster.html#faq-cluster-what-cluster-management-tools)
- en: A.10.18\. [How do I find out what an error or warning message means when using
    NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-what-cluster-errors-are)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.18\. [在使用NDB Cluster时，如何查找错误或警告消息的含义？](faqs-mysql-cluster.html#faq-cluster-what-cluster-errors-are)
- en: A.10.19\. [Is NDB Cluster transaction-safe? What isolation levels are supported?](faqs-mysql-cluster.html#faq-cluster-is-cluster-transaction-safe)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.19\. [NDB Cluster是否支持事务安全？支持哪些隔离级别？](faqs-mysql-cluster.html#faq-cluster-is-cluster-transaction-safe)
- en: A.10.20\. [What storage engines are supported by NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-what-storage-engines-cluster)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.20\. [NDB Cluster支持哪些存储引擎？](faqs-mysql-cluster.html#faq-cluster-what-storage-engines-cluster)
- en: A.10.21\. [In the event of a catastrophic failure— for example, the whole city
    loses power and my UPS fails—would I lose all my data?](faqs-mysql-cluster.html#faq-cluster-is-data-loss-no-power)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.21\. [在发生灾难性故障时——例如，整个城市停电并且我的不间断电源失效——我会丢失所有数据吗？](faqs-mysql-cluster.html#faq-cluster-is-data-loss-no-power)
- en: A.10.22\. [Is it possible to use FULLTEXT indexes with NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-can-cluster-fullindex)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.22\. [是否可以在NDB Cluster中使用全文索引？](faqs-mysql-cluster.html#faq-cluster-can-cluster-fullindex)
- en: A.10.23\. [Can I run multiple nodes on a single computer?](faqs-mysql-cluster.html#faq-cluster-can-multinode-cluster-one-host)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.23\. [我可以在单台计算机上运行多个节点吗？](faqs-mysql-cluster.html#faq-cluster-can-multinode-cluster-one-host)
- en: A.10.24\. [Can I add data nodes to an NDB Cluster without restarting it?](faqs-mysql-cluster.html#faq-cluster-how-add-nodes-no-restart)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.24\. [我可以在不重启的情况下向NDB Cluster添加数据节点吗？](faqs-mysql-cluster.html#faq-cluster-how-add-nodes-no-restart)
- en: A.10.25\. [Are there any limitations that I should be aware of when using NDB
    Cluster?](faqs-mysql-cluster.html#faq-cluster-what-cluster-limitations)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.25\. [在使用NDB Cluster时，有哪些限制我应该注意？](faqs-mysql-cluster.html#faq-cluster-what-cluster-limitations)
- en: A.10.26\. [Does NDB Cluster support foreign keys?](faqs-mysql-cluster.html#faq-cluster-have-foreign-keys-cluster)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.26\. [NDB Cluster支持外键吗？](faqs-mysql-cluster.html#faq-cluster-have-foreign-keys-cluster)
- en: A.10.27\. [How do I import an existing MySQL database into an NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-how-import-db-cluster)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.27\. [如何将现有的MySQL数据库导入NDB Cluster？](faqs-mysql-cluster.html#faq-cluster-how-import-db-cluster)
- en: A.10.28\. [How do NDB Cluster nodes communicate with one another?](faqs-mysql-cluster.html#faq-cluster-how-nodes-communicate)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.28\. [NDB Cluster节点如何相互通信？](faqs-mysql-cluster.html#faq-cluster-how-nodes-communicate)
- en: A.10.29\. [What is an arbitrator?](faqs-mysql-cluster.html#faq-cluster-what-is-arbitrator)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.29\. [什么是仲裁者？](faqs-mysql-cluster.html#faq-cluster-what-is-arbitrator)
- en: A.10.30\. [What data types are supported by NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-what-types-cluster-support)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.30\. [NDB Cluster支持哪些数据类型？](faqs-mysql-cluster.html#faq-cluster-what-types-cluster-support)
- en: A.10.31\. [How do I start and stop NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-how-start-stop-cluster)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.31\. [如何启动和停止NDB Cluster？](faqs-mysql-cluster.html#faq-cluster-how-start-stop-cluster)
- en: A.10.32\. [What happens to NDB Cluster data when the cluster is shut down?](faqs-mysql-cluster.html#faq-cluster-what-shutdown-do-data)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.32\. [当集群关闭时，NDB Cluster数据会发生什么？](faqs-mysql-cluster.html#faq-cluster-what-shutdown-do-data)
- en: A.10.33\. [Is it a good idea to have more than one management node for an NDB
    Cluster?](faqs-mysql-cluster.html#faq-cluster-have-multiple-node-managers)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.33\. [为NDB Cluster拥有多个管理节点是个好主意吗？](faqs-mysql-cluster.html#faq-cluster-have-multiple-node-managers)
- en: A.10.34\. [Can I mix different kinds of hardware and operating systems in one
    NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-have-different-cluster-hosts)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.34\. [我可以在一个NDB Cluster中混合不同类型的硬件和操作系统吗？](faqs-mysql-cluster.html#faq-cluster-have-different-cluster-hosts)
- en: A.10.35\. [Can I run two data nodes on a single host? Two SQL nodes?](faqs-mysql-cluster.html#faq-cluster-have-multiple-nodes-one-host)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.35\. [我可以在单个主机上运行两个数��节点吗？两个SQL节点？](faqs-mysql-cluster.html#faq-cluster-have-multiple-nodes-one-host)
- en: A.10.36\. [Can I use host names with NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-have-host-names-cluster)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.36\. [我可以在NDB Cluster中使用主机名吗？](faqs-mysql-cluster.html#faq-cluster-have-host-names-cluster)
- en: A.10.37\. [Does NDB Cluster support IPv6?](faqs-mysql-cluster.html#faq-cluster-have-ipv6-support-cluster)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.37\. [NDB Cluster支持IPv6吗？](faqs-mysql-cluster.html#faq-cluster-have-ipv6-support-cluster)
- en: A.10.38\. [How do I handle MySQL users in an NDB Cluster having multiple MySQL
    servers?](faqs-mysql-cluster.html#faq-cluster-have-multiple-users-servers-cluster)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.38\. [在NDB Cluster中如何处理具有多个MySQL服务器的MySQL用户？](faqs-mysql-cluster.html#faq-cluster-have-multiple-users-servers-cluster)
- en: A.10.39\. [How do I continue to send queries in the event that one of the SQL
    nodes fails?](faqs-mysql-cluster.html#faq-cluster-how-continue-after-node-error)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.39\. [在一个SQL节点失败的情况下，如何继续发送查询？](faqs-mysql-cluster.html#faq-cluster-how-continue-after-node-error)
- en: A.10.40\. [How do I back up and restore an NDB Cluster?](faqs-mysql-cluster.html#faq-cluster-how-backup-restore-cluster)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.40\. [如何备份和恢复NDB Cluster？](faqs-mysql-cluster.html#faq-cluster-how-backup-restore-cluster)
- en: A.10.41\. [What is an “angel process”?](faqs-mysql-cluster.html#faq-cluster-what-angel-process)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: A.10.41\. [什么是“天使进程”？](faqs-mysql-cluster.html#faq-cluster-what-angel-process)
- en: '| **A.10.1.** | Which versions of the MySQL software support NDB Cluster? Do
    I have to compile from source? |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.1.** | MySQL软件的哪些版本支持NDB Cluster？我是否必须从源代码编译？ |'
- en: '|  | NDB Cluster is not supported in standard MySQL Server releases. Instead,
    MySQL NDB Cluster is provided as a separate product. Available NDB Cluster release
    series include the following:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | NDB Cluster不支持标准MySQL Server版本。相反，MySQL NDB Cluster作为一个独立产品提供。可用的NDB Cluster发布系列包括以下内容：'
- en: '**NDB Cluster 7.3 / NDB Cluster 7.4. ** These two series are no longer maintained
    or supported for new deployments. Users of NDB Cluster 7.3 or 7.4 should upgrade
    to NDB 7.5 or newer as soon as possible. We recommend that new deployments use
    the latest NDB Cluster 8.0 release.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB Cluster 7.3 / NDB Cluster 7.4. ** 这两个系列不再维护或支持新部署。NDB Cluster 7.3或7.4的用户应尽快升级到NDB
    7.5或更新版本。我们建议新部署使用最新的NDB Cluster 8.0版本。'
- en: '**NDB Cluster 7.5. ** This series is a previous General Availability (GA) version
    of NDB Cluster, still available for production use, although we recommend that
    new deployments use the latest NDB Cluster 8.0 release. The latest NDB Cluster
    7.5 releases can be obtained from [https://dev.mysql.com/downloads/cluster/](https://dev.mysql.com/downloads/cluster/).'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB Cluster 7.5. ** 这个系列是NDB Cluster的以前的通用可用性（GA）版本，仍然可用于生产使用，尽管我们建议新部署使用最新的NDB
    Cluster 8.0版本。最新的NDB Cluster 7.5版本可以从[https://dev.mysql.com/downloads/cluster/](https://dev.mysql.com/downloads/cluster/)获取。'
- en: '**NDB Cluster 7.6. ** This series is a previous General Availability (GA) version
    of NDB Cluster, still available for production use, although we recommend that
    new deployments use the latest NDB Cluster 8.0 release. The latest NDB Cluster
    7.6 releases can be obtained from [https://dev.mysql.com/downloads/cluster/](https://dev.mysql.com/downloads/cluster/).'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB Cluster 7.6. ** 这个系列是NDB Cluster的以前的通用可用性（GA）版本，仍然可用于生产使用，尽管我们建议新部署使用最新的NDB
    Cluster 8.0版本。最新的NDB Cluster 7.6版本可以从[https://dev.mysql.com/downloads/cluster/](https://dev.mysql.com/downloads/cluster/)获取。'
- en: '**NDB Cluster 8.0. ** This series is the most recent General Availability (GA)
    version of NDB Cluster, based on version 8.0 of the [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine and MySQL Server 8.0\. NDB
    Cluster 8.0 is available for production use; new deployments intended for production
    should use the latest GA release in this series, which is currently NDB Cluster
    8.0.35\. You can obtain the most recent NDB Cluster 8.0 release from [https://dev.mysql.com/downloads/cluster/](https://dev.mysql.com/downloads/cluster/).
    For information about new features and other important changes in this series,
    see [Section 25.2.4, “What is New in MySQL NDB Cluster 8.0”](mysql-cluster-what-is-new.html
    "25.2.4 What is New in MySQL NDB Cluster 8.0").'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB Cluster 8.0. ** 这个系列是NDB Cluster的最新通用可用性（GA）版本，基于[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")存储引擎的8.0版本和MySQL Server 8.0\. NDB Cluster 8.0可用于生产使用；新的用于生产的部署应该使用此系列中最新的GA版本，目前是NDB
    Cluster 8.0.35\. 您可以从[https://dev.mysql.com/downloads/cluster/](https://dev.mysql.com/downloads/cluster/)获取最新的NDB
    Cluster 8.0版本。有关此系列中的新功能和其他重要更改的信息，请参见[第25.2.4节，“MySQL NDB Cluster 8.0中的新功能”](mysql-cluster-what-is-new.html
    "25.2.4 MySQL NDB Cluster 8.0中的新功能")。'
- en: 'You can obtain and compile NDB Cluster from source (see [Section 25.3.1.4,
    “Building NDB Cluster from Source on Linux”](mysql-cluster-install-linux-source.html
    "25.3.1.4 Building NDB Cluster from Source on Linux"), and [Section 25.3.2.2,
    “Compiling and Installing NDB Cluster from Source on Windows”](mysql-cluster-install-windows-source.html
    "25.3.2.2 Compiling and Installing NDB Cluster from Source on Windows")), but
    for all but the most specialized cases, we recommend using one of the following
    installers provided by Oracle that is appropriate to your operating platform and
    circumstances:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从源代码获取并编译NDB Cluster（参见[第25.3.1.4节，“在Linux上从源代码构建NDB Cluster”](mysql-cluster-install-linux-source.html
    "25.3.1.4 在Linux上从源代码构建NDB Cluster")，以及[第25.3.2.2节，“在Windows上从源代码编译和安装NDB Cluster”](mysql-cluster-install-windows-source.html
    "25.3.2.2 在Windows上从源代码编译和安装NDB Cluster")），但除非是最专业的情况，我们建议使用Oracle提供的适合您操作平台和情况的以下安装程序：
- en: Linux [binary release](mysql-cluster-install-linux-binary.html "25.3.1.1 Installing
    an NDB Cluster Binary Release on Linux") (`tar.gz` file)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux [二进制版本](mysql-cluster-install-linux-binary.html "25.3.1.1 在 Linux 上安装
    NDB Cluster 二进制版本")（`tar.gz` 文件）
- en: Linux [RPM package](mysql-cluster-install-linux-rpm.html "25.3.1.2 Installing
    NDB Cluster from RPM")
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux [RPM 软件包](mysql-cluster-install-linux-rpm.html "25.3.1.2 从 RPM 安装 NDB
    Cluster")
- en: Linux [`.deb` file](mysql-cluster-install-debian.html "25.3.1.3 Installing NDB
    Cluster Using .deb Files")
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux [`.deb` 文件](mysql-cluster-install-debian.html "25.3.1.3 使用 .deb 文件安装 NDB
    Cluster")
- en: Windows [binary “no-install” release](mysql-cluster-install-windows-binary.html
    "25.3.2.1 Installing NDB Cluster on Windows from a Binary Release")
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows [二进制“无需安装”版本](mysql-cluster-install-windows-binary.html "25.3.2.1 从二进制版本在
    Windows 上安装 NDB Cluster")
- en: Windows [MSI Installer](mysql-installer.html "2.3.3 MySQL Installer for Windows")
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows [MSI 安装程序](mysql-installer.html "2.3.3 Windows 上的 MySQL 安装程序")
- en: Installation packages may also be available from your platform's package management
    system.You can determine whether your MySQL Server has [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") support using one of the statements `SHOW
    VARIABLES LIKE 'have_%'`, [`SHOW ENGINES`](show-engines.html "15.7.7.16 SHOW ENGINES
    Statement"), or [`SHOW PLUGINS`](show-plugins.html "15.7.7.25 SHOW PLUGINS Statement").
    |
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 安装包也可能来自您平台的软件包管理系统。您可以使用以下语句之一来确定您的 MySQL 服务器是否支持 [`NDB`](mysql-cluster.html
    "第 25 章 MySQL NDB Cluster 8.0")：`SHOW VARIABLES LIKE 'have_%'`、[`SHOW ENGINES`](show-engines.html
    "15.7.7.16 SHOW ENGINES 语句") 或 [`SHOW PLUGINS`](show-plugins.html "15.7.7.25 SHOW
    PLUGINS 语句")。 |
- en: '| **A.10.2.** | What do “NDB” and “NDBCLUSTER” mean? |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.2.** | “NDB” 和 “NDBCLUSTER” 是什么意思？ |'
- en: '|  | “NDB” stands for “**N**etwork **D**ata**b**ase”. `NDB` and `NDBCLUSTER`
    are both names for the storage engine that enables clustering support with MySQL.
    `NDB` is preferred, but either name is correct. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '|  | “NDB” 代表 “**N**etwork **D**ata**b**ase”。`NDB` 和 `NDBCLUSTER` 都是启用 MySQL
    集群支持的存储引擎的名称。`NDB` 是首选，但两个名称都是正确的。 |'
- en: '| **A.10.3.** | What is the difference between using NDB Cluster versus using
    MySQL Replication? |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.3.** | 使用 NDB Cluster 与使用 MySQL 复制有什么区别？ |'
- en: '|  | In traditional MySQL replication, a source MySQL server updates one or
    more replicas. Transactions are committed sequentially, and a slow transaction
    can cause the replica to lag behind the source. This means that if the source
    fails, it is possible that the replica might not have recorded the last few transactions.
    If a transaction-safe engine such as [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine") is being used, a transaction is either completed on the
    replica or not applied at all, but replication does not guarantee that all data
    on the source and the replica remains consistent at all times. In NDB Cluster,
    all data nodes are kept in synchrony, and a transaction committed by any one data
    node is committed for all data nodes. In the event of a data node failure, all
    remaining data nodes remain in a consistent state.In short, whereas standard MySQL
    replication is asynchronous, NDB Cluster is synchronous.Asynchronous replication
    is also available in NDB Cluster. NDB Cluster Replication (also sometimes known
    as “geo-replication”) includes the capability to replicate both between two NDB
    Clusters, and from an NDB Cluster to a non-Cluster MySQL server. See [Section 25.7,
    “NDB Cluster Replication”](mysql-cluster-replication.html "25.7 NDB Cluster Replication").
    |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '|  | 在传统的 MySQL 复制中，源 MySQL 服务器更新一个或多个副本。事务按顺序提交，一个慢事务可能导致副本落后于源服务器。这意味着如果源服务器失败，副本可能没有记录最后几个事务。如果正在使用事务安全引擎如
    [`InnoDB`](innodb-storage-engine.html "第 17 章 InnoDB 存储引擎")，事务要么在副本上完成，要么根本不被应用，但复制不能保证源服务器和副本上的所有数据始终保持一致。在
    NDB Cluster 中，所有数据节点保持同步，任何一个数据节点提交的事务对所有数据节点都是提交的。在数据节点故障的情况下，所有剩余的数据节点保持一致。简而言之，标准
    MySQL 复制是异步的，而 NDB Cluster 是同步的。NDB Cluster 也支持异步复制。NDB Cluster 复制（有时也称为“地理复制”）包括在两个
    NDB Cluster 之间复制，以及从 NDB Cluster 到非集群 MySQL 服务器的复制。参见 [第 25.7 节 “NDB Cluster 复制”](mysql-cluster-replication.html
    "25.7 NDB Cluster Replication")。 |'
- en: '| **A.10.4.** | Do I need any special networking to run NDB Cluster? How do
    computers in a cluster communicate? |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.4.** | 运行 NDB Cluster 需要特殊的网络设置吗？集群中的计算机如何通信？ |'
- en: '|  | NDB Cluster is intended to be used in a high-bandwidth environment, with
    computers connecting using TCP/IP. Its performance depends directly upon the connection
    speed between the cluster''s computers. The minimum connectivity requirements
    for NDB Cluster include a typical 100-megabit Ethernet network or the equivalent.
    We recommend you use gigabit Ethernet whenever available. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '|  | NDB Cluster 旨在在高带宽环境中使用，计算机通过 TCP/IP 连接。其性能直接取决于集群计算机之间的连接速度。NDB Cluster
    的最低连接要求包括典型的 100 兆位以太网网络或等效网络。我们建议您在可用时使用千兆以太网。 |'
- en: '| **A.10.5.** | How many computers do I need to run an NDB Cluster, and why?
    |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.5.** | 运行 NDB Cluster 需要多少台计算机，以及为什么？ |'
- en: '|  | A minimum of three computers is required to run a viable cluster. However,
    the minimum *recommended* number of computers in an NDB Cluster is four: one each
    to run the management and SQL nodes, and two computers to serve as data nodes.
    The purpose of the two data nodes is to provide redundancy; the management node
    must run on a separate machine to guarantee continued arbitration services in
    the event that one of the data nodes fails.To provide increased throughput and
    high availability, you should use multiple SQL nodes (MySQL Servers connected
    to the cluster). It is also possible (although not strictly necessary) to run
    multiple management servers. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '|  | 至少需要三台计算机才能运行一个可行的集群。然而，在 NDB Cluster 中，最低*推荐*计算机数量为四台：一台用于运行管理和 SQL 节点，另外两台用作数据节点。这两个数据节点的目的是提供冗余性；管理节点必须在单独的机器上运行，以确保在其中一个数据节点发生故障时继续提供仲裁服务。为了提供增加的吞吐量和高可用性，您应该使用多个
    SQL 节点（连接到集群的 MySQL 服务器）。也可以（虽然不是绝对必要）运行多个管理服务器。 |'
- en: '| **A.10.6.** | What do the different computers do in an NDB Cluster? |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.6.** | NDB Cluster 中的不同计算机扮演什么角色？ |'
- en: '|  | An NDB Cluster has both a physical and logical organization, with computers
    being the physical elements. The logical or functional elements of a cluster are
    referred to as nodes, and a computer housing a cluster node is sometimes referred
    to as a cluster host. There are three types of nodes, each corresponding to a
    specific role within the cluster. These are:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | NDB Cluster 既有物理组织，也有逻辑组织，计算机是物理元素。集群的逻辑或功能元素称为节点，容纳集群节点的计算机有时被称为集群主机。有三种类型的节点，每种对应于集群中的特定角色。这些是：'
- en: '**Management node. ** This node provides management services for the cluster
    as a whole, including startup, shutdown, backups, and configuration data for the
    other nodes. The management node server is implemented as the application [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon"); the management
    client used to control NDB Cluster is [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client"). See [Section 25.5.4, “ndb_mgmd
    — The NDB Cluster Management Server Daemon”](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon"), and [Section 25.5.5,
    “ndb_mgm — The NDB Cluster Management Client”](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client"), for information about these
    programs.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理节点。** 此节点为整个集群提供管理服务，包括启动、关闭、备份和其他节点的配置数据。管理节点服务器实现为应用程序[**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — NDB Cluster 管理服务器守护程序")；用于控制 NDB Cluster 的管理客户端是[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — NDB Cluster 管理客户端")。有关这些程序的信息，请参见[第 25.5.4 节，“ndb_mgmd — NDB
    Cluster 管理服务器守护程序”](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd — NDB
    Cluster 管理服务器守护程序")，以及[第 25.5.5 节，“ndb_mgm — NDB Cluster 管理客户端”](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — NDB Cluster 管理客户端")。'
- en: '**Data node. ** This type of node stores and replicates data. Data node functionality
    is handled by instances of the [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB
    Cluster 8.0") data node process [**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd
    — The NDB Cluster Data Node Daemon"). For more information, see [Section 25.5.1,
    “ndbd — The NDB Cluster Data Node Daemon”](mysql-cluster-programs-ndbd.html "25.5.1 ndbd
    — The NDB Cluster Data Node Daemon").'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据节点。** 这种类型的节点存储和复制数据。数据节点功能由[`NDB`](mysql-cluster.html "第 25 章 MySQL NDB
    Cluster 8.0")数据节点进程[**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd —
    NDB Cluster 数据节点守护程序")的实例处理。有关更多信息，请参见[第 25.5.1 节，“ndbd — NDB Cluster 数据节点守护程序”](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — NDB Cluster 数据节点守护程序")。'
- en: '**SQL node. ** This is simply an instance of MySQL Server ([**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")) that is built with support for the [`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine and started with the `--ndb-cluster`
    option to enable the engine and the `--ndb-connectstring` option to enable it
    to connect to an NDB Cluster management server. For more about these options,
    see [Section 25.4.3.9.1, “MySQL Server Options for NDB Cluster”](mysql-cluster-options-variables.html#mysql-cluster-program-options-mysqld
    "25.4.3.9.1 MySQL Server Options for NDB Cluster").'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL 节点。** 这只是一个构建有对[`NDBCLUSTER`](mysql-cluster.html)存储引擎支持的 MySQL 服务器实例（[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")），并使用`--ndb-cluster`选项启动以启用引擎和`--ndb-connectstring`选项以使其连接到
    NDB Cluster 管理服务器。有关这些选项的更多信息，请参见[Section 25.4.3.9.1, “MySQL Server Options for
    NDB Cluster”](mysql-cluster-options-variables.html#mysql-cluster-program-options-mysqld
    "25.4.3.9.1 MySQL Server Options for NDB Cluster")。'
- en: Note
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'An API node is any application that makes direct use of Cluster data nodes
    for data storage and retrieval. An SQL node can thus be considered a type of API
    node that uses a MySQL Server to provide an SQL interface to the Cluster. You
    can write such applications (that do not depend on a MySQL Server) using the NDB
    API, which supplies a direct, object-oriented transaction and scanning interface
    to NDB Cluster data; see [NDB Cluster API Overview: The NDB API](/doc/ndbapi/en/overview-ndb-api.html),
    for more information.'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: API 节点是任何直接使用集群数据节点进行数据存储和检索的应用程序。因此，SQL 节点可以被视为一种使用 MySQL 服务器提供 SQL 接口给集群的
    API 节点。您可以使用 NDB API 编写这种应用程序（不依赖于 MySQL 服务器），NDB API 提供了直接的、面向对象的事务和扫描接口给 NDB
    Cluster 数据；更多信息请参见[NDB Cluster API 概述：NDB API](/doc/ndbapi/en/overview-ndb-api.html)。
- en: '|'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **A.10.7.** | When I run the `SHOW` command in the NDB Cluster management
    client, I see a line of output that looks like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '| **A.10.7.** | 当我在 NDB Cluster 管理客户端中运行`SHOW`命令时，我看到一行输出看起来像这样：'
- en: '[PRE0]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: What does the `*` mean? How is this node different from the others? |
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`*`代表什么？这个节点与其他节点有什么不同？'
- en: '|  | The simplest answer is, “It''s not something you can control, and it''s
    nothing that you need to worry about in any case, unless you''re a software engineer
    writing or analyzing the NDB Cluster source code”.If you don''t find that answer
    satisfactory, here''s a longer and more technical version:A number of mechanisms
    in NDB Cluster require distributed coordination among the data nodes. These distributed
    algorithms and protocols include global checkpointing, DDL (schema) changes, and
    node restart handling. To make this coordination simpler, the data nodes “elect”
    one of their number to act as leader. There is no user-facing mechanism for influencing
    this selection, which is completely automatic; the fact that it *is* automatic
    is a key part of NDB Cluster''s internal architecture.When a node acts as the
    “leader” for any of these mechanisms, it is usually the point of coordination
    for the activity, and the other nodes act as “followers”, carrying out their parts
    of the activity as directed by the leader. If the node acting as leader fails,
    then the remaining nodes elect a new leader. Tasks in progress that were being
    coordinated by the old leader may either fail or be continued by the new leader,
    depending on the actual mechanism involved.It is possible for some of these different
    mechanisms and protocols to have different leader nodes, but in general the same
    leader is chosen for all of them. The node indicated as the leader in the output
    of [`SHOW`](mysql-cluster-mgm-client-commands.html#ndbclient-show) in the management
    client is known internally as the [`DICT`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbdict.html)
    manager, responsible for coordinating DDL and metadata activity.NDB Cluster is
    designed in such a way that the choice of leader has no discernible effect outside
    the cluster itself. For example, the current leader does not have significantly
    higher CPU or resource usage than the other data nodes, and failure of the leader
    should not have a significantly different impact on the cluster than the failure
    of any other data node. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '|  | 最简单的答案是，“这不是你可以控制的东西，无论如何也不需要担心，除非你是一名编写或分析NDB Cluster源代码的软件工程师”。如果你觉得这个答案不够满意，这里有一个更长、更技术性的版本：NDB
    Cluster中的许多机制需要数据节点之间的分布式协调。这些分布式算法和协议包括全局检查点、DDL（模式）更改和节点重启处理。为了使这种协调更简单，数据节点“选举”其中一个成员作为领导者。没有用户可影响此选择的机制，这完全是自动的；自动性是NDB
    Cluster内部架构的关键部分。当一个节点作为任何这些机制的“领导者”时，通常是活动的协调点，其他节点作为“跟随者”，按照领导者的指示执行他们的活动部分。如果充当领导者的节点失败，剩余节点将选举新的领导者。由旧领导者协调的正在进行的任务可能会失败，也可能由新领导者继续，这取决于实际涉及的机制。一些不同的机制和协议可能有不同的领导节点，但通常为它们选择相同的领导者。在管理客户端的[`SHOW`](mysql-cluster-mgm-client-commands.html#ndbclient-show)输出中指示为领导者的节点在内部被称为[`DICT`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbdict.html)管理器，负责协调DDL和元数据活动。NDB
    Cluster设计成领导者的选择对集群外部没有明显影响。例如，当前领导者的CPU或资源使用率并不比其他数据节点高出很多，领导者的失败对集群的影响不应与任何其他数据节点的失败有明显不同。
    |'
- en: '| **A.10.8.** | With which operating systems can I use NDB Cluster? |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.8.** | 我可以在哪些操作系统上使用NDB Cluster？ |'
- en: '|  | NDB Cluster is supported on most Unix-like operating systems. NDB Cluster
    is also supported in production settings on Microsoft Windows operating systems.For
    more detailed information concerning the level of support which is offered for
    NDB Cluster on various operating system versions, operating system distributions,
    and hardware platforms, please refer to [https://www.mysql.com/support/supportedplatforms/cluster.html](https://www.mysql.com/support/supportedplatforms/cluster.html).
    |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '|  | NDB Cluster支持大多数类Unix操作系统。NDB Cluster也在Microsoft Windows操作系统上的生产环境中得到支持。有关NDB
    Cluster在各种操作系统版本、操作系统发行版和硬件平台上提供的支持级别的更详细信息，请参考[https://www.mysql.com/support/supportedplatforms/cluster.html](https://www.mysql.com/support/supportedplatforms/cluster.html)。
    |'
- en: '| **A.10.9.** | What are the hardware requirements for running NDB Cluster?
    |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.9.** | 运行NDB Cluster的硬件要求是什么？ |'
- en: '|  | NDB Cluster should run on any platform for which [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0")-enabled binaries are available. For data nodes
    and API nodes, faster CPUs and more memory are likely to improve performance,
    and 64-bit CPUs are likely to be more effective than 32-bit processors. There
    must be sufficient memory on machines used for data nodes to hold each node''s
    share of the database (see *How much RAM do I Need?* for more information). For
    a computer which is used only for running the NDB Cluster management server, the
    requirements are minimal; a common desktop PC (or the equivalent) is generally
    sufficient for this task. Nodes can communicate through the standard TCP/IP network
    and hardware. They can also use the high-speed SCI protocol; however, special
    networking hardware and software are required to use SCI (see [Section 25.4.4,
    “Using High-Speed Interconnects with NDB Cluster”](mysql-cluster-interconnects.html
    "25.4.4 Using High-Speed Interconnects with NDB Cluster")). |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '|  | NDB Cluster 应该在任何可用 [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster
    8.0") 启用二进制文件的平台上运行。对于数据节点和 API 节点，更快的 CPU 和更多的内存可能会提高性能，64 位 CPU 可能比 32 位处理器更有效。在用于数据节点的机器上必须有足够的内存来存储每个节点的数据库份额（有关更多信息，请参阅
    *需要多少 RAM？*）。对于仅用于运行 NDB Cluster 管理服务器的计算机，要求很低；通常普通的台式 PC（或等效物）就足够完成这项任务。节点可以通过标准
    TCP/IP 网络和硬件进行通信。它们还可以使用高速 SCI 协议；但是，使用 SCI 需要特殊的网络硬件和软件（请参阅[第 25.4.4 节，“使用 NDB
    Cluster 的高速互连”](mysql-cluster-interconnects.html "25.4.4 使用高速互连与 NDB Cluster")）。
    |'
- en: '| **A.10.10.** | How much RAM do I need to use NDB Cluster? Is it possible
    to use disk memory at all? |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.10.** | 我需要多少 RAM 才能使用 NDB Cluster？是否可以完全使用磁盘内存？ |'
- en: '|  | NDB Cluster was originally implemented as in-memory only, but all versions
    currently available also provide the ability to store NDB Cluster on disk. See
    [Section 25.6.11, “NDB Cluster Disk Data Tables”](mysql-cluster-disk-data.html
    "25.6.11 NDB Cluster Disk Data Tables"), for more information.For in-memory `NDB`
    tables, you can use the following formula for obtaining a rough estimate of how
    much RAM is needed for each data node in the cluster:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | NDB Cluster 最初仅作为内存实现，但当前所有版本也提供了将 NDB Cluster 存储在磁盘上的功能。查看[第 25.6.11
    节，“NDB Cluster 磁盘数据表”](mysql-cluster-disk-data.html "25.6.11 NDB Cluster Disk
    Data Tables")，获取更多信息。对于内存中的 `NDB` 表，您可以使用以下公式来粗略估算集群中每个数据节点所需的 RAM：'
- en: '[PRE1]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To calculate the memory requirements more exactly requires determining, for
    each table in the cluster database, the storage space required per row (see [Section 13.7,
    “Data Type Storage Requirements”](storage-requirements.html "13.7 Data Type Storage
    Requirements"), for details), and multiplying this by the number of rows. You
    must also remember to account for any column indexes as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要更精确地计算内存需求，需要确定集群数据库中每个表的每行所需的存储空间（有关详细信息，请参阅[第 13.7 节，“数据类型存储需求”](storage-requirements.html
    "13.7 数据类型存储需求")），并将其乘以行数。您还必须记住按照以下方式考虑任何列索引：
- en: Each primary key or hash index created for an [`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") table requires 21−25 bytes per record. These
    indexes use `IndexMemory`.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 [`NDBCLUSTER`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0") 表创建的每个主键或哈希索引需要每条记录
    21-25 字节。这些索引使用 `IndexMemory`。
- en: Each ordered index requires 10 bytes storage per record, using `DataMemory`.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个有序索引需要每条记录 10 字节的存储空间，使用 `DataMemory`。
- en: 'Creating a primary key or unique index also creates an ordered index, unless
    this index is created with `USING HASH`. In other words:'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建主键或唯一索引也会创建一个有序索引，除非此索引是使用 `USING HASH` 创建的。换句话说：
- en: A primary key or unique index on a Cluster table normally takes up 31 to 35
    bytes per record.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群表上的主键或唯一索引通常每条记录占用 31 到 35 字节。
- en: However, if the primary key or unique index is created with `USING HASH`, then
    it requires only 21 to 25 bytes per record.
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是，如果主键或唯一索引是使用 `USING HASH` 创建的，则每条记录仅需要 21 到 25 字节。
- en: Creating NDB Cluster tables with `USING HASH` for all primary keys and unique
    indexes generally causes table updates to run more quickly—in some cases by a
    much as 20 to 30 percent faster than updates on tables where `USING HASH` was
    not used in creating primary and unique keys. This is due to the fact that less
    memory is required (because no ordered indexes are created), and that less CPU
    must be utilized (because fewer indexes must be read and possibly updated). However,
    it also means that queries that could otherwise use range scans must be satisfied
    by other means, which can result in slower selects.When calculating Cluster memory
    requirements, you may find useful the [**ndb_size.pl**](mysql-cluster-programs-ndb-size-pl.html
    "25.5.28 ndb_size.pl — NDBCLUSTER Size Requirement Estimator") utility which is
    available in recent MySQL 8.0 releases. This Perl script connects to a current
    (non-Cluster) MySQL database and creates a report on how much space that database
    would require if it used the [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") storage engine. For more information, see [Section 25.5.28,
    “ndb_size.pl — NDBCLUSTER Size Requirement Estimator”](mysql-cluster-programs-ndb-size-pl.html
    "25.5.28 ndb_size.pl — NDBCLUSTER Size Requirement Estimator").It is especially
    important to keep in mind that *every NDB Cluster table must have a primary key*.
    The [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") storage engine
    creates a primary key automatically if none is defined; this primary key is created
    without `USING HASH`.You can determine how much memory is being used for storage
    of NDB Cluster data and indexes at any given time using the `REPORT MEMORYUSAGE`
    command in the [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm
    — The NDB Cluster Management Client") client; see [Section 25.6.1, “Commands in
    the NDB Cluster Management Client”](mysql-cluster-mgm-client-commands.html "25.6.1 Commands
    in the NDB Cluster Management Client"), for more information. In addition, warnings
    are written to the cluster log when 80% of available [`DataMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-datamemory)
    or (prior to NDB 7.6) [`IndexMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-indexmemory)
    is in use, and again when usage reaches 90%, 99%, and 100%. |
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`USING HASH`为所有主键和唯一索引创建NDB Cluster表通常会使表更新速度更快——在某些情况下比未在创建主键和唯一键时使用`USING
    HASH`的表快20到30％。这是因为需要的内存更少（因为没有创建有序索引），并且需要利用的CPU更少（因为需要读取和可能更新的索引更少）。然而，这也意味着否则可以使用范围扫描的查询必须通过其他方式满足，这可能导致选择速度变慢。在计算集群内存需求时，您可能会发现最近MySQL
    8.0版本中提供的[**ndb_size.pl**](mysql-cluster-programs-ndb-size-pl.html "25.5.28 ndb_size.pl
    — NDBCLUSTER Size Requirement Estimator")实用程序很有用。这个Perl脚本连接到当前（非集群）MySQL数据库，并创建一个报告，说明如果该数据库使用[`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0")存储引擎，该数据库将需要多少空间。有关更多信息，请参见[Section 25.5.28,
    “ndb_size.pl — NDBCLUSTER Size Requirement Estimator”](mysql-cluster-programs-ndb-size-pl.html
    "25.5.28 ndb_size.pl — NDBCLUSTER Size Requirement Estimator")。特别重要的是要记住*每个NDB
    Cluster表必须有一个主键*。如果未定义主键，则[`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0")存储引擎会自动创建一个主键；此主键是在不使用`USING HASH`的情况下创建的。您可以使用[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client")客户端中的`REPORT MEMORYUSAGE`命令随时确定NDB
    Cluster数据和索引的存储使用情况；有关更多信息，请参见[Section 25.6.1, “Commands in the NDB Cluster Management
    Client”](mysql-cluster-mgm-client-commands.html "25.6.1 Commands in the NDB Cluster
    Management Client")。此外，当可用[`DataMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-datamemory)的80％或（在NDB
    7.6之前）[`IndexMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-indexmemory)被使用时，警告将写入集群日志，并且当使用率达到90％，99％和100％时再次写入。
    |
- en: '| **A.10.11.** | What file systems can I use with NDB Cluster? What about network
    file systems or network shares? |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.11.** | 我可以在NDB Cluster中使用哪些文件系统？网络文件系统或网络共享呢？'
- en: '|  | Generally, any file system that is native to the host operating system
    should work well with NDB Cluster. If you find that a given file system works
    particularly well (or not so especially well) with NDB Cluster, we invite you
    to discuss your findings in the [NDB Cluster Forums](https://forums.mysql.com/list.php?25).For
    Windows, we recommend that you use `NTFS` file systems for NDB Cluster, just as
    we do for standard MySQL. We do not test NDB Cluster with `FAT` or `VFAT` file
    systems. Because of this, we do not recommend their use with MySQL or NDB Cluster.NDB
    Cluster is implemented as a shared-nothing solution; the idea behind this is that
    the failure of a single piece of hardware should not cause the failure of multiple
    cluster nodes, or possibly even the failure of the cluster as a whole. For this
    reason, the use of network shares or network file systems is not supported for
    NDB Cluster. This also applies to shared storage devices such as SANs. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '|  | 一般来说，任何与主机操作系统原生兼容的文件系统都可以很好地与NDB Cluster配合使用。如果您发现某个文件系统与NDB Cluster特别适配（或者不太适配），我们邀请您在[NDB
    Cluster论坛](https://forums.mysql.com/list.php?25)中讨论您的发现。对于Windows，我们建议您像标准MySQL一样使用`NTFS`文件系统来运行NDB
    Cluster。我们不测试NDB Cluster与`FAT`或`VFAT`文件系统的兼容性。因此，我们不建议在MySQL或NDB Cluster中使用它们。NDB
    Cluster被实现为一种共享无解决方案；其背后的理念是，单个硬件部件的故障不应导致多个集群节点的故障，甚至可能导致整个集群的故障。因此，不支持使用网络共享或网络文件系统来运行NDB
    Cluster。这也适用于SAN等共享存储设备。'
- en: '| **A.10.12.** | Can I run NDB Cluster nodes inside virtual machines (such
    as those created by VMWare, VirtualBox, Parallels, or Xen)? |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.12.** | 我可以在虚拟机中（如VMWare、VirtualBox、Parallels或Xen创建的虚拟机）运行NDB Cluster节点吗？'
- en: '|  | NDB Cluster is supported for use in virtual machines. We currently support
    and test using [Oracle VM](http://www.oracle.com/technetwork/server-storage/vm/index.html).Some
    NDB Cluster users have successfully deployed NDB Cluster using other virtualization
    products; in such cases, Oracle can provide NDB Cluster support, but issues specific
    to the virtual environment must be referred to that product''s vendor. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '|  | NDB Cluster支持在虚拟机中使用。我们目前支持并测试使用[Oracle VM](http://www.oracle.com/technetwork/server-storage/vm/index.html)。一些NDB
    Cluster用户已成功部署了NDB Cluster，使用了其他虚拟化产品；在这种情况下，Oracle可以提供NDB Cluster支持，但特定于虚拟环境的问题必须向该产品的供应商咨询。'
- en: '| **A.10.13.** | I am trying to populate an NDB Cluster database. The loading
    process terminates prematurely and I get an error message like this one:`ERROR
    1114: The table ''my_cluster_table'' is full`Why is this happening? |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.13.** | 我正在尝试填充一个NDB Cluster数据库。加载过程会过早终止，并且我会收到这样的错误消息：`ERROR 1114:
    表''my_cluster_table''已满`。为什么会发生这种情况？'
- en: '|  | The cause is very likely to be that your setup does not provide sufficient
    RAM for all table data and all indexes, *including the primary key required by
    the [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") storage engine
    and automatically created in the event that the table definition does not include
    the definition of a primary key*.It is also worth noting that all data nodes should
    have the same amount of RAM, since no data node in a cluster can use more memory
    than the least amount available to any individual data node. For example, if there
    are four computers hosting Cluster data nodes, and three of these have 3GB of
    RAM available to store Cluster data while the remaining data node has only 1GB
    RAM, then each data node can devote at most 1GB to NDB Cluster data and indexes.In
    some cases it is possible to get Table is full errors in MySQL client applications
    even when [**ndb_mgm -e "ALL REPORT MEMORYUSAGE"**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client") shows significant free [`DataMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-datamemory).
    You can force [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") to
    create extra partitions for NDB Cluster tables and thus have more memory available
    for hash indexes by using the `MAX_ROWS` option for [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement"). In general, setting `MAX_ROWS` to twice the
    number of rows that you expect to store in the table should be sufficient.For
    similar reasons, you can also sometimes encounter problems with data node restarts
    on nodes that are heavily loaded with data. The [`MinFreePct`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-minfreepct
    "MinFreePct") parameter can help with this issue by reserving a portion (5% by
    default) of [`DataMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-datamemory)
    and (prior to NDB 7.6) [`IndexMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-indexmemory)
    for use in restarts. This reserved memory is not available for storing [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") tables or data. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '|  | 很可能的原因是您的设置为所有表数据和所有索引提供的RAM不足，*包括[`NDB`](mysql-cluster.html "第25章 MySQL
    NDB Cluster 8.0")存储引擎所需的主键，在表定义中没有包含主键定义时会自动创建*。值得注意的是，所有数据节点应该具有相同数量的RAM，因为集群中的任何数据节点都不能使用比任何单个数据节点可用的最少内存更多的内存。例如，如果有四台计算机托管集群数据节点，其中三台有3GB的RAM可用于存储集群数据，而剩下的数据节点只有1GB的RAM，则每个数据节点最多可以将1GB用于NDB
    Cluster数据和索引。在某些情况下，即使[**ndb_mgm -e "ALL REPORT MEMORYUSAGE"**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — NDB Cluster管理客户端")显示有显着空闲的[`DataMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-datamemory)，在MySQL客户端应用程序中也可能出现“表已满”错误。您可以通过为[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE语句")使用`MAX_ROWS`选项，强制[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")为NDB Cluster表创建额外的分区，从而为哈希索引提供更多可用内存。通常，将`MAX_ROWS`设置为您预计在表中存储的行数的两倍应该足够。出于类似的原因，有时您可能在负载较重的节点上遇到数据节点重新启动的问题。[`MinFreePct`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-minfreepct
    "MinFreePct")参数可以通过保留一部分（默认为5%）[`DataMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-datamemory)和（在NDB
    7.6之前）[`IndexMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-indexmemory)来帮助解决此问题，用于重新启动。此保留的内存不可用于存储[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")表或数据。 |'
- en: '| **A.10.14.** | NDB Cluster uses TCP/IP. Does this mean that I can run it
    over the Internet, with one or more nodes in remote locations? |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.14.** | NDB Cluster使用TCP/IP。这是否意味着我可以在Internet上运行它，其中一个或多个节点位于远程位置？
    |'
- en: '|  | It is *very* unlikely that a cluster would perform reliably under such
    conditions, as NDB Cluster was designed and implemented with the assumption that
    it would be run under conditions guaranteeing dedicated high-speed connectivity
    such as that found in a LAN setting using 100 Mbps or gigabit Ethernet—preferably
    the latter. We neither test nor warrant its performance using anything slower
    than this.Also, it is extremely important to keep in mind that communications
    between the nodes in an NDB Cluster are not secure; they are neither encrypted
    nor safeguarded by any other protective mechanism. The most secure configuration
    for a cluster is in a private network behind a firewall, with no direct access
    to any Cluster data or management nodes from outside. (For SQL nodes, you should
    take the same precautions as you would with any other instance of the MySQL server.)
    For more information, see [Section 25.6.20, “NDB Cluster Security Issues”](mysql-cluster-security.html
    "25.6.20 NDB Cluster Security Issues"). |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '|  | 在这种情况下，集群能够可靠地运行的可能性*非常*小，因为NDB集群的设计和实现是基于这样的假设：它将在保证专用高速连接的条件下运行，例如在使用100
    Mbps或千兆以太网的局域网设置中，最好是后者。我们既不测试也不保证在比这慢的任何情况下的性能。此外，需要牢记的是，NDB集群中节点之间的通信不安全；它们既不加密也不受到任何其他保护机制的保护。集群的最安全配置是在防火墙后的私人网络中，外部无法直接访问任何集群数据或管理节点。（对于SQL节点，您应该像对待MySQL服务器的任何其他实例一样采取相同的预防措施。）有关更多信息，请参阅[第25.6.20节，“NDB集群安全问题”](mysql-cluster-security.html
    "25.6.20 NDB Cluster Security Issues")。 |'
- en: '| **A.10.15.** | Do I have to learn a new programming or query language to
    use NDB Cluster? |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.15.** | 我需要学习新的编程或查询语言才能使用NDB集群吗？ |'
- en: '|  | *No*. Although some specialized commands are used to manage and configure
    the cluster itself, only standard (My)SQL statements are required for the following
    operations:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | *不需要*。虽然一些专门的命令用于管理和配置集群本身，但以下操作仅需要标准（My）SQL语句：'
- en: Creating, altering, and dropping tables
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建、修改和删除表格
- en: Inserting, updating, and deleting table data
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插入、更新和删除表格数据
- en: Creating, changing, and dropping primary and unique indexes
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建、更改和删除主键和唯一索引
- en: Some specialized configuration parameters and files are required to set up an
    NDB Cluster—see [Section 25.4.3, “NDB Cluster Configuration Files”](mysql-cluster-config-file.html
    "25.4.3 NDB Cluster Configuration Files"), for information about these.A few simple
    commands are used in the NDB Cluster management client ([**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client")) for tasks such as starting
    and stopping cluster nodes. See [Section 25.6.1, “Commands in the NDB Cluster
    Management Client”](mysql-cluster-mgm-client-commands.html "25.6.1 Commands in
    the NDB Cluster Management Client"). |
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 设置NDB集群需要一些专门的配置参数和文件，请参阅[第25.4.3节，“NDB集群配置文件”](mysql-cluster-config-file.html
    "25.4.3 NDB Cluster Configuration Files")，了解相关信息。在NDB集群管理客户端（[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client")）中使用一些简单的命令，如启动和停止集群节点。请参阅[第25.6.1节，“NDB集群管理客户端中的命令”](mysql-cluster-mgm-client-commands.html
    "25.6.1 Commands in the NDB Cluster Management Client")。 |
- en: '| **A.10.16.** | What programming languages and APIs are supported by NDB Cluster?
    |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.16.** | NDB集群支持哪些编程语言和API？ |'
- en: '|  | NDB Cluster supports the same programming APIs and languages as the standard
    MySQL Server, including ODBC, .Net, the MySQL C API, and numerous drivers for
    popular scripting languages such as PHP, Perl, and Python. NDB Cluster applications
    written using these APIs behave similarly to other MySQL applications; they transmit
    SQL statements to a MySQL Server (in the case of NDB Cluster, an SQL node), and
    receive responses containing rows of data. For more information about these APIs,
    see [Chapter 31, *Connectors and APIs*](connectors-apis.html "Chapter 31 Connectors
    and APIs").NDB Cluster also supports application programming using the NDB API,
    which provides a low-level C++ interface to NDB Cluster data without needing to
    go through a MySQL Server. See [The NDB API](/doc/ndbapi/en/ndbapi.html). In addition,
    many [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") management
    functions are exposed by the C-language MGM API; see [The MGM API](/doc/ndbapi/en/mgm-api.html),
    for more information.NDB Cluster also supports Java application programming using
    ClusterJ, which supports a domain object model of data using sessions and transactions.
    See [Java and NDB Cluster](/doc/ndbapi/en/mccj-overview-java.html), for more information.NDB
    Cluster 8.0 also includes adapters supporting NoSQL applications written against
    `Node.js`, with NDB Cluster as the data store. See [MySQL NoSQL Connector for
    JavaScript](/doc/ndbapi/en/ndb-nodejs.html), for more information. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '|  | NDB Cluster支持与标准MySQL Server相同的编程API和语言，包括ODBC、.Net、MySQL C API以及用于流行脚本语言（如PHP、Perl和Python）的许多驱动程序。使用这些API编写的NDB
    Cluster应用程序的行为类似于其他MySQL应用程序；它们将SQL语句传输到MySQL Server（在NDB Cluster的情况下，是一个SQL节点），并接收包含数据行的响应。有关这些API的更多信息，请参阅[Chapter 31,
    *Connectors and APIs*](connectors-apis.html "Chapter 31 Connectors and APIs")。NDB
    Cluster还支持使用NDB API进行应用程序编程，该API提供了一个低级的C++接口，用于访问NDB Cluster数据而无需经过MySQL Server。请参阅[NDB
    API](/doc/ndbapi/en/ndbapi.html)。此外，许多[`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0")管理功能通过C语言MGM API公开；有关更多信息，请参阅[MGM API](/doc/ndbapi/en/mgm-api.html)。NDB
    Cluster还支持使用ClusterJ进行Java应用程序编程，该工具支持使用会话和事务的数据域对象模型。有关更多信息，请参阅[Java and NDB
    Cluster](/doc/ndbapi/en/mccj-overview-java.html)。NDB Cluster 8.0还包括支持使用NDB Cluster作为数据存储的`Node.js`的NoSQL应用程序的适配器。有关更多信息，请参阅[MySQL
    NoSQL Connector for JavaScript](/doc/ndbapi/en/ndb-nodejs.html)。'
- en: '| **A.10.17.** | Does NDB Cluster include any management tools? |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.17.** | NDB Cluster包括哪些管理工具？'
- en: '|  | NDB Cluster includes a command line client for performing basic management
    functions. See [Section 25.5.5, “ndb_mgm — The NDB Cluster Management Client”](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client"), and [Section 25.6.1, “Commands
    in the NDB Cluster Management Client”](mysql-cluster-mgm-client-commands.html
    "25.6.1 Commands in the NDB Cluster Management Client").NDB Cluster is also supported
    by MySQL Cluster Manager, a separate product providing an advanced command line
    interface that can automate many NDB Cluster management tasks such as rolling
    restarts and configuration changes. For more information about MySQL Cluster Manager,
    see [MySQL Cluster Manager 8.0.36 User Manual](/doc/mysql-cluster-manager/8.0/en/).
    |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '|  | NDB Cluster包括一个用于执行基本管理功能的命令行客户端。请参阅[Section 25.5.5, “ndb_mgm — The NDB
    Cluster Management Client”](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm
    — The NDB Cluster Management Client")，以及[Section 25.6.1, “Commands in the NDB
    Cluster Management Client”](mysql-cluster-mgm-client-commands.html "25.6.1 Commands
    in the NDB Cluster Management Client")。NDB Cluster还受到MySQL Cluster Manager的支持，这是一个提供高级命令行界面的独立产品，可以自动化许多NDB
    Cluster管理任务，如滚动重启和配置更改。有关MySQL Cluster Manager的更多信息，请参阅[MySQL Cluster Manager
    8.0.36 User Manual](/doc/mysql-cluster-manager/8.0/en/)。'
- en: '| **A.10.18.** | How do I find out what an error or warning message means when
    using NDB Cluster? |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.18.** | 当使用NDB Cluster时，如何找出错误或警告消息的含义？'
- en: '|  | There are two ways in which this can be done:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 有两种方法可以实现这��点：'
- en: From within the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") client, use **SHOW ERRORS** or **SHOW WARNINGS** immediately upon being
    notified of the error or warning condition.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")客户端内部，在收到错误或警告条件的通知后立即使用**SHOW
    ERRORS**或**SHOW WARNINGS**。
- en: From a system shell prompt, use [**perror --ndb *`error_code`***](perror.html
    "6.8.2 perror — Display MySQL Error Message Information").
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从系统shell提示符中，使用[perror --ndb *`error_code`*](perror.html "6.8.2 perror — Display
    MySQL Error Message Information")。
- en: '|'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **A.10.19.** | Is NDB Cluster transaction-safe? What isolation levels are
    supported? |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.19.** | NDB Cluster是否支持事务安全？支持哪些隔离级别？'
- en: '|  | *Yes*. For tables created with the [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") storage engine, transactions are supported. Currently, NDB Cluster
    supports only the [`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)
    transaction isolation level. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '|  | *是的*。对于使用 [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0") 存储引擎创建的表，支持事务。目前，NDB
    Cluster 仅支持 [`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)
    事务隔离级别。 |'
- en: '| **A.10.20.** | What storage engines are supported by NDB Cluster? |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.20.** | NDB Cluster 支持哪些存储引擎？ |'
- en: '|  | NDB Cluster requires the [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") storage engine. That is, in order for a table to be shared between
    nodes in an NDB Cluster, the table must be created using `ENGINE=NDB` (or the
    equivalent option `ENGINE=NDBCLUSTER`).It is possible to create tables using other
    storage engines (such as [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine") or [`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM
    Storage Engine")) on a MySQL server being used with NDB Cluster, but since these
    tables do not use [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0"),
    they do not participate in clustering; each such table is strictly local to the
    individual MySQL server instance on which it is created.NDB Cluster is quite different
    from [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine")
    clustering with regard to architecture, requirements, and implementation; despite
    any similarity in their names, the two are not compatible. For more information
    about `InnoDB` clustering, see [MySQL AdminAPI](/doc/mysql-shell/8.0/en/admin-api-userguide.html).
    See also [Section 25.2.6, “MySQL Server Using InnoDB Compared with NDB Cluster”](mysql-cluster-compared.html
    "25.2.6 MySQL Server Using InnoDB Compared with NDB Cluster"), for information
    about the differences between the `NDB` and `InnoDB` storage engines. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '|  | NDB Cluster 需要 [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0")
    存储引擎。也就是说，为了使表在 NDB Cluster 中的节点之间共享，必须使用 `ENGINE=NDB`（或等效选项 `ENGINE=NDBCLUSTER`）创建表。在与
    NDB Cluster 一起使用的 MySQL 服务器上可以使用其他存储引擎（如 [`InnoDB`](innodb-storage-engine.html
    "第 17 章 InnoDB 存储引擎") 或 [`MyISAM`](myisam-storage-engine.html "18.2 MyISAM 存储引擎")）创建表，但由于这些表不使用
    [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0")，它们不参与集群化；每个这样的表严格限定在创建它的个别
    MySQL 服务器实例中。NDB Cluster 在架构、要求和实现方面与 [`InnoDB`](innodb-storage-engine.html "第
    17 章 InnoDB 存储引擎") 集群有很大不同；尽管它们的名称相似，但两者不兼容。有关 `InnoDB` 集群的更多信息，请参阅 [MySQL AdminAPI](/doc/mysql-shell/8.0/en/admin-api-userguide.html)。另请参阅
    [第 25.2.6 节，“使用 InnoDB 的 MySQL 服务器与 NDB Cluster 比较”](mysql-cluster-compared.html
    "25.2.6 使用 InnoDB 的 MySQL 服务器与 NDB Cluster 比较")，了解 `NDB` 和 `InnoDB` 存储引擎之间的区别。
    |'
- en: '| **A.10.21.** | In the event of a catastrophic failure— for example, the whole
    city loses power *and* my UPS fails—would I lose all my data? |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.21.** | 在发生灾难性故障时——例如，整个城市停电 *并且* 我的 UPS 失效——我会丢失所有数据吗？ |'
- en: '|  | All committed transactions are logged. Therefore, although it is possible
    that some data could be lost in the event of a catastrophe, this should be quite
    limited. Data loss can be further reduced by minimizing the number of operations
    per transaction. (It is not a good idea to perform large numbers of operations
    per transaction in any case.) |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '|  | 所有提交的事务都被记录。因此，尽管在灾难发生时可能会丢失一些数据，但这应该是相当有限的。通过最小化每个事务的操作数量，可以进一步减少数据丢失。（无论如何，一次执行大量操作的事务都不是一个好主意。）
    |'
- en: '| **A.10.22.** | Is it possible to use `FULLTEXT` indexes with NDB Cluster?
    |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.22.** | 是否可以在 NDB Cluster 中使用 `FULLTEXT` 索引？ |'
- en: '|  | `FULLTEXT` indexing is currently supported only by the [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") and [`MyISAM`](myisam-storage-engine.html
    "18.2 The MyISAM Storage Engine") storage engines. See [Section 14.9, “Full-Text
    Search Functions”](fulltext-search.html "14.9 Full-Text Search Functions"), for
    more information. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '|  | `FULLTEXT` 索引目前仅由 [`InnoDB`](innodb-storage-engine.html "第 17 章 InnoDB
    存储引擎") 和 [`MyISAM`](myisam-storage-engine.html "18.2 MyISAM 存储引擎") 存储引擎支持。有关更多信息，请参阅
    [第 14.9 节，“全文搜索函数”](fulltext-search.html "14.9 全文搜索函数")。 |'
- en: '| **A.10.23.** | Can I run multiple nodes on a single computer? |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.23.** | 我可以在一台计算机上运行多个节点吗？ |'
- en: '|  | It is possible but not always advisable. One of the chief reasons to run
    a cluster is to provide redundancy. To obtain the full benefits of this redundancy,
    each node should reside on a separate machine. If you place multiple nodes on
    a single machine and that machine fails, you lose all of those nodes. For this
    reason, if you do run multiple data nodes on a single machine, it is *extremely*
    important that they be set up in such a way that the failure of this machine does
    not cause the loss of all the data nodes in a given node group.Given that NDB
    Cluster can be run on commodity hardware loaded with a low-cost (or even no-cost)
    operating system, the expense of an extra machine or two is well worth it to safeguard
    mission-critical data. It also worth noting that the requirements for a cluster
    host running a management node are minimal. This task can be accomplished with
    a 300 MHz Pentium or equivalent CPU and sufficient RAM for the operating system,
    plus a small amount of overhead for the [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon") and [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client") processes.It is acceptable
    to run multiple cluster data nodes on a single host that has multiple CPUs, cores,
    or both. The NDB Cluster distribution also provides a multithreaded version of
    the data node binary intended for use on such systems. For more information, see
    [Section 25.5.3, “ndbmtd — The NDB Cluster Data Node Daemon (Multi-Threaded)”](mysql-cluster-programs-ndbmtd.html
    "25.5.3 ndbmtd — The NDB Cluster Data Node Daemon (Multi-Threaded)").It is also
    possible in some cases to run data nodes and SQL nodes concurrently on the same
    machine; how well such an arrangement performs is dependent on a number of factors
    such as number of cores and CPUs as well as the amount of disk and memory available
    to the data node and SQL node processes, and you must take these factors into
    account when planning such a configuration. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '|  | 可以，但并非总是明智之举。运行集群的主要原因之一是提供冗余。为了获得这种冗余的全部好处，每个节点应该位于单独的机器上。如果将多个节点放在一台机器上，而该机器发生故障，那么所有这些节点都会丢失。因此，如果在单台机器上运行多个数据节点，非常重要的是要设置它们，以使该机器的故障不会导致给定节点组中所有数据节点的丢失。考虑到
    NDB Cluster 可以在装载了低成本（甚至零成本）操作系统的商品硬件上运行，为了保护关键数据，额外购买一两台机器是非常值得的。还值得注意的是，运行管理节点的集群主机的要求很低。这项任务可以通过一台
    300 MHz 的 Pentium 或等效 CPU 和足够的 RAM 用于操作系统，再加上一些用于 [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "第 25.5.4 节 ndb_mgmd — NDB Cluster 管理服务器守护进程") 和 [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "第 25.5.5 节 ndb_mgm — NDB Cluster 管理客户端") 进程的额外开销来完成。在具有多个 CPU、核心或两者的单个主机上运行多个集群数据节点是可以接受的。NDB
    Cluster 发行版还提供了数据节点二进制文件的多线程版本，旨在用于这些系统。有关更多信息，请参阅 [第 25.5.3 节，“ndbmtd — NDB Cluster
    数据节点守护进程（多线程）”](mysql-cluster-programs-ndbmtd.html "第 25.5.3 节 ndbmtd — NDB Cluster
    数据节点守护进程（多线程）")。在某些情况下，还可以在同一台机器上同时运行数据节点和 SQL 节点；这种安排的性能如何取决于诸多因素，如核心和 CPU 的数量，以及数据节点和
    SQL 节点进程可用的磁盘和内存量，您必须在规划这种配置时考虑这些因素。 |'
- en: '| **A.10.24.** | Can I add data nodes to an NDB Cluster without restarting
    it? |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.24.** | 我可以在不重启 NDB Cluster 的情况下���加数据节点吗？ |'
- en: '|  | It is possible to add new data nodes to a running NDB Cluster without
    taking the cluster offline. For more information, see [Section 25.6.7, “Adding
    NDB Cluster Data Nodes Online”](mysql-cluster-online-add-node.html "25.6.7 Adding
    NDB Cluster Data Nodes Online").For other types of NDB Cluster nodes, a rolling
    restart is all that is required (see [Section 25.6.5, “Performing a Rolling Restart
    of an NDB Cluster”](mysql-cluster-rolling-restart.html "25.6.5 Performing a Rolling
    Restart of an NDB Cluster")). |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '|  | 可以在运行中的 NDB Cluster 中添加新的数据节点而无需将集群下线。有关更多信息，请参阅 [第 25.6.7 节，“在线添加 NDB
    Cluster 数据节点”](mysql-cluster-online-add-node.html "25.6.7 在线添加 NDB Cluster 数据节点")。对于其他类型的
    NDB Cluster 节点，只需要进行滚动重启（参见 [第 25.6.5 节，“执行 NDB Cluster 的滚动重启”](mysql-cluster-rolling-restart.html
    "25.6.5 执行 NDB Cluster 的滚动重启")）即可。 |'
- en: '| **A.10.25.** | Are there any limitations that I should be aware of when using
    NDB Cluster? |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.25.** | 在使用 NDB Cluster 时，我应该注意哪些限制吗？ |'
- en: '|  | Limitations on [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") tables in MySQL NDB Cluster include the following:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 在 MySQL NDB Cluster 中，对[`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster
    8.0") 表的限制包括以下内容：'
- en: Temporary tables are not supported; a [`CREATE TEMPORARY TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") statement using `ENGINE=NDB` or `ENGINE=NDBCLUSTER`
    fails with an error.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持临时表；使用`ENGINE=NDB`或`ENGINE=NDBCLUSTER`的[`CREATE TEMPORARY TABLE`](create-table.html
    "15.1.20 CREATE TABLE 语句")语句会导致错误。
- en: The only types of user-defined partitioning supported for [`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") tables are `KEY` and `LINEAR KEY`. Trying
    to create an `NDB` table using any other partitioning type fails with an error.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅支持`NDBCLUSTER`表的`KEY`和`LINEAR KEY`两种用户定义的分区类型。尝试使用其他分区类型创建`NDB`表会导致错误。
- en: '`FULLTEXT` indexes are not supported.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持`FULLTEXT`索引。
- en: Index prefixes are not supported. Only complete columns may be indexed.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持索引前缀。只能对完整列建立索引。
- en: Spatial indexes are not supported (although spatial columns can be used). See
    [Section 13.4, “Spatial Data Types”](spatial-types.html "13.4 Spatial Data Types").
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持空间索引（尽管可以使用空间列）。请参见[第 13.4 节，“空间数据类型”](spatial-types.html "13.4 空间数据类型")。
- en: Support for partial transactions and partial rollbacks is comparable to that
    of other transactional storage engines such as [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") that can roll back individual statements.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持部分事务和部分回滚的程度与其他事务存储引擎（如[`InnoDB`](innodb-storage-engine.html "第 17 章 InnoDB
    存储引擎")）相当，可以回滚单个语句。
- en: The maximum number of attributes allowed per table is 512. Attribute names cannot
    be any longer than 31 characters. For each table, the maximum combined length
    of the table and database names is 122 characters.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个表允许的最大属性数为 512。属性名称不能超过 31 个字符。对于每个表，表名和数据库名的最大组合长度为 122 个字符。
- en: Priot to NDB 8.0, the maximum size for a table row is 14 kilobytes, not counting
    [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types") values. In NDB 8.0, this
    maximum is increased to 30000 bytes. See [Section 25.2.7.5, “Limits Associated
    with Database Objects in NDB Cluster”](mysql-cluster-limitations-database-objects.html
    "25.2.7.5 Limits Associated with Database Objects in NDB Cluster"), for more information.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 NDB 8.0 之前，表行的最大大小为 14 千字节，不包括[`BLOB`](blob.html "13.3.4 BLOB 和 TEXT 类型")值。在
    NDB 8.0 中，这个最大值增加到 30000 字节。有关更多信息，请参见[第 25.2.7.5 节，“NDB 集群中与数据库对象相关的限制”](mysql-cluster-limitations-database-objects.html
    "25.2.7.5 NDB 集群中与数据库对象相关的限制")。
- en: There is no set limit for the number of rows per `NDB` table. Limits on table
    size depend on a number of factors, in particular on the amount of RAM available
    to each data node.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个`NDB`表的行数没有固定限制。表大小的限制取决于许多因素，特别是每个数据节点可用的 RAM 量。
- en: For a complete listing of limitations in NDB Cluster, see [Section 25.2.7, “Known
    Limitations of NDB Cluster”](mysql-cluster-limitations.html "25.2.7 Known Limitations
    of NDB Cluster"). See also [Section 25.2.7.11, “Previous NDB Cluster Issues Resolved
    in NDB Cluster 8.0”](mysql-cluster-limitations-resolved.html "25.2.7.11 Previous
    NDB Cluster Issues Resolved in NDB Cluster 8.0"). |
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 NDB 集群中限制的完整列表，请参见[第 25.2.7 节，“NDB 集群的已知限制”](mysql-cluster-limitations.html
    "25.2.7 NDB 集群的已知限制")。另请参见[第 25.2.7.11 节，“NDB 集群 8.0 中已解决的先前 NDB 集群问题”](mysql-cluster-limitations-resolved.html
    "25.2.7.11 NDB 集群 8.0 中已解决的先前 NDB 集群问题")。 |
- en: '| **A.10.26.** | Does NDB Cluster support foreign keys? |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.26.** | NDB 集群支持外键吗？ |'
- en: '|  | NDB Cluster provides support for foreign key constraints which is comparable
    to that found in the [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB
    Storage Engine") storage engine; see [Section 1.6.3.2, “FOREIGN KEY Constraints”](constraint-foreign-key.html
    "1.6.3.2 FOREIGN KEY Constraints"), for more detailed information, as well as
    [Section 15.1.20.5, “FOREIGN KEY Constraints”](create-table-foreign-keys.html
    "15.1.20.5 FOREIGN KEY Constraints"). Applications requiring foreign key support
    should use NDB Cluster 7.3, 7.4, 7.5, or later. |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '|  | NDB 集群提供了与[`InnoDB`](innodb-storage-engine.html "第 17 章 InnoDB 存储引擎")存储引擎中相似的外键约束支持；有关更详细信息，请参见[第
    1.6.3.2 节，“FOREIGN KEY 约束”](constraint-foreign-key.html "1.6.3.2 FOREIGN KEY 约束")，以及[第
    15.1.20.5 节，“FOREIGN KEY 约束”](create-table-foreign-keys.html "15.1.20.5 FOREIGN
    KEY 约束")。需要外键支持的应用程序应使用 NDB 集群 7.3、7.4、7.5 或更高版本。 |'
- en: '| **A.10.27.** | How do I import an existing MySQL database into an NDB Cluster?
    |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.27.** | 如何将现有的 MySQL 数据库导入 NDB 集群中？ |'
- en: '|  | You can import databases into NDB Cluster much as you would with any other
    version of MySQL. Other than the limitations mentioned elsewhere in this FAQ,
    the only other special requirement is that any tables to be included in the cluster
    must use the [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") storage
    engine. This means that the tables must be created with `ENGINE=NDB` or `ENGINE=NDBCLUSTER`.It
    is also possible to convert existing tables that use other storage engines to
    [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") using one
    or more [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") statement.
    However, the definition of the table must be compatible with the [`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine prior to making the conversion.
    In MySQL 8.0, an additional workaround is also required; see [Section 25.2.7,
    “Known Limitations of NDB Cluster”](mysql-cluster-limitations.html "25.2.7 Known
    Limitations of NDB Cluster"), for details. |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '|  | 您可以像使用任何其他版本的MySQL一样将数据库导入NDB集群。除了本FAQ中其他地方提到的限制之外，唯一的其他特殊要求是要包含在集群中的任何表必须使用[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB集群 8.0")存储引擎。这意味着表必须使用`ENGINE=NDB`或`ENGINE=NDBCLUSTER`创建。还可以使用一个或多个[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE语句")语句将使用其他存储引擎的现有表转换为[`NDBCLUSTER`](mysql-cluster.html
    "第25章 MySQL NDB集群 8.0")。但是，在进行转换之前，表的定义必须与[`NDBCLUSTER`](mysql-cluster.html "第25章
    MySQL NDB集群 8.0")存储引擎兼容。在MySQL 8.0中，还需要额外的解决方法；有关详细信息，请参见[第25.2.7节，“NDB集群的已知限制”](mysql-cluster-limitations.html
    "25.2.7 NDB集群的已知限制")。 |'
- en: '| **A.10.28.** | How do NDB Cluster nodes communicate with one another? |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.28.** | NDB集群节点如何相互通信？ |'
- en: '|  | Cluster nodes can communicate through any of three different transport
    mechanisms: TCP/IP, SHM (shared memory), and SCI (Scalable Coherent Interface).
    Where available, SHM is used by default between nodes residing on the same cluster
    host; however, this is considered experimental. SCI is a high-speed (1 gigabit
    per second and higher), high-availability protocol used in building scalable multi-processor
    systems; it requires special hardware and drivers. See [Section 25.4.4, “Using
    High-Speed Interconnects with NDB Cluster”](mysql-cluster-interconnects.html "25.4.4 Using
    High-Speed Interconnects with NDB Cluster"), for more about using SCI as a transport
    mechanism for NDB Cluster. |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '|  | 集群节点可以通过三种不同的传输机制进行通信：TCP/IP、SHM（共享内存）和SCI（可扩展一致性接口）。在可用的情况下，同一集群主机上的节点之间默认使用SHM；然而，这被视为实验性质。SCI是一种高速（每秒1千兆位及更高）、高可用性协议，用于构建可扩展的多处理器系统；它需要特殊的硬件和驱动程序。有关将SCI用作NDB集群的传输机制的更多信息，请参见[第25.4.4节，“使用高速互连与NDB集群”](mysql-cluster-interconnects.html
    "25.4.4 使用高速互连与NDB集群")。 |'
- en: '| **A.10.29.** | What is an arbitrator? |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.29.** | 仲裁者是什么？ |'
- en: '|  | If one or more data nodes in a cluster fail, it is possible that not all
    cluster data nodes are able to “see” one another. In fact, it is possible that
    two sets of data nodes might become isolated from one another in a network partitioning,
    also known as a “split-brain” scenario. This type of situation is undesirable
    because each set of data nodes tries to behave as though it is the entire cluster.
    An arbitrator is required to decide between the competing sets of data nodes.When
    all data nodes in at least one node group are alive, network partitioning is not
    an issue, because no single subset of the cluster can form a functional cluster
    on its own. The real problem arises when no single node group has all its nodes
    alive, in which case network partitioning (the “split-brain” scenario) becomes
    possible. Then an arbitrator is required. All cluster nodes recognize the same
    node as the arbitrator, which is normally the management server; however, it is
    possible to configure any of the MySQL Servers in the cluster to act as the arbitrator
    instead. The arbitrator accepts the first set of cluster nodes to contact it,
    and tells the remaining set to shut down. Arbitrator selection is controlled by
    the `ArbitrationRank` configuration parameter for MySQL Server and management
    server nodes. You can also use the `ArbitrationRank` configuration parameter to
    control the arbitrator selection process. For more information about these parameters,
    see [Section 25.4.3.5, “Defining an NDB Cluster Management Server”](mysql-cluster-mgm-definition.html
    "25.4.3.5 Defining an NDB Cluster Management Server").The role of arbitrator does
    not in and of itself impose any heavy demands upon the host so designated, and
    thus the arbitrator host does not need to be particularly fast or to have extra
    memory especially for this purpose. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '|  | 如果集群中的一个或多个数据节点发生故障，可能导致并非所有集群数据节点都能“看到”彼此。事实上，在网络分区中，两组数据节点可能会相互隔离，也就是所谓的“脑裂”场景。这种情况是不可取的，因为每组数据节点都试图表现得像整个集群一样。需要一个仲裁者来在竞争的数据节点组之间做出决定。当至少一个节点组中的所有数据节点都存活时，网络分区就不是问题，因为没有单个子集可以独立形成一个功能性集群。真正的问题是当没有一个节点组的所有节点都存活时，这种情况下网络分区（“脑裂”场景）就可能发生。然后需要一个仲裁者。所有集群节点都将同一个节点识别为仲裁者，通常是管理服务器；但是，也可以配置集群中的任何MySQL服务器来充当仲裁者。仲裁者接受首先联系到它的一组集群节点，并告诉其余的集群节点关闭。仲裁者的选择由MySQL服务器和管理服务器节点的`ArbitrationRank`配置参数控制。您还可以使用`ArbitrationRank`配置参数来控制仲裁者选择过程。有关这些参数的更多信息，请参见[第25.4.3.5节，“定义NDB集群管理服务器”](mysql-cluster-mgm-definition.html
    "25.4.3.5 Defining an NDB Cluster Management Server")。仲裁者的角色本身并不对指定的主机施加任何重大要求，因此仲裁者主机不需要特别快速或为此目的特别增加内存。
    |'
- en: '| **A.10.30.** | What data types are supported by NDB Cluster? |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.30.** | NDB Cluster支持哪些数据类型？ |'
- en: '|  | NDB Cluster supports all of the usual MySQL data types, including those
    associated with MySQL''s spatial extensions; however, the [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine does not support spatial indexes.
    (Spatial indexes are supported only by [`MyISAM`](myisam-storage-engine.html "18.2 The
    MyISAM Storage Engine"); see [Section 13.4, “Spatial Data Types”](spatial-types.html
    "13.4 Spatial Data Types"), for more information.) In addition, there are some
    differences with regard to indexes when used with [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") tables.Note'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | NDB Cluster支持所有常见的MySQL数据类型，包括与MySQL的空间扩展相关的数据类型；但是，[`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0")存储引擎不支持空间索引。（空间索引仅由[`MyISAM`](myisam-storage-engine.html
    "18.2 The MyISAM Storage Engine")支持；有关更多信息，请参见[第13.4节，“空间数据类型”](spatial-types.html
    "13.4 Spatial Data Types")。此外，当与[`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB
    Cluster 8.0")表一起使用时，索引存在一些差异。注意'
- en: NDB Cluster Disk Data tables (that is, tables created with `TABLESPACE ... STORAGE
    DISK ENGINE=NDB` or `TABLESPACE ... STORAGE DISK ENGINE=NDBCLUSTER`) have only
    fixed-width rows. This means that (for example) each Disk Data table record containing
    a [`VARCHAR(255)`](char.html "13.3.2 The CHAR and VARCHAR Types") column requires
    space for 255 characters (as required for the character set and collation being
    used for the table), regardless of the actual number of characters stored therein.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: NDB Cluster Disk Data 表（即使用 `TABLESPACE ... STORAGE DISK ENGINE=NDB` 或 `TABLESPACE
    ... STORAGE DISK ENGINE=NDBCLUSTER` 创建的表）仅具有固定宽度的行。这意味着（例如）每个包含 [`VARCHAR(255)`](char.html
    "13.3.2 The CHAR and VARCHAR Types") 列的 Disk Data 表记录需要为 255 个字符（根据表使用的字符集和校对规则所需的字符数）留出空间，而不管其中实际存储的字符数。
- en: See [Section 25.2.7, “Known Limitations of NDB Cluster”](mysql-cluster-limitations.html
    "25.2.7 Known Limitations of NDB Cluster"), for more information about these issues.
    |
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 有关这些问题的更多信息，请参见[第 25.2.7 节，“NDB Cluster 的已知限制”](mysql-cluster-limitations.html
    "25.2.7 Known Limitations of NDB Cluster")。
- en: '| **A.10.31.** | How do I start and stop NDB Cluster? |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.31.** | 如何启动和停止 NDB Cluster？'
- en: '|  | It is necessary to start each node in the cluster separately, in the following
    order:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 必须按以下顺序分别启动集群中的每个节点：'
- en: Start the management node, using the [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon") command.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd — The
    NDB Cluster Management Server Daemon")命令启动管理节点。
- en: When starting the cluster for the first time, you must include the [`-f`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_config-file)
    or [`--config-file`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_config-file)
    option to tell the management node where its configuration file can be found.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当首次启动集群时，必须包含[`-f`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_config-file)或[`--config-file`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_config-file)选项，告诉管理节点其配置文件的位置。
- en: Start each data node with the [**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd
    — The NDB Cluster Data Node Daemon") command.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — The NDB Cluster
    Data Node Daemon")命令启动每个数据节点。
- en: Each data node must be started with the [`-c`](mysql-cluster-programs-ndbd.html#option_ndbd_ndb-connectstring)
    or [`--ndb-connectstring`](mysql-cluster-programs-ndbd.html#option_ndbd_ndb-connectstring)
    option so that the data node knows how to connect to the management server.
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个数据节点必须使用[`-c`](mysql-cluster-programs-ndbd.html#option_ndbd_ndb-connectstring)或[`--ndb-connectstring`](mysql-cluster-programs-ndbd.html#option_ndbd_ndb-connectstring)选项启动，以便数据节点知道如何连接到管理服务器。
- en: Start each MySQL Server (SQL node) using your preferred startup script, such
    as [**mysqld_safe**](mysqld-safe.html "6.3.2 mysqld_safe — MySQL Server Startup
    Script").
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您喜欢的启动脚本（如[**mysqld_safe**](mysqld-safe.html "6.3.2 mysqld_safe — MySQL Server
    Startup Script")）启动每个 MySQL 服务器（SQL 节点）。
- en: Each MySQL Server must be started with the [`--ndbcluster`](mysql-cluster-options-variables.html#option_mysqld_ndbcluster)
    and [`--ndb-connectstring`](mysql-cluster-options-variables.html#option_mysqld_ndb-connectstring)
    options. These options cause [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL
    Server") to enable [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") storage engine support and how to connect to the management server.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个 MySQL 服务器必须使用[`--ndbcluster`](mysql-cluster-options-variables.html#option_mysqld_ndbcluster)和[`--ndb-connectstring`](mysql-cluster-options-variables.html#option_mysqld_ndb-connectstring)选项启动。这些选项使[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")启用[`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0")存储引擎支持，并指定如何连接到管理服务器。
- en: 'Each of these commands must be run from a system shell on the machine housing
    the affected node. (You do not have to be physically present at the machine—a
    remote login shell can be used for this purpose.) You can verify that the cluster
    is running by starting the [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") management client [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm
    — The NDB Cluster Management Client") on the machine housing the management node
    and issuing the `SHOW` or `ALL STATUS` command.To shut down a running cluster,
    issue the command `SHUTDOWN` in the management client. Alternatively, you may
    enter the following command in a system shell:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 每个这些命令必须从承载受影响节点的机器的系统 shell 中运行。（您不必亲自在机器上，可以使用远程登录 shell 来完成此操作。）您可以通过在承载管理节点的机器上启动[`NDB`](mysql-cluster.html
    "第 25 章 MySQL NDB 集群 8.0")管理客户端[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — NDB 集群管理客户端")并发出`SHOW`或`ALL STATUS`命令来验证集群是否正在运行。要关闭正在运行的集群，请在管理客户端中发出`SHUTDOWN`命令。或者，您可以在系统
    shell 中输入以下命令：
- en: '[PRE2]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: (The quotation marks in this example are optional, since there are no spaces
    in the command string following the `-e` option; in addition, the `SHUTDOWN` command,
    like other management client commands, is not case-sensitive.)Either of these
    commands causes the [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm
    — The NDB Cluster Management Client"), [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client"), and any [**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — The NDB Cluster Data Node Daemon") processes to terminate gracefully.
    MySQL servers running as SQL nodes can be stopped using [**mysqladmin shutdown**](mysqladmin.html
    "6.5.2 mysqladmin — A MySQL Server Administration Program").For more information,
    see [Section 25.6.1, “Commands in the NDB Cluster Management Client”](mysql-cluster-mgm-client-commands.html
    "25.6.1 Commands in the NDB Cluster Management Client"), and [Section 25.3.6,
    “Safe Shutdown and Restart of NDB Cluster”](mysql-cluster-install-shutdown-restart.html
    "25.3.6 Safe Shutdown and Restart of NDB Cluster").MySQL Cluster Manager provides
    additional ways to handle starting ansd stopping of NDB Cluster nodes. See [MySQL
    Cluster Manager 8.0.36 User Manual](/doc/mysql-cluster-manager/8.0/en/), for more
    information about this tool. |
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: （在此示例中，引号是可选的，因为在 `-e` 选项后面的命令字符串中没有空格；此外，`SHUTDOWN`命令（像其他管理客户端命令一样）不区分大小写。）这两个命令都会导致[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — NDB 集群管理客户端")、[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — NDB 集群管理客户端")和任何[**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — NDB 集群数据节点守护程序")进程优雅地终止。作为 SQL 节点运行的 MySQL 服务器可以使用[**mysqladmin
    shutdown**](mysqladmin.html "6.5.2 mysqladmin — MySQL 服务器管理程序")停止。有关更多信息，请参阅[第
    25.6.1 节，“NDB 集群管理客户端中的命令”](mysql-cluster-mgm-client-commands.html "25.6.1 NDB
    集群管理客户端中的命令")和[第 25.3.6 节，“NDB 集群的安全关闭和重启”](mysql-cluster-install-shutdown-restart.html
    "25.3.6 NDB 集群的安全关闭和重启")。MySQL 集群管理器提供了处理 NDB 集群节点启动和停止的其他方法。有关此工具的更多信息，请参阅[MySQL
    集群管理器 8.0.36 用户手册](/doc/mysql-cluster-manager/8.0/zh/)。 |
- en: '| **A.10.32.** | What happens to NDB Cluster data when the cluster is shut
    down? |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.32.** | 当集群关闭时，NDB 集群数据会发生什么？ |'
- en: '|  | The data that was held in memory by the cluster''s data nodes is written
    to disk, and is reloaded into memory the next time that the cluster is started.
    |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '|  | 集群数据节点在内存中保存的数据被写入磁盘，并在下次启动集群时重新加载到内存中。 |'
- en: '| **A.10.33.** | Is it a good idea to have more than one management node for
    an NDB Cluster? |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.33.** | 在 NDB 集群中是否有多个管理节点是个好主意？ |'
- en: '|  | It can be helpful as a fail-safe. Only one management node controls the
    cluster at any given time, but it is possible to configure one management node
    as primary, and one or more additional management nodes to take over in the event
    that the primary management node fails.See [Section 25.4.3, “NDB Cluster Configuration
    Files”](mysql-cluster-config-file.html "25.4.3 NDB Cluster Configuration Files"),
    for information on how to configure NDB Cluster management nodes. |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '|  | 它可以作为故障安全的辅助手段。在任何给定时间，只有一个管理节点控制集群，但可以配置一个管理节点作为主节点，以及一个或多个额外的管理节点在主管理节点发生故障时接管。请参阅[第
    25.4.3 节，“NDB 集群配置文件”](mysql-cluster-config-file.html "25.4.3 NDB 集群配置文件")，了解如何配置
    NDB 集群管理节点的信息。 |'
- en: '| **A.10.34.** | Can I mix different kinds of hardware and operating systems
    in one NDB Cluster? |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.34.** | 我可以在一个 NDB 集群中混合不同类型的硬件和操作系统吗？ |'
- en: '|  | Yes, as long as all machines and operating systems have the same “endianness”
    (all big-endian or all little-endian).It is also possible to use software from
    different NDB Cluster releases on different nodes. However, we support such use
    only as part of a rolling upgrade procedure (see [Section 25.6.5, “Performing
    a Rolling Restart of an NDB Cluster”](mysql-cluster-rolling-restart.html "25.6.5 Performing
    a Rolling Restart of an NDB Cluster")). |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的，只要所有机器和操作系统具有相同的“字节序”（全部大端或全部小端）。还可以在不同节点上使用不同NDB集群版本的软件。但是，我们仅支持此类用法作为滚动升级过程的一部分（请参见[第25.6.5节，“执行NDB集群的滚动重启”](mysql-cluster-rolling-restart.html
    "25.6.5 执行NDB集群的滚动重启")）。 |'
- en: '| **A.10.35.** | Can I run two data nodes on a single host? Two SQL nodes?
    |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.35.** | 我可以在单个主机上运行两个数据节点吗？两个SQL节点？ |'
- en: '|  | Yes, it is possible to do this. In the case of multiple data nodes, it
    is advisable (but not required) for each node to use a different data directory.
    If you want to run multiple SQL nodes on one machine, each instance of [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") must use a different TCP/IP port.Running data
    nodes and SQL nodes together on the same host is possible, but you should be aware
    that the [**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — The NDB Cluster
    Data Node Daemon") or [**ndbmtd**](mysql-cluster-programs-ndbmtd.html "25.5.3 ndbmtd
    — The NDB Cluster Data Node Daemon (Multi-Threaded)") processes may compete for
    memory with [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server"). |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的，可以这样做。在多个数据节点的情况下，建议（但不是必须）每个节点使用不同的数据目录。如果要在一台机器上运行多个SQL节点，[**mysqld**](mysqld.html
    "6.3.1 mysqld — MySQL服务器")的每个实例必须使用不同的TCP/IP端口。在同一主机上同时运行数据节点和SQL节点是可能的，但您应该知道[**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — NDB集群数据节点守护程序")或[**ndbmtd**](mysql-cluster-programs-ndbmtd.html
    "25.5.3 ndbmtd — NDB集群数据节点守护程序（多线程）")进程可能会与[**mysqld**](mysqld.html "6.3.1 mysqld
    — MySQL服务器")竞争内存。 |'
- en: '| **A.10.36.** | Can I use host names with NDB Cluster? |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.36.** | 我可以在NDB集群中使用主机名吗？ |'
- en: '|  | Yes, it is possible to use DNS and DHCP for cluster hosts. However, if
    your application requires “five nines” availability, you should use fixed (numeric)
    IP addresses, since making communication between Cluster hosts dependent on services
    such as DNS and DHCP introduces additional potential points of failure. |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的，可以使用DNS和DHCP来为集群主机提供服务。但是，如果您的应用程序需要“五个九”可用性，您应该使用固定（数字）IP地址，因为使集群主机之间的通信依赖于DNS和DHCP等服务会引入额外的潜在故障点。
    |'
- en: '| **A.10.37.** | Does NDB Cluster support IPv6? |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.37.** | NDB集群支持IPv6吗？ |'
- en: '|  | IPv6 is supported for connections between SQL nodes (MySQL servers), but
    connections between all other types of NDB Cluster nodes must use IPv4.In practical
    terms, this means that you can use IPv6 for replication between NDB Clusters,
    but connections between nodes in the same NDB Cluster must use IPv4\. For more
    information, see [Section 25.7.3, “Known Issues in NDB Cluster Replication”](mysql-cluster-replication-issues.html
    "25.7.3 Known Issues in NDB Cluster Replication"). |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '|  | SQL节点（MySQL服务器）之间支持IPv6连接，但所有其他类型的NDB集群节点之间的连接必须使用IPv4。实际上，这意味着您可以在NDB集群之间使用IPv6进行复制，但同一NDB集群中的节点之间的连接必须使用IPv4。有关更多信息，请参见[第25.7.3节，“NDB集群复制中的已知问题”](mysql-cluster-replication-issues.html
    "25.7.3 NDB集群复制中的已知问题")。 |'
- en: '| **A.10.38.** | How do I handle MySQL users in an NDB Cluster having multiple
    MySQL servers? |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.38.** | 如何处理在具有多个MySQL服务器的NDB集群中的MySQL用户？ |'
- en: '|  | MySQL user accounts and privileges are normally not automatically propagated
    between different MySQL servers accessing the same NDB Cluster. MySQL NDB Cluster
    provides support for shared and synchronized users and privileges using the [`NDB_STORED_USER`](privileges-provided.html#priv_ndb-stored-user)
    privilege; see [Distributed Privileges Using Shared Grant Tables](/doc/refman/5.7/en/mysql-cluster-privilege-distribution.html),
    for more information. You should be aware that this implementation was introduced
    in NDB 8.0, and is not compatible with the shared privileges mechanism employed
    in earlier versions of NDB Cluster. The older implementation is no longer supported
    in NDB 8.0. |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL用户帐户和权限通常不会在访问同一NDB集群的不同MySQL服务器之间自动传播。MySQL NDB集群通过[`NDB_STORED_USER`](privileges-provided.html#priv_ndb-stored-user)权限提供对共享和同步用户和权限的支持；有关更多信息，请参见[使用共享授权表进行分布式权限](/doc/refman/5.7/en/mysql-cluster-privilege-distribution.html)。您应该知道，此实现是在NDB
    8.0中引入的，与NDB集群早期版本中使用的共享权限机制不兼容。旧的实现在NDB 8.0中不再受支持。 |'
- en: '| **A.10.39.** | How do I continue to send queries in the event that one of
    the SQL nodes fails? |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.39.** | 如果 SQL 节点之一失败，我如何继续发送查询？ |'
- en: '|  | MySQL NDB Cluster does not provide any sort of automatic failover between
    SQL nodes. Your application must be prepared to handle the loss of SQL nodes and
    to fail over between them. |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL NDB 集群不提供任何自动故障转移功能，以在 SQL 节点之间进行故障转移。您的应用程序必须准备好处理 SQL 节点的丢失并在它们之间进行故障转移。
    |'
- en: '| **A.10.40.** | How do I back up and restore an NDB Cluster? |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.40.** | 如何备份和恢复 NDB 集群？ |'
- en: '|  | You can use the NDB Cluster native backup and restore functionality in
    the NDB management client and the [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") program. See [Section 25.6.8,
    “Online Backup of NDB Cluster”](mysql-cluster-backup.html "25.6.8 Online Backup
    of NDB Cluster"), and [Section 25.5.23, “ndb_restore — Restore an NDB Cluster
    Backup”](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore — Restore
    an NDB Cluster Backup").You can also use the traditional functionality provided
    for this purpose in [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program") and the MySQL server. See [Section 6.5.4, “mysqldump — A Database
    Backup Program”](mysqldump.html "6.5.4 mysqldump — A Database Backup Program"),
    for more information. |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '|  | 您可以在 NDB 管理客户端和 [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") 程序中使用 NDB 集群的本地备份和恢复功能。请参阅
    [第 25.6.8 节，“NDB 集群的在线备份”](mysql-cluster-backup.html "25.6.8 Online Backup of
    NDB Cluster")，以及 [第 25.5.23 节，“ndb_restore — 恢复 NDB 集群备份”](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup")。您还可以使用传统功能提供的功能在 [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program") 和 MySQL 服务器中进行此操作。有关更多信息，请参阅 [第
    6.5.4 节，“mysqldump — 数据库备份程序”](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program")。 |'
- en: '| **A.10.41.** | What is an “angel process”? |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| **A.10.41.** | 什么是“天使进程”？ |'
- en: '|  | This process monitors and, if necessary, attempts to restart the data
    node process. If you check the list of active processes on your system after starting
    [**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — The NDB Cluster Data
    Node Daemon"), you can see that there are actually 2 processes running by that
    name, as shown here (we omit the output from [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon") and [**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — The NDB Cluster Data Node Daemon") for brevity):'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 此进程监视并在必要时尝试重新启动数据节点进程。如果在启动 [**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — The NDB Cluster Data Node Daemon") 后检查系统上的活动进程列表，您会看到实际上有 2 个同名进程正在运行，如下所示（为简洁起见，我们省略了
    [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd — The NDB
    Cluster Management Server Daemon") 和 [**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — The NDB Cluster Data Node Daemon") 的输出）： |'
- en: '[PRE3]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The [**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — The NDB Cluster
    Data Node Daemon") process showing `0.0` for both memory and CPU usage is the
    angel process (although it actually does use a very small amount of each). This
    process merely checks to see if the main [**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — The NDB Cluster Data Node Daemon") or [**ndbmtd**](mysql-cluster-programs-ndbmtd.html
    "25.5.3 ndbmtd — The NDB Cluster Data Node Daemon (Multi-Threaded)") process (the
    primary data node process which actually handles the data) is running. If permitted
    to do so (for example, if the [`StopOnError`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-stoponerror)
    configuration parameter is set to `false`), the angel process tries to restart
    the primary data node process. |
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 显示内存和 CPU 使用率均为 `0.0` 的 [**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd
    — The NDB Cluster Data Node Daemon") 进程是天使进程（尽管实际上确实会使用很少量的内存和 CPU）。此进程仅检查主要的
    [**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — The NDB Cluster Data
    Node Daemon") 或 [**ndbmtd**](mysql-cluster-programs-ndbmtd.html "25.5.3 ndbmtd
    — The NDB Cluster Data Node Daemon (Multi-Threaded)") 进程（实际处理数据的主要数据节点进程）是否正在运行。如果允许（例如，如果
    [`StopOnError`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-stoponerror)
    配置参数设置为 `false`），天使进程会尝试重新启动主要数据节点进程。 |
