- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/constraint-foreign-key.html](https://dev.mysql.com/doc/refman/8.0/en/constraint-foreign-key.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/constraint-foreign-key.html](https://dev.mysql.com/doc/refman/8.0/en/constraint-foreign-key.html)
- en: 1.6.3.2 FOREIGN KEY Constraints
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 1.6.3.2 外键约束
- en: Foreign keys let you cross-reference related data across tables, and [foreign
    key constraints](glossary.html#glos_foreign_key_constraint "FOREIGN KEY constraint")
    help keep this spread-out data consistent.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 外键允许您在表之间交叉引用相关数据，而[外键约束](glossary.html#glos_foreign_key_constraint "FOREIGN
    KEY constraint")有助于保持这些分散的数据一致。
- en: MySQL supports `ON UPDATE` and `ON DELETE` foreign key references in [`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") and [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") statements. The available referential actions
    are `RESTRICT`, `CASCADE`, `SET NULL`, and `NO ACTION` (the default).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")和[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")语句中的`ON UPDATE`和`ON DELETE`外键引用。可用的引用操作包括`RESTRICT`、`CASCADE`、`SET
    NULL`和`NO ACTION`（默认）。
- en: '`SET DEFAULT` is also supported by the MySQL Server but is currently rejected
    as invalid by [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage
    Engine"). Since MySQL does not support deferred constraint checking, `NO ACTION`
    is treated as `RESTRICT`. For the exact syntax supported by MySQL for foreign
    keys, see [Section 15.1.20.5, “FOREIGN KEY Constraints”](create-table-foreign-keys.html
    "15.1.20.5 FOREIGN KEY Constraints").'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL服务器也支持`SET DEFAULT`，但当前被[`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine")拒绝为无效。由于MySQL不支持延迟约束检查，`NO ACTION`被视为`RESTRICT`。有关MySQL支持的外键的确切语法，请参见[Section 15.1.20.5,
    “FOREIGN KEY Constraints”](create-table-foreign-keys.html "15.1.20.5 FOREIGN KEY
    Constraints")。
- en: '`MATCH FULL`, `MATCH PARTIAL`, and `MATCH SIMPLE` are allowed, but their use
    should be avoided, as they cause the MySQL Server to ignore any `ON DELETE` or
    `ON UPDATE` clause used in the same statement. `MATCH` options do not have any
    other effect in MySQL, which in effect enforces `MATCH SIMPLE` semantics full-time.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`MATCH FULL`、`MATCH PARTIAL`和`MATCH SIMPLE`是允许的，但应避免使用，因为它们会导致MySQL服务器忽略同一语句中使用的任何`ON
    DELETE`或`ON UPDATE`子句。`MATCH`选项在MySQL中没有其他效果，实际上全天候强制执行`MATCH SIMPLE`语义。'
- en: MySQL requires that foreign key columns be indexed; if you create a table with
    a foreign key constraint but no index on a given column, an index is created.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL要求外键列被索引；如果您创建了一个具有外键约束但在给定列上没有索引的表，将会创建一个索引。
- en: 'You can obtain information about foreign keys from the Information Schema [`KEY_COLUMN_USAGE`](information-schema-key-column-usage-table.html
    "28.3.16 The INFORMATION_SCHEMA KEY_COLUMN_USAGE Table") table. An example of
    a query against this table is shown here:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从信息模式[`KEY_COLUMN_USAGE`](information-schema-key-column-usage-table.html
    "28.3.16 The INFORMATION_SCHEMA KEY_COLUMN_USAGE Table")表中获取有关外键的信息。这里展示了针对该表的查询示例：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Information about foreign keys on `InnoDB` tables can also be found in the [`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html
    "28.4.12 The INFORMATION_SCHEMA INNODB_FOREIGN Table") and [`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html
    "28.4.13 The INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table") tables, in the `INFORMATION_SCHEMA`
    database.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`InnoDB`表上外键的信息也可以在`INFORMATION_SCHEMA`数据库中的[`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html
    "28.4.12 The INFORMATION_SCHEMA INNODB_FOREIGN Table")和[`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html
    "28.4.13 The INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table")表中找到。
- en: '`InnoDB` and `NDB` tables support foreign keys.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`和`NDB`表支持外键。'
