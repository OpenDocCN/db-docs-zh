- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-change-primary.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-change-primary.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-change-primary.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-change-primary.html)
- en: 20.5.1.1 Changing the Primary
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 20.5.1.1 更改主节点
- en: This section explains how to change which member of a single-primary group is
    the primary, using the [`group_replication_set_as_primary()`](group-replication-functions-for-new-primary.html#function_group-replication-set-as-primary)
    function, which can be can be run on any member of the group. When this is done,
    the current primary becomes a read-only secondary, and the specified group member
    becomes the read-write primary; this replaces the usual primary election process
    as described in [Section 20.1.3.1, “Single-Primary Mode”](group-replication-single-primary-mode.html
    "20.1.3.1 Single-Primary Mode").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了如何更改单一主节点组中的主节点，使用[`group_replication_set_as_primary()`](group-replication-functions-for-new-primary.html#function_group-replication-set-as-primary)函数，该函数可以在组的任何成员上运行。执行此操作后，当前主节点将成为只读辅助节点，指定的组成员将成为读写主节点；这取代了[第20.1.3.1节，“单一主节点模式”](group-replication-single-primary-mode.html
    "20.1.3.1 Single-Primary Mode")中描述的通常的主节点选举过程。
- en: If a standard source-to-replica replication channel is running on the existing
    primary member in addition to the Group Replication channels, you must stop that
    replication channel before you can change the primary member. You can identify
    the current primary using the `MEMBER_ROLE` column in the Performance Schema table
    [`replication_group_members`](performance-schema-replication-group-members-table.html
    "29.12.11.11 The replication_group_members Table"), or the [`group_replication_primary_member`](group-replication-status-variables.html#statvar_group_replication_primary_member)
    status variable.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果标准的源到副本复制通道正在现有的主节点上运行，除了组复制通道之外，您必须在更改主节点之前停止该复制通道。您可以使用性能模式表[`replication_group_members`](performance-schema-replication-group-members-table.html
    "29.12.11.11 The replication_group_members Table")中的`MEMBER_ROLE`列，或者[`group_replication_primary_member`](group-replication-status-variables.html#statvar_group_replication_primary_member)状态变量来识别当前的主节点。
- en: If all members are not running the same MySQL Server version, you can specify
    a new primary member that is running the lowest MySQL Server version in the group
    only. This safeguard is applied to ensure the group maintains compatibility with
    new functions. This is recommended for all MySQL versions, and enforced beginning
    with MySQL 8.0.17.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有成员未运行相同的MySQL服务器版本，则只能指定运行组中最低MySQL服务器版本的新主节点。此保护措施旨在确保组与新功能保持兼容。这适用于所有MySQL版本，并从MySQL
    8.0.17开始强制执行。
- en: Any uncommitted transactions that the group is waiting on must be committed,
    rolled back, or terminated before the operation can complete. Before MySQL 8.0.29,
    the function waits for all active transactions on the existing primary to end,
    including incoming transactions that are started after the function is used. From
    MySQL 8.0.29, you can specify a timeout from 0 seconds (immediately) up to 3600
    seconds (60 minutes) for transactions that are running when you use the function.
    For the timeout to work, all members of the group must be at MySQL 8.0.29 or higher.
    There is no default setting for the timeout, so if you do not set it, there is
    no upper limit to the wait time, and new transactions can start during that time.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 组正在等待的任何未提交事务必须在操作完成之前提交、回滚或终止。在MySQL 8.0.29之前，该函数会等待现有主节点上的所有活动事务结束，包括在使用该函数后启动的传入事务。从MySQL
    8.0.29开始，您可以为在使用该函数时正在运行的事务指定从0秒（立即）到3600秒（60分钟）的超时时间。为使超时生效，组的所有成员必须运行MySQL 8.0.29或更高版本。超时没有默认设置，因此如果您不设置它，等待时间没有上限，新事务可以在此期间启动。
- en: When the timeout expires, for any transactions that did not yet reach their
    commit phase, the client session is disconnected so that the transaction does
    not proceed. Transactions that reached their commit phase are allowed to complete.
    When you set a timeout, it also prevents new transactions starting on the primary
    from that point on. Explicitly defined transactions (with a `START TRANSACTION`
    or `BEGIN` statement) are subject to the timeout, disconnection, and incoming
    transaction blocking even if they do not modify any data. To allow inspection
    of the primary while the function is operating, single statements that do not
    modify data, as listed in [Permitted Queries Under Consistency Rules](group-replication-configuring-consistency-guarantees.html#group-replication-nonblocking
    "Permitted Queries Under Consistency Rules"), are permitted to proceed.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当超时到期时，对于尚未达到提交阶段的任何事务，客户端会被断开连接，以防事务继续进行。已达到提交阶段的事务将被允许完成。设置超时还会阻止从那时起在主服务器上启动新事务。即使它们不修改任何数据，显式定义的事务（使用`START
    TRANSACTION`或`BEGIN`语句）也会受到超时、断开连接和传入事务阻止的影响。为了允许在函数运行时检查主服务器，允许执行不修改数据的单个语句，如[一致性规则下允许的查询](group-replication-configuring-consistency-guarantees.html#group-replication-nonblocking
    "一致性规则下允许的查询")中列出的语句。
- en: 'Pass in the [`server_uuid`](replication-options.html#sysvar_server_uuid) of
    the member which you want to become the new primary of the group by issuing the
    following statement:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过发出以下语句，传递成员的[`server_uuid`](replication-options.html#sysvar_server_uuid)，该成员将成为组的新主要成员：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In MySQL 8.0.29 and later, you can add a timeout, as shown here:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.29及更高版本中，您可以添加一个超时，如下所示：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To check the status of the timeout, use the `PROCESSLIST_INFO` column in the
    Performance Schema [`threads`](performance-schema-threads-table.html "29.12.21.8 The
    threads Table") table, like this:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查超时的状态，请使用性能模式[`threads`](performance-schema-threads-table.html "29.12.21.8 threads表")表中的`PROCESSLIST_INFO`列，如下所示：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The status shows when the transaction monitoring thread has been created, when
    new transactions have been stopped, when the client connections with uncommitted
    transactions have been disconnected, and finally, when the process is complete
    and new transactions are allowed again.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 状态显示了事务监控线程何时被创建，新事务何时被停止，带有未提交事务的客户端连接何时被断开，最后，进程何时完成并允许新事务再次进行。
- en: 'While the action runs, you can check its progress by issuing the statement
    shown here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在操作运行时，您可以通过发出以下语句来检查其进度：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
