- en: 13.2 Date and Time Data Types
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.2 日期和时间数据类型
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/date-and-time-types.html](https://dev.mysql.com/doc/refman/8.0/en/date-and-time-types.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/date-and-time-types.html](https://dev.mysql.com/doc/refman/8.0/en/date-and-time-types.html)
- en: '[13.2.1 Date and Time Data Type Syntax](date-and-time-type-syntax.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.1 日期和时间数据类型语法](date-and-time-type-syntax.html)'
- en: '[13.2.2 The DATE, DATETIME, and TIMESTAMP Types](datetime.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.2 DATE、DATETIME 和 TIMESTAMP 类型](datetime.html)'
- en: '[13.2.3 The TIME Type](time.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.3 TIME 类型](time.html)'
- en: '[13.2.4 The YEAR Type](year.html)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.4 YEAR 类型](year.html)'
- en: '[13.2.5 Automatic Initialization and Updating for TIMESTAMP and DATETIME](timestamp-initialization.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.5 TIMESTAMP 和 DATETIME 的自动初始化和更新](timestamp-initialization.html)'
- en: '[13.2.6 Fractional Seconds in Time Values](fractional-seconds.html)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.6 时间值中的小数秒](fractional-seconds.html)'
- en: '[13.2.7 What Calendar Is Used By MySQL?](mysql-calendar.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.7 MySQL 使用的是哪种日历？](mysql-calendar.html)'
- en: '[13.2.8 Conversion Between Date and Time Types](date-and-time-type-conversion.html)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.8 日期和时间类型之间的转换](date-and-time-type-conversion.html)'
- en: '[13.2.9 2-Digit Years in Dates](two-digit-years.html)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.2.9 日期中的两位数年份](two-digit-years.html)'
- en: The date and time data types for representing temporal values are [`DATE`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), [`TIME`](time.html "13.2.3 The
    TIME Type"), [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types"), [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types"), and [`YEAR`](year.html "13.2.4 The YEAR Type"). Each temporal type has
    a range of valid values, as well as a “zero” value that may be used when you specify
    an invalid value that MySQL cannot represent. The [`TIMESTAMP`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") and [`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") types have special automatic
    updating behavior, described in [Section 13.2.5, “Automatic Initialization and
    Updating for TIMESTAMP and DATETIME”](timestamp-initialization.html "13.2.5 Automatic
    Initialization and Updating for TIMESTAMP and DATETIME").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 用于表示时间值的日期和时间数据类型是[`DATE`](datetime.html "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型")、[`TIME`](time.html
    "13.2.3 TIME 类型")、[`DATETIME`](datetime.html "13.2.2 DATE、DATETIME 和 TIMESTAMP
    类型")、[`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型") 和 [`YEAR`](year.html
    "13.2.4 YEAR 类型")。每种时间类型都有一系列有效值，以及一个“零”值，当您指定MySQL无法表示的无效值时可以使用。[`TIMESTAMP`](datetime.html
    "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型") 和 [`DATETIME`](datetime.html "13.2.2 DATE、DATETIME
    和 TIMESTAMP 类型") 类型具有特殊的自动更新行为，详见[第13.2.5节，“TIMESTAMP 和 DATETIME 的自动初始化和更新”](timestamp-initialization.html
    "13.2.5 TIMESTAMP 和 DATETIME 的自动初始化和更新")。
- en: For information about storage requirements of the temporal data types, see [Section 13.7,
    “Data Type Storage Requirements”](storage-requirements.html "13.7 Data Type Storage
    Requirements").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有关时间数据类型的存储要求的信息，请参见[第13.7节，“数据类型存储要求”](storage-requirements.html "13.7 数据类型存储要求")。
- en: For descriptions of functions that operate on temporal values, see [Section 14.7,
    “Date and Time Functions”](date-and-time-functions.html "14.7 Date and Time Functions").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有关操作时间值的函数的描述，请参见[第14.7节，“日期和时间函数”](date-and-time-functions.html "14.7 日期和时间函数")。
- en: 'Keep in mind these general considerations when working with date and time types:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理日期和时间类型时，请记住以下一般考虑事项：
- en: MySQL retrieves values for a given date or time type in a standard output format,
    but it attempts to interpret a variety of formats for input values that you supply
    (for example, when you specify a value to be assigned to or compared to a date
    or time type). For a description of the permitted formats for date and time types,
    see [Section 11.1.3, “Date and Time Literals”](date-and-time-literals.html "11.1.3 Date
    and Time Literals"). It is expected that you supply valid values. Unpredictable
    results may occur if you use values in other formats.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL以标准输出格式检索给定日期或时间类型的值，但它尝试解释您提供的各种输入值的格式（例如，当您指定要分配给或与日期或时间类型进行比较的值时）。有关日期和时间类型允许的格式的描述，请参见[第11.1.3节，“日期和时间文字”](date-and-time-literals.html
    "11.1.3 日期和时间文字")。预期您提供有效值。如果您使用其他格式的值，可能会导致不可预测的结果。
- en: Although MySQL tries to interpret values in several formats, date parts must
    always be given in year-month-day order (for example, `'98-09-04'`), rather than
    in the month-day-year or day-month-year orders commonly used elsewhere (for example,
    `'09-04-98'`, `'04-09-98'`). To convert strings in other orders to year-month-day
    order, the [`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date)
    function may be useful.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管 MySQL 尝试以几种格式解释值，但日期部分必须始终按年-月-日的顺序给出（例如，`'98-09-04'`），而不是在其他地方通常使用的月-日-年或日-月-年的顺序（例如，`'09-04-98'`，`'04-09-98'`）。要将其他顺序的字符串转换为年-月-日顺序，可能会有用的是[`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date)
    函数。
- en: 'Dates containing 2-digit year values are ambiguous because the century is unknown.
    MySQL interprets 2-digit year values using these rules:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含 2 位年份值的日期是模棱两可的，因为世纪是未知的。MySQL 使用以下规则解释 2 位年份值：
- en: Year values in the range `70-99` become `1970-1999`.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围在 `70-99` 的年份值变为 `1970-1999`。
- en: Year values in the range `00-69` become `2000-2069`.
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围在 `00-69` 的年份值变为 `2000-2069`。
- en: See also [Section 13.2.9, “2-Digit Years in Dates”](two-digit-years.html "13.2.9 2-Digit
    Years in Dates").
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另请参阅[第 13.2.9 节，“日期中的 2 位年份”](two-digit-years.html "13.2.9 日期中的 2 位年份")。
- en: Conversion of values from one temporal type to another occurs according to the
    rules in [Section 13.2.8, “Conversion Between Date and Time Types”](date-and-time-type-conversion.html
    "13.2.8 Conversion Between Date and Time Types").
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一个时间类型转换为另一个时间类型的值转换遵循[第 13.2.8 节，“日期和时间类型之间的转换”](date-and-time-type-conversion.html
    "13.2.8 日期和时间类型之间的转换")中的规则。
- en: MySQL automatically converts a date or time value to a number if the value is
    used in numeric context and vice versa.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果将日期或时间值用于数字上下文中，MySQL 将自动将其转换为数字，反之亦然。
- en: By default, when MySQL encounters a value for a date or time type that is out
    of range or otherwise invalid for the type, it converts the value to the “zero”
    value for that type. The exception is that out-of-range [`TIME`](time.html "13.2.3 The
    TIME Type") values are clipped to the appropriate endpoint of the [`TIME`](time.html
    "13.2.3 The TIME Type") range.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，当 MySQL 遇到超出范围或其他类型无效的日期或时间类型的值时，它将该值转换为该类型的“零”值。例外情况是，超出范围的[`TIME`](time.html
    "13.2.3 TIME 类型")值将被剪切到[`TIME`](time.html "13.2.3 TIME 类型")范围的适当端点。
- en: By setting the SQL mode to the appropriate value, you can specify more exactly
    what kind of dates you want MySQL to support. (See [Section 7.1.11, “Server SQL
    Modes”](sql-mode.html "7.1.11 Server SQL Modes").) You can get MySQL to accept
    certain dates, such as `'2009-11-31'`, by enabling the [`ALLOW_INVALID_DATES`](sql-mode.html#sqlmode_allow_invalid_dates)
    SQL mode. This is useful when you want to store a “possibly wrong” value which
    the user has specified (for example, in a web form) in the database for future
    processing. Under this mode, MySQL verifies only that the month is in the range
    from 1 to 12 and that the day is in the range from 1 to 31.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将 SQL 模式设置为适当的值，您可以更准确地指定 MySQL 支持的日期类型。（参见[第 7.1.11 节，“服务器 SQL 模式”](sql-mode.html
    "7.1.11 服务器 SQL 模式")。）您可以通过启用[`ALLOW_INVALID_DATES`](sql-mode.html#sqlmode_allow_invalid_dates)
    SQL 模式，使 MySQL 接受某些日期，例如 `'2009-11-31'`。当您希望将用户指定的“可能错误”的值（例如在 Web 表单中）存储在数据库中以供将来处理时，这将非常有用。在此模式下，MySQL
    仅验证月份在 1 到 12 的范围内，日期在 1 到 31 的范围内。
- en: MySQL permits you to store dates where the day or month and day are zero in
    a [`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") or
    [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") column.
    This is useful for applications that need to store birthdates for which you may
    not know the exact date. In this case, you simply store the date as `'2009-00-00'`
    or `'2009-01-00'`. However, with dates such as these, you should not expect to
    get correct results for functions such as [`DATE_SUB()`](date-and-time-functions.html#function_date-sub)
    or [`DATE_ADD()`](date-and-time-functions.html#function_date-add) that require
    complete dates. To disallow zero month or day parts in dates, enable the [`NO_ZERO_IN_DATE`](sql-mode.html#sqlmode_no_zero_in_date)
    mode.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 允许您在[`DATE`](datetime.html "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型")或[`DATETIME`](datetime.html
    "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型")列中存储日期，其中日期或月份和日期为零。这对于需要存储生日但可能不知道确切日期的应用程序非常有用。在这种情况下，您只需将日期存储为
    `'2009-00-00'` 或 `'2009-01-00'`。但是，对于这样的日期，您不应该期望对于需要完整日期的函数（例如[`DATE_SUB()`](date-and-time-functions.html#function_date-sub)
    或[`DATE_ADD()`](date-and-time-functions.html#function_date-add)）获得正确的结果。要禁止日期中的零月份或日期部分，启用[`NO_ZERO_IN_DATE`](sql-mode.html#sqlmode_no_zero_in_date)
    模式。
- en: MySQL permits you to store a “zero” value of `'0000-00-00'` as a “dummy date.”
    In some cases, this is more convenient than using `NULL` values, and uses less
    data and index space. To disallow `'0000-00-00'`, enable the [`NO_ZERO_DATE`](sql-mode.html#sqlmode_no_zero_date)
    mode.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL允许您将“零”值`'0000-00-00'`存储为“虚拟日期”。在某些情况下，这比使用`NULL`值更方便，并且使用的数据和索引空间更少。要禁止`'0000-00-00'`，请启用[`NO_ZERO_DATE`](sql-mode.html#sqlmode_no_zero_date)模式。
- en: “Zero” date or time values used through Connector/ODBC are converted automatically
    to `NULL` because ODBC cannot handle such values.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “Zero”日期或时间值在Connector/ODBC中使用时会自动转换为`NULL`，因为ODBC无法处理这些值。
- en: The following table shows the format of the “zero” value for each type. The
    “zero” values are special, but you can store or refer to them explicitly using
    the values shown in the table. You can also do this using the values `'0'` or
    `0`, which are easier to write. For temporal types that include a date part ([`DATE`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), [`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), and [`TIMESTAMP`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")), use of these values may produce
    warning or errors. The precise behavior depends on which, if any, of the strict
    and [`NO_ZERO_DATE`](sql-mode.html#sqlmode_no_zero_date) SQL modes are enabled;
    see [Section 7.1.11, “Server SQL Modes”](sql-mode.html "7.1.11 Server SQL Modes").
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了每种类型的“零”值的格式。这些“零”值是特殊的，但您可以使用表中显示的值显式存储或引用它们。您还可以使用更容易写的值`'0'`或`0`来做到这一点。对于包含日期部分的时间类型（[`日期`](datetime.html
    "13.2.2 日期、时间和时间戳类型")、[`日期时间`](datetime.html "13.2.2 日期、时间和时间戳类型")和[`时间戳`](datetime.html
    "13.2.2 日期、时间和时间戳类型")），使用这些值可能会产生警告或错误。具体行为取决于启用的严格和[`NO_ZERO_DATE`](sql-mode.html#sqlmode_no_zero_date)
    SQL模式中的哪些；请参阅[第7.1.11节，“服务器SQL模式”](sql-mode.html "7.1.11 服务器SQL模式")。
- en: '| Data Type | “Zero” Value |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 数据类型 | “零”值 |'
- en: '| [`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    | `''0000-00-00''` |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`日期`](datetime.html "13.2.2 日期、时间和时间戳类型") | `''0000-00-00''` |'
- en: '| [`TIME`](time.html "13.2.3 The TIME Type") | `''00:00:00''` |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`时间`](time.html "13.2.3 时间类型") | `''00:00:00''` |'
- en: '| [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    | `''0000-00-00 00:00:00''` |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`日期时间`](datetime.html "13.2.2 日期、时间和时间戳类型") | `''0000-00-00 00:00:00''`
    |'
- en: '| [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    | `''0000-00-00 00:00:00''` |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`时间戳`](datetime.html "13.2.2 日期、时间和时间戳类型") | `''0000-00-00 00:00:00''` |'
- en: '| [`YEAR`](year.html "13.2.4 The YEAR Type") | `0000` |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`年份`](year.html "13.2.4 年份类型") | `0000` |'
