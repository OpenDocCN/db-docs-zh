- en: 17.8.7 Configuring InnoDB I/O Capacity
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.8.7 配置InnoDB I/O容量
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-configuring-io-capacity.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-configuring-io-capacity.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-configuring-io-capacity.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-configuring-io-capacity.html)
- en: The `InnoDB` master thread and other threads perform various tasks in the background,
    most of which are I/O related, such as flushing dirty pages from the buffer pool
    and writing changes from the change buffer to the appropriate secondary indexes.
    `InnoDB` attempts to perform these tasks in a way that does not adversely affect
    the normal working of the server. It tries to estimate the available I/O bandwidth
    and tune its activities to take advantage of available capacity.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`主线程和其他线程在后台执行各种任务，其中大部分与I/O相关，例如从缓冲池中刷新脏页并将更改从更改缓冲区写入适当的辅助索引。`InnoDB`试图以不会对服务器正常工作产生不利影响的方式执行这些任务。它试图估计可用的I/O带宽，并调整其活动以利用可用容量。'
- en: The [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    variable defines the overall I/O capacity available to `InnoDB`. It should be
    set to approximately the number of I/O operations that the system can perform
    per second (IOPS). When [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    is set, `InnoDB` estimates the I/O bandwidth available for background tasks based
    on the set value.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)变量定义了`InnoDB`可用的整体I/O容量。它应该设置为系统每秒可以执行的I/O操作数（IOPS）的大致数量。当设置了[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)时，`InnoDB`根据设置的值估计可用于后台任务的I/O带宽。'
- en: You can set [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    to a value of 100 or greater. The default value is `200`. Typically, values around
    100 are appropriate for consumer-level storage devices, such as hard drives up
    to 7200 RPMs. Faster hard drives, RAID configurations, and solid state drives
    (SSDs) benefit from higher values.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置为100或更高的值。默认值为`200`。通常，约100左右的值适用于消费级存储设备，例如转速为7200转/分的硬盘。速度更快的硬盘、RAID配置和固态硬盘（SSD）受益于更高的值。
- en: Ideally, keep the setting as low as practical, but not so low that background
    activities fall behind. If the value is too high, data is removed from the buffer
    pool and change buffer too quickly for caching to provide a significant benefit.
    For busy systems capable of higher I/O rates, you can set a higher value to help
    the server handle the background maintenance work associated with a high rate
    of row changes. Generally, you can increase the value as a function of the number
    of drives used for `InnoDB` I/O. For example, you can increase the value on systems
    that use multiple disks or SSDs.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，保持设置尽可能低，但不要太低以至于后台活动落后。如果值设置过高，数据会从缓冲池和更改缓冲区中被过快地移除，使得缓存无法提供显著的好处。对于能够处理更高I/O速率的繁忙系统，你可以设置更高的值来帮助服务器处理与高频率行更改相关的后台维护工作。通常，你可以根据用于`InnoDB`
    I/O的驱动器数量的函数增加该值。例如，你可以在使用多个磁盘或SSD的系统上增加该值。
- en: The default setting of 200 is generally sufficient for a lower-end SSD. For
    a higher-end, bus-attached SSD, consider a higher setting such as 1000, for example.
    For systems with individual 5400 RPM or 7200 RPM drives, you might lower the value
    to 100, which represents an estimated proportion of the I/O operations per second
    (IOPS) available to older-generation disk drives that can perform about 100 IOPS.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 默认设置的200通常对于低端SSD足够。对于高端总线连接的SSD，考虑更高的设置，例如1000。对于使用单独的5400转/分或7200转/分驱动器的系统，你可能会将值降低到100，这代表了每秒I/O操作（IOPS）的估计比例，适用于可以执行约100
    IOPS的旧一代磁盘驱动器。
- en: Although you can specify a high value such as a million, in practice such large
    values have little benefit. Generally, a value higher than 20000 is not recommended
    unless you are certain that lower values are insufficient for your workload.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以指定一个很高的值，比如一百万，但实际上这样大的值很少有好处。通常，建议不要将值设定为20000以上，除非你确定较低的值对你的工作负载不足。
- en: Consider write workload when tuning [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity).
    Systems with large write workloads are likely to benefit from a higher setting.
    A lower setting may be sufficient for systems with a small write workload.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在调整[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)时考虑写入工作负载。具有大量写入工作负载的系统可能会受益于更高的设置。对于写入工作负载较小的系统，较低的设置可能已经足够。
- en: The [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting is not a per buffer pool instance setting. Available I/O capacity is distributed
    equally among buffer pool instances for flushing activities.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置不是每个缓冲池实例的设置。可用的I/O容量在刷新活动中均匀分配给缓冲池实例。'
- en: You can set the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    value in the MySQL option file (`my.cnf` or `my.ini`) or modify it at runtime
    using a [`SET GLOBAL`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement, which requires privileges sufficient to set global system variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在MySQL选项文件（`my.cnf`或`my.ini`）中设置[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)的值，或者使用[`SET
    GLOBAL`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句在运行时修改它，这需要足够的权限来设置全局系统变量。请参阅[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: Ignoring I/O Capacity at Checkpoints
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在检查点忽略I/O容量
- en: The [`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync) variable,
    which is enabled by default, causes the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting to be ignored during bursts of I/O activity that occur at [checkpoints](glossary.html#glos_checkpoint
    "checkpoint"). To adhere to the I/O rate defined by the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting, disable [`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)变量默认启用，导致在发生I/O活动突发时，会忽略[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置，这种活动发生在[检查点](glossary.html#glos_checkpoint
    "checkpoint")。要遵守[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置定义的I/O速率，请禁用[`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)。'
- en: You can set the [`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)
    value in the MySQL option file (`my.cnf` or `my.ini`) or modify it at runtime
    using a [`SET GLOBAL`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement, which requires privileges sufficient to set global system variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在MySQL选项文件（`my.cnf`或`my.ini`）中设置[`innodb_flush_sync`](innodb-parameters.html#sysvar_innodb_flush_sync)的值，或者使用[`SET
    GLOBAL`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句在运行时修改它，这需要足够的权限来设置全局系统变量。请参阅[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: Configuring an I/O Capacity Maximum
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置I/O容量最大值
- en: If flushing activity falls behind, `InnoDB` can flush more aggressively, at
    a higher rate of I/O operations per second (IOPS) than defined by the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    variable. The [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    variable defines a maximum number of IOPS performed by `InnoDB` background tasks
    in such situations.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果刷新活动落后，`InnoDB`可以以比[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)变量定义的更高的IOPS（每秒I/O操作数）更积极地刷新。[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)变量定义了`InnoDB`在这种情况下执行的后台任务的最大IOPS数量。
- en: If you specify an [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting at startup but do not specify a value for [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max),
    [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    defaults to twice the value of [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    or 2000, whichever value is greater.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在启动时指定了[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置，但未为[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)指定值，则[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)默认为[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)值的两倍或2000，以较大值为准。
- en: When configuring [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max),
    twice the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    is often a good starting point. The default value of 2000 is intended for workloads
    that use an SSD or more than one regular disk drive. A setting of 2000 is likely
    too high for workloads that do not use SSDs or multiple disk drives, and could
    allow too much flushing. For a single regular disk drive, a setting between 200
    and 400 is recommended. For a high-end, bus-attached SSD, consider a higher setting
    such as 2500\. As with the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting, keep the setting as low as practical, but not so low that `InnoDB` cannot
    sufficiently extend rate of IOPS beyond the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    setting.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)时，通常将[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)的两倍作为起点是一个不错的选择。默认值为2000适用于使用SSD或多个常规磁盘驱动器的工作负载。对于不使用SSD或多个磁盘驱动器的工作负载，设置为2000可能过高，可能会导致过多的刷新。对于单个常规磁盘驱动器，建议设置在200到400之间。对于高端、总线连接的SSD，考虑设置更高的值，如2500。与[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置一样，保持设置尽可能低，但不要太低以至于`InnoDB`无法足够扩展IOPS的速率超过[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)设置。
- en: Consider write workload when tuning [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max).
    Systems with large write workloads may benefit from a higher setting. A lower
    setting may be sufficient for systems with a small write workload.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在调整[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)时，请考虑写入工作负载。具有大量写入工作负载的系统可能会受益于更高的设置。对于具有较小写入工作负载的系统，较低的设置可能足够。
- en: '[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    cannot be set to a value lower than the [`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)
    value.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)不能设置为低于[`innodb_io_capacity`](innodb-parameters.html#sysvar_innodb_io_capacity)值。'
- en: Setting [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    to `DEFAULT` using a [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable
    Assignment") statement (`SET GLOBAL innodb_io_capacity_max=DEFAULT`) sets [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    to the maximum value.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")语句将[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)设置为`DEFAULT`（`SET
    GLOBAL innodb_io_capacity_max=DEFAULT`）将[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)设置为最大值。
- en: The [`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    limit applies to all buffer pool instances. It is not a per buffer pool instance
    setting.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_io_capacity_max`](innodb-parameters.html#sysvar_innodb_io_capacity_max)
    限制适用于所有缓冲池实例。这不是每个缓冲池实例的设置。'
