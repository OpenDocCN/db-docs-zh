- en: 13.6 Data Type Default Values
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.6 数据类型默认值
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/data-type-defaults.html](https://dev.mysql.com/doc/refman/8.0/en/data-type-defaults.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/data-type-defaults.html](https://dev.mysql.com/doc/refman/8.0/en/data-type-defaults.html)
- en: Data type specifications can have explicit or implicit default values.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型规范可以具有显式或隐式默认值。
- en: 'A `DEFAULT *`value`*` clause in a data type specification explicitly indicates
    a default value for a column. Examples:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型规范中的`DEFAULT *`value`*`子句明确指示了列的默认值。例如：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`SERIAL DEFAULT VALUE` is a special case. In the definition of an integer column,
    it is an alias for `NOT NULL AUTO_INCREMENT UNIQUE`.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`SERIAL DEFAULT VALUE`是一个特殊情况。在整数列的定义中，它是`NOT NULL AUTO_INCREMENT UNIQUE`的别名。'
- en: Some aspects of explicit `DEFAULT` clause handling are version dependent, as
    described following.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 显式`DEFAULT`子句处理的某些方面取决于版本，如下所述。
- en: '[Explicit Default Handling as of MySQL 8.0.13](data-type-defaults.html#data-type-defaults-explicit
    "Explicit Default Handling as of MySQL 8.0.13")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[MySQL 8.0.13之后的显式默认处理](https://dev.mysql.com/doc/refman/8.0/en/data-type-defaults.html#data-type-defaults-explicit
    "MySQL 8.0.13之后的显式默认处理")'
- en: '[Explicit Default Handling Prior to MySQL 8.0.13](data-type-defaults.html#data-type-defaults-explicit-old
    "Explicit Default Handling Prior to MySQL 8.0.13")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[MySQL 8.0.13之前的显式默认处理](https://dev.mysql.com/doc/refman/8.0/en/data-type-defaults.html#data-type-defaults-explicit-old
    "MySQL 8.0.13之前的显式默认处理")'
- en: '[Implicit Default Handling](data-type-defaults.html#data-type-defaults-implicit
    "Implicit Default Handling")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[隐式默认处理](https://dev.mysql.com/doc/refman/8.0/en/data-type-defaults.html#data-type-defaults-implicit
    "隐式默认处理")'
- en: Explicit Default Handling as of MySQL 8.0.13
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MySQL 8.0.13之后的显式默认处理
- en: 'The default value specified in a `DEFAULT` clause can be a literal constant
    or an expression. With one exception, enclose expression default values within
    parentheses to distinguish them from literal constant default values. Examples:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在`DEFAULT`子句中指定的默认值可以是字面常量或表达式。除了一个例外，将表达式默认值括在括号中以区分它们与字面常量默认值。例如：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The exception is that, for [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types") and [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types") columns, you can specify the [`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    function as the default, without enclosing parentheses. See [Section 13.2.5, “Automatic
    Initialization and Updating for TIMESTAMP and DATETIME”](timestamp-initialization.html
    "13.2.5 Automatic Initialization and Updating for TIMESTAMP and DATETIME").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例外情况是，对于[`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME和TIMESTAMP类型")和[`DATETIME`](datetime.html
    "13.2.2 DATE、DATETIME和TIMESTAMP类型")列，您可以指定[`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)函数作为默认值，而无需括号。请参阅[第13.2.5节，“TIMESTAMP和DATETIME的自动初始化和更新”](timestamp-initialization.html
    "13.2.5 TIMESTAMP和DATETIME的自动初始化和更新")。
- en: 'The [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types"), [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types"), `GEOMETRY`, and [`JSON`](json.html "13.5 The
    JSON Data Type") data types can be assigned a default value only if the value
    is written as an expression, even if the expression value is a literal:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 只有将[`BLOB`](blob.html "13.3.4 BLOB和TEXT类型")、[`TEXT`](blob.html "13.3.4 BLOB和TEXT类型")、`GEOMETRY`和[`JSON`](json.html
    "13.5 JSON数据类型")数据类型写为表达式时，才能为其分配默认值，即使表达式值是字面值：
- en: 'This is permitted (literal default specified as expression):'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是允许的（将字面默认指定为表达式）：
- en: '[PRE2]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This produces an error (literal default not specified as expression):'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这会产生一个错误（未将字面默认指定为表达式）：
- en: '[PRE3]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Expression default values must adhere to the following rules. An error occurs
    if an expression contains disallowed constructs.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式默认值必须遵守以下规则。如果表达式包含不允许的结构，则会发生错误。
- en: Literals, built-in functions (both deterministic and nondeterministic), and
    operators are permitted.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字面常量、内置函数（确定性和非确定性）和运算符是允许的。
- en: Subqueries, parameters, variables, stored functions, and loadable functions
    are not permitted.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子查询、参数、变量、存储函数和可加载函数不被允许。
- en: An expression default value cannot depend on a column that has the `AUTO_INCREMENT`
    attribute.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表达式默认值不能依赖于具有`AUTO_INCREMENT`属性的列。
- en: An expression default value for one column can refer to other table columns,
    with the exception that references to generated columns or columns with expression
    default values must be to columns that occur earlier in the table definition.
    That is, expression default values cannot contain forward references to generated
    columns or columns with expression default values.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个列的表达式默认值可以引用其他表列，但是不能引用生成列或具有表达式默认值的列，除非这些列在表定义中出现在前面。也就是说，表达式默认值不能包含对生成列或具有表达式默认值的列的前向引用。
- en: The ordering constraint also applies to the use of [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") to reorder table columns. If the resulting table
    would have an expression default value that contains a forward reference to a
    generated column or column with an expression default value, the statement fails.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 排序约束也适用于使用[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")重新排序表列。如果结果表会有一个包含对生成列或具有表达式默认值的列的前向引用的表达式默认值，则该语句将失败。
- en: Note
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If any component of an expression default value depends on the SQL mode, different
    results may occur for different uses of the table unless the SQL mode is the same
    during all uses.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表达式默认值的任何组件依赖于SQL模式，除非在所有使用期间SQL模式相同，否则对表的不同使用可能会导致不同的结果。
- en: For [`CREATE TABLE ... LIKE`](create-table-like.html "15.1.20.3 CREATE TABLE
    ... LIKE Statement") and [`CREATE TABLE ... SELECT`](create-table-select.html
    "15.1.20.4 CREATE TABLE ... SELECT Statement"), the destination table preserves
    expression default values from the original table.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[`CREATE TABLE ... LIKE`](create-table-like.html "15.1.20.3 CREATE TABLE ...
    LIKE Statement")和[`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE
    TABLE ... SELECT Statement")，目标表会保留原始表的表达式默认值。
- en: If an expression default value refers to a nondeterministic function, any statement
    that causes the expression to be evaluated is unsafe for statement-based replication.
    This includes statements such as [`INSERT`](insert.html "15.2.7 INSERT Statement")
    and [`UPDATE`](update.html "15.2.17 UPDATE Statement"). In this situation, if
    binary logging is disabled, the statement is executed as normal. If binary logging
    is enabled and [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is set to `STATEMENT`, the statement is logged and executed but a warning message
    is written to the error log, because replication slaves might diverge. When [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is set to `MIXED` or `ROW`, the statement is executed as normal.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表达式默认值引用了一个非确定性函数，任何导致表达式被评估的语句对于基于语句的复制都是不安全的。这包括诸如[`INSERT`](insert.html
    "15.2.7 INSERT Statement")和[`UPDATE`](update.html "15.2.17 UPDATE Statement")之类的语句。在这种情况下，如果二进制日志记录被禁用，该语句将正常执行。如果启用了二进制日志记录并且[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)设置为`STATEMENT`，则该语句将被记录并执行，但会向错误日志写入警告消息，因为复制从机可能会发散。当[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)设置为`MIXED`或`ROW`时，该语句将正常执行。
- en: 'When inserting a new row, the default value for a column with an expression
    default can be inserted either by omitting the column name or by specifying the
    column as `DEFAULT` (just as for columns with literal defaults):'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在插入新行时，具有表达式默认值的列的默认值可以通过省略列名或将列指定为`DEFAULT`来插入（与具有文字默认值的列一样）：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: However, the use of [`DEFAULT(*`col_name`*)`](miscellaneous-functions.html#function_default)
    to specify the default value for a named column is permitted only for columns
    that have a literal default value, not for columns that have an expression default
    value.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用[`DEFAULT(*`col_name`*)`](miscellaneous-functions.html#function_default)为命名列指定默认值仅适用于具有文字默认值的列，而不适用于具有表达式默认值的列。
- en: Not all storage engines permit expression default values. For those that do
    not, an [`ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_unsupported_action_on_default_val_generated)
    error occurs.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 不是所有存储引擎都允许表达式默认值。对于那些不允许的引擎，会出现[`ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_unsupported_action_on_default_val_generated)错误。
- en: If a default value evaluates to a data type that differs from the declared column
    type, implicit coercion to the declared type occurs according to the usual MySQL
    type-conversion rules. See [Section 14.3, “Type Conversion in Expression Evaluation”](type-conversion.html
    "14.3 Type Conversion in Expression Evaluation").
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果默认值计算结果的数据类型与声明的列类型不同，根据通常的 MySQL 类型转换规则会发生隐式强制转换到声明的类型。参见 [第 14.3 节，“表达式评估中的类型转换”](type-conversion.html
    "14.3 表达式评估中的类型转换")。
- en: Explicit Default Handling Prior to MySQL 8.0.13
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显式默认处理在 MySQL 8.0.13 之前
- en: With one exception, the default value specified in a `DEFAULT` clause must be
    a literal constant; it cannot be a function or an expression. This means, for
    example, that you cannot set the default for a date column to be the value of
    a function such as [`NOW()`](date-and-time-functions.html#function_now) or [`CURRENT_DATE`](date-and-time-functions.html#function_current-date).
    The exception is that, for [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types") and [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types") columns, you can specify [`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    as the default. See [Section 13.2.5, “Automatic Initialization and Updating for
    TIMESTAMP and DATETIME”](timestamp-initialization.html "13.2.5 Automatic Initialization
    and Updating for TIMESTAMP and DATETIME").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 除了一个例外，`DEFAULT`子句中指定的默认值必须是字面常量；它不能是函数或表达式。这意味着，例如，你不能将日期列的默认值设置为函数值，如[`NOW()`](date-and-time-functions.html#function_now)或[`CURRENT_DATE`](date-and-time-functions.html#function_current-date)。例外是，对于[`TIMESTAMP`](datetime.html
    "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型")和[`DATETIME`](datetime.html "13.2.2 DATE、DATETIME
    和 TIMESTAMP 类型")列，你可以指定[`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)作为默认值。参见
    [第 13.2.5 节，“TIMESTAMP 和 DATETIME 的自动初始化和更新”](timestamp-initialization.html "13.2.5 TIMESTAMP
    和 DATETIME 的自动初始化和更新")。
- en: The [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types"), [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types"), `GEOMETRY`, and [`JSON`](json.html "13.5 The
    JSON Data Type") data types cannot be assigned a default value.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[`BLOB`](blob.html "13.3.4 BLOB 和 TEXT 类型")、[`TEXT`](blob.html "13.3.4 BLOB
    和 TEXT 类型")、`GEOMETRY` 和 [`JSON`](json.html "13.5 JSON 数据类型") 数据类型不能被分配默认值。'
- en: If a default value evaluates to a data type that differs from the declared column
    type, implicit coercion to the declared type occurs according to the usual MySQL
    type-conversion rules. See [Section 14.3, “Type Conversion in Expression Evaluation”](type-conversion.html
    "14.3 Type Conversion in Expression Evaluation").
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果默认值计算结果的数据类型与声明的列类型不同，根据通常的 MySQL 类型转换规则会发生隐式强制转换到声明的类型。参见 [第 14.3 节，“表达式评估中的类型转换”](type-conversion.html
    "14.3 表达式评估中的类型转换")。
- en: Implicit Default Handling
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 隐式默认处理
- en: 'If a data type specification includes no explicit `DEFAULT` value, MySQL determines
    the default value as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据类型规范中不包含显式`DEFAULT`值，MySQL 将确定默认值如下：
- en: If the column can take `NULL` as a value, the column is defined with an explicit
    `DEFAULT NULL` clause.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列可以接受`NULL`作为值，则该列将定义为带有显式`DEFAULT NULL`子句的列。
- en: If the column cannot take `NULL` as a value, MySQL defines the column with no
    explicit `DEFAULT` clause.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列不能接受`NULL`作为值，MySQL 将定义不带显式`DEFAULT`子句的列。
- en: 'For data entry into a `NOT NULL` column that has no explicit `DEFAULT` clause,
    if an [`INSERT`](insert.html "15.2.7 INSERT Statement") or [`REPLACE`](replace.html
    "15.2.12 REPLACE Statement") statement includes no value for the column, or an
    [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement sets the column to
    `NULL`, MySQL handles the column according to the SQL mode in effect at the time:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有显式`DEFAULT`子句的`NOT NULL`列的数据输入，如果[`INSERT`](insert.html "15.2.7 INSERT 语句")或[`REPLACE`](replace.html
    "15.2.12 REPLACE 语句")语句不包含该列的值，或者[`UPDATE`](update.html "15.2.17 UPDATE 语句")语句将列设置为`NULL`，MySQL
    根据当时有效的 SQL 模式处理该列：
- en: If strict SQL mode is enabled, an error occurs for transactional tables and
    the statement is rolled back. For nontransactional tables, an error occurs, but
    if this happens for the second or subsequent row of a multiple-row statement,
    the preceding rows are inserted.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果启用了严格的 SQL 模式，对于事务表会发生错误并回滚该语句。对于非事务表，会发生错误，但如果这发生在多行语句的第二行或后续行，前面的行将被插入。
- en: If strict mode is not enabled, MySQL sets the column to the implicit default
    value for the column data type.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未启用严格模式，MySQL 会将列设置为列数据类型的隐式默认值。
- en: 'Suppose that a table `t` is defined as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 假设表`t`定义如下：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In this case, `i` has no explicit default, so in strict mode each of the following
    statements produce an error and no row is inserted. When not using strict mode,
    only the third statement produces an error; the implicit default is inserted for
    the first two statements, but the third fails because [`DEFAULT(i)`](miscellaneous-functions.html#function_default)
    cannot produce a value:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`i`没有显式默认值，因此在严格模式下，以下每个语句都会产生错误，且不会插入行。当不使用严格模式时，只有第三个语句会产生错误；前两个语句会插入隐式默认值，但第三个会失败，因为[`DEFAULT(i)`](miscellaneous-functions.html#function_default)无法产生值：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: See [Section 7.1.11, “Server SQL Modes”](sql-mode.html "7.1.11 Server SQL Modes").
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[第 7.1.11 节，“服务器 SQL 模式”](sql-mode.html "7.1.11 服务器 SQL 模式")。
- en: For a given table, the [`SHOW CREATE TABLE`](show-create-table.html "15.7.7.10 SHOW
    CREATE TABLE Statement") statement displays which columns have an explicit `DEFAULT`
    clause.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定表，[`SHOW CREATE TABLE`](show-create-table.html "15.7.7.10 SHOW CREATE TABLE
    语句")语句显示哪些列具有显式的`DEFAULT`子句。
- en: 'Implicit defaults are defined as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 隐式默认值定义如下：
- en: For numeric types, the default is `0`, with the exception that for integer or
    floating-point types declared with the `AUTO_INCREMENT` attribute, the default
    is the next value in the sequence.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于数值类型，默认值为`0`，但对于声明了`AUTO_INCREMENT`属性的整数或浮点数类型，其默认值为序列中的下一个值。
- en: For date and time types other than [`TIMESTAMP`](datetime.html "13.2.2 The DATE,
    DATETIME, and TIMESTAMP Types"), the default is the appropriate “zero” value for
    the type. This is also true for [`TIMESTAMP`](datetime.html "13.2.2 The DATE,
    DATETIME, and TIMESTAMP Types") if the [`explicit_defaults_for_timestamp`](server-system-variables.html#sysvar_explicit_defaults_for_timestamp)
    system variable is enabled (see [Section 7.1.8, “Server System Variables”](server-system-variables.html
    "7.1.8 Server System Variables")). Otherwise, for the first [`TIMESTAMP`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") column in a table, the default
    value is the current date and time. See [Section 13.2, “Date and Time Data Types”](date-and-time-types.html
    "13.2 Date and Time Data Types").
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于除[`TIMESTAMP`](datetime.html "13.2.2 日期、时间和时间戳类型")之外的日期和时间类型，其默认值为该类型的适当“零”值。如果启用了[`explicit_defaults_for_timestamp`](server-system-variables.html#sysvar_explicit_defaults_for_timestamp)系统变量（参见[第
    7.1.8 节，“服务器系统变量”](server-system-variables.html "7.1.8 服务器系统变量")），则对于[`TIMESTAMP`](datetime.html
    "13.2.2 日期、时间和时间戳类型")也是如此。否则，对于表中的第一个[`TIMESTAMP`](datetime.html "13.2.2 日期、时间和时间戳类型")列，其默认值为当前日期和时间。参见[第
    13.2 节，“日期和时间数据类型”](date-and-time-types.html "13.2 日期和时间数据类型")。
- en: For string types other than [`ENUM`](enum.html "13.3.5 The ENUM Type"), the
    default value is the empty string. For [`ENUM`](enum.html "13.3.5 The ENUM Type"),
    the default is the first enumeration value.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于除[`ENUM`](enum.html "13.3.5 枚举类型")之外的字符串类型，默认值为空字符串。对于[`ENUM`](enum.html "13.3.5
    枚举类型")，默认值为第一个枚举值。
