- en: 18.7.2 MERGE Table Problems
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 18.7.2 MERGE 表问题
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/merge-table-problems.html](https://dev.mysql.com/doc/refman/8.0/en/merge-table-problems.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/merge-table-problems.html](https://dev.mysql.com/doc/refman/8.0/en/merge-table-problems.html)
- en: 'The following are known problems with `MERGE` tables:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 `MERGE` 表的已知问题：
- en: In versions of MySQL Server prior to 5.1.23, it was possible to create temporary
    merge tables with nontemporary child MyISAM tables.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 MySQL Server 版本 5.1.23 之前的版本中，可以创建具有非临时子 MyISAM 表的临时合并表。
- en: From versions 5.1.23, MERGE children were locked through the parent table. If
    the parent was temporary, it was not locked and so the children were not locked
    either. Parallel use of the MyISAM tables corrupted them.
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从版本 5.1.23 开始，`MERGE` 子表通过父表进行锁定。如果父表是临时表，则不会被锁定，因此子表也不会被锁定。同时使用 MyISAM 表会导致数据损坏。
- en: If you use [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    to change a `MERGE` table to another storage engine, the mapping to the underlying
    tables is lost. Instead, the rows from the underlying `MyISAM` tables are copied
    into the altered table, which then uses the specified storage engine.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果使用 [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") 将 `MERGE`
    表更改为另一个存储引擎，那么与基础表的映射将丢失。相反，来自基础 `MyISAM` 表的行将被复制到更改后的表中，然后使用指定的存储引擎。
- en: The `INSERT_METHOD` table option for a `MERGE` table indicates which underlying
    `MyISAM` table to use for inserts into the `MERGE` table. However, use of the
    `AUTO_INCREMENT` table option for that `MyISAM` table has no effect for inserts
    into the `MERGE` table until at least one row has been inserted directly into
    the `MyISAM` table.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MERGE` 表的 `INSERT_METHOD` 表选项指示要用于向 `MERGE` 表插入的基础 `MyISAM` 表。然而，在至少有一行直接插入到
    `MyISAM` 表之前，对该 `MyISAM` 表使用 `AUTO_INCREMENT` 表选项对向 `MERGE` 表的插入没有影响。'
- en: A `MERGE` table cannot maintain uniqueness constraints over the entire table.
    When you perform an [`INSERT`](insert.html "15.2.7 INSERT Statement"), the data
    goes into the first or last `MyISAM` table (as determined by the `INSERT_METHOD`
    option). MySQL ensures that unique key values remain unique within that `MyISAM`
    table, but not over all the underlying tables in the collection.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MERGE` 表无法在整个表上维护唯一性约束。当执行 [`INSERT`](insert.html "15.2.7 INSERT Statement")
    时，数据会进入第一个或最后一个 `MyISAM` 表（由 `INSERT_METHOD` 选项确定）。MySQL 确保唯一键值在该 `MyISAM` 表内保持唯一，但不跨所有基础表。'
- en: 'Because the `MERGE` engine cannot enforce uniqueness over the set of underlying
    tables, [`REPLACE`](replace.html "15.2.12 REPLACE Statement") does not work as
    expected. The two key facts are:'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为 `MERGE` 引擎无法强制执行基础表集合上的唯一性，[`REPLACE`](replace.html "15.2.12 REPLACE Statement")
    无法按预期工作。两个关键事实是：
- en: '[`REPLACE`](replace.html "15.2.12 REPLACE Statement") can detect unique key
    violations only in the underlying table to which it is going to write (which is
    determined by the `INSERT_METHOD` option). This differs from violations in the
    `MERGE` table itself.'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`REPLACE`](replace.html "15.2.12 REPLACE Statement") 只能检测即将写入的基础表中的唯一键冲突（由
    `INSERT_METHOD` 选项确定）。这与 `MERGE` 表本身中的冲突不同。'
- en: If [`REPLACE`](replace.html "15.2.12 REPLACE Statement") detects a unique key
    violation, it changes only the corresponding row in the underlying table it is
    writing to; that is, the first or last table, as determined by the `INSERT_METHOD`
    option.
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 [`REPLACE`](replace.html "15.2.12 REPLACE Statement") 检测到唯一键冲突，它只会更改正在写入的基础表中的相应行；也就是说，由
    `INSERT_METHOD` 选项确定的第一个或最后一个表。
- en: Similar considerations apply for [`INSERT ... ON DUPLICATE KEY UPDATE`](insert-on-duplicate.html
    "15.2.7.2 INSERT ... ON DUPLICATE KEY UPDATE Statement").
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 [`INSERT ... ON DUPLICATE KEY UPDATE`](insert-on-duplicate.html "15.2.7.2 INSERT
    ... ON DUPLICATE KEY UPDATE Statement")，类似的考虑也适用。
- en: '`MERGE` tables do not support partitioning. That is, you cannot partition a
    `MERGE` table, nor can any of a `MERGE` table''s underlying `MyISAM` tables be
    partitioned.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MERGE` 表不支持分区。也就是说，无法对 `MERGE` 表进行分区，`MERGE` 表的任何基础 `MyISAM` 表也无法进行分区。'
- en: You should not use [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE
    Statement"), [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR TABLE Statement"),
    [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement"), [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement"), [`DROP TABLE`](drop-table.html
    "15.1.32 DROP TABLE Statement"), [`DELETE`](delete.html "15.2.2 DELETE Statement")
    without a `WHERE` clause, or [`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE
    TABLE Statement") on any of the tables that are mapped into an open `MERGE` table.
    If you do so, the `MERGE` table may still refer to the original table and yield
    unexpected results. To work around this problem, ensure that no `MERGE` tables
    remain open by issuing a [`FLUSH TABLES`](flush.html#flush-tables) statement prior
    to performing any of the named operations.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不应在任何映射到打开 `MERGE` 表中的表上使用 [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement")、[`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR TABLE Statement")、[`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")、[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement")、[`DROP TABLE`](drop-table.html "15.1.32 DROP TABLE
    Statement")、不带 `WHERE` 子句的 [`DELETE`](delete.html "15.2.2 DELETE Statement") 或
    [`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")。如果这样做，`MERGE`
    表可能仍然引用原始表并产生意外结果。为了解决这个问题，在执行任何命名操作之前，确保没有任何 `MERGE` 表保持打开状态，通过发出一个 [`FLUSH TABLES`](flush.html#flush-tables)
    语句。
- en: The unexpected results include the possibility that the operation on the `MERGE`
    table reports table corruption. If this occurs after one of the named operations
    on the underlying `MyISAM` tables, the corruption message is spurious. To deal
    with this, issue a [`FLUSH TABLES`](flush.html#flush-tables) statement after modifying
    the `MyISAM` tables.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 意外结果包括 `MERGE` 表上的操作可能报告表损坏的可能性。如果在底层 `MyISAM` 表的命名操作之后发生这种情况，则损坏消息是虚假的。为了解决这个问题，在修改
    `MyISAM` 表后，发出一个 [`FLUSH TABLES`](flush.html#flush-tables) 语句。
- en: '[`DROP TABLE`](drop-table.html "15.1.32 DROP TABLE Statement") on a table that
    is in use by a `MERGE` table does not work on Windows because the `MERGE` storage
    engine''s table mapping is hidden from the upper layer of MySQL. Windows does
    not permit open files to be deleted, so you first must flush all `MERGE` tables
    (with [`FLUSH TABLES`](flush.html#flush-tables)) or drop the `MERGE` table before
    dropping the table.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上，对正在被 `MERGE` 表使用的表执行 [`DROP TABLE`](drop-table.html "15.1.32 DROP
    TABLE Statement") 操作是无效的，因为 MySQL 的 `MERGE` 存储引擎的表映射对于上层是隐藏的。Windows 不允许删除打开的文件，因此在删除表之前，你必须先刷新所有的
    `MERGE` 表（使用 [`FLUSH TABLES`](flush.html#flush-tables)）或者删除 `MERGE` 表。
- en: The definition of the `MyISAM` tables and the `MERGE` table are checked when
    the tables are accessed (for example, as part of a [`SELECT`](select.html "15.2.13 SELECT
    Statement") or [`INSERT`](insert.html "15.2.7 INSERT Statement") statement). The
    checks ensure that the definitions of the tables and the parent `MERGE` table
    definition match by comparing column order, types, sizes and associated indexes.
    If there is a difference between the tables, an error is returned and the statement
    fails. Because these checks take place when the tables are opened, any changes
    to the definition of a single table, including column changes, column ordering,
    and engine alterations cause the statement to fail.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当访问表时（例如，作为 [`SELECT`](select.html "15.2.13 SELECT Statement") 或 [`INSERT`](insert.html
    "15.2.7 INSERT Statement") 语句的一部分），`MyISAM` 表和 `MERGE` 表的定义会被检查。这些检查通过比较列顺序、类型、大小和相关索引来确保表的定义和父
    `MERGE` 表的定义匹配。如果表之间存在差异，将返回错误并导致语句失败。由于这些检查发生在表被打开时，对单个表的定义进行任何更改，包括列更改、列排序和引擎更改都会导致语句失败。
- en: The order of indexes in the `MERGE` table and its underlying tables should be
    the same. If you use [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    to add a `UNIQUE` index to a table used in a `MERGE` table, and then use [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") to add a nonunique index
    on the `MERGE` table, the index ordering is different for the tables if there
    was already a nonunique index in the underlying table. (This happens because [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") puts `UNIQUE` indexes
    before nonunique indexes to facilitate rapid detection of duplicate keys.) Consequently,
    queries on tables with such indexes may return unexpected results.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MERGE` 表及其基础表中索引的顺序应该相同。如果使用 [`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement") 在用于 `MERGE` 表的表上添加一个 `UNIQUE` 索引，然后再在 `MERGE` 表上添加一个非唯一索引，如果基础表中已经有一个非唯一索引，那么这些表的索引顺序就会不同。
    (这是因为 [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") 将 `UNIQUE`
    索引放在非唯一索引之前，以便快速检测重复键。) 因此，对具有这些索引的表的查询可能会返回意外结果。'
- en: 'If you encounter an error message similar to ERROR 1017 (HY000): Can''t find
    file: ''*`tbl_name`*.MRG'' (errno: 2), it generally indicates that some of the
    underlying tables do not use the `MyISAM` storage engine. Confirm that all of
    these tables are `MyISAM`.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如果遇到类似于 ERROR 1017 (HY000): Can''t find file: ''*`tbl_name`*.MRG'' (errno:
    2) 的错误消息，通常表示一些基础表没有使用 `MyISAM` 存储引擎。确认所有这些表都是 `MyISAM`。'
- en: The maximum number of rows in a `MERGE` table is 2^(64) (~1.844E+19; the same
    as for a `MyISAM` table). It is not possible to merge multiple `MyISAM` tables
    into a single `MERGE` table that would have more than this number of rows.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MERGE` 表中的最大行数为 2^(64) (~1.844E+19; 与 `MyISAM` 表相同)。无法将多个 `MyISAM` 表合并为一个行数超过此数量的
    `MERGE` 表。'
- en: 'Use of underlying `MyISAM` tables of differing row formats with a parent `MERGE`
    table is currently known to fail. See Bug #32364.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '目前已知，使用具有不同行格式的基础 `MyISAM` 表与父 `MERGE` 表会失败。请参见 Bug #32364。'
- en: 'You cannot change the union list of a nontemporary `MERGE` table when [`LOCK
    TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES Statements") is
    in effect. The following does *not* work:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 [`LOCK TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES Statements")
    生效时，您无法更改非临时 `MERGE` 表的联合列表。以下操作*不*起作用：
- en: '[PRE0]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: However, you can do this with a temporary `MERGE` table.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但是，您可以使用临时 `MERGE` 表来实现这一点。
- en: 'You cannot create a `MERGE` table with `CREATE ... SELECT`, neither as a temporary
    `MERGE` table, nor as a nontemporary `MERGE` table. For example:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法使用 `CREATE ... SELECT` 创建临时 `MERGE` 表或非临时 `MERGE` 表。例如：
- en: '[PRE1]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Attempts to do this result in an error: *`tbl_name`* is not `BASE TABLE`.'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试这样做会导致错误：*`tbl_name`* 不是 `BASE TABLE`。
- en: 'In some cases, differing `PACK_KEYS` table option values among the `MERGE`
    and underlying tables cause unexpected results if the underlying tables contain
    `CHAR` or `BINARY` columns. As a workaround, use `ALTER TABLE` to ensure that
    all involved tables have the same `PACK_KEYS` value. (Bug #50646)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在某些情况下，`MERGE` 表和基础表之间的 `PACK_KEYS` 表选项值不同会导致意外结果，如果基础表包含 `CHAR` 或 `BINARY`
    列。作为解决方法，使用 `ALTER TABLE` 确保所有涉及的表具有相同的 `PACK_KEYS` 值。 (Bug #50646)'
