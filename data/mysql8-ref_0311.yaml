- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-concurrent-ddl.html](https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-concurrent-ddl.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-concurrent-ddl.html](https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-concurrent-ddl.html)
- en: 7.6.7.4 Cloning and Concurrent DDL
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 7.6.7.4 克隆和并发 DDL
- en: Prior to MySQL 8.0.27, DDL operations on the donor and recipient MySQL Server
    instances, including [`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE
    TABLE Statement"), are not permitted during a cloning operation. This limitation
    should be considered when selecting data sources. A workaround is to use dedicated
    donor instances, which can accommodate DDL operations being blocked while data
    is cloned.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.27 之前，在克隆操作期间，包括[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE
    TABLE Statement")在内的捐赠者和接收者 MySQL 服务器实例上的 DDL 操作是不允许的。在选择数据源时应考虑此限制。一种解决方法是使用专用的捐赠者实例，可以在克隆数据时阻止
    DDL 操作。
- en: To prevent concurrent DDL during a cloning operation, an exclusive backup lock
    is acquired on the donor and recipient. The [`clone_ddl_timeout`](clone-plugin-options-variables.html#sysvar_clone_ddl_timeout)
    variable defines the time in seconds on the donor and recipient that a cloning
    operation waits for a backup lock. The default setting is 300 seconds. If a backup
    lock is not obtained with the specified time limit, the cloning operation fails
    with an error.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为防止在克隆操作期间进行并发 DDL，捐赠者和接收者上会获取独占的备份锁。[`clone_ddl_timeout`](clone-plugin-options-variables.html#sysvar_clone_ddl_timeout)变量定义了在捐赠者和接收者上，克隆操作等待备份锁的时间（以秒为单位）。默认设置为
    300 秒。如果在指定的时间限制内未获得备份锁，则克隆操作将因错误而失败。
- en: From MySQL 8.0.27, concurrent DDL is permitted on the donor by default. Concurrent
    DDL support on the donor is controlled by the [`clone_block_ddl`](clone-plugin-options-variables.html#sysvar_clone_block_ddl)
    variable. Concurrent DDL support can be enabled and disabled dynamically using
    a [`SET`](set.html "13.3.6 The SET Type") statement.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.27 开始，默认情况下允许在捐赠者上进行并发 DDL。捐赠者上的并发 DDL 支持由[`clone_block_ddl`](clone-plugin-options-variables.html#sysvar_clone_block_ddl)变量控制。可以使用[`SET`](set.html
    "13.3.6 The SET Type")语句动态启用和禁用捐赠者上的并发 DDL 支持。
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The default setting is [`clone_block_ddl=OFF`](clone-plugin-options-variables.html#sysvar_clone_block_ddl),
    which permits concurrent DDL on the donor.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 默认设置为[`clone_block_ddl=OFF`](clone-plugin-options-variables.html#sysvar_clone_block_ddl)，允许在捐赠者上进行并发
    DDL。
- en: Whether the effect of a concurrent DDL operation is cloned or not depends on
    whether the DDL operation finishes before the dynamic snapshot is taken by the
    cloning operation.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 并发 DDL 操作的效果是否被克隆取决于 DDL 操作是否在克隆操作获取动态快照之前完成。
- en: 'DDL operations that are not permitted during a cloning operation regardless
    of the [`clone_block_ddl`](clone-plugin-options-variables.html#sysvar_clone_block_ddl)
    setting include:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 不允许在克隆操作期间进行的 DDL 操作，无论[`clone_block_ddl`](clone-plugin-options-variables.html#sysvar_clone_block_ddl)设置如何，包括：
- en: '`ALTER TABLE *`tbl_name`* DISCARD TABLESPACE;`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ALTER TABLE *`tbl_name`* DISCARD TABLESPACE;`'
- en: '`ALTER TABLE *`tbl_name`* IMPORT TABLESPACE;`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ALTER TABLE *`tbl_name`* IMPORT TABLESPACE;`'
- en: '`ALTER INSTANCE DISABLE INNODB REDO_LOG;`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ALTER INSTANCE DISABLE INNODB REDO_LOG;`'
