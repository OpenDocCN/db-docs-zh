- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/password-security-user.html](https://dev.mysql.com/doc/refman/8.0/en/password-security-user.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/password-security-user.html](https://dev.mysql.com/doc/refman/8.0/en/password-security-user.html)
- en: 8.1.2.1 End-User Guidelines for Password Security
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 8.1.2.1 密码安全的最终用户准则
- en: MySQL users should use the following guidelines to keep passwords secure.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL用户应该遵循以下准则来保护密码安全。
- en: When you run a client program to connect to the MySQL server, it is inadvisable
    to specify your password in a way that exposes it to discovery by other users.
    The methods you can use to specify your password when you run client programs
    are listed here, along with an assessment of the risks of each method. In short,
    the safest methods are to have the client program prompt for the password or to
    specify the password in a properly protected option file.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行客户端程序连接到MySQL服务器时，不建议以暴露给其他用户发现的方式指定密码。您运行客户端程序时可以使用的指定密码的方法在此列出，以及每种方法的风险评估。简而言之，最安全的方法是让客户端程序提示输入密码或在正确保护的选项文件中指定密码。
- en: Use the [**mysql_config_editor**](mysql-config-editor.html "6.6.7 mysql_config_editor
    — MySQL Configuration Utility") utility, which enables you to store authentication
    credentials in an encrypted login path file named `.mylogin.cnf`. The file can
    be read later by MySQL client programs to obtain authentication credentials for
    connecting to MySQL Server. See [Section 6.6.7, “mysql_config_editor — MySQL Configuration
    Utility”](mysql-config-editor.html "6.6.7 mysql_config_editor — MySQL Configuration
    Utility").
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[**mysql_config_editor**](mysql-config-editor.html "6.6.7 mysql_config_editor
    — MySQL Configuration Utility")实用程序，它允许您将身份验证凭据存储在名为`.mylogin.cnf`的加密登录路径文件中。稍后，MySQL客户端程序可以读取该文件以获取连接到MySQL服务器的身份验证凭据。请参阅[Section 6.6.7,
    “mysql_config_editor — MySQL Configuration Utility”](mysql-config-editor.html
    "6.6.7 mysql_config_editor — MySQL Configuration Utility")。
- en: 'Use a `--password=*`password`*` or `-p*`password`*` option on the command line.
    For example:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命令行上使用`--password=*`password`*`或`-p*`password`*`选项。例如：
- en: '[PRE0]'
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Warning
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: This is convenient *but insecure*. On some systems, your password becomes visible
    to system status programs such as **ps** that may be invoked by other users to
    display command lines. MySQL clients typically overwrite the command-line password
    argument with zeros during their initialization sequence. However, there is still
    a brief interval during which the value is visible. Also, on some systems this
    overwriting strategy is ineffective and the password remains visible to **ps**.
    (SystemV Unix systems and perhaps others are subject to this problem.)
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这很方便*但不安全*。在某些系统上，您的密码会对系统状态程序（如**ps**）可见，其他用户可以调用这些程序来显示命令行。MySQL客户端通常在初始化序列期间用零覆盖命令行密码参数。然而，在这个值可见的瞬间仍然存在。此外，在某些系统上，这种覆盖策略是无效的，密码仍然对**ps**可见。（SystemV
    Unix系统和其他系统可能存在这个问题。）
- en: If your operating environment is set up to display your current command in the
    title bar of your terminal window, the password remains visible as long as the
    command is running, even if the command has scrolled out of view in the window
    content area.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您的操作环境设置为在终端窗口的标题栏中显示当前命令，则只要命令正在运行，密码就会保持可见，即使命令已经在窗口内容区域滚动出视野。
- en: 'Use the [`--password`](connection-options.html#option_general_password) or
    `-p` option on the command line with no password value specified. In this case,
    the client program solicits the password interactively:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在命令行上使用[`--password`](connection-options.html#option_general_password)或`-p`选项，不指定密码值。在这种情况下，客户端程序会交互式地请求密码：
- en: '[PRE1]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `*` characters indicate where you enter your password. The password is not
    displayed as you enter it.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`*`字符表示您输入密码的位置。在输入时不会显示密码。'
- en: It is more secure to enter your password this way than to specify it on the
    command line because it is not visible to other users. However, this method of
    entering a password is suitable only for programs that you run interactively.
    If you want to invoke a client from a script that runs noninteractively, there
    is no opportunity to enter the password from the keyboard. On some systems, you
    may even find that the first line of your script is read and interpreted (incorrectly)
    as your password.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以这种方式输入密码比在命令行上指定密码更安全，因为其他用户看不到密码。然而，这种输入密码的方法只适用于您交互式运行的程序。如果您想从非交互式脚本中调用客户端，那么就没有机会从键盘输入密码。在某些系统上，您甚至可能发现脚本的第一行被读取并解释（错误地）为您的密码。
- en: 'Store your password in an option file. For example, on Unix, you can list your
    password in the `[client]` section of the `.my.cnf` file in your home directory:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将密码存储在一个选项文件中。例如，在Unix上，您可以在主目录的`.my.cnf`文件的`[client]`部分列出您的密码：
- en: '[PRE2]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To keep the password safe, the file should not be accessible to anyone but
    yourself. To ensure this, set the file access mode to `400` or `600`. For example:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了保护密码安全，该文件不应该对任何人开放访问，只能由您自己访问。为了确保这一点，将文件访问模式设置为`400`或`600`。例如：
- en: '[PRE3]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To name from the command line a specific option file containing the password,
    use the [`--defaults-file=*`file_name`*`](option-file-options.html#option_general_defaults-file)
    option, where `file_name` is the full path name to the file. For example:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从命令行命名包含密码的特定选项文件，使用[`--defaults-file=*`file_name`*`](option-file-options.html#option_general_defaults-file)选项，其中`file_name`是文件的完整路径名。例如：
- en: '[PRE4]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[Section 6.2.2.2, “Using Option Files”](option-files.html "6.2.2.2 Using Option
    Files"), discusses option files in more detail.'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Section 6.2.2.2, “Using Option Files”](option-files.html "6.2.2.2 Using Option
    Files")详细讨论了选项文件。'
- en: On Unix, the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    client writes a record of executed statements to a history file (see [Section 6.5.1.3,
    “mysql Client Logging”](mysql-logging.html "6.5.1.3 mysql Client Logging")). By
    default, this file is named `.mysql_history` and is created in your home directory.
    Passwords can be written as plain text in SQL statements such as [`CREATE USER`](create-user.html
    "15.7.1.3 CREATE USER Statement") and [`ALTER USER`](alter-user.html "15.7.1.1 ALTER
    USER Statement"), so if you use these statements, they are logged in the history
    file. To keep this file safe, use a restrictive access mode, the same way as described
    earlier for the `.my.cnf` file.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unix系统上，[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")客户端会将执行的语句记录到一个历史文件中（参见[Section 6.5.1.3,
    “mysql Client Logging”](mysql-logging.html "6.5.1.3 mysql Client Logging")）。默认情况下，该文件名为`.mysql_history`，并创建在您的主目录中。密码可以以明文形式写入SQL语句，比如[`CREATE
    USER`](create-user.html "15.7.1.3 CREATE USER Statement")和[`ALTER USER`](alter-user.html
    "15.7.1.1 ALTER USER Statement")，因此如果您使用这些语句，它们会被记录在历史文件中。为了保护这个文件，使用限制性的访问模式，与之前描述的`.my.cnf`文件相同。
- en: If your command interpreter maintains a history, any file in which the commands
    are saved contains MySQL passwords entered on the command line. For example, **bash**
    uses `~/.bash_history`. Any such file should have a restrictive access mode.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的命令解释器维护一个历史记录，保存命令的任何文件都包含在命令行中输入的MySQL密码。例如，**bash**使用`~/.bash_history`。任何这样的文件都应该具有限制性的访问模式。
