- en: 8.4.3 The Password Validation Component
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8.4.3 密码验证组件
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/validate-password.html](https://dev.mysql.com/doc/refman/8.0/en/validate-password.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/validate-password.html](https://dev.mysql.com/doc/refman/8.0/en/validate-password.html)
- en: '[8.4.3.1 Password Validation Component Installation and Uninstallation](validate-password-installation.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[8.4.3.1 密码验证组件的安装和卸载](validate-password-installation.html)'
- en: '[8.4.3.2 Password Validation Options and Variables](validate-password-options-variables.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[8.4.3.2 密码验证选项和变量](validate-password-options-variables.html)'
- en: '[8.4.3.3 Transitioning to the Password Validation Component](validate-password-transitioning.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[8.4.3.3 过渡到密码验证组件](validate-password-transitioning.html)'
- en: The `validate_password` component serves to improve security by requiring account
    passwords and enabling strength testing of potential passwords. This component
    exposes system variables that enable you to configure password policy, and status
    variables for component monitoring.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`validate_password` 组件通过要求帐户密码并启用潜在密码的强度测试来提高安全性。该组件公开了系统变量，使您能够配置密码策略，并公开了用于组件监视的状态变量。'
- en: Note
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In MySQL 8.0, the `validate_password` plugin was reimplemented as the `validate_password`
    component. (For general information about components, see [Section 7.5, “MySQL
    Components”](components.html "7.5 MySQL Components").) The following instructions
    describe how to use the component, not the plugin. For instructions on using the
    plugin form of `validate_password`, see [The Password Validation Plugin](/doc/refman/5.7/en/validate-password.html),
    in [MySQL 5.7 Reference Manual](/doc/refman/5.7/en/).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0 中，`validate_password` 插件被重新实现为 `validate_password` 组件。（有关组件的一般信息，请参见
    [第 7.5 节，“MySQL 组件”](components.html "7.5 MySQL Components")。）以下说明描述了如何使用组件，而不是插件。有关使用
    `validate_password` 插件形式的说明，请参见 [密码验证插件](/doc/refman/5.7/en/validate-password.html)，在
    [MySQL 5.7 参考手册](/doc/refman/5.7/en/) 中。
- en: The plugin form of `validate_password` is still available but is deprecated;
    expect it to be removed in a future version of MySQL. MySQL installations that
    use the plugin should make the transition to using the component instead. See
    [Section 8.4.3.3, “Transitioning to the Password Validation Component”](validate-password-transitioning.html
    "8.4.3.3 Transitioning to the Password Validation Component").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`validate_password` 插件形式仍然可用，但已被弃用；预计将在将来的 MySQL 版本中删除。使用插件的 MySQL 安装应该过渡到使用组件。请参见
    [第 8.4.3.3 节，“过渡到密码验证组件”](validate-password-transitioning.html "8.4.3.3 过渡到密码验证组件")。'
- en: 'The `validate_password` component implements these capabilities:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`validate_password` 组件实现了以下功能：'
- en: For SQL statements that assign a password supplied as a cleartext value, `validate_password`
    checks the password against the current password policy and rejects the password
    if it is weak (the statement returns an [`ER_NOT_VALID_PASSWORD`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_not_valid_password)
    error). This applies to the [`ALTER USER`](alter-user.html "15.7.1.1 ALTER USER
    Statement"), [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement"),
    and [`SET PASSWORD`](set-password.html "15.7.1.10 SET PASSWORD Statement") statements.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于将明文值作为密码分配的 SQL 语句，`validate_password` 会根据当前密码策略检查密码，并在密码弱时拒绝密码（该语句返回一个 [`ER_NOT_VALID_PASSWORD`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_not_valid_password)
    错误）。这适用于 [`ALTER USER`](alter-user.html "15.7.1.1 ALTER USER 语句")、[`CREATE USER`](create-user.html
    "15.7.1.3 CREATE USER 语句") 和 [`SET PASSWORD`](set-password.html "15.7.1.10 SET
    PASSWORD 语句") 语句。
- en: For [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement") statements,
    `validate_password` requires that a password be given, and that it satisfies the
    password policy. This is true even if an account is locked initially because otherwise
    unlocking the account later would cause it to become accessible without a password
    that satisfies the policy.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER 语句") 语句，`validate_password`
    要求提供密码，并且该密码必须符合密码策略。即使帐户最初被锁定，解锁帐户后也需要满足策略要求的密码，否则稍后访问该帐户将不需要密码。
- en: '`validate_password` implements a [`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)
    SQL function that assesses the strength of potential passwords. This function
    takes a password argument and returns an integer from 0 (weak) to 100 (strong).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password` 实现了一个 [`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)
    SQL 函数，用于评估潜在密码的强度。该函数接受一个密码参数，并返回一个从 0（弱）到 100（强）的整数。'
- en: Note
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For statements that assign or modify account passwords ([`ALTER USER`](alter-user.html
    "15.7.1.1 ALTER USER Statement"), [`CREATE USER`](create-user.html "15.7.1.3 CREATE
    USER Statement"), and [`SET PASSWORD`](set-password.html "15.7.1.10 SET PASSWORD
    Statement")), the `validate_password` capabilities described here apply only to
    accounts that use an authentication plugin that stores credentials internally
    to MySQL. For accounts that use plugins that perform authentication against a
    credentials system external to MySQL, password management must be handled externally
    against that system as well. For more information about internal credentials storage,
    see [Section 8.2.15, “Password Management”](password-management.html "8.2.15 Password
    Management").
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于分配或修改帐户密码的语句（[`ALTER USER`](alter-user.html "15.7.1.1 ALTER USER Statement")，[`CREATE
    USER`](create-user.html "15.7.1.3 CREATE USER Statement")和[`SET PASSWORD`](set-password.html
    "15.7.1.10 SET PASSWORD Statement")），这里描述的`validate_password`功能仅适用于使用将凭据内部存储到MySQL的身份验证插件的帐户。对于使用针对MySQL外部凭据系统执行身份验证的插件的帐户，密码管理也必须在该系统外部处理。有关内部凭据存储的更多信息，请参阅[Section 8.2.15,
    “Password Management”](password-management.html "8.2.15 Password Management")。
- en: The preceding restriction does not apply to use of the [`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)
    function because it does not affect accounts directly.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的限制不适用于使用[`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)函数，因为它不直接影响帐户。
- en: 'Examples:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: '`validate_password` checks the cleartext password in the following statement.
    Under the default password policy, which requires passwords to be at least 8 characters
    long, the password is weak and the statement produces an error:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password`在以下语句中检查明文密码。根据要求密码至少为8个字符长的默认密码策略，密码较弱，该语句将产生错误：'
- en: '[PRE0]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Passwords specified as hashed values are not checked because the original password
    value is not available for checking:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于原始密码值不可用进行检查，指定为散列值的密码不会被检查：
- en: '[PRE1]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This account-creation statement fails, even though the account is locked initially,
    because it does not include a password that satisfies the current password policy:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使帐户最初被锁定，由于没有包含符合当前密码策略的密码，此帐户创建语句将失败：
- en: '[PRE2]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To check a password, use the [`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)
    function:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要检查密码，请使用[`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)函数：
- en: '[PRE3]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To configure password checking, modify the system variables having names of
    the form `validate_password.*`xxx`*`; these are the parameters that control password
    policy. See [Section 8.4.3.2, “Password Validation Options and Variables”](validate-password-options-variables.html
    "8.4.3.2 Password Validation Options and Variables").
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置密码检查，请修改名称形式为`validate_password.*`xxx`*`的系统变量；这些是控制密码策略的参数。请参阅[Section 8.4.3.2,
    “Password Validation Options and Variables”](validate-password-options-variables.html
    "8.4.3.2 Password Validation Options and Variables")。
- en: If `validate_password` is not installed, the `validate_password.*`xxx`*` system
    variables are not available, passwords in statements are not checked, and the
    [`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)
    function always returns 0\. For example, without the plugin installed, accounts
    can be assigned passwords shorter than 8 characters, or no password at all.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未安装`validate_password`，则`validate_password.*`xxx`*`系统变量不可用，语句中的密码不会被检查，[`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)函数始终返回0。例如，如果没有安装插件，帐户可以被分配少于8个字符的密码，甚至可以没有密码。
- en: 'Assuming that `validate_password` is installed, it implements three levels
    of password checking: `LOW`, `MEDIUM`, and `STRONG`. The default is `MEDIUM`;
    to change this, modify the value of [`validate_password.policy`](validate-password-options-variables.html#sysvar_validate_password.policy).
    The policies implement increasingly strict password tests. The following descriptions
    refer to default parameter values, which can be modified by changing the appropriate
    system variables.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 假设已安装`validate_password`，它实现了三个级别的密码检查：`LOW`，`MEDIUM`和`STRONG`。默认为`MEDIUM`；要更改此设置，请修改[`validate_password.policy`](validate-password-options-variables.html#sysvar_validate_password.policy)的值。这些策略实施越来越严格的密码测试。以下描述是针对默认参数值的，可以通过更改相应的系统变量来修改这些值。
- en: '`LOW` policy tests password length only. Passwords must be at least 8 characters
    long. To change this length, modify [`validate_password.length`](validate-password-options-variables.html#sysvar_validate_password.length).'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOW`策略仅测试密码长度。密码必须至少为8个字符长。要更改此长度，请修改[`validate_password.length`](validate-password-options-variables.html#sysvar_validate_password.length)。'
- en: '`MEDIUM` policy adds the conditions that passwords must contain at least 1
    numeric character, 1 lowercase character, 1 uppercase character, and 1 special
    (nonalphanumeric) character. To change these values, modify [`validate_password.number_count`](validate-password-options-variables.html#sysvar_validate_password.number_count),
    [`validate_password.mixed_case_count`](validate-password-options-variables.html#sysvar_validate_password.mixed_case_count),
    and [`validate_password.special_char_count`](validate-password-options-variables.html#sysvar_validate_password.special_char_count).'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MEDIUM`策略添加了密码必须包含至少1个数字字符、1个小写字符、1个大写字符和1个特殊（非字母数字）字符的条件。要更改这些值，请修改[`validate_password.number_count`](validate-password-options-variables.html#sysvar_validate_password.number_count)、[`validate_password.mixed_case_count`](validate-password-options-variables.html#sysvar_validate_password.mixed_case_count)和[`validate_password.special_char_count`](validate-password-options-variables.html#sysvar_validate_password.special_char_count)。'
- en: '`STRONG` policy adds the condition that password substrings of length 4 or
    longer must not match words in the dictionary file, if one has been specified.
    To specify the dictionary file, modify [`validate_password.dictionary_file`](validate-password-options-variables.html#sysvar_validate_password.dictionary_file).'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`STRONG`策略添加了一个条件，即长度为4或更长的密码子串不得与字典文件中的单词匹配（如果已指定）。要指定字典文件，请修改[`validate_password.dictionary_file`](validate-password-options-variables.html#sysvar_validate_password.dictionary_file)。'
- en: In addition, `validate_password` supports the capability of rejecting passwords
    that match the user name part of the effective user account for the current session,
    either forward or in reverse. To provide control over this capability, `validate_password`
    exposes a [`validate_password.check_user_name`](validate-password-options-variables.html#sysvar_validate_password.check_user_name)
    system variable, which is enabled by default.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`validate_password`支持拒绝与当前会话的有效用户帐户的用户名部分匹配的密码，无论是正向还是反向。为了控制这种能力，`validate_password`暴露了一个[`validate_password.check_user_name`](validate-password-options-variables.html#sysvar_validate_password.check_user_name)系统变量，默认情况下已启用。
