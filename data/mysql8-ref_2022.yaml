- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-mutex-instances-table.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-mutex-instances-table.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-mutex-instances-table.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-mutex-instances-table.html)
- en: 29.12.3.3 The mutex_instances Table
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 29.12.3.3 mutex_instances 表
- en: The [`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 The
    mutex_instances Table") table lists all the mutexes seen by the Performance Schema
    while the server executes. A mutex is a synchronization mechanism used in the
    code to enforce that only one thread at a given time can have access to some common
    resource. The resource is said to be “protected” by the mutex.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 mutex_instances
    表") 表列出了服务器执行时性能模式看到的所有互斥锁。互斥锁是代码中用于强制只有一个线程可以访问某些共享资源的同步机制。该资源被互斥锁“保护”。'
- en: When two threads executing in the server (for example, two user sessions executing
    a query simultaneously) do need to access the same resource (a file, a buffer,
    or some piece of data), these two threads compete against each other, so that
    the first query to obtain a lock on the mutex causes the other query to wait until
    the first is done and unlocks the mutex.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当两个在服务器中执行的线程（例如，两个用户会话同时执行查询）需要访问相同的资源（文件、缓冲区或某些数据），这两个线程相互竞争，因此第一个查询获得互斥锁的线程会导致另一个查询等待，直到第一个完成并解锁互斥锁。
- en: The work performed while holding a mutex is said to be in a “critical section,”
    and multiple queries do execute this critical section in a serialized way (one
    at a time), which is a potential bottleneck.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在持有互斥锁时执行的工作被称为“临界区”，多个查询以串行方式（一次一个）执行此临界区，这可能是一个潜在的瓶颈。
- en: 'The [`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 The
    mutex_instances Table") table has these columns:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 mutex_instances
    表") 表具有以下列：'
- en: '`NAME`'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NAME`'
- en: The instrument name associated with the mutex.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与互斥锁关联的仪器名称。
- en: '`OBJECT_INSTANCE_BEGIN`'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECT_INSTANCE_BEGIN`'
- en: The address in memory of the instrumented mutex.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仪器化互斥锁在内存中的地址。
- en: '`LOCKED_BY_THREAD_ID`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOCKED_BY_THREAD_ID`'
- en: When a thread currently has a mutex locked, `LOCKED_BY_THREAD_ID` is the `THREAD_ID`
    of the locking thread, otherwise it is `NULL`.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当一个线程当前持有一个互斥锁时，`LOCKED_BY_THREAD_ID` 是锁定线程的 `THREAD_ID`，否则为 `NULL`。
- en: 'The [`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 The
    mutex_instances Table") table has these indexes:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 mutex_instances
    表") 表具有以下索引：'
- en: Primary key on (`OBJECT_INSTANCE_BEGIN`)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主键为 (`OBJECT_INSTANCE_BEGIN`)
- en: Index on (`NAME`)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引为 (`NAME`)
- en: Index on (`LOCKED_BY_THREAD_ID`)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引为 (`LOCKED_BY_THREAD_ID`)
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    is not permitted for the [`mutex_instances`](performance-schema-mutex-instances-table.html
    "29.12.3.3 The mutex_instances Table") table.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE 语句") 不允许用于 [`mutex_instances`](performance-schema-mutex-instances-table.html
    "29.12.3.3 mutex_instances 表") 表。'
- en: For every mutex instrumented in the code, the Performance Schema provides the
    following information.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于代码中仪器化的每个互斥锁，性能模式提供以下信息。
- en: The [`setup_instruments`](performance-schema-setup-instruments-table.html "29.12.2.3 The
    setup_instruments Table") table lists the name of the instrumentation point, with
    the prefix `wait/synch/mutex/`.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`setup_instruments`](performance-schema-setup-instruments-table.html "29.12.2.3 setup_instruments
    表") 表列出了仪器点的名称，带有前缀 `wait/synch/mutex/`。'
- en: When some code creates a mutex, a row is added to the [`mutex_instances`](performance-schema-mutex-instances-table.html
    "29.12.3.3 The mutex_instances Table") table. The `OBJECT_INSTANCE_BEGIN` column
    is a property that uniquely identifies the mutex.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当一些代码创建一个互斥锁时，会向 [`mutex_instances`](performance-schema-mutex-instances-table.html
    "29.12.3.3 mutex_instances 表") 表添加一行。`OBJECT_INSTANCE_BEGIN` 列是一个唯一标识互斥锁的属性。
- en: When a thread attempts to lock a mutex, the [`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 The events_waits_current Table") table shows a row for that thread,
    indicating that it is waiting on a mutex (in the `EVENT_NAME` column), and indicating
    which mutex is waited on (in the `OBJECT_INSTANCE_BEGIN` column).
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当一个线程尝试锁定一个互斥锁时，[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 events_waits_current 表") 表显示了一个针对该线程的行，指示它正在等待一个互斥锁（在 `EVENT_NAME`
    列中），并指示正在等待的互斥锁是哪个（在 `OBJECT_INSTANCE_BEGIN` 列中）。
- en: 'When a thread succeeds in locking a mutex:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当一个线程成功锁定一个互斥锁时：
- en: '[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 The events_waits_current Table") shows that the wait on the mutex is
    completed (in the `TIMER_END` and `TIMER_WAIT` columns)'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 events_waits_current表")显示互斥锁上的等待已完成（在`TIMER_END`和`TIMER_WAIT`列中）'
- en: The completed wait event is added to the [`events_waits_history`](performance-schema-events-waits-history-table.html
    "29.12.4.2 The events_waits_history Table") and [`events_waits_history_long`](performance-schema-events-waits-history-long-table.html
    "29.12.4.3 The events_waits_history_long Table") tables
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完成的等待事件被添加到[`events_waits_history`](performance-schema-events-waits-history-table.html
    "29.12.4.2 events_waits_history表")和[`events_waits_history_long`](performance-schema-events-waits-history-long-table.html
    "29.12.4.3 events_waits_history_long表")表中
- en: '[`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 The
    mutex_instances Table") shows that the mutex is now owned by the thread (in the
    `THREAD_ID` column).'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 mutex_instances表")显示该互斥锁现在由该线程拥有（在`THREAD_ID`列中）。'
- en: When a thread unlocks a mutex, [`mutex_instances`](performance-schema-mutex-instances-table.html
    "29.12.3.3 The mutex_instances Table") shows that the mutex now has no owner (the
    `THREAD_ID` column is `NULL`).
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当线程解锁互斥锁时，[`mutex_instances`](performance-schema-mutex-instances-table.html
    "29.12.3.3 mutex_instances表")显示该互斥锁现在没有所有者（`THREAD_ID`列为`NULL`）。
- en: When a mutex object is destroyed, the corresponding row is removed from [`mutex_instances`](performance-schema-mutex-instances-table.html
    "29.12.3.3 The mutex_instances Table").
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当互斥锁对象被销毁时，相应的行从[`mutex_instances`](performance-schema-mutex-instances-table.html
    "29.12.3.3 mutex_instances表")中移除。
- en: 'By performing queries on both of the following tables, a monitoring application
    or a DBA can detect bottlenecks or deadlocks between threads that involve mutexes:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对上述两个表执行查询，监控应用程序或数据库管理员可以检测涉及互斥锁的线程之间的瓶颈或死锁：
- en: '[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 The events_waits_current Table"), to see what mutex a thread is waiting
    for'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 events_waits_current表")，查看线程正在等待哪个互斥锁'
- en: '[`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 The
    mutex_instances Table"), to see which other thread currently owns a mutex'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`mutex_instances`](performance-schema-mutex-instances-table.html "29.12.3.3 mutex_instances表")，查看哪个其他线程当前拥有互斥锁'
