- en: 28.4.28 The INFORMATION_SCHEMA INNODB_TRX Table
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 28.4.28 INFORMATION_SCHEMA INNODB_TRX表
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/information-schema-innodb-trx-table.html](https://dev.mysql.com/doc/refman/8.0/en/information-schema-innodb-trx-table.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/information-schema-innodb-trx-table.html](https://dev.mysql.com/doc/refman/8.0/en/information-schema-innodb-trx-table.html)
- en: The [`INNODB_TRX`](information-schema-innodb-trx-table.html "28.4.28 The INFORMATION_SCHEMA
    INNODB_TRX Table") table provides information about every transaction currently
    executing inside `InnoDB`, including whether the transaction is waiting for a
    lock, when the transaction started, and the SQL statement the transaction is executing,
    if any.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INNODB_TRX`](information-schema-innodb-trx-table.html "28.4.28 The INFORMATION_SCHEMA
    INNODB_TRX Table")表提供有关当前在`InnoDB`内部执行的每个事务的信息，包括事务是否正在等待锁定，事务开始时间以及事务正在执行的SQL语句（如果有）。'
- en: For usage information, see [Section 17.15.2.1, “Using InnoDB Transaction and
    Locking Information”](innodb-information-schema-examples.html "17.15.2.1 Using
    InnoDB Transaction and Locking Information").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用法信息，请参见[第17.15.2.1节，“使用InnoDB事务和锁定信息”](innodb-information-schema-examples.html
    "17.15.2.1 Using InnoDB Transaction and Locking Information")。
- en: 'The [`INNODB_TRX`](information-schema-innodb-trx-table.html "28.4.28 The INFORMATION_SCHEMA
    INNODB_TRX Table") table has these columns:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INNODB_TRX`](information-schema-innodb-trx-table.html "28.4.28 The INFORMATION_SCHEMA
    INNODB_TRX Table")表具有以下列：'
- en: '`TRX_ID`'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_ID`'
- en: A unique transaction ID number, internal to `InnoDB`. These IDs are not created
    for transactions that are read only and nonlocking. For details, see [Section 10.5.3,
    “Optimizing InnoDB Read-Only Transactions”](innodb-performance-ro-txn.html "10.5.3 Optimizing
    InnoDB Read-Only Transactions").
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个在`InnoDB`内部唯一的事务ID号。这些ID不会为只读和非锁定的事务创建。详情请参见[第10.5.3节，“优化InnoDB只读事务”](innodb-performance-ro-txn.html
    "10.5.3 Optimizing InnoDB Read-Only Transactions")。
- en: '`TRX_WEIGHT`'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_WEIGHT`'
- en: The weight of a transaction, reflecting (but not necessarily the exact count
    of) the number of rows altered and the number of rows locked by the transaction.
    To resolve a deadlock, `InnoDB` selects the transaction with the smallest weight
    as the “victim” to roll back. Transactions that have changed nontransactional
    tables are considered heavier than others, regardless of the number of altered
    and locked rows.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务的权重，反映（但不一定是准确的）事务修改的行数和被事务锁定的行数。为了解决死锁，`InnoDB`选择具有最小权重的事务作为“受害者”进行回滚。已更改非事务表的事务被认为比其他事务更重，无论修改和锁定的行数如何。
- en: '`TRX_STATE`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_STATE`'
- en: The transaction execution state. Permitted values are `RUNNING`, `LOCK WAIT`,
    `ROLLING BACK`, and `COMMITTING`.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务执行状态。允许的值为`RUNNING`、`LOCK WAIT`、`ROLLING BACK`和`COMMITTING`。
- en: '`TRX_STARTED`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_STARTED`'
- en: The transaction start time.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务开始时间。
- en: '`TRX_REQUESTED_LOCK_ID`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_REQUESTED_LOCK_ID`'
- en: The ID of the lock the transaction is currently waiting for, if `TRX_STATE`
    is `LOCK WAIT`; otherwise `NULL`. To obtain details about the lock, join this
    column with the `ENGINE_LOCK_ID` column of the Performance Schema [`data_locks`](performance-schema-data-locks-table.html
    "29.12.13.1 The data_locks Table") table.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务当前正在等待的锁的ID，如果`TRX_STATE`为`LOCK WAIT`；否则为`NULL`。要获取有关锁的详细信息，请将此列与性能模式[`data_locks`](performance-schema-data-locks-table.html
    "29.12.13.1 The data_locks Table")表的`ENGINE_LOCK_ID`列连接。
- en: '`TRX_WAIT_STARTED`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_WAIT_STARTED`'
- en: The time when the transaction started waiting on the lock, if `TRX_STATE` is
    `LOCK WAIT`; otherwise `NULL`.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务开始等待锁的时间，如果`TRX_STATE`为`LOCK WAIT`；否则为`NULL`。
- en: '`TRX_MYSQL_THREAD_ID`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_MYSQL_THREAD_ID`'
- en: The MySQL thread ID. To obtain details about the thread, join this column with
    the `ID` column of the `INFORMATION_SCHEMA` [`PROCESSLIST`](information-schema-processlist-table.html
    "28.3.23 The INFORMATION_SCHEMA PROCESSLIST Table") table, but see [Section 17.15.2.3,
    “Persistence and Consistency of InnoDB Transaction and Locking Information”](innodb-information-schema-internal-data.html
    "17.15.2.3 Persistence and Consistency of InnoDB Transaction and Locking Information").
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL线程ID。要获取有关线程的详细信息，请将此列与`INFORMATION_SCHEMA` [`PROCESSLIST`](information-schema-processlist-table.html
    "28.3.23 The INFORMATION_SCHEMA PROCESSLIST Table")表的`ID`列连接，但请参见[第17.15.2.3节，“InnoDB事务和锁定信息的持久性和一致性”](innodb-information-schema-internal-data.html
    "17.15.2.3 Persistence and Consistency of InnoDB Transaction and Locking Information")。
- en: '`TRX_QUERY`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_QUERY`'
- en: The SQL statement that is being executed by the transaction.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在被事务执行的SQL语句。
- en: '`TRX_OPERATION_STATE`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_OPERATION_STATE`'
- en: The transaction's current operation, if any; otherwise `NULL`.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务的当前操作，如果有的话；否则为`NULL`。
- en: '`TRX_TABLES_IN_USE`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_TABLES_IN_USE`'
- en: The number of `InnoDB` tables used while processing the current SQL statement
    of this transaction.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在处理当前事务的SQL语句时使用的`InnoDB`表的数量。
- en: '`TRX_TABLES_LOCKED`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_TABLES_LOCKED`'
- en: The number of `InnoDB` tables that the current SQL statement has row locks on.
    (Because these are row locks, not table locks, the tables can usually still be
    read from and written to by multiple transactions, despite some rows being locked.)
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前SQL语句在哪些`InnoDB`表上有行锁。（因为这些是行锁，而不是表锁，所以尽管某些行被锁定，表通常仍然可以被多个事务读取和写入。）
- en: '`TRX_LOCK_STRUCTS`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_LOCK_STRUCTS`'
- en: The number of locks reserved by the transaction.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务保留的锁数。
- en: '`TRX_LOCK_MEMORY_BYTES`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_LOCK_MEMORY_BYTES`'
- en: The total size taken up by the lock structures of this transaction in memory.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此事务在内存中锁结构所占用的总大小。
- en: '`TRX_ROWS_LOCKED`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_ROWS_LOCKED`'
- en: The approximate number or rows locked by this transaction. The value might include
    delete-marked rows that are physically present but not visible to the transaction.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此事务锁定的行数的近似值。该值可能包括物理上存在但对事务不可见的删除标记行。
- en: '`TRX_ROWS_MODIFIED`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_ROWS_MODIFIED`'
- en: The number of modified and inserted rows in this transaction.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个事务中修改和插入的行数。
- en: '`TRX_CONCURRENCY_TICKETS`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_CONCURRENCY_TICKETS`'
- en: A value indicating how much work the current transaction can do before being
    swapped out, as specified by the [`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)
    system variable.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表示当前事务在被交换出之前可以完成多少工作的值，由[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)系统变量指定。
- en: '`TRX_ISOLATION_LEVEL`'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_ISOLATION_LEVEL`'
- en: The isolation level of the current transaction.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前事务的隔离级别。
- en: '`TRX_UNIQUE_CHECKS`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_UNIQUE_CHECKS`'
- en: Whether unique checks are turned on or off for the current transaction. For
    example, they might be turned off during a bulk data load.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前事务是否打开或关闭唯一性检查。例如，在大量数据加载期间可能会关闭它们。
- en: '`TRX_FOREIGN_KEY_CHECKS`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_FOREIGN_KEY_CHECKS`'
- en: Whether foreign key checks are turned on or off for the current transaction.
    For example, they might be turned off during a bulk data load.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前事务是否打开或关闭外键检查。例如，在大量数据加载期间可能会关闭它们。
- en: '`TRX_LAST_FOREIGN_KEY_ERROR`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_LAST_FOREIGN_KEY_ERROR`'
- en: The detailed error message for the last foreign key error, if any; otherwise
    `NULL`.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果有的话，最后一个外键错误的详细错误消息；否则为`NULL`。
- en: '`TRX_ADAPTIVE_HASH_LATCHED`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_ADAPTIVE_HASH_LATCHED`'
- en: Whether the adaptive hash index is locked by the current transaction. When the
    adaptive hash index search system is partitioned, a single transaction does not
    lock the entire adaptive hash index. Adaptive hash index partitioning is controlled
    by [`innodb_adaptive_hash_index_parts`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts),
    which is set to 8 by default.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前事务是否锁定自适应哈希索引。当自适应哈希索引搜索系统被分区时，单个事务不会锁定整个自适应哈希索引。自适应哈希索引分区由[`innodb_adaptive_hash_index_parts`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)控制，默认设置为8。
- en: '`TRX_ADAPTIVE_HASH_TIMEOUT`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_ADAPTIVE_HASH_TIMEOUT`'
- en: Whether to relinquish the search latch immediately for the adaptive hash index,
    or reserve it across calls from MySQL. When there is no adaptive hash index contention,
    this value remains zero and statements reserve the latch until they finish. During
    times of contention, it counts down to zero, and statements release the latch
    immediately after each row lookup. When the adaptive hash index search system
    is partitioned (controlled by [`innodb_adaptive_hash_index_parts`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)),
    the value remains 0.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 是否立即放弃自适应哈希索引的搜索锁，还是在MySQL的调用之间保留它。当没有自适应哈希索引争用时，此值保持为零，并且语句保留锁直到完成。在争用时，它倒计时到零，并且语句在每次行查找后立即释放锁。当自适应哈希索引搜索系统被分区（由[`innodb_adaptive_hash_index_parts`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index_parts)控制）时，该值保持为0。
- en: '`TRX_IS_READ_ONLY`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_IS_READ_ONLY`'
- en: A value of 1 indicates the transaction is read only.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 值为1表示事务是只读的。
- en: '`TRX_AUTOCOMMIT_NON_LOCKING`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_AUTOCOMMIT_NON_LOCKING`'
- en: A value of 1 indicates the transaction is a [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement that does not use the `FOR UPDATE` or `LOCK IN SHARED MODE`
    clauses, and is executing with [`autocommit`](server-system-variables.html#sysvar_autocommit)
    enabled so that the transaction contains only this one statement. When this column
    and `TRX_IS_READ_ONLY` are both 1, `InnoDB` optimizes the transaction to reduce
    the overhead associated with transactions that change table data.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 值为1表示事务是一个不使用`FOR UPDATE`或`LOCK IN SHARED MODE`子句的[`SELECT`](select.html "15.2.13 SELECT
    Statement")语句，并且在启用[`autocommit`](server-system-variables.html#sysvar_autocommit)的情况下执行，因此事务仅包含此一个语句。当此列和`TRX_IS_READ_ONLY`都为1时，`InnoDB`会优化事务以减少与更改表数据的事务相关的开销。
- en: '`TRX_SCHEDULE_WEIGHT`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TRX_SCHEDULE_WEIGHT`'
- en: The transaction schedule weight assigned by the Contention-Aware Transaction
    Scheduling (CATS) algorithm to transactions waiting for a lock. The value is relative
    to the values of other transactions. A higher value has a greater weight. A value
    is computed only for transactions in a `LOCK WAIT` state, as reported by the `TRX_STATE`
    column. A NULL value is reported for transactions that are not waiting for a lock.
    The `TRX_SCHEDULE_WEIGHT` value is different from the `TRX_WEIGHT` value, which
    is computed by a different algorithm for a different purpose.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由内容感知事务调度（CATS）算法分配给等待锁的事务的事务调度权重。该值相对于其他事务的值。较高的值具有更大的权重。仅为处于`LOCK WAIT`状态的事务计算值，如`TRX_STATE`列所报告的那样。对于不等待锁的事务，将报告NULL值。`TRX_SCHEDULE_WEIGHT`值与由不同算法为不同目的计算的`TRX_WEIGHT`值不同。
- en: Example
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE0]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Notes
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意事项
- en: Use this table to help diagnose performance problems that occur during times
    of heavy concurrent load. Its contents are updated as described in [Section 17.15.2.3,
    “Persistence and Consistency of InnoDB Transaction and Locking Information”](innodb-information-schema-internal-data.html
    "17.15.2.3 Persistence and Consistency of InnoDB Transaction and Locking Information").
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用此表格帮助诊断在高并发负载时发生的性能问题。其内容如[Section 17.15.2.3, “InnoDB事务和锁信息的持久性和一致性”](innodb-information-schema-internal-data.html
    "17.15.2.3 Persistence and Consistency of InnoDB Transaction and Locking Information")所述更新。
- en: You must have the [`PROCESS`](privileges-provided.html#priv_process) privilege
    to query this table.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您必须具有[`PROCESS`](privileges-provided.html#priv_process)权限才能查询此表。
- en: Use the `INFORMATION_SCHEMA` [`COLUMNS`](information-schema-columns-table.html
    "28.3.8 The INFORMATION_SCHEMA COLUMNS Table") table or the [`SHOW COLUMNS`](show-columns.html
    "15.7.7.5 SHOW COLUMNS Statement") statement to view additional information about
    the columns of this table, including data types and default values.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`INFORMATION_SCHEMA` [`COLUMNS`](information-schema-columns-table.html "28.3.8 The
    INFORMATION_SCHEMA COLUMNS Table")表或[`SHOW COLUMNS`](show-columns.html "15.7.7.5 SHOW
    COLUMNS Statement")语句查看有关此表的列的其他信息，包括数据类型和默认值。
