- en: 17.8.10 Configuring Optimizer Statistics for InnoDB
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.8.10 为InnoDB配置优化器统计信息
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-optimizer-statistics.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-optimizer-statistics.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-optimizer-statistics.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-optimizer-statistics.html)
- en: '[17.8.10.1 Configuring Persistent Optimizer Statistics Parameters](innodb-persistent-stats.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.8.10.1 配置持久性优化器统计参数](innodb-persistent-stats.html)'
- en: '[17.8.10.2 Configuring Non-Persistent Optimizer Statistics Parameters](innodb-statistics-estimation.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.8.10.2 配置非持久性优化器统计参数](innodb-statistics-estimation.html)'
- en: '[17.8.10.3 Estimating ANALYZE TABLE Complexity for InnoDB Tables](innodb-analyze-table-complexity.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.8.10.3 为InnoDB表估算ANALYZE TABLE复杂度](innodb-analyze-table-complexity.html)'
- en: This section describes how to configure persistent and non-persistent optimizer
    statistics for `InnoDB` tables.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何为`InnoDB`表配置持久性和非持久性优化器统计信息。
- en: 'Persistent optimizer statistics are persisted across server restarts, allowing
    for greater [plan stability](glossary.html#glos_plan_stability "plan stability")
    and more consistent query performance. Persistent optimizer statistics also provide
    control and flexibility with these additional benefits:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 持久性优化器统计信息在服务器重启后保留，可以实现更高的[计划稳定性](glossary.html#glos_plan_stability "plan stability")和更一致的查询性能。持久性优化器统计信息还提供了以下额外的控制和灵活性：
- en: You can use the [`innodb_stats_auto_recalc`](innodb-parameters.html#sysvar_innodb_stats_auto_recalc)
    configuration option to control whether statistics are updated automatically after
    substantial changes to a table.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用[`innodb_stats_auto_recalc`](innodb-parameters.html#sysvar_innodb_stats_auto_recalc)配置选项来控制在表发生重大更改后是否自动更新统计信息。
- en: You can use the `STATS_PERSISTENT`, `STATS_AUTO_RECALC`, and `STATS_SAMPLE_PAGES`
    clauses with [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")
    and [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") statements
    to configure optimizer statistics for individual tables.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")和[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")语句中使用`STATS_PERSISTENT`、`STATS_AUTO_RECALC`和`STATS_SAMPLE_PAGES`子句来为单个表配置优化器统计信息。
- en: You can query optimizer statistics data in the `mysql.innodb_table_stats` and
    `mysql.innodb_index_stats` tables.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在`mysql.innodb_table_stats`和`mysql.innodb_index_stats`表中查询优化器统计数据。
- en: You can view the `last_update` column of the `mysql.innodb_table_stats` and
    `mysql.innodb_index_stats` tables to see when statistics were last updated.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以查看`mysql.innodb_table_stats`和`mysql.innodb_index_stats`表的`last_update`列，以查看统计信息上次更新的时间。
- en: You can manually modify the `mysql.innodb_table_stats` and `mysql.innodb_index_stats`
    tables to force a specific query optimization plan or to test alternative plans
    without modifying the database.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以手动修改`mysql.innodb_table_stats`和`mysql.innodb_index_stats`表，以强制执行特定的查询优化计划或测试替代计划，而不修改数据库。
- en: The persistent optimizer statistics feature is enabled by default ([`innodb_stats_persistent=ON`](innodb-parameters.html#sysvar_innodb_stats_persistent)).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 持久性优化器统计功能默认启用（[`innodb_stats_persistent=ON`](innodb-parameters.html#sysvar_innodb_stats_persistent)）。
- en: Non-persistent optimizer statistics are cleared on each server restart and after
    some other operations, and recomputed on the next table access. As a result, different
    estimates could be produced when recomputing statistics, leading to different
    choices in execution plans and variations in query performance.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 非持久性优化器统计信息在每次服务器重启和其他一些操作后被清除，并在下一次访问表时重新计算。因此，在重新计算统计信息时可能会产生不同的估计值，导致执行计划的不同选择和查询性能的变化。
- en: This section also provides information about estimating [`ANALYZE TABLE`](analyze-table.html
    "15.7.3.1 ANALYZE TABLE Statement") complexity, which may be useful when attempting
    to achieve a balance between accurate statistics and [`ANALYZE TABLE`](analyze-table.html
    "15.7.3.1 ANALYZE TABLE Statement") execution time.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本节还提供了关于估算[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")复杂度的信息，这在尝试在准确统计信息和[`ANALYZE
    TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")执行时间之间取得平衡时可能会有用。
