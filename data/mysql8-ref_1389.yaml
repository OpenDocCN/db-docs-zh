- en: 19.2.4 Relay Log and Replication Metadata Repositories
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 19.2.4 中继日志和复制元数据存储库
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replica-logs.html](https://dev.mysql.com/doc/refman/8.0/en/replica-logs.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replica-logs.html](https://dev.mysql.com/doc/refman/8.0/en/replica-logs.html)
- en: '[19.2.4.1 The Relay Log](replica-logs-relaylog.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[19.2.4.1 中继日志](replica-logs-relaylog.html)'
- en: '[19.2.4.2 Replication Metadata Repositories](replica-logs-status.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[19.2.4.2 复制元数据存储库](replica-logs-status.html)'
- en: 'A replica server creates several repositories of information to use for the
    replication process:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 复制服务器创建多个信息存储库，用于复制过程：
- en: The replica's *relay log*, which is written by the replication I/O (receiver)
    thread, contains the transactions read from the replication source server's binary
    log. The transactions in the relay log are applied on the replica by the replication
    SQL (applier) thread. For information about the relay log, see [Section 19.2.4.1,
    “The Relay Log”](replica-logs-relaylog.html "19.2.4.1 The Relay Log").
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制的*中继日志*由复制I/O（接收器）线程编写，其中包含从复制源服务器的二进制日志中读取的事务。中继日志中的事务由复制SQL（应用程序）线程在复制中应用。有关中继日志的信息，请参见[第19.2.4.1节，“中继日志”](replica-logs-relaylog.html
    "19.2.4.1 中继日志")。
- en: The replica's *connection metadata repository* contains information that the
    replication receiver thread needs to connect to the replication source server
    and retrieve transactions from the source's binary log. The connection metadata
    repository is written to the `mysql.slave_master_info` table.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制的*连接元数据存储库*包含复制接收器线程需要连接到复制源服务器并从源的二进制日志中检索事务的信息。连接元数据存储库写入`mysql.slave_master_info`表。
- en: The replica's *applier metadata repository* contains information that the replication
    applier thread needs to read and apply transactions from the replica's relay log.
    The applier metadata repository is written to the `mysql.slave_relay_log_info`
    table.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制的*应用程序元数据存储库*包含复制应用程序线程需要读取并应用来自复制中继日志的事务的信息。应用程序元数据存储库写入`mysql.slave_relay_log_info`表。
- en: The replica's connection metadata repository and applier metadata repository
    are collectively known as the replication metadata repositories. For information
    about these, see [Section 19.2.4.2, “Replication Metadata Repositories”](replica-logs-status.html
    "19.2.4.2 Replication Metadata Repositories").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 复制的连接元数据存储库和应用程序元数据存储库统称为复制元数据存储库。有关这些信息，请参见[第19.2.4.2节，“复制元数据存储库”](replica-logs-status.html
    "19.2.4.2 复制元数据存储库")。
- en: '**Making replication resilient to unexpected halts. ** The `mysql.slave_master_info`
    and `mysql.slave_relay_log_info` tables are created using the transactional storage
    engine [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine").
    Updates to the replica''s applier metadata repository table are committed together
    with the transactions, meaning that the replica''s progress information recorded
    in that repository is always consistent with what has been applied to the database,
    even in the event of an unexpected server halt. For information on the combination
    of settings on the replica that is most resilient to unexpected halts, see [Section 19.4.2,
    “Handling an Unexpected Halt of a Replica”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 Handling an Unexpected Halt of a Replica").'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**使复制对意外停机具有弹性。** 使用事务存储引擎[`InnoDB`](innodb-storage-engine.html "第17章 InnoDB存储引擎")创建`mysql.slave_master_info`和`mysql.slave_relay_log_info`表。对复制的应用程序元数据存储库表的更新与事务一起提交，这意味着记录在该存储库中的复制进度信息始终与已应用于数据库的内容一致，即使出现意外服务器停机情况。有关在复制上组合设置以使其对意外停机最具弹性的信息，请参见[第19.4.2节，“处理复制的意外停机”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 处理复制的意外停机")。'
