- en: 26.3.2 Management of HASH and KEY Partitions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 26.3.2 哈希和键分区的管理
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/partitioning-management-hash-key.html](https://dev.mysql.com/doc/refman/8.0/en/partitioning-management-hash-key.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/partitioning-management-hash-key.html](https://dev.mysql.com/doc/refman/8.0/en/partitioning-management-hash-key.html)
- en: Tables which are partitioned by hash or by key are very similar to one another
    with regard to making changes in a partitioning setup, and both differ in a number
    of ways from tables which have been partitioned by range or list. For that reason,
    this section addresses the modification of tables partitioned by hash or by key
    only. For a discussion of adding and dropping of partitions of tables that are
    partitioned by range or list, see [Section 26.3.1, “Management of RANGE and LIST
    Partitions”](partitioning-management-range-list.html "26.3.1 Management of RANGE
    and LIST Partitions").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用哈希或键分区的表在修改分区设置方面非常相似，与按范围或列表分区的表在许多方面不同。因此，本节仅讨论了对使用哈希或键分区的表进行修改。有关对按范围或列表分区的表添加和删除分区的讨论，请参见[第26.3.1节，“范围和列表分区的管理”](partitioning-management-range-list.html
    "26.3.1 范围和列表分区的管理")。
- en: 'You cannot drop partitions from tables that are partitioned by `HASH` or `KEY`
    in the same way that you can from tables that are partitioned by `RANGE` or `LIST`.
    However, you can merge `HASH` or `KEY` partitions using `ALTER TABLE ... COALESCE
    PARTITION`. Suppose that a `clients` table containing data about clients is divided
    into 12 partitions, created as shown here:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 与可以从按`RANGE`或`LIST`分区的表中删除分区的方式不同，您无法像从中删除分区一样从按`HASH`或`KEY`分区的表中删除分区。但是，您可以使用`ALTER
    TABLE ... COALESCE PARTITION`合并`HASH`或`KEY`分区。假设一个包含有关客户数据的`clients`表被分成了12个分区，如下所示创建：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To reduce the number of partitions from 12 to 8, execute the following [`ALTER
    TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER TABLE Partition
    Operations") statement:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要将分区数从12减少到8，请执行以下[`ALTER TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER
    TABLE Partition Operations")语句：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`COALESCE` works equally well with tables that are partitioned by `HASH`, `KEY`,
    `LINEAR HASH`, or `LINEAR KEY`. Here is an example similar to the previous one,
    differing only in that the table is partitioned by `LINEAR KEY`:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`COALESCE`在使用`HASH`、`KEY`、`LINEAR HASH`或`LINEAR KEY`分区的表上同样有效。以下是一个类似于前一个示例的示例，唯一不同之处在于表是通过`LINEAR
    KEY`分区的：'
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The number following `COALESCE PARTITION` is the number of partitions to merge
    into the remainder—in other words, it is the number of partitions to remove from
    the table.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`COALESCE PARTITION`后面的数字是要合并到剩余部分中的分区数，换句话说，要从表中删除的分区数。'
- en: 'Attempting to remove more partitions than are in the table results in an error
    like this one:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试删除比表中存在的分区更多的分区会导致如下错误：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To increase the number of partitions for the `clients` table from 12 to 18,
    use `ALTER TABLE ... ADD PARTITION` as shown here:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要将`clients`表的分区数从12增加到18，请使用如下`ALTER TABLE ... ADD PARTITION`：
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
