- en: 25.7 NDB Cluster Replication
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 25.7 NDB 集群复制
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-replication.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-replication.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-replication.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-replication.html)
- en: '[25.7.1 NDB Cluster Replication: Abbreviations and Symbols](mysql-cluster-replication-abbreviations.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.1 NDB 集群复制：缩写和符号](mysql-cluster-replication-abbreviations.html)'
- en: '[25.7.2 General Requirements for NDB Cluster Replication](mysql-cluster-replication-general.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.2 NDB 集群复制的一般要求](mysql-cluster-replication-general.html)'
- en: '[25.7.3 Known Issues in NDB Cluster Replication](mysql-cluster-replication-issues.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.3 NDB 集群复制中已知问题](mysql-cluster-replication-issues.html)'
- en: '[25.7.4 NDB Cluster Replication Schema and Tables](mysql-cluster-replication-schema.html)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.4 NDB 集群复制模式和表](mysql-cluster-replication-schema.html)'
- en: '[25.7.5 Preparing the NDB Cluster for Replication](mysql-cluster-replication-preparation.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.5 准备 NDB 集群进行复制](mysql-cluster-replication-preparation.html)'
- en: '[25.7.6 Starting NDB Cluster Replication (Single Replication Channel)](mysql-cluster-replication-starting.html)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.6 启动 NDB 集群复制（单一复制通道）](mysql-cluster-replication-starting.html)'
- en: '[25.7.7 Using Two Replication Channels for NDB Cluster Replication](mysql-cluster-replication-two-channels.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.7 使用两个复制通道进行 NDB 集群复制](mysql-cluster-replication-two-channels.html)'
- en: '[25.7.8 Implementing Failover with NDB Cluster Replication](mysql-cluster-replication-failover.html)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.8 使用 NDB 集群复制实现故障切换](mysql-cluster-replication-failover.html)'
- en: '[25.7.9 NDB Cluster Backups With NDB Cluster Replication](mysql-cluster-replication-backups.html)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.9 使用 NDB 集群复制进行 NDB 集群备份](mysql-cluster-replication-backups.html)'
- en: '[25.7.10 NDB Cluster Replication: Bidirectional and Circular Replication](mysql-cluster-replication-multi-source.html)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.10 NDB 集群复制：双向和循环复制](mysql-cluster-replication-multi-source.html)'
- en: '[25.7.11 NDB Cluster Replication Using the Multithreaded Applier](mysql-cluster-replication-mta.html)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.11 使用多线程应用程序的 NDB 集群复制](mysql-cluster-replication-mta.html)'
- en: '[25.7.12 NDB Cluster Replication Conflict Resolution](mysql-cluster-replication-conflict-resolution.html)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.7.12 NDB 集群复制冲突解决](mysql-cluster-replication-conflict-resolution.html)'
- en: NDB Cluster supports asynchronous replication, more usually referred to simply
    as “replication”. This section explains how to set up and manage a configuration
    in which one group of computers operating as an NDB Cluster replicates to a second
    computer or group of computers. We assume some familiarity on the part of the
    reader with standard MySQL replication as discussed elsewhere in this Manual.
    (See [Chapter 19, *Replication*](replication.html "Chapter 19 Replication")).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: NDB 集群支持异步复制，通常简称为“复制”。本节解释了如何设置和管理一个配置，其中一组计算机作为 NDB 集群操作，复制到第二台计算机或一组计算机。我们假定读者在标准
    MySQL 复制方面有一定了解，如本手册的其他地方所述。 (参见 [第 19 章，*复制*](replication.html "第 19 章 复制")).
- en: Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: NDB Cluster does not support replication using GTIDs; semisynchronous replication
    and group replication are also not supported by the `NDB` storage engine.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: NDB 集群不支持使用 GTID 进行复制；半同步复制和组复制也不受 `NDB` 存储引擎支持。
- en: 'Normal (non-clustered) replication involves a source server and a replica server,
    the source being so named because operations and data to be replicated originate
    with it, and the replica being the recipient of these. In NDB Cluster, replication
    is conceptually very similar but can be more complex in practice, as it may be
    extended to cover a number of different configurations including replicating between
    two complete clusters. Although an NDB Cluster itself depends on the [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine for clustering functionality,
    it is not necessary to use [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") as the storage engine for the replica''s copies of the replicated tables
    (see [Replication from NDB to other storage engines](mysql-cluster-replication-issues.html#mysql-cluster-replication-ndb-to-non-ndb
    "Replication from NDB to other storage engines")). However, for maximum availability,
    it is possible (and preferable) to replicate from one NDB Cluster to another,
    and it is this scenario that we discuss, as shown in the following figure:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 正常（非集群）复制涉及源服务器和副本服务器，源被命名为源是因为要复制的操作和数据源自它，而副本是这些操作和数据的接收者。在NDB Cluster中，复制在概念上非常相似，但在实践中可能更加复杂，因为它可以扩展到涵盖许多不同的配置，包括在两个完整集群之间进行复制。虽然NDB
    Cluster本身依赖于[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0")存储引擎进行集群功能，但不需要使用[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")作为副本的复制表的存储引擎（请参见[从NDB到其他存储引擎的复制](mysql-cluster-replication-issues.html#mysql-cluster-replication-ndb-to-non-ndb
    "从NDB到其他存储引擎的复制")）。然而，为了最大的可用性，可以（并且最好）从一个NDB Cluster复制到另一个NDB Cluster，我们将讨论这种情况，如下图所示：
- en: '**Figure 25.10 NDB Cluster-to-Cluster Replication Layout**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**图25.10 NDB Cluster到集群复制布局**'
- en: '![Much of the content is described in the surrounding text. It visualizes how
    a MySQL source is replicated. The replica differs in that it shows an I/O (receiver)
    thread pointing to a relay binary log which points to an SQL (applier) thread.
    In addition, while the binary log points to and from the NDBCLUSTER engine on
    the source server, on the replica it points directly to an SQL node (MySQL server).](../Images/7d05fa3a091c17d4accc416bc85a6838.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![大部分内容在周围的文本中有描述。它展示了MySQL源是如何复制的。副本的不同之处在于它显示了一个I/O（接收器）线程指向一个中继二进制日志，该中继二进制日志指向一个SQL（应用程序）线程。此外，虽然二进制日志在源服务器上指向和从NDBCLUSTER引擎，但在副本上直接指向一个SQL节点（MySQL服务器）。'
- en: In this scenario, the replication process is one in which successive states
    of a source cluster are logged and saved to a replica cluster. This process is
    accomplished by a special thread known as the NDB binary log injector thread,
    which runs on each MySQL server and produces a binary log (`binlog`). This thread
    ensures that all changes in the cluster producing the binary log—and not just
    those changes that are effected through the MySQL Server—are inserted into the
    binary log with the correct serialization order. We refer to the MySQL source
    and replica servers as replication servers or replication nodes, and the data
    flow or line of communication between them as a replication channel.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，复制过程是一个连续记录源集群状态并保存到副本集群的过程。这个过程是通过一个特殊的线程完成的，称为NDB二进制日志注入器线程，它在每个MySQL服务器上运行并生成一个二进制日志（`binlog`）。该线程确保将产生二进制日志的集群中的所有更改（而不仅仅是通过MySQL
    Server实现的那些更改）以正确的序列化顺序插入到二进制日志中。我们将MySQL源和副本服务器称为复制服务器或复制节点，它们之间的数据流或通信线路称为复制通道。
- en: For information about performing point-in-time recovery with NDB Cluster and
    NDB Cluster Replication, see [Section 25.7.9.2, “Point-In-Time Recovery Using
    NDB Cluster Replication”](mysql-cluster-replication-pitr.html "25.7.9.2 Point-In-Time
    Recovery Using NDB Cluster Replication").
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用NDB Cluster和NDB Cluster Replication执行时点恢复的信息，请参见[Section 25.7.9.2，“使用NDB
    Cluster Replication进行时点恢复”](mysql-cluster-replication-pitr.html "25.7.9.2 使用NDB
    Cluster Replication进行时点恢复")。
- en: '**NDB API replica status variables. ** NDB API counters can provide enhanced
    monitoring capabilities on replica clusters. These counters are implemented as
    NDB statistics `_slave` status variables, as seen in the output of [`SHOW STATUS`](show-status.html
    "15.7.7.37 SHOW STATUS Statement"), or in the results of queries against the Performance
    Schema [`session_status`](performance-schema-status-variable-tables.html "29.12.15 Performance
    Schema Status Variable Tables") or [`global_status`](performance-schema-status-variable-tables.html
    "29.12.15 Performance Schema Status Variable Tables") table in a [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") client session connected to a MySQL
    Server that is acting as a replica in NDB Cluster Replication. By comparing the
    values of these status variables before and after the execution of statements
    affecting replicated [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") tables, you can observe the corresponding actions taken on the NDB API level
    by the replica, which can be useful when monitoring or troubleshooting NDB Cluster
    Replication. [Section 25.6.15, “NDB API Statistics Counters and Variables”](mysql-cluster-ndb-api-statistics.html
    "25.6.15 NDB API Statistics Counters and Variables"), provides additional information.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**NDB API 复制状态变量。** NDB API 计数器可以提供增强的监控能力，用于监视副本集群。这些计数器实现为 NDB 统计 `_slave`
    状态变量，如在 [`SHOW STATUS`](show-status.html "15.7.7.37 SHOW STATUS 语句") 的输出中所见，或者在连接到充当
    NDB 集群复制中的副本的 MySQL 服务器的 [**mysql**](mysql.html "6.5.1 mysql — MySQL 命令行客户端")
    客户端会话中对 Performance Schema [`session_status`](performance-schema-status-variable-tables.html
    "29.12.15 Performance Schema 状态变量表") 或 [`global_status`](performance-schema-status-variable-tables.html
    "29.12.15 Performance Schema 状态变量表") 表进行查询的结果中。通过比较执行影响复制的 [`NDB`](mysql-cluster.html
    "第 25 章 MySQL NDB Cluster 8.0") 表的语句之前和之后这些状态变量的值，您可以观察副本在 NDB API 级别上采取的相应操作，这在监视或故障排除
    NDB 集群复制时可能很有用。[第 25.6.15 节，“NDB API 统计计数器和变量”](mysql-cluster-ndb-api-statistics.html
    "25.6.15 NDB API 统计计数器和变量")提供了额外信息。'
- en: '**Replication from NDB to non-NDB tables. ** It is possible to replicate [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") tables from an NDB Cluster acting as the replication
    source to tables using other MySQL storage engines such as [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") or [`MyISAM`](myisam-storage-engine.html
    "18.2 The MyISAM Storage Engine") on a replica [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server"). This is subject to a number of conditions; see [Replication
    from NDB to other storage engines](mysql-cluster-replication-issues.html#mysql-cluster-replication-ndb-to-non-ndb
    "Replication from NDB to other storage engines"), and [Replication from NDB to
    a nontransactional storage engine](mysql-cluster-replication-issues.html#mysql-cluster-replication-ndb-to-nontransactional
    "Replication from NDB to a nontransactional storage engine"), for more information.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**从 NDB 复制到非 NDB 表。** 可以将 [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster
    8.0") 表从作为复制源的 NDB 集群复制到使用其他 MySQL 存储引擎（如 [`InnoDB`](innodb-storage-engine.html
    "第 17 章 InnoDB 存储引擎") 或 [`MyISAM`](myisam-storage-engine.html "第 18.2 章 MyISAM
    存储引擎")）的表上，这些表位于一个副本 [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL 服务器") 上。这受到一些条件的限制；请参阅[从
    NDB 复制到其他存储引擎](mysql-cluster-replication-issues.html#mysql-cluster-replication-ndb-to-non-ndb
    "从 NDB 复制到其他存储引擎")和[从 NDB 复制到非事务性存储引擎](mysql-cluster-replication-issues.html#mysql-cluster-replication-ndb-to-nontransactional
    "从 NDB 复制到非事务性存储引擎")以获取更多信息。'
