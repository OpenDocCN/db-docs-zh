- en: 29.7 Performance Schema Status Monitoring
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 29.7 性能模式状态监控
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-status-monitoring.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-status-monitoring.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-status-monitoring.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-status-monitoring.html)
- en: 'There are several status variables associated with the Performance Schema:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与性能模式相关的几个状态变量有：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The Performance Schema status variables provide information about instrumentation
    that could not be loaded or created due to memory constraints. Names for these
    variables have several forms:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式状态变量提供了有关由于内存限制而无法加载或创建的仪器化信息。这些变量的名称有几种形式：
- en: '`Performance_schema_*`xxx`*_classes_lost` indicates how many instruments of
    type *`xxx`* could not be loaded.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Performance_schema_*`xxx`*_classes_lost` 表示无法加载类型为 *`xxx`* 的仪器数量。'
- en: '`Performance_schema_*`xxx`*_instances_lost` indicates how many instances of
    object type *`xxx`* could not be created.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Performance_schema_*`xxx`*_instances_lost` 表示无法创建对象类型为 *`xxx`* 的实例数量。'
- en: '`Performance_schema_*`xxx`*_handles_lost` indicates how many instances of object
    type *`xxx`* could not be opened.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Performance_schema_*`xxx`*_handles_lost` 表示无法打开对象类型为 *`xxx`* 的实例数量。'
- en: '`Performance_schema_locker_lost` indicates how many events are “lost” or not
    recorded.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Performance_schema_locker_lost` 表示有多少事件“丢失”或未记录。'
- en: For example, if a mutex is instrumented in the server source but the server
    cannot allocate memory for the instrumentation at runtime, it increments [`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost).
    The mutex still functions as a synchronization object (that is, the server continues
    to function normally), but performance data for it is not collected. If the instrument
    can be allocated, it can be used for initializing instrumented mutex instances.
    For a singleton mutex such as a global mutex, there is only one instance. Other
    mutexes have an instance per connection, or per page in various caches and data
    buffers, so the number of instances varies over time. Increasing the maximum number
    of connections or the maximum size of some buffers increases the maximum number
    of instances that might be allocated at once. If the server cannot create a given
    instrumented mutex instance, it increments [`Performance_schema_mutex_instances_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_instances_lost).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果在服务器源代码中为互斥仪器进行了仪器化，但服务器在运行时无法为仪器分配内存，则会增加 [`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)。互斥仍然作为同步对象运行（即，服务器继续正常运行），但不会收集其性能数据。如果可以分配仪器，则可以用于初始化仪器化的互斥实例。对于全局互斥体这样的单例互斥体，只有一个实例。其他互斥体每个连接或每个页面在各种缓存和数据缓冲区中有一个实例，因此实例数量随时间变化。增加最大连接数或某些缓冲区的最大大小会增加一次可能分配的实例的最大数量。如果服务器无法创建给定的仪器化互斥实例，则会增加
    [`Performance_schema_mutex_instances_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_instances_lost)。
- en: 'Suppose that the following conditions hold:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 假设以下条件成立：
- en: The server was started with the [`--performance_schema_max_mutex_classes=200`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes)
    option and thus has room for 200 mutex instruments.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器使用 [`--performance_schema_max_mutex_classes=200`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes)
    选项启动，因此有 200 个互斥仪器的空间。
- en: 150 mutex instruments have been loaded already.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已加载了 150 个互斥仪器。
- en: The plugin named `plugin_a` contains 40 mutex instruments.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名为 `plugin_a` 的插件包含 40 个互斥仪器。
- en: The plugin named `plugin_b` contains 20 mutex instruments.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名为 `plugin_b` 的插件包含 20 个互斥仪器。
- en: 'The server allocates mutex instruments for the plugins depending on how many
    they need and how many are available, as illustrated by the following sequence
    of statements:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器根据插件需要的数量和可用数量为插件分配互斥仪器，如下面的语句序列所示：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The server now has 150+40 = 190 mutex instruments.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器现在有 150+40 = 190 个互斥仪器。
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The server still has 190 instruments. All the historical data generated by the
    plugin code is still available, but new events for the instruments are not collected.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器仍然有 190 个仪器。插件代码生成的所有历史数据仍然可用，但不会收集仪器的新事件。
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The server detects that the 40 instruments are already defined, so no new instruments
    are created, and previously assigned internal memory buffers are reused. The server
    still has 190 instruments.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器检测到已经定义了 40 个仪器，因此不会创建新的仪器，并且先前分配的内部内存缓冲区将被重用。服务器仍然有 190 个仪器。
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The server has room for 200-190 = 10 instruments (in this case, mutex classes),
    and sees that the plugin contains 20 new instruments. 10 instruments are loaded,
    and 10 are discarded or “lost.” The [`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)
    indicates the number of instruments (mutex classes) lost:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器有 200-190 = 10 个仪器的空间（在本例中是互斥类），并且发现插件包含 20 个新仪器。加载了 10 个仪器，而 10 个被丢弃或“丢失”。[`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)
    指示了丢失的仪器（互斥类）的数量：
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The instrumentation still works and collects (partial) data for `plugin_b`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 仪器仍在工作并为 `plugin_b` 收集（部分）数据。
- en: 'When the server cannot create a mutex instrument, these results occur:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当服务器无法创建互斥仪器时，会出现以下结果：
- en: No row for the instrument is inserted into the [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table") table.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仪器未插入 [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table") 表中。
- en: '[`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)
    increases by 1.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)
    增加了 1。'
- en: '[`Performance_schema_mutex_instances_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_instances_lost)
    does not change. (When the mutex instrument is not created, it cannot be used
    to create instrumented mutex instances later.)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Performance_schema_mutex_instances_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_instances_lost)
    不会改变。（当互斥仪器未创建时，无法用于稍后创建仪器化的互斥实例。）'
- en: The pattern just described applies to all types of instruments, not just mutexes.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 刚才描述的模式适用于所有类型的仪器，而不仅仅是互斥体。
- en: 'A value of [`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)
    greater than 0 can happen in two cases:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)
    大于 0 的值可能出现在两种情况下：'
- en: To save a few bytes of memory, you start the server with [`--performance_schema_max_mutex_classes=*`N`*`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes),
    where *`N`* is less than the default value. The default value is chosen to be
    sufficient to load all the plugins provided in the MySQL distribution, but this
    can be reduced if some plugins are never loaded. For example, you might choose
    not to load some of the storage engines in the distribution.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了节省一些内存空间，您可以使用 [`--performance_schema_max_mutex_classes=*`N`*`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes)
    启动服务器，其中 *`N`* 小于默认值。默认值被选择为足以加载 MySQL 发行版中提供的所有插件，但如果某些插件从未加载，则可以减少此值。例如，您可能选择不加载发行版中的某些存储引擎。
- en: You load a third-party plugin that is instrumented for the Performance Schema
    but do not allow for the plugin's instrumentation memory requirements when you
    start the server. Because it comes from a third party, the instrument memory consumption
    of this engine is not accounted for in the default value chosen for [`performance_schema_max_mutex_classes`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes).
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您加载了一个为性能模式进行了仪器化的第三方插件，但在启动服务器时未考虑插件的仪器化内存需求。由于来自第三方，因此此引擎的仪器内存消耗不计入为 [`performance_schema_max_mutex_classes`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes)
    选择的默认值。
- en: If the server has insufficient resources for the plugin's instruments and you
    do not explicitly allocate more using [`--performance_schema_max_mutex_classes=*`N`*`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes),
    loading the plugin leads to starvation of instruments.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果服务器对插件的仪器资源不足，并且您未明确使用 [`--performance_schema_max_mutex_classes=*`N`*`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes)
    分配更多资源，则加载插件会导致仪器资源匮乏。
- en: If the value chosen for [`performance_schema_max_mutex_classes`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes)
    is too small, no error is reported in the error log and there is no failure at
    runtime. However, the content of the tables in the `performance_schema` database
    misses events. The [`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)
    status variable is the only visible sign to indicate that some events were dropped
    internally due to failure to create instruments.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为[`performance_schema_max_mutex_classes`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_classes)选择的值太小，错误日志中不会报告任何错误，并且在运行时不会出现故障。然而，`performance_schema`数据库中的表内容会缺少事件。[`Performance_schema_mutex_classes_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_classes_lost)状态变量是唯一可见的迹象，表明由于无法创建仪器而导致一些事件被丢弃。
- en: If an instrument is not lost, it is known to the Performance Schema, and is
    used when instrumenting instances. For example, `wait/synch/mutex/sql/LOCK_delete`
    is the name of a mutex instrument in the [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table") table. This single instrument is used
    when creating a mutex in the code (in `THD::LOCK_delete`) however many instances
    of the mutex are needed as the server runs. In this case, `LOCK_delete` is a mutex
    that is per connection (`THD`), so if a server has 1000 connections, there are
    1000 threads, and 1000 instrumented `LOCK_delete` mutex instances (`THD::LOCK_delete`).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个仪器没有丢失，那么性能模式就会知道它，并在实例化时使用。例如，`wait/synch/mutex/sql/LOCK_delete`是[`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table")表中一个互斥体仪器的名称。这个单一仪器在代码中创建互斥体时使用（在`THD::LOCK_delete`中），然而服务器运行时需要多个互斥体实例。在这种情况下，`LOCK_delete`是一个每个连接（`THD`）的互斥体，所以如果服务器有1000个连接，就有1000个线程，以及1000个被标记的`LOCK_delete`互斥体实例（`THD::LOCK_delete`）。
- en: If the server does not have room for all these 1000 instrumented mutexes (instances),
    some mutexes are created with instrumentation, and some are created without instrumentation.
    If the server can create only 800 instances, 200 instances are lost. The server
    continues to run, but increments [`Performance_schema_mutex_instances_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_instances_lost)
    by 200 to indicate that instances could not be created.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果服务器没有足够的空间来容纳这1000个被标记的互斥体（实例），一些互斥体会被创建并标记，而另一些则会被创建但不被标记。如果服务器只能创建800个实例，那么就会丢失200个实例。服务器继续运行，但会将[`Performance_schema_mutex_instances_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_instances_lost)增加200，以表示无法创建实例。
- en: A value of [`Performance_schema_mutex_instances_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_instances_lost)
    greater than 0 can happen when the code initializes more mutexes at runtime than
    were allocated for [`--performance_schema_max_mutex_instances=*`N`*`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_instances).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`Performance_schema_mutex_instances_lost`](performance-schema-status-variables.html#statvar_Performance_schema_mutex_instances_lost)的值大于0，可能是因为代码在运行时初始化的互斥体比为[`--performance_schema_max_mutex_instances=*`N`*`](performance-schema-system-variables.html#sysvar_performance_schema_max_mutex_instances)分配的数量多。
- en: The bottom line is that if [`SHOW STATUS LIKE 'perf%'`](show-status.html "15.7.7.37 SHOW
    STATUS Statement") says that nothing was lost (all values are zero), the Performance
    Schema data is accurate and can be relied upon. If something was lost, the data
    is incomplete, and the Performance Schema could not record everything given the
    insufficient amount of memory it was given to use. In this case, the specific
    `Performance_schema_*`xxx`*_lost` variable indicates the problem area.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是，如果[`SHOW STATUS LIKE 'perf%'`](show-status.html "15.7.7.37 SHOW STATUS Statement")显示没有丢失任何内容（所有值都为零），那么性能模式数据是准确的，可以信赖。如果有内容丢失，数据就是不完整的，性能模式无法记录所有内容，因为给定的内存量不足。在这种情况下，特定的`Performance_schema_*`xxx`*_lost`变量指示了问题区域。
- en: It might be appropriate in some cases to cause deliberate instrument starvation.
    For example, if you do not care about performance data for file I/O, you can start
    the server with all Performance Schema parameters related to file I/O set to 0\.
    No memory is allocated for file-related classes, instances, or handles, and all
    file events are lost.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，有意造成仪器匮乏可能是合适的。例如，如果您不关心文件I/O的性能数据，可以将服务器启动时与文件I/O相关的所有性能模式参数设置为0。不会为与文件相关的类、实例或句柄分配任何内存，并且所有文件事件都会丢失。
- en: 'Use [`SHOW ENGINE PERFORMANCE_SCHEMA STATUS`](show-engine.html "15.7.7.15 SHOW
    ENGINE Statement") to inspect the internal operation of the Performance Schema
    code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`SHOW ENGINE PERFORMANCE_SCHEMA STATUS`](show-engine.html "15.7.7.15 SHOW
    ENGINE Statement")来检查性能模式代码的内部操作：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This statement is intended to help the DBA understand the effects that different
    Performance Schema options have on memory requirements. For a description of the
    field meanings, see [Section 15.7.7.15, “SHOW ENGINE Statement”](show-engine.html
    "15.7.7.15 SHOW ENGINE Statement").
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个语句旨在帮助数据库管理员理解不同性能模式选项对内存需求的影响。有关字段含义的描述，请参阅[第15.7.7.15节，“SHOW ENGINE Statement”](show-engine.html
    "15.7.7.15 SHOW ENGINE Statement")。
