- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-view-changes.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-view-changes.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-view-changes.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-view-changes.html)
- en: 20.5.4.5 How Distributed Recovery Works
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 20.5.4.5 分布式恢复的工作原理
- en: When Group Replication's distributed recovery process is carrying out state
    transfer from the binary log, to synchronize the joining member with the donor
    up to a specific point in time, the joining member and donor make use of GTIDs
    (see [Section 19.1.3, “Replication with Global Transaction Identifiers”](replication-gtids.html
    "19.1.3 Replication with Global Transaction Identifiers")). However, GTIDs only
    provide a means to realize which transactions the joining member is missing. They
    do not help marking a specific point in time to which the server joining the group
    must catch up, nor do they convey certification information. This is the job of
    binary log view markers, which mark view changes in the binary log stream, and
    also contain additional metadata information, supplying the joining member with
    missing certification-related data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当Group Replication的分布式恢复过程从二进制日志中执行状态传输时，为了使加入的成员与捐赠者在特定时间点上同步，加入的成员和捐赠者使用GTIDs（参见[Section 19.1.3,
    “Replication with Global Transaction Identifiers”](replication-gtids.html "19.1.3 使用全局事务标识进行复制")）。然而，GTIDs只提供了加入成员缺失的事务信息。它们并不能帮助标记加入群组的服务器必须追赶到的特定时间点，也不能传递认证信息。这是二进制日志视图标记的工作，它们标记了二进制日志流中的视图更改，并且包含额外的元数据信息，为加入成员提供缺失的与认证相关的数据。
- en: This topic explains the role of view changes and the view change identifier,
    and the steps to carry out state transfer from the binary log.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本主题解释了视图更改的作用以及视图更改标识符，以及执行从二进制日志中进行状态传输的步骤。
- en: View and View Changes
  id: totrans-4
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 视图和视图更改
- en: A *view* corresponds to a group of members participating actively in the current
    configuration, in other words at a specific point in time. They are functioning
    correctly and online in the group.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*视图*对应于在当前配置中积极参与的一组成员，换句话说就是在特定时间点。他们在群组中正常运行并在线。
- en: A *view change* occurs when a modification to the group configuration happens,
    such as a member joining or leaving. Any group membership change results in an
    independent view change communicated to all members at the same logical point
    in time.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*视图更改*发生在群组配置发生修改时，比如成员加入或离开。任何群组成员变更都会导致独立的视图更改，同时在同一逻辑时间点向所有成员通信。'
- en: A *view identifier* uniquely identifies a view. It is generated whenever a view
    change happens.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*视图标识符*唯一标识一个视图。每当视图更改发生时，它就会生成。'
- en: 'At the group communication layer, view changes with their associated view identifiers
    mark boundaries between the data exchanged before and after a member joins. This
    concept is implemented through a binary log event: the "view change log event"
    (VCLE). The view identifier is recorded to demarcate transactions transmitted
    before and after changes happen in the group membership.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在群组通信层，视图更改及其相关的视图标识符标记了成员加入之前和之后交换的数据之间的边界。这个概念通过二进制日志事件实现："视图更改日志事件"（VCLE）。视图标识符被记录下来，以划分在群组成员身份发生更改之前和之后传输的事务。
- en: 'The view identifier itself is built from two parts: a randomly generated part,
    and a monotonically increasing integer. The randomly generated part is generated
    when the group is created, and remains unchanged while there is at least one member
    in the group. The integer is incremented every time a view change happens. Using
    these two different parts enables the view identifier to identify incremental
    group changes caused by members joining or leaving, and also to identify the situation
    where all members leave the group in a full group shutdown, so no information
    remains of what view the group was in. Randomly generating part of the identifier
    when the group is started from the beginning ensures that the data markers in
    the binary log remain unique, and an identical identifier is not reused after
    a full group shutdown, as this would cause issues with distributed recovery in
    the future.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 视图标识符本身由两部分构成：一个随机生成的部分和一个单调递增的整数。随机生成的部分在创建组时生成，并在组中至少有一个成员时保持不变。整数在每次视图更改发生时递增。使用这两个不同的部分使视图标识符能够识别由成员加入或离开引起的增量组更改，并且能够识别所有成员离开组导致的完全组关闭的情况，因此不会留下任何关于组处于何种视图的信息。在组从一开始创建时随机生成标识符的部分确保二进制日志中的数据标记保持唯一，并且在完全组关闭后不会重复使用相同的标识符，因为这将导致未来的分布式恢复出现问题。
- en: 'Begin: Stable Group'
  id: totrans-10
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 开始：稳定组
- en: All servers are online and processing incoming transactions from the group.
    Some servers may be a little behind in terms of transactions replicated, but eventually
    they converge. The group acts as one distributed and replicated database.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所有服务器都在线并处理来自组的传入交易。一些服务器可能在复制交易方面稍有落后，但最终它们会收敛。该组充当一个分布式和复制的数据库。
- en: '**Figure 20.8 Stable Group**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 20.8 稳定组**'
- en: '![Servers S1, S2, and S3 are members of the group. The most recent item in
    all of their binary logs is transaction T20.](../Images/1c437d9484865a6dda0dc5ec2233ffe4.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![服务器 S1、S2 和 S3 是组的成员。它们的二进制日志中最近的项目是交易 T20。](../Images/1c437d9484865a6dda0dc5ec2233ffe4.png)'
- en: 'View Change: a Member Joins'
  id: totrans-14
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 视图更改：成员加入
- en: Whenever a new member joins the group and therefore a view change is performed,
    every online server queues a view change log event for execution. This is queued
    because before the view change, several transactions can be queued on the server
    to be applied and as such, these belong to the old view. Queuing the view change
    event after them guarantees a correct marking of when this happened.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每当新成员加入组，因此执行视图更改时，每个在线服务器都会将视图更改日志事件排队等待执行。这是因为在视图更改之前，服务器上可以排队应用的多个交易，因此这些属于旧视图。在它们之后排队视图更改事件可以保证正确标记此事件发生的时间。
- en: Meanwhile, the joining member selects a suitable donor from the list of online
    servers as stated by the membership service through the view abstraction. A member
    joins on view 4 and the online members write a view change event to the binary
    log.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，加入的成员从在线服务器列表中选择一个适当的捐赠者，如成员服务通过视图抽象所述。一个成员在视图 4 上加入，而在线成员将视图更改事件写入二进制日志。
- en: '**Figure 20.9 A Member Joins**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 20.9 成员加入**'
- en: '![Server S4 joins the group and looks for a donor. Servers S1, S2, and S3 each
    queue the view change entry VC4 for their binary logs. Meanwhile, server S1 is
    receiving new transaction T21.](../Images/e824498c9a8c09e97430f19fd05d791f.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![服务器 S4 加入组并寻找捐赠者。服务器 S1、S2 和 S3 分别为它们的二进制日志排队视图更改条目 VC4。与此同时，服务器 S1 正在接收新交易
    T21。](../Images/e824498c9a8c09e97430f19fd05d791f.png)'
- en: 'State Transfer: Catching Up'
  id: totrans-19
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 状态转移：追赶
- en: If group members and the joining member are set up with the clone plugin (see
    [Section 20.5.4.2, “Cloning for Distributed Recovery”](group-replication-cloning.html
    "20.5.4.2 Cloning for Distributed Recovery")), and the difference in transactions
    between the joining member and the group exceeds the threshold set for a remote
    cloning operation ([`group_replication_clone_threshold`](group-replication-system-variables.html#sysvar_group_replication_clone_threshold)),
    Group Replication begins distributed recovery with a remote cloning operation.
    A remote cloning operation is also carried out if required transactions are no
    longer present in any group member's binary log files. During a remote cloning
    operation, the existing data on the joining member is removed, and replaced with
    a copy of the donor's data. When the remote cloning operation is complete and
    the joining member has restarted, state transfer from a donor's binary log is
    carried out to get the transactions that the group applied while the remote cloning
    operation was in progress. If there is not a large transaction gap, or if the
    clone plugin is not installed, Group Replication proceeds directly to state transfer
    from a donor's binary log.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果组成员和加入成员都使用克隆插件进行设置（参见[第 20.5.4.2 节，“用于分布式恢复的克隆”](group-replication-cloning.html
    "20.5.4.2 用于分布式恢复的克隆")），并且加入成员与组之间的事务差异超过了远程克隆操作的阈值（[`group_replication_clone_threshold`](group-replication-system-variables.html#sysvar_group_replication_clone_threshold)），则
    Group Replication 将开始使用远程克隆操作进行分布式恢复。如果所需事务不再存在于任何组成员的二进制日志文件中，则还会执行远程克隆操作。在远程克隆操作期间，加入成员上的现有数据将被删除，并替换为捐赠者的数据副本。当远程克隆操作完成并加入成员重新启动后，将从捐赠者的二进制日志进行状态转移，以获取在远程克隆操作进行时组应用的事务。如果没有大的事务间隙，或者未安装克隆插件，则
    Group Replication 直接进行从捐赠者的二进制日志进行状态转移。
- en: For state transfer from a donor's binary log, a connection is established between
    the joining member and the donor and state transfer begins. This interaction with
    the donor continues until the server joining the group's applier thread processes
    the view change log event that corresponds to the view change triggered when the
    server joining the group came into the group. In other words, the server joining
    the group replicates from the donor, until it gets to the marker with the view
    identifier which matches the view marker it is already in.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于从捐赠者的二进制日志进行状态转移，加入成员与捐赠者之间建立连接并开始状态转移。这种与捐赠者的交互会一直持续，直到加入组的服务器的应用程序线程处理与加入组时触发的视图更改日志事件相对应的视图更改日志事件。换句话说，加入组的服务器会从捐赠者进行复制，直到到达与其当前所在的视图标记相匹配的视图标记为止。
- en: '**Figure 20.10 State Transfer: Catching Up**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 20.10 状态转移：追赶上**'
- en: '![Server S4 has chosen server S2 as the donor. State transfer is executed from
    server S2 to server S4 until the view change entry VC4 is reached (view_id = VC4).
    Server S4 uses a temporary applier buffer for state transfer, and its binary log
    is currently empty.](../Images/6cde0effe2a266234c524a7d1bf6bb88.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![服务器 S4 已选择服务器 S2 作为捐赠者。状态转移从服务器 S2 执行到服务器 S4，直至达到视图更改条目 VC4（view_id = VC4）。服务器
    S4 使用临时应用程序缓冲区进行状态转移，其二进制日志目前为空。](../Images/6cde0effe2a266234c524a7d1bf6bb88.png)'
- en: As view identifiers are transmitted to all members in the group at the same
    logical time, the server joining the group knows at which view identifier it should
    stop replicating. This avoids complex GTID set calculations because the view identifier
    clearly marks which data belongs to each group view.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于视图标识符在同一逻辑时间传输到组中的所有成员，因此加入组的服务器知道应在哪个视图标识符处停止复制。这避免了复杂的 GTID 集计算，因为视图标识符清楚地标记了哪些数据属于每个组视图。
- en: While the server joining the group is replicating from the donor, it is also
    caching incoming transactions from the group. Eventually, it stops replicating
    from the donor and switches to applying those that are cached.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当加入组的服务器从捐赠者进行复制时，同时也会缓存来自组的传入事务。最终，它停止从捐赠者进行复制，并切换到应用那些已经缓存的事务。
- en: '**Figure 20.11 Queued Transactions**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 20.11 排队事务**'
- en: '![State transfer is complete. Server S4 has applied the transactions up to
    T20 and written them to its binary log. Server S4 has cached transaction T21,
    which arrived after the view change, in a temporary applier buffer while recovering.](../Images/ce8837bc241d5d26b6cbc5deb1b90f3b.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![状态转移已完成。服务器 S4 已应用事务直至 T20 并将其写入二进制日志。服务器 S4 在恢复时，已将在视图更改后到达的事务 T21 缓存在临时应用程序缓冲区中。](../Images/ce8837bc241d5d26b6cbc5deb1b90f3b.png)'
- en: 'Finish: Caught Up'
  id: totrans-28
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 完成：追赶上
- en: When the server joining the group recognizes a view change log event with the
    expected view identifier, the connection to the donor is terminated and it starts
    applying the cached transactions. Although it acts as a marker in the binary log,
    delimiting view changes, the view change log event also plays another role. It
    conveys the certification information as perceived by all servers when the server
    joining the group entered the group, in other words the last view change. Without
    it, the server joining the group would not have the necessary information to be
    able to certify (detect conflicts) subsequent transactions.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当加入组的服务器识别到具有预期视图标识符的视图更改日志事件时，与提供者的连接将被终止，并开始应用缓存的事务。虽然它在二进制日志中充当标记，分隔视图更改，但视图更改日志事件还扮演另一个角色。它传达了所有服务器在加入组时感知到的认证信息，换句话说是最后一次视图更改。没有它，加入组的服务器将没有必要的信息来认证（检测冲突）后续事务。
- en: The duration of the catch up is not deterministic, because it depends on the
    workload and the rate of incoming transactions to the group. This process is completely
    online and the server joining the group does not block any other server in the
    group while it is catching up. Therefore the number of transactions the server
    joining the group is behind when it moves to this stage can, for this reason,
    vary and thus increase or decrease according to the workload.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 追赶的持续时间不确定，因为它取决于工作负载和事务进入组的速率。这个过程完全在线进行，加入组的服务器在追赶时不会阻塞任何其他服务器。因此，当服务器进入这个阶段时落后的事务数量可能会因工作负载而变化，从而增加或减少。
- en: When the server joining the group reaches zero queued transactions and its stored
    data is equal to the other members, its public state changes to online.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当加入组的服务器达到零排队事务并且其存储的数据与其他成员相同时，其公共状态变为在线。
- en: '**Figure 20.12 Instance Online**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 20.12 实例在线**'
- en: '![Server S4 is now an online member of the group. It has applied cached transaction
    T21, so its binary log shows the same items as the binary logs of the other group
    members, and it no longer needs the temporary applier buffer. New incoming transaction
    T22 is now received and applied by all group members.](../Images/e5681969e16e160d132de51190fedbbb.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![服务器 S4 现在是组的在线成员。它已经应用了缓存事务 T21，因此其二进制日志显示与其他组成员的二进制日志相同，并且不再需要临时应用程序缓冲区。新的传入事务
    T22 现在被所有组成员接收并应用。](../Images/e5681969e16e160d132de51190fedbbb.png)'
