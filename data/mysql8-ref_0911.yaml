- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html](https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html](https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html)
- en: 15.1.20.5 FOREIGN KEY Constraints
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.1.20.5 外键约束
- en: MySQL supports foreign keys, which permit cross-referencing related data across
    tables, and foreign key constraints, which help keep the related data consistent.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持外键，允许在表之间进行相关数据的交叉引用，并支持外键约束，有助于保持相关数据的一致性。
- en: A foreign key relationship involves a parent table that holds the initial column
    values, and a child table with column values that reference the parent column
    values. A foreign key constraint is defined on the child table.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 外键关系涉及一个包含初始列值的父表，以及一个包含引用父列值的列值的子表。外键约束定义在子表上。
- en: 'The essential syntax for a defining a foreign key constraint in a [`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") or [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") statement includes the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE语句")或[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE语句")语句中定义外键约束的基本语法包括以下内容：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Foreign key constraint usage is described under the following topics in this
    section:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 外键约束的使用方法在本节的以下主题中描述：
- en: '[Identifiers](create-table-foreign-keys.html#foreign-key-identifiers "Identifiers")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[标识符](create-table-foreign-keys.html#foreign-key-identifiers "标识符")'
- en: '[Conditions and Restrictions](create-table-foreign-keys.html#foreign-key-restrictions
    "Conditions and Restrictions")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[条件和限制](create-table-foreign-keys.html#foreign-key-restrictions "条件和限制")'
- en: '[Referential Actions](create-table-foreign-keys.html#foreign-key-referential-actions
    "Referential Actions")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[参考动作](create-table-foreign-keys.html#foreign-key-referential-actions "参考动作")'
- en: '[Foreign Key Constraint Examples](create-table-foreign-keys.html#foreign-key-examples
    "Foreign Key Constraint Examples")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[外键约束示例](create-table-foreign-keys.html#foreign-key-examples "外键约束示例")'
- en: '[Adding Foreign Key Constraints](create-table-foreign-keys.html#foreign-key-adding
    "Adding Foreign Key Constraints")'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[添加外键约束](create-table-foreign-keys.html#foreign-key-adding "添加外键约束")'
- en: '[Dropping Foreign Key Constraints](create-table-foreign-keys.html#foreign-key-dropping
    "Dropping Foreign Key Constraints")'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[删除外键约束](create-table-foreign-keys.html#foreign-key-dropping "删除外键约束")'
- en: '[Foreign Key Checks](create-table-foreign-keys.html#foreign-key-checks "Foreign
    Key Checks")'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[外键检查](create-table-foreign-keys.html#foreign-key-checks "外键检查")'
- en: '[Locking](create-table-foreign-keys.html#foreign-key-locking "Locking")'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[锁定](create-table-foreign-keys.html#foreign-key-locking "锁定")'
- en: '[Foreign Key Definitions and Metadata](create-table-foreign-keys.html#foreign-key-metadata
    "Foreign Key Definitions and Metadata")'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[外键定义和元数据](create-table-foreign-keys.html#foreign-key-metadata "外键定义和元数据")'
- en: '[Foreign Key Errors](create-table-foreign-keys.html#foreign-key-errors "Foreign
    Key Errors")'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[外键错误](create-table-foreign-keys.html#foreign-key-errors "外键错误")'
- en: Identifiers
  id: totrans-17
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 标识符
- en: 'Foreign key constraint naming is governed by the following rules:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 外键约束命名受以下规则约束：
- en: The `CONSTRAINT` *`symbol`* value is used, if defined.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未定义`CONSTRAINT` *`symbol`*子句，或在`CONSTRAINT`关键字后未包含符号，则会自动生成约束名。
- en: If the `CONSTRAINT` *`symbol`* clause is not defined, or a symbol is not included
    following the `CONSTRAINT` keyword, a constraint name name is generated automatically.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未定义`CONSTRAINT` *`symbol`*子句，或在`CONSTRAINT`关键字后未包含符号，则会自动生成约束名。
- en: Prior to MySQL 8.0.16, if the `CONSTRAINT` *`symbol`* clause was not defined,
    or a symbol was not included following the `CONSTRAINT` keyword, both [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") and [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") storage engines would use the `FOREIGN_KEY *`index_name`*` if
    defined. In MySQL 8.0.16 and higher, the `FOREIGN_KEY *`index_name`*` is ignored.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.16之前，如果未定义`CONSTRAINT` *`symbol`*子句，或在`CONSTRAINT`关键字后未包含符号，则[`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB存储引擎")和[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0")存储引擎将使用`FOREIGN_KEY
    *`index_name`*`（如果已定义）。在MySQL 8.0.16及更高版本中，将忽略`FOREIGN_KEY *`index_name`*`。
- en: 'The `CONSTRAINT *`symbol`*` value, if defined, must be unique in the database.
    A duplicate *`symbol`* results in an error similar to: ERROR 1005 (HY000): Can''t
    create table ''test.fk1'' (errno: 121).'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如果定义了`CONSTRAINT *`symbol`*`值，则必须在数据库中是唯一的。重复的*`symbol`*会导致类似以下错误：ERROR 1005
    (HY000): 无法创建表''test.fk1''（错误号：121）。'
- en: 'NDB Cluster stores foreign names using the same lettercase with which they
    are created. Prior to version 8.0.20, when processing [`SELECT`](select.html "15.2.13 SELECT
    Statement") and other SQL statements, [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") compared the names of foreign keys in such statements with the
    names as stored in a case-sensitive fashion when [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    was equal to 0\. In NDB 8.0.20 and later, this value no longer has any effect
    on how such comparisons are made, and they are always done without regard to lettercase.
    (Bug #30512043)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'NDB 集群使用创建时的相同大小写存储外键名称。在版本 8.0.20 之前，当处理 [`SELECT`](select.html "15.2.13 SELECT
    Statement") 和其他 SQL 语句时，[`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") 将这些语句中的外键名称与存储的名称进行比较，当 [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    等于 0 时，以区分大小写的方式存储。在 NDB 8.0.20 及更高版本中，此值不再影响这些比较是如何进行的，它们总是不考虑大小写地进行。 (Bug #30512043)'
- en: Table and column identifiers in a `FOREIGN KEY ... REFERENCES` clause can be
    quoted within backticks ([PRE1]
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `FOREIGN KEY ... REFERENCES` 子句中的表格和列标识符可以在反引号内引用 ([PRE1]
- en: CREATE TABLE parent (
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表格父 (
- en: id INT NOT NULL,
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: id INT 不为空,
- en: PRIMARY KEY (id)
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 主键 (id)
- en: ) ENGINE=INNODB;
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: ) 引擎=INNODB;
- en: CREATE TABLE child (
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表格子表 (
- en: id INT,
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: id INT,
- en: parent_id INT,
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: parent_id INT,
- en: INDEX par_ind (parent_id),
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引 par_ind (parent_id),
- en: FOREIGN KEY (parent_id)
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 外键 (parent_id)
- en: REFERENCES parent(id)
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: REFERENCES 父(id)
- en: ON DELETE CASCADE
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在删除时级联
- en: ) ENGINE=INNODB;
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: ) 引擎=INNODB;
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: CREATE TABLE product (
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表格产品 (
- en: category INT NOT NULL, id INT NOT NULL,
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: category INT NOT NULL, id INT NOT NULL,
- en: price DECIMAL,
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 价格 DECIMAL,
- en: PRIMARY KEY(category, id)
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 主键(category, id)
- en: )   ENGINE=INNODB;
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: )   引擎=INNODB;
- en: CREATE TABLE customer (
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表格顾客 (
- en: id INT NOT NULL,
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: id INT 不为空,
- en: PRIMARY KEY (id)
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 主键 (id)
- en: )   ENGINE=INNODB;
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: )   引擎=INNODB;
- en: CREATE TABLE product_order (
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表格产品订单 (
- en: no INT NOT NULL AUTO_INCREMENT,
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: no INT 不为空 自动增量,
- en: product_category INT NOT NULL,
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 产品类别 INT 不为空,
- en: product_id INT NOT NULL,
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: product_id INT NOT NULL,
- en: customer_id INT NOT NULL,
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 顾客id INT 不为空,
- en: PRIMARY KEY(no),
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 主键(no),
- en: INDEX (product_category, product_id),
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引 (产品类别, 产品id),
- en: INDEX (customer_id),
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引 (顾客id),
- en: FOREIGN KEY (product_category, product_id)
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 外键 (产品类别, 产品id)
- en: REFERENCES product(category, id)
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: REFERENCES 产品(类别, id)
- en: ON UPDATE CASCADE ON DELETE RESTRICT,
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在更新时级联在删除时限制,
- en: FOREIGN KEY (customer_id)
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 外键 (customer_id)
- en: REFERENCES customer(id)
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: REFERENCES 顾客(id)
- en: )   ENGINE=INNODB;
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: )   引擎=INNODB;
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: ALTER TABLE *tbl_name*
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: ALTER TABLE *tbl_name*
- en: ADD [CONSTRAINT [*symbol*]] FOREIGN KEY
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加 [约束 [*symbol*]] 外键
- en: '[*index_name*] (*col_name*, ...)'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[*index_name*] (*col_name*, ...)'
- en: REFERENCES *tbl_name* (*col_name*,...)
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: REFERENCES *tbl_name* (*col_name*,...)
- en: '[ON DELETE *reference_option*]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[ON DELETE *reference_option*]'
- en: '[ON UPDATE *reference_option*]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[在更新 *reference_option*]'
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: ALTER TABLE *tbl_name* DROP FOREIGN KEY *fk_symbol*;
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ALTER TABLE *tbl_name* DROP FOREIGN KEY *fk_symbol*;
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: mysql> SHOW CREATE TABLE child\G
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: mysql> SHOW CREATE TABLE child\G
- en: '*************************** 1\. row ***************************'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*************************** 1\. 行 ***************************'
- en: 'Table: child'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表格：子表
- en: 'Create Table: CREATE TABLE `child` ('
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表格：CREATE TABLE `child` (
- en: '`id` int DEFAULT NULL,'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`id` int DEFAULT NULL,'
- en: '`parent_id` int DEFAULT NULL,'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`parent_id` int DEFAULT NULL,'
- en: KEY `par_ind` (`parent_id`),
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 键 `par_ind` (`parent_id`),
- en: CONSTRAINT `child_ibfk_1` FOREIGN KEY (`parent_id`)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: CONSTRAINT `child_ibfk_1` FOREIGN KEY (`parent_id`)
- en: REFERENCES `parent` (`id`) ON DELETE CASCADE
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: REFERENCES `parent` (`id`) ON DELETE CASCADE
- en: ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: ) 引擎=InnoDB 默认字符集=utf8mb4 校对=utf8mb4_0900_ai_ci
- en: mysql> ALTER TABLE child DROP FOREIGN KEY `child_ibfk_1`;
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: mysql> ALTER TABLE child DROP FOREIGN KEY `child_ibfk_1`;
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: mysql> SHOW CREATE TABLE child\G
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: mysql> SHOW CREATE TABLE child\G
- en: '*************************** 1\. row ***************************'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '*************************** 1\. 行 ***************************'
- en: 'Table: child'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表格：子表
- en: 'Create Table: CREATE TABLE `child` ('
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表格：CREATE TABLE `child` (
- en: '`id` int DEFAULT NULL,'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`id` int DEFAULT NULL,'
- en: '`parent_id` int DEFAULT NULL,'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`parent_id` int DEFAULT NULL,'
- en: KEY `par_ind` (`parent_id`),
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 键 `par_ind` (`parent_id`),
- en: CONSTRAINT `child_ibfk_1` FOREIGN KEY (`parent_id`)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: CONSTRAINT `child_ibfk_1` FOREIGN KEY (`parent_id`)
- en: REFERENCES `parent` (`id`) ON DELETE CASCADE
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: REFERENCES `parent` (`id`) ON DELETE CASCADE
- en: ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: ) 引擎=InnoDB 默认字符集=utf8mb4 校对=utf8mb4_0900_ai_ci
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: mysql> SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, CONSTRAINT_NAME
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: mysql> 选择 表格模式, 表格名称, 列名, 约束名称
- en: FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 来自 INFORMATION_SCHEMA.KEY_COLUMN_USAGE
- en: WHERE REFERENCED_TABLE_SCHEMA IS NOT NULL;
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当引用表格模式不为空时;
- en: +--------------+------------+-------------+-----------------+
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: +--------------+------------+-------------+-----------------+
- en: '| TABLE_SCHEMA | TABLE_NAME | COLUMN_NAME | CONSTRAINT_NAME |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 表格模式 | 表格名称 | 列名 | 约束名称 |'
- en: +--------------+------------+-------------+-----------------+
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: +--------------+------------+-------------+-----------------+
- en: '| test         | child      | parent_id   | child_ibfk_1    |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| test         | child      | parent_id   | child_ibfk_1    |'
- en: +--------------+------------+-------------+-----------------+
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: +--------------+------------+-------------+-----------------+
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: mysql> SELECT * FROM INFORMATION_SCHEMA.INNODB_FOREIGN \G
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: mysql> 从 INFORMATION_SCHEMA.INNODB_FOREIGN 表中选择 * \G
- en: '*************************** 1\. row ***************************'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '*************************** 1\. 行 ***************************'
- en: 'ID: test/child_ibfk_1'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ID: test/child_ibfk_1'
- en: 'FOR_NAME: test/child'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 'FOR_NAME: test/child'
- en: 'REF_NAME: test/parent'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 'REF_NAME: test/parent'
- en: 'N_COLS: 1'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 'N_COLS: 1'
- en: 'TYPE: 1'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '类型: 1'
- en: mysql> SELECT * FROM INFORMATION_SCHEMA.INNODB_FOREIGN_COLS \G
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: mysql> 从 INFORMATION_SCHEMA.INNODB_FOREIGN_COLS 表中选择 * \G
- en: '*************************** 1\. row ***************************'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '*************************** 1\. 行 ***************************'
- en: 'ID: test/child_ibfk_1'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'ID: test/child_ibfk_1'
- en: 'FOR_COL_NAME: parent_id'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 'FOR_COL_NAME: parent_id'
- en: 'REF_COL_NAME: id'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 'REF_COL_NAME: id'
- en: 'POS: 0'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '位置: 0'
- en: '[PRE9]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: mysql> SHOW ENGINE INNODB STATUS\G
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: mysql> 显示引擎 INNODB 状态\G
- en: '...'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '------------------------'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '------------------------'
- en: LATEST FOREIGN KEY ERROR
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 最新的外键错误
- en: '------------------------'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '------------------------'
- en: '2018-04-12 14:57:24 0x7f97a9c91700 Transaction:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '2018-04-12 14:57:24 0x7f97a9c91700 事务:'
- en: TRANSACTION 7717, ACTIVE 0 sec inserting
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 事务 7717，活跃 0 秒插入
- en: mysql tables in use 1, locked 1
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用中的 mysql 表 1，已锁定 1
- en: 4 lock struct(s), heap size 1136, 3 row lock(s), undo log entries 3
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 4 个锁结构，堆大小 1136，3 个行锁，撤销日志条目 3
- en: MySQL thread id 8, OS thread handle 140289365317376, query id 14 localhost root
    update
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 线程 id 8，OS 线程句柄 140289365317376，查询 id 14 localhost root 更新
- en: INSERT INTO child VALUES (NULL, 1), (NULL, 2), (NULL, 3), (NULL, 4), (NULL,
    5), (NULL, 6)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 插入到 child 表中的值 (NULL, 1), (NULL, 2), (NULL, 3), (NULL, 4), (NULL, 5), (NULL,
    6)
- en: 'Foreign key constraint fails for table `test`.`child`:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 对于表 `test`.`child` 的外键约束失败：
- en: ','
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: ','
- en: CONSTRAINT `child_ibfk_1` FOREIGN KEY (`parent_id`) REFERENCES `parent` (`id`)
    ON DELETE
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 约束 `child_ibfk_1` 外键 (`parent_id`) 引用 `parent` 表 (`id`) 在删除时
- en: CASCADE ON UPDATE CASCADE
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 级联更新级联
- en: 'Trying to add in child table, in index par_ind tuple:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试在子表中添加，索引 par_ind 元组：
- en: 'DATA TUPLE: 2 fields;'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '数据元组: 2 个字段;'
- en: '0: len 4; hex 80000003; asc     ;;'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '0: 长度 4; 十六进制 80000003; ASCII     ;;'
- en: '1: len 4; hex 80000003; asc     ;;'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '1: 长度 4; 十六进制 80000003; ASCII     ;;'
- en: But in parent table `test`.`parent`, in index PRIMARY,
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 但在父表 `test`.`parent` 中，在主键 PRIMARY 中，
- en: 'the closest match we can find is record:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能找到的最接近的匹配是记录：
- en: 'PHYSICAL RECORD: n_fields 3; compact format; info bits 0'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '物理记录: 字段数 3; 紧凑格式; 信息位 0'
- en: '0: len 4; hex 80000004; asc     ;;'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '0: 长度 4; 十六进制 80000004; ASCII     ;;'
- en: '1: len 6; hex 000000001e19; asc       ;;'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '1: 长度 6; 十六进制 000000001e19; ASCII       ;;'
- en: '2: len 7; hex 81000001110137; asc       7;;'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '2: 长度 7; 十六进制 81000001110137; ASCII       7;;'
- en: '...'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '```'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: Warning
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: If a user has table-level privileges for all parent tables, [`ER_NO_REFERENCED_ROW_2`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_no_referenced_row_2)
    and [`ER_ROW_IS_REFERENCED_2`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_row_is_referenced_2)
    error messages for foreign key operations expose information about parent tables.
    If a user does not have table-level privileges for all parent tables, more generic
    error messages are displayed instead ([`ER_NO_REFERENCED_ROW`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_no_referenced_row)
    and [`ER_ROW_IS_REFERENCED`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_row_is_referenced)).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户对所有父表具有表级别权限，则外键操作的 [`ER_NO_REFERENCED_ROW_2`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_no_referenced_row_2)
    和 [`ER_ROW_IS_REFERENCED_2`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_row_is_referenced_2)
    错误消息会暴露有关父表的信息。如果用户对所有父表没有表级别权限，则显示更通用的错误消息 ([`ER_NO_REFERENCED_ROW`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_no_referenced_row)
    和 [`ER_ROW_IS_REFERENCED`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_row_is_referenced))。
- en: An exception is that, for stored programs defined to execute with `DEFINER`
    privileges, the user against which privileges are assessed is the user in the
    program `DEFINER` clause, not the invoking user. If that user has table-level
    parent table privileges, parent table information is still displayed. In this
    case, it is the responsibility of the stored program creator to hide the information
    by including appropriate condition handlers.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例外是，对于定义为使用 `DEFINER` 权限执行的存储程序，权限评估的用户是程序中 `DEFINER` 子句中的用户，而不是调用用户。如果该用户具有表级别父表权限，父表信息仍然会显示。在这种情况下，存储程序创建者有责任通过包含适当的条件处理程序来隐藏信息。
