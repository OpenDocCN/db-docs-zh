- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/start-replica.html](https://dev.mysql.com/doc/refman/8.0/en/start-replica.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/start-replica.html](https://dev.mysql.com/doc/refman/8.0/en/start-replica.html)
- en: 15.4.2.6 START REPLICA Statement
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.4.2.6 启动 REPLICA 语句
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`START REPLICA` starts the replication threads, either together or separately.
    From MySQL 8.0.22, use [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    Statement") in place of [`START SLAVE`](start-slave.html "15.4.2.7 START SLAVE
    Statement"), which is deprecated from that release. In releases before MySQL 8.0.22,
    use [`START SLAVE`](start-slave.html "15.4.2.7 START SLAVE Statement").'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`START REPLICA`启动复制线程，可以一起启动或分开启动。从MySQL 8.0.22开始，使用[`START REPLICA`](start-replica.html
    "15.4.2.6 启动 REPLICA 语句")代替从该版本开始弃用的[`START SLAVE`](start-slave.html "15.4.2.7 启动
    SLAVE 语句")。在MySQL 8.0.22之前的版本中，请使用[`START SLAVE`](start-slave.html "15.4.2.7 启动
    SLAVE 语句")。'
- en: '`START REPLICA` requires the [`REPLICATION_SLAVE_ADMIN`](privileges-provided.html#priv_replication-slave-admin)
    privilege (or the deprecated [`SUPER`](privileges-provided.html#priv_super) privilege).
    `START REPLICA` causes an implicit commit of an ongoing transaction. See [Section 15.3.3,
    “Statements That Cause an Implicit Commit”](implicit-commit.html "15.3.3 Statements
    That Cause an Implicit Commit").'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`START REPLICA`需要[`REPLICATION_SLAVE_ADMIN`](privileges-provided.html#priv_replication-slave-admin)权限（或已弃用的[`SUPER`](privileges-provided.html#priv_super)权限）。`START
    REPLICA`导致正在进行的事务隐式提交。请参阅[第15.3.3节，“导致隐式提交的语句”](implicit-commit.html "15.3.3 导致隐式提交的语句")。'
- en: For the thread type options, you can specify `IO_THREAD`, `SQL_THREAD`, both
    of these, or neither of them. Only the threads that are started are affected by
    the statement.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于线程类型选项，您可以指定`IO_THREAD`，`SQL_THREAD`，这两者，或者都不指定。只有启动的线程受语句影响。
- en: '`START REPLICA` with no thread type options starts all of the replication threads,
    and so does `START REPLICA` with both of the thread type options.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有线程类型选项的`START REPLICA`启动所有复制线程，同时具有线程类型选项的`START REPLICA`也是如此。
- en: '`IO_THREAD` starts the replication receiver thread, which reads events from
    the source server and stores them in the relay log.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IO_THREAD`启动复制接收器线程，从源服务器读取事件并将其存储在中继日志中。'
- en: '`SQL_THREAD` starts the replication applier thread, which reads events from
    the relay log and executes them. A multithreaded replica (with [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    > 0) applies transactions using a coordinator thread and multiple applier threads,
    and `SQL_THREAD` starts all of these.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SQL_THREAD`启动复制应用程序线程，从中继日志中读取事件并执行它们。多线程复制（使用[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)>0）使用协调器线程和多个应用程序线程应用事务，而`SQL_THREAD`启动所有这些线程。'
- en: Important
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: '`START REPLICA` sends an acknowledgment to the user after all the replication
    threads have started. However, the replication receiver thread might not yet have
    connected to the source successfully, or an applier thread might stop when applying
    an event right after starting. `START REPLICA` does not continue to monitor the
    threads after they are started, so it does not warn you if they subsequently stop
    or cannot connect. You must check the replica''s error log for error messages
    generated by the replication threads, or check that they are running satisfactorily
    with [`SHOW REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW REPLICA
    STATUS Statement"). A successful `START REPLICA` statement causes [`SHOW REPLICA
    STATUS`](show-replica-status.html "15.7.7.35 SHOW REPLICA STATUS Statement") to
    show `Replica_SQL_Running=Yes`, but it might or might not show `Replica_IO_Running=Yes`,
    because `Replica_IO_Running=Yes` is only shown if the receiver thread is both
    running and connected. For more information, see [Section 19.1.7.1, “Checking
    Replication Status”](replication-administration-status.html "19.1.7.1 Checking
    Replication Status").'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`START REPLICA`在所有复制线程启动后向用户发送确认。然而，复制接收线程可能尚未成功连接到源，或者应用程序线程可能在启动后立即停止应用事件。`START
    REPLICA`在启动线程后不会继续监视线程，因此如果线程随后停止或无法连接，则不会警告您。您必须检查复制的错误日志以查看复制线程生成的错误消息，或者使用[`SHOW
    REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW REPLICA STATUS Statement")检查它们是否正常运行。成功的`START
    REPLICA`语句会导致[`SHOW REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW
    REPLICA STATUS Statement")显示`Replica_SQL_Running=Yes`，但可能会或可能不会显示`Replica_IO_Running=Yes`，因为只有在接收线程同时运行和连接时才会显示`Replica_IO_Running=Yes`。有关更多信息，请参见[第19.1.7.1节，“检查复制状态”](replication-administration-status.html
    "19.1.7.1 Checking Replication Status")。'
- en: The optional `FOR CHANNEL *`channel`*` clause enables you to name which replication
    channel the statement applies to. Providing a `FOR CHANNEL *`channel`*` clause
    applies the `START REPLICA` statement to a specific replication channel. If no
    clause is named and no extra channels exist, the statement applies to the default
    channel. If a `START REPLICA` statement does not have a channel defined when using
    multiple channels, this statement starts the specified threads for all channels.
    See [Section 19.2.2, “Replication Channels”](replication-channels.html "19.2.2 Replication
    Channels") for more information.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的`FOR CHANNEL *`channel`*`子句使您能够命名语句适用于哪个复制通道。提供`FOR CHANNEL *`channel`*`子句将`START
    REPLICA`语句应用于特定的复制通道。如果未命名任何子句且没有额外的通道存在，则该语句适用于默认通道。如果`START REPLICA`语句在使用多个通道时未定义通道，则此语句将为所有通道启动指定的线程。有关更多信息，请参见[第19.2.2节，“复制通道”](replication-channels.html
    "19.2.2 Replication Channels")。
- en: The replication channels for Group Replication (`group_replication_applier`
    and `group_replication_recovery`) are managed automatically by the server instance.
    `START REPLICA` cannot be used at all with the `group_replication_recovery` channel,
    and should only be used with the `group_replication_applier` channel when Group
    Replication is not running. The `group_replication_applier` channel only has an
    applier thread and has no receiver thread, so it can be started if required by
    using the `SQL_THREAD` option without the `IO_THREAD` option.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Group Replication的复制通道（`group_replication_applier`和`group_replication_recovery`）由服务器实例自动管理。`START
    REPLICA`不能与`group_replication_recovery`通道一起使用，只能在Group Replication未运行时才能与`group_replication_applier`通道一起使用。`group_replication_applier`通道只有一个应用程序线程，没有接收线程，因此如果需要，可以使用`SQL_THREAD`选项启动它，而不使用`IO_THREAD`选项。
- en: '`START REPLICA` supports pluggable user-password authentication (see [Section 8.2.17,
    “Pluggable Authentication”](pluggable-authentication.html "8.2.17 Pluggable Authentication"))
    with the `USER`, `PASSWORD`, `DEFAULT_AUTH` and `PLUGIN_DIR` options, as described
    in the following list. When you use these options, you must start the receiver
    thread (`IO_THREAD` option) or all the replication threads; you cannot start the
    replication applier thread (`SQL_THREAD` option) alone.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`START REPLICA`支持可插拔的用户密码身份验证（参见[第8.2.17节，“可插拔身份验证”](pluggable-authentication.html
    "8.2.17 Pluggable Authentication")），使用`USER`、`PASSWORD`、`DEFAULT_AUTH`和`PLUGIN_DIR`选项，如下列表所述。当您使用这些选项时，必须启动接收线程（`IO_THREAD`选项）或所有复制线程；不能仅启动复制应用程序线程（`SQL_THREAD`选项）。'
- en: '`USER`'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`USER`'
- en: The user name for the account. You must set this if `PASSWORD` is used. The
    option cannot be set to an empty or null string.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 用户账户的用户名。如果使用`PASSWORD`，则必须设置此选项。该选项不能设置为空或null字符串。
- en: '`PASSWORD`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`PASSWORD`'
- en: The password for the named user account.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 指定用户账户的密码。
- en: '`DEFAULT_AUTH`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`DEFAULT_AUTH`'
- en: The name of the authentication plugin. The default is MySQL native authentication.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 认证插件的名称。默认为 MySQL 本机认证。
- en: '`PLUGIN_DIR`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`PLUGIN_DIR`'
- en: The location of the authentication plugin.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 认证插件的位置。
- en: Important
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 重要
- en: The password that you set using `START REPLICA` is masked when it is written
    to MySQL Server’s logs, Performance Schema tables, and [`SHOW PROCESSLIST`](show-processlist.html
    "15.7.7.29 SHOW PROCESSLIST Statement") statements. However, it is sent in plain
    text over the connection to the replica server instance. To protect the password
    in transit, use SSL/TLS encryption, an SSH tunnel, or another method of protecting
    the connection from unauthorized viewing, for the connection between the replica
    server instance and the client that you use to issue `START REPLICA`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`START REPLICA`设置的密码在写入 MySQL Server 的日志、性能模式表和[`显示进程列表`](show-processlist.html
    "15.7.7.29 SHOW PROCESSLIST Statement")语句时会被掩码。但是，在传输过程中，它以明文形式发送到副本服务器实例。为了保护传输中的密码，使用
    SSL/TLS 加密、SSH 隧道或其他方法保护连接，以防止未经授权的查看，用于发出`START REPLICA`的客户端与副本服务器实例之间的连接。
- en: The `UNTIL` clause makes the replica start replication, then process transactions
    up to the point that you specify in the `UNTIL` clause, then stop again. The `UNTIL`
    clause can be used to make a replica proceed until just before the point where
    you want to skip a transaction that is unwanted, and then skip the transaction
    as described in [Section 19.1.7.3, “Skipping Transactions”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions"). To identify a transaction, you can use [**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — Utility for Processing Binary Log Files") with the source's
    binary log or the replica's relay log, or use a [`SHOW BINLOG EVENTS`](show-binlog-events.html
    "15.7.7.2 SHOW BINLOG EVENTS Statement") statement.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`UNTIL`子句使副本开始复制，然后处理事务直到您在`UNTIL`子句中指定的点，然后再次停止。`UNTIL`子句可用于使副本继续进行，直到您想要跳过不需要的事务的点之前，然后如[第 19.1.7.3
    节，“跳过事务”](replication-administration-skip.html "19.1.7.3 Skipping Transactions")中所述跳过事务。要识别事务，您可以使用源二进制日志或副本中继日志的[**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — Utility for Processing Binary Log Files")，或使用[`显示二进制日志事件`](show-binlog-events.html
    "15.7.7.2 SHOW BINLOG EVENTS Statement")语句。'
- en: You can also use the `UNTIL` clause for debugging replication by processing
    transactions one at a time or in sections. If you are using the `UNTIL` clause
    to do this, start the replica with the [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)
    option, or from MySQL 8.0.24, the [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)
    system variable, to prevent the SQL thread from running when the replica server
    starts. Remove the option or system variable setting after the procedure is complete,
    so that it is not forgotten in the event of an unexpected server restart.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`UNTIL`子句来通过逐个处理事务或分段处理事务来调试复制。如果您使用`UNTIL`子句来执行此操作，请使用[`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)选项启动副本，或从
    MySQL 8.0.24 开始，使用[`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)系统变量，以防止副本服务器启动时运行
    SQL 线程。在过程完成后，删除选项或系统变量设置，以防止在意外服务器重新启动时被遗忘。
- en: The [`SHOW REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW REPLICA
    STATUS Statement") statement includes output fields that display the current values
    of the `UNTIL` condition. The `UNTIL` condition lasts for as long as the affected
    threads are still running, and is removed when they stop.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`显示副本状态`](show-replica-status.html "15.7.7.35 SHOW REPLICA STATUS Statement")语句包括显示`UNTIL`条件当前值的输出字段。`UNTIL`条件持续时间取决于受影响线程是否仍在运行，并在它们停止时被移除。'
- en: The `UNTIL` clause operates on the replication applier thread (`SQL_THREAD`
    option). You can use the `SQL_THREAD` option or let the replica default to starting
    both threads. If you use the `IO_THREAD` option alone, the `UNTIL` clause is ignored
    because the applier thread is not started.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`UNTIL`子句作用于复制应用程序线程（`SQL_THREAD`选项）。您可以使用`SQL_THREAD`选项或让副本默认启动两个线程。如果仅使用`IO_THREAD`选项，则`UNTIL`子句将被忽略，因为未启动应用程序线程。'
- en: 'The point that you specify in the `UNTIL` clause can be any one (and only one)
    of the following options:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您在`UNTIL`子句中指定的点可以是以下选项中的任何一个（且仅一个）：
- en: '`SOURCE_LOG_FILE` and `SOURCE_LOG_POS` (from MySQL 8.0.23), or `MASTER_LOG_FILE`
    and `MASTER_LOG_POS` (to MySQL 8.0.22)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`SOURCE_LOG_FILE` 和 `SOURCE_LOG_POS`（来自 MySQL 8.0.23），或 `MASTER_LOG_FILE` 和
    `MASTER_LOG_POS`（到 MySQL 8.0.22）'
- en: These options make the replication applier process transactions up to a position
    in its relay log, identified by the file name and file position of the corresponding
    point in the binary log on the source server. The applier thread finds the nearest
    transaction boundary at or after the specified position, finishes applying the
    transaction, and stops there. For compressed transaction payloads, specify the
    end position of the compressed `Transaction_payload_event`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项使得复制应用程序处理事务直到其中继日志中的位置，该位置由源服务器上二进制日志中相应点的文件名和文件位置标识。应用程序线程在指定位置之后或之后找到最近的事务边界，完成应用事务，并在那里停止。对于压缩的事务有效载荷，请指定压缩的`Transaction_payload_event`的结束位置。
- en: These options can still be used when the `GTID_ONLY` option was set on the [`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement") statement to stop the replication channel from persisting
    file names and file positions in the replication metadata repositories. The file
    names and file positions are tracked in memory.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当在[`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE
    REPLICATION SOURCE TO Statement")语句上设置了`GTID_ONLY`选项以阻止复制通道在复制元数据存储库中持久化文件名和文件位置时，仍然可以使用这些选项。文件名和文件位置在内存中被跟踪。
- en: '`RELAY_LOG_FILE` and `RELAY_LOG_POS`'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`RELAY_LOG_FILE` 和 `RELAY_LOG_POS`'
- en: These options make the replication applier process transactions up to a position
    in the replica’s relay log, identified by the relay log file name and a position
    in that file. The applier thread finds the nearest transaction boundary at or
    after the specified position, finishes applying the transaction, and stops there.
    For compressed transaction payloads, specify the end position of the compressed
    `Transaction_payload_event`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项使得复制应用程序处理事务直到副本的中继日志中的位置，该位置由中继日志文件名和该文件中的位置标识。应用程序线程在指定位置之后或之后找到最近的事务边界，完成应用事务，并在那里停止。对于压缩的事务有效载荷，请指定压缩的`Transaction_payload_event`的结束位置。
- en: These options can still be used when the `GTID_ONLY` option was set on the [`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement") statement to stop the replication channel from persisting
    file names and file positions in the replication metadata repositories. The file
    names and file positions are tracked in memory.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当在[`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE
    REPLICATION SOURCE TO Statement")语句上设置了`GTID_ONLY`选项以阻止复制通道在复制元数据存储库中持久化文件名和文件位置时，仍然可以使用这些选项。文件名和文件位置在内存中被跟踪。
- en: '`SQL_BEFORE_GTIDS`'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`SQL_BEFORE_GTIDS`'
- en: This option makes the replication applier start processing transactions and
    stop when it encounters any transaction that is in the specified GTID set. The
    encountered transaction from the GTID set is not applied, and nor are any of the
    other transactions in the GTID set. The option takes a GTID set containing one
    or more global transaction identifiers as an argument (see [GTID Sets](replication-gtids-concepts.html#replication-gtids-concepts-gtid-sets
    "GTID Sets")). Transactions in a GTID set do not necessarily appear in the replication
    stream in the order of their GTIDs, so the transaction before which the applier
    stops is not necessarily the earliest.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项使得复制应用程序开始处理事务，并在遇到任何位于指定GTID集中的事务时停止。来自GTID集的遇到的事务不会被应用，也不会应用GTID集中的任何其他事务。该选项接受包含一个或多个全局事务标识符的GTID集作为参数（参见[GTID
    Sets](replication-gtids-concepts.html#replication-gtids-concepts-gtid-sets "GTID
    Sets")）。GTID集中的事务不一定按照其GTID的顺序出现在复制流中，因此应用程序停止之前的事务不一定是最早的。
- en: '`SQL_AFTER_GTIDS`'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`SQL_AFTER_GTIDS`'
- en: This option makes the replication applier start processing transactions and
    stop when it has processed all of the transactions in a specified GTID set. The
    option takes a GTID set containing one or more global transaction identifiers
    as an argument (see [GTID Sets](replication-gtids-concepts.html#replication-gtids-concepts-gtid-sets
    "GTID Sets")).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项使得复制应用程序开始处理事务，并在处理完指定GTID集中的所有事务时停止。该选项接受包含一个或多个全局事务标识符的GTID集作为参数（参见[GTID
    Sets](replication-gtids-concepts.html#replication-gtids-concepts-gtid-sets "GTID
    Sets")）。
- en: With `SQL_AFTER_GTIDS`, the replication threads stop after they have processed
    all transactions in the GTID set. Transactions are processed in the order received,
    so it is possible that these include transactions which are not part of the GTID
    set, but which are received (and processed) before all transactions in the set
    have been committed. For example, executing `START REPLICA UNTIL SQL_AFTER_GTIDS
    = 3E11FA47-71CA-11E1-9E33-C80AA9429562:11-56` causes the replica to obtain (and
    process) all transactions from the source until all of the transactions having
    the sequence numbers 11 through 56 have been processed, and then to stop without
    processing any additional transactions after that point has been reached.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `SQL_AFTER_GTIDS` 后，复制线程在处理完 GTID 集中的所有事务后停止。事务按接收顺序处理，因此可能包括不属于 GTID 集的事务，但在集合中的所有事务提交之前接收（并处理）。例如，执行
    `START REPLICA UNTIL SQL_AFTER_GTIDS = 3E11FA47-71CA-11E1-9E33-C80AA9429562:11-56`
    会导致复制获取（并处理）源中的所有事务，直到处理完序列号为 11 到 56 的所有事务，然后在达到该点后停止，不再处理任何额外的事务。
- en: '`SQL_AFTER_GTIDS` is not compatible with the multi-threaded applier. If this
    option is used with the multi-threaded applier, a warning is raised, and the replica
    switches to single-threaded mode. Depending on the use case, it may be possible
    to to use `START REPLICA UNTIL MASTER_LOG_POS` or `START REPLICA UNTIL SQL_BEFORE_GTIDS`.
    You can also use [`WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS()`](gtid-functions.html#function_wait-until-sql-thread-after-gtids),
    which waits until the correct position is reached, but does not stop the applier
    thread.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`SQL_AFTER_GTIDS` 与多线程应用程序不兼容。如果在多线程应用程序中使用此选项，将会引发警告，并且复制将切换到单线程模式。根据用例，可能可以使用
    `START REPLICA UNTIL MASTER_LOG_POS` 或 `START REPLICA UNTIL SQL_BEFORE_GTIDS`。您还可以使用
    [`WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS()`](gtid-functions.html#function_wait-until-sql-thread-after-gtids)，它会等待到达正确位置，但不会停止应用程序线程。'
- en: '`SQL_AFTER_MTS_GAPS`'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`SQL_AFTER_MTS_GAPS`'
- en: 'For a multithreaded replica only (with [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    > 0), this option makes the replica process transactions up to the point where
    there are no more gaps in the sequence of transactions executed from the relay
    log. When using a multithreaded replica, there is a chance of gaps occurring in
    the following situations:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于仅多线程复制（具有[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    > 0）的情况，此选项使复制进程处理事务，直到从中继日志执行的事务序列中不再存在间隙为止。在使用多线程复制时，以下情况可能会导致间隙出现：
- en: The coordinator thread is stopped.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协调器线程停止。
- en: An error occurs in the applier threads.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序线程发生错误。
- en: '[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") shuts down unexpectedly.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") 意外关闭。'
- en: When a replication channel has gaps, the replica’s database is in a state that
    might never have existed on the source. The replica tracks the gaps internally
    and disallows [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") statements that would remove
    the gap information if they executed.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当复制通道存在间隙时，复制的数据库处于可能从未存在于源上的状态。复制在内部跟踪间隙并禁止执行会删除间隙信息的 [`CHANGE REPLICATION
    SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION SOURCE
    TO Statement") 语句。
- en: Before MySQL 8.0.26, issuing `START REPLICA` on a multithreaded replica with
    gaps in the sequence of transactions executed from the relay log generates a warning.
    To correct this situation, the solution is to use `START REPLICA UNTIL SQL_AFTER_MTS_GAPS`.
    See [Section 19.5.1.34, “Replication and Transaction Inconsistencies”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 Replication and Transaction Inconsistencies") for more information.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.26 之前，在具有从中继日志执行的事务序列中存在间隙的多线程复制上发出 `START REPLICA` 会生成警告。要纠正这种情况，解决方案是使用
    `START REPLICA UNTIL SQL_AFTER_MTS_GAPS`。有关更多信息，请参见 [Section 19.5.1.34, “Replication
    and Transaction Inconsistencies”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 Replication and Transaction Inconsistencies")。
- en: From MySQL 8.0.26, the process of checking for gaps in the sequence of transactions
    is skipped entirely when GTID-based replication and GTID auto-positioning (`SOURCE_AUTO_POSITION=1`)
    are in use for the channel, because gaps in transactions can be resolved using
    GTID auto-positioning. In that situation, `START REPLICA UNTIL SQL_AFTER_MTS_GAPS`
    just stops the applier thread when it finds the first transaction to execute,
    and does not attempt to check for gaps in the sequence of transactions. You can
    also continue to use [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") statements as normal, and relay
    log recovery is possible for the channel.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，当使用基于GTID的复制和GTID自动定位（`SOURCE_AUTO_POSITION=1`）用于通道时，完全跳过检查事务序列中的间隙的过程，因为可以使用GTID自动定位来解决事务中的间隙。在这种情况下，`START
    REPLICA UNTIL SQL_AFTER_MTS_GAPS`只是在找到要执行的第一个事务时停止应用程序线程，并且不尝试检查事务序列中的间隙。您也可以像往常一样继续使用[`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement")语句，并且通道可以进行中继日志恢复。
- en: From MySQL 8.0.27, all replicas are multithreaded by default. When [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    or [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is set for the replica, which is also the default setting from MySQL 8.0.27, gaps
    should not occur except in the specific situations listed in the description for
    [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    and [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order).
    If [`replica_preserve_commit_order=OFF`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    or [`slave_preserve_commit_order=OFF`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is set for the replica, which is the default before MySQL 8.0.27, the commit order
    of transactions is not preserved, so the chance of gaps occurring is much larger.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.27开始，默认情况下所有副本都是多线程的。当[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)或[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)为副本设置时，这也是从MySQL
    8.0.27开始的默认设置，除了在[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)和[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)的描述中列出的特定情况外，不应该出现间隙。如果为副本设置了[`replica_preserve_commit_order=OFF`](replication-options-replica.html#sysvar_replica_preserve_commit_order)或[`slave_preserve_commit_order=OFF`](replication-options-replica.html#sysvar_slave_preserve_commit_order)，这是在MySQL
    8.0.27之前的默认设置，事务的提交顺序不会被保留，因此出现间隙的可能性要大得多。
- en: 'If GTIDs are not in use and you need to change a failed multithreaded replica
    to single-threaded mode, you can issue the following series of statements, in
    the order shown:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有使用GTIDs，并且您需要将失败的多线程副本更改为单线程模式，您可以按照以下顺序发出以下一系列语句：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
