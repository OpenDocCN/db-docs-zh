- en: 2.10.3 Problems Using the Perl DBI/DBD Interface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.10.3 使用 Perl DBI/DBD 接口时的问题
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/perl-support-problems.html](https://dev.mysql.com/doc/refman/8.0/en/perl-support-problems.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/perl-support-problems.html](https://dev.mysql.com/doc/refman/8.0/en/perl-support-problems.html)
- en: 'If Perl reports that it cannot find the `../mysql/mysql.so` module, the problem
    is probably that Perl cannot locate the `libmysqlclient.so` shared library. You
    should be able to fix this problem by one of the following methods:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Perl 报告找不到`../mysql/mysql.so`模块，则问题可能是 Perl 找不到`libmysqlclient.so`共享库的位置。您可以通过以下方法之一解决此问题：
- en: Copy `libmysqlclient.so` to the directory where your other shared libraries
    are located (probably `/usr/lib` or `/lib`).
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`libmysqlclient.so`复制到其他共享库所在的目录（可能是`/usr/lib`或`/lib`）。
- en: Modify the `-L` options used to compile `DBD::mysql` to reflect the actual location
    of `libmysqlclient.so`.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改用于编译`DBD::mysql`的`-L`选项，以反映`libmysqlclient.so`的实际位置。
- en: On Linux, you can add the path name of the directory where `libmysqlclient.so`
    is located to the `/etc/ld.so.conf` file.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Linux 上，您可以将包含`libmysqlclient.so`的目录路径添加到`/etc/ld.so.conf`文件中。
- en: Add the path name of the directory where `libmysqlclient.so` is located to the
    `LD_RUN_PATH` environment variable. Some systems use `LD_LIBRARY_PATH` instead.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将包含`libmysqlclient.so`的目录路径添加到`LD_RUN_PATH`环境变量中。一些系统使用`LD_LIBRARY_PATH`代替。
- en: Note that you may also need to modify the `-L` options if there are other libraries
    that the linker fails to find. For example, if the linker cannot find `libc` because
    it is in `/lib` and the link command specifies `-L/usr/lib`, change the `-L` option
    to `-L/lib` or add `-L/lib` to the existing link command.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果链接器无法找到其他库，则可能还需要修改`-L`选项。例如，如果链接器无法找到`libc`，因为它在`/lib`中，而链接命令指定为`-L/usr/lib`，请将`-L`选项更改为`-L/lib`或将`-L/lib`添加到现有链接命令中。
- en: 'If you get the following errors from `DBD::mysql`, you are probably using **gcc**
    (or using an old binary compiled with **gcc**):'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果从`DBD::mysql`获得以下错误，则您可能正在使用**gcc**（或使用用**gcc**编译的旧二进制文件）：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Add `-L/usr/lib/gcc-lib/... -lgcc` to the link command when the `mysql.so` library
    gets built (check the output from **make** for `mysql.so` when you compile the
    Perl client). The `-L` option should specify the path name of the directory where
    `libgcc.a` is located on your system.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建`mysql.so`库时（编译 Perl 客户端时，请检查**make**的输出以查看`mysql.so`），在链接命令中添加`-L/usr/lib/gcc-lib/...
    -lgcc`。`-L`选项应指定系统上包含`libgcc.a`的目录路径。
- en: Another cause of this problem may be that Perl and MySQL are not both compiled
    with **gcc**. In this case, you can solve the mismatch by compiling both with
    **gcc**.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此问题的另一个原因可能是 Perl 和 MySQL 都未使用**gcc**编译。在这种情况下，您可以通过使用**gcc**编译两者来解决不匹配问题。
