- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-metadata-locks-table.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-metadata-locks-table.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-metadata-locks-table.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-metadata-locks-table.html)
- en: 29.12.13.3 The metadata_locks Table
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 29.12.13.3 元数据锁表
- en: MySQL uses metadata locking to manage concurrent access to database objects
    and to ensure data consistency; see [Section 10.11.4, “Metadata Locking”](metadata-locking.html
    "10.11.4 Metadata Locking"). Metadata locking applies not just to tables, but
    also to schemas, stored programs (procedures, functions, triggers, scheduled events),
    tablespaces, user locks acquired with the [`GET_LOCK()`](locking-functions.html#function_get-lock)
    function (see [Section 14.14, “Locking Functions”](locking-functions.html "14.14 Locking
    Functions")), and locks acquired with the locking service described in [Section 7.6.9.1,
    “The Locking Service”](locking-service.html "7.6.9.1 The Locking Service").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL使用元数据锁定来管理对数据库对象的并发访问，并确保数据一致性；参见[第10.11.4节，“元数据锁定”](metadata-locking.html
    "10.11.4 元数据锁定")。元数据锁定不仅适用于表，还适用于模式、存储程序（过程、函数、触发器、计划事件）、表空间、使用[`GET_LOCK()`](locking-functions.html#function_get-lock)函数获取的用户锁（参见[第14.14节，“锁定函数”](locking-functions.html
    "14.14 锁定函数")）以及使用[第7.6.9.1节，“锁定服务”](locking-service.html "7.6.9.1 锁定服务")中描述的锁定服务获取的锁。
- en: 'The Performance Schema exposes metadata lock information through the [`metadata_locks`](performance-schema-metadata-locks-table.html
    "29.12.13.3 The metadata_locks Table") table:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式通过[`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 元数据锁表")表公开元数据锁信息：
- en: Locks that have been granted (shows which sessions own which current metadata
    locks).
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已被授予的锁（显示哪些会话拥有哪些当前元数据锁）。
- en: Locks that have been requested but not yet granted (shows which sessions are
    waiting for which metadata locks).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已请求但尚未授予的锁（显示哪些会话正在等待哪些元数据锁）。
- en: Lock requests that have been killed by the deadlock detector.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已被死锁检测器杀死的锁请求。
- en: Lock requests that have timed out and are waiting for the requesting session's
    lock request to be discarded.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已超时并正在等待请求会话的锁请求被丢弃的锁请求。
- en: This information enables you to understand metadata lock dependencies between
    sessions. You can see not only which lock a session is waiting for, but which
    session currently holds that lock.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 此信息使您能够了解会话之间的元数据锁依赖关系。您不仅可以看到会话正在等待哪个锁，还可以看到哪个会话当前持有该锁。
- en: The [`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 The
    metadata_locks Table") table is read only and cannot be updated. It is autosized
    by default; to configure the table size, set the [`performance_schema_max_metadata_locks`](performance-schema-system-variables.html#sysvar_performance_schema_max_metadata_locks)
    system variable at server startup.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 元数据锁表")表是只读的，不能更新。默认情况下，它是自动调整大小的；要配置表大小，请在服务器启动时设置[`performance_schema_max_metadata_locks`](performance-schema-system-variables.html#sysvar_performance_schema_max_metadata_locks)系统变量。'
- en: Metadata lock instrumentation uses the `wait/lock/metadata/sql/mdl` instrument,
    which is enabled by default.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 元数据锁仪表化使用默认启用的`wait/lock/metadata/sql/mdl`工具。
- en: 'To control metadata lock instrumentation state at server startup, use lines
    like these in your `my.cnf` file:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要在服务器启动时控制元数据锁仪表化状态，请在您的`my.cnf`文件中使用以下行：
- en: 'Enable:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用：
- en: '[PRE0]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Disable:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用：
- en: '[PRE1]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To control metadata lock instrumentation state at runtime, update the [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table") table:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要在运行时控制元数据锁仪表化状态，请更新[`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 setup_instruments表")表：
- en: 'Enable:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用：
- en: '[PRE2]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Disable:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用：
- en: '[PRE3]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The Performance Schema maintains [`metadata_locks`](performance-schema-metadata-locks-table.html
    "29.12.13.3 The metadata_locks Table") table content as follows, using the `LOCK_STATUS`
    column to indicate the status of each lock:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式维护[`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 元数据锁表")表内容如下，使用`LOCK_STATUS`列指示每个锁的状态：
- en: When a metadata lock is requested and obtained immediately, a row with a status
    of `GRANTED` is inserted.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当请求元数据锁并立即获得时，将插入状态为`GRANTED`的行。
- en: When a metadata lock is requested and not obtained immediately, a row with a
    status of `PENDING` is inserted.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当请求元数据锁并且未立即获得时，将插入状态为`PENDING`的行。
- en: When a metadata lock previously requested is granted, its row status is updated
    to `GRANTED`.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当先前请求的元数据锁被授予时，其行状态将更新为`GRANTED`。
- en: When a metadata lock is released, its row is deleted.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当释放元数据锁时，其行将被删除。
- en: When a pending lock request is canceled by the deadlock detector to break a
    deadlock ([`ER_LOCK_DEADLOCK`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_lock_deadlock)),
    its row status is updated from `PENDING` to `VICTIM`.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当挂起的锁请求被死锁检测器取消以打破死锁（[`ER_LOCK_DEADLOCK`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_lock_deadlock)），其行状态从`PENDING`更新为`VICTIM`。
- en: When a pending lock request times out ([`ER_LOCK_WAIT_TIMEOUT`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_lock_wait_timeout)),
    its row status is updated from `PENDING` to `TIMEOUT`.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当挂起的锁请求超时（[`ER_LOCK_WAIT_TIMEOUT`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_lock_wait_timeout)），其行状态从`PENDING`更新为`TIMEOUT`。
- en: When granted lock or pending lock request is killed, its row status is updated
    from `GRANTED` or `PENDING` to `KILLED`.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当授予锁或挂起的锁请求被终止时，其行状态从`GRANTED`或`PENDING`更新为`KILLED`。
- en: The `VICTIM`, `TIMEOUT`, and `KILLED` status values are brief and signify that
    the lock row is about to be deleted.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VICTIM`、`TIMEOUT`和`KILLED`状态值简洁明了，表示锁行即将被删除。'
- en: The `PRE_ACQUIRE_NOTIFY` and `POST_RELEASE_NOTIFY` status values are brief and
    signify that the metadata locking subsubsystem is notifying interested storage
    engines while entering lock acquisition operations or leaving lock release operations.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PRE_ACQUIRE_NOTIFY`和`POST_RELEASE_NOTIFY`状态值简洁明了，表示元数据锁子系统在进入锁获取操作或离开锁释放操作时通知感兴趣的存储引擎。'
- en: 'The [`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 The
    metadata_locks Table") table has these columns:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 The
    metadata_locks Table")表具有以下列：'
- en: '`OBJECT_TYPE`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECT_TYPE`'
- en: The type of lock used in the metadata lock subsystem. The value is one of `GLOBAL`,
    `SCHEMA`, `TABLE`, `FUNCTION`, `PROCEDURE`, `TRIGGER` (currently unused), `EVENT`,
    `COMMIT`, `USER LEVEL LOCK`, `TABLESPACE`, `BACKUP LOCK`, or `LOCKING SERVICE`.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 元数据锁子系统中使用的锁类型。该值是`GLOBAL`、`SCHEMA`、`TABLE`、`FUNCTION`、`PROCEDURE`、`TRIGGER`（当前未使用）、`EVENT`、`COMMIT`、`USER
    LEVEL LOCK`、`TABLESPACE`、`BACKUP LOCK`或`LOCKING SERVICE`之一。
- en: A value of `USER LEVEL LOCK` indicates a lock acquired with [`GET_LOCK()`](locking-functions.html#function_get-lock).
    A value of `LOCKING SERVICE` indicates a lock acquired with the locking service
    described in [Section 7.6.9.1, “The Locking Service”](locking-service.html "7.6.9.1 The
    Locking Service").
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`USER LEVEL LOCK`的值表示使用[`GET_LOCK()`](locking-functions.html#function_get-lock)获取的锁。`LOCKING
    SERVICE`的值表示使用[第7.6.9.1节，“锁定服务”](locking-service.html "7.6.9.1 The Locking Service")中描述的锁定服务获取的锁。'
- en: '`OBJECT_SCHEMA`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECT_SCHEMA`'
- en: The schema that contains the object.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含对象的模式。
- en: '`OBJECT_NAME`'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECT_NAME`'
- en: The name of the instrumented object.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 工具化对象的名称。
- en: '`OBJECT_INSTANCE_BEGIN`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECT_INSTANCE_BEGIN`'
- en: The address in memory of the instrumented object.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 工具化对象在内存中的地址。
- en: '`LOCK_TYPE`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOCK_TYPE`'
- en: The lock type from the metadata lock subsystem. The value is one of `INTENTION_EXCLUSIVE`,
    `SHARED`, `SHARED_HIGH_PRIO`, `SHARED_READ`, `SHARED_WRITE`, `SHARED_UPGRADABLE`,
    `SHARED_NO_WRITE`, `SHARED_NO_READ_WRITE`, or `EXCLUSIVE`.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 元数据锁子系统的锁类型。该值是`INTENTION_EXCLUSIVE`、`SHARED`、`SHARED_HIGH_PRIO`、`SHARED_READ`、`SHARED_WRITE`、`SHARED_UPGRADABLE`、`SHARED_NO_WRITE`、`SHARED_NO_READ_WRITE`或`EXCLUSIVE`之一。
- en: '`LOCK_DURATION`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOCK_DURATION`'
- en: The lock duration from the metadata lock subsystem. The value is one of `STATEMENT`,
    `TRANSACTION`, or `EXPLICIT`. The `STATEMENT` and `TRANSACTION` values signify
    locks that are released implicitly at statement or transaction end, respectively.
    The `EXPLICIT` value signifies locks that survive statement or transaction end
    and are released by explicit action, such as global locks acquired with [`FLUSH
    TABLES WITH READ LOCK`](flush.html#flush-tables-with-read-lock).
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 元数据锁子系统的锁持续时间。该值是`STATEMENT`、`TRANSACTION`或`EXPLICIT`之一。`STATEMENT`和`TRANSACTION`值表示在语句或事务结束时隐式释放的锁，`EXPLICIT`值表示在语句或事务结束时仍然存在的锁，并通过显式操作释放，例如使用[`FLUSH
    TABLES WITH READ LOCK`](flush.html#flush-tables-with-read-lock)获取的全局锁。
- en: '`LOCK_STATUS`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOCK_STATUS`'
- en: The lock status from the metadata lock subsystem. The value is one of `PENDING`,
    `GRANTED`, `VICTIM`, `TIMEOUT`, `KILLED`, `PRE_ACQUIRE_NOTIFY`, or `POST_RELEASE_NOTIFY`.
    The Performance Schema assigns these values as described previously.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 元数据锁子系统的锁状态。该值是`PENDING`、`GRANTED`、`VICTIM`、`TIMEOUT`、`KILLED`、`PRE_ACQUIRE_NOTIFY`或`POST_RELEASE_NOTIFY`之一。性能模式根据前面描述的情况分配这些值。
- en: '`SOURCE`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOURCE`'
- en: The name of the source file containing the instrumented code that produced the
    event and the line number in the file at which the instrumentation occurs. This
    enables you to check the source to determine exactly what code is involved.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含产生事件的有仪器代码的源文件的名称和仪器发生的文件中的行号。这使您可以检查源代码以确定涉及的确切代码。
- en: '`OWNER_THREAD_ID`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OWNER_THREAD_ID`'
- en: The thread requesting a metadata lock.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请求元数据锁的线程。
- en: '`OWNER_EVENT_ID`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OWNER_EVENT_ID`'
- en: The event requesting a metadata lock.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请求元数据锁的事件。
- en: 'The [`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 The
    metadata_locks Table") table has these indexes:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 The
    metadata_locks Table") 表具有以下索引:'
- en: Primary key on (`OBJECT_INSTANCE_BEGIN`)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 (`OBJECT_INSTANCE_BEGIN`) 上的主键
- en: Index on (`OBJECT_TYPE`, `OBJECT_SCHEMA`, `OBJECT_NAME`)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 (`OBJECT_TYPE`, `OBJECT_SCHEMA`, `OBJECT_NAME`) 上的索引
- en: Index on (`OWNER_THREAD_ID`, `OWNER_EVENT_ID`)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 (`OWNER_THREAD_ID`, `OWNER_EVENT_ID`) 上的索引
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    is not permitted for the [`metadata_locks`](performance-schema-metadata-locks-table.html
    "29.12.13.3 The metadata_locks Table") table.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    不允许用于 [`metadata_locks`](performance-schema-metadata-locks-table.html "29.12.13.3 The
    metadata_locks Table") 表。'
