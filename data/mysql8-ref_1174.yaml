- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-undo-tablespaces.html)
- en: 17.6.3.4 Undo Tablespaces
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 17.6.3.4 撤销表空间
- en: Undo tablespaces contain undo logs, which are collections of records containing
    information about how to undo the latest change by a transaction to a clustered
    index record.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 撤销表空间包含撤销日志，这些日志是包含有关如何撤消事务对聚簇索引记录的最新更改的信息的记录集。
- en: 'Undo tablespaces are described under the following topics in this section:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中以下主题中描述了撤销表空间：
- en: '[Default Undo Tablespaces](innodb-undo-tablespaces.html#innodb-default-undo-tablespaces
    "Default Undo Tablespaces")'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[默认撤销表空间](innodb-undo-tablespaces.html#innodb-default-undo-tablespaces "默认撤销表空间")'
- en: '[Undo Tablespace Size](innodb-undo-tablespaces.html#innodb--undo-tablespace-size
    "Undo Tablespace Size")'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[撤销表空间大小](innodb-undo-tablespaces.html#innodb--undo-tablespace-size "撤销表空间大小")'
- en: '[Adding Undo Tablespaces](innodb-undo-tablespaces.html#innodb-add-undo-tablespaces
    "Adding Undo Tablespaces")'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[添加撤销表空间](innodb-undo-tablespaces.html#innodb-add-undo-tablespaces "添加撤销表空间")'
- en: '[Dropping Undo Tablespaces](innodb-undo-tablespaces.html#innodb-drop-undo-tablespaces
    "Dropping Undo Tablespaces")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[删除撤销表空间](innodb-undo-tablespaces.html#innodb-drop-undo-tablespaces "删除撤销表空间")'
- en: '[Moving Undo Tablespaces](innodb-undo-tablespaces.html#innodb-move-undo-tablespaces
    "Moving Undo Tablespaces")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[移动撤销表空间](innodb-undo-tablespaces.html#innodb-move-undo-tablespaces "移动撤销表空间")'
- en: '[Configuring the Number of Rollback Segments](innodb-undo-tablespaces.html#innodb-undo-tablespace-rollback-segments
    "Configuring the Number of Rollback Segments")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[配置回滚段的数量](innodb-undo-tablespaces.html#innodb-undo-tablespace-rollback-segments
    "配置回滚段的数量")'
- en: '[Truncating Undo Tablespaces](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "Truncating Undo Tablespaces")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[截断撤销表空间](innodb-undo-tablespaces.html#truncate-undo-tablespace "截断撤销表空间")'
- en: '[Undo Tablespace Status Variables](innodb-undo-tablespaces.html#innodb-undo-tablespace-status-variables
    "Undo Tablespace Status Variables")'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[撤销表空间状态变量](innodb-undo-tablespaces.html#innodb-undo-tablespace-status-variables
    "撤销表空间状态变量")'
- en: Default Undo Tablespaces
  id: totrans-12
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 默认撤销表空间
- en: Two default undo tablespaces are created when the MySQL instance is initialized.
    Default undo tablespaces are created at initialization time to provide a location
    for rollback segments that must exist before SQL statements can be accepted. A
    minimum of two undo tablespaces is required to support automated truncation of
    undo tablespaces. See [Truncating Undo Tablespaces](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "Truncating Undo Tablespaces").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当初始化MySQL实例时会创建两个默认的撤销表空间。默认的撤销表空间在初始化时创建，以提供回滚段的位置，这些回滚段必须在SQL语句被接受之前存在。支持自动截断撤销表空间需要至少两个撤销表空间。请参阅[截断撤销表空间](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "截断撤销表空间")。
- en: Default undo tablespaces are created in the location defined by the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable. If the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable is undefined, default undo tablespaces are created in the data directory.
    Default undo tablespace data files are named `undo_001` and `undo_002`. The corresponding
    undo tablespace names defined in the data dictionary are `innodb_undo_001` and
    `innodb_undo_002`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的撤销表空间是在由[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量定义的位置创建的。如果[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量未定义，则默认的撤销表空间将在数据目录中创建。默认的撤销表空间数据文件命名为`undo_001`和`undo_002`。数据字典中定义的相应撤销表空间名称为`innodb_undo_001`和`innodb_undo_002`。
- en: As of MySQL 8.0.14, additional undo tablespaces can be created at runtime using
    SQL. See [Adding Undo Tablespaces](innodb-undo-tablespaces.html#innodb-add-undo-tablespaces
    "Adding Undo Tablespaces").
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.14，可以使用SQL在运行时创建额外的撤销表空间。请参阅[添加撤销表空间](innodb-undo-tablespaces.html#innodb-add-undo-tablespaces
    "添加撤销表空间")。
- en: Undo Tablespace Size
  id: totrans-16
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 撤销表空间大小
- en: Prior to MySQL 8.0.23, the initial size of an undo tablespace depends on the
    [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size) value. For
    the default 16KB page size, the initial undo tablespace file size is 10MiB. For
    4KB, 8KB, 32KB, and 64KB page sizes, the initial undo tablespace files sizes are
    7MiB, 8MiB, 20MiB, and 40MiB, respectively. As of MySQL 8.0.23, the initial undo
    tablespace size is normally 16MiB. The initial size may differ when a new undo
    tablespace is created by a truncate operation. In this case, if the file extension
    size is larger than 16MB, and the previous file extension occurred within the
    last second, the new undo tablespace is created at a quarter of the size defined
    by the [`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    variable.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.23 之前，撤销表空间的初始大小取决于[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)的值。对于默认的
    16KB 页大小，初始撤销表空间文件大小为 10MiB。对于 4KB、8KB、32KB 和 64KB 页大小，初始撤销表空间文件大小分别为 7MiB、8MiB、20MiB
    和 40MiB。从 MySQL 8.0.23 开始，初始撤销表空间大小通常为 16MiB。当通过截断操作创建新的撤销表空间时，初始大小可能会有所不同。在这种情况下，如果文件扩展大小大于
    16MB，并且上一个文件扩展发生在最近一秒内，则新的撤销表空间将以[`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)变量定义的四分之一大小创建。
- en: Prior to MySQL 8.0.23, an undo tablespace is extended four extents at a time.
    From MySQL 8.0.23, an undo tablespace is extended by a minimum of 16MB. To handle
    aggressive growth, the file extension size is doubled if the previous file extension
    happened less than 0.1 seconds earlier. Doubling of the extension size can occur
    multiple times to a maximum of 256MB. If the previous file extension occurred
    more than 0.1 seconds earlier, the extension size is reduced by half, which can
    also occur multiple times, to a minimum of 16MB. If the `AUTOEXTEND_SIZE` option
    is defined for an undo tablespace, it is extended by the greater of the `AUTOEXTEND_SIZE`
    setting and the extension size determined by the logic described above. For information
    about the `AUTOEXTEND_SIZE` option, see [Section 17.6.3.9, “Tablespace AUTOEXTEND_SIZE
    Configuration”](innodb-tablespace-autoextend-size.html "17.6.3.9 Tablespace AUTOEXTEND_SIZE
    Configuration").
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.23 之前，撤销表空间每次扩展四个区段。从 MySQL 8.0.23 开始，撤销表空间至少扩展 16MB。为了处理激进的增长，如果上一个文件扩展发生在不到
    0.1 秒之前，则文件扩展大小加倍。文件扩展大小可以多次加倍，最多达到 256MB。如果上一个文件扩展发生在超过 0.1 秒之前，则文件扩展大小减半，这也可以多次发生，最少为
    16MB。如果为撤销表空间定义了`AUTOEXTEND_SIZE`选项，则它将按照上述逻辑确定的扩展大小和`AUTOEXTEND_SIZE`设置中的较大值进行扩展。有关`AUTOEXTEND_SIZE`选项的信息，请参见[Section 17.6.3.9,
    “Tablespace AUTOEXTEND_SIZE Configuration”](innodb-tablespace-autoextend-size.html
    "17.6.3.9 Tablespace AUTOEXTEND_SIZE Configuration")。
- en: Adding Undo Tablespaces
  id: totrans-19
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 添加撤销表空间
- en: Because undo logs can become large during long-running transactions, creating
    additional undo tablespaces can help prevent individual undo tablespaces from
    becoming too large. As of MySQL 8.0.14, additional undo tablespaces can be created
    at runtime using [`CREATE UNDO TABLESPACE`](create-tablespace.html "15.1.21 CREATE
    TABLESPACE Statement") syntax.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 由于长时间运行的事务可能导致撤销日志变得很大，创建额外的撤销表空间可以帮助防止单个撤销表空间变得过大。从 MySQL 8.0.14 开始，可以使用[`CREATE
    UNDO TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE Statement")语法在运行时创建额外的撤销表空间。
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The undo tablespace file name must have an `.ibu` extension. It is not permitted
    to specify a relative path when defining the undo tablespace file name. A fully
    qualified path is permitted, but the path must be known to `InnoDB`. Known paths
    are those defined by the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    variable. Unique undo tablespace file names are recommended to avoid potential
    file name conflicts when moving or cloning data.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 撤销表空间文件名必须具有`.ibu`扩展名。在定义撤销表空间文件名时，不允许指定相对路径。允许使用完全限定路径，但路径必须为`InnoDB`所知。已知路径是由[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)变量定义的路径。建议使用唯一的撤销表空间文件名，以避免在移动或克隆数据时出现潜在的文件名冲突。
- en: Note
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In a replication environment, the source and each replica must have its own
    undo tablespace file directory. Replicating the creation of an undo tablespace
    file to a common directory would cause a file name conflict.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制环境中，源和每个副本必须有自己的撤销表空间文件目录。将撤销表空间文件的创建复制到公共目录会导致文件名冲突。
- en: At startup, directories defined by the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    variable are scanned for undo tablespace files. (The scan also traverses subdirectories.)
    Directories defined by the [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir),
    [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory),
    and [`datadir`](server-system-variables.html#sysvar_datadir) variables are automatically
    appended to the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    value regardless of whether the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    variable is defined explicitly. An undo tablespace can therefore reside in paths
    defined by any of those variables.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动时，由[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)变量定义的目录将被扫描以查找撤销表空间文件。（扫描还会遍历子目录。）由[`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)、[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)和[`datadir`](server-system-variables.html#sysvar_datadir)变量定义的目录将自动附加到[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)值中，无论[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)变量是否被显式定义。因此，撤销表空间可以位于任何这些变量定义的路径中。
- en: If the undo tablespace file name does not include a path, the undo tablespace
    is created in the directory defined by the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable. If that variable is undefined, the undo tablespace is created in the
    data directory.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果撤销表空间文件名不包含路径，则撤销表空间将创建在由[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量定义的目录中。如果该变量未定义，则撤销表空间将创建在数据目录中。
- en: Note
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `InnoDB` recovery process requires that undo tablespace files reside in
    known directories. Undo tablespace files must be discovered and opened before
    redo recovery and before other data files are opened to permit uncommitted transactions
    and data dictionary changes to be rolled back. An undo tablespace not found before
    recovery cannot be used, which can lead to database inconsistencies. An error
    message is reported at startup if an undo tablespace known to the data dictionary
    is not found. The known directory requirement also supports undo tablespace portability.
    See [Moving Undo Tablespaces](innodb-undo-tablespaces.html#innodb-move-undo-tablespaces
    "Moving Undo Tablespaces").
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`恢复过程要求撤销表空间文件位于已知目录中。在重做恢复和其他数据文件打开之前，必须发现并打开撤销表空间文件，以允许未提交的事务和数据字典更改被回滚。在恢复之前找不到的撤销表空间无法使用，这可能导致数据库不一致。如果数据字典中已知的撤销表空间未找到，则在启动时会报告错误消息。已知目录要求还支持撤销表空间的可移植性。请参阅[移动撤销表空间](innodb-undo-tablespaces.html#innodb-move-undo-tablespaces
    "移动撤销表空间")。'
- en: To create undo tablespaces in a path relative to the data directory, set the
    [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable to the relative path, and specify the file name only when creating an
    undo tablespace.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要在相对于数据目录的路径中创建撤销表空间，请将[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量设置为相对路径，并在创建撤销表空间时仅指定文件名。
- en: 'To view undo tablespace names and paths, query [`INFORMATION_SCHEMA.FILES`](information-schema-files-table.html
    "28.3.15 The INFORMATION_SCHEMA FILES Table"):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看撤销表空间的名称和路径，请查询[`INFORMATION_SCHEMA.FILES`](information-schema-files-table.html
    "28.3.15 INFORMATION_SCHEMA FILES表")：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A MySQL instance supports up to 127 undo tablespaces including the two default
    undo tablespaces created when the MySQL instance is initialized.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一个MySQL实例支持最多127个撤销表空间，包括MySQL实例初始化时创建的两个默认撤销表空间。
- en: Note
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Prior to MySQL 8.0.14, additional undo tablespaces are created by configuring
    the [`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)
    startup variable. This variable is deprecated and no longer configurable as of
    MySQL 8.0.14.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.14之前，通过配置[`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)启动变量来创建额外的撤销表空间。从MySQL
    8.0.14开始，此变量已被弃用，不再可配置。
- en: Prior to MySQL 8.0.14, increasing the [`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)
    setting creates the specified number of undo tablespaces and adds them to the
    list of active undo tablespaces. Decreasing the [`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)
    setting removes undo tablespaces from the list of active undo tablespaces. Undo
    tablespaces that are removed from the active list remain active until they are
    no longer used by existing transactions. The [`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)
    variable can be configured at runtime using a [`SET`](set-statement.html "15.7.6 SET
    Statements") statement or defined in a configuration file.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.14之前，增加[`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)设置会���建指定数量的撤销表空间，并将它们添加到活动撤销表空间列表中。减少[`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)设置会从活动撤销表空间列表中删除撤销表空间。从活动列表中删除的撤销表空间会保持活动状态，直到它们不再被现有事务使用。可以使用[`SET`](set-statement.html
    "15.7.6 SET Statements")语句在运行时配置[`innodb_undo_tablespaces`](innodb-parameters.html#sysvar_innodb_undo_tablespaces)变量，也��以在配置文件中定义。
- en: Prior to MySQL 8.0.14, deactivated undo tablespaces cannot be removed. Manual
    removal of undo tablespace files is possible after a slow shutdown but is not
    recommended, as deactivated undo tablespaces may contain active undo logs for
    some time after the server is restarted if open transactions were present when
    shutting down the server. As of MySQL 8.0.14, undo tablespaces can be dropped
    using [`DROP UNDO TABALESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE
    Statement") syntax. See [Dropping Undo Tablespaces](innodb-undo-tablespaces.html#innodb-drop-undo-tablespaces
    "Dropping Undo Tablespaces").
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.14之前，停用的撤销表空间无法删除。在缓慢关闭后可以手动删除撤销表空间文件，但不建议这样做，因为停用的撤销表空间在服务器重新启动后可能会在一段时间内包含活动的撤销日志，如果在关闭服务器时存在未完成的事务。从MySQL
    8.0.14开始，可以使用[`DROP UNDO TABALESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE
    Statement")语法删除撤销表空间。请参阅[Dropping Undo Tablespaces](innodb-undo-tablespaces.html#innodb-drop-undo-tablespaces
    "Dropping Undo Tablespaces")。
- en: Dropping Undo Tablespaces
  id: totrans-37
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 删除撤销表空间
- en: As of MySQL 8.0.14, undo tablespaces created using [`CREATE UNDO TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement") syntax can be dropped at runtime using
    [`DROP UNDO TABALESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")
    syntax.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.14版本，使用[`CREATE UNDO TABLESPACE`](create-tablespace.html "15.1.21 CREATE
    TABLESPACE Statement")语法创建的撤销表空间可以使用[`DROP UNDO TABALESPACE`](alter-tablespace.html
    "15.1.10 ALTER TABLESPACE Statement")语法在运行时删除。
- en: An undo tablespace must be empty before it can be dropped. To empty an undo
    tablespace, the undo tablespace must first be marked as inactive using [`ALTER
    UNDO TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")
    syntax so that the tablespace is no longer used for assigning rollback segments
    to new transactions.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在删除撤销表空间之前，撤销表空间必须为空。要清空撤销表空间，必须首先使用[`ALTER UNDO TABLESPACE`](alter-tablespace.html
    "15.1.10 ALTER TABLESPACE Statement")语法将撤销表空间标记为非活动状态，以便该表空间不再用于为新事务分配回滚段。
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After an undo tablespace is marked as inactive, transactions currently using
    rollback segments in the undo tablespace are permitted to finish, as are any transactions
    started before those transactions are completed. After transactions are completed,
    the purge system frees the rollback segments in the undo tablespace, and the undo
    tablespace is truncated to its initial size. (The same process is used when truncating
    undo tablespaces. See [Truncating Undo Tablespaces](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "Truncating Undo Tablespaces").) Once the undo tablespace is empty, it can be
    dropped.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 将撤销表空间标记为非活动状态后，当前在撤销表空间中使用回滚段的事务被允许完成，以及在这些事务完成之前启动的任何事务。事务完成后，清除系统释放撤销表空间中的回滚段，并将撤销表空间截断为其初始大小。（在截断撤销表空间时使用相同的过程。请参阅[Truncating
    Undo Tablespaces](innodb-undo-tablespaces.html#truncate-undo-tablespace "Truncating
    Undo Tablespaces")。）一旦撤销表空间为空，就可以删除它。
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Alternatively, the undo tablespace can be left in an empty state and reactivated
    later, if needed, by issuing an [`ALTER UNDO TABLESPACE *`tablespace_name`* SET
    ACTIVE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement") statement.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果需要，可以将撤销表空间保留为空状态，并在以后重新激活，方法是发出[`ALTER UNDO TABLESPACE *`tablespace_name`*
    SET ACTIVE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")语句。
- en: The state of an undo tablespace can be monitored by querying the Information
    Schema [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") table.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 撤销表空间的状态可以通过查询信息模式[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table")表来监视。
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: An `inactive` state indicates that rollback segments in an undo tablespace are
    no longer used by new transactions. An `empty` state indicates that an undo tablespace
    is empty and ready to be dropped, or ready to be made active again using an [`ALTER
    UNDO TABLESPACE *`tablespace_name`* SET ACTIVE`](alter-tablespace.html "15.1.10 ALTER
    TABLESPACE Statement") statement. Attempting to drop an undo tablespace that is
    not empty returns an error.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一个`inactive`状态表示回滚段在撤销表空间中不再被新事务使用。一个`empty`状态表示一个撤销表空间是空的，可以被删除，或者可以使用[`ALTER
    UNDO TABLESPACE *`tablespace_name`* SET ACTIVE`](alter-tablespace.html "15.1.10 ALTER
    TABLESPACE Statement")语句重新激活。尝试删除一个非空的撤销表空间会返回错误。
- en: The default undo tablespaces (`innodb_undo_001` and `innodb_undo_002`) created
    when the MySQL instance is initialized cannot be dropped. They can, however, be
    made inactive using an [`ALTER UNDO TABLESPACE *`tablespace_name`* SET INACTIVE`](alter-tablespace.html
    "15.1.10 ALTER TABLESPACE Statement") statement. Before a default undo tablespace
    can be made inactive, there must be an undo tablespace to take its place. A minimum
    of two active undo tablespaces are required at all times to support automated
    truncation of undo tablespaces.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当MySQL实例初始化时创建的默认撤销表空间（`innodb_undo_001`和`innodb_undo_002`）不能被删除。但是，它们可以通过使用[`ALTER
    UNDO TABLESPACE *`tablespace_name`* SET INACTIVE`](alter-tablespace.html "15.1.10 ALTER
    TABLESPACE Statement")语句设置为非活动状态。在默认撤销表空间可以设置为非活动状态之前，必须有一个撤销表空间来替代它。始终需要至少两个活动的撤销表空间来支持自动截断撤销表空间。
- en: Moving Undo Tablespaces
  id: totrans-49
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 移动撤销表空间
- en: Undo tablespaces created with [`CREATE UNDO TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement") syntax can be moved while the server is
    offline to any known directory. Known directories are those defined by the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    variable. Directories defined by [`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir),
    [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory),
    and [`datadir`](server-system-variables.html#sysvar_datadir) are automatically
    appended to the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    value regardless of whether the [`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)
    variable is defined explicitly. Those directories and their subdirectories are
    scanned at startup for undo tablespaces files. An undo tablespace file moved to
    any of those directories is discovered at startup and assumed to be the undo tablespace
    that was moved.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`CREATE UNDO TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE
    Statement")语法创建的撤销表空间可以在服务器离线状态下移动到任何已知目录。已知目录是由[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)变量定义的目录。由[`innodb_data_home_dir`](innodb-parameters.html#sysvar_innodb_data_home_dir)、[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)和[`datadir`](server-system-variables.html#sysvar_datadir)定义的目录会自动附加到[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)值中，无论[`innodb_directories`](innodb-parameters.html#sysvar_innodb_directories)变量是否被显式定义。这些目录及其子目录在启动时会被扫描以查找撤销表空间文件。移动到这些目录中的撤销表空间文件在启动时会被发现，并假定为已移动的撤销表空间。
- en: The default undo tablespaces (`innodb_undo_001` and `innodb_undo_002`) created
    when the MySQL instance is initialized must reside in the directory defined by
    the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable. If the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable is undefined, default undo tablespaces reside in the data directory.
    If default undo tablespaces are moved while the server is offline, the server
    must be started with the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable configured to the new directory.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当MySQL实例初始化时创建的默认撤销表空间（`innodb_undo_001`和`innodb_undo_002`）必须位于由[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量定义的目录中。如果[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量未定义，则默认撤销表空间位于数据目录中。如果在服务器离线状态下移动默认撤销表空间，则必须使用配置为新目录的[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量启动服务器。
- en: The I/O patterns for undo logs make undo tablespaces good candidates for [SSD](glossary.html#glos_ssd
    "SSD") storage.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 撤销日志的I/O模式使撤销表空间成为[SSD](glossary.html#glos_ssd "SSD")存储的良好选择。
- en: Configuring the Number of Rollback Segments
  id: totrans-53
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 配置回滚段的数量
- en: The [`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)
    variable defines the number of [rollback segments](glossary.html#glos_rollback_segment
    "rollback segment") allocated to each undo tablespace and to the global temporary
    tablespace. The [`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)
    variable can be configured at startup or while the server is running.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)变量定义了分配给每个撤销表空间和全局临时表空间的[回滚段](glossary.html#glos_rollback_segment
    "回滚段")的数量。[`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)变量可以在启动时或服务器运行时进行配置。'
- en: The default setting for [`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)
    is 128, which is also the maximum value. For information about the number of transactions
    that a rollback segment supports, see [Section 17.6.6, “Undo Logs”](innodb-undo-logs.html
    "17.6.6 Undo Logs").
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_rollback_segments`](innodb-parameters.html#sysvar_innodb_rollback_segments)的默认设置为128，这也是最大值。有关回滚段支持的事务数量的信息，请参见[第17.6.6节，“撤销日志”](innodb-undo-logs.html
    "17.6.6 撤销日志")。'
- en: Truncating Undo Tablespaces
  id: totrans-56
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 截断撤销表空间
- en: There are two methods of truncating undo tablespaces, which can be used individually
    or in combination to manage undo tablespace size. One method is automated, enabled
    using configuration variables. The other method is manual, performed using SQL
    statements.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种截断撤销表空间的方法，可以单独使用或结合使用来管理撤销表空间的大小。一种方法是自动的，使用配置变量启用。另一种方法是手动的，使用SQL语句执行。
- en: The automated method does not require monitoring undo tablespace size and, once
    enabled, it performs deactivation, truncation, and reactivation of undo tablespaces
    without manual intervention. The manual truncation method may be preferable if
    you want to control when undo tablespaces are taken offline for truncation. For
    example, you may want to avoid truncating undo tablespaces during peak workload
    times.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 自动方法不需要监视撤销表空间的大小，并且一旦启用，它会执行撤销表空间的停用、截断和重新激活，无需手动干预。如果您希望控制何时将撤销表空间脱机进行截断，则可能更喜欢手动截断方法。例如，您可能希望避免在高负载时间截断撤销表空间。
- en: Automated Truncation
  id: totrans-59
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 自动截断
- en: Automated truncation of undo tablespaces requires a minimum of two active undo
    tablespaces, which ensures that one undo tablespace remains active while the other
    is taken offline to be truncated. By default, two undo tablespaces are created
    when the MySQL instance is initialized.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 自动截断撤销表空间需要至少两个活动撤销表空间，这确保了一个撤销表空间保持活动状态，而另一个被脱机进行截断。默认情况下，在初始化MySQL实例时会创建两个撤销表空间。
- en: 'To have undo tablespaces automatically truncated, enable the [`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)
    variable. For example:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要自动截断撤销表空间，请启用[`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)变量。例如：
- en: '[PRE5]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When the [`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)
    variable is enabled, undo tablespaces that exceed the size limit defined by the
    [`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    variable are subject to truncation. The [`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    variable is dynamic and has a default value of 1073741824 bytes (1024 MiB).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用[`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)变量时，超过[`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)变量定义的大小限制的撤销表空间将被截断。[`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)变量是动态的，默认值为1073741824字节（1024
    MiB）。
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'When the [`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)
    variable is enabled:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用[`innodb_undo_log_truncate`](innodb-parameters.html#sysvar_innodb_undo_log_truncate)变量时：
- en: Default and user-defined undo tablespaces that exceed the [`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    setting are marked for truncation. Selection of an undo tablespace for truncation
    is performed in a circular fashion to avoid truncating the same undo tablespace
    each time.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 超过[`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)设置的默认和用户定义的撤销表空间将被标记为截断。选择要截断的撤销表空间是循环进行的，以避免每次截断相同的撤销表空间。
- en: Rollback segments residing in the selected undo tablespace are made inactive
    so that they are not assigned to new transactions. Existing transactions that
    are currently using rollback segments are permitted to finish.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 位于所选撤销表空间中的回滚段被设置为不活动，以便它们不分配给新事务。当前正在使用回滚段的现有事务被允许完成。
- en: The [purge](glossary.html#glos_purge "purge") system empties rollback segments
    by freeing undo logs that are no longer in use.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[清除](glossary.html#glos_purge "purge")系统通过释放不再使用的撤销日志来清空回滚段。'
- en: After all rollback segments in the undo tablespace are freed, the truncate operation
    runs and truncates the undo tablespace to its initial size.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在撤销表空间中的所有回滚段被释放后，截断操作运行并将撤销表空间截断至其初始大小。
- en: The size of an undo tablespace after a truncate operation may be larger than
    the initial size due to immediate use following the completion of the operation.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截断操作后的撤销表空间大小可能比初始大小大，因为操作完成后立即使用。
- en: 'The [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable defines the location of default undo tablespace files. If the [`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)
    variable is undefined, default undo tablespaces reside in the data directory.
    The location of all undo tablespace files including user-defined undo tablespaces
    created using [`CREATE UNDO TABLESPACE`](create-tablespace.html "15.1.21 CREATE
    TABLESPACE Statement") syntax can be determined by querying the Information Schema
    [`FILES`](information-schema-files-table.html "28.3.15 The INFORMATION_SCHEMA
    FILES Table") table:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量定义默认撤销表空间文件的位置。如果未定义[`innodb_undo_directory`](innodb-parameters.html#sysvar_innodb_undo_directory)变量，则默认撤销表空间位于数据目录中。包括使用[`CREATE
    UNDO TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE Statement")语法创建的用户定义撤销表空间在内的所有撤销表空间文件的位置可以通过查询信息模式[`FILES`](information-schema-files-table.html
    "28.3.15 The INFORMATION_SCHEMA FILES Table")表来确定：'
- en: '[PRE7]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Rollback segments are reactivated so that they can be assigned to new transactions.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回滚段被重新激活，以便分配给新事务。
- en: Manual Truncation
  id: totrans-74
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 手动截断
- en: Manual truncation of undo tablespaces requires a minimum of three active undo
    tablespaces. Two active undo tablespaces are required at all times to support
    the possibility that automated truncation is enabled. A minimum of three undo
    tablespaces satisfies this requirement while permitting an undo tablespace to
    be taken offline manually.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 手动截断撤销表空间需要至少三个活动的撤销表空间。始终需要两个活动的撤销表空间来支持自动截断的可能性。三个撤销表空间的最低要求满足此要求，同时允许手动将撤销表空间下线。
- en: 'To manually initiate truncation of an undo tablespace, deactivate the undo
    tablespace by issuing the following statement:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要手动启动撤销表空间的截断，请发出以下语句：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: After the undo tablespace is marked as inactive, transactions currently using
    rollback segments in the undo tablespace are permitted to finish, as are any transactions
    started before those transactions are completed. After transactions are completed,
    the purge system frees the rollback segments in the undo tablespace, the undo
    tablespace is truncated to its initial size, and the undo tablespace state changes
    from `inactive` to `empty`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 撤销表空间标记为不活动后，当前正在使用撤销表空间中回滚段的事务被允许完成，以及在这些事务完成之前启动的任何事务。事务完成后，清除系统释放撤销表空间中的回滚段，撤销表空间被截断至其初始大小，并且撤销表空间状态从`inactive`变为`empty`。
- en: Note
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When an `ALTER UNDO TABLESPACE *`tablespace_name`* SET INACTIVE` statement deactivates
    an undo tablespace, the purge thread looks for that undo tablespace at the next
    opportunity. Once the undo tablespace is found and marked for truncation, the
    purge thread returns with increased frequency to quickly empty and truncate the
    undo tablespace.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当`ALTER UNDO TABLESPACE *`tablespace_name`* SET INACTIVE`语句停用撤销表空间时，清除线程会在下一个机会查找该撤销表空间。一旦找到撤销表空间并标记为截断，清除线程会以增加的频率返回，以快速清空和截断撤销表空间。
- en: To check the state of an undo tablespace, query the Information Schema [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") table.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查撤销表空间的状态，请查询信息模式[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table")表。
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Once the undo tablespace is in an `empty` state, it can be reactivated by issuing
    the following statement:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦撤销表空间处于`empty`状态，可以通过发出以下语句重新激活：
- en: '[PRE10]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: An undo tablespace in an `empty` state can also be dropped. See [Dropping Undo
    Tablespaces](innodb-undo-tablespaces.html#innodb-drop-undo-tablespaces "Dropping
    Undo Tablespaces").
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 处于`空`状态的撤消表空间也可以被删除。请参阅[删除撤消表空间](innodb-undo-tablespaces.html#innodb-drop-undo-tablespaces
    "Dropping Undo Tablespaces")。
- en: Expediting Automated Truncation of Undo Tablespaces
  id: totrans-86
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 加快自动截断撤消表空间
- en: The purge thread is responsible for emptying and truncating undo tablespaces.
    By default, the purge thread looks for undo tablespaces to truncate once every
    128 times that purge is invoked. The frequency with which the purge thread looks
    for undo tablespaces to truncate is controlled by the [`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    variable, which has a default setting of 128.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 清除线程负责清空和截断撤消表空间。默认情况下，清除线程在调用清除的128次中查找撤消表空间以截断一次。清除线程查找撤消表空间以截断的频率由[`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)变量控制，默认设置为128。
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: To increase the frequency, decrease the [`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    setting. For example, to have the purge thread look for undo tablespaces once
    every 32 times that purge is invoked, set [`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)
    to 32.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要增加频率，请降低[`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)设置。例如，为了使清除线程在调用清除的32次中查找撤消表空间一次，将[`innodb_purge_rseg_truncate_frequency`](innodb-parameters.html#sysvar_innodb_purge_rseg_truncate_frequency)设置为32。
- en: '[PRE12]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Performance Impact of Truncating Undo Tablespace Files
  id: totrans-91
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 截断撤消表空间文件的性能影响
- en: 'When an undo tablespace is truncated, the rollback segments in the undo tablespace
    are deactivated. The active rollback segments in other undo tablespaces assume
    responsibility for the entire system load, which may result in a slight performance
    degradation. The extent to which performance is affected depends on a number of
    factors:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当撤消表空间被截断时，撤消表空间中的回滚段将被停用。其他撤消表空间中的活动回滚段将负责整个系统负载，这可能导致轻微的性能下降。性能受影响的程度取决于多个因素：
- en: Number of undo tablespaces
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 撤消表空间数量
- en: Number of undo logs
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 撤消日志数量
- en: Undo tablespace size
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 撤消表空间大小
- en: Speed of the I/O subsystem
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: I/O 子系统的速度
- en: Existing long running transactions
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现有的长时间运行事务
- en: System load
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统负载
- en: The easiest way to avoid the potential performance impact is to increase the
    number of undo tablespaces.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 避免潜在性能影响的最简单方法是增加撤消表空间的数量。
- en: Monitoring Undo Tablespace Truncation
  id: totrans-100
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 监控撤消表空间截断
- en: As of MySQL 8.0.16, `undo` and `purge` subsystem counters are provided for monitoring
    background activities associated with undo log truncation. For counter names and
    descriptions, query the Information Schema [`INNODB_METRICS`](information-schema-innodb-metrics-table.html
    "28.4.21 The INFORMATION_SCHEMA INNODB_METRICS Table") table.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.16 开始，提供了用于监视与撤消日志截断相关的后台活动的`undo`和`purge`子系统计数器。有关计数器名称和描述，请查询信息模式[`INNODB_METRICS`](information-schema-innodb-metrics-table.html
    "28.4.21 The INFORMATION_SCHEMA INNODB_METRICS Table")表。
- en: '[PRE13]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: For information about enabling counters and querying counter data, see [Section 17.15.6,
    “InnoDB INFORMATION_SCHEMA Metrics Table”](innodb-information-schema-metrics-table.html
    "17.15.6 InnoDB INFORMATION_SCHEMA Metrics Table").
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 有关启用计数器和查询计数器数据的信息，请参阅[第17.15.6节，“InnoDB INFORMATION_SCHEMA Metrics Table”](innodb-information-schema-metrics-table.html
    "17.15.6 InnoDB INFORMATION_SCHEMA Metrics Table")。
- en: Undo Tablespace Truncation Limit
  id: totrans-104
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 撤消表空间截断限制
- en: As of MySQL 8.0.21, the number of truncate operations on the same undo tablespace
    between checkpoints is limited to 64\. The limit prevents potential issues caused
    by an excessive number of undo tablespace truncate operations, which can occur
    if [`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)
    is set too low on a busy system, for example. If the limit is exceeded, an undo
    tablespace can still be made inactive, but it is not truncated until after the
    next checkpoint. the limit was raised from 64 to 50,000 in MySQL 8.0.22.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.21 开始，同一撤消表空间在检查点之间的截断操作次数限制为64次。该限制防止由于在繁忙系统上设置了过低的[`innodb_max_undo_log_size`](innodb-parameters.html#sysvar_innodb_max_undo_log_size)而导致的过多撤消表空间截断操作可能引起的潜在问题。如果超过限制，撤消表空间仍然可以变为非活动状态，但直到下一个检查点之后才会被截断。在
    MySQL 8.0.22 中，该限制从64提高到了50,000。
- en: Undo Tablespace Truncation Recovery
  id: totrans-106
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 撤消表空间截断恢复
- en: An undo tablespace truncate operation creates a temporary `undo_*`space_number`*_trunc.log`
    file in the server log directory. That log directory is defined by [`innodb_log_group_home_dir`](innodb-parameters.html#sysvar_innodb_log_group_home_dir).
    If a system failure occurs during the truncate operation, the temporary log file
    permits the startup process to identify undo tablespaces that were being truncated
    and to continue the operation.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 撤销表空间截断操作会在服务器日志目录中创建一个临时`undo_*`space_number`*_trunc.log`文件。该日志目录由[`innodb_log_group_home_dir`](innodb-parameters.html#sysvar_innodb_log_group_home_dir)定义。如果在截断操作期间发生系统故障，临时日志文件允许启动过程识别正在被截断的撤销表空间，并继续操作。
- en: Undo Tablespace Status Variables
  id: totrans-108
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 撤销表空间状态变量
- en: 'The following status variables permit tracking the total number of undo tablespaces,
    implicit (`InnoDB`-created) undo tablespaces, explicit (user-created) undo tablespaces,
    and the number of active undo tablespaces:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下状态变量允许跟踪总撤销表空间数、隐式（`InnoDB`创建的）撤销表空间数、显式（用户创建的）撤销表空间数以及活动撤销表空间数：
- en: '[PRE14]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: For status variable descriptions, see [Section 7.1.10, “Server Status Variables”](server-status-variables.html
    "7.1.10 Server Status Variables").
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 查看状态变量描述，请参阅[第7.1.10节，“服务器状态变量”](server-status-variables.html "7.1.10 服务器状态变量")。
