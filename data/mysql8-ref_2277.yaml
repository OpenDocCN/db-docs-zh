- en: 'A.4 MySQL 8.0 FAQ: Stored Procedures and Functions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A.4 MySQL 8.0 FAQ：存储过程和函数
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-stored-procs.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-stored-procs.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-stored-procs.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-stored-procs.html)
- en: A.4.1\. [Does MySQL 8.0 support stored procedures and functions?](faqs-stored-procs.html#faq-mysql-have-procedures-functions)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.1\. [MySQL 8.0支持存储过程和函数吗？](faqs-stored-procs.html#faq-mysql-have-procedures-functions)
- en: A.4.2\. [Where can I find documentation for MySQL stored procedures and stored
    functions?](faqs-stored-procs.html#faq-mysql-where-procedures-functions-docs)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.2\. [我在哪里可以找到MySQL存储过程和存储函数的文档？](faqs-stored-procs.html#faq-mysql-where-procedures-functions-docs)
- en: A.4.3\. [Is there a discussion forum for MySQL stored procedures?](faqs-stored-procs.html#faq-mysql-where-procedures-forum)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.3\. [是否有关于MySQL存储过程的讨论论坛？](faqs-stored-procs.html#faq-mysql-where-procedures-forum)
- en: A.4.4\. [Where can I find the ANSI SQL 2003 specification for stored procedures?](faqs-stored-procs.html#faq-mysql-where-ansi-2003-spec)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.4\. [我在哪里可以找到ANSI SQL 2003存储过程规范？](faqs-stored-procs.html#faq-mysql-where-ansi-2003-spec)
- en: A.4.5\. [How do you manage stored routines?](faqs-stored-procs.html#faq-mysql-how-manage-routines)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.5\. [如何管理存储例程？](faqs-stored-procs.html#faq-mysql-how-manage-routines)
- en: A.4.6\. [Is there a way to view all stored procedures and stored functions in
    a given database?](faqs-stored-procs.html#faq-mysql-how-view-procedures-functions)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.6\. [有没有办法查看给定数据库中的所有存储过程和存储函数？](faqs-stored-procs.html#faq-mysql-how-view-procedures-functions)
- en: A.4.7\. [Where are stored procedures stored?](faqs-stored-procs.html#faq-mysql-where-procedures-stored)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.7\. [存储过程存储在哪里？](faqs-stored-procs.html#faq-mysql-where-procedures-stored)
- en: A.4.8\. [Is it possible to group stored procedures or stored functions into
    packages?](faqs-stored-procs.html#faq-mysql-how-group-procedures-functions)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.8\. [是否可以将存储过程或存储函数分组到包中？](faqs-stored-procs.html#faq-mysql-how-group-procedures-functions)
- en: A.4.9\. [Can a stored procedure call another stored procedure?](faqs-stored-procs.html#faq-mysql-can-procedure-call-procedure)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.9\. [存储过程可以调用另一个存储过程吗？](faqs-stored-procs.html#faq-mysql-can-procedure-call-procedure)
- en: A.4.10\. [Can a stored procedure call a trigger?](faqs-stored-procs.html#faq-mysql-can-procedure-call-trigger)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.10\. [存储过程可以调用触发器吗？](faqs-stored-procs.html#faq-mysql-can-procedure-call-trigger)
- en: A.4.11\. [Can a stored procedure access tables?](faqs-stored-procs.html#faq-mysql-can-procedure-access-table)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.11\. [存储过程可以访问表吗？](faqs-stored-procs.html#faq-mysql-can-procedure-access-table)
- en: A.4.12\. [Do stored procedures have a statement for raising application errors?](faqs-stored-procs.html#faq-mysql-can-procedure-raise-error)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.12\. [存储过程是否有用于引发应用程序错误的语句？](faqs-stored-procs.html#faq-mysql-can-procedure-raise-error)
- en: A.4.13\. [Do stored procedures provide exception handling?](faqs-stored-procs.html#faq-mysql-have-exceptions)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.13\. [存储过程提供异常处理吗？](faqs-stored-procs.html#faq-mysql-have-exceptions)
- en: A.4.14\. [Can MySQL 8.0 stored routines return result sets?](faqs-stored-procs.html#faq-mysql-can-routine-results)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.14\. [MySQL 8.0存储例程可以返回结果集吗？](faqs-stored-procs.html#faq-mysql-can-routine-results)
- en: A.4.15\. [Is WITH RECOMPILE supported for stored procedures?](faqs-stored-procs.html#faq-mysql-have-with-recompile)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.15\. [存储过程支持WITH RECOMPILE吗？](faqs-stored-procs.html#faq-mysql-have-with-recompile)
- en: A.4.16\. [Is there a MySQL equivalent to using mod_plsql as a gateway on Apache
    to talk directly to a stored procedure in the database?](faqs-stored-procs.html#faq-mysql-have-mod-plsql)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.16\. [是否有MySQL等效于在Apache上使用mod_plsql作为直接与数据库中存储过程通信的网关？](faqs-stored-procs.html#faq-mysql-have-mod-plsql)
- en: A.4.17\. [Can I pass an array as input to a stored procedure?](faqs-stored-procs.html#faq-mysql-can-procedure-array)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.17\. [我可以将数组作为输入传递给存储过程吗？](faqs-stored-procs.html#faq-mysql-can-procedure-array)
- en: A.4.18\. [Can I pass a cursor as an IN parameter to a stored procedure?](faqs-stored-procs.html#faq-mysql-can-pass-cursor-in)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.18\. [我可以将游标作为IN参数传递给存储过程吗？](faqs-stored-procs.html#faq-mysql-can-pass-cursor-in)
- en: A.4.19\. [Can I return a cursor as an OUT parameter from a stored procedure?](faqs-stored-procs.html#faq-mysql-can-return-cursor-out)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.19\. [我可以从存储过程中将游标作为OUT参数返回吗？](faqs-stored-procs.html#faq-mysql-can-return-cursor-out)
- en: A.4.20\. [Can I print out a variable's value within a stored routine for debugging
    purposes?](faqs-stored-procs.html#faq-mysql-can-print-var-in-procedure)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.20\. [我可以在存储例程中打印变量的值以进行调试吗？](faqs-stored-procs.html#faq-mysql-can-print-var-in-procedure)
- en: A.4.21\. [Can I commit or roll back transactions inside a stored procedure?](faqs-stored-procs.html#faq-mysql-can-rollback-transaction-procedure)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.21\. [我可以在存储过程中提交或回滚事务吗？](faqs-stored-procs.html#faq-mysql-can-rollback-transaction-procedure)
- en: A.4.22\. [Do MySQL 8.0 stored procedures and functions work with replication?](faqs-stored-procs.html#faq-mysql-can-procedures-replicatation)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.22\. [MySQL 8.0 存储过程和函数是否与复制兼容？](faqs-stored-procs.html#faq-mysql-can-procedures-replicatation)
- en: A.4.23\. [Are stored procedures and functions created on a replication source
    server replicated to a replica?](faqs-stored-procs.html#faq-mysql-are-procedures-replicated)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.23\. [在复制源服务器上创建的存储过程和函数是否会被复制到副本？](faqs-stored-procs.html#faq-mysql-are-procedures-replicated)
- en: A.4.24\. [How are actions that take place inside stored procedures and functions
    replicated?](faqs-stored-procs.html#faq-mysql-how-procedures-replicated)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.24\. [存储过程和函数内部发生的操作如何被复制？](faqs-stored-procs.html#faq-mysql-how-procedures-replicated)
- en: A.4.25\. [Are there special security requirements for using stored procedures
    and functions together with replication?](faqs-stored-procs.html#faq-mysql-security-procedures-replication)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.25\. [在使用存储过程和函数与复制一起时是否有特殊的安全要求？](faqs-stored-procs.html#faq-mysql-security-procedures-replication)
- en: A.4.26\. [What limitations exist for replicating stored procedure and function
    actions?](faqs-stored-procs.html#faq-mysql-limitations-procedures-replication)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.26\. [复制存储过程和函数操作存在哪些限制？](faqs-stored-procs.html#faq-mysql-limitations-procedures-replication)
- en: A.4.27\. [Do the preceding limitations affect the ability of MySQL to do point-in-time
    recovery?](faqs-stored-procs.html#faq-mysql-limitations-pit-recovery)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.27\. [上述限制是否影响 MySQL 进行点时间恢复的能力？](faqs-stored-procs.html#faq-mysql-limitations-pit-recovery)
- en: A.4.28\. [What is being done to correct the aforementioned limitations?](faqs-stored-procs.html#faq-mysql-when-limitations-resolved)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: A.4.28\. [正在做什么来纠正上述限制？](faqs-stored-procs.html#faq-mysql-when-limitations-resolved)
- en: '| **A.4.1.** | Does MySQL 8.0 support stored procedures and functions? |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.1.** | MySQL 8.0 是否支持存储过程和函数？ |'
- en: '|  | Yes. MySQL 8.0 supports two types of stored routines, stored procedures
    and stored functions. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。MySQL 8.0 支持两种类型的存储例程，存储过程和存储函数。 |'
- en: '| **A.4.2.** | Where can I find documentation for MySQL stored procedures and
    stored functions? |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.2.** | 我在哪里可以找到 MySQL 存储过程和存储函数的文档？ |'
- en: '|  | See [Section 27.2, “Using Stored Routines”](stored-routines.html "27.2 Using
    Stored Routines"). |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '|  | 请参阅 [Section 27.2, “Using Stored Routines”](stored-routines.html "27.2 Using
    Stored Routines")。 |'
- en: '| **A.4.3.** | Is there a discussion forum for MySQL stored procedures? |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.3.** | 是否有关于 MySQL 存储过程的讨论论坛？ |'
- en: '|  | Yes. See [https://forums.mysql.com/list.php?98](https://forums.mysql.com/list.php?98).
    |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。请参阅 [https://forums.mysql.com/list.php?98](https://forums.mysql.com/list.php?98)。
    |'
- en: '| **A.4.4.** | Where can I find the ANSI SQL 2003 specification for stored
    procedures? |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.4.** | 我在哪里可以找到 ANSI SQL 2003 存储过程的规范？ |'
- en: '|  | Unfortunately, the official specifications are not freely available (ANSI
    makes them available for purchase). However, there are books, such as *SQL-99
    Complete, Really* by Peter Gulutzan and Trudy Pelzer, that provide a comprehensive
    overview of the standard, including coverage of stored procedures. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '|  | 不幸的是，官方规范并不是免费提供的（ANSI 让它们可以购买）。然而，有一些书籍，比如Peter Gulutzan和Trudy Pelzer的*SQL-99
    Complete, Really*，提供了标准的全面概述，包括存储过程的覆盖范围。 |'
- en: '| **A.4.5.** | How do you manage stored routines? |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.5.** | 如何管理存储例程？ |'
- en: '|  | It is always good practice to use a clear naming scheme for your stored
    routines. You can manage stored procedures with `CREATE [FUNCTION&#124;PROCEDURE]`,
    `ALTER [FUNCTION&#124;PROCEDURE]`, `DROP [FUNCTION&#124;PROCEDURE]`, and `SHOW
    CREATE [FUNCTION&#124;PROCEDURE]`. You can obtain information about existing stored
    procedures using the [`ROUTINES`](information-schema-routines-table.html "28.3.30 The
    INFORMATION_SCHEMA ROUTINES Table") table in the `INFORMATION_SCHEMA` database
    (see [Section 28.3.30, “The INFORMATION_SCHEMA ROUTINES Table”](information-schema-routines-table.html
    "28.3.30 The INFORMATION_SCHEMA ROUTINES Table")). |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '|  | 对于你的存储例程使用清晰的命名方案始终是一个好习惯。你可以使用 `CREATE [FUNCTION&#124;PROCEDURE]`、`ALTER
    [FUNCTION&#124;PROCEDURE]`、`DROP [FUNCTION&#124;PROCEDURE]` 和 `SHOW CREATE [FUNCTION&#124;PROCEDURE]`
    来管理存储过程。你可以使用 `INFORMATION_SCHEMA` 数据库中的 [`ROUTINES`](information-schema-routines-table.html
    "28.3.30 The INFORMATION_SCHEMA ROUTINES Table") 表来获取有关现有存储过程的信息（参见 [Section 28.3.30,
    “The INFORMATION_SCHEMA ROUTINES Table”](information-schema-routines-table.html
    "28.3.30 The INFORMATION_SCHEMA ROUTINES Table")）。 |'
- en: '| **A.4.6.** | Is there a way to view all stored procedures and stored functions
    in a given database? |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.6.** | 是否有一种方法可以查看给定数据库中的所有存储过程和存储函数？ |'
- en: '|  | Yes. For a database named *`dbname`*, use this query on the [`INFORMATION_SCHEMA.ROUTINES`](information-schema-routines-table.html
    "28.3.30 The INFORMATION_SCHEMA ROUTINES Table") table:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 能。对于名为*`dbname`*的数据库，在[`INFORMATION_SCHEMA.ROUTINES`](information-schema-routines-table.html
    "28.3.30 The INFORMATION_SCHEMA ROUTINES Table")表上使用以下查询：'
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For more information, see [Section 28.3.30, “The INFORMATION_SCHEMA ROUTINES
    Table”](information-schema-routines-table.html "28.3.30 The INFORMATION_SCHEMA
    ROUTINES Table").The body of a stored routine can be viewed using [`SHOW CREATE
    FUNCTION`](show-create-function.html "15.7.7.8 SHOW CREATE FUNCTION Statement")
    (for a stored function) or [`SHOW CREATE PROCEDURE`](show-create-procedure.html
    "15.7.7.9 SHOW CREATE PROCEDURE Statement") (for a stored procedure). See [Section 15.7.7.9,
    “SHOW CREATE PROCEDURE Statement”](show-create-procedure.html "15.7.7.9 SHOW CREATE
    PROCEDURE Statement"), for more information. |
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第 28.3.30 节，“The INFORMATION_SCHEMA ROUTINES Table”](information-schema-routines-table.html
    "28.3.30 The INFORMATION_SCHEMA ROUTINES Table")。存储过程的主体可以使用[`SHOW CREATE FUNCTION`](show-create-function.html
    "15.7.7.8 SHOW CREATE FUNCTION Statement")（用于存储函数）或[`SHOW CREATE PROCEDURE`](show-create-procedure.html
    "15.7.7.9 SHOW CREATE PROCEDURE Statement")（用于存储过程）来查看。有关更多信息，请参见[第 15.7.7.9 节，“SHOW
    CREATE PROCEDURE Statement”](show-create-procedure.html "15.7.7.9 SHOW CREATE
    PROCEDURE Statement")。
- en: '| **A.4.7.** | Where are stored procedures stored? |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.7.** | 存储过程存储在哪里？'
- en: '|  | Stored procedures are stored in the `mysql.routines` and `mysql.parameters`
    tables, which are part of the data dictionary. You cannot access these tables
    directly. Instead, query the `INFORMATION_SCHEMA` [`ROUTINES`](information-schema-routines-table.html
    "28.3.30 The INFORMATION_SCHEMA ROUTINES Table") and [`PARAMETERS`](information-schema-parameters-table.html
    "28.3.20 The INFORMATION_SCHEMA PARAMETERS Table") tables. See [Section 28.3.30,
    “The INFORMATION_SCHEMA ROUTINES Table”](information-schema-routines-table.html
    "28.3.30 The INFORMATION_SCHEMA ROUTINES Table"), and [Section 28.3.20, “The INFORMATION_SCHEMA
    PARAMETERS Table”](information-schema-parameters-table.html "28.3.20 The INFORMATION_SCHEMA
    PARAMETERS Table").You can also use [`SHOW CREATE FUNCTION`](show-create-function.html
    "15.7.7.8 SHOW CREATE FUNCTION Statement") to obtain information about stored
    functions, and [`SHOW CREATE PROCEDURE`](show-create-procedure.html "15.7.7.9 SHOW
    CREATE PROCEDURE Statement") to obtain information about stored procedures. See
    [Section 15.7.7.9, “SHOW CREATE PROCEDURE Statement”](show-create-procedure.html
    "15.7.7.9 SHOW CREATE PROCEDURE Statement"). |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '|  | 存储过程存储在 `mysql.routines` 和 `mysql.parameters` 表中，这些表是数据字典的一部分。您不能直接访问这些表。而是查询
    `INFORMATION_SCHEMA` 的 [`ROUTINES`](information-schema-routines-table.html "28.3.30 The
    INFORMATION_SCHEMA ROUTINES Table") 和 [`PARAMETERS`](information-schema-parameters-table.html
    "28.3.20 The INFORMATION_SCHEMA PARAMETERS Table") 表。参见[第 28.3.30 节，“The INFORMATION_SCHEMA
    ROUTINES Table”](information-schema-routines-table.html "28.3.30 The INFORMATION_SCHEMA
    ROUTINES Table")，以及[第 28.3.20 节，“The INFORMATION_SCHEMA PARAMETERS Table”](information-schema-parameters-table.html
    "28.3.20 The INFORMATION_SCHEMA PARAMETERS Table")。您还可以使用[`SHOW CREATE FUNCTION`](show-create-function.html
    "15.7.7.8 SHOW CREATE FUNCTION Statement")获取有关存储函数的信息，以及[`SHOW CREATE PROCEDURE`](show-create-procedure.html
    "15.7.7.9 SHOW CREATE PROCEDURE Statement")获取有关存储过程的信息。有关更多信息，请参见[第 15.7.7.9 节，“SHOW
    CREATE PROCEDURE Statement”](show-create-procedure.html "15.7.7.9 SHOW CREATE
    PROCEDURE Statement")。'
- en: '| **A.4.8.** | Is it possible to group stored procedures or stored functions
    into packages? |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.8.** | 是否可以将存储过程或存储函数分组到包中？'
- en: '|  | No. This is not supported in MySQL 8.0. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '|  | 不支持在 MySQL 8.0 中。'
- en: '| **A.4.9.** | Can a stored procedure call another stored procedure? |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.9.** | 存储过程能调用另一个存储过程吗？'
- en: '|  | Yes. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。'
- en: '| **A.4.10.** | Can a stored procedure call a trigger? |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.10.** | 存储过程能调用触发器吗？'
- en: '|  | A stored procedure can execute an SQL statement, such as an [`UPDATE`](update.html
    "15.2.17 UPDATE Statement"), that causes a trigger to activate. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '|  | 存储过程可以执行导致触发器激活的 SQL 语句，比如[`UPDATE`](update.html "15.2.17 UPDATE Statement")。'
- en: '| **A.4.11.** | Can a stored procedure access tables? |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.11.** | 存储过程能访问表吗？'
- en: '|  | Yes. A stored procedure can access one or more tables as required. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。存储过程可以根据需要访问一个或多个表。'
- en: '| **A.4.12.** | Do stored procedures have a statement for raising application
    errors? |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.12.** | 存储过程有用于引发应用程序错误的语句吗？'
- en: '|  | Yes. MySQL 8.0 implements the SQL standard `SIGNAL` and `RESIGNAL` statements.
    See [Section 15.6.7, “Condition Handling”](condition-handling.html "15.6.7 Condition
    Handling"). |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。MySQL 8.0 实现了 SQL 标准的 `SIGNAL` 和 `RESIGNAL` 语句。参见[第 15.6.7 节，“条件处理”](condition-handling.html
    "15.6.7 Condition Handling")。'
- en: '| **A.4.13.** | Do stored procedures provide exception handling? |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.13.** | 存储过程提供异常处理吗？'
- en: '|  | MySQL implements [`HANDLER`](handler.html "15.2.5 HANDLER Statement")
    definitions according to the SQL standard. See [Section 15.6.7.2, “DECLARE ...
    HANDLER Statement”](declare-handler.html "15.6.7.2 DECLARE ... HANDLER Statement"),
    for details. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL根据SQL标准实现了[`HANDLER`](handler.html "15.2.5 HANDLER Statement")定义。详细信息请参见[Section 15.6.7.2,
    “DECLARE ... HANDLER Statement”](declare-handler.html "15.6.7.2 DECLARE ... HANDLER
    Statement")。 |'
- en: '| **A.4.14.** | Can MySQL 8.0 stored routines return result sets? |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.14.** | MySQL 8.0的存储过程能返回结果集吗？ |'
- en: '|  | *Stored procedures* can, but stored functions cannot. If you perform an
    ordinary [`SELECT`](select.html "15.2.13 SELECT Statement") inside a stored procedure,
    the result set is returned directly to the client. You need to use the MySQL 4.1
    (or higher) client/server protocol for this to work. This means that, for example,
    in PHP, you need to use the `mysqli` extension rather than the old `mysql` extension.
    |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '|  | *存储过程*可以，但存储函数不行。如果在存储过程内执行普通的[`SELECT`](select.html "15.2.13 SELECT Statement")，结果集会直接返回给客户端。你需要使用MySQL
    4.1（或更高版本）的客户端/服务器协议才能实现这一点。这意味着，例如，在PHP中，你需要使用`mysqli`扩展而不是旧的`mysql`扩展。 |'
- en: '| **A.4.15.** | Is `WITH RECOMPILE` supported for stored procedures? |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.15.** | 存储过程支持`WITH RECOMPILE`吗？ |'
- en: '|  | Not in MySQL 8.0. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL 8.0中不支持。 |'
- en: '| **A.4.16.** | Is there a MySQL equivalent to using `mod_plsql` as a gateway
    on Apache to talk directly to a stored procedure in the database? |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.16.** | MySQL有没有类似于在Apache上使用`mod_plsql`作为网关直接与数据库中的存储过程通信的等价项？ |'
- en: '|  | There is no equivalent in MySQL 8.0. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL 8.0中没有等价项。 |'
- en: '| **A.4.17.** | Can I pass an array as input to a stored procedure? |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.17.** | 我能将数组作为输入传递给存储过程吗？ |'
- en: '|  | Not in MySQL 8.0. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL 8.0中不支持。 |'
- en: '| **A.4.18.** | Can I pass a cursor as an `IN` parameter to a stored procedure?
    |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.18.** | 我能将游标作为`IN`参数传递给存储过程吗？ |'
- en: '|  | In MySQL 8.0, cursors are available inside stored procedures only. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '|  | 在MySQL 8.0中，游标仅在存储过程内部可用。 |'
- en: '| **A.4.19.** | Can I return a cursor as an `OUT` parameter from a stored procedure?
    |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.19.** | 我能将游标作为`OUT`参数从存储过程中返回吗？ |'
- en: '|  | In MySQL 8.0, cursors are available inside stored procedures only. However,
    if you do not open a cursor on a [`SELECT`](select.html "15.2.13 SELECT Statement"),
    the result is sent directly to the client. You can also `SELECT INTO` variables.
    See [Section 15.2.13, “SELECT Statement”](select.html "15.2.13 SELECT Statement").
    |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '|  | 在MySQL 8.0中，游标仅在存储过程内部可用。但是，如果你没有在[`SELECT`](select.html "15.2.13 SELECT
    Statement")上打开游标，结果会直接发送给客户端。你也可以使用`SELECT INTO`变量。请参见[Section 15.2.13, “SELECT
    Statement”](select.html "15.2.13 SELECT Statement")。 |'
- en: '| **A.4.20.** | Can I print out a variable''s value within a stored routine
    for debugging purposes? |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.20.** | 我能在存储过��中打印变量的值以进行调试吗？ |'
- en: '|  | Yes, you can do this in a *stored procedure*, but not in a stored function.
    If you perform an ordinary [`SELECT`](select.html "15.2.13 SELECT Statement")
    inside a stored procedure, the result set is returned directly to the client.
    You must use the MySQL 4.1 (or above) client/server protocol for this to work.
    This means that, for example, in PHP, you need to use the `mysqli` extension rather
    than the old `mysql` extension. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的，你可以在*存储过程*中执行此操作，但不能在存储函数中。如果在存储过程内执行普通的[`SELECT`](select.html "15.2.13 SELECT
    Statement")，结果集会直接返回给客户端。你必须使用MySQL 4.1（或更高版本）的客户端/服务器协议才能实现这一点。这意味着，例如，在PHP中，你需要使用`mysqli`扩展而不是旧的`mysql`扩展。
    |'
- en: '| **A.4.21.** | Can I commit or roll back transactions inside a stored procedure?
    |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.21.** | 我能在存储过程内提交或回滚事务吗？ |'
- en: '|  | Yes. However, you cannot perform transactional operations within a stored
    function. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。但是，你不能在存储函数内执行事务操作。 |'
- en: '| **A.4.22.** | Do MySQL 8.0 stored procedures and functions work with replication?
    |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.22.** | MySQL 8.0的存储过程和函数是否与复制兼容？ |'
- en: '|  | Yes, standard actions carried out in stored procedures and functions are
    replicated from a replication source server to a replica. There are a few limitations
    that are described in detail in [Section 27.7, “Stored Program Binary Logging”](stored-programs-logging.html
    "27.7 Stored Program Binary Logging"). |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的，存储过程和函数中执行的标准操作会从复制源服务器复制到副本。有一些详细描述的限制，请参见[Section 27.7, “Stored Program
    Binary Logging”](stored-programs-logging.html "27.7 Stored Program Binary Logging")。
    |'
- en: '| **A.4.23.** | Are stored procedures and functions created on a replication
    source server replicated to a replica? |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.23.** | 在复制源服务器上创建的存储过程和函数是否会被复制到副本？ |'
- en: '|  | Yes, creation of stored procedures and functions carried out through normal
    DDL statements on a replication source server are replicated to a replica, so
    that the objects exist on both servers. `ALTER` and `DROP` statements for stored
    procedures and functions are also replicated. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的，通过在复制源服务器上使用正常DDL语句执行的存储过程和函数的创建会被复制到副本中，以便这些对象存在于两个服务器上。存储过程和函数的`ALTER`和`DROP`语句也会被复制。'
- en: '| **A.4.24.** | How are actions that take place inside stored procedures and
    functions replicated? |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.24.** | 存储过程和函数内部发生的操作如何复制？'
- en: '|  | MySQL records each DML event that occurs in a stored procedure and replicates
    those individual actions to a replica. The actual calls made to execute stored
    procedures are not replicated.Stored functions that change data are logged as
    function invocations, not as the DML events that occur inside each function. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL记录存储过程中发生的每个DML事件，并将这些单独的操作复制到副本中。执行存储过程的实际调用不会被复制。更改数据的存储函数被记录为函数调用，而不是在每个函数内发生的DML事件。'
- en: '| **A.4.25.** | Are there special security requirements for using stored procedures
    and functions together with replication? |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.25.** | 在复制中使用存储过程和函数是否有特殊的安全要求？'
- en: '|  | Yes. Because a replica has authority to execute any statement read from
    a source''s binary log, special security constraints exist for using stored functions
    with replication. If replication or binary logging in general (for the purpose
    of point-in-time recovery) is active, then MySQL DBAs have two security options
    open to them:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 是的。因为副本有权执行从源二进制日志中读取的任何语句，所以在使用存储函数与复制一起时存在特殊的安全约束。如果复制或二进制日志记录一般情况下（用于时点恢复）是活动的，则MySQL
    DBA有两种安全选项可供选择：'
- en: Any user wishing to create stored functions must be granted the [`SUPER`](privileges-provided.html#priv_super)
    privilege.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任何希望创建存储函数的用户必须被授予[`SUPER`](privileges-provided.html#priv_super)权限。
- en: Alternatively, a DBA can set the [`log_bin_trust_function_creators`](replication-options-binary-log.html#sysvar_log_bin_trust_function_creators)
    system variable to 1, which enables anyone with the standard [`CREATE ROUTINE`](privileges-provided.html#priv_create-routine)
    privilege to create stored functions.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者，DBA可以将[`log_bin_trust_function_creators`](replication-options-binary-log.html#sysvar_log_bin_trust_function_creators)系统变量设置为1，这样任何拥有标准[`CREATE
    ROUTINE`](privileges-provided.html#priv_create-routine)权限的人都可以创建存储函数。
- en: '|'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **A.4.26.** | What limitations exist for replicating stored procedure and
    function actions? |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.26.** | 复制存储过程和函数操作存在哪些限制？'
- en: '|  | Nondeterministic (random) or time-based actions embedded in stored procedures
    may not replicate properly. By their very nature, randomly produced results are
    not predictable and cannot be exactly reproduced; therefore, random actions replicated
    to a replica do not mirror those performed on a source. Declaring stored functions
    to be `DETERMINISTIC` or setting the [`log_bin_trust_function_creators`](replication-options-binary-log.html#sysvar_log_bin_trust_function_creators)
    system variable to 0 keeps random operations producing random values from being
    invoked.In addition, time-based actions cannot be reproduced on a replica because
    the timing of such actions in a stored procedure is not reproducible through the
    binary log used for replication. It records only DML events and does not factor
    in timing constraints.Finally, nontransactional tables for which errors occur
    during large DML actions (such as bulk inserts) may experience replication issues
    in that a source may be partially updated from DML activity, but no updates are
    done to the replica because of the errors that occurred. A workaround is for a
    function''s DML actions to be carried out with the `IGNORE` keyword so that updates
    on the source that cause errors are ignored and updates that do not cause errors
    are replicated to the replica. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '|  | 嵌入存储过程中的非确定性（随机）或基于时间的操作可能无法正确复制。由于随机产生的结果本质上是不可预测的，也无法完全复制；因此，在副本上复制的随机操作不会与源上执行的操作相同。声明存储函数为`DETERMINISTIC`或将[`log_bin_trust_function_creators`](replication-options-binary-log.html#sysvar_log_bin_trust_function_creators)系统变量设置为0，可以防止随机操作产生随机值。此外，基于时间的操作无法在副本上重现，因为存储过程中此类操作的时间安排无法通过用于复制的二进制日志复制。它仅记录DML事件，不考虑时间约束。最后，在进行大规模DML操作（如批量插入）时发生错误的非事务表可能会在复制过程中出现问题，因为源可能会因DML活动而部分更新，但由于发生的错误，副本不会进行更新。一种解决方法是使用`IGNORE`关键字执行函数的DML操作，以便忽略导致错误的源上更新，并将不导致错误的更新复制到副本上。'
- en: '| **A.4.27.** | Do the preceding limitations affect the ability of MySQL to
    do point-in-time recovery? |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.27.** | 前述限制是否影响MySQL进行点时间恢复的能力？'
- en: '|  | The same limitations that affect replication do affect point-in-time recovery.
    |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '|  | 影响复制的相同限制也会影响到点时间恢复。'
- en: '| **A.4.28.** | What is being done to correct the aforementioned limitations?
    |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| **A.4.28.** | 有什么措施正在采取来纠正上述限制？'
- en: '|  | You can choose either statement-based replication or row-based replication.
    The original replication implementation is based on statement-based binary logging.
    Row-based binary logging resolves the limitations mentioned earlier.Mixed replication
    is also available (by starting the server with [`--binlog-format=mixed`](replication-options-binary-log.html#sysvar_binlog_format)).
    This hybrid form of replication “knows” whether statement-level replication can
    safely be used, or row-level replication is required.For additional information,
    see [Section 19.2.1, “Replication Formats”](replication-formats.html "19.2.1 Replication
    Formats"). |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '|  | 您可以选择基于语句的复制或基于行的复制。最初的复制实现是基于基于语句的二进制日志记录的。基于行的二进制日志记录解决了前面提到的限制。还提供了混合复制（通过使用[`--binlog-format=mixed`](replication-options-binary-log.html#sysvar_binlog_format)启动服务器）。这种混合形式的复制“知道”是否可以安全地使用基于语句的复制，还是需要基于行的复制。有关更多信息，请参见[Section 19.2.1,
    “Replication Formats”](replication-formats.html "19.2.1 Replication Formats")。'
