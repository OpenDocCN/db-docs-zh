- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/all-subqueries.html](https://dev.mysql.com/doc/refman/8.0/en/all-subqueries.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/all-subqueries.html](https://dev.mysql.com/doc/refman/8.0/en/all-subqueries.html)
- en: 15.2.15.4 Subqueries with ALL
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.2.15.4 带有 ALL 的子查询
- en: 'Syntax:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 语法：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The word `ALL`, which must follow a comparison operator, means “return `TRUE`
    if the comparison is `TRUE` for `ALL` of the values in the column that the subquery
    returns.” For example:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 单词 `ALL` 必须跟在比较运算符后面，意思是“如果比较对子查询返回的列中的所有值都为 `TRUE`，则返回 `TRUE`”。例如：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Suppose that there is a row in table `t1` containing `(10)`. The expression
    is `TRUE` if table `t2` contains `(-5,0,+5)` because `10` is greater than all
    three values in `t2`. The expression is `FALSE` if table `t2` contains `(12,6,NULL,-100)`
    because there is a single value `12` in table `t2` that is greater than `10`.
    The expression is *unknown* (that is, `NULL`) if table `t2` contains `(0,NULL,1)`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 假设表 `t1` 中包含一行 `(10)`。如果表 `t2` 包含 `(-5,0,+5)`，表达式为 `TRUE`，因为 `10` 大于 `t2` 中的所有三个值。如果表
    `t2` 包含 `(12,6,NULL,-100)`，表达式为 `FALSE`，因为 `t2` 中有一个值 `12` 大于 `10`。如果表 `t2` 包含
    `(0,NULL,1)`，表达式为 *unknown*（即 `NULL`）。
- en: 'Finally, the expression is `TRUE` if table `t2` is empty. So, the following
    expression is `TRUE` when table `t2` is empty:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果表 `t2` 是空的，表达式为 `TRUE`。因此，当表 `t2` 为空时，以下表达式为 `TRUE`：
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'But this expression is `NULL` when table `t2` is empty:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当表 `t2` 为空时，此表达式为 `NULL`：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In addition, the following expression is `NULL` when table `t2` is empty:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，当表 `t2` 为空时，以下表达式为 `NULL`：
- en: '[PRE4]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In general, *tables containing `NULL` values* and *empty tables* are “edge cases.”
    When writing subqueries, always consider whether you have taken those two possibilities
    into account.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，*包含 `NULL` 值的表* 和 *空表* 是“边缘情况”。在编写子查询时，始终考虑是否考虑了这两种可能性。
- en: '`NOT IN` is an alias for `<> ALL`. Thus, these two statements are the same:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`NOT IN` 是 `<> ALL` 的别名。因此，这两个语句是相同的：'
- en: '[PRE5]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'MySQL 8.0.19 supports the [`TABLE`](table.html "15.2.16 TABLE Statement") statement.
    As with `IN`, `ANY`, and `SOME`, you can use `TABLE` with `ALL` and `NOT IN` provided
    that the following two conditions are met:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8.0.19 支持 [`TABLE`](table.html "15.2.16 TABLE Statement") 语句。与 `IN`、`ANY`
    和 `SOME` 一样，你可以在 `TABLE` 中使用 `ALL` 和 `NOT IN`，前提是满足以下两个条件：
- en: The table in the subquery contains only one column
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子查询中只包含一列
- en: The subquery does not depend on a column expression
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子查询不依赖于列表达式
- en: 'For example, assuming that table `t2` consists of a single column, the last
    two statements shown previously can be written using `TABLE t2` like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设表 `t2` 只包含一列，前面显示的最后两个语句可以这样使用 `TABLE t2` 编写：
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: A query such as `SELECT * FROM t1 WHERE 1 > ALL (SELECT MAX(s1) FROM t2);` cannot
    be written using `TABLE t2` because the subquery depends on a column expression.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 无法使用 `TABLE t2` 编写诸如 `SELECT * FROM t1 WHERE 1 > ALL (SELECT MAX(s1) FROM t2);`
    这样的查询，因为子查询依赖于列表达式。
