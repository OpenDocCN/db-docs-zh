- en: 19.5.2 Replication Compatibility Between MySQL Versions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 19.5.2 MySQL版本之间的复制兼容性
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-compatibility.html](https://dev.mysql.com/doc/refman/8.0/en/replication-compatibility.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-compatibility.html](https://dev.mysql.com/doc/refman/8.0/en/replication-compatibility.html)
- en: MySQL supports replication from one release series to the next higher release
    series. For example, you can replicate from a source running MySQL 5.6 to a replica
    running MySQL 5.7, from a source running MySQL 5.7 to a replica running MySQL
    8.0, and so on. However, you might encounter difficulties when replicating from
    an older source to a newer replica if the source uses statements or relies on
    behavior no longer supported in the version of MySQL used on the replica. For
    example, foreign key names longer than 64 characters are no longer supported from
    MySQL 8.0.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持从一个发布系列复制到下一个更高的发布系列。例如，您可以从运行MySQL 5.6的源复制到运行MySQL 5.7的副本，从运行MySQL 5.7的源复制到运行MySQL
    8.0的副本，依此类推。但是，如果源使用在副本上使用的MySQL版本中不再支持的语句或行为，可能会在从旧源复制到新副本时遇到困难。例如，MySQL 8.0不再支持超过64个字符的外键名称。
- en: The use of more than two MySQL Server versions is not supported in replication
    setups involving multiple sources, regardless of the number of source or replica
    MySQL servers. This restriction applies not only to release series, but to version
    numbers within the same release series as well. For example, if you are using
    a chained or circular replication setup, you cannot use MySQL 8.0.22, MySQL 8.0.24,
    and MySQL 8.0.28 concurrently, although you could use any two of these releases
    together.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在涉及多个源的复制设置中，不支持使用两个以上的MySQL服务器版本，无论源或副本MySQL服务器的数量如何。这个限制不仅适用于发布系列，还适用于同一发布系列中的版本号。例如，如果您正在使用链式或循环复制设置，您不能同时使用MySQL
    8.0.22、MySQL 8.0.24和MySQL 8.0.28，尽管您可以同时使用这些版本中的任意两个。
- en: Important
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It is strongly recommended to use the most recent release available within a
    given MySQL release series because replication (and other) capabilities are continually
    being improved. It is also recommended to upgrade sources and replicas that use
    early releases of a release series of MySQL to GA (production) releases when the
    latter become available for that release series.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议在给定的MySQL发布系列中使用最新版本，因为复制（和其他）功能不断得到改进。还建议在MySQL发布系列的早期版本的源和副本可用时升级到GA（生产）版本。
- en: From MySQL 8.0.14, the server version is recorded in the binary log for each
    transaction for the server that originally committed the transaction ([`original_server_version`](replication-options-source.html#sysvar_original_server_version)),
    and for the server that is the immediate source of the current server in the replication
    topology ([`immediate_server_version`](replication-options-source.html#sysvar_immediate_server_version)).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.14开始，二进制日志中为每个事务记录了原始提交事务的服务器版本（[`original_server_version`](replication-options-source.html#sysvar_original_server_version)），以及在复制拓扑中当前服务器的直接源服务器的服务器版本（[`immediate_server_version`](replication-options-source.html#sysvar_immediate_server_version)）。
- en: 'Replication from newer sources to older replicas might be possible, but is
    generally not supported. This is due to a number of factors:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 从更新的源到旧的副本的复制可能是可能的，但通常不受支持。这是由于许多因素：
- en: '**Binary log format changes. ** The binary log format can change between major
    releases. While we attempt to maintain backward compatibility, this is not always
    possible. A source might also have optional features enabled that are not understood
    by older replicas, such as binary log transaction compression, where the resulting
    compressed transaction payloads cannot be read by a replica at a release before
    MySQL 8.0.20.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二进制日志格式更改。** 二进制日志格式可能会在主要版本发布之间发生变化。虽然我们尽力保持向后兼容性，但这并非总是可能的。源可能还启用了旧副本不理解的可选功能，例如二进制日志事务压缩，导致压缩后的事务有效负载无法在MySQL
    8.0.20之前的版本中被副本读取。'
- en: This also has significant implications for upgrading replication servers; see
    [Section 19.5.3, “Upgrading a Replication Topology”](replication-upgrade.html
    "19.5.3 Upgrading a Replication Topology"), for more information.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这也对升级复制服务器有重大影响；有关更多信息，请参阅[第19.5.3节，“升级复制拓扑”](replication-upgrade.html "19.5.3 Upgrading
    a Replication Topology")。
- en: For more information about row-based replication, see [Section 19.2.1, “Replication
    Formats”](replication-formats.html "19.2.1 Replication Formats").
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关基于行的复制的更多信息，请参见[第 19.2.1 节，“复制格式”](replication-formats.html "19.2.1 复制格式")。
- en: '**SQL incompatibilities. ** You cannot replicate from a newer source to an
    older replica using statement-based replication if the statements to be replicated
    use SQL features available on the source but not on the replica.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL 不兼容性。** 如果要复制的语句使用源上可用但在副本上不可用的 SQL 功能，并且使用基于语句的复制从较新的源复制到较旧的副本是不允许的。'
- en: However, if both the source and the replica support row-based replication, and
    there are no data definition statements to be replicated that depend on SQL features
    found on the source but not on the replica, you can use row-based replication
    to replicate the effects of data modification statements even if the DDL run on
    the source is not supported on the replica.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，如果源和副本都支持基于行的复制，并且没有需要复制的数据定义语句依赖于源上发现但在副本上找不到的 SQL 功能，则可以使用基于行的复制来复制数据修改语句的效果，即使在源上运行的
    DDL 在副本上不受支持。
- en: In MySQL 8.0.26, incompatible changes were made to replication instrumentation
    names, including the names of thread stages, containing the terms “master”, which
    is changed to “source”, “slave”, which is changed to “replica”, and “mts” (for
    “multithreaded slave”), which is changed to “mta” (for “multithreaded applier”).
    Monitoring tools that work with these instrumentation names might be impacted.
    If the incompatible changes have an impact for you, set the [`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)
    system variable to `BEFORE_8_0_26` to make MySQL Server use the old versions of
    the names for the objects specified in the previous list. This enables monitoring
    tools that rely on the old names to continue working until they can be updated
    to use the new names.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.26 中，对复制仪器名称进行了不兼容的更改，包括线程阶段的名称，其中包含术语“master”，被更改为“source”，“slave”，被更改为“replica”，以及“mts”（代表“多线程从属”），被更改为“mta”（代表“多线程应用程序”）。使用这些仪器名称的监控工具可能会受到影响。如果不兼容的更改对您产生影响，请将[`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)系统变量设置为`BEFORE_8_0_26`，以使
    MySQL Server 使用前面列表中指定对象的旧版本名称。这样可以使依赖于旧名称的监控工具继续工作，直到它们可以更新为使用新名称。
- en: For more information on potential replication issues, see [Section 19.5.1, “Replication
    Features and Issues”](replication-features.html "19.5.1 Replication Features and
    Issues").
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有关潜在复制问题的更多信息，请参见[第 19.5.1 节，“复制功能和问题”](replication-features.html "19.5.1 复制功能和问题")。
