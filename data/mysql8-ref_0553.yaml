- en: 10.3.2 Primary Key Optimization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10.3.2 主键优化
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/primary-key-optimization.html](https://dev.mysql.com/doc/refman/8.0/en/primary-key-optimization.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/primary-key-optimization.html](https://dev.mysql.com/doc/refman/8.0/en/primary-key-optimization.html)
- en: The primary key for a table represents the column or set of columns that you
    use in your most vital queries. It has an associated index, for fast query performance.
    Query performance benefits from the `NOT NULL` optimization, because it cannot
    include any `NULL` values. With the `InnoDB` storage engine, the table data is
    physically organized to do ultra-fast lookups and sorts based on the primary key
    column or columns.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 表的主键代表您在最关键的查询中使用的列或列集。它有一个关联的索引，用于快速查询性能。查询性能受`NOT NULL`优化的益处，因为它不能包含任何`NULL`值。使用`InnoDB`存储引擎，表数据被物理组织以便根据主键列或列进行超快速查找和排序。
- en: If your table is big and important, but does not have an obvious column or set
    of columns to use as a primary key, you might create a separate column with auto-increment
    values to use as the primary key. These unique IDs can serve as pointers to corresponding
    rows in other tables when you join tables using foreign keys.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的表很大且重要，但没有明显的列或列集可用作主键，您可以创建一个带有自增值的单独列用作主键。这些唯一的ID可以在使用外键连接表时作为指向其他表中相应行的指针。
