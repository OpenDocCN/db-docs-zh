- en: 11.1.3 Date and Time Literals
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11.1.3 日期和时间文字
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html](https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html](https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html)
- en: '[Standard SQL and ODBC Date and Time Literals](date-and-time-literals.html#date-and-time-standard-sql-literals
    "Standard SQL and ODBC Date and Time Literals")'
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[标准 SQL 和 ODBC 日期和时间文字](date-and-time-literals.html#date-and-time-standard-sql-literals
    "标准 SQL 和 ODBC 日期和时间文字")'
- en: '[String and Numeric Literals in Date and Time Context](date-and-time-literals.html#date-and-time-string-numeric-literals
    "String and Numeric Literals in Date and Time Context")'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[日期和时间上下文中的字符串和数字文字](date-and-time-literals.html#date-and-time-string-numeric-literals
    "日期和时间上下文中的字符串和数字文字")'
- en: Date and time values can be represented in several formats, such as quoted strings
    or as numbers, depending on the exact type of the value and other factors. For
    example, in contexts where MySQL expects a date, it interprets any of `'2015-07-21'`,
    `'20150721'`, and `20150721` as a date.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 日期和时间值可以用几种格式表示，例如带引号的字符串或数字，具体取决于值的确切类型和其他因素。例如，在 MySQL 期望日期的上下文中，它会将 `'2015-07-21'`、`'20150721'`
    和 `20150721` 中的任何一个解释为日期。
- en: This section describes the acceptable formats for date and time literals. For
    more information about the temporal data types, such as the range of permitted
    values, see [Section 13.2, “Date and Time Data Types”](date-and-time-types.html
    "13.2 Date and Time Data Types").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了日期和时间文字的可接受格式。有关时间数据类型的更多信息，例如允许值的范围，请参阅 [第 13.2 节，“日期和时间数据类型”](date-and-time-types.html
    "13.2 日期和时间数据类型")。
- en: Standard SQL and ODBC Date and Time Literals
  id: totrans-6
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 标准 SQL 和 ODBC 日期和时间文字
- en: Standard SQL requires temporal literals to be specified using a type keyword
    and a string. The space between the keyword and string is optional.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 标准 SQL 要求使用类型关键字和字符串指定时间文字。关键字和字符串之间的空格是可选的。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: MySQL recognizes but, unlike standard SQL, does not require the type keyword.
    Applications that are to be standard-compliant should include the type keyword
    for temporal literals.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 识别但不像标准 SQL 那样需要类型关键字。要符合标准的应用程序应该为时间文字包含类型关键字。
- en: 'MySQL also recognizes the ODBC syntax corresponding to the standard SQL syntax:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 也识别与标准 SQL 语法对应的 ODBC 语法：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: MySQL uses the type keywords and the ODBC constructions to produce [`DATE`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), [`TIME`](time.html "13.2.3 The
    TIME Type"), and [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types") values, respectively, including a trailing fractional seconds part if
    specified. The [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types") syntax produces a [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types") value in MySQL because [`DATETIME`](datetime.html "13.2.2 The
    DATE, DATETIME, and TIMESTAMP Types") has a range that more closely corresponds
    to the standard SQL [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and
    TIMESTAMP Types") type, which has a year range from `0001` to `9999`. (The MySQL
    [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    year range is `1970` to `2038`.)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 使用类型关键字和 ODBC 结构来生成 [`DATE`](datetime.html "13.2.2 DATE、DATETIME 和 TIMESTAMP
    类型")、[`TIME`](time.html "13.2.3 TIME 类型") 和 [`DATETIME`](datetime.html "13.2.2
    DATE、DATETIME 和 TIMESTAMP 类型") 值，包括指定的尾部分数秒部分。[`TIMESTAMP`](datetime.html "13.2.2
    DATE、DATETIME 和 TIMESTAMP 类型") 语法在 MySQL 中生成一个 [`DATETIME`](datetime.html "13.2.2
    DATE、DATETIME 和 TIMESTAMP 类型") 值，因为 [`DATETIME`](datetime.html "13.2.2 DATE、DATETIME
    和 TIMESTAMP 类型") 的范围更接近标准 SQL [`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME
    和 TIMESTAMP 类型") 类型，其年份范围从 `0001` 到 `9999`。（MySQL [`TIMESTAMP`](datetime.html
    "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型") 的年份范围是 `1970` 到 `2038`。）
- en: String and Numeric Literals in Date and Time Context
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期和时间上下文中的字符串和数字文字
- en: 'MySQL recognizes [`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types") values in these formats:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 识别以这些格式表示的 [`DATE`](datetime.html "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型")
    值：
- en: 'As a string in either `''*`YYYY-MM-DD`*''` or `''*`YY-MM-DD`*''` format. A
    “relaxed” syntax is permitted, but is deprecated: Any punctuation character may
    be used as the delimiter between date parts. For example, `''2012-12-31''`, `''2012/12/31''`,
    `''2012^12^31''`, and `''2012@12@31''` are equivalent. Beginning with MySQL 8.0.29,
    using any character other than the dash (`-`) as the delimiter raises a warning,
    as shown here:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为字符串，格式为`'*`YYYY-MM-DD`*'`或`'*`YY-MM-DD`*'`。允许使用“宽松”语法，但已被弃用：任何标点字符都可以用作日期部分之间的分隔符。例如，`'2012-12-31'`，`'2012/12/31'`，`'2012^12^31'`和`'2012@12@31'`是等效的。从MySQL
    8.0.29开始，使用除了破折号（`-`）作为分隔符之外的任何字符会引发警告，如下所示：
- en: '[PRE2]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As a string with no delimiters in either `'*`YYYYMMDD`*'` or `'*`YYMMDD`*'`
    format, provided that the string makes sense as a date. For example, `'20070523'`
    and `'070523'` are interpreted as `'2007-05-23'`, but `'071332'` is illegal (it
    has nonsensical month and day parts) and becomes `'0000-00-00'`.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为没有分隔符的字符串，格式为`'*`YYYYMMDD`*'`或`'*`YYMMDD`*'`，前提是字符串作为日期是有意义的。例如，`'20070523'`和`'070523'`被解释为`'2007-05-23'`，但`'071332'`是非法的（具有无意义的月份和日期部分），变为`'0000-00-00'`。
- en: As a number in either *`YYYYMMDD`* or *`YYMMDD`* format, provided that the number
    makes sense as a date. For example, `19830905` and `830905` are interpreted as
    `'1983-09-05'`.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为数字，格式为*`YYYYMMDD`*或*`YYMMDD`*，前提是数字作为日期是有意义的。例如，`19830905`和`830905`被解释为`'1983-09-05'`。
- en: 'MySQL recognizes [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and
    TIMESTAMP Types") and [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types") values in these formats:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL在这些格式中识别[`DATETIME`](datetime.html "13.2.2 日期、DATETIME和TIMESTAMP类型")和[`TIMESTAMP`](datetime.html
    "13.2.2 日期、DATETIME和TIMESTAMP类型")值：
- en: 'As a string in either `''*`YYYY-MM-DD hh:mm:ss`*''` or `''*`YY-MM-DD hh:mm:ss`*''`
    format. MySQL also permits a “relaxed” syntax here, although this is deprecated:
    Any punctuation character may be used as the delimiter between date parts or time
    parts. For example, `''2012-12-31 11:30:45''`, `''2012^12^31 11+30+45''`, `''2012/12/31
    11*30*45''`, and `''2012@12@31 11^30^45''` are equivalent. Beginning with MySQL
    8.0.29, use of any characters as delimiters in such values, other than the dash
    (`-`) for the date part and the colon (`:`) for the time part, raises a warning,
    as shown here:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为字符串，格式为`'*`YYYY-MM-DD hh:mm:ss`*'`或`'*`YY-MM-DD hh:mm:ss`*'`。MySQL还允许在此处使用“宽松”语法，尽管这已被弃用：任何标点字符都可以用作日期部分或时间部分之间的分隔符。例如，`'2012-12-31
    11:30:45'`，`'2012^12^31 11+30+45'`，`'2012/12/31 11*30*45'`和`'2012@12@31 11^30^45'`是等效的。从MySQL
    8.0.29开始，在这些值中使用除了破折号（`-`）用于日期部分和冒号（`:`）用于时间部分之外的任何字符作为分隔符会引发警告，如下所示：
- en: '[PRE3]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The only delimiter recognized between a date and time part and a fractional
    seconds part is the decimal point.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 日期和时间部分与小数秒部分之间唯一识别的分隔符是小数点。
- en: The date and time parts can be separated by `T` rather than a space. For example,
    `'2012-12-31 11:30:45'` `'2012-12-31T11:30:45'` are equivalent.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 日期和时间部分可以用`T`而不是空格分隔。例如，`'2012-12-31 11:30:45'`和`'2012-12-31T11:30:45'`是等效的。
- en: 'Previously, MySQL supported arbitrary numbers of leading and trailing whitespace
    characters in date and time values, as well as between the date and time parts
    of `DATETIME` and `TIMESTAMP` values. In MySQL 8.0.29 and later, this behavior
    is deprecated, and the presence of excess whitespace characters triggers a warning,
    as shown here:'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，MySQL支持日期和时间值中任意数量的前导和尾随空格字符，以及在`DATETIME`和`TIMESTAMP`值的日期和时间部分之间的空格字符。在MySQL
    8.0.29及更高版本中，此行为已被弃用，多余的空格字符会触发警告，如下所示：
- en: '[PRE4]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Also beginning with MySQL 8.0.29, a warning is raised when whitespace characters
    other than the space character is used, like this:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.29开始，当使用空格字符以外的空格字符时，会引发警告，如下所示：
- en: '[PRE5]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Only one such warning is raised per temporal value, even though multiple issues
    may exist with delimiters, whitespace, or both, as shown in the following series
    of statements:'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个时间值只会引发一次此类警告，即使分隔符、空格或两者都存在多个问题，如下面的一系列语句所示：
- en: '[PRE6]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As a string with no delimiters in either `'*`YYYYMMDDhhmmss`*'` or `'*`YYMMDDhhmmss`*'`
    format, provided that the string makes sense as a date. For example, `'20070523091528'`
    and `'070523091528'` are interpreted as `'2007-05-23 09:15:28'`, but `'071122129015'`
    is illegal (it has a nonsensical minute part) and becomes `'0000-00-00 00:00:00'`.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为没有分隔符的字符串，格式为`'*`YYYYMMDDhhmmss`*'`或`'*`YYMMDDhhmmss`*'`，前提是字符串作为日期是有意义的。例如，`'20070523091528'`和`'070523091528'`被解释为`'2007-05-23
    09:15:28'`，但`'071122129015'`是非法的（具有无意义的分钟部分），变为`'0000-00-00 00:00:00'`。
- en: As a number in either *`YYYYMMDDhhmmss`* or *`YYMMDDhhmmss`* format, provided
    that the number makes sense as a date. For example, `19830905132800` and `830905132800`
    are interpreted as `'1983-09-05 13:28:00'`.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为*`YYYYMMDDhhmmss`*或*`YYMMDDhhmmss`*格式的数字，前提是该数字作为日期是有意义的。例如，`19830905132800`和`830905132800`被解释为`'1983-09-05
    13:28:00'`。
- en: A [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    or [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    value can include a trailing fractional seconds part in up to microseconds (6
    digits) precision. The fractional part should always be separated from the rest
    of the time by a decimal point; no other fractional seconds delimiter is recognized.
    For information about fractional seconds support in MySQL, see [Section 13.2.6,
    “Fractional Seconds in Time Values”](fractional-seconds.html "13.2.6 Fractional
    Seconds in Time Values").
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DATETIME`](datetime.html "13.2.2 日期、时间和时间戳类型")或[`TIMESTAMP`](datetime.html
    "13.2.2 日期、时间和时间戳类型")值可以包括高达微秒（6位数字）精度的尾部小数部分。小数部分应始终与其余时间部分用小数点分隔；不识别其他小数秒分隔符。有关MySQL中小数秒支持的信息，请参见[第13.2.6节，“时间值中的小数秒”](fractional-seconds.html
    "13.2.6 时间值中的小数秒")。'
- en: 'Dates containing two-digit year values are ambiguous because the century is
    unknown. MySQL interprets two-digit year values using these rules:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 包含两位数年份值的日期是模棱两可的，因为世纪未知。MySQL使用以下规则解释两位数年份值：
- en: Year values in the range `70-99` become `1970-1999`.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 年份范围在`70-99`之间的值变为`1970-1999`。
- en: Year values in the range `00-69` become `2000-2069`.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 年份范围在`00-69`之间的值变为`2000-2069`。
- en: See also [Section 13.2.9, “2-Digit Years in Dates”](two-digit-years.html "13.2.9 2-Digit
    Years in Dates").
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅[第13.2.9节，“日期中的2位数年份”](two-digit-years.html "13.2.9 日期中的2位数年份")。
- en: For values specified as strings that include date part delimiters, it is unnecessary
    to specify two digits for month or day values that are less than `10`. `'2015-6-9'`
    is the same as `'2015-06-09'`. Similarly, for values specified as strings that
    include time part delimiters, it is unnecessary to specify two digits for hour,
    minute, or second values that are less than `10`. `'2015-10-30 1:2:3'` is the
    same as `'2015-10-30 01:02:03'`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于指定为包含日期部分分隔符的字符串值，无需为小于`10`的月份或日期值指定两位数。`'2015-6-9'`与`'2015-06-09'`相同。同样，对于指定为包含时间部分分隔符的字符串值，无需为小于`10`的小时、分钟或秒值指定两位数。`'2015-10-30
    1:2:3'`与`'2015-10-30 01:02:03'`相同。
- en: Values specified as numbers should be 6, 8, 12, or 14 digits long. If a number
    is 8 or 14 digits long, it is assumed to be in *`YYYYMMDD`* or *`YYYYMMDDhhmmss`*
    format and that the year is given by the first 4 digits. If the number is 6 or
    12 digits long, it is assumed to be in *`YYMMDD`* or *`YYMMDDhhmmss`* format and
    that the year is given by the first 2 digits. Numbers that are not one of these
    lengths are interpreted as though padded with leading zeros to the closest length.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 指定为数字的值应为6、8、12或14位数字长。如果数字为8或14位长，则假定为*`YYYYMMDD`*或*`YYYYMMDDhhmmss`*格式，并且年份由前4位数字给出。如果数字为6或12位长，则假定为*`YYMMDD`*或*`YYMMDDhhmmss`*格式，并且年份由前2位数字给出。长度不是这些之一的数字被解释为用前导零填充到最接近的长度。
- en: Values specified as nondelimited strings are interpreted according their length.
    For a string 8 or 14 characters long, the year is assumed to be given by the first
    4 characters. Otherwise, the year is assumed to be given by the first 2 characters.
    The string is interpreted from left to right to find year, month, day, hour, minute,
    and second values, for as many parts as are present in the string. This means
    you should not use strings that have fewer than 6 characters. For example, if
    you specify `'9903'`, thinking that represents March, 1999, MySQL converts it
    to the “zero” date value. This occurs because the year and month values are `99`
    and `03`, but the day part is completely missing. However, you can explicitly
    specify a value of zero to represent missing month or day parts. For example,
    to insert the value `'1999-03-00'`, use `'990300'`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 指定为无分隔符字符串的值根据其长度进行解释。对于8或14个字符长的字符串，假定年份由前4个字符给出。否则，假定年份由前2个字符给出。字符串从左到右解释以找到年、月、日、小时、分钟和秒值，对于字符串中存在的部分。这意味着您不应使用少于6个字符的字符串。例如，如果您指定`'9903'`，认为代表1999年3月，MySQL会将其转换为“零”日期值。这是因为年份和月份值为`99`和`03`，但日期部分完全缺失。但是，您可以明确指定零值表示缺失的月份或日期部分。例如，要插入值`'1999-03-00'`，请使用`'990300'`。
- en: 'MySQL recognizes [`TIME`](time.html "13.2.3 The TIME Type") values in these
    formats:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL识别这些格式的[`TIME`](time.html "13.2.3 The TIME Type")值：
- en: 'As a string in *`''D hh:mm:ss''`* format. You can also use one of the following
    “relaxed” syntaxes: *`''hh:mm:ss''`*, *`''hh:mm''`*, *`''D hh:mm''`*, *`''D hh''`*,
    or *`''ss''`*. Here *`D`* represents days and can have a value from 0 to 34.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为*`'D hh:mm:ss'`*格式的字符串。您还可以使用以下“宽松”语法之一：*`'hh:mm:ss'`*、*`'hh:mm'`*、*`'D hh:mm'`*、*`'D
    hh'`*或*`'ss'`*。这里*`D`*代表天数，可以取值从0到34。
- en: As a string with no delimiters in *`'hhmmss'`* format, provided that it makes
    sense as a time. For example, `'101112'` is understood as `'10:11:12'`, but `'109712'`
    is illegal (it has a nonsensical minute part) and becomes `'00:00:00'`.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为没有分隔符的字符串，采用*`'hhmmss'`*格式，只要它作为时间是有意义的。例如，`'101112'`被理解为`'10:11:12'`，但`'109712'`是非法的（它有一个荒谬的分钟部分），变成了`'00:00:00'`。
- en: 'As a number in *`hhmmss`* format, provided that it makes sense as a time. For
    example, `101112` is understood as `''10:11:12''`. The following alternative formats
    are also understood: *`ss`*, *`mmss`*, or *`hhmmss`*.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为*`hhmmss`*格式的数字，只要它作为时间是有意义的。例如，`101112`被理解为`'10:11:12'`。还可以理解以下替代格式：*`ss`*、*`mmss`*或*`hhmmss`*。
- en: A trailing fractional seconds part is recognized in the *`'D hh:mm:ss.fraction'`*,
    *`'hh:mm:ss.fraction'`*, *`'hhmmss.fraction'`*, and *`hhmmss.fraction`* time formats,
    where `fraction` is the fractional part in up to microseconds (6 digits) precision.
    The fractional part should always be separated from the rest of the time by a
    decimal point; no other fractional seconds delimiter is recognized. For information
    about fractional seconds support in MySQL, see [Section 13.2.6, “Fractional Seconds
    in Time Values”](fractional-seconds.html "13.2.6 Fractional Seconds in Time Values").
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在*`'D hh:mm:ss.fraction'`*、*`'hh:mm:ss.fraction'`*、*`'hhmmss.fraction'`*和*`hhmmss.fraction`*时间格式中识别尾随的小数秒部分，其中`fraction`是高达微秒（6位数字）精度的小数部分。小数部分应始终用小数点与时间的其余部分分隔开；不识别其他小数秒分隔符。有关MySQL中小数秒支持的信息，请参见[Section 13.2.6,
    “Fractional Seconds in Time Values”](fractional-seconds.html "13.2.6 Fractional
    Seconds in Time Values")。
- en: For [`TIME`](time.html "13.2.3 The TIME Type") values specified as strings that
    include a time part delimiter, it is unnecessary to specify two digits for hours,
    minutes, or seconds values that are less than `10`. `'8:3:2'` is the same as `'08:03:02'`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于作为包含时间部分分隔符的字符串指定的[`TIME`](time.html "13.2.3 The TIME Type")值，不需要为小时、分钟或秒值少于`10`的两位数指定两位数。`'8:3:2'`等同于`'08:03:02'`。
- en: 'Beginning with MySQL 8.0.19, you can specify a time zone offset when inserting
    `TIMESTAMP` and `DATETIME` values into a table. The offset is appended to the
    time part of a datetime literal, with no intravening spaces, and uses the same
    format used for setting the [`time_zone`](server-system-variables.html#sysvar_time_zone)
    system variable, with the following exceptions:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.19开始，您可以在将`TIMESTAMP`和`DATETIME`值插入表时指定时区偏移量。偏移量附加到日期时间文字的时间部分，没有空格，并使用用于设置[`time_zone`](server-system-variables.html#sysvar_time_zone)系统变量的相同格式，以下是一些例外情况：
- en: For hour values less than 10, a leading zero is required.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于小时值小于10的情况，需要前导零。
- en: The value `'-00:00'` is rejected.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值`'-00:00'`被拒绝。
- en: Time zone names such as `'EET'` and `'Asia/Shanghai'` cannot be used; `'SYSTEM'`
    also cannot be used in this context.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 诸如`'EET'`和`'Asia/Shanghai'`之类的时区名称不能使用；在这种情况下也不能使用`'SYSTEM'`。
- en: The value inserted must not have a zero for the month part, the day part, or
    both parts. This is enforced beginning with MySQL 8.0.22, regardless of the server
    SQL mode setting.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 插入的值不能在月份部分、日期部分或两部分中有零。从MySQL 8.0.22开始执行此规则，无论服务器SQL模式设置如何。
- en: 'This example illustrates inserting datetime values with time zone offsets into
    `TIMESTAMP` and `DATETIME` columns using different [`time_zone`](server-system-variables.html#sysvar_time_zone)
    settings, and then retrieving them:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子演示了使用不同的[`time_zone`](server-system-variables.html#sysvar_time_zone)设置将带有时区偏移的日期时间值插入`TIMESTAMP`和`DATETIME`列，然后检索它们：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The offset is not displayed when selecting a datetime value, even if one was
    used when inserting it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在插入时使用了偏移量，选择日期时间值时也不显示偏移量。
- en: The range of supported offset values is `-13:59` to `+14:00`, inclusive.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的偏移值范围是`-13:59`到`+14:00`，包括边界值。
- en: Datetime literals that include time zone offsets are accepted as parameter values
    by prepared statements.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 包含时区偏移的日期时间文字可以作为预处理语句的参数值接受。
