- en: 7.1.10 Server Status Variables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7.1.10 服务器状态变量
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/server-status-variables.html](https://dev.mysql.com/doc/refman/8.0/en/server-status-variables.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/server-status-variables.html](https://dev.mysql.com/doc/refman/8.0/en/server-status-variables.html)
- en: The MySQL server maintains many status variables that provide information about
    its operation. You can view these variables and their values by using the `SHOW
    [GLOBAL | SESSION] STATUS` statement (see [Section 15.7.7.37, “SHOW STATUS Statement”](show-status.html
    "15.7.7.37 SHOW STATUS Statement")). The optional `GLOBAL` keyword aggregates
    the values over all connections, and `SESSION` shows the values for the current
    connection.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL服务器维护许多状态变量，提供有关其操作的信息。您可以通过使用`SHOW [GLOBAL | SESSION] STATUS`语句（参见[第15.7.7.37节，“SHOW
    STATUS语句”](show-status.html "15.7.7.37 SHOW STATUS语句")）查看这些变量及其值。可选的`GLOBAL`关键字聚合所有连接的值，`SESSION`显示当前连接的值。
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Many status variables are reset to 0 by the [`FLUSH STATUS`](flush.html#flush-status)
    statement.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 许多状态变量通过[`FLUSH STATUS`](flush.html#flush-status)语句重置为0。
- en: This section provides a description of each status variable. For a status variable
    summary, see [Section 7.1.6, “Server Status Variable Reference”](server-status-variable-reference.html
    "7.1.6 Server Status Variable Reference"). For information about status variables
    specific to NDB Cluster, see [Section 25.4.3.9.3, “NDB Cluster Status Variables”](mysql-cluster-options-variables.html#mysql-cluster-status-variables
    "25.4.3.9.3 NDB Cluster Status Variables").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了每个状态变量的描述。有关状态变量摘要，请参见[第7.1.6节，“服务器状态变量参考”](server-status-variable-reference.html
    "7.1.6 服务器状态变量参考")。有关特定于NDB集群的状态变量信息，请参见[第25.4.3.9.3节，“NDB集群状态变量”](mysql-cluster-options-variables.html#mysql-cluster-status-variables
    "25.4.3.9.3 NDB集群状态变量")。
- en: The status variables have the following meanings.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 状态变量具有以下含义。
- en: '[`Aborted_clients`](server-status-variables.html#statvar_Aborted_clients)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Aborted_clients`](server-status-variables.html#statvar_Aborted_clients)'
- en: The number of connections that were aborted because the client died without
    closing the connection properly. See [Section B.3.2.9, “Communication Errors and
    Aborted Connections”](communication-errors.html "B.3.2.9 Communication Errors
    and Aborted Connections").
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接由于客户端异常关闭连接而中止的次数。请参见[第B.3.2.9节，“通信错误和中止连接”](communication-errors.html "B.3.2.9
    通信错误和中止连接")。
- en: '[`Aborted_connects`](server-status-variables.html#statvar_Aborted_connects)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Aborted_connects`](server-status-variables.html#statvar_Aborted_connects)'
- en: The number of failed attempts to connect to the MySQL server. See [Section B.3.2.9,
    “Communication Errors and Aborted Connections”](communication-errors.html "B.3.2.9 Communication
    Errors and Aborted Connections").
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试连接到MySQL服务器失败的次数。请参见[第B.3.2.9节，“通信错误和中止连接”](communication-errors.html "B.3.2.9
    通信错误和中止连接")。
- en: For additional connection-related information, check the [`Connection_errors_*`xxx`*`](server-status-variables.html#statvar_Connection_errors_xxx)
    status variables and the [`host_cache`](performance-schema-host-cache-table.html
    "29.12.21.3 The host_cache Table") table.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要获取更多与连接相关的信息，请查看[`Connection_errors_*`xxx`*`](server-status-variables.html#statvar_Connection_errors_xxx)状态变量和[`host_cache`](performance-schema-host-cache-table.html
    "29.12.21.3 host_cache表")表。
- en: '[`Authentication_ldap_sasl_supported_methods`](server-status-variables.html#statvar_Authentication_ldap_sasl_supported_methods)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Authentication_ldap_sasl_supported_methods`](server-status-variables.html#statvar_Authentication_ldap_sasl_supported_methods)'
- en: 'The `authentication_ldap_sasl` plugin that implements SASL LDAP authentication
    supports multiple authentication methods, but depending on host system configuration,
    they might not all be available. The [`Authentication_ldap_sasl_supported_methods`](server-status-variables.html#statvar_Authentication_ldap_sasl_supported_methods)
    variable provides discoverability for the supported methods. Its value is a string
    consisting of supported method names separated by spaces. Example: `"SCRAM-SHA
    1 SCRAM-SHA-256 GSSAPI"`'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 实现SASL LDAP身份验证的`authentication_ldap_sasl`插件支持多种身份验证方法，但根据主机系统配置的不同，它们可能并非全部可用。[`Authentication_ldap_sasl_supported_methods`](server-status-variables.html#statvar_Authentication_ldap_sasl_supported_methods)变量提供了支持的方法的可发现性。其值是由支持的方法名称以空格分隔的字符串。例如："SCRAM-SHA
    1 SCRAM-SHA-256 GSSAPI"
- en: This variable was added in MySQL 8.0.21.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量已添加到MySQL 8.0.21中。
- en: '[`Binlog_cache_disk_use`](server-status-variables.html#statvar_Binlog_cache_disk_use)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Binlog_cache_disk_use`](server-status-variables.html#statvar_Binlog_cache_disk_use)'
- en: The number of transactions that used the temporary binary log cache but that
    exceeded the value of [`binlog_cache_size`](replication-options-binary-log.html#sysvar_binlog_cache_size)
    and used a temporary file to store statements from the transaction.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用临时二进制日志缓存的事务数量，但超过了[`binlog_cache_size`](replication-options-binary-log.html#sysvar_binlog_cache_size)的值，并使用临时文件存储事务中的语句。
- en: The number of nontransactional statements that caused the binary log transaction
    cache to be written to disk is tracked separately in the [`Binlog_stmt_cache_disk_use`](server-status-variables.html#statvar_Binlog_stmt_cache_disk_use)
    status variable.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 导致二进制日志事务缓存写入磁盘的非事务语句的数量在[`Binlog_stmt_cache_disk_use`](server-status-variables.html#statvar_Binlog_stmt_cache_disk_use)状态变量中单独跟踪。
- en: '[`Acl_cache_items_count`](server-status-variables.html#statvar_Acl_cache_items_count)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Acl_cache_items_count`](server-status-variables.html#statvar_Acl_cache_items_count)'
- en: The number of cached privilege objects. Each object is the privilege combination
    of a user and its active roles.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 缓存的权限对象数量。每个对象是用户及其活动角色的权限组合。
- en: '[`Binlog_cache_use`](server-status-variables.html#statvar_Binlog_cache_use)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Binlog_cache_use`](server-status-variables.html#statvar_Binlog_cache_use)'
- en: The number of transactions that used the binary log cache.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用二进制日志缓存的事务数量。
- en: '[`Binlog_stmt_cache_disk_use`](server-status-variables.html#statvar_Binlog_stmt_cache_disk_use)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Binlog_stmt_cache_disk_use`](server-status-variables.html#statvar_Binlog_stmt_cache_disk_use)'
- en: The number of nontransaction statements that used the binary log statement cache
    but that exceeded the value of [`binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_binlog_stmt_cache_size)
    and used a temporary file to store those statements.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用二进制日志语句缓存的非事务语句的数量，但超过了[`binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_binlog_stmt_cache_size)的值，并使用临时文件存储这些语句。
- en: '[`Binlog_stmt_cache_use`](server-status-variables.html#statvar_Binlog_stmt_cache_use)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Binlog_stmt_cache_use`](server-status-variables.html#statvar_Binlog_stmt_cache_use)'
- en: The number of nontransactional statements that used the binary log statement
    cache.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用二进制日志语句缓存的非事务语句的数量。
- en: '[`Bytes_received`](server-status-variables.html#statvar_Bytes_received)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Bytes_received`](server-status-variables.html#statvar_Bytes_received)'
- en: The number of bytes received from all clients.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从所有客户端接收的字节数。
- en: '[`Bytes_sent`](server-status-variables.html#statvar_Bytes_sent)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Bytes_sent`](server-status-variables.html#statvar_Bytes_sent)'
- en: The number of bytes sent to all clients.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 发送给所有客户端的字节数。
- en: '[`Caching_sha2_password_rsa_public_key`](server-status-variables.html#statvar_Caching_sha2_password_rsa_public_key)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Caching_sha2_password_rsa_public_key`](server-status-variables.html#statvar_Caching_sha2_password_rsa_public_key)'
- en: The public key used by the `caching_sha2_password` authentication plugin for
    RSA key pair-based password exchange. The value is nonempty only if the server
    successfully initializes the private and public keys in the files named by the
    [`caching_sha2_password_private_key_path`](server-system-variables.html#sysvar_caching_sha2_password_private_key_path)
    and [`caching_sha2_password_public_key_path`](server-system-variables.html#sysvar_caching_sha2_password_public_key_path)
    system variables. The value of [`Caching_sha2_password_rsa_public_key`](server-status-variables.html#statvar_Caching_sha2_password_rsa_public_key)
    comes from the latter file.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`caching_sha2_password`身份验证插件用于RSA密钥对密码交换的公钥。仅当服务器成功初始化由[`caching_sha2_password_private_key_path`](server-system-variables.html#sysvar_caching_sha2_password_private_key_path)和[`caching_sha2_password_public_key_path`](server-system-variables.html#sysvar_caching_sha2_password_public_key_path)系统变量命名的文件中的私钥和公钥时，该值才不为空。[`Caching_sha2_password_rsa_public_key`](server-status-variables.html#statvar_Caching_sha2_password_rsa_public_key)的值来自后者的文件。'
- en: '`Com_*`xxx`*`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Com_*`xxx`*`'
- en: The `Com_*`xxx`*` statement counter variables indicate the number of times each
    *`xxx`* statement has been executed. There is one status variable for each type
    of statement. For example, `Com_delete` and `Com_update` count [`DELETE`](delete.html
    "15.2.2 DELETE Statement") and [`UPDATE`](update.html "15.2.17 UPDATE Statement")
    statements, respectively. `Com_delete_multi` and `Com_update_multi` are similar
    but apply to [`DELETE`](delete.html "15.2.2 DELETE Statement") and [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") statements that use multiple-table syntax.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Com_*`xxx`*`语句计数变量指示每个*`xxx`*语句已执行的次数。每种类型的语句都有一个状态变量。例如，`Com_delete`和`Com_update`分别计算[`DELETE`](delete.html
    "15.2.2 DELETE Statement")和[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句的次数。`Com_delete_multi`和`Com_update_multi`类似，但适用于使用多表语法的[`DELETE`](delete.html
    "15.2.2 DELETE Statement")和[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句。'
- en: All `Com_stmt_*`xxx`*` variables are increased even if a prepared statement
    argument is unknown or an error occurred during execution. In other words, their
    values correspond to the number of requests issued, not to the number of requests
    successfully completed. For example, because status variables are initialized
    for each server startup and do not persist across restarts, the `Com_restart`
    and `Com_shutdown` variables that track [`RESTART`](restart.html "15.7.8.8 RESTART
    Statement") and [`SHUTDOWN`](shutdown.html "15.7.8.9 SHUTDOWN Statement") statements
    normally have a value of zero, but can be nonzero if [`RESTART`](restart.html
    "15.7.8.8 RESTART Statement") or [`SHUTDOWN`](shutdown.html "15.7.8.9 SHUTDOWN
    Statement") statements were executed but failed.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有`Com_stmt_*`xxx`*`变量都会增加，即使准备语句参数未知或在执行过程中发生错误。换句话说，它们的值对应于发出的请求次数，而不是成功完成的请求次数。例如，因为状态变量在每次服务器启动时都会初始化，并且不会在重新启动时保留，跟踪[`RESTART`](restart.html
    "15.7.8.8 RESTART Statement")和[`SHUTDOWN`](shutdown.html "15.7.8.9 SHUTDOWN Statement")语句的`Com_restart`和`Com_shutdown`变量通常值为零，但如果执行了但失败了[`RESTART`](restart.html
    "15.7.8.8 RESTART Statement")或[`SHUTDOWN`](shutdown.html "15.7.8.9 SHUTDOWN Statement")语句，则可以为非零。
- en: 'The `Com_stmt_*`xxx`*` status variables are as follows:'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Com_stmt_*`xxx`*`状态变量如下：'
- en: '`Com_stmt_prepare`'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Com_stmt_prepare`'
- en: '`Com_stmt_execute`'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Com_stmt_execute`'
- en: '`Com_stmt_fetch`'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Com_stmt_fetch`'
- en: '`Com_stmt_send_long_data`'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Com_stmt_send_long_data`'
- en: '`Com_stmt_reset`'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Com_stmt_reset`'
- en: '`Com_stmt_close`'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Com_stmt_close`'
- en: Those variables stand for prepared statement commands. Their names refer to
    the `COM_*`xxx`*` command set used in the network layer. In other words, their
    values increase whenever prepared statement API calls such as **mysql_stmt_prepare()**,
    **mysql_stmt_execute()**, and so forth are executed. However, `Com_stmt_prepare`,
    `Com_stmt_execute` and `Com_stmt_close` also increase for [`PREPARE`](prepare.html
    "15.5.1 PREPARE Statement"), [`EXECUTE`](execute.html "15.5.2 EXECUTE Statement"),
    or [`DEALLOCATE PREPARE`](deallocate-prepare.html "15.5.3 DEALLOCATE PREPARE Statement"),
    respectively. Additionally, the values of the older statement counter variables
    `Com_prepare_sql`, `Com_execute_sql`, and `Com_dealloc_sql` increase for the [`PREPARE`](prepare.html
    "15.5.1 PREPARE Statement"), [`EXECUTE`](execute.html "15.5.2 EXECUTE Statement"),
    and [`DEALLOCATE PREPARE`](deallocate-prepare.html "15.5.3 DEALLOCATE PREPARE
    Statement") statements. `Com_stmt_fetch` stands for the total number of network
    round-trips issued when fetching from cursors.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些变量代表准备语句命令。它们的名称指的是在网络层中使用的`COM_*`xxx`*`命令集。换句话说，每当执行准备语句API调用，如**mysql_stmt_prepare()**、**mysql_stmt_execute()**等时，它们的值会增加。然而，`Com_stmt_prepare`、`Com_stmt_execute`和`Com_stmt_close`也会分别增加[`PREPARE`](prepare.html
    "15.5.1 PREPARE Statement")、[`EXECUTE`](execute.html "15.5.2 EXECUTE Statement")或[`DEALLOCATE
    PREPARE`](deallocate-prepare.html "15.5.3 DEALLOCATE PREPARE Statement")。此外，旧的语句计数变量`Com_prepare_sql`、`Com_execute_sql`和`Com_dealloc_sql`的值也会增加[`PREPARE`](prepare.html
    "15.5.1 PREPARE Statement")、[`EXECUTE`](execute.html "15.5.2 EXECUTE Statement")和[`DEALLOCATE
    PREPARE`](deallocate-prepare.html "15.5.3 DEALLOCATE PREPARE Statement")语句。`Com_stmt_fetch`代表从游标中获取时发出的网络往返总数。
- en: '`Com_stmt_reprepare` indicates the number of times statements were automatically
    reprepared by the server, for example, after metadata changes to tables or views
    referred to by the statement. A reprepare operation increments `Com_stmt_reprepare`,
    and also `Com_stmt_prepare`.'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Com_stmt_reprepare` 表示服务器自动重新准备语句的次数，例如，在语句引用的表或视图的元数据更改后。重新准备操作会增加`Com_stmt_reprepare`，也会增加`Com_stmt_prepare`。'
- en: '`Com_explain_other` indicates the number of [`EXPLAIN FOR CONNECTION`](explain.html
    "15.8.2 EXPLAIN Statement") statements executed. See [Section 10.8.4, “Obtaining
    Execution Plan Information for a Named Connection”](explain-for-connection.html
    "10.8.4 Obtaining Execution Plan Information for a Named Connection").'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Com_explain_other` 表示执行的[`EXPLAIN FOR CONNECTION`](explain.html "15.8.2 EXPLAIN
    Statement")语句的数量。请参阅[第10.8.4节，“获取命名连接的执行计划信息”](explain-for-connection.html "10.8.4 Obtaining
    Execution Plan Information for a Named Connection")。'
- en: '`Com_change_repl_filter` indicates the number of [`CHANGE REPLICATION FILTER`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement") statements executed.'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Com_change_repl_filter` 表示执行的[`CHANGE REPLICATION FILTER`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement")语句的数量。'
- en: '[`Compression`](server-status-variables.html#statvar_Compression)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`压缩`](server-status-variables.html#statvar_Compression)'
- en: Whether the client connection uses compression in the client/server protocol.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 客户端连接是否在客户端/服务器协议中使用压缩。
- en: As of MySQL 8.0.18, this status variable is deprecated; expect it to be removed
    in a future version of MySQL. See [Configuring Legacy Connection Compression](connection-compression-control.html#connection-compression-legacy-configuration
    "Configuring Legacy Connection Compression").
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.18，此状态变量已弃用；预计将在未来的MySQL版本中移除。请参阅[Configuring Legacy Connection
    Compression](connection-compression-control.html#connection-compression-legacy-configuration
    "Configuring Legacy Connection Compression")。
- en: '[`Compression_algorithm`](server-status-variables.html#statvar_Compression_algorithm)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Compression_algorithm`](server-status-variables.html#statvar_Compression_algorithm)'
- en: The name of the compression algorithm in use for the current connection to the
    server. The value can be any algorithm permitted in the value of the [`protocol_compression_algorithms`](server-system-variables.html#sysvar_protocol_compression_algorithms)
    system variable. For example, the value is `uncompressed` if the connection does
    not use compression, or `zlib` if the connection uses the `zlib` algorithm.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前连接到服务器的压缩算法的名称。该值可以是[`protocol_compression_algorithms`](server-system-variables.html#sysvar_protocol_compression_algorithms)系统变量值中允许的任何算法。例如，如果连接不使用压缩，则值为`uncompressed`，如果连接使用`zlib`算法，则值为`zlib`。
- en: For more information, see [Section 6.2.8, “Connection Compression Control”](connection-compression-control.html
    "6.2.8 Connection Compression Control").
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 6.2.8, “Connection Compression Control”](connection-compression-control.html
    "6.2.8 Connection Compression Control")。
- en: This variable was added in MySQL 8.0.18.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量在MySQL 8.0.18中添加。
- en: '[`Compression_level`](server-status-variables.html#statvar_Compression_level)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Compression_level`](server-status-variables.html#statvar_Compression_level)'
- en: The compression level in use for the current connection to the server. The value
    is 6 for `zlib` connections (the default `zlib` algorithm compression level),
    1 to 22 for `zstd` connections, and 0 for `uncompressed` connections.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前连接到服务器的压缩级别。对于`zlib`连接，该值为6（默认`zlib`算法压缩级别），对于`zstd`连接，该值为1到22，对于`uncompressed`连接，该值为0。
- en: For more information, see [Section 6.2.8, “Connection Compression Control”](connection-compression-control.html
    "6.2.8 Connection Compression Control").
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 6.2.8, “Connection Compression Control”](connection-compression-control.html
    "6.2.8 Connection Compression Control")。
- en: This variable was added in MySQL 8.0.18.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量在MySQL 8.0.18中添加。
- en: '[`Connection_errors_*`xxx`*`](server-status-variables.html#statvar_Connection_errors_xxx)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_errors_*`xxx`*`](server-status-variables.html#statvar_Connection_errors_xxx)'
- en: These variables provide information about errors that occur during the client
    connection process. They are global only and represent error counts aggregated
    across connections from all hosts. These variables track errors not accounted
    for by the host cache (see [Section 7.1.12.3, “DNS Lookups and the Host Cache”](host-cache.html
    "7.1.12.3 DNS Lookups and the Host Cache")), such as errors that are not associated
    with TCP connections, occur very early in the connection process (even before
    an IP address is known), or are not specific to any particular IP address (such
    as out-of-memory conditions).
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些变量提供有关客户端连接过程中发生的错误的信息。它们仅为全局变量，代表来自所有主机的连接中聚合的错误计数。这些变量跟踪主机缓存未解决的错误（请参阅[Section 7.1.12.3,
    “DNS Lookups and the Host Cache”](host-cache.html "7.1.12.3 DNS Lookups and the
    Host Cache")），例如与TCP连接无关的错误，在连接过程的早期阶段发生的错误（甚至在知道IP地址之前），或者不特定于任何特定IP地址的错误（例如内存不足条件）。
- en: '[`Connection_errors_accept`](server-status-variables.html#statvar_Connection_errors_accept)'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_errors_accept`](server-status-variables.html#statvar_Connection_errors_accept)'
- en: The number of errors that occurred during calls to `accept()` on the listening
    port.
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在监听端口调用`accept()`时发生的错误次数。
- en: '[`Connection_errors_internal`](server-status-variables.html#statvar_Connection_errors_internal)'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_errors_internal`](server-status-variables.html#statvar_Connection_errors_internal)'
- en: The number of connections refused due to internal errors in the server, such
    as failure to start a new thread or an out-of-memory condition.
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于服务器内部错误（例如无法启动新线程或内存不足）而拒绝的连接数。
- en: '[`Connection_errors_max_connections`](server-status-variables.html#statvar_Connection_errors_max_connections)'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_errors_max_connections`](server-status-variables.html#statvar_Connection_errors_max_connections)'
- en: The number of connections refused because the server [`max_connections`](server-system-variables.html#sysvar_max_connections)
    limit was reached.
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于达到服务器[`max_connections`](server-system-variables.html#sysvar_max_connections)限制而拒绝的连接数。
- en: '[`Connection_errors_peer_address`](server-status-variables.html#statvar_Connection_errors_peer_address)'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_errors_peer_address`](server-status-variables.html#statvar_Connection_errors_peer_address)'
- en: The number of errors that occurred while searching for connecting client IP
    addresses.
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在搜索连接客户端IP地址时发生的错误数量。
- en: '[`Connection_errors_select`](server-status-variables.html#statvar_Connection_errors_select)'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_errors_select`](server-status-variables.html#statvar_Connection_errors_select)'
- en: The number of errors that occurred during calls to `select()` or `poll()` on
    the listening port. (Failure of this operation does not necessarily means a client
    connection was rejected.)
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在监听端口上调用`select()`或`poll()`时发生的错误数量。（此操作的失败并不一定意味着客户端连接被拒绝。）
- en: '[`Connection_errors_tcpwrap`](server-status-variables.html#statvar_Connection_errors_tcpwrap)'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_errors_tcpwrap`](server-status-variables.html#statvar_Connection_errors_tcpwrap)'
- en: The number of connections refused by the `libwrap` library.
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`libwrap`库拒绝的连接数量。'
- en: '[`Connections`](server-status-variables.html#statvar_Connections)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connections`](server-status-variables.html#statvar_Connections)'
- en: The number of connection attempts (successful or not) to the MySQL server.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试连接到MySQL服务器的连接尝试次数（成功或不成功）。
- en: '[`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)'
- en: The number of internal on-disk temporary tables created by the server while
    executing statements.
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在执行语句时创建的内部磁盘临时表的数量。
- en: You can compare the number of internal on-disk temporary tables created to the
    total number of internal temporary tables created by comparing [`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)
    and [`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)
    values.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以通过比较[`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)和[`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)的值来比较创建的内部磁盘临时表的数量和创建的内部临时表的总数。
- en: Note
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Due to a known limitation, [`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)
    does not count on-disk temporary tables created in memory-mapped files. By default,
    the TempTable storage engine overflow mechanism creates internal temporary tables
    in memory-mapped files. This behavior is controlled by the [`temptable_use_mmap`](server-system-variables.html#sysvar_temptable_use_mmap)
    variable, which is enabled by default.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于已知限制，[`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)不计算在内存映射文件中创建的磁盘临时表。默认情况下，TempTable存储引擎溢出机制在内存映射文件中创建内部临时表。此行为由[`temptable_use_mmap`](server-system-variables.html#sysvar_temptable_use_mmap)变量控制，默认情况下启用。
- en: See also [Section 10.4.4, “Internal Temporary Table Use in MySQL”](internal-temporary-tables.html
    "10.4.4 Internal Temporary Table Use in MySQL").
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另请参阅[第10.4.4节，“MySQL中的内部临时表使用”](internal-temporary-tables.html "10.4.4 MySQL中的内部临时表使用")。
- en: '[`Created_tmp_files`](server-status-variables.html#statvar_Created_tmp_files)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Created_tmp_files`](server-status-variables.html#statvar_Created_tmp_files)'
- en: How many temporary files [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL
    Server") has created.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**mysqld**创建的临时文件数量。'
- en: '[`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)'
- en: The number of internal temporary tables created by the server while executing
    statements.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在执行语句时创建的内部临时表的数量。
- en: You can compare the number of internal on-disk temporary tables created to the
    total number of internal temporary tables created by comparing [`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)
    and [`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)
    values.
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以通过比较[`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)和[`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)的值来比较创建的内部磁盘临时表的数量和创建的内部临时表的总数。
- en: See also [Section 10.4.4, “Internal Temporary Table Use in MySQL”](internal-temporary-tables.html
    "10.4.4 Internal Temporary Table Use in MySQL").
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另请参阅[第10.4.4节，“MySQL中的内部临时表使用”](internal-temporary-tables.html "10.4.4 MySQL中的内部临时表使用")。
- en: Each invocation of the [`SHOW STATUS`](show-status.html "15.7.7.37 SHOW STATUS
    Statement") statement uses an internal temporary table and increments the global
    [`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)
    value.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每次调用[`SHOW STATUS`](show-status.html "15.7.7.37 SHOW STATUS Statement")语句都会使用一个内部临时表，并增加全局[`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)值。
- en: '[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)'
- en: The active [`ssl_ca`](server-system-variables.html#sysvar_ssl_ca) value in the
    SSL context that the server uses for new connections. This context value may differ
    from the current [`ssl_ca`](server-system-variables.html#sysvar_ssl_ca) system
    variable value if the system variable has been changed but [`ALTER INSTANCE RELOAD
    TLS`](alter-instance.html#alter-instance-reload-tls) has not subsequently been
    executed to reconfigure the SSL context from the context-related system variable
    values and update the corresponding status variables. (This potential difference
    in values applies to each corresponding pair of context-related system and status
    variables. See [Server-Side Runtime Configuration and Monitoring for Encrypted
    Connections](using-encrypted-connections.html#using-encrypted-connections-server-side-runtime-configuration
    "Server-Side Runtime Configuration and Monitoring for Encrypted Connections").)
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的SSL上下文中的活动[`ssl_ca`](server-system-variables.html#sysvar_ssl_ca)值。如果系统变量已更改但尚未执行[`ALTER
    INSTANCE RELOAD TLS`](alter-instance.html#alter-instance-reload-tls)以从与上下文相关的系统变量值重新配置SSL上下文并更新相应的状态变量，则此上下文值可能与当前[`ssl_ca`](server-system-variables.html#sysvar_ssl_ca)系统变量值不同。（这些值之间的潜在差异适用于每个对应的上下文相关系统和状态变量对。请参阅[用于加密连接的服务器端运行时配置和监控](using-encrypted-connections.html#using-encrypted-connections-server-side-runtime-configuration
    "用于加密连接的服务器端运行时配置和监控")。）
- en: This variable was added in MySQL 8.0.16.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个变量是在MySQL 8.0.16中添加的。
- en: As of MySQL 8.0.21, the `Current_tls_*`xxx`*` status variable values are also
    available through the Performance Schema [`tls_channel_status`](performance-schema-tls-channel-status-table.html
    "29.12.21.9 The tls_channel_status Table") table. See [Section 29.12.21.9, “The
    tls_channel_status Table”](performance-schema-tls-channel-status-table.html "29.12.21.9 The
    tls_channel_status Table").
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.21，`Current_tls_*`xxx`*`状态变量值也可以通过性能模式[`tls_channel_status`](performance-schema-tls-channel-status-table.html
    "29.12.21.9 tls_channel_status表")表获得。请参阅[第29.12.21.9节，“tls_channel_status表”](performance-schema-tls-channel-status-table.html
    "29.12.21.9 tls_channel_status表")。
- en: '[`Current_tls_capath`](server-status-variables.html#statvar_Current_tls_capath)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_capath`](server-status-variables.html#statvar_Current_tls_capath)'
- en: The active [`ssl_capath`](server-system-variables.html#sysvar_ssl_capath) value
    in the TLS context that the server uses for new connections. For notes about the
    relationship between this status variable and its corresponding system variable,
    see the description of [`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca).
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的TLS上下文中的活动[`ssl_capath`](server-system-variables.html#sysvar_ssl_capath)值。关于此状态变量与其对应系统变量之间关系的说明，请参阅[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)的描述。
- en: This variable was added in MySQL 8.0.16.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个变量是在MySQL 8.0.16中添加的。
- en: '[`Current_tls_cert`](server-status-variables.html#statvar_Current_tls_cert)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_cert`](server-status-variables.html#statvar_Current_tls_cert)'
- en: The active [`ssl_cert`](server-system-variables.html#sysvar_ssl_cert) value
    in the TLS context that the server uses for new connections. For notes about the
    relationship between this status variable and its corresponding system variable,
    see the description of [`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca).
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的TLS上下文中的活动[`ssl_cert`](server-system-variables.html#sysvar_ssl_cert)值。关于此状态变量与其对应系统变量之间关系的说明，请参阅[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)的描述。
- en: This variable was added in MySQL 8.0.16.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个变量是在MySQL 8.0.16中添加的。
- en: '[`Current_tls_cipher`](server-status-variables.html#statvar_Current_tls_cipher)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_cipher`](server-status-variables.html#statvar_Current_tls_cipher)'
- en: The active [`ssl_cipher`](server-system-variables.html#sysvar_ssl_cipher) value
    in the TLS context that the server uses for new connections. For notes about the
    relationship between this status variable and its corresponding system variable,
    see the description of [`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca).
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的TLS上下文中的活动[`ssl_cipher`](server-system-variables.html#sysvar_ssl_cipher)值。关于此状态变量与其对应系统变量之间关系的说明，请参阅[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)的描述。
- en: This variable was added in MySQL 8.0.16.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个变量是在MySQL 8.0.16中添加的。
- en: '[`Current_tls_ciphersuites`](server-status-variables.html#statvar_Current_tls_ciphersuites)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_ciphersuites`](server-status-variables.html#statvar_Current_tls_ciphersuites)'
- en: The active [`tls_ciphersuites`](server-system-variables.html#sysvar_tls_ciphersuites)
    value in the TLS context that the server uses for new connections. For notes about
    the relationship between this status variable and its corresponding system variable,
    see the description of [`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca).
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的TLS上下文中的活动[`tls_ciphersuites`](server-system-variables.html#sysvar_tls_ciphersuites)值。有关此状态变量与其对应系统变量之间关系的说明，请参阅[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)的描述。
- en: This variable was added in MySQL 8.0.16.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量是在MySQL 8.0.16中添加的。
- en: '[`Current_tls_crl`](server-status-variables.html#statvar_Current_tls_crl)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_crl`](server-status-variables.html#statvar_Current_tls_crl)'
- en: The active [`ssl_crl`](server-system-variables.html#sysvar_ssl_crl) value in
    the TLS context that the server uses for new connections. For notes about the
    relationship between this status variable and its corresponding system variable,
    see the description of [`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca).
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的TLS上下文中的活动[`ssl_crl`](server-system-variables.html#sysvar_ssl_crl)值。有关此状态变量与其对应系统变量之间关系的说明，请参阅[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)的描述。
- en: This variable was added in MySQL 8.0.16.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量是在MySQL 8.0.16中添加的。
- en: Note
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: When you reload the TLS context, OpenSSL reloads the file containing the CRL
    (certificate revocation list) as part of the process. If the CRL file is large,
    the server allocates a large chunk of memory (ten times the file size), which
    is doubled while the new instance is being loaded and the old one has not yet
    been released. The process resident memory is not immediately reduced after a
    large allocation is freed, so if you issue the `ALTER INSTANCE RELOAD TLS` statement
    repeatedly with a large CRL file, the process resident memory usage may grow as
    a result of this.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当重新加载TLS上下文时，OpenSSL会在此过程中重新加载包含CRL（证书吊销列表）的文件。如果CRL文件很大，服务器会分配一个大块内存（文件大小的十倍），在新实例加载时会加倍，而旧实例尚未释放。大量分配被释放后，进程驻留内存不会立即减少，因此如果你重复发出带有大型CRL文件的`ALTER
    INSTANCE RELOAD TLS`语句，进程驻留内存使用量可能会因此增长。
- en: '[`Current_tls_crlpath`](server-status-variables.html#statvar_Current_tls_crlpath)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_crlpath`](server-status-variables.html#statvar_Current_tls_crlpath)'
- en: The active [`ssl_crlpath`](server-system-variables.html#sysvar_ssl_crlpath)
    value in the TLS context that the server uses for new connections. For notes about
    the relationship between this status variable and its corresponding system variable,
    see the description of [`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca).
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的TLS上下文中的活动[`ssl_crlpath`](server-system-variables.html#sysvar_ssl_crlpath)值。有关此状态变量与其对应系统变量之间关系的说明，请参阅[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)的描述。
- en: This variable was added in MySQL 8.0.16.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量是在MySQL 8.0.16中添加的。
- en: '[`Current_tls_key`](server-status-variables.html#statvar_Current_tls_key)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_key`](server-status-variables.html#statvar_Current_tls_key)'
- en: The active [`ssl_key`](server-system-variables.html#sysvar_ssl_key) value in
    the TLS context that the server uses for new connections. For notes about the
    relationship between this status variable and its corresponding system variable,
    see the description of [`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca).
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的TLS上下文中的活动[`ssl_key`](server-system-variables.html#sysvar_ssl_key)值。有关此状态变量与其对应系统变量之间关系的说明，请参阅[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)的描述。
- en: This variable was added in MySQL 8.0.16.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量是在MySQL 8.0.16中添加的。
- en: '[`Current_tls_version`](server-status-variables.html#statvar_Current_tls_version)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Current_tls_version`](server-status-variables.html#statvar_Current_tls_version)'
- en: The active [`tls_version`](server-system-variables.html#sysvar_tls_version)
    value in the TLS context that the server uses for new connections. For notes about
    the relationship between this status variable and its corresponding system variable,
    see the description of [`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca).
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在新连接中使用的TLS上下文中的活动[`tls_version`](server-system-variables.html#sysvar_tls_version)值。有关此状态变量与其对应系统变量之间关系的说明，请参阅[`Current_tls_ca`](server-status-variables.html#statvar_Current_tls_ca)的描述。
- en: This variable was added in MySQL 8.0.16.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量是在MySQL 8.0.16中添加的。
- en: '[`Delayed_errors`](server-status-variables.html#statvar_Delayed_errors)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Delayed_errors`](server-status-variables.html#statvar_Delayed_errors)'
- en: This status variable is deprecated (because `DELAYED` inserts are not supported);
    expect it to be removed in a future release.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此状态变量已被弃用（因为不支持`DELAYED`插入）；预计在将来的版本中将其移除。
- en: '[`Delayed_insert_threads`](server-status-variables.html#statvar_Delayed_insert_threads)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Delayed_insert_threads`](server-status-variables.html#statvar_Delayed_insert_threads)'
- en: This status variable is deprecated (because `DELAYED` inserts are not supported);
    expect it to be removed in a future release.
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此状态变量已弃用（因为不支持 `DELAYED` 插入）；预计将在将来的版本中删除。
- en: '[`Delayed_writes`](server-status-variables.html#statvar_Delayed_writes)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Delayed_writes`](server-status-variables.html#statvar_Delayed_writes)'
- en: This status variable is deprecated (because `DELAYED` inserts are not supported);
    expect it to be removed in a future release.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此状态变量已弃用（因为不支持 `DELAYED` 插入）；预计将在将来的版本中删除。
- en: '[`dragnet.Status`](server-status-variables.html#statvar_dragnet.Status)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`dragnet.Status`](server-status-variables.html#statvar_dragnet.Status)'
- en: The result of the most recent assignment to the [`dragnet.log_error_filter_rules`](server-system-variables.html#sysvar_dragnet.log_error_filter_rules)
    system variable, empty if no such assignment has occurred.
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最近对 [`dragnet.log_error_filter_rules`](server-system-variables.html#sysvar_dragnet.log_error_filter_rules)
    系统变量的赋值结果，如果没有进行此类赋值，则为空。
- en: This variable was added in MySQL 8.0.12.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在 MySQL 8.0.12 中添加的。
- en: '[`Error_log_buffered_bytes`](server-status-variables.html#statvar_Error_log_buffered_bytes)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Error_log_buffered_bytes`](server-status-variables.html#statvar_Error_log_buffered_bytes)'
- en: The number of bytes currently used in the Performance Schema [`error_log`](performance-schema-error-log-table.html
    "29.12.21.2 The error_log Table") table. It is possible for the value to decrease,
    for example, if a new event cannot fit until discarding an old event, but the
    new event is smaller than the old one.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前在性能模式 [`error_log`](performance-schema-error-log-table.html "29.12.21.2 The
    error_log Table") 表中使用的字节数。可能会出现值减少的情况，例如，如果新事件无法容纳，直到丢弃旧事件，但新事件比旧事件小。
- en: This variable was added in MySQL 8.0.22.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在 MySQL 8.0.22 中添加的。
- en: '[`Error_log_buffered_events`](server-status-variables.html#statvar_Error_log_buffered_events)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Error_log_buffered_events`](server-status-variables.html#statvar_Error_log_buffered_events)'
- en: The number of events currently present in the Performance Schema [`error_log`](performance-schema-error-log-table.html
    "29.12.21.2 The error_log Table") table. As with [`Error_log_buffered_bytes`](server-status-variables.html#statvar_Error_log_buffered_bytes),
    it is possible for the value to decrease.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前在性能模式 [`error_log`](performance-schema-error-log-table.html "29.12.21.2 The
    error_log Table") 表中存在的事件数量。与 [`Error_log_buffered_bytes`](server-status-variables.html#statvar_Error_log_buffered_bytes)
    ��似，可能会出现值减少的情况。
- en: This variable was added in MySQL 8.0.22.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在 MySQL 8.0.22 中添加的。
- en: '[`Error_log_expired_events`](server-status-variables.html#statvar_Error_log_expired_events)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Error_log_expired_events`](server-status-variables.html#statvar_Error_log_expired_events)'
- en: The number of events discarded from the Performance Schema [`error_log`](performance-schema-error-log-table.html
    "29.12.21.2 The error_log Table") table to make room for new events.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从性能模式 [`error_log`](performance-schema-error-log-table.html "29.12.21.2 The
    error_log Table") 表中丢弃的事件数量，以腾出空间供新事件使用。
- en: This variable was added in MySQL 8.0.22.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在 MySQL 8.0.22 中添加的。
- en: '[`Error_log_latest_write`](server-status-variables.html#statvar_Error_log_latest_write)'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Error_log_latest_write`](server-status-variables.html#statvar_Error_log_latest_write)'
- en: The time of the last write to the Performance Schema [`error_log`](performance-schema-error-log-table.html
    "29.12.21.2 The error_log Table") table.
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后一次写入性能模式 [`error_log`](performance-schema-error-log-table.html "29.12.21.2 The
    error_log Table") 表的时间。
- en: This variable was added in MySQL 8.0.22.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在 MySQL 8.0.22 中添加的。
- en: '[`Flush_commands`](server-status-variables.html#statvar_Flush_commands)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Flush_commands`](server-status-variables.html#statvar_Flush_commands)'
- en: The number of times the server flushes tables, whether because a user executed
    a [`FLUSH TABLES`](flush.html#flush-tables) statement or due to internal server
    operation. It is also incremented by receipt of a `COM_REFRESH` packet. This is
    in contrast to [`Com_flush`](server-status-variables.html#statvar_Com_xxx), which
    indicates how many `FLUSH` statements have been executed, whether [`FLUSH TABLES`](flush.html#flush-tables),
    [`FLUSH LOGS`](flush.html#flush-logs), and so forth.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器刷新表的次数，无论是因为用户执行了 [`FLUSH TABLES`](flush.html#flush-tables) 语句还是由于内部服务器操作。也会通过接收
    `COM_REFRESH` 数据包来增加。这与 [`Com_flush`](server-status-variables.html#statvar_Com_xxx)
    相反，后者指示执行了多少次 `FLUSH` 语句，无论是 [`FLUSH TABLES`](flush.html#flush-tables)、[`FLUSH
    LOGS`](flush.html#flush-logs) 等等。
- en: '[`Global_connection_memory`](server-status-variables.html#statvar_Global_connection_memory)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Global_connection_memory`](server-status-variables.html#statvar_Global_connection_memory)'
- en: The memory used by all user connections to the server. Memory used by system
    threads or by the MySQL root account is included in the total, but such threads
    or users are not subject to disconnection due to memory usage. This memory is
    not calculated unless [`global_connection_memory_tracking`](server-system-variables.html#sysvar_global_connection_memory_tracking)
    is enabled (disabled by default). The Performance Schema must also be enabled.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有用户连接到服务器的内存使用情况。系统线程或MySQL根帐户使用的内存包括在内，但这些线程或用户不会因内存使用而断开连接。除非启用了[`global_connection_memory_tracking`](server-system-variables.html#sysvar_global_connection_memory_tracking)（默认情况下为禁用），否则不会计算此内存。性能模式也必须启用。
- en: You can control (indirectly) the frequency with which this variable is updated
    by setting [`connection_memory_chunk_size`](server-system-variables.html#sysvar_connection_memory_chunk_size).
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以通过设置[`connection_memory_chunk_size`](server-system-variables.html#sysvar_connection_memory_chunk_size)间接控制此变量更新的频率。
- en: The `Global_connection_memory` status variable was introduced in MySQL 8.0.28.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Global_connection_memory`状态变量是在MySQL 8.0.28中引入的。'
- en: '[`Handler_commit`](server-status-variables.html#statvar_Handler_commit)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_commit`](server-status-variables.html#statvar_Handler_commit)'
- en: The number of internal [`COMMIT`](commit.html "15.3.1 START TRANSACTION, COMMIT,
    and ROLLBACK Statements") statements.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 内部[`COMMIT`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")语句的次数。
- en: '[`Handler_delete`](server-status-variables.html#statvar_Handler_delete)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_delete`](server-status-variables.html#statvar_Handler_delete)'
- en: The number of times that rows have been deleted from tables.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从表中删除行的次数。
- en: '[`Handler_external_lock`](server-status-variables.html#statvar_Handler_external_lock)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_external_lock`](server-status-variables.html#statvar_Handler_external_lock)'
- en: 'The server increments this variable for each call to its `external_lock()`
    function, which generally occurs at the beginning and end of access to a table
    instance. There might be differences among storage engines. This variable can
    be used, for example, to discover for a statement that accesses a partitioned
    table how many partitions were pruned before locking occurred: Check how much
    the counter increased for the statement, subtract 2 (2 calls for the table itself),
    then divide by 2 to get the number of partitions locked.'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器为每次调用其`external_lock()`函数递增此变量，这通常发生在访问表实例的开始和结束时。存储引擎之间可能存在差异。例如，可以使用此变量来发现访问分区表的语句在锁定发生之前剪枝了多少分区：检查语句的计数器增加了多少，减去2（表本身的2次调用），然后除以2以获取锁定的分区数。
- en: '[`Handler_mrr_init`](server-status-variables.html#statvar_Handler_mrr_init)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_mrr_init`](server-status-variables.html#statvar_Handler_mrr_init)'
- en: The number of times the server uses a storage engine's own Multi-Range Read
    implementation for table access.
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器使用存储引擎自己的多范围读取实现进行表访问的次数。
- en: '[`Handler_prepare`](server-status-variables.html#statvar_Handler_prepare)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_prepare`](server-status-variables.html#statvar_Handler_prepare)'
- en: A counter for the prepare phase of two-phase commit operations.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 两阶段提交操作准备阶段的计数器。
- en: '[`Handler_read_first`](server-status-variables.html#statvar_Handler_read_first)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_read_first`](server-status-variables.html#statvar_Handler_read_first)'
- en: The number of times the first entry in an index was read. If this value is high,
    it suggests that the server is doing a lot of full index scans (for example, `SELECT
    col1 FROM foo`, assuming that `col1` is indexed).
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 读取索引中第一个条目的次数。如果此值很高，则表明服务器正在执行大量完整索引扫描（例如，`SELECT col1 FROM foo`，假设`col1`已建立索引）。
- en: '[`Handler_read_key`](server-status-variables.html#statvar_Handler_read_key)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_read_key`](server-status-variables.html#statvar_Handler_read_key)'
- en: The number of requests to read a row based on a key. If this value is high,
    it is a good indication that your tables are properly indexed for your queries.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 基于键读取行的请求数。如果此值很高，则表明您的表针对查询已正确建立索引。
- en: '[`Handler_read_last`](server-status-variables.html#statvar_Handler_read_last)'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_read_last`](server-status-variables.html#statvar_Handler_read_last)'
- en: The number of requests to read the last key in an index. With `ORDER BY`, the
    server issues a first-key request followed by several next-key requests, whereas
    with `ORDER BY DESC`, the server issues a last-key request followed by several
    previous-key requests.
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 读取索引中最后一个键的请求数。使用`ORDER BY`时，服务器会发出第一个键的请求，然后是几个下一个键的请求，而使用`ORDER BY DESC`时，服务器会发出最后一个键的请求，然后是几个前一个键的请求。
- en: '[`Handler_read_next`](server-status-variables.html#statvar_Handler_read_next)'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_read_next`](server-status-variables.html#statvar_Handler_read_next)'
- en: The number of requests to read the next row in key order. This value is incremented
    if you are querying an index column with a range constraint or if you are doing
    an index scan.
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按键顺序读取下一行的请求数。如果您正在查询带有范围约束的索引列或正在执行索引扫描，则此值会增加。
- en: '[`Handler_read_prev`](server-status-variables.html#statvar_Handler_read_prev)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_read_prev`](server-status-variables.html#statvar_Handler_read_prev)'
- en: The number of requests to read the previous row in key order. This read method
    is mainly used to optimize `ORDER BY ... DESC`.
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按键顺序读取上一行的请求数。此读取方法主要用于优化`ORDER BY ... DESC`。
- en: '[`Handler_read_rnd`](server-status-variables.html#statvar_Handler_read_rnd)'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_read_rnd`](server-status-variables.html#statvar_Handler_read_rnd)'
- en: The number of requests to read a row based on a fixed position. This value is
    high if you are doing a lot of queries that require sorting of the result. You
    probably have a lot of queries that require MySQL to scan entire tables or you
    have joins that do not use keys properly.
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 基于固定位置读取一行的请求数。如果您正在执行需要对结果进行排序的大量查询，则此值会很高。您可能有很多需要MySQL扫描整个表或连接未正确使用键的查询。
- en: '[`Handler_read_rnd_next`](server-status-variables.html#statvar_Handler_read_rnd_next)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_read_rnd_next`](server-status-variables.html#statvar_Handler_read_rnd_next)'
- en: The number of requests to read the next row in the data file. This value is
    high if you are doing a lot of table scans. Generally this suggests that your
    tables are not properly indexed or that your queries are not written to take advantage
    of the indexes you have.
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 读取数据文件中下一行的请求数。如果您正在执行大量表扫描，则此值会很高。通常这表明您的表没有正确索引，或者您的查询没有利用您拥有的索引。
- en: '[`Handler_rollback`](server-status-variables.html#statvar_Handler_rollback)'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_rollback`](server-status-variables.html#statvar_Handler_rollback)'
- en: The number of requests for a storage engine to perform a rollback operation.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储引擎执行回滚操作的请求数。
- en: '[`Handler_savepoint`](server-status-variables.html#statvar_Handler_savepoint)'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_savepoint`](server-status-variables.html#statvar_Handler_savepoint)'
- en: The number of requests for a storage engine to place a savepoint.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储引擎放置保存点的请求数。
- en: '[`Handler_savepoint_rollback`](server-status-variables.html#statvar_Handler_savepoint_rollback)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_savepoint_rollback`](server-status-variables.html#statvar_Handler_savepoint_rollback)'
- en: The number of requests for a storage engine to roll back to a savepoint.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储引擎回滚到保存点的请求数。
- en: '[`Handler_update`](server-status-variables.html#statvar_Handler_update)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_update`](server-status-variables.html#statvar_Handler_update)'
- en: The number of requests to update a row in a table.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更新表中一行的请求数。
- en: '[`Handler_write`](server-status-variables.html#statvar_Handler_write)'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Handler_write`](server-status-variables.html#statvar_Handler_write)'
- en: The number of requests to insert a row in a table.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在表中插入一行的请求数。
- en: '[`Innodb_buffer_pool_dump_status`](server-status-variables.html#statvar_Innodb_buffer_pool_dump_status)'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_dump_status`](server-status-variables.html#statvar_Innodb_buffer_pool_dump_status)'
- en: The progress of an operation to record the [pages](glossary.html#glos_page "page")
    held in the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool "buffer pool"),
    triggered by the setting of `innodb_buffer_pool_dump_at_shutdown` or `innodb_buffer_pool_dump_now`.
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记录在`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "缓冲池")中保存的[页](glossary.html#glos_page
    "页")的操作进度，由`innodb_buffer_pool_dump_at_shutdown`或`innodb_buffer_pool_dump_now`的设置触发。
- en: For related information and examples, see [Section 17.8.3.6, “Saving and Restoring
    the Buffer Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving and Restoring
    the Buffer Pool State").
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息和示例，请参见[第17.8.3.6节，“保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html "17.8.3.6 保存和恢复缓冲池状态")。
- en: '[`Innodb_buffer_pool_load_status`](server-status-variables.html#statvar_Innodb_buffer_pool_load_status)'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_load_status`](server-status-variables.html#statvar_Innodb_buffer_pool_load_status)'
- en: The progress of an operation to [warm up](glossary.html#glos_warm_up "warm up")
    the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool "buffer pool") by reading
    in a set of [pages](glossary.html#glos_page "page") corresponding to an earlier
    point in time, triggered by the setting of [`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)
    or [`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now).
    If the operation introduces too much overhead, you can cancel it by setting [`innodb_buffer_pool_load_abort`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort).
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过读取与较早时间点对应的一组[页](glossary.html#glos_page "page")来[预热](glossary.html#glos_warm_up
    "warm up") `InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")的操作进度，由[`innodb_buffer_pool_load_at_startup`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_at_startup)或[`innodb_buffer_pool_load_now`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_now)的设置触发。如果该操作引入了太多开销，您可以通过设置[`innodb_buffer_pool_load_abort`](innodb-parameters.html#sysvar_innodb_buffer_pool_load_abort)来取消它。
- en: For related information and examples, see [Section 17.8.3.6, “Saving and Restoring
    the Buffer Pool State”](innodb-preload-buffer-pool.html "17.8.3.6 Saving and Restoring
    the Buffer Pool State").
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息和示例，请参见[第17.8.3.6节，“保存和恢复缓冲池状态”](innodb-preload-buffer-pool.html "17.8.3.6 Saving
    and Restoring the Buffer Pool State")。
- en: '[`Innodb_buffer_pool_bytes_data`](server-status-variables.html#statvar_Innodb_buffer_pool_bytes_data)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_bytes_data`](server-status-variables.html#statvar_Innodb_buffer_pool_bytes_data)'
- en: The total number of bytes in the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") containing data. The number includes both [dirty](glossary.html#glos_dirty_page
    "dirty page") and clean pages. For more accurate memory usage calculations than
    with [`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data),
    when [compressed](glossary.html#glos_compression "compression") tables cause the
    buffer pool to hold pages of different sizes.
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含数据的`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")中的总字节数。该数字包括[脏](glossary.html#glos_dirty_page
    "dirty page")和干净页。当[压缩](glossary.html#glos_compression "compression")表导致缓冲池持有不同大小的页时，比[`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)更准确的内存使用量计算。
- en: '[`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)'
- en: 'The number of [pages](glossary.html#glos_page "page") in the `InnoDB` [buffer
    pool](glossary.html#glos_buffer_pool "buffer pool") containing data. The number
    includes both [dirty](glossary.html#glos_dirty_page "dirty page") and clean pages.
    When using [compressed tables](glossary.html#glos_compressed_table "compressed
    table"), the reported [`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)
    value may be larger than [`Innodb_buffer_pool_pages_total`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)
    (Bug #59550).'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '包含数据的`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")中的[页](glossary.html#glos_page
    "page")数量。该数字包括[脏](glossary.html#glos_dirty_page "dirty page")和干净页。使用[压缩表](glossary.html#glos_compressed_table
    "compressed table")时，报告的[`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)值可能大于[`Innodb_buffer_pool_pages_total`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)（Bug
    #59550）。'
- en: '[`Innodb_buffer_pool_bytes_dirty`](server-status-variables.html#statvar_Innodb_buffer_pool_bytes_dirty)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_bytes_dirty`](server-status-variables.html#statvar_Innodb_buffer_pool_bytes_dirty)'
- en: The total current number of bytes held in [dirty pages](glossary.html#glos_dirty_page
    "dirty page") in the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool "buffer
    pool"). For more accurate memory usage calculations than with [`Innodb_buffer_pool_pages_dirty`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_dirty),
    when [compressed](glossary.html#glos_compression "compression") tables cause the
    buffer pool to hold pages of different sizes.
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当[压缩](glossary.html#glos_compression "compression")表导致缓冲池持有不同大小的页时，`InnoDB`
    [缓冲池](glossary.html#glos_buffer_pool "buffer pool")中[脏页](glossary.html#glos_dirty_page
    "dirty page")所持有的总字节数。比[`Innodb_buffer_pool_pages_dirty`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_dirty)更准确的内存使用量计算。
- en: '[`Innodb_buffer_pool_pages_dirty`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_dirty)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_pages_dirty`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_dirty)'
- en: The current number of [dirty pages](glossary.html#glos_dirty_page "dirty page")
    in the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool "buffer pool").
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前在`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")中的[脏页](glossary.html#glos_dirty_page
    "dirty page")数量。
- en: '[`Innodb_buffer_pool_pages_flushed`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_flushed)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_pages_flushed`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_flushed)'
- en: The number of requests to [flush](glossary.html#glos_flush "flush") [pages](glossary.html#glos_page
    "page") from the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool "buffer
    pool").
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请求从`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")中[刷新](glossary.html#glos_flush
    "flush")[页](glossary.html#glos_page "page")的次数。
- en: '[`Innodb_buffer_pool_pages_free`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_free)'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_pages_free`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_free)'
- en: The number of free [pages](glossary.html#glos_page "page") in the `InnoDB` [buffer
    pool](glossary.html#glos_buffer_pool "buffer pool").
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")中空闲[页](glossary.html#glos_page
    "page")的数量。'
- en: '[`Innodb_buffer_pool_pages_latched`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_latched)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_pages_latched`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_latched)'
- en: The number of latched [pages](glossary.html#glos_page "page") in the `InnoDB`
    [buffer pool](glossary.html#glos_buffer_pool "buffer pool"). These are pages currently
    being read or written, or that cannot be [flushed](glossary.html#glos_flush "flush")
    or removed for some other reason. Calculation of this variable is expensive, so
    it is available only when the `UNIV_DEBUG` system is defined at server build time.
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")中被锁定的[页](glossary.html#glos_page
    "page")的数量。这些页当前正在被读取或写入，或者由于某种原因无法[刷新](glossary.html#glos_flush "flush")或移除。由于计算这个变量的成本很高，因此只有在服务器构建时定义了`UNIV_DEBUG`系统时才可用。'
- en: '[`Innodb_buffer_pool_pages_misc`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_misc)'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_pages_misc`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_misc)'
- en: 'The number of [pages](glossary.html#glos_page "page") in the `InnoDB` [buffer
    pool](glossary.html#glos_buffer_pool "buffer pool") that are busy because they
    have been allocated for administrative overhead, such as [row locks](glossary.html#glos_row_lock
    "row lock") or the [adaptive hash index](glossary.html#glos_adaptive_hash_index
    "adaptive hash index"). This value can also be calculated as [`Innodb_buffer_pool_pages_total`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)
    − [`Innodb_buffer_pool_pages_free`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_free)
    − [`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data).
    When using [compressed tables](glossary.html#glos_compressed_table "compressed
    table"), [`Innodb_buffer_pool_pages_misc`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_misc)
    may report an out-of-bounds value (Bug #59550).'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")中因已分配用于行锁或[自适应哈希索引](glossary.html#glos_adaptive_hash_index
    "adaptive hash index")等管理开销而繁忙的[页](glossary.html#glos_page "page")的数量。此值也可以计算为[`Innodb_buffer_pool_pages_total`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)
    − [`Innodb_buffer_pool_pages_free`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_free)
    − [`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)。在使用[压缩表](glossary.html#glos_compressed_table
    "compressed table")时，[`Innodb_buffer_pool_pages_misc`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_misc)可能报告一个超出范围的值（Bug
    #59550）。'
- en: '[`Innodb_buffer_pool_pages_total`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_pages_total`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)'
- en: 'The total size of the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool"), in [pages](glossary.html#glos_page "page"). When using [compressed
    tables](glossary.html#glos_compressed_table "compressed table"), the reported
    [`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)
    value may be larger than [`Innodb_buffer_pool_pages_total`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)
    (Bug #59550)'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")的总大小，以[页](glossary.html#glos_page
    "page")为单位。在使用[压缩表](glossary.html#glos_compressed_table "compressed table")时，报告的[`Innodb_buffer_pool_pages_data`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_data)值可能大于[`Innodb_buffer_pool_pages_total`](server-status-variables.html#statvar_Innodb_buffer_pool_pages_total)（Bug
    #59550）'
- en: '[`Innodb_buffer_pool_read_ahead`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead)'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_read_ahead`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead)'
- en: The number of [pages](glossary.html#glos_page "page") read into the `InnoDB`
    [buffer pool](glossary.html#glos_buffer_pool "buffer pool") by the [read-ahead](glossary.html#glos_read_ahead
    "read-ahead") background thread.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由后台预读线程读入`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")的页面数量。
- en: '[`Innodb_buffer_pool_read_ahead_evicted`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_evicted)'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_read_ahead_evicted`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_evicted)'
- en: The number of [pages](glossary.html#glos_page "page") read into the `InnoDB`
    [buffer pool](glossary.html#glos_buffer_pool "buffer pool") by the [read-ahead](glossary.html#glos_read_ahead
    "read-ahead") background thread that were subsequently [evicted](glossary.html#glos_eviction
    "eviction") without having been accessed by queries.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由后台预读线程读入`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")的页面数量，随后被查询未访问而被[驱逐](glossary.html#glos_eviction
    "eviction")的页面数量。
- en: '[`Innodb_buffer_pool_read_ahead_rnd`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_rnd)'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_read_ahead_rnd`](server-status-variables.html#statvar_Innodb_buffer_pool_read_ahead_rnd)'
- en: The number of “random” read-aheads initiated by `InnoDB`. This happens when
    a query scans a large portion of a table but in random order.
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由`InnoDB`发起的“随机”预读次数。当查询以随机顺序扫描表的大部分内容时会发生这种情况。
- en: '[`Innodb_buffer_pool_read_requests`](server-status-variables.html#statvar_Innodb_buffer_pool_read_requests)'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_read_requests`](server-status-variables.html#statvar_Innodb_buffer_pool_read_requests)'
- en: The number of logical read requests.
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 逻辑读请求的数量。
- en: '[`Innodb_buffer_pool_reads`](server-status-variables.html#statvar_Innodb_buffer_pool_reads)'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_reads`](server-status-variables.html#statvar_Innodb_buffer_pool_reads)'
- en: The number of logical reads that `InnoDB` could not satisfy from the [buffer
    pool](glossary.html#glos_buffer_pool "buffer pool"), and had to read directly
    from disk.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`无法从[缓冲池](glossary.html#glos_buffer_pool "buffer pool")中满足的逻辑读数量，必须直接从磁盘读取。'
- en: '[`Innodb_buffer_pool_resize_status`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status)'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_resize_status`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status)'
- en: The status of an operation to resize the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") dynamically, triggered by setting the [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    parameter dynamically. The [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    parameter is dynamic, which allows you to resize the buffer pool without restarting
    the server. See [Configuring InnoDB Buffer Pool Size Online](innodb-buffer-pool-resize.html#innodb-buffer-pool-online-resize
    "Configuring InnoDB Buffer Pool Size Online") for related information.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 调整`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "buffer pool")大小的操作状态是动态的，通过动态设置[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)参数触发。[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)参数是动态的，允许您在不重启服务器的情况下调整缓冲池大小。有关更多信息，请参见[在线配置InnoDB缓冲池大小](innodb-buffer-pool-resize.html#innodb-buffer-pool-online-resize
    "Configuring InnoDB Buffer Pool Size Online")。
- en: '[`Innodb_buffer_pool_resize_status_code`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_code)'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_resize_status_code`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_code)'
- en: 'Reports status codes for tracking online buffer pool resizing operations. Each
    status code represents a stage in a resizing operation. Status codes include:'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 报告用于跟踪在线缓冲池调整操作的状态代码。每个状态代码代表调整操作中的一个阶段。状态代码包括：
- en: '0: No Resize operation in progress'
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '0: 没有正在进行的调整大小操作'
- en: '1: Starting Resize'
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '1: 开始调整大小'
- en: '2: Disabling AHI (Adaptive Hash Index)'
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '2: 禁用AHI（自适应哈希索引）'
- en: '3: Withdrawing Blocks'
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '3: 撤回块'
- en: '4: Acquiring Global Lock'
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '4: 获取全局锁'
- en: '5: Resizing Pool'
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '5: 调整池'
- en: '6: Resizing Hash'
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '6: 调整哈希'
- en: '7: Resizing Failed'
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '7: 调整失败'
- en: You can use this status variable in conjunction with [`Innodb_buffer_pool_resize_status_progress`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_progress)
    to track the progress of each stage of a resizing operation. The [`Innodb_buffer_pool_resize_status_progress`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_progress)
    variable reports a percentage value indicating the progress of the current stage.
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以将此状态变量与[`Innodb_buffer_pool_resize_status_progress`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_progress)结合使用，以跟踪调整操作每个阶段的进度。[`Innodb_buffer_pool_resize_status_progress`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_progress)变量报告一个百分比值，指示当前阶段的进度。
- en: For more information, see [Monitoring Online Buffer Pool Resizing Progress](innodb-buffer-pool-resize.html#innodb-buffer-pool-online-resize-monitoring
    "Monitoring Online Buffer Pool Resizing Progress").
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[监控在线缓冲池调整进度](innodb-buffer-pool-resize.html#innodb-buffer-pool-online-resize-monitoring
    "监控在线缓冲池调整进度")。
- en: '[`Innodb_buffer_pool_resize_status_progress`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_progress)'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_resize_status_progress`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_progress)'
- en: Reports a percentage value indicating the progress of the current stage of an
    online buffer pool resizing operation. This variable is used in conjunction with
    [`Innodb_buffer_pool_resize_status_code`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_code),
    which reports a status code indicating the current stage of an online buffer pool
    resizing operation.
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 报告一个百分比值，指示在线缓冲池调整操作当前阶段的进度。此变量与[`Innodb_buffer_pool_resize_status_code`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_code)一起使用，后者报告当前在线缓冲池调整操作阶段的状态代码。
- en: The percentage value is updated after each buffer pool instance is processed.
    As the status code (reported by [`Innodb_buffer_pool_resize_status_code`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_code))
    changes from one status to another, the percentage value is reset to 0.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 百分比值在每个缓冲池实例处理后更新。随着状态代码（由[`Innodb_buffer_pool_resize_status_code`](server-status-variables.html#statvar_Innodb_buffer_pool_resize_status_code)报告）从一个状态变为另一个状态，百分比值将重置为0。
- en: For related information, see [Monitoring Online Buffer Pool Resizing Progress](innodb-buffer-pool-resize.html#innodb-buffer-pool-online-resize-monitoring
    "Monitoring Online Buffer Pool Resizing Progress").
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参阅[监控在线缓冲池调整进度](innodb-buffer-pool-resize.html#innodb-buffer-pool-online-resize-monitoring
    "监控在线缓冲池调整进度")。
- en: '[`Innodb_buffer_pool_wait_free`](server-status-variables.html#statvar_Innodb_buffer_pool_wait_free)'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_wait_free`](server-status-variables.html#statvar_Innodb_buffer_pool_wait_free)'
- en: Normally, writes to the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool") happen in the background. When `InnoDB` needs to read or create
    a [page](glossary.html#glos_page "page") and no clean pages are available, `InnoDB`
    flushes some [dirty pages](glossary.html#glos_dirty_page "dirty page") first and
    waits for that operation to finish. This counter counts instances of these waits.
    If [`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)
    has been set properly, this value should be small.
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常，对`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "缓冲池")的写入是在后台进行的。当`InnoDB`需要读取或创建一个[页](glossary.html#glos_page
    "页")且没有可用的干净页时，`InnoDB`首先刷新一些[脏页](glossary.html#glos_dirty_page "脏页")并等待该操作完成。此计数器计算这些等待的实例。如果[`innodb_buffer_pool_size`](innodb-parameters.html#sysvar_innodb_buffer_pool_size)已经适当设置，这个值应该很小。
- en: '[`Innodb_buffer_pool_write_requests`](server-status-variables.html#statvar_Innodb_buffer_pool_write_requests)'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_buffer_pool_write_requests`](server-status-variables.html#statvar_Innodb_buffer_pool_write_requests)'
- en: The number of writes done to the `InnoDB` [buffer pool](glossary.html#glos_buffer_pool
    "buffer pool").
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 写入到`InnoDB` [缓冲池](glossary.html#glos_buffer_pool "缓冲池")的次数。
- en: '[`Innodb_data_fsyncs`](server-status-variables.html#statvar_Innodb_data_fsyncs)'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_data_fsyncs`](server-status-variables.html#statvar_Innodb_data_fsyncs)'
- en: The number of `fsync()` operations so far. The frequency of `fsync()` calls
    is influenced by the setting of the [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    configuration option.
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 到目前为止的`fsync()`操作次数。`fsync()`调用的频率受[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)配置选项的设置影响。
- en: Counts the number of `fdatasync()` operations if [`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)
    is enabled.
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了[`innodb_use_fdatasync`](innodb-parameters.html#sysvar_innodb_use_fdatasync)，则计算`fdatasync()`操作的次数。
- en: '[`Innodb_data_pending_fsyncs`](server-status-variables.html#statvar_Innodb_data_pending_fsyncs)'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_data_pending_fsyncs`](server-status-variables.html#statvar_Innodb_data_pending_fsyncs)'
- en: The current number of pending `fsync()` operations. The frequency of `fsync()`
    calls is influenced by the setting of the [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    configuration option.
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前待处理的`fsync()`操作数量。`fsync()`调用的频率受[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)配置选项的设置影响。
- en: '[`Innodb_data_pending_reads`](server-status-variables.html#statvar_Innodb_data_pending_reads)'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_data_pending_reads`](server-status-variables.html#statvar_Innodb_data_pending_reads)'
- en: The current number of pending reads.
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前待处理读取的数量。
- en: '[`Innodb_data_pending_writes`](server-status-variables.html#statvar_Innodb_data_pending_writes)'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_data_pending_writes`](server-status-variables.html#statvar_Innodb_data_pending_writes)'
- en: The current number of pending writes.
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前待处理写入次数。
- en: '[`Innodb_data_read`](server-status-variables.html#statvar_Innodb_data_read)'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_data_read`](server-status-variables.html#statvar_Innodb_data_read)'
- en: The amount of data read since the server was started (in bytes).
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器启动以来读取的数据量（以字节为单位）。
- en: '[`Innodb_data_reads`](server-status-variables.html#statvar_Innodb_data_reads)'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_data_reads`](server-status-variables.html#statvar_Innodb_data_reads)'
- en: The total number of data reads (OS file reads).
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 总数据读取次数（操作系统文件读取）。
- en: '[`Innodb_data_writes`](server-status-variables.html#statvar_Innodb_data_writes)'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_data_writes`](server-status-variables.html#statvar_Innodb_data_writes)'
- en: The total number of data writes.
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 总数据写入次数。
- en: '[`Innodb_data_written`](server-status-variables.html#statvar_Innodb_data_written)'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_data_written`](server-status-variables.html#statvar_Innodb_data_written)'
- en: The amount of data written so far, in bytes.
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 到目前为止写入的数据量，以字节为单位。
- en: '[`Innodb_dblwr_pages_written`](server-status-variables.html#statvar_Innodb_dblwr_pages_written)'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_dblwr_pages_written`](server-status-variables.html#statvar_Innodb_dblwr_pages_written)'
- en: The number of [pages](glossary.html#glos_page "page") that have been written
    to the [doublewrite buffer](glossary.html#glos_doublewrite_buffer "doublewrite
    buffer"). See [Section 17.11.1, “InnoDB Disk I/O”](innodb-disk-io.html "17.11.1 InnoDB
    Disk I/O").
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 写入到[双写缓冲区](glossary.html#glos_doublewrite_buffer "doublewrite buffer")的页面数量。参见[第17.11.1节，“InnoDB磁盘I/O”](innodb-disk-io.html
    "17.11.1 InnoDB Disk I/O")。
- en: '[`Innodb_dblwr_writes`](server-status-variables.html#statvar_Innodb_dblwr_writes)'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_dblwr_writes`](server-status-variables.html#statvar_Innodb_dblwr_writes)'
- en: The number of doublewrite operations that have been performed. See [Section 17.11.1,
    “InnoDB Disk I/O”](innodb-disk-io.html "17.11.1 InnoDB Disk I/O").
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行的双写操作次数。参见[第17.11.1节，“InnoDB磁盘I/O”](innodb-disk-io.html "17.11.1 InnoDB Disk
    I/O")。
- en: '[`Innodb_have_atomic_builtins`](server-status-variables.html#statvar_Innodb_have_atomic_builtins)'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_have_atomic_builtins`](server-status-variables.html#statvar_Innodb_have_atomic_builtins)'
- en: Indicates whether the server was built with [atomic instructions](glossary.html#glos_atomic_instruction
    "atomic instruction").
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指示服务器是否使用[原子指令](glossary.html#glos_atomic_instruction "atomic instruction")构建。
- en: '[`Innodb_log_waits`](server-status-variables.html#statvar_Innodb_log_waits)'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_log_waits`](server-status-variables.html#statvar_Innodb_log_waits)'
- en: The number of times that the [log buffer](glossary.html#glos_log_buffer "log
    buffer") was too small and a [wait](glossary.html#glos_wait "wait") was required
    for it to be [flushed](glossary.html#glos_flush "flush") before continuing.
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[日志缓冲区](glossary.html#glos_log_buffer "log buffer")太小，需要等待[刷新](glossary.html#glos_flush
    "flush")才能继续的次数。'
- en: '[`Innodb_log_write_requests`](server-status-variables.html#statvar_Innodb_log_write_requests)'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_log_write_requests`](server-status-variables.html#statvar_Innodb_log_write_requests)'
- en: The number of write requests for the `InnoDB` [redo log](glossary.html#glos_redo_log
    "redo log").
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对`InnoDB` [重做日志](glossary.html#glos_redo_log "redo log") 的写入请求次数。
- en: '[`Innodb_log_writes`](server-status-variables.html#statvar_Innodb_log_writes)'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_log_writes`](server-status-variables.html#statvar_Innodb_log_writes)'
- en: The number of physical writes to the `InnoDB` [redo log](glossary.html#glos_redo_log
    "redo log") file.
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对`InnoDB` [重做日志](glossary.html#glos_redo_log "redo log") 文件的物理写入次数。
- en: '[`Innodb_num_open_files`](server-status-variables.html#statvar_Innodb_num_open_files)'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_num_open_files`](server-status-variables.html#statvar_Innodb_num_open_files)'
- en: The number of files `InnoDB` currently holds open.
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`当前打开的文件数量。'
- en: '[`Innodb_os_log_fsyncs`](server-status-variables.html#statvar_Innodb_os_log_fsyncs)'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_os_log_fsyncs`](server-status-variables.html#statvar_Innodb_os_log_fsyncs)'
- en: The number of `fsync()` writes done to the `InnoDB` [redo log](glossary.html#glos_redo_log
    "redo log") files.
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对`InnoDB` [重做日志](glossary.html#glos_redo_log "redo log") 文件执行的`fsync()`写入次数。
- en: '[`Innodb_os_log_pending_fsyncs`](server-status-variables.html#statvar_Innodb_os_log_pending_fsyncs)'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_os_log_pending_fsyncs`](server-status-variables.html#statvar_Innodb_os_log_pending_fsyncs)'
- en: The number of pending `fsync()` operations for the `InnoDB` [redo log](glossary.html#glos_redo_log
    "redo log") files.
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` [重做日志](glossary.html#glos_redo_log "redo log") 文件的待处理`fsync()`操作数量。'
- en: '[`Innodb_os_log_pending_writes`](server-status-variables.html#statvar_Innodb_os_log_pending_writes)'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_os_log_pending_writes`](server-status-variables.html#statvar_Innodb_os_log_pending_writes)'
- en: The number of pending writes to the `InnoDB` [redo log](glossary.html#glos_redo_log
    "redo log") files.
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对`InnoDB` [重做日志](glossary.html#glos_redo_log "redo log") 文件的待写入次数。
- en: '[`Innodb_os_log_written`](server-status-variables.html#statvar_Innodb_os_log_written)'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_os_log_written`](server-status-variables.html#statvar_Innodb_os_log_written)'
- en: The number of bytes written to the `InnoDB` [redo log](glossary.html#glos_redo_log
    "redo log") files.
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 写入到 `InnoDB` [重做日志](glossary.html#glos_redo_log "重做日志") 文件的字节数。
- en: '[`Innodb_page_size`](server-status-variables.html#statvar_Innodb_page_size)'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_page_size`](server-status-variables.html#statvar_Innodb_page_size)'
- en: '`InnoDB` page size (default 16KB). Many values are counted in pages; the page
    size enables them to be easily converted to bytes.'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB` 页面大小（默认为 16KB）。许多值以页面为单位计数；页面大小使它们可以轻松转换为字节。'
- en: '[`Innodb_pages_created`](server-status-variables.html#statvar_Innodb_pages_created)'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_pages_created`](server-status-variables.html#statvar_Innodb_pages_created)'
- en: The number of pages created by operations on `InnoDB` tables.
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由对 `InnoDB` 表的操作创建的页面数。
- en: '[`Innodb_pages_read`](server-status-variables.html#statvar_Innodb_pages_read)'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_pages_read`](server-status-variables.html#statvar_Innodb_pages_read)'
- en: The number of pages read from the `InnoDB` buffer pool by operations on `InnoDB`
    tables.
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于对 `InnoDB` 表的操作从 `InnoDB` 缓冲池中读取的页面数。
- en: '[`Innodb_pages_written`](server-status-variables.html#statvar_Innodb_pages_written)'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_pages_written`](server-status-variables.html#statvar_Innodb_pages_written)'
- en: The number of pages written by operations on `InnoDB` tables.
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由对 `InnoDB` 表的操作写入的页面数。
- en: '[`Innodb_redo_log_enabled`](server-status-variables.html#statvar_Innodb_redo_log_enabled)'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_enabled`](server-status-variables.html#statvar_Innodb_redo_log_enabled)'
- en: Whether redo logging is enabled or disabled. See [Disabling Redo Logging](innodb-redo-log.html#innodb-disable-redo-logging
    "Disabling Redo Logging").
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重做日志记录是否已启用或��禁用。请参见 [禁用重做日志](innodb-redo-log.html#innodb-disable-redo-logging
    "禁用重做日志")。
- en: This variable was added in MySQL 8.0.21.
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量在 MySQL 8.0.21 中添加。
- en: '[`Innodb_redo_log_capacity_resized`](server-status-variables.html#statvar_Innodb_redo_log_capacity_resized)'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_capacity_resized`](server-status-variables.html#statvar_Innodb_redo_log_capacity_resized)'
- en: The total redo log capacity for all redo log files, in bytes, after the last
    completed capacity resize operation. The value includes ordinary and spare redo
    log files.
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有重做日志文件的总重做日志容量（以字节为单位），在最后一次完成的容量调整操作之后。该值包括普通和备用重做日志文件。
- en: If there is no pending resize down operation, [`Innodb_redo_log_capacity_resized`](server-status-variables.html#statvar_Innodb_redo_log_capacity_resized)
    should be equal to the [`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)
    setting. Resize up operations are instantaneous.
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果没有待处理的调整容量向下操作，[`Innodb_redo_log_capacity_resized`](server-status-variables.html#statvar_Innodb_redo_log_capacity_resized)
    应等于 [`innodb_redo_log_capacity`](innodb-parameters.html#sysvar_innodb_redo_log_capacity)
    设置。调整容量向上的操作是瞬时的。
- en: For related information, see [Section 17.6.5, “Redo Log”](innodb-redo-log.html
    "17.6.5 Redo Log").
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关相关信息，请参见 [Section 17.6.5, “重做日志”](innodb-redo-log.html "17.6.5 重做日志")。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量在 MySQL 8.0.30 中添加。
- en: '[`Innodb_redo_log_checkpoint_lsn`](server-status-variables.html#statvar_Innodb_redo_log_checkpoint_lsn)'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_checkpoint_lsn`](server-status-variables.html#statvar_Innodb_redo_log_checkpoint_lsn)'
- en: The redo log checkpoint LSN. For related information, see [Section 17.6.5, “Redo
    Log”](innodb-redo-log.html "17.6.5 Redo Log").
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重做日志检查点 LSN。有关相关信息，请参见 [Section 17.6.5, “重做日志”](innodb-redo-log.html "17.6.5 重做日志")。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量在 MySQL 8.0.30 中添加。
- en: '[`Innodb_redo_log_current_lsn`](server-status-variables.html#statvar_Innodb_redo_log_current_lsn)'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_current_lsn`](server-status-variables.html#statvar_Innodb_redo_log_current_lsn)'
- en: The current LSN represents the last written position in the redo log buffer.
    `InnoDB` writes data to the redo log buffer inside the MySQL process before requesting
    that the operating system write the data to the current redo log file. For related
    information, see [Section 17.6.5, “Redo Log”](innodb-redo-log.html "17.6.5 Redo
    Log").
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前 LSN 表示重做日志缓冲区中的最后写入位置。`InnoDB` 在请求操作系统将数据写入当前重做日志文件之前，将数据写入 MySQL 进程内的重做日志缓冲区。有关相关信息，请参见
    [Section 17.6.5, “重做日志”](innodb-redo-log.html "17.6.5 重做日志")。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量在 MySQL 8.0.30 中添加。
- en: '[`Innodb_redo_log_flushed_to_disk_lsn`](server-status-variables.html#statvar_Innodb_redo_log_flushed_to_disk_lsn)'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_flushed_to_disk_lsn`](server-status-variables.html#statvar_Innodb_redo_log_flushed_to_disk_lsn)'
- en: The flushed-to-disk LSN. `InnoDB` first writes data to the redo log and then
    requests that the operating system flush the data to disk. The flushed-to-disk
    LSN represents the last position in the redo log that `InnoDB` knows has been
    flushed to disk. For related information, see [Section 17.6.5, “Redo Log”](innodb-redo-log.html
    "17.6.5 Redo Log").
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 刷新到磁盘的 LSN。`InnoDB` 首先将数据写入重做日志，然后请求操作系统将数据刷新到磁盘。刷新到磁盘的 LSN 表示 `InnoDB` 知道已刷新到磁盘的重做日志中的最后位置。有关相关信息，请参见
    [Section 17.6.5, “重做日志”](innodb-redo-log.html "17.6.5 重做日志")。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在MySQL 8.0.30中添加的。
- en: '[`Innodb_redo_log_logical_size`](server-status-variables.html#statvar_Innodb_redo_log_logical_size)'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_logical_size`](server-status-variables.html#statvar_Innodb_redo_log_logical_size)'
- en: A data size value, in bytes, representing the LSN range containing in-use redo
    log data, spanning from the oldest block required by redo log consumers to the
    latest written block. For related information, see [Section 17.6.5, “Redo Log”](innodb-redo-log.html
    "17.6.5 Redo Log").
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据大小值，以字节为单位，表示包含正在使用的重做日志数据的LSN范围，从重做日志消费者所需的最旧块到最新写入块。有关相关信息，请参见[第17.6.5节，“重做日志”](innodb-redo-log.html
    "17.6.5 重做日志")。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在MySQL 8.0.30中添加的。
- en: '[`Innodb_redo_log_physical_size`](server-status-variables.html#statvar_Innodb_redo_log_physical_size)'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_physical_size`](server-status-variables.html#statvar_Innodb_redo_log_physical_size)'
- en: The amount of disk space in bytes currently consumed by all redo log files on
    disk, excluding spare redo log files. For related information, see [Section 17.6.5,
    “Redo Log”](innodb-redo-log.html "17.6.5 Redo Log").
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前在磁盘上所有重做日志文件当前消耗的字节大小，不包括备用重做日志文件。有关相关信息，请参见[第17.6.5节，“重做日志”](innodb-redo-log.html
    "17.6.5 重做日志")。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在MySQL 8.0.30中添加的。
- en: '[`Innodb_redo_log_read_only`](server-status-variables.html#statvar_Innodb_redo_log_read_only)'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_read_only`](server-status-variables.html#statvar_Innodb_redo_log_read_only)'
- en: Whether the redo log is read-only.
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重做日志是否为只读。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在MySQL 8.0.30中添加的。
- en: '[`Innodb_redo_log_resize_status`](server-status-variables.html#statvar_Innodb_redo_log_resize_status)'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_resize_status`](server-status-variables.html#statvar_Innodb_redo_log_resize_status)'
- en: 'The redo log resize status indicating the current state of the redo log capacity
    resize mechanism. Possible values include:'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重做日志调整大小状态指示重做日志容量调整机制的当前状态。可能的值包括：
- en: '`OK`: There are no issues and no pending redo log capacity resize operations.'
  id: totrans-308
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OK`：没有问题，也没有待处理的重做日志容量调整操作。'
- en: '`Resizing down`: A resize down operation is in progress.'
  id: totrans-309
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`正在调整大小向下`：正在进行向下调整操作。'
- en: A resize up operation is instantaneous and therefore has no pending status.
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向上调整操作是瞬时的，因此没有待处理状态。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在MySQL 8.0.30中添加的。
- en: '[`Innodb_redo_log_uuid`](server-status-variables.html#statvar_Innodb_redo_log_uuid)'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_redo_log_uuid`](server-status-variables.html#statvar_Innodb_redo_log_uuid)'
- en: The redo log UUID.
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重做日志UUID。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在MySQL 8.0.30中添加的。
- en: '[`Innodb_row_lock_current_waits`](server-status-variables.html#statvar_Innodb_row_lock_current_waits)'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_row_lock_current_waits`](server-status-variables.html#statvar_Innodb_row_lock_current_waits)'
- en: The number of [row locks](glossary.html#glos_row_lock "row lock") currently
    waited for by operations on `InnoDB` tables.
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前由`InnoDB`表上的操作等待的[行锁](glossary.html#glos_row_lock "行锁")的数量。
- en: '[`Innodb_row_lock_time`](server-status-variables.html#statvar_Innodb_row_lock_time)'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_row_lock_time`](server-status-variables.html#statvar_Innodb_row_lock_time)'
- en: The total time spent in acquiring [row locks](glossary.html#glos_row_lock "row
    lock") for `InnoDB` tables, in milliseconds.
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 获取`InnoDB`表的[行锁](glossary.html#glos_row_lock "行锁")所花费的总时间，单位为毫秒。
- en: '[`Innodb_row_lock_time_avg`](server-status-variables.html#statvar_Innodb_row_lock_time_avg)'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_row_lock_time_avg`](server-status-variables.html#statvar_Innodb_row_lock_time_avg)'
- en: The average time to acquire a [row lock](glossary.html#glos_row_lock "row lock")
    for `InnoDB` tables, in milliseconds.
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 获取`InnoDB`表的[行锁](glossary.html#glos_row_lock "行锁")的平均时间，单位为毫秒。
- en: '[`Innodb_row_lock_time_max`](server-status-variables.html#statvar_Innodb_row_lock_time_max)'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_row_lock_time_max`](server-status-variables.html#statvar_Innodb_row_lock_time_max)'
- en: The maximum time to acquire a [row lock](glossary.html#glos_row_lock "row lock")
    for `InnoDB` tables, in milliseconds.
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 获取`InnoDB`表的[行锁](glossary.html#glos_row_lock "行锁")的最大时间，单位为毫秒。
- en: '[`Innodb_row_lock_waits`](server-status-variables.html#statvar_Innodb_row_lock_waits)'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_row_lock_waits`](server-status-variables.html#statvar_Innodb_row_lock_waits)'
- en: The number of times operations on `InnoDB` tables had to wait for a [row lock](glossary.html#glos_row_lock
    "row lock").
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`表上的操作必须等待[行锁](glossary.html#glos_row_lock "行锁")的次数。'
- en: '[`Innodb_rows_deleted`](server-status-variables.html#statvar_Innodb_rows_deleted)'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_rows_deleted`](server-status-variables.html#statvar_Innodb_rows_deleted)'
- en: The number of rows deleted from `InnoDB` tables.
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从`InnoDB`表中删除的行数。
- en: '[`Innodb_rows_inserted`](server-status-variables.html#statvar_Innodb_rows_inserted)'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_rows_inserted`](server-status-variables.html#statvar_Innodb_rows_inserted)'
- en: The number of rows inserted into `InnoDB` tables.
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 插入到`InnoDB`表中的行数。
- en: '[`Innodb_rows_read`](server-status-variables.html#statvar_Innodb_rows_read)'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_rows_read`](server-status-variables.html#statvar_Innodb_rows_read)'
- en: The number of rows read from `InnoDB` tables.
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从`InnoDB`表中读取的行数。
- en: '[`Innodb_rows_updated`](server-status-variables.html#statvar_Innodb_rows_updated)'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_rows_updated`](server-status-variables.html#statvar_Innodb_rows_updated)'
- en: The estimated number of rows updated in `InnoDB` tables.
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在`InnoDB`表中更新的估计行数。
- en: Note
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: This value is not meant to be 100% accurate. For an accurate (but more expensive)
    result, use [`ROW_COUNT()`](information-functions.html#function_row-count).
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此值并非百分之百准确。要获得准确（但更昂贵）的结果，请使用[`ROW_COUNT()`](information-functions.html#function_row-count)。
- en: '[`Innodb_system_rows_deleted`](server-status-variables.html#statvar_Innodb_system_rows_deleted)'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_system_rows_deleted`](server-status-variables.html#statvar_Innodb_system_rows_deleted)'
- en: The number of rows deleted from `InnoDB` tables belonging to system-created
    schemas.
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从系统创建的模式所属的`InnoDB`表中删除的行数。
- en: '[`Innodb_system_rows_inserted`](server-status-variables.html#statvar_Innodb_system_rows_inserted)'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_system_rows_inserted`](server-status-variables.html#statvar_Innodb_system_rows_inserted)'
- en: The number of rows inserted into `InnoDB` tables belonging to system-created
    schemas.
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 插入到系统创建的模式所属的`InnoDB`表中的行数。
- en: '[`Innodb_system_rows_read`](server-status-variables.html#statvar_Innodb_system_rows_read)'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_system_rows_read`](server-status-variables.html#statvar_Innodb_system_rows_read)'
- en: The number of rows read from `InnoDB` tables belonging to system-created schemas.
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从系统创建的模式所属的`InnoDB`表中读取的行数。
- en: '[`Innodb_truncated_status_writes`](server-status-variables.html#statvar_Innodb_truncated_status_writes)'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_truncated_status_writes`](server-status-variables.html#statvar_Innodb_truncated_status_writes)'
- en: The number of times output from the `SHOW ENGINE INNODB STATUS` statement has
    been truncated.
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`SHOW ENGINE INNODB STATUS`语句的输出被截断的次数。'
- en: '[`Innodb_undo_tablespaces_active`](server-status-variables.html#statvar_Innodb_undo_tablespaces_active)'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_undo_tablespaces_active`](server-status-variables.html#statvar_Innodb_undo_tablespaces_active)'
- en: The number of active undo tablespaces. Includes both implicit (`InnoDB`-created)
    and explicit (user-created) undo tablespaces. For information about undo tablespaces,
    see [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html "17.6.3.4 Undo
    Tablespaces").
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 活动撤销表空间的数量。包括隐式（由`InnoDB`创建）和显式（用户创建）的撤销表空间。有关撤销表空间的信息，请参见[第17.6.3.4节，“撤销表空间”](innodb-undo-tablespaces.html
    "17.6.3.4 撤销表空间")。
- en: '[`Innodb_undo_tablespaces_explicit`](server-status-variables.html#statvar_Innodb_undo_tablespaces_explicit)'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_undo_tablespaces_explicit`](server-status-variables.html#statvar_Innodb_undo_tablespaces_explicit)'
- en: The number of user-created undo tablespaces. For information about undo tablespaces,
    see [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html "17.6.3.4 Undo
    Tablespaces").
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用户创建的撤销表空间的数量。有关撤销表空间的信息，请参见[第17.6.3.4节，“撤销表空间”](innodb-undo-tablespaces.html
    "17.6.3.4 撤销表空间")。
- en: '[`Innodb_undo_tablespaces_implicit`](server-status-variables.html#statvar_Innodb_undo_tablespaces_implicit)'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_undo_tablespaces_implicit`](server-status-variables.html#statvar_Innodb_undo_tablespaces_implicit)'
- en: The number of undo tablespaces created by `InnoDB`. Two default undo tablespaces
    are created by `InnoDB` when the MySQL instance is initialized. For information
    about undo tablespaces, see [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html
    "17.6.3.4 Undo Tablespaces").
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`InnoDB`创建的撤销表空间的数量。当初始化MySQL实例时，`InnoDB`会创建两个默认的撤销表空间。有关撤销表空间的信息，请参见[第17.6.3.4节，“撤销表空间”](innodb-undo-tablespaces.html
    "17.6.3.4 撤销表空间")。'
- en: '[`Innodb_undo_tablespaces_total`](server-status-variables.html#statvar_Innodb_undo_tablespaces_total)'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Innodb_undo_tablespaces_total`](server-status-variables.html#statvar_Innodb_undo_tablespaces_total)'
- en: The total number of undo tablespaces. Includes both implicit (`InnoDB`-created)
    and explicit (user-created) undo tablespaces, active and inactive. For information
    about undo tablespaces, see [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html
    "17.6.3.4 Undo Tablespaces").
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 撤销表空间的总数。包括隐式（由`InnoDB`创建）和显式（用户创建）的撤销表空间，活动和非活动的。有关撤销表空间的信息，请参见[第17.6.3.4节，“撤销表空间”](innodb-undo-tablespaces.html
    "17.6.3.4 撤销表空间")。
- en: '[`Key_blocks_not_flushed`](server-status-variables.html#statvar_Key_blocks_not_flushed)'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Key_blocks_not_flushed`](server-status-variables.html#statvar_Key_blocks_not_flushed)'
- en: The number of key blocks in the `MyISAM` key cache that have changed but have
    not yet been flushed to disk.
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`MyISAM`键缓存中已更改但尚未刷新到磁盘的关键块数。'
- en: '[`Key_blocks_unused`](server-status-variables.html#statvar_Key_blocks_unused)'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Key_blocks_unused`](server-status-variables.html#statvar_Key_blocks_unused)'
- en: The number of unused blocks in the `MyISAM` key cache. You can use this value
    to determine how much of the key cache is in use; see the discussion of [`key_buffer_size`](server-system-variables.html#sysvar_key_buffer_size)
    in [Section 7.1.8, “Server System Variables”](server-system-variables.html "7.1.8 Server
    System Variables").
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`MyISAM`键缓存中未使用的块数。您可以使用此值来确定键缓存的使用情况；请参阅[第7.1.8节，“服务器系统变量”](server-system-variables.html
    "7.1.8 服务器系统变量")中对[`key_buffer_size`](server-system-variables.html#sysvar_key_buffer_size)的讨论。'
- en: '[`Key_blocks_used`](server-status-variables.html#statvar_Key_blocks_used)'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Key_blocks_used`](server-status-variables.html#statvar_Key_blocks_used)'
- en: The number of used blocks in the `MyISAM` key cache. This value is a high-water
    mark that indicates the maximum number of blocks that have ever been in use at
    one time.
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`MyISAM`键缓存中使用的块数。此值是一个高水位标记，表示曾经同时使用的最大块数。'
- en: '[`Key_read_requests`](server-status-variables.html#statvar_Key_read_requests)'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Key_read_requests`](server-status-variables.html#statvar_Key_read_requests)'
- en: The number of requests to read a key block from the `MyISAM` key cache.
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请求从`MyISAM`键缓存中读取键块的次数。
- en: '[`Key_reads`](server-status-variables.html#statvar_Key_reads)'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Key_reads`](server-status-variables.html#statvar_Key_reads)'
- en: The number of physical reads of a key block from disk into the `MyISAM` key
    cache. If [`Key_reads`](server-status-variables.html#statvar_Key_reads) is large,
    then your [`key_buffer_size`](server-system-variables.html#sysvar_key_buffer_size)
    value is probably too small. The cache miss rate can be calculated as [`Key_reads`](server-status-variables.html#statvar_Key_reads)/[`Key_read_requests`](server-status-variables.html#statvar_Key_read_requests).
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从磁盘读取键块到`MyISAM`键缓存的物理读取次数。如果[`Key_reads`](server-status-variables.html#statvar_Key_reads)很大，则您的[`key_buffer_size`](server-system-variables.html#sysvar_key_buffer_size)值可能太小。缓存未命中率可以计算为[`Key_reads`](server-status-variables.html#statvar_Key_reads)/[`Key_read_requests`](server-status-variables.html#statvar_Key_read_requests)。
- en: '[`Key_write_requests`](server-status-variables.html#statvar_Key_write_requests)'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Key_write_requests`](server-status-variables.html#statvar_Key_write_requests)'
- en: The number of requests to write a key block to the `MyISAM` key cache.
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请求将键块写入`MyISAM`键缓存的次数。
- en: '[`Key_writes`](server-status-variables.html#statvar_Key_writes)'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Key_writes`](server-status-variables.html#statvar_Key_writes)'
- en: The number of physical writes of a key block from the `MyISAM` key cache to
    disk.
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从`MyISAM`键缓存到磁盘的键块的物理写入次数。
- en: '[`Last_query_cost`](server-status-variables.html#statvar_Last_query_cost)'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Last_query_cost`](server-status-variables.html#statvar_Last_query_cost)'
- en: The total cost of the last compiled query as computed by the query optimizer.
    This is useful for comparing the cost of different query plans for the same query.
    The default value of 0 means that no query has been compiled yet. The default
    value is 0\. [`Last_query_cost`](server-status-variables.html#statvar_Last_query_cost)
    has session scope.
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查询优化器计算的上一个编译查询的总成本。这对于比较相同查询的不同查询计划的成本很有用。默认值为0表示尚未编译任何查询。默认值为0。[`Last_query_cost`](server-status-variables.html#statvar_Last_query_cost)具有会话范围。
- en: 'In MySQL 8.0.16 and later, this variable shows the cost of queries that have
    multiple query blocks, summing the cost estimates of each query block, estimating
    how many times non-cacheable subqueries are executed, and multiplying the cost
    of those query blocks by the number of subquery executions. (Bug #92766, Bug #28786951)
    Prior to MySQL 8.0.16, `Last_query_cost` was computed accurately only for simple,
    “flat” queries, but not for complex queries such as those containing subqueries
    or [`UNION`](union.html "15.2.18 UNION Clause"). (For the latter, the value was
    set to 0.)'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '在MySQL 8.0.16及更高版本中，此变量显示具有多个查询块的查询的成本，总结每个查询块的成本估计，估计非可缓存子查询执行的次数，并将这些查询块的成本乘以子查询执行的次数。
    (Bug #92766, Bug #28786951) 在MySQL 8.0.16之前，`Last_query_cost`仅对简单的“平面”查询进行准确计算，而不适用于包含子查询或[`UNION`](union.html
    "15.2.18 UNION Clause")等复杂查询。 (对于后者，该值设置为0。)'
- en: '[`Last_query_partial_plans`](server-status-variables.html#statvar_Last_query_partial_plans)'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Last_query_partial_plans`](server-status-variables.html#statvar_Last_query_partial_plans)'
- en: The number of iterations the query optimizer made in execution plan construction
    for the previous query.
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查询优化器在构建上一个查询的执行计划时所做的迭代次数。
- en: '`Last_query_partial_plans` has session scope.'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Last_query_partial_plans`具有会话范围。'
- en: '[`Locked_connects`](server-status-variables.html#statvar_Locked_connects)'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Locked_connects`](server-status-variables.html#statvar_Locked_connects)'
- en: The number of attempts to connect to locked user accounts. For information about
    account locking and unlocking, see [Section 8.2.20, “Account Locking”](account-locking.html
    "8.2.20 Account Locking").
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试连接被锁定用户账户的次数。有关账户锁定和解锁的信息，请参见[第8.2.20节，“账户锁定”](account-locking.html "8.2.20 Account
    Locking")。
- en: '[`Max_execution_time_exceeded`](server-status-variables.html#statvar_Max_execution_time_exceeded)'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Max_execution_time_exceeded`](server-status-variables.html#statvar_Max_execution_time_exceeded)'
- en: The number of [`SELECT`](select.html "15.2.13 SELECT Statement") statements
    for which the execution timeout was exceeded.
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行超时时间已超过的[`SELECT`](select.html "15.2.13 SELECT Statement")语句数量。
- en: '[`Max_execution_time_set`](server-status-variables.html#statvar_Max_execution_time_set)'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Max_execution_time_set`](server-status-variables.html#statvar_Max_execution_time_set)'
- en: The number of [`SELECT`](select.html "15.2.13 SELECT Statement") statements
    for which a nonzero execution timeout was set. This includes statements that include
    a nonzero [`MAX_EXECUTION_TIME`](optimizer-hints.html#optimizer-hints-execution-time
    "Statement Execution Time Optimizer Hints") optimizer hint, and statements that
    include no such hint but execute while the timeout indicated by the [`max_execution_time`](server-system-variables.html#sysvar_max_execution_time)
    system variable is nonzero.
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置了非零执行超时时间的[`SELECT`](select.html "15.2.13 SELECT Statement")语句数量。这包括包含非零[`MAX_EXECUTION_TIME`](optimizer-hints.html#optimizer-hints-execution-time
    "Statement Execution Time Optimizer Hints")优化提示的语句，以及不包含此类提示但在[`max_execution_time`](server-system-variables.html#sysvar_max_execution_time)系统变量指示的超时时间非零时执行的语句。
- en: '[`Max_execution_time_set_failed`](server-status-variables.html#statvar_Max_execution_time_set_failed)'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Max_execution_time_set_failed`](server-status-variables.html#statvar_Max_execution_time_set_failed)'
- en: The number of [`SELECT`](select.html "15.2.13 SELECT Statement") statements
    for which the attempt to set an execution timeout failed.
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试设置执行超时失败的[`SELECT`](select.html "15.2.13 SELECT Statement")语句数量。
- en: '[`Max_used_connections`](server-status-variables.html#statvar_Max_used_connections)'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Max_used_connections`](server-status-variables.html#statvar_Max_used_connections)'
- en: The maximum number of connections that have been in use simultaneously since
    the server started.
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器启动以来同时使用的最大连接数。
- en: '[`Max_used_connections_time`](server-status-variables.html#statvar_Max_used_connections_time)'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Max_used_connections_time`](server-status-variables.html#statvar_Max_used_connections_time)'
- en: The time at which [`Max_used_connections`](server-status-variables.html#statvar_Max_used_connections)
    reached its current value.
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 达到当前值时的[`Max_used_connections`](server-status-variables.html#statvar_Max_used_connections)时间。
- en: '[`Not_flushed_delayed_rows`](server-status-variables.html#statvar_Not_flushed_delayed_rows)'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Not_flushed_delayed_rows`](server-status-variables.html#statvar_Not_flushed_delayed_rows)'
- en: This status variable is deprecated (because `DELAYED` inserts are not supported);
    expect it to be removed in a future release.
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此状态变量已弃用（因为不支持`DELAYED`插入）；预计在将来的版本中将其移除。
- en: '[`mecab_charset`](server-status-variables.html#statvar_mecab_charset)'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`mecab_charset`](server-status-variables.html#statvar_mecab_charset)'
- en: The character set currently used by the MeCab full-text parser plugin. For related
    information, see [Section 14.9.9, “MeCab Full-Text Parser Plugin”](fulltext-search-mecab.html
    "14.9.9 MeCab Full-Text Parser Plugin").
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前由MeCab全文本解析器插件使用的字符集。有关相关信息，请参见[第14.9.9节，“MeCab全文本解析器插件”](fulltext-search-mecab.html
    "14.9.9 MeCab Full-Text Parser Plugin")。
- en: '[`Ongoing_anonymous_transaction_count`](server-status-variables.html#statvar_Ongoing_anonymous_transaction_count)'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ongoing_anonymous_transaction_count`](server-status-variables.html#statvar_Ongoing_anonymous_transaction_count)'
- en: Shows the number of ongoing transactions which have been marked as anonymous.
    This can be used to ensure that no further transactions are waiting to be processed.
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示已标记为匿名的进行中事务数量。这可用于确保没有进一步的事务等待处理。
- en: '[`Ongoing_anonymous_gtid_violating_transaction_count`](server-status-variables.html#statvar_Ongoing_anonymous_gtid_violating_transaction_count)'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ongoing_anonymous_gtid_violating_transaction_count`](server-status-variables.html#statvar_Ongoing_anonymous_gtid_violating_transaction_count)'
- en: This status variable is only available in debug builds. Shows the number of
    ongoing transactions which use [`gtid_next=ANONYMOUS`](replication-options-gtids.html#sysvar_gtid_next)
    and that violate GTID consistency.
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此状态变量仅在调试构建中可用。显示使用[`gtid_next=ANONYMOUS`](replication-options-gtids.html#sysvar_gtid_next)并违反GTID一致性的进行中事务数量。
- en: '[`Ongoing_automatic_gtid_violating_transaction_count`](server-status-variables.html#statvar_Ongoing_automatic_gtid_violating_transaction_count)'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ongoing_automatic_gtid_violating_transaction_count`](server-status-variables.html#statvar_Ongoing_automatic_gtid_violating_transaction_count)'
- en: This status variable is only available in debug builds. Shows the number of
    ongoing transactions which use [`gtid_next=AUTOMATIC`](replication-options-gtids.html#sysvar_gtid_next)
    and that violate GTID consistency.
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此状态变量仅在调试构建中可用。显示正在使用[`gtid_next=AUTOMATIC`](replication-options-gtids.html#sysvar_gtid_next)并违反GTID一致性的进行中事务的数量。
- en: '[`Open_files`](server-status-variables.html#statvar_Open_files)'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Open_files`](server-status-variables.html#statvar_Open_files)'
- en: The number of files that are open. This count includes regular files opened
    by the server. It does not include other types of files such as sockets or pipes.
    Also, the count does not include files that storage engines open using their own
    internal functions rather than asking the server level to do so.
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已打开的文件数量。此计数包括服务器打开的常规文件。它不包括其他类型的文件，如套接字或管道。此计数还不包括存储引擎使用其自己的内部函数而不是请求服务器级别执行的文件。
- en: '[`Open_streams`](server-status-variables.html#statvar_Open_streams)'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Open_streams`](server-status-variables.html#statvar_Open_streams)'
- en: The number of streams that are open (used mainly for logging).
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已打开的流数量（主要用于日志记录）。
- en: '[`Open_table_definitions`](server-status-variables.html#statvar_Open_table_definitions)'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Open_table_definitions`](server-status-variables.html#statvar_Open_table_definitions)'
- en: The number of cached table definitions.
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已缓存的表定义数量。
- en: '[`Open_tables`](server-status-variables.html#statvar_Open_tables)'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Open_tables`](server-status-variables.html#statvar_Open_tables)'
- en: The number of tables that are open.
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已打开的表数量。
- en: '[`Opened_files`](server-status-variables.html#statvar_Opened_files)'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Opened_files`](server-status-variables.html#statvar_Opened_files)'
- en: The number of files that have been opened with `my_open()` (a `mysys` library
    function). Parts of the server that open files without using this function do
    not increment the count.
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已使用`my_open()`（一个`mysys`库函数）打开的文件数量。服务器的部分打开文件而不使用此函数的部分不会增加计数。
- en: '[`Opened_table_definitions`](server-status-variables.html#statvar_Opened_table_definitions)'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Opened_table_definitions`](server-status-variables.html#statvar_Opened_table_definitions)'
- en: The number of table definitions that have been cached.
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已缓存的表定义数量。
- en: '[`Opened_tables`](server-status-variables.html#statvar_Opened_tables)'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Opened_tables`](server-status-variables.html#statvar_Opened_tables)'
- en: The number of tables that have been opened. If [`Opened_tables`](server-status-variables.html#statvar_Opened_tables)
    is big, your [`table_open_cache`](server-system-variables.html#sysvar_table_open_cache)
    value is probably too small.
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已打开的表数量。如果[`Opened_tables`](server-status-variables.html#statvar_Opened_tables)很大，则您的[`table_open_cache`](server-system-variables.html#sysvar_table_open_cache)值可能太小。
- en: '`Performance_schema_*`xxx`*`'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Performance_schema_*`xxx`*`'
- en: Performance Schema status variables are listed in [Section 29.16, “Performance
    Schema Status Variables”](performance-schema-status-variables.html "29.16 Performance
    Schema Status Variables"). These variables provide information about instrumentation
    that could not be loaded or created due to memory constraints.
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[第29.16节，“性能模式状态变量”](performance-schema-status-variables.html "29.16 性能模式状态变量")中列出了性能模式状态变量。这些变量提供了关于由于内存限制而无法加载或创建的仪器信息。'
- en: '[`Prepared_stmt_count`](server-status-variables.html#statvar_Prepared_stmt_count)'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Prepared_stmt_count`](server-status-variables.html#statvar_Prepared_stmt_count)'
- en: The current number of prepared statements. (The maximum number of statements
    is given by the [`max_prepared_stmt_count`](server-system-variables.html#sysvar_max_prepared_stmt_count)
    system variable.)
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前准备语句的数量。（最大语句数由[`max_prepared_stmt_count`](server-system-variables.html#sysvar_max_prepared_stmt_count)系统变量给出。）
- en: '[`Queries`](server-status-variables.html#statvar_Queries)'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Queries`](server-status-variables.html#statvar_Queries)'
- en: The number of statements executed by the server. This variable includes statements
    executed within stored programs, unlike the [`Questions`](server-status-variables.html#statvar_Questions)
    variable. It does not count `COM_PING` or `COM_STATISTICS` commands.
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器执行的语句数量。此变量包括存储程序内执行的语句，不同于[`Questions`](server-status-variables.html#statvar_Questions)变量。它不计算`COM_PING`或`COM_STATISTICS`命令。
- en: The discussion at the beginning of this section indicates how to relate this
    statement-counting status variable to other such variables.
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本节开头的讨论说明了如何将此语句计数状态变量与其他类似变量相关联。
- en: '[`Questions`](server-status-variables.html#statvar_Questions)'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Questions`](server-status-variables.html#statvar_Questions)'
- en: The number of statements executed by the server. This includes only statements
    sent to the server by clients and not statements executed within stored programs,
    unlike the [`Queries`](server-status-variables.html#statvar_Queries) variable.
    This variable does not count `COM_PING`, `COM_STATISTICS`, `COM_STMT_PREPARE`,
    `COM_STMT_CLOSE`, or `COM_STMT_RESET` commands.
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器执行的语句数量。这仅包括由客户端发送到服务器的语句，不包括存储程序内执行的语句，与[`Queries`](server-status-variables.html#statvar_Queries)变量不同。此变量不计算`COM_PING`、`COM_STATISTICS`、`COM_STMT_PREPARE`、`COM_STMT_CLOSE`或`COM_STMT_RESET`命令。
- en: The discussion at the beginning of this section indicates how to relate this
    statement-counting status variable to other such variables.
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本节开头的讨论说明了如何将此语句计数状态变量与其他类似变量相关联。
- en: '[`Replica_open_temp_tables`](server-status-variables.html#statvar_Replica_open_temp_tables)'
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Replica_open_temp_tables`](server-status-variables.html#statvar_Replica_open_temp_tables)'
- en: From MySQL 8.0.26, use [`Replica_open_temp_tables`](server-status-variables.html#statvar_Replica_open_temp_tables)
    in place of [`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables).
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，使用[`Replica_open_temp_tables`](server-status-variables.html#statvar_Replica_open_temp_tables)代替[`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)，后者从该版本开始已被弃用。在MySQL
    8.0.26之前的版本中，请使用[`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)。
- en: '[`Replica_open_temp_tables`](server-status-variables.html#statvar_Replica_open_temp_tables)
    shows the number of temporary tables that the replication SQL thread currently
    has open. If the value is greater than zero, it is not safe to shut down the replica;
    see [Section 19.5.1.31, “Replication and Temporary Tables”](replication-features-temptables.html
    "19.5.1.31 Replication and Temporary Tables"). This variable reports the total
    count of open temporary tables for *all* replication channels.'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Replica_open_temp_tables`](server-status-variables.html#statvar_Replica_open_temp_tables)显示了复制SQL线程当前打开的临时表的数量。如果值大于零，则关闭复制品是不安全的；请参阅[第19.5.1.31节，“复制和临时表”](replication-features-temptables.html
    "19.5.1.31 复制和临时表")。此变量报告了*所有*复制通道的打开临时表的总数。'
- en: '[`Replica_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Replica_rows_last_search_algorithm_used)'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Replica_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Replica_rows_last_search_algorithm_used)'
- en: From MySQL 8.0.26, use [`Replica_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Replica_rows_last_search_algorithm_used)
    in place of [`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used).
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，使用[`Replica_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Replica_rows_last_search_algorithm_used)代替[`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)，后者从该版本开始已被弃用。在MySQL
    8.0.26之前的版本中，请使用[`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)。
- en: '[`Replica_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Replica_rows_last_search_algorithm_used)
    shows the search algorithm that was most recently used by this replica to locate
    rows for row-based replication. The result shows whether the replica used indexes,
    a table scan, or hashing as the search algorithm for the last transaction executed
    on any channel.'
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Replica_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Replica_rows_last_search_algorithm_used)显示了此复制品最近用于定位行的搜索算法。结果显示了复制品在任何通道上执行的最后一个事务中使用的搜索算法是使用索引、表扫描还是哈希。'
- en: The method used depends on the setting for the [`slave_rows_search_algorithms`](replication-options-replica.html#sysvar_slave_rows_search_algorithms)
    system variable (which is now deprecated), and the keys that are available on
    the relevant table.
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用的方法取决于[`slave_rows_search_algorithms`](replication-options-replica.html#sysvar_slave_rows_search_algorithms)系统变量的设置（现已弃用），以及相关表上可用的键。
- en: This variable is available only for debug builds of MySQL.
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量仅适用于MySQL的调试版本。
- en: '[`Resource_group_supported`](server-status-variables.html#statvar_Resource_group_supported)'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Resource_group_supported`](server-status-variables.html#statvar_Resource_group_supported)'
- en: Indicates whether the resource group feature is supported.
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指示资源组功能是否受支持。
- en: On some platforms or MySQL server configurations, resource groups are unavailable
    or have limitations. In particular, Linux systems might require a manual step
    for some installation methods. For details, see [Resource Group Restrictions](resource-groups.html#resource-group-restrictions
    "Resource Group Restrictions").
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在某些平台或MySQL服务器配置中，资源组可能不可用或存在限制。特别是，Linux系统可能需要一些安装方法的手动步骤。有关详细信息，请参阅[资源组限制](resource-groups.html#resource-group-restrictions
    "资源组限制")。
- en: '[`Rpl_semi_sync_master_clients`](server-status-variables.html#statvar_Rpl_semi_sync_master_clients)'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_clients`](server-status-variables.html#statvar_Rpl_semi_sync_master_clients)'
- en: The number of semisynchronous replicas.
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 半同步副本的数量。
- en: '[`Rpl_semi_sync_master_clients`](server-status-variables.html#statvar_Rpl_semi_sync_master_clients)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_clients`](server-status-variables.html#statvar_Rpl_semi_sync_source_clients)
    is available instead.'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_master_clients`](server-status-variables.html#statvar_Rpl_semi_sync_master_clients)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_clients`](server-status-variables.html#statvar_Rpl_semi_sync_source_clients)。
- en: '[`Rpl_semi_sync_master_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_avg_wait_time)'
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_avg_wait_time)'
- en: The average time in microseconds the source waited for a replica reply. This
    variable is always `0`, and is deprecated; expect it to be removed in a future
    version.
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源等待复制回复的平均时间（以微秒为单位）。这个变量始终为`0`，已被弃用；预计将在将来的版本中移除。
- en: '[`Rpl_semi_sync_master_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_avg_wait_time)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_avg_wait_time)
    is available instead.'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_master_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_avg_wait_time)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_avg_wait_time)。
- en: '[`Rpl_semi_sync_master_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_wait_time)'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_wait_time)'
- en: The total time in microseconds the source waited for replica replies. This variable
    is always `0`, and is deprecated; expect it to be removed in a future version.
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源等待复制回复的总时间（以微秒为单位）。这个变量始终为`0`，已被弃用；预计将在将来的版本中移除。
- en: '[`Rpl_semi_sync_master_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_wait_time)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_wait_time)
    is available instead.'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_master_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_wait_time)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_avg_wait_time)。
- en: '[`Rpl_semi_sync_master_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_waits)'
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_waits)'
- en: The total number of times the source waited for replica replies.
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源等待复制回复的总次数。
- en: '[`Rpl_semi_sync_master_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_waits)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_waits)
    is available instead.'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以建立半同步复制时，[`Rpl_semi_sync_master_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_waits)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_waits)。
- en: '[`Rpl_semi_sync_master_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_times)'
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_times)'
- en: The number of times the source turned off semisynchronous replication.
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源头关闭半同步复制的次数。
- en: '[`Rpl_semi_sync_master_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_times)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_times)
    is available instead.'
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以建立半同步复制时，[`Rpl_semi_sync_master_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_times)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_times)。
- en: '[`Rpl_semi_sync_master_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_tx)'
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_tx)'
- en: The number of commits that were not acknowledged successfully by a replica.
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 未被副本成功确认的提交次数。
- en: '[`Rpl_semi_sync_master_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_tx)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_tx)
    is available instead.'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以建立半同步复制时，[`Rpl_semi_sync_master_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_tx)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_tx)。
- en: '[`Rpl_semi_sync_master_status`](server-status-variables.html#statvar_Rpl_semi_sync_master_status)'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_status`](server-status-variables.html#statvar_Rpl_semi_sync_master_status)'
- en: Whether semisynchronous replication currently is operational on the source.
    The value is `ON` if the plugin has been enabled and a commit acknowledgment has
    occurred. It is `OFF` if the plugin is not enabled or the source has fallen back
    to asynchronous replication due to commit acknowledgment timeout.
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源头当前是否在运行半同步复制。如果插件已启用并发生了提交确认，则值为`ON`。如果插件未启用或源头由于提交确认超时而回退到异步复制，则值为`OFF`。
- en: '[`Rpl_semi_sync_master_status`](server-status-variables.html#statvar_Rpl_semi_sync_master_status)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_status`](server-status-variables.html#statvar_Rpl_semi_sync_source_status)
    is available instead.'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以建立半同步复制时，[`Rpl_semi_sync_master_status`](server-status-variables.html#statvar_Rpl_semi_sync_master_status)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_status`](server-status-variables.html#statvar_Rpl_semi_sync_source_status)。
- en: '[`Rpl_semi_sync_master_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_master_timefunc_failures)'
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_master_timefunc_failures)'
- en: The number of times the source failed when calling time functions such as `gettimeofday()`.
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源头在调用`gettimeofday()`等时间函数时失败的次数。
- en: '[`Rpl_semi_sync_master_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_master_timefunc_failures)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_source_timefunc_failures)
    is available instead.'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_master_timefunc_failures)
    在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_source_timefunc_failures)。'
- en: '[`Rpl_semi_sync_master_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_avg_wait_time)'
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_avg_wait_time)'
- en: The average time in microseconds the source waited for each transaction.
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源等待每个事务的平均时间（以微秒为单位）。
- en: '[`Rpl_semi_sync_master_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_avg_wait_time)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_avg_wait_time)
    is available instead.'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_avg_wait_time)
    在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_avg_wait_time)。'
- en: '[`Rpl_semi_sync_master_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_wait_time)'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_wait_time)'
- en: The total time in microseconds the source waited for transactions.
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源等待事务的总时间（以微秒为单位）。
- en: '[`Rpl_semi_sync_master_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_wait_time)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_wait_time)
    is available instead.'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_wait_time)
    在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_wait_time)。'
- en: '[`Rpl_semi_sync_master_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_waits)'
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_waits)'
- en: The total number of times the source waited for transactions.
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源等待事务的总次数。
- en: '[`Rpl_semi_sync_master_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_waits)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_waits)
    is available instead.'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_waits)
    在副本上安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_waits)。'
- en: '[`Rpl_semi_sync_master_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_pos_backtraverse)'
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_pos_backtraverse)'
- en: The total number of times the source waited for an event with binary coordinates
    lower than events waited for previously. This can occur when the order in which
    transactions start waiting for a reply is different from the order in which their
    binary log events are written.
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源等待事件的总次数，其二进制坐标低于先前等待的事件。当事务开始等待回复的顺序与它们的二进制日志事件写入顺序不同时，可能会发生这种情况。
- en: '[`Rpl_semi_sync_master_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_pos_backtraverse)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_pos_backtraverse)
    is available instead.'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本端安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_master_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_pos_backtraverse)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_pos_backtraverse)。
- en: '[`Rpl_semi_sync_master_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_sessions)'
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_sessions)'
- en: The number of sessions currently waiting for replica replies.
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前等待副本回复的会话数量。
- en: '[`Rpl_semi_sync_master_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_sessions)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_sessions)
    is available instead.'
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本端安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_master_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_sessions)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_sessions)。
- en: '[`Rpl_semi_sync_master_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_yes_tx)'
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_master_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_yes_tx)'
- en: The number of commits that were acknowledged successfully by a replica.
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已被副本成功确认的提交数量。
- en: '[`Rpl_semi_sync_master_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_yes_tx)
    is available when the `rpl_semi_sync_master` (`semisync_master.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_source`
    plugin (`semisync_source.so` library) was installed, [`Rpl_semi_sync_source_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_yes_tx)
    is available instead.'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本端安装了`rpl_semi_sync_master`（`semisync_master.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_master_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_yes_tx)可用。如果安装了`rpl_semi_sync_source`插件（`semisync_source.so`库），则可用[`Rpl_semi_sync_source_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_yes_tx)。
- en: '[`Rpl_semi_sync_source_clients`](server-status-variables.html#statvar_Rpl_semi_sync_source_clients)'
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_clients`](server-status-variables.html#statvar_Rpl_semi_sync_source_clients)'
- en: The number of semisynchronous replicas.
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 半同步副本的数量。
- en: '[`Rpl_semi_sync_source_clients`](server-status-variables.html#statvar_Rpl_semi_sync_source_clients)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_clients`](server-status-variables.html#statvar_Rpl_semi_sync_master_clients)
    is available instead.'
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_source_clients`](server-status-variables.html#statvar_Rpl_semi_sync_source_clients)可用。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则可用[`Rpl_semi_sync_master_clients`](server-status-variables.html#statvar_Rpl_semi_sync_master_clients)。
- en: '[`Rpl_semi_sync_source_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_avg_wait_time)'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_avg_wait_time)'
- en: The average time in microseconds the source waited for a replica reply. This
    variable is always `0`, and is deprecated; expect it to be removed in a future
    version.
  id: totrans-474
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端等待副本回复的平均时间（以微秒为单位）。此变量始终为`0`，已被弃用；预计将在将来的版本中移除。
- en: '[`Rpl_semi_sync_source_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_avg_wait_time)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_avg_wait_time)
    is available instead.'
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，可以使用[`Rpl_semi_sync_source_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_avg_wait_time)。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则可以使用[`Rpl_semi_sync_master_net_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_avg_wait_time)。
- en: '[`Rpl_semi_sync_source_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_wait_time)'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_wait_time)'
- en: The total time in microseconds the source waited for replica replies. This variable
    is always `0`, and is deprecated; expect it to be removed in a future version.
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端等待副本回复的总时间（以微秒为单位）。此变量始终为`0`，已被弃用；预计将在将来的版本中移除。
- en: '[`Rpl_semi_sync_source_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_wait_time)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_wait_time)
    is available instead.'
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，可以使用[`Rpl_semi_sync_source_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_wait_time)。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则可以使用[`Rpl_semi_sync_master_net_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_wait_time)。
- en: '[`Rpl_semi_sync_source_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_waits)'
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_waits)'
- en: The total number of times the source waited for replica replies.
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端等待副本回复的总次数。
- en: '[`Rpl_semi_sync_source_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_waits)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_waits)
    is available instead.'
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，可以使用[`Rpl_semi_sync_source_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_net_waits)。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则可以使用[`Rpl_semi_sync_master_net_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_net_waits)。
- en: '[`Rpl_semi_sync_source_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_times)'
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_times)'
- en: The number of times the source turned off semisynchronous replication.
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端关闭半同步复制的次数。
- en: '[`Rpl_semi_sync_source_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_times)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_times)
    is available instead.'
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，可以使用[`Rpl_semi_sync_source_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_times)。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则可以使用[`Rpl_semi_sync_master_no_times`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_times)。
- en: '[`Rpl_semi_sync_source_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_tx)'
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_tx)'
- en: The number of commits that were not acknowledged successfully by a replica.
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 未被副本成功确认的提交次数。
- en: '[`Rpl_semi_sync_source_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_tx)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_tx)
    is available instead.'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_no_tx)
    是在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时可用的。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则会使用[`Rpl_semi_sync_master_no_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_no_tx)。'
- en: '[`Rpl_semi_sync_source_status`](server-status-variables.html#statvar_Rpl_semi_sync_source_status)'
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_status`](server-status-variables.html#statvar_Rpl_semi_sync_source_status)'
- en: Whether semisynchronous replication currently is operational on the source.
    The value is `ON` if the plugin has been enabled and a commit acknowledgment has
    occurred. It is `OFF` if the plugin is not enabled or the source has fallen back
    to asynchronous replication due to commit acknowledgment timeout.
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端当前是否正在运行半同步复制。如果插件已启用并发生了提交确认，则值为`ON`。如果插件未启用或源端由于提交确认超时而回退到异步复制，则值为`OFF`。
- en: '[`Rpl_semi_sync_source_status`](server-status-variables.html#statvar_Rpl_semi_sync_source_status)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_status`](server-status-variables.html#statvar_Rpl_semi_sync_master_status)
    is available instead.'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_status`](server-status-variables.html#statvar_Rpl_semi_sync_source_status)
    是在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时可用的。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则会使用[`Rpl_semi_sync_master_status`](server-status-variables.html#statvar_Rpl_semi_sync_master_status)。'
- en: '[`Rpl_semi_sync_source_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_source_timefunc_failures)'
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_source_timefunc_failures)'
- en: The number of times the source failed when calling time functions such as `gettimeofday()`.
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端调用诸如`gettimeofday()`等时间函数失败的次数。
- en: '[`Rpl_semi_sync_source_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_source_timefunc_failures)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_master_timefunc_failures)
    is available instead.'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_source_timefunc_failures)
    是在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时可用的。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则会使用[`Rpl_semi_sync_master_timefunc_failures`](server-status-variables.html#statvar_Rpl_semi_sync_master_timefunc_failures)。'
- en: '[`Rpl_semi_sync_source_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_avg_wait_time)'
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_avg_wait_time)'
- en: The average time in microseconds the source waited for each transaction.
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端等待每个事务的平均时间（以微秒为单位）。
- en: '[`Rpl_semi_sync_source_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_avg_wait_time)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_avg_wait_time)
    is available instead.'
  id: totrans-496
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_avg_wait_time)
    是在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时可用的。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则会使用[`Rpl_semi_sync_master_tx_avg_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_avg_wait_time)。'
- en: '[`Rpl_semi_sync_source_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_wait_time)'
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_wait_time)'
- en: The total time in microseconds the source waited for transactions.
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端等待事务的总时间（以微秒为单位）。
- en: '[`Rpl_semi_sync_source_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_wait_time)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_wait_time)
    is available instead.'
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，就会出现[`Rpl_semi_sync_source_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_wait_time)。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则会出现[`Rpl_semi_sync_master_tx_wait_time`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_wait_time)。
- en: '[`Rpl_semi_sync_source_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_waits)'
  id: totrans-500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_waits)'
- en: The total number of times the source waited for transactions.
  id: totrans-501
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端等待事务的总次数。
- en: '[`Rpl_semi_sync_source_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_waits)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_waits)
    is available instead.'
  id: totrans-502
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，就会出现[`Rpl_semi_sync_source_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_source_tx_waits)。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则会出现[`Rpl_semi_sync_master_tx_waits`](server-status-variables.html#statvar_Rpl_semi_sync_master_tx_waits)。
- en: '[`Rpl_semi_sync_source_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_pos_backtraverse)'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_pos_backtraverse)'
- en: The total number of times the source waited for an event with binary coordinates
    lower than events waited for previously. This can occur when the order in which
    transactions start waiting for a reply is different from the order in which their
    binary log events are written.
  id: totrans-504
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 源端等待具有比先前等待的事件更低的二进制坐标的事件的总次数。当事务开始等待回复的顺序与它们的二进制日志事件写入的顺序不同时，就会发生这种情况。
- en: '[`Rpl_semi_sync_source_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_pos_backtraverse)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_pos_backtraverse)
    is available instead.'
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_pos_backtraverse)是在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时才会出现。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则会出现[`Rpl_semi_sync_master_wait_pos_backtraverse`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_pos_backtraverse)。'
- en: '[`Rpl_semi_sync_source_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_sessions)'
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_sessions)'
- en: The number of sessions currently waiting for replica replies.
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前等待副本回复的会话数。
- en: '[`Rpl_semi_sync_source_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_sessions)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_sessions)
    is available instead.'
  id: totrans-508
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源端安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，就会出现[`Rpl_semi_sync_source_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_source_wait_sessions)。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则会出现[`Rpl_semi_sync_master_wait_sessions`](server-status-variables.html#statvar_Rpl_semi_sync_master_wait_sessions)。
- en: '[`Rpl_semi_sync_source_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_yes_tx)'
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_source_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_yes_tx)'
- en: The number of commits that were acknowledged successfully by a replica.
  id: totrans-510
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 副本成功确认的提交次数。
- en: '[`Rpl_semi_sync_source_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_yes_tx)
    is available when the `rpl_semi_sync_source` (`semisync_source.so` library) plugin
    was installed on the source to set up semisynchronous replication. If the `rpl_semi_sync_master`
    plugin (`semisync_master.so` library) was installed, [`Rpl_semi_sync_master_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_yes_tx)
    is available instead.'
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在源上安装了`rpl_semi_sync_source`（`semisync_source.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_source_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_source_yes_tx)可用。如果安装了`rpl_semi_sync_master`插件（`semisync_master.so`库），则可用[`Rpl_semi_sync_master_yes_tx`](server-status-variables.html#statvar_Rpl_semi_sync_master_yes_tx)。
- en: '[`Rpl_semi_sync_replica_status`](server-status-variables.html#statvar_Rpl_semi_sync_replica_status)'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_replica_status`](server-status-variables.html#statvar_Rpl_semi_sync_replica_status)'
- en: Shows whether semisynchronous replication is currently operational on the replica.
    This is `ON` if the plugin has been enabled and the replication I/O (receiver)
    thread is running, `OFF` otherwise.
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示复制品上当前是否正在运行半同步复制。如果插件已启用且复制 I/O（接收器）线程正在运行，则为`ON`，否则为`OFF`。
- en: '[`Rpl_semi_sync_replica_status`](server-status-variables.html#statvar_Rpl_semi_sync_replica_status)
    is available when the `rpl_semi_sync_replica` (`semisync_replica.so` library)
    plugin was installed on the replica to set up semisynchronous replication. If
    the `rpl_semi_sync_slave` plugin (`semisync_slave.so` library) was installed,
    [`Rpl_semi_sync_slave_status`](server-status-variables.html#statvar_Rpl_semi_sync_slave_status)
    is available instead.'
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在复制品上安装了`rpl_semi_sync_replica`（`semisync_replica.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_replica_status`](server-status-variables.html#statvar_Rpl_semi_sync_replica_status)可用。如果安装了`rpl_semi_sync_slave`插件（`semisync_slave.so`库），则可用[`Rpl_semi_sync_slave_status`](server-status-variables.html#statvar_Rpl_semi_sync_slave_status)。
- en: '[`Rpl_semi_sync_slave_status`](server-status-variables.html#statvar_Rpl_semi_sync_slave_status)'
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rpl_semi_sync_slave_status`](server-status-variables.html#statvar_Rpl_semi_sync_slave_status)'
- en: Shows whether semisynchronous replication is currently operational on the replica.
    This is `ON` if the plugin has been enabled and the replication I/O (receiver)
    thread is running, `OFF` otherwise.
  id: totrans-516
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示复制品上当前是否正在运行半同步复制。如果插件已启用且复制 I/O（接收器）线程正在运行，则为`ON`，否则为`OFF`。
- en: '[`Rpl_semi_sync_slave_status`](server-status-variables.html#statvar_Rpl_semi_sync_slave_status)
    is available when the `rpl_semi_sync_slave` (`semisync_slave.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_replica`
    plugin (`semisync_replica.so` library) was installed, [`Rpl_semi_sync_replica_status`](server-status-variables.html#statvar_Rpl_semi_sync_replica_status)
    is available instead.'
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在复制品上安装了`rpl_semi_sync_slave`（`semisync_slave.so`库）插件以设置半同步复制时，[`Rpl_semi_sync_slave_status`](server-status-variables.html#statvar_Rpl_semi_sync_slave_status)可用。如果安装了`rpl_semi_sync_replica`插件（`semisync_replica.so`库），则可用[`Rpl_semi_sync_replica_status`](server-status-variables.html#statvar_Rpl_semi_sync_replica_status)。
- en: '[`Rsa_public_key`](server-status-variables.html#statvar_Rsa_public_key)'
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Rsa_public_key`](server-status-variables.html#statvar_Rsa_public_key)'
- en: The value of this variable is the public key used by the `sha256_password` authentication
    plugin for RSA key pair-based password exchange. The value is nonempty only if
    the server successfully initializes the private and public keys in the files named
    by the [`sha256_password_private_key_path`](server-system-variables.html#sysvar_sha256_password_private_key_path)
    and [`sha256_password_public_key_path`](server-system-variables.html#sysvar_sha256_password_public_key_path)
    system variables. The value of [`Rsa_public_key`](server-status-variables.html#statvar_Rsa_public_key)
    comes from the latter file.
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量的值是`sha256_password`认证插件用于RSA密钥对密码交换的公钥。仅当服务器成功初始化由[`sha256_password_private_key_path`](server-system-variables.html#sysvar_sha256_password_private_key_path)和[`sha256_password_public_key_path`](server-system-variables.html#sysvar_sha256_password_public_key_path)系统变量命名的文件中的私钥和公钥时，值才不为空。[`Rsa_public_key`](server-status-variables.html#statvar_Rsa_public_key)的值来自后一个文件。
- en: For information about `sha256_password`, see [Section 8.4.1.3, “SHA-256 Pluggable
    Authentication”](sha256-pluggable-authentication.html "8.4.1.3 SHA-256 Pluggable
    Authentication").
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关`sha256_password`的信息，请参见[第8.4.1.3节，“SHA-256可插拔认证”](sha256-pluggable-authentication.html
    "8.4.1.3 SHA-256可插拔认证")。
- en: '[`Secondary_engine_execution_count`](server-status-variables.html#statvar_Secondary_engine_execution_count)'
  id: totrans-521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Secondary_engine_execution_count`](server-status-variables.html#statvar_Secondary_engine_execution_count)'
- en: The number of queries offloaded to a secondary engine. This variable was added
    in MySQL 8.0.13.
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 转移到辅助引擎的查询数量。此变量在 MySQL 8.0.13 中添加。
- en: For use with HeatWave. See [MySQL HeatWave User Guide](/doc/heatwave/en/).
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于 HeatWave。请参阅 [MySQL HeatWave 用户指南](/doc/heatwave/en/)。
- en: '[`Select_full_join`](server-status-variables.html#statvar_Select_full_join)'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Select_full_join`](server-status-variables.html#statvar_Select_full_join)'
- en: The number of joins that perform table scans because they do not use indexes.
    If this value is not 0, you should carefully check the indexes of your tables.
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行表扫描的连接数，因为它们不使用索引。如果此值不为 0，则应仔细检查表的索引。
- en: '[`Select_full_range_join`](server-status-variables.html#statvar_Select_full_range_join)'
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Select_full_range_join`](server-status-variables.html#statvar_Select_full_range_join)'
- en: The number of joins that used a range search on a reference table.
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用范围搜索的连接表的数量。
- en: '[`Select_range`](server-status-variables.html#statvar_Select_range)'
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Select_range`](server-status-variables.html#statvar_Select_range)'
- en: The number of joins that used ranges on the first table. This is normally not
    a critical issue even if the value is quite large.
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用第一个表范围的连接数。即使该值很大，通常也不是关键问题。
- en: '[`Select_range_check`](server-status-variables.html#statvar_Select_range_check)'
  id: totrans-530
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Select_range_check`](server-status-variables.html#statvar_Select_range_check)'
- en: The number of joins without keys that check for key usage after each row. If
    this is not 0, you should carefully check the indexes of your tables.
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在每行后检查键使用情况的无键连接数。如果此值不为 0，则应仔细检查表的索引。
- en: '[`Select_scan`](server-status-variables.html#statvar_Select_scan)'
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Select_scan`](server-status-variables.html#statvar_Select_scan)'
- en: The number of joins that did a full scan of the first table.
  id: totrans-533
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对第一个表进行全面扫描的连接数。
- en: '[`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)'
  id: totrans-534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)'
- en: From MySQL 8.0.26, [`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)
    is deprecated and the alias [`Replica_open_temp_tables`](server-status-variables.html#statvar_Replica_open_temp_tables)
    should be used instead. In releases before MySQL 8.0.26, use [`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables).
  id: totrans-535
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)
    已弃用，应改用别名 [`Replica_open_temp_tables`](server-status-variables.html#statvar_Replica_open_temp_tables)。在
    MySQL 8.0.26 之前的版本中，请使用 [`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)。
- en: '[`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)
    shows the number of temporary tables that the replication SQL thread currently
    has open. If the value is greater than zero, it is not safe to shut down the replica;
    see [Section 19.5.1.31, “Replication and Temporary Tables”](replication-features-temptables.html
    "19.5.1.31 Replication and Temporary Tables"). This variable reports the total
    count of open temporary tables for *all* replication channels.'
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Slave_open_temp_tables`](server-status-variables.html#statvar_Slave_open_temp_tables)
    显示复制 SQL 线程当前打开的临时表的数量。如果该值大于零，则不安全关闭副本；请参见 [第 19.5.1.31 节，“复制和临时表”](replication-features-temptables.html
    "19.5.1.31 复制和临时表")。此变量报告所有复制通道的打开临时表的总数。'
- en: '[`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)'
  id: totrans-537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)'
- en: From MySQL 8.0.26, [`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)
    is deprecated and the alias [`Replica_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Replica_rows_last_search_algorithm_used)
    should be used instead. In releases before MySQL 8.0.26, use [`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used).
  id: totrans-538
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)
    已弃用，应改用别名 [`Replica_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Replica_rows_last_search_algorithm_used)。在
    MySQL 8.0.26 之前的版本中，请使用 [`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)。
- en: '[`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)
    shows the search algorithm that was most recently used by this replica to locate
    rows for row-based replication. The result shows whether the replica used indexes,
    a table scan, or hashing as the search algorithm for the last transaction executed
    on any channel.'
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`Slave_rows_last_search_algorithm_used`](server-status-variables.html#statvar_Slave_rows_last_search_algorithm_used)
    显示此复制品最近用于定位行以进行基于行的复制的搜索算法。结果显示复制品是否在任何通道上执行的最后一个事务中使用索引、表扫描或哈希作为搜索算法。'
- en: The method used depends on the setting for the [`slave_rows_search_algorithms`](replication-options-replica.html#sysvar_slave_rows_search_algorithms)
    system variable, and the keys that are available on the relevant table.
  id: totrans-540
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用取决于[`slave_rows_search_algorithms`](replication-options-replica.html#sysvar_slave_rows_search_algorithms)系统变量的设置以及相关表上可用的密钥。
- en: This variable is available only for debug builds of MySQL.
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量仅适用于 MySQL 的调试版本。
- en: '[`Slow_launch_threads`](server-status-variables.html#statvar_Slow_launch_threads)'
  id: totrans-542
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Slow_launch_threads`](server-status-variables.html#statvar_Slow_launch_threads)'
- en: The number of threads that have taken more than [`slow_launch_time`](server-system-variables.html#sysvar_slow_launch_time)
    seconds to create.
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 超过[`slow_launch_time`](server-system-variables.html#sysvar_slow_launch_time)秒创建的线程数。
- en: '[`Slow_queries`](server-status-variables.html#statvar_Slow_queries)'
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Slow_queries`](server-status-variables.html#statvar_Slow_queries)'
- en: The number of queries that have taken more than [`long_query_time`](server-system-variables.html#sysvar_long_query_time)
    seconds. This counter increments regardless of whether the slow query log is enabled.
    For information about that log, see [Section 7.4.5, “The Slow Query Log”](slow-query-log.html
    "7.4.5 The Slow Query Log").
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 超过[`long_query_time`](server-system-variables.html#sysvar_long_query_time)秒的查询次数。无论是否启用慢查询日志，此计数器都会递增。有关该日志的信息，请参阅[第
    7.4.5 节，“慢查询日志”](slow-query-log.html "7.4.5 The Slow Query Log")。
- en: '[`Sort_merge_passes`](server-status-variables.html#statvar_Sort_merge_passes)'
  id: totrans-546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Sort_merge_passes`](server-status-variables.html#statvar_Sort_merge_passes)'
- en: The number of merge passes that the sort algorithm has had to do. If this value
    is large, you should consider increasing the value of the [`sort_buffer_size`](server-system-variables.html#sysvar_sort_buffer_size)
    system variable.
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 排序算法已经执行的合并次数。如果这个值很大，您应该考虑增加[`sort_buffer_size`](server-system-variables.html#sysvar_sort_buffer_size)系统变量的值。
- en: '[`Sort_range`](server-status-variables.html#statvar_Sort_range)'
  id: totrans-548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Sort_range`](server-status-variables.html#statvar_Sort_range)'
- en: The number of sorts that were done using ranges.
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用范围进行的排序次数。
- en: '[`Sort_rows`](server-status-variables.html#statvar_Sort_rows)'
  id: totrans-550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Sort_rows`](server-status-variables.html#statvar_Sort_rows)'
- en: The number of sorted rows.
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已排序行的数量。
- en: '[`Sort_scan`](server-status-variables.html#statvar_Sort_scan)'
  id: totrans-552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Sort_scan`](server-status-variables.html#statvar_Sort_scan)'
- en: The number of sorts that were done by scanning the table.
  id: totrans-553
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过扫描表进行的排序次数。
- en: '[`Ssl_accept_renegotiates`](server-status-variables.html#statvar_Ssl_accept_renegotiates)'
  id: totrans-554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_accept_renegotiates`](server-status-variables.html#statvar_Ssl_accept_renegotiates)'
- en: The number of negotiates needed to establish the connection.
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 建立连接所需的协商次数。
- en: '[`Ssl_accepts`](server-status-variables.html#statvar_Ssl_accepts)'
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_accepts`](server-status-variables.html#statvar_Ssl_accepts)'
- en: The number of accepted SSL connections.
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已接受的 SSL 连接数量。
- en: '[`Ssl_callback_cache_hits`](server-status-variables.html#statvar_Ssl_callback_cache_hits)'
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_callback_cache_hits`](server-status-variables.html#statvar_Ssl_callback_cache_hits)'
- en: The number of callback cache hits.
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 回调缓存命中次数。
- en: '[`Ssl_cipher`](server-status-variables.html#statvar_Ssl_cipher)'
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_cipher`](server-status-variables.html#statvar_Ssl_cipher)'
- en: The current encryption cipher (empty for unencrypted connections).
  id: totrans-561
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前的加密密码（未加密连接为空）。
- en: '[`Ssl_cipher_list`](server-status-variables.html#statvar_Ssl_cipher_list)'
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_cipher_list`](server-status-variables.html#statvar_Ssl_cipher_list)'
- en: The list of possible SSL ciphers (empty for non-SSL connections). If MySQL supports
    TLSv1.3, the value includes the possible TLSv1.3 ciphersuites. See [Section 8.3.2,
    “Encrypted Connection TLS Protocols and Ciphers”](encrypted-connection-protocols-ciphers.html
    "8.3.2 Encrypted Connection TLS Protocols and Ciphers").
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可能的 SSL 密码列表（非 SSL 连接为空）。如果 MySQL 支持 TLSv1.3，则该值包括可能的 TLSv1.3 密码套件。请参阅[第 8.3.2
    节，“加密连接 TLS 协议和密码”](encrypted-connection-protocols-ciphers.html "8.3.2 Encrypted
    Connection TLS Protocols and Ciphers")。
- en: '[`Ssl_client_connects`](server-status-variables.html#statvar_Ssl_client_connects)'
  id: totrans-564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_client_connects`](server-status-variables.html#statvar_Ssl_client_connects)'
- en: The number of SSL connection attempts to an SSL-enabled replication source server.
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试连接到启用 SSL 的复制源服务器的 SSL 连接次数。
- en: '[`Ssl_connect_renegotiates`](server-status-variables.html#statvar_Ssl_connect_renegotiates)'
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_connect_renegotiates`](server-status-variables.html#statvar_Ssl_connect_renegotiates)'
- en: The number of negotiates needed to establish the connection to an SSL-enabled
    replication source server.
  id: totrans-567
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 建立到启用SSL的复制源服务器的连接所需的协商次数。
- en: '[`Ssl_ctx_verify_depth`](server-status-variables.html#statvar_Ssl_ctx_verify_depth)'
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_ctx_verify_depth`](server-status-variables.html#statvar_Ssl_ctx_verify_depth)'
- en: The SSL context verification depth (how many certificates in the chain are tested).
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL上下文验证深度（测试链中有多少证书）。
- en: '[`Ssl_ctx_verify_mode`](server-status-variables.html#statvar_Ssl_ctx_verify_mode)'
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_ctx_verify_mode`](server-status-variables.html#statvar_Ssl_ctx_verify_mode)'
- en: The SSL context verification mode.
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL上下文验证模式。
- en: '[`Ssl_default_timeout`](server-status-variables.html#statvar_Ssl_default_timeout)'
  id: totrans-572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_default_timeout`](server-status-variables.html#statvar_Ssl_default_timeout)'
- en: The default SSL timeout.
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认SSL超时时间。
- en: '[`Ssl_finished_accepts`](server-status-variables.html#statvar_Ssl_finished_accepts)'
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_finished_accepts`](server-status-variables.html#statvar_Ssl_finished_accepts)'
- en: The number of successful SSL connections to the server.
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 成功连接到服务器的SSL连接数。
- en: '[`Ssl_finished_connects`](server-status-variables.html#statvar_Ssl_finished_connects)'
  id: totrans-576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_finished_connects`](server-status-variables.html#statvar_Ssl_finished_connects)'
- en: The number of successful replica connections to an SSL-enabled replication source
    server.
  id: totrans-577
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 成功复制到启用SSL的复制源服务器的连接数。
- en: '[`Ssl_server_not_after`](server-status-variables.html#statvar_Ssl_server_not_after)'
  id: totrans-578
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_server_not_after`](server-status-variables.html#statvar_Ssl_server_not_after)'
- en: 'The last date for which the SSL certificate is valid. To check SSL certificate
    expiration information, use this statement:'
  id: totrans-579
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL证书有效的最后日期。要检查SSL证书到期信息，请使用此语句：
- en: '[PRE1]'
  id: totrans-580
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[`Ssl_server_not_before`](server-status-variables.html#statvar_Ssl_server_not_before)'
  id: totrans-581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_server_not_before`](server-status-variables.html#statvar_Ssl_server_not_before)'
- en: The first date for which the SSL certificate is valid.
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL证书有效的第一个日期。
- en: '[`Ssl_session_cache_hits`](server-status-variables.html#statvar_Ssl_session_cache_hits)'
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_session_cache_hits`](server-status-variables.html#statvar_Ssl_session_cache_hits)'
- en: The number of SSL session cache hits.
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL会话缓存命中次数。
- en: '[`Ssl_session_cache_misses`](server-status-variables.html#statvar_Ssl_session_cache_misses)'
  id: totrans-585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_session_cache_misses`](server-status-variables.html#statvar_Ssl_session_cache_misses)'
- en: The number of SSL session cache misses.
  id: totrans-586
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL会话缓存未命中次数。
- en: '[`Ssl_session_cache_mode`](server-status-variables.html#statvar_Ssl_session_cache_mode)'
  id: totrans-587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_session_cache_mode`](server-status-variables.html#statvar_Ssl_session_cache_mode)'
- en: The SSL session cache mode. When the value of the [`ssl_session_cache_mode`](server-system-variables.html#sysvar_ssl_session_cache_mode)
    server variable is `ON`, the value of the [`Ssl_session_cache_mode`](server-status-variables.html#statvar_Ssl_session_cache_mode)
    status variable is `SERVER`.
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL会话缓存模式。当[`ssl_session_cache_mode`](server-system-variables.html#sysvar_ssl_session_cache_mode)服务器变量的值为`ON`时，[`Ssl_session_cache_mode`](server-status-variables.html#statvar_Ssl_session_cache_mode)状态变量的值为`SERVER`。
- en: '[`Ssl_session_cache_overflows`](server-status-variables.html#statvar_Ssl_session_cache_overflows)'
  id: totrans-589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_session_cache_overflows`](server-status-variables.html#statvar_Ssl_session_cache_overflows)'
- en: The number of SSL session cache overflows.
  id: totrans-590
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL会话缓存溢出次数。
- en: '[`Ssl_session_cache_size`](server-status-variables.html#statvar_Ssl_session_cache_size)'
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_session_cache_size`](server-status-variables.html#statvar_Ssl_session_cache_size)'
- en: The SSL session cache size.
  id: totrans-592
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL会话缓存大小。
- en: '[`Ssl_session_cache_timeout`](server-status-variables.html#statvar_Ssl_session_cache_timeout)'
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_session_cache_timeout`](server-status-variables.html#statvar_Ssl_session_cache_timeout)'
- en: The timeout value in seconds of SSL sessions in the cache.
  id: totrans-594
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 缓存中SSL会话的超时值（以秒为单位）。
- en: '[`Ssl_session_cache_timeouts`](server-status-variables.html#statvar_Ssl_session_cache_timeouts)'
  id: totrans-595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_session_cache_timeouts`](server-status-variables.html#statvar_Ssl_session_cache_timeouts)'
- en: The number of SSL session cache timeouts.
  id: totrans-596
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SSL会话缓存超时次数。
- en: '[`Ssl_sessions_reused`](server-status-variables.html#statvar_Ssl_sessions_reused)'
  id: totrans-597
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_sessions_reused`](server-status-variables.html#statvar_Ssl_sessions_reused)'
- en: This is equal to 0 if TLS was not used in the current MySQL session, or if a
    TLS session has not been reused; otherwise it is equal to 1.
  id: totrans-598
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果当前MySQL会话中未使用TLS，或者未重用TLS会话，则此值为0；否则为1。
- en: '`Ssl_sessions_reused` has session scope.'
  id: totrans-599
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`Ssl_sessions_reused`具有会话范围。'
- en: '[`Ssl_used_session_cache_entries`](server-status-variables.html#statvar_Ssl_used_session_cache_entries)'
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_used_session_cache_entries`](server-status-variables.html#statvar_Ssl_used_session_cache_entries)'
- en: How many SSL session cache entries were used.
  id: totrans-601
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用了多少SSL会话缓存条目。
- en: '[`Ssl_verify_depth`](server-status-variables.html#statvar_Ssl_verify_depth)'
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_verify_depth`](server-status-variables.html#statvar_Ssl_verify_depth)'
- en: The verification depth for replication SSL connections.
  id: totrans-603
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制SSL连接的验证深度。
- en: '[`Ssl_verify_mode`](server-status-variables.html#statvar_Ssl_verify_mode)'
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_verify_mode`](server-status-variables.html#statvar_Ssl_verify_mode)'
- en: 'The verification mode used by the server for a connection that uses SSL. The
    value is a bitmask; bits are defined in the `openssl/ssl.h` header file:'
  id: totrans-605
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器用于使用SSL的连接的验证模式。该值是一个位掩码；位在`openssl/ssl.h`头文件中定义：
- en: '[PRE2]'
  id: totrans-606
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`SSL_VERIFY_PEER` indicates that the server asks for a client certificate.
    If the client supplies one, the server performs verification and proceeds only
    if verification is successful. `SSL_VERIFY_CLIENT_ONCE` indicates that a request
    for the client certificate is performed only in the initial handshake.'
  id: totrans-607
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`SSL_VERIFY_PEER`表示服务器要求客户端证书。如果客户端提供了证书，服务器将进行验证，并仅在验证成功时继续。`SSL_VERIFY_CLIENT_ONCE`表示仅在初始握手中执行对客户端证书的请求。'
- en: '[`Ssl_version`](server-status-variables.html#statvar_Ssl_version)'
  id: totrans-608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Ssl_version`](server-status-variables.html#statvar_Ssl_version)'
- en: The SSL protocol version of the connection (for example, TLSv1). If the connection
    is not encrypted, the value is empty.
  id: totrans-609
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接的SSL协议版本（例如，TLSv1）。如果连接未加密，则该值为空。
- en: '[`Table_locks_immediate`](server-status-variables.html#statvar_Table_locks_immediate)'
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Table_locks_immediate`](server-status-variables.html#statvar_Table_locks_immediate)'
- en: The number of times that a request for a table lock could be granted immediately.
  id: totrans-611
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 申请表锁可以立即获得的次数。
- en: '[`Table_locks_waited`](server-status-variables.html#statvar_Table_locks_waited)'
  id: totrans-612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Table_locks_waited`](server-status-variables.html#statvar_Table_locks_waited)'
- en: The number of times that a request for a table lock could not be granted immediately
    and a wait was needed. If this is high and you have performance problems, you
    should first optimize your queries, and then either split your table or tables
    or use replication.
  id: totrans-613
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 申请表锁无法立即获得并需要等待的次数。如果这个数字很高并且出现性能问题，你应该首先优化你的查询，然后要么拆分你的表或表，要么使用复制。
- en: '[`Table_open_cache_hits`](server-status-variables.html#statvar_Table_open_cache_hits)'
  id: totrans-614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Table_open_cache_hits`](server-status-variables.html#statvar_Table_open_cache_hits)'
- en: The number of hits for open tables cache lookups.
  id: totrans-615
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开放表缓存查找的命中次数。
- en: '[`Table_open_cache_misses`](server-status-variables.html#statvar_Table_open_cache_misses)'
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Table_open_cache_misses`](server-status-variables.html#statvar_Table_open_cache_misses)'
- en: The number of misses for open tables cache lookups.
  id: totrans-617
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开放表缓存查找的未命中次数。
- en: '[`Table_open_cache_overflows`](server-status-variables.html#statvar_Table_open_cache_overflows)'
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Table_open_cache_overflows`](server-status-variables.html#statvar_Table_open_cache_overflows)'
- en: The number of overflows for the open tables cache. This is the number of times,
    after a table is opened or closed, a cache instance has an unused entry and the
    size of the instance is larger than [`table_open_cache`](server-system-variables.html#sysvar_table_open_cache)
    / [`table_open_cache_instances`](server-system-variables.html#sysvar_table_open_cache_instances).
  id: totrans-619
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开放表缓存的溢出次数。这是在打开或关闭表后，缓存实例有一个未使用的条目且实例的大小大于[`table_open_cache`](server-system-variables.html#sysvar_table_open_cache)
    / [`table_open_cache_instances`](server-system-variables.html#sysvar_table_open_cache_instances)时的次数。
- en: '[`Tc_log_max_pages_used`](server-status-variables.html#statvar_Tc_log_max_pages_used)'
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Tc_log_max_pages_used`](server-status-variables.html#statvar_Tc_log_max_pages_used)'
- en: 'For the memory-mapped implementation of the log that is used by [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") when it acts as the transaction coordinator
    for recovery of internal XA transactions, this variable indicates the largest
    number of pages used for the log since the server started. If the product of [`Tc_log_max_pages_used`](server-status-variables.html#statvar_Tc_log_max_pages_used)
    and [`Tc_log_page_size`](server-status-variables.html#statvar_Tc_log_page_size)
    is always significantly less than the log size, the size is larger than necessary
    and can be reduced. (The size is set by the [`--log-tc-size`](server-options.html#option_mysqld_log-tc-size)
    option. This variable is unused: It is unneeded for binary log-based recovery,
    and the memory-mapped recovery log method is not used unless the number of storage
    engines that are capable of two-phase commit and that support XA transactions
    is greater than one. (`InnoDB` is the only applicable engine.)'
  id: totrans-621
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于当[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")充当内部 XA 事务恢复的事务协调器时使用的日志的内存映射实现，此变量指示自服务器启动以来日志使用的最大页数。如果[`Tc_log_max_pages_used`](server-status-variables.html#statvar_Tc_log_max_pages_used)和[`Tc_log_page_size`](server-status-variables.html#statvar_Tc_log_page_size)的乘积始终明显小于日志大小，则大小大于必要大小，可以减小。（大小由[`--log-tc-size`](server-options.html#option_mysqld_log-tc-size)选项设置。此变量未使用：对于基于二进制日志的恢复是不需要的，并且除非能够进行两阶段提交并支持
    XA 事务的存储引擎数量大于一个，否则不会使用内存映射恢复日志方法。（`InnoDB`是唯一适用的引擎。）
- en: '[`Tc_log_page_size`](server-status-variables.html#statvar_Tc_log_page_size)'
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Tc_log_page_size`](server-status-variables.html#statvar_Tc_log_page_size)'
- en: The page size used for the memory-mapped implementation of the XA recovery log.
    The default value is determined using `getpagesize()`. This variable is unused
    for the same reasons as described for [`Tc_log_max_pages_used`](server-status-variables.html#statvar_Tc_log_max_pages_used).
  id: totrans-623
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于 XA 恢复日志的内存映射实现的页面大小。默认值使用`getpagesize()`确定。出于与[`Tc_log_max_pages_used`](server-status-variables.html#statvar_Tc_log_max_pages_used)描述的相同原因，此变量未使用。
- en: '[`Tc_log_page_waits`](server-status-variables.html#statvar_Tc_log_page_waits)'
  id: totrans-624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Tc_log_page_waits`](server-status-variables.html#statvar_Tc_log_page_waits)'
- en: For the memory-mapped implementation of the recovery log, this variable increments
    each time the server was not able to commit a transaction and had to wait for
    a free page in the log. If this value is large, you might want to increase the
    log size (with the [`--log-tc-size`](server-options.html#option_mysqld_log-tc-size)
    option). For binary log-based recovery, this variable increments each time the
    binary log cannot be closed because there are two-phase commits in progress. (The
    close operation waits until all such transactions are finished.)
  id: totrans-625
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于恢复日志的内存映射实现，每次服务器无法提交事务并必须等待日志中的空闲页时，此变量会递增。如果此值较大，您可能需要增加日志大小（使用[`--log-tc-size`](server-options.html#option_mysqld_log-tc-size)选项）。对于基于二进制日志的恢复，每次二进制日志无法关闭因为有两阶段提交正在进行时，此变量会递增。（关闭操作会等待所有此类事务完成。）
- en: '[`Telemetry_traces_supported`](server-status-variables.html#statvar_Telemetry_traces_supported)'
  id: totrans-626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Telemetry_traces_supported`](server-status-variables.html#statvar_Telemetry_traces_supported)'
- en: Whether server telemetry traces is supported.
  id: totrans-627
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器遥测跟踪是否受支持。
- en: For more information, see the *Server telemetry traces service* section in the
    MySQL Source Code documentation.
  id: totrans-628
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅 MySQL 源代码文档中的*服务器遥测跟踪服务*部分。
- en: '[`Threads_cached`](server-status-variables.html#statvar_Threads_cached)'
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Threads_cached`](server-status-variables.html#statvar_Threads_cached)'
- en: The number of threads in the thread cache.
  id: totrans-630
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 线程缓存中的线程数。
- en: '[`Threads_connected`](server-status-variables.html#statvar_Threads_connected)'
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Threads_connected`](server-status-variables.html#statvar_Threads_connected)'
- en: The number of currently open connections.
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前打开连接的数量。
- en: '[`Threads_created`](server-status-variables.html#statvar_Threads_created)'
  id: totrans-633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Threads_created`](server-status-variables.html#statvar_Threads_created)'
- en: The number of threads created to handle connections. If [`Threads_created`](server-status-variables.html#statvar_Threads_created)
    is big, you may want to increase the [`thread_cache_size`](server-system-variables.html#sysvar_thread_cache_size)
    value. The cache miss rate can be calculated as [`Threads_created`](server-status-variables.html#statvar_Threads_created)/[`Connections`](server-status-variables.html#statvar_Connections).
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于处理连接创建的线程数。如果[`Threads_created`](server-status-variables.html#statvar_Threads_created)较大，您可能需要增加[`thread_cache_size`](server-system-variables.html#sysvar_thread_cache_size)的值。缓存未命中率可计算为[`Threads_created`](server-status-variables.html#statvar_Threads_created)/[`Connections`](server-status-variables.html#statvar_Connections)。
- en: '[`Threads_running`](server-status-variables.html#statvar_Threads_running)'
  id: totrans-635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Threads_running`](server-status-variables.html#statvar_Threads_running)'
- en: The number of threads that are not sleeping.
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 非休眠状态的线程数。
- en: '[`Tls_library_version`](server-status-variables.html#statvar_Tls_library_version)'
  id: totrans-637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Tls_library_version`](server-status-variables.html#statvar_Tls_library_version)'
- en: The runtime version of the OpenSSL library that is in use for this MySQL instance.
  id: totrans-638
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此 MySQL 实例中使用的 OpenSSL 库的运行时版本。
- en: This variable was added in MySQL 8.0.30.
  id: totrans-639
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量是在 MySQL 8.0.30 中添加的。
- en: '[`Uptime`](server-status-variables.html#statvar_Uptime)'
  id: totrans-640
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Uptime`](server-status-variables.html#statvar_Uptime)'
- en: The number of seconds that the server has been up.
  id: totrans-641
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器已经运行的秒数。
- en: '[`Uptime_since_flush_status`](server-status-variables.html#statvar_Uptime_since_flush_status)'
  id: totrans-642
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Uptime_since_flush_status`](server-status-variables.html#statvar_Uptime_since_flush_status)'
- en: The number of seconds since the most recent `FLUSH STATUS` statement.
  id: totrans-643
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 距离最近一次`FLUSH STATUS`语句的秒数。
