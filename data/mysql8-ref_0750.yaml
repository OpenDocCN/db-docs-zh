- en: 13.2.9 2-Digit Years in Dates
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.2.9 日期中的2位数年份
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/two-digit-years.html](https://dev.mysql.com/doc/refman/8.0/en/two-digit-years.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/two-digit-years.html](https://dev.mysql.com/doc/refman/8.0/en/two-digit-years.html)
- en: Date values with 2-digit years are ambiguous because the century is unknown.
    Such values must be interpreted into 4-digit form because MySQL stores years internally
    using 4 digits.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 具有2位数年份的日期值是模糊的，因为世纪未知。这些值必须被解释为4位数形式，因为MySQL在内部使用4位数存储年份。
- en: 'For [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"),
    [`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), and
    [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    types, MySQL interprets dates specified with ambiguous year values using these
    rules:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[`DATETIME`](datetime.html "13.2.2 日期、DATETIME和TIMESTAMP类型")、[`DATE`](datetime.html
    "13.2.2 日期、DATETIME和TIMESTAMP类型")和[`TIMESTAMP`](datetime.html "13.2.2 日期、DATETIME和TIMESTAMP类型")类型，MySQL使用以下规则解释具有模糊年份值的日期：
- en: Year values in the range `00-69` become `2000-2069`.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围在`00-69`之间的年份值变为`2000-2069`。
- en: Year values in the range `70-99` become `1970-1999`.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围在`70-99`之间的年份值变为`1970-1999`。
- en: 'For `YEAR`, the rules are the same, with this exception: A numeric `00` inserted
    into `YEAR` results in `0000` rather than `2000`. To specify zero for `YEAR` and
    have it be interpreted as `2000`, specify it as a string `''0''` or `''00''`.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`YEAR`，规则相同，但有一个例外：将数字`00`插入`YEAR`会导致`0000`而不是`2000`。要为`YEAR`指定零并将其解释为`2000`，请将其指定为字符串`'0'`或`'00'`。
- en: Remember that these rules are only heuristics that provide reasonable guesses
    as to what your data values mean. If the rules used by MySQL do not produce the
    values you require, you must provide unambiguous input containing 4-digit year
    values.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这些规则只是提供合理猜测的启发式规则，以确定数据值的含义。如果MySQL使用的规则无法产生所需的值，您必须提供包含4位数年份值的明确输入。
- en: '`ORDER BY` properly sorts [`YEAR`](year.html "13.2.4 The YEAR Type") values
    that have 2-digit years.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`ORDER BY`可以正确排序具有2位数年份的[`YEAR`](year.html "13.2.4 YEAR类型")值。'
- en: Some functions like [`MIN()`](aggregate-functions.html#function_min) and [`MAX()`](aggregate-functions.html#function_max)
    convert a [`YEAR`](year.html "13.2.4 The YEAR Type") to a number. This means that
    a value with a 2-digit year does not work properly with these functions. The fix
    in this case is to convert the [`YEAR`](year.html "13.2.4 The YEAR Type") to 4-digit
    year format.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一些函数，如[`MIN()`](aggregate-functions.html#function_min)和[`MAX()`](aggregate-functions.html#function_max)，将[`YEAR`](year.html
    "13.2.4 YEAR类型")转换为数字。这意味着具有2位数年份的值无法与这些函数正常工作。在这种情况下的修复方法是将[`YEAR`](year.html
    "13.2.4 YEAR类型")转换为4位数年份格式。
