- en: 11.5 Expressions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11.5 表达式
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/expressions.html](https://dev.mysql.com/doc/refman/8.0/en/expressions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/expressions.html](https://dev.mysql.com/doc/refman/8.0/en/expressions.html)
- en: This section lists the grammar rules that expressions must follow in MySQL and
    provides additional information about the types of terms that may appear in expressions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此部分列出了在 MySQL 中表达式必须遵循的语法规则，并提供了关于可能出现在表达式中的术语类型的附加信息。
- en: '[Expression Syntax](expressions.html#expression-syntax "Expression Syntax")'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[表达式语法](expressions.html#expression-syntax "Expression Syntax")'
- en: '[Expression Term Notes](expressions.html#expression-term-notes "Expression
    Term Notes")'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[表达式术语注释](expressions.html#expression-term-notes "Expression Term Notes")'
- en: '[Temporal Intervals](expressions.html#temporal-intervals "Temporal Intervals")'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[时间间隔](expressions.html#temporal-intervals "Temporal Intervals")'
- en: Expression Syntax
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表达式语法
- en: The following grammar rules define expression syntax in MySQL. The grammar shown
    here is based on that given in the `sql/sql_yacc.yy` file of MySQL source distributions.
    For additional information about some of the expression terms, see [Expression
    Term Notes](expressions.html#expression-term-notes "Expression Term Notes").
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下语法规则定义了 MySQL 中的表达式语法。这里显示的语法基于 MySQL 源分发中 `sql/sql_yacc.yy` 文件中给出的语法。有关一些表达式术语的附加信息，请参见[表达式术语注释](expressions.html#expression-term-notes
    "Expression Term Notes")。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For operator precedence, see [Section 14.4.1, “Operator Precedence”](operator-precedence.html
    "14.4.1 Operator Precedence"). The precedence and meaning of some operators depends
    on the SQL mode:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 关于运算符优先级，请参见[第 14.4.1 节，“运算符优先级”](operator-precedence.html "14.4.1 Operator
    Precedence")。某些运算符的优先级和含义取决于 SQL 模式：
- en: By default, [`||`](logical-operators.html#operator_or) is a logical [`OR`](logical-operators.html#operator_or)
    operator. With [`PIPES_AS_CONCAT`](sql-mode.html#sqlmode_pipes_as_concat) enabled,
    [`||`](logical-operators.html#operator_or) is string concatenation, with a precedence
    between [`^`](bit-functions.html#operator_bitwise-xor) and the unary operators.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，[`||`](logical-operators.html#operator_or) 是逻辑 [`OR`](logical-operators.html#operator_or)
    运算符。启用 [`PIPES_AS_CONCAT`](sql-mode.html#sqlmode_pipes_as_concat) 后，[`||`](logical-operators.html#operator_or)
    是字符串连接运算符，优先级介于 [`^`](bit-functions.html#operator_bitwise-xor) 和一元运算符之间。
- en: By default, [`!`](logical-operators.html#operator_not) has a higher precedence
    than `NOT`. With [`HIGH_NOT_PRECEDENCE`](sql-mode.html#sqlmode_high_not_precedence)
    enabled, [`!`](logical-operators.html#operator_not) and `NOT` have the same precedence.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，[`!`](logical-operators.html#operator_not) 的优先级高于 `NOT`。启用 [`HIGH_NOT_PRECEDENCE`](sql-mode.html#sqlmode_high_not_precedence)
    后，[`!`](logical-operators.html#operator_not) 和 `NOT` 具有相同的优先级。
- en: See [Section 7.1.11, “Server SQL Modes”](sql-mode.html "7.1.11 Server SQL Modes").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见[第 7.1.11 节，“服务器 SQL 模式”](sql-mode.html "7.1.11 Server SQL Modes")。
- en: Expression Term Notes
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表达式术语注释
- en: For literal value syntax, see [Section 11.1, “Literal Values”](literals.html
    "11.1 Literal Values").
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有关文字值语法，请参见[第 11.1 节，“文字值”](literals.html "11.1 Literal Values")。
- en: For identifier syntax, see [Section 11.2, “Schema Object Names”](identifiers.html
    "11.2 Schema Object Names").
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有关标识符语法，请参见[第 11.2 节，“模式对象名称”](identifiers.html "11.2 Schema Object Names")。
- en: 'Variables can be user variables, system variables, or stored program local
    variables or parameters:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 变量可以是用户变量、系统变量、存储过程本地变量或参数：
- en: 'User variables: [Section 11.4, “User-Defined Variables”](user-variables.html
    "11.4 User-Defined Variables")'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户变量：[第 11.4 节，“用户定义变量”](user-variables.html "11.4 User-Defined Variables")
- en: 'System variables: [Section 7.1.9, “Using System Variables”](using-system-variables.html
    "7.1.9 Using System Variables")'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统变量：[第 7.1.9 节，“使用系统变量”](using-system-variables.html "7.1.9 Using System Variables")
- en: 'Stored program local variables: [Section 15.6.4.1, “Local Variable DECLARE
    Statement”](declare-local-variable.html "15.6.4.1 Local Variable DECLARE Statement")'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储过程本地变量：[第 15.6.4.1 节，“本地变量 DECLARE 语句”](declare-local-variable.html "15.6.4.1
    Local Variable DECLARE Statement")
- en: 'Stored program parameters: [Section 15.1.17, “CREATE PROCEDURE and CREATE FUNCTION
    Statements”](create-procedure.html "15.1.17 CREATE PROCEDURE and CREATE FUNCTION
    Statements")'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储过程参数：[第 15.1.17 节，“CREATE PROCEDURE 和 CREATE FUNCTION 语句”](create-procedure.html
    "15.1.17 CREATE PROCEDURE and CREATE FUNCTION Statements")
- en: '*`param_marker`* is `?` as used in prepared statements for placeholders. See
    [Section 15.5.1, “PREPARE Statement”](prepare.html "15.5.1 PREPARE Statement").'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*`param_marker`* 是用于占位符的预处理语句中使用的 `?`。请参见[第 15.5.1 节，“PREPARE 语句”](prepare.html
    "15.5.1 PREPARE Statement")。'
- en: '`(*`subquery`*)` indicates a subquery that returns a single value; that is,
    a scalar subquery. See [Section 15.2.15.1, “The Subquery as Scalar Operand”](scalar-subqueries.html
    "15.2.15.1 The Subquery as Scalar Operand").'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`(*`subquery`*)` 表示返回单个值的子查询；即标量子查询。参见 [Section 15.2.15.1, “标量操作数的子查询”](scalar-subqueries.html
    "15.2.15.1 标量操作数的子查询")。'
- en: '`{*`identifier`* *`expr`*}` is ODBC escape syntax and is accepted for ODBC
    compatibility. The value is *`expr`*. The `{` and `}` curly braces in the syntax
    should be written literally; they are not metasyntax as used elsewhere in syntax
    descriptions.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`{*`identifier`* *`expr`*}` 是 ODBC 转义语法，为了兼容ODBC而被接受。值为 *`expr`*。语法中的 `{` 和
    `}` 大括号应该按照字面意义书写；它们不是在其他语法描述中使用的元语法。'
- en: '*`match_expr`* indicates a [`MATCH`](fulltext-search.html#function_match) expression.
    See [Section 14.9, “Full-Text Search Functions”](fulltext-search.html "14.9 Full-Text
    Search Functions").'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*`match_expr`* 表示一个 [`MATCH`](fulltext-search.html#function_match) 表达式。参见 [Section 14.9,
    “全文搜索函数”](fulltext-search.html "14.9 全文搜索函数")。'
- en: '*`case_expr`* indicates a [`CASE`](flow-control-functions.html#operator_case)
    expression. See [Section 14.5, “Flow Control Functions”](flow-control-functions.html
    "14.5 Flow Control Functions").'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*`case_expr`* 表示一个 [`CASE`](flow-control-functions.html#operator_case) 表达式。参见
    [Section 14.5, “流程控制函数”](flow-control-functions.html "14.5 流程控制函数")。'
- en: '*`interval_expr`* represents a temporal interval. See [Temporal Intervals](expressions.html#temporal-intervals
    "Temporal Intervals").'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*`interval_expr`* 表示一个时间间隔。参见 [时间间隔](expressions.html#temporal-intervals "时间间隔")。'
- en: Temporal Intervals
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间间隔
- en: '*`interval_expr`* in expressions represents a temporal interval. Intervals
    have this syntax:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*`interval_expr`* 在表达式中表示一个时间间隔。间隔具有以下语法：'
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*`expr`* represents a quantity. *`unit`* represents the unit for interpreting
    the quantity; it is a specifier such as `HOUR`, `DAY`, or `WEEK`. The `INTERVAL`
    keyword and the *`unit`* specifier are not case-sensitive.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*`expr`* 代表一个数量。*`unit`* 代表用于解释数量的单位；它是一个类似于 `小时`, `天` 或 `周` 的指定符号。`INTERVAL`
    关键字和 *`unit`* 指定符号不区分大小写。'
- en: The following table shows the expected form of the *`expr`* argument for each
    *`unit`* value.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了每个 *`unit`* 值的 *`expr`* 参数的预期形式。
- en: '**Table 11.2 Temporal Interval Expression and Unit Arguments**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 11.2 时间间隔表达式和单位参数**'
- en: '| *`unit`* Value | Expected *`expr`* Format |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| *`unit`* 值 | 预期的 *`expr`* 格式 |'
- en: '| `MICROSECOND` | `MICROSECONDS` |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `MICROSECOND` | `微秒` |'
- en: '| `SECOND` | `SECONDS` |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `SECOND` | `秒` |'
- en: '| `MINUTE` | `MINUTES` |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `MINUTE` | `分钟` |'
- en: '| `HOUR` | `HOURS` |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `HOUR` | `小时` |'
- en: '| `DAY` | `DAYS` |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `DAY` | `天` |'
- en: '| `WEEK` | `WEEKS` |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `WEEK` | `周` |'
- en: '| `MONTH` | `MONTHS` |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `MONTH` | `月` |'
- en: '| `QUARTER` | `QUARTERS` |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `QUARTER` | `季度` |'
- en: '| `YEAR` | `YEARS` |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `YEAR` | `年` |'
- en: '| `SECOND_MICROSECOND` | `''SECONDS.MICROSECONDS''` |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `SECOND_MICROSECOND` | `''秒.微秒''` |'
- en: '| `MINUTE_MICROSECOND` | `''MINUTES:SECONDS.MICROSECONDS''` |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `MINUTE_MICROSECOND` | `''分钟:秒.微秒''` |'
- en: '| `MINUTE_SECOND` | `''MINUTES:SECONDS''` |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `MINUTE_SECOND` | `''分钟:秒''` |'
- en: '| `HOUR_MICROSECOND` | `''HOURS:MINUTES:SECONDS.MICROSECONDS''` |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `HOUR_MICROSECOND` | `''小时:分钟:秒.微秒''` |'
- en: '| `HOUR_SECOND` | `''HOURS:MINUTES:SECONDS''` |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| `HOUR_SECOND` | `''小时:分钟:秒''` |'
- en: '| `HOUR_MINUTE` | `''HOURS:MINUTES''` |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| `HOUR_MINUTE` | `''小时:分钟''` |'
- en: '| `DAY_MICROSECOND` | `''DAYS HOURS:MINUTES:SECONDS.MICROSECONDS''` |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `DAY_MICROSECOND` | `''天 小时:分钟:秒.微秒''` |'
- en: '| `DAY_SECOND` | `''DAYS HOURS:MINUTES:SECONDS''` |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `DAY_SECOND` | `''天 小时:分钟:秒''` |'
- en: '| `DAY_MINUTE` | `''DAYS HOURS:MINUTES''` |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `DAY_MINUTE` | `''天 小时:分钟''` |'
- en: '| `DAY_HOUR` | `''DAYS HOURS''` |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `DAY_HOUR` | `''天 小时''` |'
- en: '| `YEAR_MONTH` | `''YEARS-MONTHS''` |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `YEAR_MONTH` | `''年-月''` |'
- en: '| *`unit`* Value | Expected *`expr`* Format |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| *`unit`* 值 | 预期的 *`expr`* 格式 |'
- en: MySQL permits any punctuation delimiter in the *`expr`* format. Those shown
    in the table are the suggested delimiters.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL允许在 *`expr`* 格式中使用任何标点符号分隔符。表中显示的是建议的分隔符。
- en: 'Temporal intervals are used for certain functions, such as [`DATE_ADD()`](date-and-time-functions.html#function_date-add)
    and [`DATE_SUB()`](date-and-time-functions.html#function_date-sub):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '时间间隔用于某些函数，例如 [`DATE_ADD()`](date-and-time-functions.html#function_date-add)
    和 [`DATE_SUB()`](date-and-time-functions.html#function_date-sub)： '
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Temporal arithmetic also can be performed in expressions using `INTERVAL` together
    with the [`+`](arithmetic-functions.html#operator_plus) or [`-`](arithmetic-functions.html#operator_minus)
    operator:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用 `INTERVAL` 与 [`+`](arithmetic-functions.html#operator_plus) 或 [`-`](arithmetic-functions.html#operator_minus)
    运算符在表达式中执行时间算术：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`INTERVAL *`expr`* *`unit`*` is permitted on either side of the [`+`](arithmetic-functions.html#operator_plus)
    operator if the expression on the other side is a date or datetime value. For
    the [`-`](arithmetic-functions.html#operator_minus) operator, `INTERVAL *`expr`*
    *`unit`*` is permitted only on the right side, because it makes no sense to subtract
    a date or datetime value from an interval.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果另一侧的表达式是日期或日期时间值，则[`+`](arithmetic-functions.html#operator_plus)运算符的两侧都允许`INTERVAL
    *`expr`* *`unit`*`。对于[`-`](arithmetic-functions.html#operator_minus)运算符，只允许在右侧使用`INTERVAL
    *`expr`* *`unit`*，因为从间隔中减去日期或日期时间值是没有意义的。
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The [`EXTRACT()`](date-and-time-functions.html#function_extract) function uses
    the same kinds of *`unit`* specifiers as [`DATE_ADD()`](date-and-time-functions.html#function_date-add)
    or [`DATE_SUB()`](date-and-time-functions.html#function_date-sub), but extracts
    parts from the date rather than performing date arithmetic:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[`EXTRACT()`](date-and-time-functions.html#function_extract)函数使用与[`DATE_ADD()`](date-and-time-functions.html#function_date-add)或[`DATE_SUB()`](date-and-time-functions.html#function_date-sub)相同类型的*`unit`*指示符，但是从日期中提取部分而不是执行日期算术：'
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Temporal intervals can be used in [`CREATE EVENT`](create-event.html "15.1.13 CREATE
    EVENT Statement") statements:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 时间间隔可以在[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement")语句中使用：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If you specify an interval value that is too short (does not include all the
    interval parts that would be expected from the *`unit`* keyword), MySQL assumes
    that you have left out the leftmost parts of the interval value. For example,
    if you specify a *`unit`* of `DAY_SECOND`, the value of *`expr`* is expected to
    have days, hours, minutes, and seconds parts. If you specify a value like `'1:10'`,
    MySQL assumes that the days and hours parts are missing and the value represents
    minutes and seconds. In other words, `'1:10' DAY_SECOND` is interpreted in such
    a way that it is equivalent to `'1:10' MINUTE_SECOND`. This is analogous to the
    way that MySQL interprets [`TIME`](time.html "13.2.3 The TIME Type") values as
    representing elapsed time rather than as a time of day.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您指定的间隔值太短（不包括从*`unit`*关键字中预期的所有间隔部分），MySQL会假定您省略了间隔值的最左边部分。例如，如果您指定了`DAY_SECOND`作为*`unit`*，则*`expr`*的值应包含天、小时、分钟和秒部分。如果您指定类似
    `'1:10'` 的值，MySQL会假定缺少天数和小时数部分，该值表示分钟和秒数。换句话说，`'1:10' DAY_SECOND`被解释为等同于`'1:10'
    MINUTE_SECOND`。这类似于MySQL解释[`TIME`](time.html "13.2.3 The TIME Type")值表示经过的时间而不是一天中的时间。
- en: '*`expr`* is treated as a string, so be careful if you specify a nonstring value
    with `INTERVAL`. For example, with an interval specifier of `HOUR_MINUTE`, ''6/4''
    is treated as 6 hours, four minutes, whereas `6/4` evaluates to `1.5000` and is
    treated as 1 hour, 5000 minutes:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*`expr`*被视为字符串，因此如果您在`INTERVAL`中指定非字符串值，请小心。例如，使用`HOUR_MINUTE`的间隔符号，''6/4''被视为6小时4分钟，而`6/4`计算结果为`1.5000`，被视为1小时5000分钟：'
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To ensure interpretation of the interval value as you expect, a [`CAST()`](cast-functions.html#function_cast)
    operation may be used. To treat `6/4` as 1 hour, 5 minutes, cast it to a [`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") value with a single
    fractional digit:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保间隔值的解释符合您的期望，可以使用[`CAST()`](cast-functions.html#function_cast)操作。将`6/4`视为1小时5分钟，将其转换为具有单个小数位的[`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC")值：
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you add to or subtract from a date value something that contains a time
    part, the result is automatically converted to a datetime value:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您向日期值添加或减去包含时间部分的内容，则结果会自动转换为日期时间值：
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you add `MONTH`, `YEAR_MONTH`, or `YEAR` and the resulting date has a day
    that is larger than the maximum day for the new month, the day is adjusted to
    the maximum days in the new month:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您添加`MONTH`、`YEAR_MONTH`或`YEAR`，并且结果日期的天数大于新月份的最大天数，则天数会调整为新月份的最大天数：
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Date arithmetic operations require complete dates and do not work with incomplete
    dates such as `''2016-07-00''` or badly malformed dates:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 日期算术运算需要完整的日期，不适用于不完整的日期，如`'2016-07-00'`或格式错误的日期：
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
