- en: 5.6.6 Using Foreign Keys
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5.6.6 使用外键
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/example-foreign-keys.html](https://dev.mysql.com/doc/refman/8.0/en/example-foreign-keys.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/example-foreign-keys.html](https://dev.mysql.com/doc/refman/8.0/en/example-foreign-keys.html)
- en: MySQL supports foreign keys, which permit cross-referencing related data across
    tables, and foreign key constraints, which help keep the related data consistent.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持外键，允许跨表引用相关数据，并支持外键约束，有助于保持相关数据的一致性。
- en: A foreign key relationship involves a parent table that holds the initial column
    values, and a child table with column values that reference the parent column
    values. A foreign key constraint is defined on the child table.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 外键关系涉及一个持有初始列值的父表，以及一个引用父列值的子表。外键约束定义在子表上。
- en: This following example relates `parent` and `child` tables through a single-column
    foreign key and shows how a foreign key constraint enforces referential integrity.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例通过单列外键关联`parent`和`child`表，并展示了外键约束如何强制执行引用完整性。
- en: 'Create the parent and child tables using the following SQL statements:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下SQL语句创建父表和子表：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Insert a row into the parent table, like this:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 插入一行到父表中，如下所示：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Verify that the data was inserted. You can do this simply by selecting all
    rows from `parent`, as shown here:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 验证数据是否已插入。你可以通过简单地选择所有`parent`表中的行来做到这一点，如下所示：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Insert a row into the child table using the following SQL statement:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下SQL语句向子表中插入一行：
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The insert operation is successful because `parent_id` 1 is present in the parent
    table.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 插入操作成功是因为`parent_id` 1存在于父表中。
- en: 'Insertion of a row into the child table with a `parent_id` value that is not
    present in the parent table is rejected with an error, as you can see here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试将具有在父表中不存在的`parent_id`值的行插入到子表中会被拒绝，并显示错误，如下所示：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The operation fails because the specified `parent_id` value does not exist in
    the parent table.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这个操作失败是因为指定的`parent_id`值在父表中不存在。
- en: 'Trying to delete the previously inserted row from the parent table also fails,
    as shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试删除先前插入到父表中的行也会失败，如下所示：
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This operation fails because the record in the child table contains the referenced
    id (`parent_id`) value.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这个操作失败是因为子表中的记录包含了引用的id（`parent_id`）值。
- en: When an operation affects a key value in the parent table that has matching
    rows in the child table, the result depends on the referential action specified
    by `ON UPDATE` and `ON DELETE` subclauses of the `FOREIGN KEY` clause. Omitting
    `ON DELETE` and `ON UPDATE` clauses (as in the current child table definition)
    is the same as specifying the `RESTRICT` option, which rejects operations that
    affect a key value in the parent table that has matching rows in the parent table.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个操作影响到父表中具有匹配行的键值时，结果取决于`FOREIGN KEY`子句的`ON UPDATE`和`ON DELETE`子句指定的引用动作。省略`ON
    DELETE`和`ON UPDATE`子句（如当前子表定义中）等同于指定`RESTRICT`选项，它拒绝影响父表中具有匹配行的键值的操作。
- en: To demonstrate `ON DELETE` and `ON UPDATE` referential actions, drop the child
    table and recreate it to include `ON UPDATE` and `ON DELETE` subclauses with the
    `CASCADE` option. The `CASCADE` option automatically deletes or updates matching
    rows in the child table when deleting or updating rows in the parent table.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示`ON DELETE`和`ON UPDATE`引用动作，删除子表并重新创建它以包括带有`CASCADE`选项的`ON UPDATE`和`ON DELETE`子句。`CASCADE`选项在删除或更新父表中的行时，会自动删除或更新子表中匹配的行。
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Insert some rows into the child table using the statement shown here:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用下面显示的语句向子表中插入一些行：
- en: '[PRE7]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Verify that the data was inserted, like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 验证数据是否已插入，如下所示：
- en: '[PRE8]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Update the ID in the parent table, changing it from 1 to 2, using the SQL statement
    shown here:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 更新父表中的ID，将其从1更改为2，使用下面显示的SQL语句：
- en: '[PRE9]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Verify that the update was successful by selecting all rows from the parent
    table, as shown here:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择所有父表中的行来验证更新是否成功，如下所示：
- en: '[PRE10]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Verify that the `ON UPDATE CASCADE` referential action updated the child table,
    like this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 验证`ON UPDATE CASCADE`引用动作是否已更新子表，如下所示：
- en: '[PRE11]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: To demonstrate the `ON DELETE CASCADE` referential action, delete records from
    the parent table where `parent_id = 2`; this deletes all records in the parent
    table.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示`ON DELETE CASCADE`引用动作，删除父表中`parent_id = 2`的记录；这将删除父表中的所有记录。
- en: '[PRE12]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Because all records in the child table are associated with `parent_id = 2`,
    the `ON DELETE CASCADE` referential action removes all records from the child
    table, as shown here:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 因为子表中的所有记录都与`parent_id = 2`相关联，所以`ON DELETE CASCADE`参照操作会从子表中删除所有记录，如下所示：
- en: '[PRE13]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: For more information about foreign key constraints, see [Section 15.1.20.5,
    “FOREIGN KEY Constraints”](create-table-foreign-keys.html "15.1.20.5 FOREIGN KEY
    Constraints").
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 关于外键约束的更多信息，请参见[第15.1.20.5节，“外键约束”](create-table-foreign-keys.html "15.1.20.5 FOREIGN
    KEY Constraints")。
