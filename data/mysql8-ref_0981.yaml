- en: 15.3.7 SET TRANSACTION Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.3.7 SET TRANSACTION 语句
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/set-transaction.html](https://dev.mysql.com/doc/refman/8.0/en/set-transaction.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/set-transaction.html](https://dev.mysql.com/doc/refman/8.0/en/set-transaction.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This statement specifies [transaction](glossary.html#glos_transaction "transaction")
    characteristics. It takes a list of one or more characteristic values separated
    by commas. Each characteristic value sets the transaction [isolation level](glossary.html#glos_isolation_level
    "isolation level") or access mode. The isolation level is used for operations
    on [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine")
    tables. The access mode specifies whether transactions operate in read/write or
    read-only mode.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句指定了[事务](glossary.html#glos_transaction "事务") 特性。它接受一个由逗号分隔的一个或多个特性值的列表。每个特性值设置事务的[隔离级别](glossary.html#glos_isolation_level
    "隔离级别") 或访问模式。隔离级别用于对[`InnoDB`](innodb-storage-engine.html "第17章 InnoDB 存储引擎")
    表进行操作。访问模式指定事务是以读/写模式还是只读模式运行。
- en: In addition, [`SET TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION
    Statement") can include an optional `GLOBAL` or `SESSION` keyword to indicate
    the scope of the statement.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，[`SET TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION 语句") 可以包括一个可选的`GLOBAL`或`SESSION`关键字，以指示语句的范围。
- en: '[Transaction Isolation Levels](set-transaction.html#set-transaction-isolation-level
    "Transaction Isolation Levels")'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务隔离级别](set-transaction.html#set-transaction-isolation-level "事务隔离级别")'
- en: '[Transaction Access Mode](set-transaction.html#set-transaction-access-mode
    "Transaction Access Mode")'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务访问模式](set-transaction.html#set-transaction-access-mode "事务访问模式")'
- en: '[Transaction Characteristic Scope](set-transaction.html#set-transaction-scope
    "Transaction Characteristic Scope")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务特性范围](set-transaction.html#set-transaction-scope "事务特性范围")'
- en: Transaction Isolation Levels
  id: totrans-8
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务隔离级别
- en: To set the transaction isolation level, use an `ISOLATION LEVEL *`level`*` clause.
    It is not permitted to specify multiple `ISOLATION LEVEL` clauses in the same
    [`SET TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION Statement") statement.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置事务隔离级别，请使用`ISOLATION LEVEL *`level`*`子句。不允许在同一[`SET TRANSACTION`](set-transaction.html
    "15.3.7 SET TRANSACTION 语句") 语句中指定多个`ISOLATION LEVEL`子句。
- en: The default isolation level is [`REPEATABLE READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read).
    Other permitted values are [`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed),
    [`READ UNCOMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-uncommitted),
    and [`SERIALIZABLE`](innodb-transaction-isolation-levels.html#isolevel_serializable).
    For information about these isolation levels, see [Section 17.7.2.1, “Transaction
    Isolation Levels”](innodb-transaction-isolation-levels.html "17.7.2.1 Transaction
    Isolation Levels").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 默认隔离级别是[`REPEATABLE READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read)。其他允许的值是[`READ
    COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)、[`READ
    UNCOMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-uncommitted)
    和[`SERIALIZABLE`](innodb-transaction-isolation-levels.html#isolevel_serializable)。有关这些隔离级别的信息，请参见[第17.7.2.1节，“事务隔离级别”](innodb-transaction-isolation-levels.html
    "17.7.2.1 事务隔离级别")。
- en: Transaction Access Mode
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务访问模式
- en: To set the transaction access mode, use a `READ WRITE` or `READ ONLY` clause.
    It is not permitted to specify multiple access-mode clauses in the same [`SET
    TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION Statement") statement.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置事务访问模式，请使用`READ WRITE`或`READ ONLY`子句。不允许在同一[`SET TRANSACTION`](set-transaction.html
    "15.3.7 SET TRANSACTION 语句") 语句中指定多个访问模式子句。
- en: By default, a transaction takes place in read/write mode, with both reads and
    writes permitted to tables used in the transaction. This mode may be specified
    explicitly using [`SET TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION
    Statement") with an access mode of `READ WRITE`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，事务以读/写模式进行，允许对事务中使用的表进行读取和写入。可以使用具有`READ WRITE`访问模式的[`SET TRANSACTION`](set-transaction.html
    "15.3.7 SET TRANSACTION 语句") 明确指定此模式。
- en: If the transaction access mode is set to `READ ONLY`, changes to tables are
    prohibited. This may enable storage engines to make performance improvements that
    are possible when writes are not permitted.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果事务访问模式设置为`READ ONLY`，则禁止对表进行更改。这可能使存储引擎能够进行性能改进，这些改进在不允许写入时可能是可能的。
- en: In read-only mode, it remains possible to change tables created with the `TEMPORARY`
    keyword using DML statements. Changes made with DDL statements are not permitted,
    just as with permanent tables.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在只读模式下，仍然可以使用 DML 语句更改使用 `TEMPORARY` 关键字创建的表。使用 DDL 语句进行的更改是不允许的，就像永久表一样。
- en: The `READ WRITE` and `READ ONLY` access modes also may be specified for an individual
    transaction using the [`START TRANSACTION`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements") statement.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用 [`START TRANSACTION`](commit.html "15.3.1 START TRANSACTION, COMMIT, and
    ROLLBACK Statements") 语句为单个事务指定 `READ WRITE` 和 `READ ONLY` 访问模式。
- en: Transaction Characteristic Scope
  id: totrans-17
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务特性范围
- en: 'You can set transaction characteristics globally, for the current session,
    or for the next transaction only:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以全局设置事务特性，为当前会话或仅限于下一个事务：
- en: 'With the `GLOBAL` keyword:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `GLOBAL` 关键字：
- en: The statement applies globally for all subsequent sessions.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该语句全局适用于所有后续会话。
- en: Existing sessions are unaffected.
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现有会话不受影响。
- en: 'With the `SESSION` keyword:'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `SESSION` 关键字：
- en: The statement applies to all subsequent transactions performed within the current
    session.
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该语句适用于当前会话中执行的所有后续事务。
- en: The statement is permitted within transactions, but does not affect the current
    ongoing transaction.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该语句允许在事务内部执行，但不影响当前正在进行的事务。
- en: If executed between transactions, the statement overrides any preceding statement
    that sets the next-transaction value of the named characteristics.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在事务之间执行，则该语句将覆盖设置下一个事务值的任何先前语句。
- en: 'Without any `SESSION` or `GLOBAL` keyword:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有任何 `SESSION` 或 `GLOBAL` 关键字：
- en: The statement applies only to the next single transaction performed within the
    session.
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该语句仅适用于会话中执行的下一个单个事务。
- en: Subsequent transactions revert to using the session value of the named characteristics.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后续事务将恢复使用命名特性的会话值。
- en: 'The statement is not permitted within transactions:'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该语句不允许在事务内部执行：
- en: '[PRE1]'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A change to global transaction characteristics requires the [`CONNECTION_ADMIN`](privileges-provided.html#priv_connection-admin)
    privilege (or the deprecated [`SUPER`](privileges-provided.html#priv_super) privilege).
    Any session is free to change its session characteristics (even in the middle
    of a transaction), or the characteristics for its next transaction (prior to the
    start of that transaction).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 更改全局事务特性需要 [`CONNECTION_ADMIN`](privileges-provided.html#priv_connection-admin)
    权限（或已弃用的 [`SUPER`](privileges-provided.html#priv_super) 权限）。任何会话都可以自由更改其会话特性（即使在事务中间），或者更改其下一个事务的特性（在该事务开始之前）。
- en: To set the global isolation level at server startup, use the [`--transaction-isolation=*`level`*`](server-options.html#option_mysqld_transaction-isolation)
    option on the command line or in an option file. Values of *`level`* for this
    option use dashes rather than spaces, so the permissible values are [`READ-UNCOMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-uncommitted),
    [`READ-COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed),
    [`REPEATABLE-READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read),
    or [`SERIALIZABLE`](innodb-transaction-isolation-levels.html#isolevel_serializable).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要在服务器启动时设置全局隔离级别，请在命令行或选项文件中使用 [`--transaction-isolation=*`level`*`](server-options.html#option_mysqld_transaction-isolation)
    选项。此选项的 *`level`* 值使用破折号而不是空格，因此可接受的值为 [`READ-UNCOMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-uncommitted)、[`READ-COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)、[`REPEATABLE-READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read)
    或 [`SERIALIZABLE`](innodb-transaction-isolation-levels.html#isolevel_serializable)。
- en: Similarly, to set the global transaction access mode at server startup, use
    the [`--transaction-read-only`](server-options.html#option_mysqld_transaction-read-only)
    option. The default is `OFF` (read/write mode) but the value can be set to `ON`
    for a mode of read only.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，要在服务器启动时设置全局事务访问模式，请使用 [`--transaction-read-only`](server-options.html#option_mysqld_transaction-read-only)
    选项。默认值为 `OFF`（读/写模式），但该值可以设置为 `ON` 以进行只读模式。
- en: 'For example, to set the isolation level to [`REPEATABLE READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read)
    and the access mode to `READ WRITE`, use these lines in the `[mysqld]` section
    of an option file:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要将隔离级别设置为 [`REPEATABLE READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read)
    并将访问模式设置为 `READ WRITE`，请在选项文件的 `[mysqld]` 部分中使用以下行：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'At runtime, characteristics at the global, session, and next-transaction scope
    levels can be set indirectly using the [`SET TRANSACTION`](set-transaction.html
    "15.3.7 SET TRANSACTION Statement") statement, as described previously. They can
    also be set directly using the [`SET`](set-variable.html "15.7.6.1 SET Syntax
    for Variable Assignment") statement to assign values to the [`transaction_isolation`](server-system-variables.html#sysvar_transaction_isolation)
    and [`transaction_read_only`](server-system-variables.html#sysvar_transaction_read_only)
    system variables:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行时，可以间接地使用[`SET TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION
    Statement")语句设置全局、会话和下一个事务范围级别的特征，如前所述。也可以直接使用[`SET`](set-variable.html "15.7.6.1 SET
    Syntax for Variable Assignment")语句为[`transaction_isolation`](server-system-variables.html#sysvar_transaction_isolation)和[`transaction_read_only`](server-system-variables.html#sysvar_transaction_read_only)系统变量赋值来直接设置它们：
- en: '[`SET TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION Statement")
    permits optional `GLOBAL` and `SESSION` keywords for setting transaction characteristics
    at different scope levels.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SET TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION Statement")允许在不同范围级别设置事务特征时使用可选的`GLOBAL`和`SESSION`关键字。'
- en: The [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement for assigning values to the [`transaction_isolation`](server-system-variables.html#sysvar_transaction_isolation)
    and [`transaction_read_only`](server-system-variables.html#sysvar_transaction_read_only)
    system variables has syntaxes for setting these variables at different scope levels.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于为[`transaction_isolation`](server-system-variables.html#sysvar_transaction_isolation)和[`transaction_read_only`](server-system-variables.html#sysvar_transaction_read_only)系统变量赋值的[`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment")语句具有在不同范围级别设置这些变量的语法。
- en: The following tables show the characteristic scope level set by each [`SET TRANSACTION`](set-transaction.html
    "15.3.7 SET TRANSACTION Statement") and variable-assignment syntax.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了每个[`SET TRANSACTION`](set-transaction.html "15.3.7 SET TRANSACTION Statement")和变量赋值语法设置的特征范围级别。
- en: '**Table 15.9 SET TRANSACTION Syntax for Transaction Characteristics**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 15.9 事务特征的SET TRANSACTION语法**'
- en: '| Syntax | Affected Characteristic Scope |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 语法 | 受影响的特征范围 |'
- en: '| `SET GLOBAL TRANSACTION *`transaction_characteristic`*` | Global |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `SET GLOBAL TRANSACTION *`transaction_characteristic`*` | 全局 |'
- en: '| `SET SESSION TRANSACTION *`transaction_characteristic`*` | Session |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `SET SESSION TRANSACTION *`transaction_characteristic`*` | 会话 |'
- en: '| `SET TRANSACTION *`transaction_characteristic`*` | Next transaction only
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `SET TRANSACTION *`transaction_characteristic`*` | 仅适用于下一个事务 |'
- en: '**Table 15.10 SET Syntax for Transaction Characteristics**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 15.10 事务特征的SET语法**'
- en: '| Syntax | Affected Characteristic Scope |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 语法 | 受影响的特征范围 |'
- en: '| `SET GLOBAL *`var_name`* = *`value`*` | Global |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| `SET GLOBAL *`var_name`* = *`value`*` | 全局 |'
- en: '| `SET @@GLOBAL.*`var_name`* = *`value`*` | Global |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| `SET @@GLOBAL.*`var_name`* = *`value`*` | 全局 |'
- en: '| `SET PERSIST *`var_name`* = *`value`*` | Global |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `SET PERSIST *`var_name`* = *`value`*` | 全局 |'
- en: '| `SET @@PERSIST.*`var_name`* = *`value`*` | Global |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `SET @@PERSIST.*`var_name`* = *`value`*` | 全局 |'
- en: '| `SET PERSIST_ONLY *`var_name`* = *`value`*` | No runtime effect |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `SET PERSIST_ONLY *`var_name`* = *`value`*` | 无运行时效果 |'
- en: '| `SET @@PERSIST_ONLY.*`var_name`* = *`value`*` | No runtime effect |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `SET @@PERSIST_ONLY.*`var_name`* = *`value`*` | 无运行时效果 |'
- en: '| `SET SESSION *`var_name`* = *`value`*` | Session |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `SET SESSION *`var_name`* = *`value`*` | 会话 |'
- en: '| `SET @@SESSION.*`var_name`* = *`value`*` | Session |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `SET @@SESSION.*`var_name`* = *`value`*` | 会话 |'
- en: '| `SET *`var_name`* = *`value`*` | Session |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `SET *`var_name`* = *`value`*` | 会话 |'
- en: '| `SET @@*`var_name`* = *`value`*` | Next transaction only |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `SET @@*`var_name`* = *`value`*` | 仅适用于下一个事务 |'
- en: '| Syntax | Affected Characteristic Scope |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 语法 | 受影响的特征范围 |'
- en: 'It is possible to check the global and session values of transaction characteristics
    at runtime:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在运行时检查事务特征的全局和会话值：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
