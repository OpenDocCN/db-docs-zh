- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/check-table.html](https://dev.mysql.com/doc/refman/8.0/en/check-table.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/check-table.html](https://dev.mysql.com/doc/refman/8.0/en/check-table.html)
- en: 15.7.3.2 CHECK TABLE Statement
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.7.3.2 CHECK TABLE Statement
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") checks a
    table or tables for errors. [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE
    Statement") can also check views for problems, such as tables that are referenced
    in the view definition that no longer exist.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 检查一个或多个表中的错误。[`CHECK
    TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 也可以检查视图是否存在问题，例如在视图定义中引用的表已不存在。'
- en: To check a table, you must have some privilege for it.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查一个表，您必须���其具有某些权限。
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") works for
    [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine"),
    [`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM Storage Engine"), [`ARCHIVE`](archive-storage-engine.html
    "18.5 The ARCHIVE Storage Engine"), and [`CSV`](csv-storage-engine.html "18.4 The
    CSV Storage Engine") tables.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 适用于 [`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB存储引擎"), [`MyISAM`](myisam-storage-engine.html "第18.2章 MyISAM存储引擎"),
    [`ARCHIVE`](archive-storage-engine.html "第18.5章 ARCHIVE存储引擎"), 和 [`CSV`](csv-storage-engine.html
    "第18.4章 CSV存储引擎") 表。'
- en: Before running [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    on `InnoDB` tables, see [CHECK TABLE Usage Notes for InnoDB Tables](check-table.html#check-table-innodb
    "CHECK TABLE Usage Notes for InnoDB Tables").
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在对 `InnoDB` 表运行 [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    之前，请参阅 [InnoDB表的CHECK TABLE使用注意事项](check-table.html#check-table-innodb "InnoDB表的CHECK
    TABLE使用注意事项")。
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") is supported
    for partitioned tables, and you can use `ALTER TABLE ... CHECK PARTITION` to check
    one or more partitions; for more information, see [Section 15.1.9, “ALTER TABLE
    Statement”](alter-table.html "15.1.9 ALTER TABLE Statement"), and [Section 26.3.4,
    “Maintenance of Partitions”](partitioning-maintenance.html "26.3.4 Maintenance
    of Partitions").'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 支持分区表，并且您可以使用
    `ALTER TABLE ... CHECK PARTITION` 来检查一个或多个分区；有关更多信息，请参阅 [第15.1.9节，“ALTER TABLE语句”](alter-table.html
    "第15.1.9节 ALTER TABLE语句") 和 [第26.3.4节，“分区的维护”](partitioning-maintenance.html "第26.3.4节
    分区的维护")。'
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") ignores
    virtual generated columns that are not indexed.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 忽略未建立索引的虚拟生成列。'
- en: '[CHECK TABLE Output](check-table.html#check-table-output "CHECK TABLE Output")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检查表输出](check-table.html#check-table-output "检查表输出")'
- en: '[Checking Version Compatibility](check-table.html#check-table-version-compatibility
    "Checking Version Compatibility")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检查版本兼容性](check-table.html#check-table-version-compatibility "检查版本兼容性")'
- en: '[Checking Data Consistency](check-table.html#check-table-data-consistency "Checking
    Data Consistency")'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检查数据一致性](check-table.html#check-table-data-consistency "检查数据一致性")'
- en: '[CHECK TABLE Usage Notes for InnoDB Tables](check-table.html#check-table-innodb
    "CHECK TABLE Usage Notes for InnoDB Tables")'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[InnoDB表的CHECK TABLE使用注意事项](check-table.html#check-table-innodb "InnoDB表的CHECK
    TABLE使用注意事项")'
- en: '[CHECK TABLE Usage Notes for MyISAM Tables](check-table.html#check-table-myisam
    "CHECK TABLE Usage Notes for MyISAM Tables")'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[MyISAM表的CHECK TABLE使用注意事项](check-table.html#check-table-myisam "MyISAM表的CHECK
    TABLE使用注意事项")'
- en: CHECK TABLE Output
  id: totrans-14
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 检查表输出
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") returns
    a result set with the columns shown in the following table.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 返回一个结果集，其中包含以下表中显示的列。'
- en: '| Column | Value |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 列 | 值 |'
- en: '| `Table` | The table name |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `Table` | 表名 |'
- en: '| `Op` | Always `check` |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| `Op` | 始终为 `check` |'
- en: '| `Msg_type` | `status`, `error`, `info`, `note`, or `warning` |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| `Msg_type` | `status`, `error`, `info`, `note`, 或 `warning` |'
- en: '| `Msg_text` | An informational message |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `Msg_text` | 一个信息性消息 |'
- en: The statement might produce many rows of information for each checked table.
    The last row has a `Msg_type` value of `status` and the `Msg_text` normally should
    be `OK`. `Table is already up to date` means that the storage engine for the table
    indicated that there was no need to check the table.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句可能为每个检查的表产生许多行信息。最后一行的 `Msg_type` 值为 `status`，`Msg_text` 通常应为 `OK`。 `Table
    is already up to date` 表示表的存储引擎指示无需检查表。
- en: Checking Version Compatibility
  id: totrans-22
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 检查版本兼容性
- en: The `FOR UPGRADE` option checks whether the named tables are compatible with
    the current version of MySQL. With `FOR UPGRADE`, the server checks each table
    to determine whether there have been any incompatible changes in any of the table's
    data types or indexes since the table was created. If not, the check succeeds.
    Otherwise, if there is a possible incompatibility, the server runs a full check
    on the table (which might take some time).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`FOR UPGRADE`选项检查指定表是否与当前版本的MySQL兼容。使用`FOR UPGRADE`，服务器会检查每个表，以确定自创建表以来是否有任何数据类型或索引的不兼容更改。如果没有，则检查成功。否则，如果存在可能的不兼容性，服务器会对表进行全面检查（可能需要一些时间）。'
- en: Incompatibilities might occur because the storage format for a data type has
    changed or because its sort order has changed. Our aim is to avoid these changes,
    but occasionally they are necessary to correct problems that would be worse than
    an incompatibility between releases.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 不兼容性可能是因为数据类型的存储格式已更改或其排序顺序已更改。我们的目标是避免这些更改，但偶尔它们是必要的，以纠正比发布之间的不兼容性更糟糕的问题。
- en: '`FOR UPGRADE` discovers these incompatibilities:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`FOR UPGRADE`会发现这些不兼容性：'
- en: The indexing order for end-space in [`TEXT`](blob.html "13.3.4 The BLOB and
    TEXT Types") columns for `InnoDB` and `MyISAM` tables changed between MySQL 4.1
    and 5.0.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`InnoDB`和`MyISAM`表中，[`TEXT`](blob.html "13.3.4 BLOB和TEXT类型")列的末尾空格索引顺序在MySQL
    4.1和5.0之间发生了变化。
- en: The storage method of the new [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") data type changed between MySQL 5.0.3
    and 5.0.5.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新[`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值）- DECIMAL、NUMERIC")数据类型的存储方法在MySQL
    5.0.3和5.0.5之间发生了变化。
- en: Changes are sometimes made to character sets or collations that require table
    indexes to be rebuilt. For details about such changes, see [Section 3.5, “Changes
    in MySQL 8.0”](upgrading-from-previous-series.html "3.5 Changes in MySQL 8.0").
    For information about rebuilding tables, see [Section 3.14, “Rebuilding or Repairing
    Tables or Indexes”](rebuilding-tables.html "3.14 Rebuilding or Repairing Tables
    or Indexes").
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时会对字符集或校对规则进行更改，需要重建表索引。有关此类更改的详细信息，请参见[第3.5节，“MySQL 8.0中的更改”](upgrading-from-previous-series.html
    "3.5 MySQL 8.0中的更改")。有关重建表的信息，请参见[第3.14节，“重建或修复表或索引”](rebuilding-tables.html "3.14 重建或修复表或索引")。
- en: MySQL 8.0 does not support the 2-digit [`YEAR(2)`](year.html "13.2.4 The YEAR
    Type") data type permitted in older versions of MySQL. For tables containing [`YEAR(2)`](year.html
    "13.2.4 The YEAR Type") columns, [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK
    TABLE Statement") recommends [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR
    TABLE Statement"), which converts 2-digit [`YEAR(2)`](year.html "13.2.4 The YEAR
    Type") columns to 4-digit [`YEAR`](year.html "13.2.4 The YEAR Type") columns.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8.0不支持旧版本MySQL中允许的2位数[`YEAR(2)`](year.html "13.2.4 YEAR类型")数据类型。对于包含[`YEAR(2)`](year.html
    "13.2.4 YEAR类型")列的表，[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE语句")建议使用[`REPAIR
    TABLE`](repair-table.html "15.7.3.5 REPAIR TABLE语句")，将2位数[`YEAR(2)`](year.html
    "13.2.4 YEAR类型")列转换为4位数[`YEAR`](year.html "13.2.4 YEAR类型")列。
- en: Trigger creation time is maintained.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触发器创建时间保持不变。
- en: A table is reported as needing a rebuild if it contains old temporal columns
    in pre-5.6.4 format ([`TIME`](time.html "13.2.3 The TIME Type"), [`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), and [`TIMESTAMP`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") columns without support for
    fractional seconds precision) and the [`avoid_temporal_upgrade`](server-system-variables.html#sysvar_avoid_temporal_upgrade)
    system variable is disabled. This helps the MySQL upgrade procedure detect and
    upgrade tables containing old temporal columns. If [`avoid_temporal_upgrade`](server-system-variables.html#sysvar_avoid_temporal_upgrade)
    is enabled, `FOR UPGRADE` ignores the old temporal columns present in the table;
    consequently, the upgrade procedure does not upgrade them.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表中包含旧的时间列（不支持分数秒精度的[`TIME`](time.html "13.2.3 TIME类型")、[`DATETIME`](datetime.html
    "13.2.2 DATE、DATETIME和TIMESTAMP类型")和[`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME和TIMESTAMP类型")列）且[`avoid_temporal_upgrade`](server-system-variables.html#sysvar_avoid_temporal_upgrade)系统变量已禁用，则会报告需要重建表。这有助于MySQL升级过程检测和升级包含旧时间列的表。如果启用了[`avoid_temporal_upgrade`](server-system-variables.html#sysvar_avoid_temporal_upgrade)，`FOR
    UPGRADE`会忽略表中存在的旧时间列；因此，升级过程不会对其进行升级。
- en: To check for tables that contain such temporal columns and need a rebuild, disable
    [`avoid_temporal_upgrade`](server-system-variables.html#sysvar_avoid_temporal_upgrade)
    before executing [`CHECK TABLE ... FOR UPGRADE`](check-table.html "15.7.3.2 CHECK
    TABLE Statement").
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要检查包含这种时间列并需要重建的表格，请在执行[`CHECK TABLE ... FOR UPGRADE`](check-table.html "15.7.3.2 CHECK
    TABLE Statement")之前禁用[`avoid_temporal_upgrade`](server-system-variables.html#sysvar_avoid_temporal_upgrade)。
- en: Warnings are issued for tables that use nonnative partitioning because nonnative
    partitioning is removed in MySQL 8.0\. See [Chapter 26, *Partitioning*](partitioning.html
    "Chapter 26 Partitioning").
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于使用非本机分区的表格会发出警告，因为MySQL 8.0中移除了非本机分区。请参阅[第26章，*分区*](partitioning.html "第26章 分区")。
- en: Checking Data Consistency
  id: totrans-34
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 检查数据一致性
- en: The following table shows the other check options that can be given. These options
    are passed to the storage engine, which may use or ignore them.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了可以提供的其他检查选项。这些选项将传递给存储引擎，存储引擎可能会使用或忽略它们。
- en: '| Type | Meaning |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 类型 | 意义 |'
- en: '| `QUICK` | Do not scan the rows to check for incorrect links. Applies to `InnoDB`
    and `MyISAM` tables and views. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `QUICK` | 不扫描行以检查不正确的链接。适用于`InnoDB`和`MyISAM`表格和视图。'
- en: '| `FAST` | Check only tables that have not been closed properly. Ignored for
    `InnoDB`; applies only to `MyISAM` tables and views. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `FAST` | 仅检查未正确关闭的表格。对`InnoDB`无效；仅适用于`MyISAM`表格和视图。'
- en: '| `CHANGED` | Check only tables that have been changed since the last check
    or that have not been closed properly. Ignored for `InnoDB`; applies only to `MyISAM`
    tables and views. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `CHANGED` | 仅检查自上次检查以来已更改或未正确关闭的表格。对`InnoDB`无效；仅适用于`MyISAM`表格和视图。'
- en: '| `MEDIUM` | Scan rows to verify that deleted links are valid. This also calculates
    a key checksum for the rows and verifies this with a calculated checksum for the
    keys. Ignored for `InnoDB`; applies only to `MyISAM` tables and views. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `MEDIUM` | 扫描行以验证已删除链接是否有效。这还为行计算一个键校验和，并将其与键的计算校验和进行验证。对`InnoDB`无效；仅适用于`MyISAM`表格和视图。'
- en: '| `EXTENDED` | Do a full key lookup for all keys for each row. This ensures
    that the table is 100% consistent, but takes a long time. Ignored for `InnoDB`;
    applies only to `MyISAM` tables and views. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `EXTENDED` | 对每一行的所有键进行完整的键查找。这确保表格是100%一致的，但需要很长时间。对`InnoDB`无效；仅适用于`MyISAM`表格和视图。'
- en: 'You can combine check options, as in the following example that does a quick
    check on the table to determine whether it was closed properly:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以组合检查选项，如下例所示，对表格进行快速检查以确定是否已正确关闭：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") finds
    no problems with a table that is marked as “corrupted” or “not closed properly”,
    [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") may remove
    the mark.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")在标记为“损坏”或“未正确关闭”的表格中未发现问题，[`CHECK
    TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")可能会移除标记。
- en: If a table is corrupted, the problem is most likely in the indexes and not in
    the data part. All of the preceding check types check the indexes thoroughly and
    should thus find most errors.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表格损坏，问题很可能在索引中而不是数据部分。所有前面的检查类型都会彻底检查索引，因此应该能找到大多数错误。
- en: To check a table that you assume is okay, use no check options or the `QUICK`
    option. The latter should be used when you are in a hurry and can take the very
    small risk that `QUICK` does not find an error in the data file. (In most cases,
    under normal usage, MySQL should find any error in the data file. If this happens,
    the table is marked as “corrupted” and cannot be used until it is repaired.)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查一个您认为没问题的表格，请不使用检查选项或使用`QUICK`选项。当您匆忙时可以使用后者，并且可以承担`QUICK`在数据文件中找不到错误的极小风险。（在大多数情况下，在正常使用情况下，MySQL应该能找到数据文件中的任何错误。如果发生这种情况，表格将被标记为“损坏”，直到修复为止。）
- en: '`FAST` and `CHANGED` are mostly intended to be used from a script (for example,
    to be executed from **cron**) to check tables periodically. In most cases, `FAST`
    is to be preferred over `CHANGED`. (The only case when it is not preferred is
    when you suspect that you have found a bug in the `MyISAM` code.)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`FAST`和`CHANGED`主要用于从脚本（例如从**cron**中执行）定期检查表格。在大多数情况下，`FAST`优于`CHANGED`。（唯一不优选的情况是当您怀疑在`MyISAM`代码中发现了错误时。）'
- en: '`EXTENDED` is to be used only after you have run a normal check but still get
    errors from a table when MySQL tries to update a row or find a row by key. This
    is very unlikely if a normal check has succeeded.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在运行正常检查但MySQL尝试更新行或按键查找行时仍然从表中获得错误时才使用`EXTENDED`。如果正常检查成功，这是非常不可能的。
- en: Use of [`CHECK TABLE ... EXTENDED`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    might influence execution plans generated by the query optimizer.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`CHECK TABLE ... EXTENDED`](check-table.html "15.7.3.2 CHECK TABLE Statement")可能会影响查询优化器生成的执行计划。
- en: 'Some problems reported by [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK
    TABLE Statement") cannot be corrected automatically:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")报告的一些问题无法自动纠正：'
- en: '`Found row where the auto_increment column has the value 0`.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`找到行，其中自增列的值为0`。'
- en: This means that you have a row in the table where the `AUTO_INCREMENT` index
    column contains the value 0\. (It is possible to create a row where the `AUTO_INCREMENT`
    column is 0 by explicitly setting the column to 0 with an [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") statement.)
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这意味着表中有一行，其中`AUTO_INCREMENT`索引列包含值0。（可以通过使用[`UPDATE`](update.html "15.2.17 UPDATE
    Statement")语句显式将列设置为0来创建`AUTO_INCREMENT`列为0的行。）
- en: This is not an error in itself, but could cause trouble if you decide to dump
    the table and restore it or do an [`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement") on the table. In this case, the `AUTO_INCREMENT` column changes
    value according to the rules of `AUTO_INCREMENT` columns, which could cause problems
    such as a duplicate-key error.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这本身不是错误，但如果您决定转储表并恢复它，或对表进行[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE
    Statement")操作可能会引起麻烦。在这种情况下，`AUTO_INCREMENT`列根据`AUTO_INCREMENT`列的规则更改值，可能会导致诸如重复键错误之类的问题。
- en: To get rid of the warning, execute an [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statement to set the column to some value other than 0.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要消除警告，请执行[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句将列设置为非0值。
- en: CHECK TABLE Usage Notes for InnoDB Tables
  id: totrans-56
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: InnoDB表的[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")使用注意事项
- en: 'The following notes apply to [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine") tables:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以下注意事项适用于[`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage
    Engine")表：
- en: 'If [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") encounters
    a corrupt page, the server exits to prevent error propagation (Bug #10132). If
    the corruption occurs in a secondary index but table data is readable, running
    [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") can still cause
    a server exit.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如果[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")遇到损坏的页，服务器会退出以防止错误传播（Bug
    #10132）。如果损坏发生在辅助索引中但表数据可读，运行[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK
    TABLE Statement")仍可能导致服务器退出。'
- en: If [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") encounters
    a corrupted `DB_TRX_ID` or `DB_ROLL_PTR` field in a clustered index, [`CHECK TABLE`](check-table.html
    "15.7.3.2 CHECK TABLE Statement") can cause `InnoDB` to access an invalid undo
    log record, resulting in an [MVCC](glossary.html#glos_mvcc "MVCC")-related server
    exit.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")在聚簇索引中遇到损坏的`DB_TRX_ID`或`DB_ROLL_PTR`字段，[`CHECK
    TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")可能会导致`InnoDB`访问无效的撤消日志记录，导致与[MVCC](glossary.html#glos_mvcc
    "MVCC")相关的服务器退出。
- en: If [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") encounters
    errors in `InnoDB` tables or indexes, it reports an error, and usually marks the
    index and sometimes marks the table as corrupted, preventing further use of the
    index or table. Such errors include an incorrect number of entries in a secondary
    index or incorrect links.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")在`InnoDB`表或索引中遇到错误，它会报告错误，并通常标记索引，有时标记表为损坏，阻止进一步使用索引或表。此类错误包括辅助索引中不正确的条目数或不正确的链接。
- en: If [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") finds
    an incorrect number of entries in a secondary index, it reports an error but does
    not cause a server exit or prevent access to the file.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")在辅助索引中发现不正确的条目数，它会报告错误，但不会导致服务器退出或阻止访问文件。
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") surveys
    the index page structure, then surveys each key entry. It does not validate the
    key pointer to a clustered record or follow the path for [`BLOB`](blob.html "13.3.4 The
    BLOB and TEXT Types") pointers.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 调查索引页结构，然后调查每个键入。它不验证指向聚簇记录的键指针，也不遵循
    [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types") 指针的路径。'
- en: When an `InnoDB` table is stored in its own [`.ibd` file](glossary.html#glos_ibd_file
    ".ibd file"), the first 3 [pages](glossary.html#glos_page "page") of the `.ibd`
    file contain header information rather than table or index data. The [`CHECK TABLE`](check-table.html
    "15.7.3.2 CHECK TABLE Statement") statement does not detect inconsistencies that
    affect only the header data. To verify the entire contents of an `InnoDB` `.ibd`
    file, use the [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline
    InnoDB File Checksum Utility") command.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 `InnoDB` 表存储在自己的 [`.ibd` 文件](glossary.html#glos_ibd_file ".ibd file") 中时，`.ibd`
    文件的前 3 个 [页](glossary.html#glos_page "page") 包含头部信息而不是表或索引数据。[`CHECK TABLE`](check-table.html
    "15.7.3.2 CHECK TABLE Statement") 语句不会检测仅影响头部数据的不一致性。要验证整个 `InnoDB` `.ibd` 文件的内容，使用
    [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB File
    Checksum Utility") 命令。
- en: When running [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    on large `InnoDB` tables, other threads may be blocked during [`CHECK TABLE`](check-table.html
    "15.7.3.2 CHECK TABLE Statement") execution. To avoid timeouts, the semaphore
    wait threshold (600 seconds) is extended by 2 hours (7200 seconds) for [`CHECK
    TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") operations. If `InnoDB`
    detects semaphore waits of 240 seconds or more, it starts printing `InnoDB` monitor
    output to the error log. If a lock request extends beyond the semaphore wait threshold,
    `InnoDB` aborts the process. To avoid the possibility of a semaphore wait timeout
    entirely, run [`CHECK TABLE QUICK`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    instead of [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement").
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在大型 `InnoDB` 表上运行 [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    时，其他线程可能在 [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 执行期间被阻塞。为避免超时，信号量等待阈值（600
    秒）在 [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 操作期间延长
    2 小时（7200 秒）。如果 `InnoDB` 检测到 240 秒或更长时间的信号量等待，它开始将 `InnoDB` 监视器输出打印到错误日志中。如果锁请求超出信号量等待阈值，`InnoDB`
    将中止该进程。为完全避免信号量等待超时的可能性，运行 [`CHECK TABLE QUICK`](check-table.html "15.7.3.2 CHECK
    TABLE Statement") 而不是 [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")。
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") functionality
    for `InnoDB` `SPATIAL` indexes includes an R-tree validity check and a check to
    ensure that the R-tree row count matches the clustered index.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB` `SPATIAL` 索引的 [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE
    Statement") 功能包括 R 树有效性检查和确保 R 树行数与聚簇索引匹配的检查。'
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") supports
    secondary indexes on virtual generated columns, which are supported by `InnoDB`.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") 支持虚拟生成列上的辅助索引，这些索引由
    `InnoDB` 支持。'
- en: As of MySQL 8.0.14, `InnoDB` supports parallel clustered index reads, which
    can improve [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    performance. `InnoDB` reads the clustered index twice during a [`CHECK TABLE`](check-table.html
    "15.7.3.2 CHECK TABLE Statement") operation. The second read can be performed
    in parallel. The [`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)
    session variable must be set to a value greater than 1 for parallel clustered
    index reads to occur. The default value is 4\. The actual number of threads used
    to perform a parallel clustered index read is determined by the [`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)
    setting or the number of index subtrees to scan, whichever is smaller.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 截至 MySQL 8.0.14，`InnoDB` 支持并行聚簇索引读取，可以提高 [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK
    TABLE Statement") 的性能。`InnoDB` 在 [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK
    TABLE Statement") 操作期间两次读取聚簇索引。第二次读取可以并行执行。[`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)
    会话变量必须设置为大于 1 的值，才能进行并行聚簇索引读取。默认值为 4。用于执行并行聚簇索引读取的实际线程数由 [`innodb_parallel_read_threads`](innodb-parameters.html#sysvar_innodb_parallel_read_threads)
    设置或要扫描的索引子树数量决定，以较小者为准。
- en: CHECK TABLE Usage Notes for MyISAM Tables
  id: totrans-68
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: MyISAM 表的 `CHECK TABLE` 用法注意事项
- en: 'The following notes apply to [`MyISAM`](myisam-storage-engine.html "18.2 The
    MyISAM Storage Engine") tables:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下注意事项适用于[`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM Storage Engine")表：
- en: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") updates
    key statistics for `MyISAM` tables.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")更新`MyISAM`表的关键统计信息。'
- en: If [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement") output
    does not return `OK` or `Table is already up to date`, you should normally run
    a repair of the table. See [Section 9.6, “MyISAM Table Maintenance and Crash Recovery”](myisam-table-maintenance.html
    "9.6 MyISAM Table Maintenance and Crash Recovery").
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")输出不返回`OK`或`Table
    is already up to date`，通常应该对表进行修复。请参阅[第9.6节，“MyISAM表维护和崩溃恢复”](myisam-table-maintenance.html
    "9.6 MyISAM Table Maintenance and Crash Recovery")。
- en: If none of the [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    options `QUICK`, `MEDIUM`, or `EXTENDED` are specified, the default check type
    for dynamic-format `MyISAM` tables is `MEDIUM`. This has the same result as running
    [**myisamchk --medium-check *`tbl_name`***](myisamchk.html "6.6.4 myisamchk —
    MyISAM Table-Maintenance Utility") on the table. The default check type also is
    `MEDIUM` for static-format `MyISAM` tables, unless `CHANGED` or `FAST` is specified.
    In that case, the default is `QUICK`. The row scan is skipped for `CHANGED` and
    `FAST` because the rows are very seldom corrupted.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未指定[`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")选项`QUICK`、`MEDIUM`或`EXTENDED`，动态格式`MyISAM`表的默认检查类型为`MEDIUM`。这与在表上运行[**myisamchk
    --medium-check *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")的结果相同。对于静态格式`MyISAM`表，默认的检查类型也是`MEDIUM`，除非指定了`CHANGED`或`FAST`。在这种情况下，默认值为`QUICK`。对于`CHANGED`和`FAST`，行扫描被跳过，因为行很少损坏。
