- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-compression-tuning-monitoring.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-compression-tuning-monitoring.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-compression-tuning-monitoring.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-compression-tuning-monitoring.html)
- en: 17.9.1.4 Monitoring InnoDB Table Compression at Runtime
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 17.9.1.4 在运行时监控InnoDB表压缩
- en: Overall application performance, CPU and I/O utilization and the size of disk
    files are good indicators of how effective compression is for your application.
    This section builds on the performance tuning advice from [Section 17.9.1.3, “Tuning
    Compression for InnoDB Tables”](innodb-compression-tuning.html "17.9.1.3 Tuning
    Compression for InnoDB Tables"), and shows how to find problems that might not
    turn up during initial testing.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 整体应用性能、CPU和I/O利用率以及磁盘文件大小是衡量压缩对应用效果的良好指标。本节基于[第17.9.1.3节“调整InnoDB表压缩”](innodb-compression-tuning.html
    "17.9.1.3 调整InnoDB表压缩")中的性能调优建议，展示如何发现在初始测试中可能不会出现的问题。
- en: To dig deeper into performance considerations for compressed tables, you can
    monitor compression performance at runtime using the [Information Schema](glossary.html#glos_information_schema
    "INFORMATION_SCHEMA") tables described in [Example 17.1, “Using the Compression
    Information Schema Tables”](innodb-information-schema-examples-compression-sect.html#innodb-information-schema-examples-compression
    "Example 17.1 Using the Compression Information Schema Tables"). These tables
    reflect the internal use of memory and the rates of compression used overall.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要深入了解压缩表的性能考虑，您可以使用[信息模式](glossary.html#glos_information_schema "INFORMATION_SCHEMA")表在运行时监控压缩性能，详情请参阅[示例17.1“使用压缩信息模式表”](innodb-information-schema-examples-compression-sect.html#innodb-information-schema-examples-compression
    "示例17.1 使用压缩信息模式表")。这些表反映了内存的内部使用和整体使用的压缩率。
- en: 'The [`INNODB_CMP`](information-schema-innodb-cmp-table.html "28.4.6 The INFORMATION_SCHEMA
    INNODB_CMP and INNODB_CMP_RESET Tables") table reports information about compression
    activity for each compressed page size (`KEY_BLOCK_SIZE`) in use. The information
    in these tables is system-wide: it summarizes the compression statistics across
    all compressed tables in your database. You can use this data to help decide whether
    or not to compress a table by examining these tables when no other compressed
    tables are being accessed. It involves relatively low overhead on the server,
    so you might query it periodically on a production server to check the overall
    efficiency of the compression feature.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INNODB_CMP`](information-schema-innodb-cmp-table.html "28.4.6 INFORMATION_SCHEMA
    INNODB_CMP和INNODB_CMP_RESET表")表报告每个压缩页面大小（`KEY_BLOCK_SIZE`）的压缩活动信息。这些表中的信息是系统范围的：它总结了数据库中所有压缩表的压缩统计信息。您可以使用这些数据来帮助决定是否压缩表，通过在没有访问其他压缩表时检查这些表来检查这些表。它对服务器的开销相对较低，因此您可以定期在生产服务器上查询它，以检查压缩功能的整体效率。'
- en: The [`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 The INFORMATION_SCHEMA INNODB_CMP_PER_INDEX and INNODB_CMP_PER_INDEX_RESET
    Tables") table reports information about compression activity for individual tables
    and indexes. This information is more targeted and more useful for evaluating
    compression efficiency and diagnosing performance issues one table or index at
    a time. (Because that each `InnoDB` table is represented as a clustered index,
    MySQL does not make a big distinction between tables and indexes in this context.)
    The [`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 The INFORMATION_SCHEMA INNODB_CMP_PER_INDEX and INNODB_CMP_PER_INDEX_RESET
    Tables") table does involve substantial overhead, so it is more suitable for development
    servers, where you can compare the effects of different [workloads](glossary.html#glos_workload
    "workload"), data, and compression settings in isolation. To guard against imposing
    this monitoring overhead by accident, you must enable the [`innodb_cmp_per_index_enabled`](innodb-parameters.html#sysvar_innodb_cmp_per_index_enabled)
    configuration option before you can query the [`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 The INFORMATION_SCHEMA INNODB_CMP_PER_INDEX and INNODB_CMP_PER_INDEX_RESET
    Tables") table.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 INFORMATION_SCHEMA INNODB_CMP_PER_INDEX 和 INNODB_CMP_PER_INDEX_RESET 表")
    表报告了单个表和索引的压缩活动信息。这些信息更具针对性，更有助于逐个评估压缩效率和诊断性能问题的表或索引。（因为每个 `InnoDB` 表都表示为一个聚簇索引，MySQL
    在这种情况下并不会对表和索引进行明显区分。）[`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 INFORMATION_SCHEMA INNODB_CMP_PER_INDEX 和 INNODB_CMP_PER_INDEX_RESET 表")
    表确实涉及相当大的开销，因此更适用于开发服务器，在那里你可以独立比较不同 [工作负载](glossary.html#glos_workload "工作负载")、数据和压缩设置的影响。为了防止意外增加此监控开销，你必须在查询
    [`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html "28.4.8 INFORMATION_SCHEMA
    INNODB_CMP_PER_INDEX 和 INNODB_CMP_PER_INDEX_RESET 表") 表之前启用 [`innodb_cmp_per_index_enabled`](innodb-parameters.html#sysvar_innodb_cmp_per_index_enabled)
    配置选项。'
- en: The key statistics to consider are the number of, and amount of time spent performing,
    compression and uncompression operations. Since MySQL splits [B-tree](glossary.html#glos_b_tree
    "B-tree") nodes when they are too full to contain the compressed data following
    a modification, compare the number of “successful” compression operations with
    the number of such operations overall. Based on the information in the [`INNODB_CMP`](information-schema-innodb-cmp-table.html
    "28.4.6 The INFORMATION_SCHEMA INNODB_CMP and INNODB_CMP_RESET Tables") and [`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 The INFORMATION_SCHEMA INNODB_CMP_PER_INDEX and INNODB_CMP_PER_INDEX_RESET
    Tables") tables and overall application performance and hardware resource utilization,
    you might make changes in your hardware configuration, adjust the size of the
    buffer pool, choose a different page size, or select a different set of tables
    to compress.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要考虑的关键统计数据是压缩和解压操作的数量和所花费的时间。由于 MySQL 在修改后无法容纳压缩数据时会拆分 [B 树](glossary.html#glos_b_tree
    "B 树") 节点，因此比较“成功”压缩操作的数量与总体操作数量。根据 [`INNODB_CMP`](information-schema-innodb-cmp-table.html
    "28.4.6 INFORMATION_SCHEMA INNODB_CMP 和 INNODB_CMP_RESET 表") 和 [`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 INFORMATION_SCHEMA INNODB_CMP_PER_INDEX 和 INNODB_CMP_PER_INDEX_RESET 表")
    表中的信息以及整体应用程序性能和硬件资源利用情况，你可能需要调整硬件配置、调整缓冲池大小、选择不同的页面大小或选择不同的要压缩的表。
- en: If the amount of CPU time required for compressing and uncompressing is high,
    changing to faster or multi-core CPUs can help improve performance with the same
    data, application workload and set of compressed tables. Increasing the size of
    the buffer pool might also help performance, so that more uncompressed pages can
    stay in memory, reducing the need to uncompress pages that exist in memory only
    in compressed form.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果压缩和解压所需的 CPU 时间较长，更换更快或多核 CPU 可以帮助提高性能，同时保持相同的数据、应用工作负载和一组压缩表。增加缓冲池的大小也可能有助于性能，这样更多未压缩的页面可以保留在内存中，减少只存在于内存中的压缩页面的解压需求。
- en: A large number of compression operations overall (compared to the number of
    `INSERT`, `UPDATE` and `DELETE` operations in your application and the size of
    the database) could indicate that some of your compressed tables are being updated
    too heavily for effective compression. If so, choose a larger page size, or be
    more selective about which tables you compress.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果整体压缩操作的数量（与应用程序中的`INSERT`、`UPDATE`和`DELETE`操作以及数据库大小相比）较多，可能表明一些被压缩的表正在过度更新，以至于无法有效压缩。如果是这样，选择更大的页面大小，或者更加谨慎地选择要压缩的表。
- en: If the number of “successful” compression operations (`COMPRESS_OPS_OK`) is
    a high percentage of the total number of compression operations (`COMPRESS_OPS`),
    then the system is likely performing well. If the ratio is low, then MySQL is
    reorganizing, recompressing, and splitting B-tree nodes more often than is desirable.
    In this case, avoid compressing some tables, or increase `KEY_BLOCK_SIZE` for
    some of the compressed tables. You might turn off compression for tables that
    cause the number of “compression failures” in your application to be more than
    1% or 2% of the total. (Such a failure ratio might be acceptable during a temporary
    operation such as a data load).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果“成功”压缩操作（`COMPRESS_OPS_OK`）的数量占总压缩操作（`COMPRESS_OPS`）的比例很高，那么系统可能表现良好。如果比例较低，那么MySQL可能比理想情况下更频繁地重新组织、重新压缩和拆分B树节点。在这种情况下，避免压缩一些表，或者增加一些被压缩表的`KEY_BLOCK_SIZE`。您可能会关闭一些表的压缩，如果这些表导致应用程序中“压缩失败”的数量超过总数的1%或2%。（在诸如数据加载之类的临时操作期间，这种失败比率可能是可以接受的）。
