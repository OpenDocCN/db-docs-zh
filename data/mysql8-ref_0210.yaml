- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysqlbinlog-row-events.html](https://dev.mysql.com/doc/refman/8.0/en/mysqlbinlog-row-events.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysqlbinlog-row-events.html](https://dev.mysql.com/doc/refman/8.0/en/mysqlbinlog-row-events.html)
- en: 6.6.9.2 mysqlbinlog Row Event Display
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 6.6.9.2 mysqlbinlog行事件显示
- en: The following examples illustrate how [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog
    — Utility for Processing Binary Log Files") displays row events that specify data
    modifications. These correspond to events with the `WRITE_ROWS_EVENT`, `UPDATE_ROWS_EVENT`,
    and `DELETE_ROWS_EVENT` type codes. The [`--base64-output=DECODE-ROWS`](mysqlbinlog.html#option_mysqlbinlog_base64-output)
    and [`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose) options may be
    used to affect row event output.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例说明了[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility for Processing
    Binary Log Files")如何显示指定数据修改的行事件。这些对应于具有`WRITE_ROWS_EVENT`、`UPDATE_ROWS_EVENT`和`DELETE_ROWS_EVENT`类型代码的事件。可以使用[`--base64-output=DECODE-ROWS`](mysqlbinlog.html#option_mysqlbinlog_base64-output)和[`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)选项来影响行事件输出。
- en: 'Suppose that the server is using row-based binary logging and that you execute
    the following sequence of statements:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设服务器正在使用基于行的二进制日志记录，并且您执行以下语句序列：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'By default, [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility
    for Processing Binary Log Files") displays row events encoded as base-64 strings
    using [`BINLOG`](binlog.html "15.7.8.1 BINLOG Statement") statements. Omitting
    extraneous lines, the output for the row events produced by the preceding statement
    sequence looks like this:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility for Processing
    Binary Log Files")将行事件显示为使用[`BINLOG`](binlog.html "15.7.8.1 BINLOG Statement")语句编码的base-64字符串。省略多余的行，由前述语句序列产生的行事件的输出如下所示：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To see the row events as comments in the form of “pseudo-SQL” statements, run
    [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility for Processing
    Binary Log Files") with the [`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)
    or `-v` option. This output level also shows table partition information where
    applicable. The output contains lines beginning with `###`:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要将行事件显示为“伪SQL”语句形式的注释，请使用[`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)或`-v`选项运行[**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — Utility for Processing Binary Log Files")。此输出级别还在适用时显示表分区信息。输出包含以`###`开头的行：
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Specify [`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose) or `-v`
    twice to also display data types and some metadata for each column, and informational
    log events such as row query log events if the [`binlog_rows_query_log_events`](replication-options-binary-log.html#sysvar_binlog_rows_query_log_events)
    system variable is set to `TRUE`. The output contains an additional comment following
    each column change:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 指定[`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)或`-v`两次，还会显示每列的数据类型和一些元数据，以及信息日志事件，如[`binlog_rows_query_log_events`](replication-options-binary-log.html#sysvar_binlog_rows_query_log_events)系统变量设置为`TRUE`时的行查询日志事件。输出包含每个列更改后的额外注释：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can tell [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility
    for Processing Binary Log Files") to suppress the [`BINLOG`](binlog.html "15.7.8.1 BINLOG
    Statement") statements for row events by using the [`--base64-output=DECODE-ROWS`](mysqlbinlog.html#option_mysqlbinlog_base64-output)
    option. This is similar to [`--base64-output=NEVER`](mysqlbinlog.html#option_mysqlbinlog_base64-output)
    but does not exit with an error if a row event is found. The combination of [`--base64-output=DECODE-ROWS`](mysqlbinlog.html#option_mysqlbinlog_base64-output)
    and [`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose) provides a convenient
    way to see row events only as SQL statements:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以告诉[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility for Processing
    Binary Log Files")通过使用[`--base64-output=DECODE-ROWS`](mysqlbinlog.html#option_mysqlbinlog_base64-output)选项来抑制行事件的[`BINLOG`](binlog.html
    "15.7.8.1 BINLOG Statement")语句。这类似于[`--base64-output=NEVER`](mysqlbinlog.html#option_mysqlbinlog_base64-output)，但如果找到行事件，则不会退出错误。[`--base64-output=DECODE-ROWS`](mysqlbinlog.html#option_mysqlbinlog_base64-output)和[`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)的组合提供了一个方便的方式，只将行事件显示为SQL语句：
- en: '[PRE4]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You should not suppress [`BINLOG`](binlog.html "15.7.8.1 BINLOG Statement")
    statements if you intend to re-execute [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog
    — Utility for Processing Binary Log Files") output.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打算重新执行[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility for
    Processing Binary Log Files")输出，则不应该抑制[`BINLOG`](binlog.html "15.7.8.1 BINLOG
    Statement")语句。
- en: 'The SQL statements produced by [`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)
    for row events are much more readable than the corresponding [`BINLOG`](binlog.html
    "15.7.8.1 BINLOG Statement") statements. However, they do not correspond exactly
    to the original SQL statements that generated the events. The following limitations
    apply:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通过[`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)生成的行事件的SQL语句比相应的[`BINLOG`](binlog.html
    "15.7.8.1 BINLOG Statement")语句更易读。然而，它们并不完全对应生成事件的原始SQL语句。以下限制适用：
- en: The original column names are lost and replaced by `@*`N`*`, where *`N`* is
    a column number.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始列名丢失，被`@*`N`*`替换，其中*`N`*是列号。
- en: 'Character set information is not available in the binary log, which affects
    string column display:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二进制日志中不包含字符集信息，这会影响字符串列的显示：
- en: There is no distinction made between corresponding binary and nonbinary string
    types ([`BINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY Types")
    and [`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types"), [`VARBINARY`](binary-varbinary.html
    "13.3.3 The BINARY and VARBINARY Types") and [`VARCHAR`](char.html "13.3.2 The
    CHAR and VARCHAR Types"), [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")
    and [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types")). The output uses a data
    type of `STRING` for fixed-length strings and `VARSTRING` for variable-length
    strings.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不区分对应的二进制和非二进制字符串类型（[`BINARY`](binary-varbinary.html "13.3.3 The BINARY and
    VARBINARY Types")和[`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types")，[`VARBINARY`](binary-varbinary.html
    "13.3.3 The BINARY and VARBINARY Types")和[`VARCHAR`](char.html "13.3.2 The CHAR
    and VARCHAR Types")，[`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")和[`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")）。输出使用`STRING`作为定长字符串的数据类型，使用`VARSTRING`作为可变长度字符串的数据类型。
- en: 'For multibyte character sets, the maximum number of bytes per character is
    not present in the binary log, so the length for string types is displayed in
    bytes rather than in characters. For example, `STRING(4)` is used as the data
    type for values from either of these column types:'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于多字节字符集，二进制日志中不包含每个字符的最大字节数，因此字符串类型的长度以字节而不是字符显示。例如，`STRING(4)`用作以下任一列类型的值的数据类型：
- en: '[PRE5]'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Due to the storage format for events of type `UPDATE_ROWS_EVENT`, [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") statements are displayed with the `WHERE` clause preceding
    the `SET` clause.
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于`UPDATE_ROWS_EVENT`类型事件的存储格式，[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句显示`WHERE`子句在`SET`子句之前。
- en: Proper interpretation of row events requires the information from the format
    description event at the beginning of the binary log. Because [**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — Utility for Processing Binary Log Files") does not know in
    advance whether the rest of the log contains row events, by default it displays
    the format description event using a [`BINLOG`](binlog.html "15.7.8.1 BINLOG Statement")
    statement in the initial part of the output.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 正确解释行事件需要来自二进制日志开头的格式描述事件的信息。因为[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog
    — Utility for Processing Binary Log Files")事先不知道日志的其余部分是否包含行事件，所以默认情况下，它在输出的初始部分使用[`BINLOG`](binlog.html
    "15.7.8.1 BINLOG Statement")语句显示格式描述事件。
- en: If the binary log is known not to contain any events requiring a [`BINLOG`](binlog.html
    "15.7.8.1 BINLOG Statement") statement (that is, no row events), the [`--base64-output=NEVER`](mysqlbinlog.html#option_mysqlbinlog_base64-output)
    option can be used to prevent this header from being written.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果已知二进制日志不包含任何需要[`BINLOG`](binlog.html "15.7.8.1 BINLOG Statement")语句（即没有行事件）的事件，则可以使用[`--base64-output=NEVER`](mysqlbinlog.html#option_mysqlbinlog_base64-output)选项防止写入此标题。
