- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/table-scan-avoidance.html](https://dev.mysql.com/doc/refman/8.0/en/table-scan-avoidance.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/table-scan-avoidance.html](https://dev.mysql.com/doc/refman/8.0/en/table-scan-avoidance.html)
- en: 10.2.1.23 Avoiding Full Table Scans
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.2.1.23 避免全表扫描
- en: 'The output from [`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement") shows
    [`ALL`](explain-output.html#jointype_all) in the `type` column when MySQL uses
    a [full table scan](glossary.html#glos_full_table_scan "full table scan") to resolve
    a query. This usually happens under the following conditions:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")的输出在MySQL使用全表扫描解析查询时，在`type`列中显示[`ALL`](explain-output.html#jointype_all)。这通常发生在以下情况下：'
- en: The table is so small that it is faster to perform a table scan than to bother
    with a key lookup. This is common for tables with fewer than 10 rows and a short
    row length.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表太小，执行表扫描比使用键查找更快。对于少于10行且行长度较短的表，这是常见的情况。
- en: There are no usable restrictions in the `ON` or `WHERE` clause for indexed columns.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ON`或`WHERE`子句中没有可用的对索引列的限制条件。'
- en: You are comparing indexed columns with constant values and MySQL has calculated
    (based on the index tree) that the constants cover too large a part of the table
    and that a table scan would be faster. See [Section 10.2.1.1, “WHERE Clause Optimization”](where-optimization.html
    "10.2.1.1 WHERE Clause Optimization").
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较具有常量值的索引列，并且MySQL已经计算（基于索引树）常量覆盖表的太大部分，表扫描会更快。参见[第10.2.1.1节，“WHERE子句优化”](where-optimization.html
    "10.2.1.1 WHERE Clause Optimization")。
- en: You are using a key with low cardinality (many rows match the key value) through
    another column. In this case, MySQL assumes that by using the key probably requires
    many key lookups and that a table scan would be faster.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过另一列使用基数较低的键（许多行匹配键值）。在这种情况下，MySQL假设使用键可能需要许多键查找，并且表扫描会更快。
- en: 'For small tables, a table scan often is appropriate and the performance impact
    is negligible. For large tables, try the following techniques to avoid having
    the optimizer incorrectly choose a table scan:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于小表，表扫描通常是适当的，性能影响可以忽略不计。对于大表，尝试以下技术以避免优化器错误地选择表扫描：
- en: Use `ANALYZE TABLE *`tbl_name`*` to update the key distributions for the scanned
    table. See [Section 15.7.3.1, “ANALYZE TABLE Statement”](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement").
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`ANALYZE TABLE *`tbl_name`*`更新扫描表的键分布。参见[第15.7.3.1节，“ANALYZE TABLE语句”](analyze-table.html
    "15.7.3.1 ANALYZE TABLE Statement")。
- en: 'Use `FORCE INDEX` for the scanned table to tell MySQL that table scans are
    very expensive compared to using the given index:'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对扫描表使用`FORCE INDEX`，告诉MySQL表扫描比使用给定索引要昂贵：
- en: '[PRE0]'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: See [Section 10.9.4, “Index Hints”](index-hints.html "10.9.4 Index Hints").
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参见[第10.9.4节，“索引提示”](index-hints.html "10.9.4 Index Hints")。
- en: Start [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") with the [`--max-seeks-for-key=1000`](server-system-variables.html#sysvar_max_seeks_for_key)
    option or use `SET max_seeks_for_key=1000` to tell the optimizer to assume that
    no key scan causes more than 1,000 key seeks. See [Section 7.1.8, “Server System
    Variables”](server-system-variables.html "7.1.8 Server System Variables").
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`--max-seeks-for-key=1000`](server-system-variables.html#sysvar_max_seeks_for_key)选项启动[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")，或使用`SET max_seeks_for_key=1000`告诉优化器假设没有键扫描导致超过1,000个键查找。参见[第7.1.8节，“服务器系统变量”](server-system-variables.html
    "7.1.8 Server System Variables")。
