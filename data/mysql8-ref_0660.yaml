- en: 11.2.3 Identifier Case Sensitivity
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11.2.3 标识符大小写敏感性
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html](https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html](https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html)
- en: In MySQL, databases correspond to directories within the data directory. Each
    table within a database corresponds to at least one file within the database directory
    (and possibly more, depending on the storage engine). Triggers also correspond
    to files. Consequently, the case sensitivity of the underlying operating system
    plays a part in the case sensitivity of database, table, and trigger names. This
    means such names are not case-sensitive in Windows, but are case-sensitive in
    most varieties of Unix. One notable exception is macOS, which is Unix-based but
    uses a default file system type (HFS+) that is not case-sensitive. However, macOS
    also supports UFS volumes, which are case-sensitive just as on any Unix. See [Section 1.6.1,
    “MySQL Extensions to Standard SQL”](extensions-to-ansi.html "1.6.1 MySQL Extensions
    to Standard SQL"). The [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    system variable also affects how the server handles identifier case sensitivity,
    as described later in this section.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL中，数据库对应于数据目录中的目录。数据库中的每个表对应于数据库目录中的至少一个文件（根据存储引擎可能还有更多）。触发器也对应于文件。因此，底层操作系统的大小写敏感性在数据库、表和触发器名称的大小写敏感性中起作用。这意味着在Windows中这些名称不区分大小写，但在大多数Unix变体中是区分大小写的。一个值得注意的例外是macOS，它基于Unix但使用的默认文件系统类型（HFS+）不区分大小写。但是，macOS也支持大小写敏感的UFS卷，就像在任何Unix上一样。参见[第1.6.1节，“MySQL对标准SQL的扩展”](extensions-to-ansi.html
    "1.6.1 MySQL对标准SQL的扩展")。[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)系统变量还影响服务器处理标识符大小写敏感性的方式，如本节后面所述。
- en: Note
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Although database, table, and trigger names are not case-sensitive on some
    platforms, you should not refer to one of these using different cases within the
    same statement. The following statement would not work because it refers to a
    table both as `my_table` and as `MY_TABLE`:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在某些平台上数据库、表和触发器名称不区分大小写，但在同一语句中不应该使用不同大小写来引用其中之一。以下语句不起作用，因为它既引用了表`my_table`又引用了`MY_TABLE`：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Partition, subpartition, column, index, stored routine, event, and resource
    group names are not case-sensitive on any platform, nor are column aliases.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 分区、子分区、列、索引、存储过程、事件和资源组名称在任何平台上都不区分大小写，列别名也是如此。
- en: However, names of logfile groups are case-sensitive. This differs from standard
    SQL.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，日志文件组的名称是区分大小写的。这与标准SQL不同。
- en: 'By default, table aliases are case-sensitive on Unix, but not so on Windows
    or macOS. The following statement would not work on Unix, because it refers to
    the alias both as `a` and as `A`:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，在Unix上表别名区分大小写，但在Windows或macOS上不是。以下语句在Unix上不起作用，因为它既引用了别名`a`又引用了`A`：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: However, this same statement is permitted on Windows. To avoid problems caused
    by such differences, it is best to adopt a consistent convention, such as always
    creating and referring to databases and tables using lowercase names. This convention
    is recommended for maximum portability and ease of use.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在Windows上允许相同的语句。为避免由这些差异引起的问题，最好采用一致的约定，例如始终使用小写名称创建和引用数据库和表。这种约定建议用于最大的可移植性和易用性。
- en: How table and database names are stored on disk and used in MySQL is affected
    by the [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    system variable. [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    can take the values shown in the following table. This variable does *not* affect
    case sensitivity of trigger identifiers. On Unix, the default value of [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    is 0\. On Windows, the default value is 1\. On macOS, the default value is 2.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL中表和数据库名称在磁盘上的存储和使用受到[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)系统变量的影响。[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)可以采用以下表中显示的值。此变量*不*影响触发器标识符的大小写敏感性。在Unix上，[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)的默认值为0。在Windows上，默认值为1。在macOS上，默认值为2。
- en: '[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    can only be configured when initializing the server. Changing the [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    setting after the server is initialized is prohibited.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 只能在初始化服务器时配置[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)。在服务器初始化后更改[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)设置是被禁止的。
- en: '| Value | Meaning |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 值 | 含义 |'
- en: '| `0` | Table and database names are stored on disk using the lettercase specified
    in the [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") or
    [`CREATE DATABASE`](create-database.html "15.1.12 CREATE DATABASE Statement")
    statement. Name comparisons are case-sensitive. You should *not* set this variable
    to 0 if you are running MySQL on a system that has case-insensitive file names
    (such as Windows or macOS). If you force this variable to 0 with [`--lower-case-table-names=0`](server-system-variables.html#sysvar_lower_case_table_names)
    on a case-insensitive file system and access `MyISAM` tablenames using different
    lettercases, index corruption may result. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `0` | 表和数据库名称在磁盘上使用[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement")或[`CREATE DATABASE`](create-database.html "15.1.12 CREATE DATABASE
    Statement")语句中指定的大小写形式存储。名称比较区分大小写。如果你在具有不区分大小写文件名的系统上运行MySQL（如Windows或macOS），不应将此变量设置为0。如果你在不区分大小写的文件系统上强制将此变量设置为0，并使用不同大小写访问`MyISAM`表名，可能会导致索引损坏。
    |'
- en: '| `1` | Table names are stored in lowercase on disk and name comparisons are
    not case-sensitive. MySQL converts all table names to lowercase on storage and
    lookup. This behavior also applies to database names and table aliases. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `1` | 表名在磁盘上以小写形式存储，名称比较不区分大小写。MySQL在存储和查找时将所有表名转换为小写。这种行为也适用于数据库名称和表别名。'
- en: '| `2` | Table and database names are stored on disk using the lettercase specified
    in the [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") or
    [`CREATE DATABASE`](create-database.html "15.1.12 CREATE DATABASE Statement")
    statement, but MySQL converts them to lowercase on lookup. Name comparisons are
    not case-sensitive. This works *only* on file systems that are not case-sensitive!
    `InnoDB` table names and view names are stored in lowercase, as for `lower_case_table_names=1`.
    |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `2` | 表和数据库名称在磁盘上使用[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement")或[`CREATE DATABASE`](create-database.html "15.1.12 CREATE DATABASE
    Statement")语句中指定的大小写形式存储，但MySQL在查找时将它们转换为小写。名称比较不区分大小写。这仅适用于不区分大小写的文件系统！`InnoDB`表名和视图名以小写形式存储，就像`lower_case_table_names=1`一样。'
- en: 'If you are using MySQL on only one platform, you do not normally have to use
    a [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    setting other than the default. However, you may encounter difficulties if you
    want to transfer tables between platforms that differ in file system case sensitivity.
    For example, on Unix, you can have two different tables named `my_table` and `MY_TABLE`,
    but on Windows these two names are considered identical. To avoid data transfer
    problems arising from lettercase of database or table names, you have two options:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只在一个平台上使用MySQL，通常不需要使用除默认值以外的[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)设置。但是，如果你想在文件系统大小写敏感性不同的平台之间传输表格时可能会遇到困难。例如，在Unix上，你可以有两个不同的表格命名为`my_table`和`MY_TABLE`，但在Windows上这两个名称被视为相同。为了避免由数据库或表名大小写引起的数据传输问题，你有两个选择：
- en: Use `lower_case_table_names=1` on all systems. The main disadvantage with this
    is that when you use [`SHOW TABLES`](show-tables.html "15.7.7.39 SHOW TABLES Statement")
    or [`SHOW DATABASES`](show-databases.html "15.7.7.14 SHOW DATABASES Statement"),
    you do not see the names in their original lettercase.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在所有系统上使用`lower_case_table_names=1`。这样做的主要缺点是，当你使用[`SHOW TABLES`](show-tables.html
    "15.7.7.39 SHOW TABLES Statement")或[`SHOW DATABASES`](show-databases.html "15.7.7.14 SHOW
    DATABASES Statement")时，你看不到原始大小写的名称。
- en: Use `lower_case_table_names=0` on Unix and `lower_case_table_names=2` on Windows.
    This preserves the lettercase of database and table names. The disadvantage of
    this is that you must ensure that your statements always refer to your database
    and table names with the correct lettercase on Windows. If you transfer your statements
    to Unix, where lettercase is significant, they do not work if the lettercase is
    incorrect.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Unix上使用`lower_case_table_names=0`，在Windows上使用`lower_case_table_names=2`。这将保留数据库和表名称的大小写。这样做的缺点是，您必须确保在Windows上始终使用正确的大小写引用您的数据库和表名称。如果您将您的语句转移到大小写敏感的Unix系统，如果大小写不正确，它们将无法正常工作。
- en: '**Exception**: If you are using `InnoDB` tables and you are trying to avoid
    these data transfer problems, you should use [`lower_case_table_names=1`](server-system-variables.html#sysvar_lower_case_table_names)
    on all platforms to force names to be converted to lowercase.'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**异常**：如果您正在使用`InnoDB`表，并且正在尝试避免这些数据传输问题，您应该在所有平台上使用[`lower_case_table_names=1`](server-system-variables.html#sysvar_lower_case_table_names)来强制将名称转换为小写。'
- en: Object names may be considered duplicates if their uppercase forms are equal
    according to a binary collation. That is true for names of cursors, conditions,
    procedures, functions, savepoints, stored routine parameters, stored program local
    variables, and plugins. It is not true for names of columns, constraints, databases,
    partitions, statements prepared with [`PREPARE`](prepare.html "15.5.1 PREPARE
    Statement"), tables, triggers, users, and user-defined variables.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果根据二进制排序规则，对象名称的大写形式相等，则可能被视为重复。这适用于游标、条件、存储过程、函数、保存点、存储过程参数、存储程序局部变量和插件的名称。但对于列、约束、数据库、分区、使用[`PREPARE`](prepare.html
    "15.5.1 PREPARE Statement")准备的语句、表、触发器、用户和用户定义变量的名称则不适用。
- en: File system case sensitivity can affect searches in string columns of `INFORMATION_SCHEMA`
    tables. For more information, see [Section 12.8.7, “Using Collation in INFORMATION_SCHEMA
    Searches”](charset-collation-information-schema.html "12.8.7 Using Collation in
    INFORMATION_SCHEMA Searches").
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统的大小写敏感性可能会影响`INFORMATION_SCHEMA`表中字符串列的搜索。有关更多信息，请参见[第 12.8.7 节，“在INFORMATION_SCHEMA搜索中使用排序规则”](charset-collation-information-schema.html
    "12.8.7 Using Collation in INFORMATION_SCHEMA Searches")。
