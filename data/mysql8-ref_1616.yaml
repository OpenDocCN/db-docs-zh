- en: 25.2 NDB Cluster Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 25.2 NDB Cluster概述
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-overview.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-overview.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-overview.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-overview.html)
- en: '[25.2.1 NDB Cluster Core Concepts](mysql-cluster-basics.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.2.1 NDB Cluster核心概念](mysql-cluster-basics.html)'
- en: '[25.2.2 NDB Cluster Nodes, Node Groups, Fragment Replicas, and Partitions](mysql-cluster-nodes-groups.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.2.2 NDB Cluster节点、节点组、片副本和分区](mysql-cluster-nodes-groups.html)'
- en: '[25.2.3 NDB Cluster Hardware, Software, and Networking Requirements](mysql-cluster-overview-requirements.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.2.3 NDB Cluster硬件、软件和网络要求](mysql-cluster-overview-requirements.html)'
- en: '[25.2.4 What is New in MySQL NDB Cluster 8.0](mysql-cluster-what-is-new.html)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.2.4 MySQL NDB Cluster 8.0中的新功能](mysql-cluster-what-is-new.html)'
- en: '[25.2.5 Options, Variables, and Parameters Added, Deprecated or Removed in
    NDB 8.0](mysql-cluster-added-deprecated-removed.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.2.5 NDB 8.0中添加、弃用或删除的选项、变量和参数](mysql-cluster-added-deprecated-removed.html)'
- en: '[25.2.6 MySQL Server Using InnoDB Compared with NDB Cluster](mysql-cluster-compared.html)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.2.6 使用InnoDB的MySQL服务器与NDB Cluster比较](mysql-cluster-compared.html)'
- en: '[25.2.7 Known Limitations of NDB Cluster](mysql-cluster-limitations.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[25.2.7 NDB Cluster已知限制](mysql-cluster-limitations.html)'
- en: NDB Cluster is a technology that enables clustering of in-memory databases in
    a shared-nothing system. The shared-nothing architecture enables the system to
    work with very inexpensive hardware, and with a minimum of specific requirements
    for hardware or software.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: NDB Cluster是一种技术，可以在共享无关系统中对内存数据库进行集群化。共享无关架构使系统能够使用非常廉价的硬件，并且对硬件或软件的特定要求最少。
- en: NDB Cluster is designed not to have any single point of failure. In a shared-nothing
    system, each component is expected to have its own memory and disk, and the use
    of shared storage mechanisms such as network shares, network file systems, and
    SANs is not recommended or supported.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: NDB Cluster设计为没有任何单点故障。在共享无关系统中，预期每个组件都有自己的内存和磁盘，并且不建议或支持使用共享存储机制，如网络共享、网络文件系统和SAN。
- en: NDB Cluster integrates the standard MySQL server with an in-memory clustered
    storage engine called [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") (which stands for “*N*etwork *D*ata*B*ase”). In our documentation, the term
    [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") refers to the part
    of the setup that is specific to the storage engine, whereas “MySQL NDB Cluster”
    refers to the combination of one or more MySQL servers with the [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: NDB Cluster将标准MySQL服务器与名为[`NDB`](mysql-cluster.html "第25章MySQL NDB Cluster 8.0")的内存集群存储引擎集成在一起（代表“*N*etwork
    *D*ata*B*ase”）。在我们的文档中，术语[`NDB`](mysql-cluster.html "第25章MySQL NDB Cluster 8.0")指的是特定于存储引擎的设置部分，而“MySQL
    NDB Cluster”指的是一个或多个MySQL服务器与[`NDB`](mysql-cluster.html "第25章MySQL NDB Cluster
    8.0")存储引擎的组合。
- en: 'An NDB Cluster consists of a set of computers, known as hosts, each running
    one or more processes. These processes, known as nodes, may include MySQL servers
    (for access to NDB data), data nodes (for storage of the data), one or more management
    servers, and possibly other specialized data access programs. The relationship
    of these components in an NDB Cluster is shown here:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一个NDB Cluster由一组计算机（称为主机）组成，每台主机运行一个或多个进程。这些进程称为节点，可能包括MySQL服务器（用于访问NDB数据）、数据节点（用于存储数据）、一个或多个管理服务器，以及可能的其他专门的数据访问程序。NDB
    Cluster中这些组件的关系如下所示：
- en: '**Figure 25.1 NDB Cluster Components**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**图25.1 NDB Cluster组件**'
- en: '![In this cluster, three MySQL servers (mysqld program) are SQL nodes that
    provide access to four data nodes (ndbd program) that store data. The SQL nodes
    and data nodes are under the control of an NDB management server (ndb_mgmd program).
    Various clients and APIs can interact with the SQL nodes - the mysql client, the
    MySQL C API, PHP, Connector/J, and Connector/NET. Custom clients can also be created
    using the NDB API to interact with the data nodes or the NDB management server.
    The NDB management client (ndb_mgm program) interacts with the NDB management
    server.](../Images/b70cee53955396617b4a0c5cb25be64c.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![在这个集群中，三个MySQL服务器（mysqld程序）是提供对存储数据的四个数据节点（ndbd程序）的SQL节点。SQL节点和数据节点受NDB管理服务器（ndb_mgmd程序）控制。各种客户端和API可以与SQL节点交互
    - mysql客户端、MySQL C API、PHP、Connector/J和Connector/NET。还可以使用NDB API创建自定义客户端与数据节点或NDB管理服务器交互。NDB管理客户端（ndb_mgm程序）与NDB管理服务器交互。](../Images/b70cee53955396617b4a0c5cb25be64c.png)'
- en: All these programs work together to form an NDB Cluster (see [Section 25.5,
    “NDB Cluster Programs”](mysql-cluster-programs.html "25.5 NDB Cluster Programs").
    When data is stored by the [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") storage engine, the tables (and table data) are stored in the data nodes.
    Such tables are directly accessible from all other MySQL servers (SQL nodes) in
    the cluster. Thus, in a payroll application storing data in a cluster, if one
    application updates the salary of an employee, all other MySQL servers that query
    this data can see this change immediately.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些程序共同组成一个NDB集群（参见[第25.5节，“NDB集群程序”](mysql-cluster-programs.html "25.5 NDB
    Cluster Programs")）。当数据由[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0")存储引擎存储时，表格（和表格数据）存储在数据节点中。这样的表格可以直接从集群中的所有其他MySQL服务器（SQL节点）访问。因此，在一个将数据存储在集群中的工资应用程序中，如果一个应用程序更新了员工的工资，所有查询这些数据的其他MySQL服务器都可以立即看到这一变化。
- en: As of NDB 8.0.31, an NDB Cluster 8.0 SQL node uses the [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") server daemon which is the same as the [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") supplied with MySQL Server 8.0 distributions.
    In NDB 8.0.30 and previous releases, it differed in a number of critical respects
    from the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") binary supplied
    with MySQL Server, and the two versions of [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") were not interchangeable. You should keep in mind that *an
    instance of [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server"), regardless
    of version, that is not connected to an NDB Cluster cannot use the [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine and cannot access any NDB Cluster
    data*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从NDB 8.0.31开始，NDB集群8.0 SQL节点使用与MySQL Server 8.0发行版提供的相同的[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")服务器守护程序。在NDB 8.0.30和之前的版本中，它与MySQL Server提供的[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")二进制文件在许多关键方面有所不同，而且这两个版本的[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")是不可互换的。您应该记住，*一个未连接到NDB集群的任何版本的[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")实例都无法使用[`NDB`](mysql-cluster.html "第25章 MySQL
    NDB Cluster 8.0")存储引擎，也无法访问任何NDB集群数据*。
- en: The data stored in the data nodes for NDB Cluster can be mirrored; the cluster
    can handle failures of individual data nodes with no other impact than that a
    small number of transactions are aborted due to losing the transaction state.
    Because transactional applications are expected to handle transaction failure,
    this should not be a source of problems.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在NDB集群数据节点中的数据可以进行镜像；集群可以处理单个数据节点的故障，除了一小部分事务由于丢失事务状态而中止之外，没有其他影响。因为事务应用程序预计会处理事务失败，所以这不应该成为问题的源头。
- en: Individual nodes can be stopped and restarted, and can then rejoin the system
    (cluster). Rolling restarts (in which all nodes are restarted in turn) are used
    in making configuration changes and software upgrades (see [Section 25.6.5, “Performing
    a Rolling Restart of an NDB Cluster”](mysql-cluster-rolling-restart.html "25.6.5 Performing
    a Rolling Restart of an NDB Cluster")). Rolling restarts are also used as part
    of the process of adding new data nodes online (see [Section 25.6.7, “Adding NDB
    Cluster Data Nodes Online”](mysql-cluster-online-add-node.html "25.6.7 Adding
    NDB Cluster Data Nodes Online")). For more information about data nodes, how they
    are organized in an NDB Cluster, and how they handle and store NDB Cluster data,
    see [Section 25.2.2, “NDB Cluster Nodes, Node Groups, Fragment Replicas, and Partitions”](mysql-cluster-nodes-groups.html
    "25.2.2 NDB Cluster Nodes, Node Groups, Fragment Replicas, and Partitions").
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 单个节点可以停止和重新启动，然后重新加入系统（集群）。滚动重启（逐个重新启动所有节点）用于进行配置更改和软件升级（参见[第25.6.5节，“执行NDB集群的滚动重启”](mysql-cluster-rolling-restart.html
    "25.6.5 Performing a Rolling Restart of an NDB Cluster")）。滚动重启也用作在线添加新数据节点的过程的一部分（参见[第25.6.7节，“在线添加NDB集群数据节点”](mysql-cluster-online-add-node.html
    "25.6.7 Adding NDB Cluster Data Nodes Online")）。有关数据节点、它们在NDB集群中的组织方式以及它们如何处理和存储NDB集群数据的更多信息，请参见[第25.2.2节，“NDB集群节点、节点组、片段副本和分区”](mysql-cluster-nodes-groups.html
    "25.2.2 NDB Cluster Nodes, Node Groups, Fragment Replicas, and Partitions")。
- en: Backing up and restoring NDB Cluster databases can be done using the `NDB`-native
    functionality found in the NDB Cluster management client and the [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") program included in the
    NDB Cluster distribution. For more information, see [Section 25.6.8, “Online Backup
    of NDB Cluster”](mysql-cluster-backup.html "25.6.8 Online Backup of NDB Cluster"),
    and [Section 25.5.23, “ndb_restore — Restore an NDB Cluster Backup”](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup"). You can also use the standard
    MySQL functionality provided for this purpose in [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program") and the MySQL server. See [Section 6.5.4,
    “mysqldump — A Database Backup Program”](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program"), for more information.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 备份和恢复 NDB Cluster 数据库可以使用 NDB Cluster 管理客户端中找到的 `NDB`-本地功能以及 NDB Cluster 发行版中包含的
    [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") 程序。更多信息，请参见 [Section 25.6.8, “Online Backup
    of NDB Cluster”](mysql-cluster-backup.html "25.6.8 Online Backup of NDB Cluster")，以及
    [Section 25.5.23, “ndb_restore — Restore an NDB Cluster Backup”](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup")。您还可以使用标准 MySQL 功能提供的 [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program") 和 MySQL 服务器来实现此目的。有关更多信息，请参见 [Section 6.5.4,
    “mysqldump — A Database Backup Program”](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program")。
- en: NDB Cluster nodes can employ different transport mechanisms for inter-node communications;
    TCP/IP over standard 100 Mbps or faster Ethernet hardware is used in most real-world
    deployments.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: NDB Cluster 节点可以使用不同的传输机制进行节点间通信；在大多数实际部署中，使用标准 100 Mbps 或更快的以太网硬件上的 TCP/IP。
