- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-table-wait-summary-tables.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-table-wait-summary-tables.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-table-wait-summary-tables.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-table-wait-summary-tables.html)
- en: 29.12.20.8 Table I/O and Lock Wait Summary Tables
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 29.12.20.8 表I/O和锁等待摘要表
- en: 'The following sections describe the table I/O and lock wait summary tables:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分描述了表I/O和锁等待摘要表：
- en: '[`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 The table_io_waits_summary_by_index_usage Table"): Table I/O waits
    per index'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`按索引使用汇总的表I/O等待摘要`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 按索引使用汇总的表I/O等待摘要表")：每个索引的表I/O等待'
- en: '[`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 The table_io_waits_summary_by_table Table"): Table I/O waits per
    table'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[按表汇总的表I/O等待摘要](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 按表汇总的表I/O等待摘要表")：每个表的表I/O等待'
- en: '[`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 The table_lock_waits_summary_by_table Table"): Table lock waits
    per table'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`按表汇总的表锁等待摘要`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 按表汇总的表锁等待摘要表")：每个表的表锁等待'
- en: 29.12.20.8.1 The table_io_waits_summary_by_table Table
  id: totrans-6
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 29.12.20.8.1 按表汇总的表I/O等待摘要表
- en: The [`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 The table_io_waits_summary_by_table Table") table aggregates all
    table I/O wait events, as generated by the `wait/io/table/sql/handler` instrument.
    The grouping is by table.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[`按表汇总的表I/O等待摘要`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 按表汇总的表I/O等待摘要表")表汇总了所有表I/O等待事件，由`wait/io/table/sql/handler`工具生成。按表进行分组。'
- en: 'The [`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 The table_io_waits_summary_by_table Table") table has these grouping
    columns to indicate how the table aggregates events: `OBJECT_TYPE`, `OBJECT_SCHEMA`,
    and `OBJECT_NAME`. These columns have the same meaning as in the [`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 The events_waits_current Table") table. They identify the table to
    which the row applies.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[`按表汇总的表I/O等待摘要`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 按表汇总的表I/O等待摘要表")表具有以下分组列，用于指示表如何汇总事件：`OBJECT_TYPE`、`OBJECT_SCHEMA`和`OBJECT_NAME`。这些列的含义与[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 events_waits_current表")表中的含义相同。它们标识适用于哪个表的行。'
- en: '[`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 The table_io_waits_summary_by_table Table") has the following summary
    columns containing aggregated values. As indicated in the column descriptions,
    some columns are more general and have values that are the same as the sum of
    the values of more fine-grained columns. For example, columns that aggregate all
    writes hold the sum of the corresponding columns that aggregate inserts, updates,
    and deletes. In this way, aggregations at higher levels are available directly
    without the need for user-defined views that sum lower-level columns.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[`按表汇总的表I/O等待摘要`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 按表汇总的表I/O等待摘要表")具有以下包含汇总值的摘要列。如列描述中所示，一些列更为通用，其值与更细粒度列的值之和相同。例如，汇总所有写入的列包含聚合插入、更新和删除的相应列的总和。通过这种方式，高级别的聚合直接可用，无需用户定义的视图来汇总低级别列���'
- en: '`COUNT_STAR`, `SUM_TIMER_WAIT`, `MIN_TIMER_WAIT`, `AVG_TIMER_WAIT`, `MAX_TIMER_WAIT`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_STAR`, `SUM_TIMER_WAIT`, `MIN_TIMER_WAIT`, `AVG_TIMER_WAIT`, `MAX_TIMER_WAIT`'
- en: These columns aggregate all I/O operations. They are the same as the sum of
    the corresponding `*`xxx`*_READ` and `*`xxx`*_WRITE` columns.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列汇总了所有I/O操作。它们与相应的`*`xxx`*_READ`和`*`xxx`*_WRITE`列的总和相同。
- en: '`COUNT_READ`, `SUM_TIMER_READ`, `MIN_TIMER_READ`, `AVG_TIMER_READ`, `MAX_TIMER_READ`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_READ`, `SUM_TIMER_READ`, `MIN_TIMER_READ`, `AVG_TIMER_READ`, `MAX_TIMER_READ`'
- en: These columns aggregate all read operations. They are the same as the sum of
    the corresponding `*`xxx`*_FETCH` columns.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列汇总了所有读操作。它们与相应的`*`xxx`*_FETCH`列的总和相同。
- en: '`COUNT_WRITE`, `SUM_TIMER_WRITE`, `MIN_TIMER_WRITE`, `AVG_TIMER_WRITE`, `MAX_TIMER_WRITE`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_WRITE`, `SUM_TIMER_WRITE`, `MIN_TIMER_WRITE`, `AVG_TIMER_WRITE`, `MAX_TIMER_WRITE`'
- en: These columns aggregate all write operations. They are the same as the sum of
    the corresponding `*`xxx`*_INSERT`, `*`xxx`*_UPDATE`, and `*`xxx`*_DELETE` columns.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列汇总了所有写操作。它们与相应的`*`xxx`*_INSERT`、`*`xxx`*_UPDATE`和`*`xxx`*_DELETE`列的总和��同。
- en: '`COUNT_FETCH`, `SUM_TIMER_FETCH`, `MIN_TIMER_FETCH`, `AVG_TIMER_FETCH`, `MAX_TIMER_FETCH`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_FETCH`, `SUM_TIMER_FETCH`, `MIN_TIMER_FETCH`, `AVG_TIMER_FETCH`, `MAX_TIMER_FETCH`'
- en: These columns aggregate all fetch operations.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列汇总了所有提取操作。
- en: '`COUNT_INSERT`, `SUM_TIMER_INSERT`, `MIN_TIMER_INSERT`, `AVG_TIMER_INSERT`,
    `MAX_TIMER_INSERT`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_INSERT`, `SUM_TIMER_INSERT`, `MIN_TIMER_INSERT`, `AVG_TIMER_INSERT`,
    `MAX_TIMER_INSERT`'
- en: These columns aggregate all insert operations.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列汇总了所有插入操作。
- en: '`COUNT_UPDATE`, `SUM_TIMER_UPDATE`, `MIN_TIMER_UPDATE`, `AVG_TIMER_UPDATE`,
    `MAX_TIMER_UPDATE`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_UPDATE`, `SUM_TIMER_UPDATE`, `MIN_TIMER_UPDATE`, `AVG_TIMER_UPDATE`,
    `MAX_TIMER_UPDATE`'
- en: These columns aggregate all update operations.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列汇总了所有更新操作。
- en: '`COUNT_DELETE`, `SUM_TIMER_DELETE`, `MIN_TIMER_DELETE`, `AVG_TIMER_DELETE`,
    `MAX_TIMER_DELETE`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_DELETE`, `SUM_TIMER_DELETE`, `MIN_TIMER_DELETE`, `AVG_TIMER_DELETE`,
    `MAX_TIMER_DELETE`'
- en: These columns aggregate all delete operations.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列汇总了所有删除操作。
- en: 'The [`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 The table_io_waits_summary_by_table Table") table has these indexes:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 table_io_waits_summary_by_table表")表具有以下索引：'
- en: Unique index on (`OBJECT_TYPE`, `OBJECT_SCHEMA`, `OBJECT_NAME`)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (`OBJECT_TYPE`, `OBJECT_SCHEMA`, `OBJECT_NAME`)上的唯一索引
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    is permitted for table I/O summary tables. It resets the summary columns to zero
    rather than removing rows. Truncating this table also truncates the [`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 The table_io_waits_summary_by_index_usage Table") table.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")允许用于表I/O汇总表。它将汇总列重置为零，而不是删除行。截断此表还会截断[`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 table_io_waits_summary_by_index_usage表")表。'
- en: 29.12.20.8.2 The table_io_waits_summary_by_index_usage Table
  id: totrans-27
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 29.12.20.8.2 table_io_waits_summary_by_index_usage表
- en: The [`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 The table_io_waits_summary_by_index_usage Table") table aggregates
    all table index I/O wait events, as generated by the `wait/io/table/sql/handler`
    instrument. The grouping is by table index.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 table_io_waits_summary_by_index_usage表")表汇总了所有表索引I/O等待事件，由`wait/io/table/sql/handler`工具生成。分组是按表索引进行的。'
- en: 'The columns of [`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 The table_io_waits_summary_by_index_usage Table") are nearly identical
    to [`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 The table_io_waits_summary_by_table Table"). The only difference
    is the additional group column, `INDEX_NAME`, which corresponds to the name of
    the index that was used when the table I/O wait event was recorded:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 table_io_waits_summary_by_index_usage表")的列几乎与[`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 table_io_waits_summary_by_table表")相同。唯一的区别是额外的分组列`INDEX_NAME`，对应于记录表I/O等待事件时使用的索引名称：'
- en: A value of `PRIMARY` indicates that table I/O used the primary index.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PRIMARY`的值表示表I/O使用了主索引。'
- en: A value of `NULL` means that table I/O used no index.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NULL`的值表示表I/O未使用索引。'
- en: Inserts are counted against `INDEX_NAME = NULL`.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插入计入`INDEX_NAME = NULL`。
- en: 'The [`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 The table_io_waits_summary_by_index_usage Table") table has these
    indexes:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`table_io_waits_summary_by_index_usage`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-index-usage-table
    "29.12.20.8.2 table_io_waits_summary_by_index_usage 表") 表具有这些索引：'
- en: Unique index on (`OBJECT_TYPE`, `OBJECT_SCHEMA`, `OBJECT_NAME`, `INDEX_NAME`)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 (`OBJECT_TYPE`, `OBJECT_SCHEMA`, `OBJECT_NAME`, `INDEX_NAME`) 上的唯一索引
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    is permitted for table I/O summary tables. It resets the summary columns to zero
    rather than removing rows. This table is also truncated by truncation of the [`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 The table_io_waits_summary_by_table Table") table. A DDL operation
    that changes the index structure of a table may cause the per-index statistics
    to be reset.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于表 I/O 摘要表，允许 [`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE
    语句")。它将摘要列重置为零，而不是删除行。此表也通过截断 [`table_io_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-io-waits-summary-by-table-table
    "29.12.20.8.1 table_io_waits_summary_by_table 表") 表而被截断。更改表的索引结构的 DDL 操作可能会导致每个索引的统计信息被重置。
- en: 29.12.20.8.3 The table_lock_waits_summary_by_table Table
  id: totrans-36
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 29.12.20.8.3 table_lock_waits_summary_by_table 表
- en: The [`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 The table_lock_waits_summary_by_table Table") table aggregates all
    table lock wait events, as generated by the `wait/lock/table/sql/handler` instrument.
    The grouping is by table.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 table_lock_waits_summary_by_table 表") 表聚合了所有表锁等待事件，由 `wait/lock/table/sql/handler`
    工具生成。分组是按表进行的。'
- en: 'This table contains information about internal and external locks:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此表包含有关内部和外部锁的信息：
- en: 'An internal lock corresponds to a lock in the SQL layer. This is currently
    implemented by a call to `thr_lock()`. In event rows, these locks are distinguished
    by the `OPERATION` column, which has one of these values:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部锁对应于 SQL 层中的锁。目前通过调用 `thr_lock()` 实现。在事件行中，这些锁由 `OPERATION` 列区分，该列具有以下值之一：
- en: '[PRE0]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'An external lock corresponds to a lock in the storage engine layer. This is
    currently implemented by a call to `handler::external_lock()`. In event rows,
    these locks are distinguished by the `OPERATION` column, which has one of these
    values:'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部锁对应于存储引擎层中的锁。目前通过调用 `handler::external_lock()` 实现。在事件行中，这些锁由 `OPERATION` 列区分，该列具有以下值之一：
- en: '[PRE1]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The [`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 The table_lock_waits_summary_by_table Table") table has these grouping
    columns to indicate how the table aggregates events: `OBJECT_TYPE`, `OBJECT_SCHEMA`,
    and `OBJECT_NAME`. These columns have the same meaning as in the [`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 The events_waits_current Table") table. They identify the table to
    which the row applies.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 table_lock_waits_summary_by_table 表") 表具有这些分组列，用于指示表如何聚合事件：`OBJECT_TYPE`、`OBJECT_SCHEMA`
    和 `OBJECT_NAME`。这些列的含义与 [`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 events_waits_current 表") 表中的含义相同。它们标识适用于哪个表的行。'
- en: '[`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 The table_lock_waits_summary_by_table Table") has the following
    summary columns containing aggregated values. As indicated in the column descriptions,
    some columns are more general and have values that are the same as the sum of
    the values of more fine-grained columns. For example, columns that aggregate all
    locks hold the sum of the corresponding columns that aggregate read and write
    locks. In this way, aggregations at higher levels are available directly without
    the need for user-defined views that sum lower-level columns.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 table_lock_waits_summary_by_table 表") 包含以下汇总列，其中包含聚合值。 如列描述中所示，某些列更一般，其值与更细粒度列的值之和相同。
    例如，聚合所有锁的列包含聚合读锁和写锁的相应列之和。 通过这种方式，高级别的聚合可直接使用，无需用户定义的视图来汇总较低级别的列。'
- en: '`COUNT_STAR`, `SUM_TIMER_WAIT`, `MIN_TIMER_WAIT`, `AVG_TIMER_WAIT`, `MAX_TIMER_WAIT`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_STAR`, `SUM_TIMER_WAIT`, `MIN_TIMER_WAIT`, `AVG_TIMER_WAIT`, `MAX_TIMER_WAIT`'
- en: These columns aggregate all lock operations. They are the same as the sum of
    the corresponding `*`xxx`*_READ` and `*`xxx`*_WRITE` columns.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合所有锁操作。 它们与相应的 `*`xxx`*_READ` 和 `*`xxx`*_WRITE` 列的和相同。
- en: '`COUNT_READ`, `SUM_TIMER_READ`, `MIN_TIMER_READ`, `AVG_TIMER_READ`, `MAX_TIMER_READ`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_READ`, `SUM_TIMER_READ`, `MIN_TIMER_READ`, `AVG_TIMER_READ`, `MAX_TIMER_READ`'
- en: These columns aggregate all read-lock operations. They are the same as the sum
    of the corresponding `*`xxx`*_READ_NORMAL`, `*`xxx`*_READ_WITH_SHARED_LOCKS`,
    `*`xxx`*_READ_HIGH_PRIORITY`, and `*`xxx`*_READ_NO_INSERT` columns.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合所有读锁操作。 它们与相应的 `*`xxx`*_READ_NORMAL`, `*`xxx`*_READ_WITH_SHARED_LOCKS`,
    `*`xxx`*_READ_HIGH_PRIORITY`, 和 `*`xxx`*_READ_NO_INSERT` 列的和相同。
- en: '`COUNT_WRITE`, `SUM_TIMER_WRITE`, `MIN_TIMER_WRITE`, `AVG_TIMER_WRITE`, `MAX_TIMER_WRITE`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_WRITE`, `SUM_TIMER_WRITE`, `MIN_TIMER_WRITE`, `AVG_TIMER_WRITE`, `MAX_TIMER_WRITE`'
- en: These columns aggregate all write-lock operations. They are the same as the
    sum of the corresponding `*`xxx`*_WRITE_ALLOW_WRITE`, `*`xxx`*_WRITE_CONCURRENT_INSERT`,
    `*`xxx`*_WRITE_LOW_PRIORITY`, and `*`xxx`*_WRITE_NORMAL` columns.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合所有写锁操作。 它们与相应的 `*`xxx`*_WRITE_ALLOW_WRITE`, `*`xxx`*_WRITE_CONCURRENT_INSERT`,
    `*`xxx`*_WRITE_LOW_PRIORITY`, 和 `*`xxx`*_WRITE_NORMAL` 列的和相同。
- en: '`COUNT_READ_NORMAL`, `SUM_TIMER_READ_NORMAL`, `MIN_TIMER_READ_NORMAL`, `AVG_TIMER_READ_NORMAL`,
    `MAX_TIMER_READ_NORMAL`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_READ_NORMAL`, `SUM_TIMER_READ_NORMAL`, `MIN_TIMER_READ_NORMAL`, `AVG_TIMER_READ_NORMAL`,
    `MAX_TIMER_READ_NORMAL`'
- en: These columns aggregate internal read locks.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合内部读锁。
- en: '`COUNT_READ_WITH_SHARED_LOCKS`, `SUM_TIMER_READ_WITH_SHARED_LOCKS`, `MIN_TIMER_READ_WITH_SHARED_LOCKS`,
    `AVG_TIMER_READ_WITH_SHARED_LOCKS`, `MAX_TIMER_READ_WITH_SHARED_LOCKS`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_READ_WITH_SHARED_LOCKS`, `SUM_TIMER_READ_WITH_SHARED_LOCKS`, `MIN_TIMER_READ_WITH_SHARED_LOCKS`,
    `AVG_TIMER_READ_WITH_SHARED_LOCKS`, `MAX_TIMER_READ_WITH_SHARED_LOCKS`'
- en: These columns aggregate internal read locks.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合内部读锁。
- en: '`COUNT_READ_HIGH_PRIORITY`, `SUM_TIMER_READ_HIGH_PRIORITY`, `MIN_TIMER_READ_HIGH_PRIORITY`,
    `AVG_TIMER_READ_HIGH_PRIORITY`, `MAX_TIMER_READ_HIGH_PRIORITY`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_READ_HIGH_PRIORITY`, `SUM_TIMER_READ_HIGH_PRIORITY`, `MIN_TIMER_READ_HIGH_PRIORITY`,
    `AVG_TIMER_READ_HIGH_PRIORITY`, `MAX_TIMER_READ_HIGH_PRIORITY`'
- en: These columns aggregate internal read locks.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合内部读锁。
- en: '`COUNT_READ_NO_INSERT`, `SUM_TIMER_READ_NO_INSERT`, `MIN_TIMER_READ_NO_INSERT`,
    `AVG_TIMER_READ_NO_INSERT`, `MAX_TIMER_READ_NO_INSERT`'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_READ_NO_INSERT`, `SUM_TIMER_READ_NO_INSERT`, `MIN_TIMER_READ_NO_INSERT`,
    `AVG_TIMER_READ_NO_INSERT`, `MAX_TIMER_READ_NO_INSERT`'
- en: These columns aggregate internal read locks.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合内部读锁。
- en: '`COUNT_READ_EXTERNAL`, `SUM_TIMER_READ_EXTERNAL`, `MIN_TIMER_READ_EXTERNAL`,
    `AVG_TIMER_READ_EXTERNAL`, `MAX_TIMER_READ_EXTERNAL`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_READ_EXTERNAL`, `SUM_TIMER_READ_EXTERNAL`, `MIN_TIMER_READ_EXTERNAL`,
    `AVG_TIMER_READ_EXTERNAL`, `MAX_TIMER_READ_EXTERNAL`'
- en: These columns aggregate external read locks.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合外部读锁。
- en: '`COUNT_WRITE_ALLOW_WRITE`, `SUM_TIMER_WRITE_ALLOW_WRITE`, `MIN_TIMER_WRITE_ALLOW_WRITE`,
    `AVG_TIMER_WRITE_ALLOW_WRITE`, `MAX_TIMER_WRITE_ALLOW_WRITE`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_WRITE_ALLOW_WRITE`, `SUM_TIMER_WRITE_ALLOW_WRITE`, `MIN_TIMER_WRITE_ALLOW_WRITE`,
    `AVG_TIMER_WRITE_ALLOW_WRITE`, `MAX_TIMER_WRITE_ALLOW_WRITE`'
- en: These columns aggregate internal write locks.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合内部写锁。
- en: '`COUNT_WRITE_CONCURRENT_INSERT`, `SUM_TIMER_WRITE_CONCURRENT_INSERT`, `MIN_TIMER_WRITE_CONCURRENT_INSERT`,
    `AVG_TIMER_WRITE_CONCURRENT_INSERT`, `MAX_TIMER_WRITE_CONCURRENT_INSERT`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_WRITE_CONCURRENT_INSERT`, `SUM_TIMER_WRITE_CONCURRENT_INSERT`, `MIN_TIMER_WRITE_CONCURRENT_INSERT`,
    `AVG_TIMER_WRITE_CONCURRENT_INSERT`, `MAX_TIMER_WRITE_CONCURRENT_INSERT`'
- en: These columns aggregate internal write locks.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合内部写锁。
- en: '`COUNT_WRITE_LOW_PRIORITY`, `SUM_TIMER_WRITE_LOW_PRIORITY`, `MIN_TIMER_WRITE_LOW_PRIORITY`,
    `AVG_TIMER_WRITE_LOW_PRIORITY`, `MAX_TIMER_WRITE_LOW_PRIORITY`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_WRITE_LOW_PRIORITY`, `SUM_TIMER_WRITE_LOW_PRIORITY`, `MIN_TIMER_WRITE_LOW_PRIORITY`,
    `AVG_TIMER_WRITE_LOW_PRIORITY`, `MAX_TIMER_WRITE_LOW_PRIORITY`'
- en: These columns aggregate internal write locks.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合了内部写锁。
- en: '`COUNT_WRITE_NORMAL`, `SUM_TIMER_WRITE_NORMAL`, `MIN_TIMER_WRITE_NORMAL`, `AVG_TIMER_WRITE_NORMAL`,
    `MAX_TIMER_WRITE_NORMAL`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_WRITE_NORMAL`, `SUM_TIMER_WRITE_NORMAL`, `MIN_TIMER_WRITE_NORMAL`, `AVG_TIMER_WRITE_NORMAL`,
    `MAX_TIMER_WRITE_NORMAL`'
- en: These columns aggregate internal write locks.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合了内部写锁。
- en: '`COUNT_WRITE_EXTERNAL`, `SUM_TIMER_WRITE_EXTERNAL`, `MIN_TIMER_WRITE_EXTERNAL`,
    `AVG_TIMER_WRITE_EXTERNAL`, `MAX_TIMER_WRITE_EXTERNAL`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COUNT_WRITE_EXTERNAL`, `SUM_TIMER_WRITE_EXTERNAL`, `MIN_TIMER_WRITE_EXTERNAL`,
    `AVG_TIMER_WRITE_EXTERNAL`, `MAX_TIMER_WRITE_EXTERNAL`'
- en: These columns aggregate external write locks.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些列聚合了外部写锁。
- en: 'The [`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 The table_lock_waits_summary_by_table Table") table has these indexes:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[`table_lock_waits_summary_by_table`](performance-schema-table-wait-summary-tables.html#performance-schema-table-lock-waits-summary-by-table-table
    "29.12.20.8.3 The table_lock_waits_summary_by_table Table") 表具有以下索引：'
- en: Unique index on (`OBJECT_TYPE`, `OBJECT_SCHEMA`, `OBJECT_NAME`)
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (`OBJECT_TYPE`, `OBJECT_SCHEMA`, `OBJECT_NAME`) 上的唯一索引
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    is permitted for table lock summary tables. It resets the summary columns to zero
    rather than removing rows.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[`截断表`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement") 允许用于表锁摘要表。它将摘要列重置为零，而不是删除行。'
