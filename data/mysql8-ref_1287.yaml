- en: 17.20.7 The InnoDB memcached Plugin and Replication
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.20.7 InnoDB memcached插件和复制
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-memcached-replication.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-memcached-replication.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-memcached-replication.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-memcached-replication.html)
- en: Because the `daemon_memcached` plugin supports the MySQL [binary log](glossary.html#glos_binary_log
    "binary log"), source server through the **memcached** interface can be replicated
    for backup, balancing intensive read workloads, and high availability. All **memcached**
    commands are supported with binary logging.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 因为`daemon_memcached`插件支持MySQL的[二进制日志](glossary.html#glos_binary_log "binary
    log")，源服务器通过**memcached**接口可以进行备份复制，平衡读取工作负载，并实现高可用性。所有**memcached**命令都支持二进制日志记录。
- en: You do not need to set up the `daemon_memcached` plugin on replica servers.
    The primary advantage of this configuration is increased write throughput on the
    source. The speed of the replication mechanism is not affected.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 您无需在副本服务器上设置`daemon_memcached`插件。此配置的主要优势是增加源端的写入吞吐量。复制机制的速度不受影响。
- en: The following sections show how to use the binary log capability when using
    the `daemon_memcached` plugin with MySQL replication. It is assumed that you have
    completed the setup described in [Section 17.20.3, “Setting Up the InnoDB memcached
    Plugin”](innodb-memcached-setup.html "17.20.3 Setting Up the InnoDB memcached
    Plugin").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节显示了在使用`daemon_memcached`插件进行MySQL复制时如何使用二进制日志功能。假定您已完成[第17.20.3节“设置InnoDB
    memcached插件”](innodb-memcached-setup.html "17.20.3 Setting Up the InnoDB memcached
    Plugin")中描述的设置。
- en: Enabling the InnoDB memcached Binary Log
  id: totrans-5
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 启用InnoDB memcached二进制日志
- en: To use the `daemon_memcached` plugin with the MySQL [binary log](glossary.html#glos_binary_log
    "binary log"), enable the [`innodb_api_enable_binlog`](innodb-parameters.html#sysvar_innodb_api_enable_binlog)
    configuration option on the source server. This option can only be set at server
    startup. You must also enable the MySQL binary log on the source server using
    the [`--log-bin`](replication-options-binary-log.html#sysvar_log_bin) option.
    You can add these options to the MySQL configuration file, or on the [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") command line.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在MySQL的[二进制日志](glossary.html#glos_binary_log "binary log")中使用`daemon_memcached`插件，请在源服务器上启用[`innodb_api_enable_binlog`](innodb-parameters.html#sysvar_innodb_api_enable_binlog)配置选项。此选项只能在服务器启动时设置。您还必须在源服务器上使用[`--log-bin`](replication-options-binary-log.html#sysvar_log_bin)选项启用MySQL的二进制日志。您可以将这些选项添加到MySQL配置文件中，或者在[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")命令行中添加。
- en: '[PRE0]'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Configure the source and replica server, as described in [Section 19.1.2, “Setting
    Up Binary Log File Position Based Replication”](replication-howto.html "19.1.2 Setting
    Up Binary Log File Position Based Replication").
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置源服务器和副本服务器，如[第19.1.2节“基于二进制日志文件位置的复制设置”](replication-howto.html "19.1.2 Setting
    Up Binary Log File Position Based Replication")中所述。
- en: Use [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")
    to create a source data snapshot, and sync the snapshot to the replica server.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")创建源数据快照，并将快照同步到副本服务器。
- en: '[PRE1]'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: On the source server, issue [`SHOW MASTER STATUS`](show-master-status.html "15.7.7.23 SHOW
    MASTER STATUS Statement") to obtain the source binary log coordinates.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在源服务器上，执行[`SHOW MASTER STATUS`](show-master-status.html "15.7.7.23 SHOW MASTER
    STATUS Statement")以获取源二进制日志坐标。
- en: '[PRE2]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: On the replica server, use a [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") statement (from MySQL 8.0.23)
    or [`CHANGE MASTER TO`](change-master-to.html "15.4.2.1 CHANGE MASTER TO Statement")
    statement (before MySQL 8.0.23) to set up a replica server using the source binary
    log coordinates.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在副本服务器上，使用[`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement")语句（从MySQL 8.0.23开始）或[`CHANGE
    MASTER TO`](change-master-to.html "15.4.2.1 CHANGE MASTER TO Statement")语句（MySQL
    8.0.23之前）设置使用源二进制日志坐标的副本服务器。
- en: '[PRE3]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Start the replica.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动副本。
- en: '[PRE4]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If the error log prints output similar to the following, the replica is ready
    for replication.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果错误日志输出类似于以下内容，则副本已准备好进行复制。
- en: '[PRE5]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Testing the InnoDB memcached Replication Configuration
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 测试InnoDB memcached复制配置
- en: This example demonstrates how to test the `InnoDB` **memcached** replication
    configuration using the **memcached** and telnet to insert, update, and delete
    data. A MySQL client is used to verify results on the source and replica servers.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 该示例演示了如何使用**memcached**和telnet测试**InnoDB** **memcached**复制配置，以插入、更新和删除数据。使用MySQL客户端验证源服务器和副本服务器上的结果。
- en: The example uses the `demo_test` table, which was created by the `innodb_memcached_config.sql`
    configuration script during the initial setup of the `daemon_memcached` plugin.
    The `demo_test` table contains a single example record.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 该示例使用了`innodb_memcached_config.sql`配置脚本在`daemon_memcached`插件的初始设置期间创建的`demo_test`表。`demo_test`表包含一个示例记录。
- en: Use the `set` command to insert a record with a key of `test1`, a flag value
    of `10`, an expiration value of `0`, a cas value of 1, and a value of `t1`.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`set`命令插入一个具有键`test1`、标志值`10`、过期值`0`、cas值1和值`t1`的记录。
- en: '[PRE6]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: On the source server, check that the record was inserted into the `demo_test`
    table. Assuming the `demo_test` table was not previously modified, there should
    be two records. The example record with a key of `AA`, and the record you just
    inserted, with a key of `test1`. The `c1` column maps to the key, the `c2` column
    to the value, the `c3` column to the flag value, the `c4` column to the cas value,
    and the `c5` column to the expiration time. The expiration time was set to 0,
    since it is unused.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在源服务器上，检查记录是否插入到`demo_test`表中。假设`demo_test`表之前未被修改，应该有两条记录。一个具有键`AA`的示例记录，以及刚刚插入的具有键`test1`的记录。`c1`列映射到键，`c2`列映射到值，`c3`列映射到标志值，`c4`列映射到cas值，`c5`列映射到过期时间。过期时间设置为0，因为未使用。
- en: '[PRE7]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Check to verify that the same record was replicated to the replica server.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查验证相同记录是否被复制到副本服务器。
- en: '[PRE8]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Use the `set` command to update the key to a value of `new`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`set`命令将键更新为`new`的值。
- en: '[PRE9]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The update is replicated to the replica server (notice that the `cas` value
    is also updated).
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更新被复制到副本服务器（注意`cas`值也被更新）。
- en: '[PRE10]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Delete the `test1` record using a `delete` command.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`delete`命令删除`test1`记录。
- en: '[PRE11]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: When the `delete` operation is replicated to the replica, the `test1` record
    on the replica is also deleted.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当`delete`操作被复制到副本时，副本上的`test1`记录也被删除。
- en: '[PRE12]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Remove all rows from the table using the `flush_all` command.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`flush_all`命令从表中删除所有行。
- en: '[PRE13]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Telnet to the source server and enter two new records.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用telnet连接到源服务器并输入两条新记录。
- en: '[PRE15]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Confirm that the two records were replicated to the replica server.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认两条记录是否被复制到副本服务器。
- en: '[PRE16]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Remove all rows from the table using the `flush_all` command.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`flush_all`命令从表中删除所有行。
- en: '[PRE17]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Check to ensure that the `flush_all` operation was replicated on the replica
    server.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查确保`flush_all`操作在副本服务器上被复制。
- en: '[PRE18]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: InnoDB memcached Binary Log Notes
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**InnoDB** **memcached**二进制日志注释'
- en: 'Binary Log Format:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 二进制日志格式：
- en: Most **memcached** operations are mapped to [DML](glossary.html#glos_dml "DML")
    statements (analogous to insert, delete, update). Since there is no actual SQL
    statement being processed by the MySQL server, all **memcached** commands (except
    for `flush_all`) use Row-Based Replication (RBR) logging, which is independent
    of any server [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    setting.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数**memcached**操作都映射到[DML](glossary.html#glos_dml "DML")语句（类似于插入、删除、更新）。由于MySQL服务器没有实际的SQL语句在处理，所有**memcached**命令（除了`flush_all`）使用基于行的复制（RBR）日志记录，这与任何服务器[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)设置无关。
- en: The **memcached** `flush_all` command is mapped to the [`TRUNCATE TABLE`](truncate-table.html
    "15.1.37 TRUNCATE TABLE Statement") command in MySQL 5.7 and earlier. Since [DDL](glossary.html#glos_ddl
    "DDL") commands can only use statement-based logging, the `flush_all` command
    is replicated by sending a [`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE
    TABLE Statement") statement. In MySQL 8.0 and later, `flush_all` is mapped to
    `DELETE` but is still replicated by sending a [`TRUNCATE TABLE`](truncate-table.html
    "15.1.37 TRUNCATE TABLE Statement") statement.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**memcached**的`flush_all`命令映射到MySQL 5.7及更早版本的[`TRUNCATE TABLE`](truncate-table.html
    "15.1.37 TRUNCATE TABLE Statement")命令。由于[DDL](glossary.html#glos_ddl "DDL")命令只能使用基于语句的日志记录，`flush_all`命令通过发送[`TRUNCATE
    TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")语句来复制。在MySQL 8.0及更高版本中，`flush_all`映射到`DELETE`，但仍通过发送[`TRUNCATE
    TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")语句来复制。'
- en: 'Transactions:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 事务：
- en: The concept of [transactions](glossary.html#glos_transaction "transaction")
    has not typically been part of **memcached** applications. For performance considerations,
    [`daemon_memcached_r_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)
    and [`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)
    are used to control the batch size for read and write transactions. These settings
    do not affect replication. Each SQL operation on the underlying `InnoDB` table
    is replicated after successful completion.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务](glossary.html#glos_transaction "transaction")的概念通常不是**memcached**应用的一部分。为了性能考虑，[`daemon_memcached_r_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_r_batch_size)和[`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)用于控制读取和写入事务的批处理大小。这些设置不影响复制。在底层`InnoDB`表上的每个SQL操作在成功完成后被复制。'
- en: The default value of [`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)
    is `1`, which means that each **memcached** write operation is committed immediately.
    This default setting incurs a certain amount of performance overhead to avoid
    inconsistencies in the data that is visible on the source and replica servers.
    The replicated records are always available immediately on the replica server.
    If you set [`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)
    to a value greater than `1`, records inserted or updated through **memcached**
    are not immediately visible on the source server; to view the records on the source
    server before they are committed, issue [`SET TRANSACTION ISOLATION LEVEL READ
    UNCOMMITTED`](set-transaction.html "15.3.7 SET TRANSACTION Statement").
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)的默认值为`1`，这意味着每个**memcached**写操作立即提交。这个默认设置会产生一定的性能开销，以避免在源服务器和副本服务器上可见的数据不一致。复制的记录在副本服务器上始终立即可用。如果将[`daemon_memcached_w_batch_size`](innodb-parameters.html#sysvar_daemon_memcached_w_batch_size)设置为大于`1`的值，则通过**memcached**插入或更新的记录在源服务器上不会立即可见；在提交之前在源服务器上查看记录，请发出[`SET
    TRANSACTION ISOLATION LEVEL READ UNCOMMITTED`](set-transaction.html "15.3.7 SET
    TRANSACTION Statement")。'
