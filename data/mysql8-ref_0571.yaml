- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/optimize-blob.html](https://dev.mysql.com/doc/refman/8.0/en/optimize-blob.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/optimize-blob.html](https://dev.mysql.com/doc/refman/8.0/en/optimize-blob.html)
- en: 10.4.2.3 Optimizing for BLOB Types
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.4.2.3 优化BLOB类型
- en: When storing a large blob containing textual data, consider compressing it first.
    Do not use this technique when the entire table is compressed by `InnoDB` or `MyISAM`.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储包含文本数据的大型BLOB时，考虑首先对其进行压缩。当整个表由`InnoDB`或`MyISAM`压缩时，请勿使用此技术。
- en: For a table with several columns, to reduce memory requirements for queries
    that do not use the BLOB column, consider splitting the BLOB column into a separate
    table and referencing it with a join query when needed.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于具有多个列的表，为了减少不使用BLOB列的查询的内存需求，考虑将BLOB列拆分到一个单独的表中，并在需要时使用连接查询引用它。
- en: Since the performance requirements to retrieve and display a BLOB value might
    be very different from other data types, you could put the BLOB-specific table
    on a different storage device or even a separate database instance. For example,
    to retrieve a BLOB might require a large sequential disk read that is better suited
    to a traditional hard drive than to an [SSD device](glossary.html#glos_ssd "SSD").
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于检索和显示BLOB值的性能要求可能与其他数据类型非常不同，您可以将特定于BLOB的表放在不同的存储设备上，甚至放在单独的数据库实例上。例如，检索BLOB可能需要大量的顺序磁盘读取，这更适合传统硬盘而不是[SSD设备](glossary.html#glos_ssd
    "SSD")。
- en: See [Section 10.4.2.2, “Optimizing for Character and String Types”](optimize-character.html
    "10.4.2.2 Optimizing for Character and String Types") for reasons why a binary
    `VARCHAR` column is sometimes preferable to an equivalent BLOB column.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看[第10.4.2.2节，“优化字符和字符串类型”](optimize-character.html "10.4.2.2 优化字符和字符串类型")，了解为什么有时二进制`VARCHAR`列比等效的BLOB列更可取。
- en: Rather than testing for equality against a very long text string, you can store
    a hash of the column value in a separate column, index that column, and test the
    hashed value in queries. (Use the `MD5()` or `CRC32()` function to produce the
    hash value.) Since hash functions can produce duplicate results for different
    inputs, you still include a clause `AND *`blob_column`* = *`long_string_value`*`
    in the query to guard against false matches; the performance benefit comes from
    the smaller, easily scanned index for the hashed values.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与非常长的文本字符串进行相等性测试不同，您可以将列值的哈希存储在单独的列中，对该列建立索引，并在查询中测试哈希值。（使用`MD5()`或`CRC32()`函数生成哈希值。）由于哈希函数可以为不同的输入产生重复的结果，您仍然在查询中包含一个子句`AND
    *`blob_column`* = *`long_string_value`*`来防止错误匹配；性能优势来自于对哈希值的较小、易于扫描的索引。
