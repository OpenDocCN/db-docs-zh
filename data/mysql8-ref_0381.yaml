- en: 8.2.21 Setting Account Resource Limits
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8.2.21 设置帐户资源限制
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/user-resources.html](https://dev.mysql.com/doc/refman/8.0/en/user-resources.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/user-resources.html](https://dev.mysql.com/doc/refman/8.0/en/user-resources.html)
- en: One means of restricting client use of MySQL server resources is to set the
    global [`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)
    system variable to a nonzero value. This limits the number of simultaneous connections
    that can be made by any given account, but places no limits on what a client can
    do once connected. In addition, setting [`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)
    does not enable management of individual accounts. Both types of control are of
    interest to MySQL administrators.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 限制客户端使用 MySQL 服务器资源的一种方法是将全局[`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)系统变量设置为非零值。这限制了任何给定帐户可以建立的同时连接数，但不限制客户端连接后可以做的事情。此外，设置[`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)不会启用对个别帐户的管理。这两种类型的控制对
    MySQL 管理员很重要。
- en: 'To address such concerns, MySQL permits limits for individual accounts on use
    of these server resources:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些问题，MySQL 允许对个别帐户使用这些服务器资源的限制：
- en: The number of queries an account can issue per hour
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个帐户每小时可以发出的查询次数
- en: The number of updates an account can issue per hour
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个帐户每小时可以发出的更新次数
- en: The number of times an account can connect to the server per hour
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个帐户每小时可以连接到服务器的次数
- en: The number of simultaneous connections to the server by an account
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个帐户对服务器的同时连接数
- en: Any statement that a client can issue counts against the query limit. Only statements
    that modify databases or tables count against the update limit.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端可以发出的任何语句都计入查询限制。只有修改数据库或表的语句才计入更新限制。
- en: An “account” in this context corresponds to a row in the `mysql.user` system
    table. That is, a connection is assessed against the `User` and `Host` values
    in the `user` table row that applies to the connection. For example, an account
    `'usera'@'%.example.com'` corresponds to a row in the `user` table that has `User`
    and `Host` values of `usera` and `%.example.com`, to permit `usera` to connect
    from any host in the `example.com` domain. In this case, the server applies resource
    limits in this row collectively to all connections by `usera` from any host in
    the `example.com` domain because all such connections use the same account.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，“帐户”对应于`mysql.user`系统表中的一行。也就是说，连接根据适用于连接的`user`表行中的`User`和`Host`值进行评估。例如，帐户`'usera'@'%.example.com'`对应于`user`表中具有`User`和`Host`值为`usera`和`%.example.com`的行，以允许`usera`从`example.com`域中的任何主机连接。在这种情况下，服务器将在此行中的资源限制集体应用于`usera`从`example.com`域中的任何主机发起的所有连接，因为所有这样的连接使用相同的帐户。
- en: Before MySQL 5.0, an “account” was assessed against the actual host from which
    a user connects. This older method of accounting may be selected by starting the
    server with the [`--old-style-user-limits`](server-options.html#option_mysqld_old-style-user-limits)
    option. In this case, if `usera` connects simultaneously from `host1.example.com`
    and `host2.example.com`, the server applies the account resource limits separately
    to each connection. If `usera` connects again from `host1.example.com`, the server
    applies the limits for that connection together with the existing connection from
    that host.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 5.0 之前，“帐户”是根据用户连接的实际主机进行评估的。可以通过使用[`--old-style-user-limits`](server-options.html#option_mysqld_old-style-user-limits)选项启动服务器来选择这种较旧的计算方法。在这种情况下，如果`usera`同时从`host1.example.com`和`host2.example.com`连接，服务器会将帐户资源限制分别应用于每个连接。如果`usera`再次从`host1.example.com`连接，服务器将与该主机的现有连接一起应用该连接的限制。
- en: Note
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The [`--old-style-user-limits`](server-options.html#option_mysqld_old-style-user-limits)
    option is deprecated in MySQL 8.0.30, and is subject to removal in a future release
    of MySQL. Use of this option on the command line or in an option file in MySQL
    8.0.30 or later causes the server to raise a warning.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.30 中，[`--old-style-user-limits`](server-options.html#option_mysqld_old-style-user-limits)选项已被弃用，并可能在将来的
    MySQL 版本中被移除。在 MySQL 8.0.30 或更高版本中在命令行或选项文件中使用此选项会导致服务器发出警告。
- en: 'To establish resource limits for an account at account-creation time, use the
    [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement") statement.
    To modify the limits for an existing account, use [`ALTER USER`](alter-user.html
    "15.7.1.1 ALTER USER Statement"). Provide a `WITH` clause that names each resource
    to be limited. The default value for each limit is zero (no limit). For example,
    to create a new account that can access the `customer` database, but only in a
    limited fashion, issue these statements:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要在创建帐户时为帐户建立资源限制，请使用[`CREATE USER`](create-user.html "15.7.1.3 CREATE USER 语句")语句。要修改现有帐户的限制，请使用[`ALTER
    USER`](alter-user.html "15.7.1.1 ALTER USER 语句")。提供一个`WITH`子句，命名要限制的每个资源。每个限制的默认值为零（无限制）。例如，要创建一个新帐户，可以访问`customer`数据库，但只能以有限的方式访问，发出以下语句：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The limit types need not all be named in the `WITH` clause, but those named
    can be present in any order. The value for each per-hour limit should be an integer
    representing a count per hour. For `MAX_USER_CONNECTIONS`, the limit is an integer
    representing the maximum number of simultaneous connections by the account. If
    this limit is set to zero, the global [`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)
    system variable value determines the number of simultaneous connections. If [`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)
    is also zero, there is no limit for the account.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 限制类型不需要全部在`WITH`子句中命名，但命名的限制可以以任何顺序出现。每小时限制的值应为表示每小时计数的整数。对于`MAX_USER_CONNECTIONS`，限制是表示帐户同时连接数的整数。如果将此限制设置为零，则全局[`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)系统变量值确定同时连接数。如果[`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)也为零，则该帐户没有限制。
- en: 'To modify limits for an existing account, use an [`ALTER USER`](alter-user.html
    "15.7.1.1 ALTER USER Statement") statement. The following statement changes the
    query limit for `francis` to 100:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改现有帐户的限制，请使用[`ALTER USER`](alter-user.html "15.7.1.1 ALTER USER 语句")。以下语句将`francis`的查询限制更改为100：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The statement modifies only the limit value specified and leaves the account
    otherwise unchanged.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句仅修改指定的限制值，不会对帐户进行其他更改。
- en: 'To remove a limit, set its value to zero. For example, to remove the limit
    on how many times per hour `francis` can connect, use this statement:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除限制，请将其值设置为零。例如，要删除`francis`每小时连接次数限制，使用以下语句：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As mentioned previously, the simultaneous-connection limit for an account is
    determined from the `MAX_USER_CONNECTIONS` limit and the [`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)
    system variable. Suppose that the global [`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)
    value is 10 and three accounts have individual resource limits specified as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，帐户的同时连接限制是根据`MAX_USER_CONNECTIONS`限制和[`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)系统变量确定的。假设全局[`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)值为10，并且有三个帐户具有以下指定的各自资源限制：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`user1` has a connection limit of 10 (the global [`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)
    value) because it has a `MAX_USER_CONNECTIONS` limit of zero. `user2` and `user3`
    have connection limits of 5 and 20, respectively, because they have nonzero `MAX_USER_CONNECTIONS`
    limits.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`user1`的连接限制为10（全局[`max_user_connections`](server-system-variables.html#sysvar_max_user_connections)值），因为它的`MAX_USER_CONNECTIONS`限制为零。`user2`和`user3`的连接限制分别为5和20，因为它们具有非零的`MAX_USER_CONNECTIONS`限制。'
- en: The server stores resource limits for an account in the `user` table row corresponding
    to the account. The `max_questions`, `max_updates`, and `max_connections` columns
    store the per-hour limits, and the `max_user_connections` column stores the `MAX_USER_CONNECTIONS`
    limit. (See [Section 8.2.3, “Grant Tables”](grant-tables.html "8.2.3 Grant Tables").)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器将帐户的资源限制存储在与帐户对应的`user`表行中。`max_questions`、`max_updates`和`max_connections`列存储每小时限制，`max_user_connections`列存储`MAX_USER_CONNECTIONS`限制。（参见[第8.2.3节，“授权表”](grant-tables.html
    "8.2.3 授权表")。）
- en: Resource-use counting takes place when any account has a nonzero limit placed
    on its use of any of the resources.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当任何帐户对其任何资源的使用放置了非零限制时，资源使用计数会发生。
- en: As the server runs, it counts the number of times each account uses resources.
    If an account reaches its limit on number of connections within the last hour,
    the server rejects further connections for the account until that hour is up.
    Similarly, if the account reaches its limit on the number of queries or updates,
    the server rejects further queries or updates until the hour is up. In all such
    cases, the server issues appropriate error messages.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当服务器运行时，它会计算每个账户使用资源的次数。如果一个账户在最近一小时内达到了连接数限制，服务器将拒绝该账户的进一步连接，直到该小时结束。同样，如果账户达到了查询或更新次数限制，服务器将拒绝进一步的查询或更新，直到该小时结束。在所有这些情况下，服务器会发出适当的错误消息。
- en: Resource counting occurs per account, not per client. For example, if your account
    has a query limit of 50, you cannot increase your limit to 100 by making two simultaneous
    client connections to the server. Queries issued on both connections are counted
    together.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 资源计数是按账户而不是按客户端进行的。例如，如果您的账户有一个查询限制为50，您不能通过同时在服务器上建立两个客户端连接来将限制增加到100。两个连接上发出的查询会被一起计算。
- en: 'The current per-hour resource-use counts can be reset globally for all accounts,
    or individually for a given account:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当前每小时资源使用计数可以全局重置所有账户，或者针对特定账户进行单独重置：
- en: To reset the current counts to zero for all accounts, issue a [`FLUSH USER_RESOURCES`](flush.html#flush-user-resources)
    statement. The counts also can be reset by reloading the grant tables (for example,
    with a [`FLUSH PRIVILEGES`](flush.html#flush-privileges) statement or a [**mysqladmin
    reload**](mysqladmin.html "6.5.2 mysqladmin — A MySQL Server Administration Program")
    command).
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将当前计数重置为零以适用于所有账户，请发出一个[`FLUSH USER_RESOURCES`](flush.html#flush-user-resources)语句。也可以通过重新加载授权表（例如，使用[`FLUSH
    PRIVILEGES`](flush.html#flush-privileges)语句或[**mysqladmin reload**](mysqladmin.html
    "6.5.2 mysqladmin — A MySQL Server Administration Program")命令）来重置计数。
- en: The counts for an individual account can be reset to zero by setting any of
    its limits again. Specify a limit value equal to the value currently assigned
    to the account.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过再次设置任何限制值将单个账户的计数重置为零。指定一个与当前分配给账户的值相等的限制值。
- en: Per-hour counter resets do not affect the `MAX_USER_CONNECTIONS` limit.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 每小时计数重置不会影响`MAX_USER_CONNECTIONS`限制。
- en: All counts begin at zero when the server starts. Counts do not carry over through
    server restarts.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所有计数在服务器启动时都从零开始。计数不会在服务器重新启动时保留。
- en: 'For the `MAX_USER_CONNECTIONS` limit, an edge case can occur if the account
    currently has open the maximum number of connections permitted to it: A disconnect
    followed quickly by a connect can result in an error ([`ER_TOO_MANY_USER_CONNECTIONS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_too_many_user_connections)
    or [`ER_USER_LIMIT_REACHED`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_user_limit_reached))
    if the server has not fully processed the disconnect by the time the connect occurs.
    When the server finishes disconnect processing, another connection is once more
    permitted.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`MAX_USER_CONNECTIONS`限制，如果账户当前已经打开了允许的最大连接数，则可能出现一个边界情况：快速断开连接然后立即重新连接可能会导致错误（[`ER_TOO_MANY_USER_CONNECTIONS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_too_many_user_connections)或[`ER_USER_LIMIT_REACHED`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_user_limit_reached)），如果服务器在重新连接发生时还没有完全处理断开连接。当服务器完成断开连接处理后，又可以再次允许另一个连接。
