- en: 13.2.3 The TIME Type
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.2.3 TIME类型
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/time.html](https://dev.mysql.com/doc/refman/8.0/en/time.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/time.html](https://dev.mysql.com/doc/refman/8.0/en/time.html)
- en: MySQL retrieves and displays `TIME` values in *`'hh:mm:ss'`* format (or *`'hhh:mm:ss'`*
    format for large hours values). `TIME` values may range from `'-838:59:59'` to
    `'838:59:59'`. The hours part may be so large because the `TIME` type can be used
    not only to represent a time of day (which must be less than 24 hours), but also
    elapsed time or a time interval between two events (which may be much greater
    than 24 hours, or even negative).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL以*`'hh:mm:ss'`*格式（对于较大的小时值为*`'hhh:mm:ss'`*格式）检索和显示`TIME`值。`TIME`值的范围可以从`'-838:59:59'`到`'838:59:59'`。小时部分可能很大，因为`TIME`类型不仅可以用于表示一天中的时间（必须小于24小时），还可以表示经过的时间或两个事件之间的时间间隔（可能远大于24小时，甚至为负）。
- en: MySQL recognizes `TIME` values in several formats, some of which can include
    a trailing fractional seconds part in up to microseconds (6 digits) precision.
    See [Section 11.1.3, “Date and Time Literals”](date-and-time-literals.html "11.1.3 Date
    and Time Literals"). For information about fractional seconds support in MySQL,
    see [Section 13.2.6, “Fractional Seconds in Time Values”](fractional-seconds.html
    "13.2.6 Fractional Seconds in Time Values"). In particular, any fractional part
    in a value inserted into a `TIME` column is stored rather than discarded. With
    the fractional part included, the range for `TIME` values is `'-838:59:59.000000'`
    to `'838:59:59.000000'`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL以几种格式识别`TIME`值，其中一些可以包括高达微秒（6位数字）精度的尾随小数秒部分。请参阅[Section 11.1.3, “Date and
    Time Literals”](date-and-time-literals.html "11.1.3 Date and Time Literals")了解更多信息。有关MySQL中小数秒支持的信息，请参阅[Section 13.2.6,
    “Fractional Seconds in Time Values”](fractional-seconds.html "13.2.6 Fractional
    Seconds in Time Values")。特别是，插入到`TIME`列中的值中的任何小数部分都将被存储而不是丢弃。包括小数部分后，`TIME`值的范围为`'-838:59:59.000000'`到`'838:59:59.000000'`。
- en: Be careful about assigning abbreviated values to a `TIME` column. MySQL interprets
    abbreviated `TIME` values with colons as time of the day. That is, `'11:12'` means
    `'11:12:00'`, not `'00:11:12'`. MySQL interprets abbreviated values without colons
    using the assumption that the two rightmost digits represent seconds (that is,
    as elapsed time rather than as time of day). For example, you might think of `'1112'`
    and `1112` as meaning `'11:12:00'` (12 minutes after 11 o'clock), but MySQL interprets
    them as `'00:11:12'` (11 minutes, 12 seconds). Similarly, `'12'` and `12` are
    interpreted as `'00:00:12'`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在为`TIME`列分配缩写值时要小心。MySQL将带有冒号的缩写`TIME`值解释为当天的时间。也就是说，`'11:12'`表示`'11:12:00'`，而不是`'00:11:12'`。MySQL解释不带冒号的缩写值时，假设最右边的两位数字代表秒数（即经过的时间而不是当天的时间）。例如，你可能认为`'1112'`和`1112`表示`'11:12:00'`（11点12分后12分钟），但MySQL将其解释为`'00:11:12'`（11分钟12秒）。同样，`'12'`和`12`被解释为`'00:00:12'`。
- en: The only delimiter recognized between a time part and a fractional seconds part
    is the decimal point.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 时间部分和小数秒部分之间唯一识别的分隔符是小数点。
- en: By default, values that lie outside the `TIME` range but are otherwise valid
    are clipped to the closest endpoint of the range. For example, `'-850:00:00'`
    and `'850:00:00'` are converted to `'-838:59:59'` and `'838:59:59'`. Invalid `TIME`
    values are converted to `'00:00:00'`. Note that because `'00:00:00'` is itself
    a valid `TIME` value, there is no way to tell, from a value of `'00:00:00'` stored
    in a table, whether the original value was specified as `'00:00:00'` or whether
    it was invalid.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，超出`TIME`范围但仍然有效的值将被剪切到范围的最近端点。例如，`'-850:00:00'`和`'850:00:00'`将转换为`'-838:59:59'`和`'838:59:59'`。无效的`TIME`值将转换为`'00:00:00'`。请注意，因为`'00:00:00'`本身是一个有效的`TIME`值，所以无法从存储在表中的`'00:00:00'`的值中得知原始值是指定为`'00:00:00'`还是无效的。
- en: For more restrictive treatment of invalid `TIME` values, enable strict SQL mode
    to cause errors to occur. See [Section 7.1.11, “Server SQL Modes”](sql-mode.html
    "7.1.11 Server SQL Modes").
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要对无效的`TIME`值进行更严格的处理，请启用严格的SQL模式以导致错误发生。请参阅[Section 7.1.11, “Server SQL Modes”](sql-mode.html
    "7.1.11 Server SQL Modes")。
