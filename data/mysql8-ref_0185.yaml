- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-tips.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-tips.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-tips.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-tips.html)
- en: 6.5.1.6 mysql Client Tips
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 6.5.1.6 mysql 客户端技巧
- en: This section provides information about techniques for more effective use of
    [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") and about
    [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") operational
    behavior.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供有关更有效使用 [**mysql**](mysql.html "6.5.1 mysql — MySQL 命令行客户端") 和 [**mysql**](mysql.html
    "6.5.1 mysql — MySQL 命令行客户端") 操作行为的技术信息。
- en: '[Input-Line Editing](mysql-tips.html#mysql-input-editing "Input-Line Editing")'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[输入行编辑](mysql-tips.html#mysql-input-editing "输入行编辑")'
- en: '[Disabling Interactive History](mysql-tips.html#mysql-history "Disabling Interactive
    History")'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[禁用交互式历史记录](mysql-tips.html#mysql-history "禁用交互式历史记录")'
- en: '[Unicode Support on Windows](mysql-tips.html#windows-unicode-support "Unicode
    Support on Windows")'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Windows 上的 Unicode 支持](mysql-tips.html#windows-unicode-support "Windows 上的
    Unicode 支持")'
- en: '[Displaying Query Results Vertically](mysql-tips.html#vertical-query-results
    "Displaying Query Results Vertically")'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[垂直显示查询结果](mysql-tips.html#vertical-query-results "垂直显示查询结果")'
- en: '[Using Safe-Updates Mode (--safe-updates)](mysql-tips.html#safe-updates "Using
    Safe-Updates Mode (--safe-updates)")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用安全更新模式（--safe-updates）](mysql-tips.html#safe-updates "使用安全更新模式（--safe-updates）")'
- en: '[Disabling mysql Auto-Reconnect](mysql-tips.html#mysql-reconnect "Disabling
    mysql Auto-Reconnect")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[禁用 mysql 自动重新连接](mysql-tips.html#mysql-reconnect "禁用 mysql 自动重新连接")'
- en: '[mysql Client Parser Versus Server Parser](mysql-tips.html#mysql-parsers "mysql
    Client Parser Versus Server Parser")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[mysql 客户端解析器与服务器解析器](mysql-tips.html#mysql-parsers "mysql 客户端解析器与服务器解析器")'
- en: Input-Line Editing
  id: totrans-10
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 输入行编辑
- en: '[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") supports
    input-line editing, which enables you to modify the current input line in place
    or recall previous input lines. For example, the **left-arrow** and **right-arrow**
    keys move horizontally within the current input line, and the **up-arrow** and
    **down-arrow** keys move up and down through the set of previously entered lines.
    **Backspace** deletes the character before the cursor and typing new characters
    enters them at the cursor position. To enter the line, press **Enter**.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[**mysql**](mysql.html "6.5.1 mysql — MySQL 命令行客户端") 支持输入行编辑，使您能够就地修改当前输入行或回忆先前输入的行。例如，**左箭头**
    和 **右箭头** 键在当前输入行内水平移动，**上箭头** 和 **下箭头** 键在先前输入的行集合中上下移动。**退格键** 删除光标前的字符，输入新字符会在光标位置输入。要输入行，按
    **Enter** 键。'
- en: On Windows, the editing key sequences are the same as supported for command
    editing in console windows. On Unix, the key sequences depend on the input library
    used to build [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    (for example, the `libedit` or `readline` library).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，编辑键序列与控制台窗口中支持的命令编辑相同。在 Unix 上，键序列取决于用于构建 [**mysql**](mysql.html
    "6.5.1 mysql — MySQL 命令行客户端") 的输入库（例如，`libedit` 或 `readline` 库）。
- en: 'Documentation for the `libedit` and `readline` libraries is available online.
    To change the set of key sequences permitted by a given input library, define
    key bindings in the library startup file. This is a file in your home directory:
    `.editrc` for `libedit` and `.inputrc` for `readline`.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`libedit` 和 `readline` 库的文档可在线获取。要更改给定输入库允许的键序列集合，请在库启动文件中定义键绑定。这是位于您的主目录中的文件：对于
    `libedit` 是 `.editrc`，对于 `readline` 是 `.inputrc`。'
- en: 'For example, in `libedit`, **Control+W** deletes everything before the current
    cursor position and **Control+U** deletes the entire line. In `readline`, **Control+W**
    deletes the word before the cursor and **Control+U** deletes everything before
    the current cursor position. If [**mysql**](mysql.html "6.5.1 mysql — The MySQL
    Command-Line Client") was built using `libedit`, a user who prefers the `readline`
    behavior for these two keys can put the following lines in the `.editrc` file
    (creating the file if necessary):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在 `libedit` 中，**Control+W** 删除当前光标位置之前的所有内容，**Control+U** 删除整行。在 `readline`
    中，**Control+W** 删除光标前的单词，**Control+U** 删除当前光标位置之前的所有内容。如果 [**mysql**](mysql.html
    "6.5.1 mysql — MySQL 命令行客户端") 是使用 `libedit` 构建的，喜欢这两个键的 `readline` 行为的用户可以将以下行放入
    `.editrc` 文件中（必要时创建文件）：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To see the current set of key bindings, temporarily put a line that says only
    `bind` at the end of `.editrc`. [**mysql**](mysql.html "6.5.1 mysql — The MySQL
    Command-Line Client") shows the bindings when it starts.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看当前的键绑定集，请在`.editrc`的末尾暂时放置一行只写`bind`。[**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") 在启动时显示绑定。
- en: Disabling Interactive History
  id: totrans-17
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 禁用交互式历史记录
- en: The **up-arrow** key enables you to recall input lines from current and previous
    sessions. In cases where a console is shared, this behavior may be unsuitable.
    [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") supports
    disabling the interactive history partially or fully, depending on the host platform.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**上箭头**键可让您回忆当前和以前会话中的输入行。在共享控制台的情况下，此行为可能不合适。[**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client")支持根据主机平台部分或完全禁用交互式历史记录。'
- en: On Windows, the history is stored in memory. **Alt+F7** deletes all input lines
    stored in memory for the current history buffer. It also deletes the list of sequential
    numbers in front of the input lines displayed with **F7** and recalled (by number)
    with **F9**. New input lines entered after you press **Alt+F7** repopulate the
    current history buffer. Clearing the buffer does not prevent logging to the Windows
    Event Viewer, if the [`--syslog`](mysql-command-options.html#option_mysql_syslog)
    option was used to start [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client"). Closing the console window also clears the current history buffer.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上，历史记录存储在内存中。**Alt+F7**删除当前历史缓冲区中存储的所有输入行。它还删除了显示在输入行前面的顺序号列表，该列表可以通过**F7**显示，并通过**F9**按编号召回。按下**Alt+F7**后输入的新输入行将重新填充当前历史缓冲区。清除缓冲区不会阻止记录到Windows事件查看器，如果使用[`--syslog`](mysql-command-options.html#option_mysql_syslog)选项启动[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")。关闭控制台窗口也会清除当前历史缓冲区。
- en: To disable interactive history on Unix, first delete the `.mysql_history` file,
    if it exists (previous entries are recalled otherwise). Then start [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") with the `--histignore="*"` option
    to ignore all new input lines. To re-enable the recall (and logging) behavior,
    restart [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    without the option.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Unix上禁用交互式历史记录，首先删除`.mysql_history`文件（如果存在的话，否则将回忆以前的条目）。然后使用`--histignore="*"`选项启动[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")以忽略所有新的输入行。要重新启用回忆（和记录）行为，请重新启动[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")而不使用该选项。
- en: If you prevent the `.mysql_history` file from being created (see [Controlling
    the History File](mysql-logging.html#mysql-logging-history-file "Controlling the
    History File")) and use `--histignore="*"` to start the [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") client, the interactive history
    recall facility is disabled fully. Alternatively, if you omit the [`--histignore`](mysql-command-options.html#option_mysql_histignore)
    option, you can recall the input lines entered during the current session.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果阻止创建`.mysql_history`文件（请参见[控制历史文件](mysql-logging.html#mysql-logging-history-file
    "Controlling the History File")），并使用`--histignore="*"`启动[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端，则完全禁用交互式历史记录设施。或者，如果省略[`--histignore`](mysql-command-options.html#option_mysql_histignore)选项，则可以回忆在当前会话期间输入的输入行。
- en: Unicode Support on Windows
  id: totrans-22
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Windows上的Unicode支持
- en: Windows provides APIs based on UTF-16LE for reading from and writing to the
    console; the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    client for Windows is able to use these APIs. The Windows installer creates an
    item in the MySQL menu named `MySQL command line client - Unicode`. This item
    invokes the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    client with properties set to communicate through the console to the MySQL server
    using Unicode.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Windows提供基于UTF-16LE的API，用于从控制台读取和写入；Windows上的[**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client")客户端可以使用这些API。Windows安装程序在MySQL菜单中创建一个名为`MySQL
    command line client - Unicode`的项目。此项目调用[**mysql**](mysql.html "6.5.1 mysql — The
    MySQL Command-Line Client")客户端，并设置属性以通过控制台使用Unicode与MySQL服务器通信。
- en: 'To take advantage of this support manually, run [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") within a console that uses a compatible Unicode
    font and set the default character set to a Unicode character set that is supported
    for communication with the server:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要手动利用此支持，请在使用兼容Unicode字体的控制台中运行[**mysql**](mysql.html "6.5.1 mysql — The MySQL
    Command-Line Client")，并将默认字符集设置为与服务器通信支持的Unicode字符集：
- en: Open a console window.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个控制台窗口。
- en: Go to the console window properties, select the font tab, and choose Lucida
    Console or some other compatible Unicode font. This is necessary because console
    windows start by default using a DOS raster font that is inadequate for Unicode.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到控制台窗口属性，选择字体选项卡，并选择Lucida Console或其他兼容的Unicode字体。这是必要的，因为控制台窗口默认使用不适合Unicode的DOS点阵字体。
- en: Execute [**mysql.exe**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    with the [`--default-character-set=utf8mb4`](mysql-command-options.html#option_mysql_default-character-set)
    (or `utf8mb3`) option. This option is necessary because `utf16le` is one of the
    character sets that cannot be used as the client character set. See [Impermissible
    Client Character Sets](charset-connection.html#charset-connection-impermissible-client-charset
    "Impermissible Client Character Sets").
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行[**mysql.exe**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")时，使用[`--default-character-set=utf8mb4`](mysql-command-options.html#option_mysql_default-character-set)（或`utf8mb3`）选项。这个选项是必需的，因为`utf16le`是不能用作客户端字符集的字符集之一。参见[不允许的客户端字符集](charset-connection.html#charset-connection-impermissible-client-charset
    "Impermissible Client Character Sets")。
- en: With those changes, [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") uses the Windows APIs to communicate with the console using UTF-16LE,
    and communicate with the server using UTF-8\. (The menu item mentioned previously
    sets the font and character set as just described.)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些更改，[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")使用Windows
    API与控制台使用UTF-16LE进行通信，并使用UTF-8与服务器进行通信。（前面提到的菜单项设置了如上述的字体和字符集。）
- en: To avoid those steps each time you run [**mysql**](mysql.html "6.5.1 mysql —
    The MySQL Command-Line Client"), you can create a shortcut that invokes [**mysql.exe**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client"). The shortcut should set the console
    font to Lucida Console or some other compatible Unicode font, and pass the [`--default-character-set=utf8mb4`](mysql-command-options.html#option_mysql_default-character-set)
    (or `utf8mb3`) option to [**mysql.exe**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client").
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免每次运行[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")都要执行这些步骤，你可以创建一个快捷方式来调用[**mysql.exe**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")。这个快捷方式应该将控制台字体设置为Lucida Console或其他兼容的Unicode字体，并传递[`--default-character-set=utf8mb4`](mysql-command-options.html#option_mysql_default-character-set)（或`utf8mb3`）选项给[**mysql.exe**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")。
- en: 'Alternatively, create a shortcut that only sets the console font, and set the
    character set in the `[mysql]` group of your `my.ini` file:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，创建一个仅设置控制台字体的快捷方式，并在你的`my.ini`文件的`[mysql]`组中设置字符集：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Displaying Query Results Vertically
  id: totrans-32
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 垂直显示查询结果
- en: 'Some query results are much more readable when displayed vertically, instead
    of in the usual horizontal table format. Queries can be displayed vertically by
    terminating the query with \G instead of a semicolon. For example, longer text
    values that include newlines often are much easier to read with vertical output:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一些查询结果以垂直显示比通常的水平表格格式更易读。可以通过在查询末尾使用\G而不是分号来垂直显示查询。例如，包含换行符的较长文本值通常使用垂直输出更容易阅读：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Using Safe-Updates Mode (--safe-updates)
  id: totrans-35
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 使用安全更新模式（--safe-updates）
- en: For beginners, a useful startup option is [`--safe-updates`](mysql-command-options.html#option_mysql_safe-updates)
    (or [`--i-am-a-dummy`](mysql-command-options.html#option_mysql_safe-updates),
    which has the same effect). Safe-updates mode is helpful for cases when you might
    have issued an [`UPDATE`](update.html "15.2.17 UPDATE Statement") or [`DELETE`](delete.html
    "15.2.2 DELETE Statement") statement but forgotten the `WHERE` clause indicating
    which rows to modify. Normally, such statements update or delete all rows in the
    table. With [`--safe-updates`](mysql-command-options.html#option_mysql_safe-updates),
    you can modify rows only by specifying the key values that identify them, or a
    `LIMIT` clause, or both. This helps prevent accidents. Safe-updates mode also
    restricts [`SELECT`](select.html "15.2.13 SELECT Statement") statements that produce
    (or are estimated to produce) very large result sets.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于初学者，一个有用的启动选项是[`--safe-updates`](mysql-command-options.html#option_mysql_safe-updates)（或[`--i-am-a-dummy`](mysql-command-options.html#option_mysql_safe-updates)，效果相同）。安全更新模式对于可能已经发出[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")或[`DELETE`](delete.html "15.2.2 DELETE Statement")语句但忘记在`WHERE`子句中指定要修改的行时很有帮助。通常，这些语句会更新或删除表中的所有行。使用[`--safe-updates`](mysql-command-options.html#option_mysql_safe-updates)，您只能通过指定标识它们的键值、`LIMIT`子句或两者来修改行。这有助于防止意外发生。安全更新模式还限制产生（或估计产生）非常大结果集的[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句。
- en: 'The [`--safe-updates`](mysql-command-options.html#option_mysql_safe-updates)
    option causes [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    to execute the following statement when it connects to the MySQL server, to set
    the session values of the [`sql_safe_updates`](server-system-variables.html#sysvar_sql_safe_updates),
    [`sql_select_limit`](server-system-variables.html#sysvar_sql_select_limit), and
    [`max_join_size`](server-system-variables.html#sysvar_max_join_size) system variables:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`--safe-updates`](mysql-command-options.html#option_mysql_safe-updates)选项在连接到MySQL服务器时，会让[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")执行以下语句，以设置[`sql_safe_updates`](server-system-variables.html#sysvar_sql_safe_updates)、[`sql_select_limit`](server-system-variables.html#sysvar_sql_select_limit)和[`max_join_size`](server-system-variables.html#sysvar_max_join_size)系统变量的会话值：'
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement affects statement processing as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")语句会影响语句处理如下：'
- en: 'Enabling [`sql_safe_updates`](server-system-variables.html#sysvar_sql_safe_updates)
    causes [`UPDATE`](update.html "15.2.17 UPDATE Statement") and [`DELETE`](delete.html
    "15.2.2 DELETE Statement") statements to produce an error if they do not specify
    a key constraint in the `WHERE` clause, or provide a `LIMIT` clause, or both.
    For example:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用[`sql_safe_updates`](server-system-variables.html#sysvar_sql_safe_updates)会导致[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")和[`DELETE`](delete.html "15.2.2 DELETE Statement")语句如果在`WHERE`子句中未指定关键约束，或提供`LIMIT`子句，或两者都没有，则产生错误。例如：
- en: '[PRE4]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Setting [`sql_select_limit`](server-system-variables.html#sysvar_sql_select_limit)
    to 1,000 causes the server to limit all [`SELECT`](select.html "15.2.13 SELECT
    Statement") result sets to 1,000 rows unless the statement includes a `LIMIT`
    clause.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将[`sql_select_limit`](server-system-variables.html#sysvar_sql_select_limit)设置为1,000会导致服务器将所有[`SELECT`](select.html
    "15.2.13 SELECT Statement")结果集限制为1,000行，除非语句包含`LIMIT`子句。
- en: Setting [`max_join_size`](server-system-variables.html#sysvar_max_join_size)
    to 1,000,000 causes multiple-table [`SELECT`](select.html "15.2.13 SELECT Statement")
    statements to produce an error if the server estimates it must examine more than
    1,000,000 row combinations.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将[`max_join_size`](server-system-variables.html#sysvar_max_join_size)设置为1,000,000会导致多表[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句在服务器估计必须检查超过1,000,000行组合时产生错误。
- en: 'To specify result set limits different from 1,000 and 1,000,000, you can override
    the defaults by using the [`--select-limit`](mysql-command-options.html#option_mysql_select-limit)
    and [`--max-join-size`](mysql-command-options.html#option_mysql_max-join-size)
    options when you invoke [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client"):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 若要指定不同于1,000和1,000,000的结果集限制，可以在调用[**mysql**](mysql.html "6.5.1 mysql — The
    MySQL Command-Line Client")时使用[`--select-limit`](mysql-command-options.html#option_mysql_select-limit)和[`--max-join-size`](mysql-command-options.html#option_mysql_max-join-size)选项覆盖默认值：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'It is possible for [`UPDATE`](update.html "15.2.17 UPDATE Statement") and [`DELETE`](delete.html
    "15.2.2 DELETE Statement") statements to produce an error in safe-updates mode
    even with a key specified in the `WHERE` clause, if the optimizer decides not
    to use the index on the key column:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在`WHERE`子句中指定了关键列，如果优化器决定不使用关键列上的索引，则[`UPDATE`](update.html "15.2.17 UPDATE
    Statement")和[`DELETE`](delete.html "15.2.2 DELETE Statement")语句在安全更新模式下也可能产生错误：
- en: Range access on the index cannot be used if memory usage exceeds that permitted
    by the [`range_optimizer_max_mem_size`](server-system-variables.html#sysvar_range_optimizer_max_mem_size)
    system variable. The optimizer then falls back to a table scan. See [Limiting
    Memory Use for Range Optimization](range-optimization.html#range-optimization-memory-use
    "Limiting Memory Use for Range Optimization").
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果内存使用超过[`range_optimizer_max_mem_size`](server-system-variables.html#sysvar_range_optimizer_max_mem_size)系统变量允许的范围，则无法使用索引上的范围访问。优化器然后退回到表扫描。请参阅[限制范围优化的内存使用](range-optimization.html#range-optimization-memory-use
    "Limiting Memory Use for Range Optimization")。
- en: If key comparisons require type conversion, the index may not be used (see [Section 10.3.1,
    “How MySQL Uses Indexes”](mysql-indexes.html "10.3.1 How MySQL Uses Indexes")).
    Suppose that an indexed string column `c1` is compared to a numeric value using
    `WHERE c1 = 2222`. For such comparisons, the string value is converted to a number
    and the operands are compared numerically (see [Section 14.3, “Type Conversion
    in Expression Evaluation”](type-conversion.html "14.3 Type Conversion in Expression
    Evaluation")), preventing use of the index. If safe-updates mode is enabled, an
    error occurs.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果键比较需要类型转换，则可能不使用索引（参见[第10.3.1节，“MySQL如何使用索引”](mysql-indexes.html "10.3.1 How
    MySQL Uses Indexes")）。假设一个索引的字符串列`c1`与数值`2222`进行比较，使用`WHERE c1 = 2222`。对于这样的比较，字符串值会转换为数字，然后进行数值比较（参见[第14.3节，“表达式求值中的类型转换”](type-conversion.html
    "14.3 Type Conversion in Expression Evaluation")），从而阻止使用索引。如果启用了安全更新模式，将会产生错误。
- en: 'As of MySQL 8.0.13, safe-updates mode also includes these behaviors:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.13，安全更新模式还包括以下行为：
- en: '[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement") with [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") and [`DELETE`](delete.html "15.2.2 DELETE Statement")
    statements does not produce safe-updates errors. This enables use of [`EXPLAIN`](explain.html
    "15.8.2 EXPLAIN Statement") plus [`SHOW WARNINGS`](show-warnings.html "15.7.7.42 SHOW
    WARNINGS Statement") to see why an index is not used, which can be helpful in
    cases such as when a [`range_optimizer_max_mem_size`](server-system-variables.html#sysvar_range_optimizer_max_mem_size)
    violation or type conversion occurs and the optimizer does not use an index even
    though a key column was specified in the `WHERE` clause.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`UPDATE`](update.html "15.2.17 UPDATE Statement")和[`DELETE`](delete.html "15.2.2 DELETE
    Statement")语句的[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")不会产生安全更新错误。这使得可以使用[`EXPLAIN`](explain.html
    "15.8.2 EXPLAIN Statement")加上[`SHOW WARNINGS`](show-warnings.html "15.7.7.42 SHOW
    WARNINGS Statement")来查看为什么不使用索引，这在出现[`range_optimizer_max_mem_size`](server-system-variables.html#sysvar_range_optimizer_max_mem_size)违规或类型转换并且优化器没有使用索引的情况下非常有帮助，即使在`WHERE`子句中指定了关键列。'
- en: When a safe-updates error occurs, the error message includes the first diagnostic
    that was produced, to provide information about the reason for failure. For example,
    the message may indicate that the [`range_optimizer_max_mem_size`](server-system-variables.html#sysvar_range_optimizer_max_mem_size)
    value was exceeded or type conversion occurred, either of which can preclude use
    of an index.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当发生安全更新错误时，错误消息包含首次生成的诊断信息，以提供关于失败原因的信息。例如，消息可能指出[`range_optimizer_max_mem_size`](server-system-variables.html#sysvar_range_optimizer_max_mem_size)值超过限制或发生类型转换，这两种情况都可能导致无法使用索引。
- en: For multiple-table deletes and updates, an error is produced with safe updates
    enabled only if any target table uses a table scan.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于多表删除和更新，仅当任何目标表使用表扫描时，启用安全更新时才会产生错误。
- en: Disabling mysql Auto-Reconnect
  id: totrans-53
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 禁用mysql自动重新连接
- en: 'If the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    client loses its connection to the server while sending a statement, it immediately
    and automatically tries to reconnect once to the server and send the statement
    again. However, even if [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") succeeds in reconnecting, your first connection has ended and all your
    previous session objects and settings are lost: temporary tables, the autocommit
    mode, and user-defined and session variables. Also, any current transaction rolls
    back. This behavior may be dangerous for you, as in the following example where
    the server was shut down and restarted between the first and second statements
    without you knowing it:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")客户端在发送语句时失去与服务器的连接，它会立即自动尝试重新连接到服务器并重新发送语句。然而，即使[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")成功重新连接，你的第一个连接已经结束，所有之前的会话对象和设置都会丢失：临时表、自动提交模式以及用户定义和会话变量。此外，任何当前事务都会回滚。这种行为可能对你很危险，就像以下示例中，在第一条和第二条语句之间服务器被关闭并重新启动而你并不知情的情况下：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `@a` user variable has been lost with the connection, and after the reconnection
    it is undefined. If it is important to have [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") terminate with an error if the connection has
    been lost, you can start the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") client with the [`--skip-reconnect`](mysql-command-options.html#option_mysql_reconnect)
    option.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`@a`用户变量在连接断开后已丢失，并在重新连接后未定义。如果重要的是在连接丢失时让[**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client")以错误终止，可以使用[`--skip-reconnect`](mysql-command-options.html#option_mysql_reconnect)选项启动[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端。'
- en: For more information about auto-reconnect and its effect on state information
    when a reconnection occurs, see [Automatic Reconnection Control](/doc/c-api/8.0/en/c-api-auto-reconnect.html).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 有关自动重新连接及其在重新连接发生时对状态信息的影响的更多信息，请参阅[Automatic Reconnection Control](/doc/c-api/8.0/en/c-api-auto-reconnect.html)。
- en: mysql Client Parser Versus Server Parser
  id: totrans-58
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: mysql客户端解析器与服务器解析器
- en: 'The [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") client
    uses a parser on the client side that is not a duplicate of the complete parser
    used by the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") server
    on the server side. This can lead to differences in treatment of certain constructs.
    Examples:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")客户端在客户端端使用一个解析器，这个解析器不是[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")服务器在服务器端使用的完整解析器的副本。这可能导致对某些结构的处理方式不同。例如：'
- en: The server parser treats strings delimited by `"` characters as identifiers
    rather than as plain strings if the [`ANSI_QUOTES`](sql-mode.html#sqlmode_ansi_quotes)
    SQL mode is enabled.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果启用了[`ANSI_QUOTES`](sql-mode.html#sqlmode_ansi_quotes) SQL 模式，服务器解析器会将由`"`字符界定的字符串视为标识符而不是普通字符串。
- en: The [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") client
    parser does not take the `ANSI_QUOTES` SQL mode into account. It treats strings
    delimited by `"`, `'`, and ``` characters the same, regardless of whether [`ANSI_QUOTES`](sql-mode.html#sqlmode_ansi_quotes)
    is enabled.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")客户端解析器不考虑`ANSI_QUOTES`
    SQL 模式。它会将由`"`, `''`, 和```字符界定的字符串视为相同，无论是否启用了[`ANSI_QUOTES`](sql-mode.html#sqlmode_ansi_quotes)。'
- en: Within `/*! ... */` and `/*+ ... */` comments, the [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") client parser interprets short-form [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") commands. The server parser does
    not interpret them because these commands have no meaning on the server side.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`/*! ... */`和`/*+ ... */`注释中，[**mysql**](mysql.html "6.5.1 mysql — The MySQL
    Command-Line Client")客户端解析器会解释简短形式的[**mysql**](mysql.html "6.5.1 mysql — The MySQL
    Command-Line Client")命令。服务器解析器不会解释它们，因为这些命令在服务器端没有意义。
- en: If it is desirable for [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") not to interpret short-form commands within comments, a partial workaround
    is to use the [`--binary-mode`](mysql-command-options.html#option_mysql_binary-mode)
    option, which causes all [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") commands to be disabled except `\C` and `\d` in noninteractive mode (for
    input piped to [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    or loaded using the `source` command).
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果希望[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")不解释注释中的简短命令，部分解决方法是使用[`--binary-mode`](mysql-command-options.html#option_mysql_binary-mode)选项，该选项会导致所有[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")命令在非交互模式下被禁用，除了`\C`和`\d`（对于通过管道输入到[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")或使用`source`命令加载的输入）。
