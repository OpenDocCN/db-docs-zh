- en: 12.1 Character Sets and Collations in General
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12.1 一般字符集和排序规则
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-general.html](https://dev.mysql.com/doc/refman/8.0/en/charset-general.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/charset-general.html](https://dev.mysql.com/doc/refman/8.0/en/charset-general.html)
- en: A character set is a set of symbols and encodings. A collation is a set of rules
    for comparing characters in a character set. Let's make the distinction clear
    with an example of an imaginary character set.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 字符集是一组符号和编码。排序规则是一组比较字符的规则。让我们通过一个想象中的字符集的例子来明确区分。
- en: 'Suppose that we have an alphabet with four letters: `A`, `B`, `a`, `b`. We
    give each letter a number: `A` = 0, `B` = 1, `a` = 2, `b` = 3\. The letter `A`
    is a symbol, the number 0 is the *encoding* for `A`, and the combination of all
    four letters and their encodings is a *character set*.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个有四个字母的字母表：`A`、`B`、`a`、`b`。我们给每个字母一个数字：`A`=0，`B`=1，`a`=2，`b`=3。字母`A`是一个符号，数字0是`A`的*编码*，所有四个字母及其编码的组合是一个*字符集*。
- en: 'Suppose that we want to compare two string values, `A` and `B`. The simplest
    way to do this is to look at the encodings: 0 for `A` and 1 for `B`. Because 0
    is less than 1, we say `A` is less than `B`. What we''ve just done is apply a
    collation to our character set. The collation is a set of rules (only one rule
    in this case): “compare the encodings.” We call this simplest of all possible
    collations a binary collation.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想比较两个字符串值，`A`和`B`。最简单的方法是查看编码：`A`为0，`B`为1。因为0小于1，我们说`A`小于`B`。我们刚刚对我们的字符集应用了排序规则。排序规则是一组规则（在这种情况下只有一条规则）：“比较编码”。我们称这种可能的排序规则为二进制排序规则。
- en: 'But what if we want to say that the lowercase and uppercase letters are equivalent?
    Then we would have at least two rules: (1) treat the lowercase letters `a` and
    `b` as equivalent to `A` and `B`; (2) then compare the encodings. We call this
    a case-insensitive collation. It is a little more complex than a binary collation.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果我们想要说小写字母和大写字母是等价的呢？那么我们至少需要两条规则：(1) 将小写字母`a`和`b`视为等价于`A`和`B`；(2) 然后比较编码。我们称之为不区分大小写的排序规则。它比二进制排序规则稍微复杂一些。
- en: 'In real life, most character sets have many characters: not just `A` and `B`
    but whole alphabets, sometimes multiple alphabets or eastern writing systems with
    thousands of characters, along with many special symbols and punctuation marks.
    Also in real life, most collations have many rules, not just for whether to distinguish
    lettercase, but also for whether to distinguish accents (an “accent” is a mark
    attached to a character as in German `Ö`), and for multiple-character mappings
    (such as the rule that `Ö` = `OE` in one of the two German collations).'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实生活中，大多数字符集有许多字符：不仅有`A`和`B`，还有整个字母表，有时甚至有多个字母表或拥有成千上万个字符的东方文字系统，以及许多特殊符号和标点符号。同样在现实生活中，大多数排序规则有许多规则，不仅用于区分大小写，还用于区分重音（“重音”是附加到字符上的标记，如德语`Ö`），以及多字符映射（例如在两个德语排序规则中，`Ö`=`OE`的规则）。
- en: 'MySQL can do these things for you:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL可以为您执行以下操作：
- en: Store strings using a variety of character sets.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用各种字符集存储字符串。
- en: Compare strings using a variety of collations.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用各种排序规则比较字符串。
- en: Mix strings with different character sets or collations in the same server,
    the same database, or even the same table.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在同一服务器、同一数据库甚至同一表中混合不同字符集或排序规则的字符串。
- en: Enable specification of character set and collation at any level.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许在任何级别指定字符集和排序规则。
- en: To use these features effectively, you must know what character sets and collations
    are available, how to change the defaults, and how they affect the behavior of
    string operators and functions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要有效地使用这些功能，您必须了解可用的字符集和排序规则，如何更改默认设置以及它们如何影响字符串运算符和函数的行为。
