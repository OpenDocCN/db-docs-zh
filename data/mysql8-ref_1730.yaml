- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-online-add-node-remarks.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-online-add-node-remarks.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-online-add-node-remarks.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-online-add-node-remarks.html)
- en: '25.6.7.1 Adding NDB Cluster Data Nodes Online: General Issues'
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 25.6.7.1 添加 NDB 集群数据节点在线：一般问题
- en: This section provides general information about the behavior of and current
    limitations in adding NDB Cluster nodes online.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供关于在线添加 NDB 集群节点的行为和当前限制的一般信息。
- en: '**Redistribution of Data. ** The ability to add new nodes online includes a
    means to reorganize [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") table data and indexes so that they are distributed across all data nodes,
    including the new ones, by means of the [`ALTER TABLE ... REORGANIZE PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations") statement. Table reorganization of
    both in-memory and Disk Data tables is supported. This redistribution does not
    currently include unique indexes (only ordered indexes are redistributed).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据重新分布。** 添加新节点的在线功能包括通过[`ALTER TABLE ... REORGANIZE PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations")语句重新组织[`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0")表数据和索引，使其分布在所有数据节点上，包括新节点。支持内存和磁盘数据表的表重组。此重新分布目前不包括唯一索引（只重新分布有序索引）。'
- en: The redistribution for [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB
    Cluster 8.0") tables already existing before the new data nodes were added is
    not automatic, but can be accomplished using simple SQL statements in [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") or another MySQL client application.
    However, all data and indexes added to tables created after a new node group has
    been added are distributed automatically among all cluster data nodes, including
    those added as part of the new node group.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加新数据节点之前已存在的[`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0")表的重新分布不是自动的，但可以通过[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client")或其他 MySQL 客户端应用程序中的简单 SQL 语句来完成。但是，在添加新节点组后创建的表中添加的所有数据和索引会自动分布在所有集群数据节点中，包括作为新节点组的一部分添加的节点。
- en: '**Partial starts. ** It is possible to add a new node group without all of
    the new data nodes being started. It is also possible to add a new node group
    to a degraded cluster—that is, a cluster that is only partially started, or where
    one or more data nodes are not running. In the latter case, the cluster must have
    enough nodes running to be viable before the new node group can be added.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**部分启动。** 可以添加一个新节点组，而不是所有新数据节点都已启动。也可以将新节点组添加到降级集群中，即只部分启动的集群，或其中一个或多个数据节点未运行。在后一种情况下，必须有足够的节点运行以使集群可行，然后才能添加新节点组。'
- en: '**Effects on ongoing operations. ** Normal DML operations using NDB Cluster
    data are not prevented by the creation or addition of a new node group, or by
    table reorganization. However, it is not possible to perform DDL concurrently
    with table reorganization—that is, no other DDL statements can be issued while
    an [`ALTER TABLE ... REORGANIZE PARTITION`](alter-table.html "15.1.9 ALTER TABLE
    Statement") statement is executing. In addition, during the execution of `ALTER
    TABLE ... REORGANIZE PARTITION` (or the execution of any other DDL statement),
    it is not possible to restart cluster data nodes.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**对正在进行的操作的影响。** 使用 NDB 集群数据的正常 DML 操作不会受到新节点组的创建或添加，或表重组的影响。但是，在表重组期间无法同时执行
    DDL，也就是说，在执行[`ALTER TABLE ... REORGANIZE PARTITION`](alter-table.html "15.1.9
    ALTER TABLE Statement")语句时无法发出其他 DDL 语句。此外，在执行`ALTER TABLE ... REORGANIZE PARTITION`（或执行任何其他
    DDL 语句）期间，无法重新启动集群数据节点。'
- en: '**Failure handling. ** Failures of data nodes during node group creation and
    table reorganization are handled as shown in the following table:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**故障处理。** 在节点组创建和表重组期间数据节点的故障处理如下表所示：'
- en: '**Table 25.66 Data node failure handling during node group creation and table
    reorganization**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 25.66 节点组创建和表重组期间数据节点故障处理**'
- en: '| Failure during | Failure in “Old” data node | Failure in “New” data node
    | System Failure |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| 在期间发生故障 | 在“旧”数据节点中发生故障 | 在“新”数据节点中发生故障 | 系统故障 |'
- en: '| Node group creation |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| 节点组创建 |'
- en: '**If a node other than the master fails: ** The creation of the node group
    is always rolled forward.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果非主节点失败：** 节点组的创建总是向前滚动。'
- en: '**If the master fails: **'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果主节点失败：**'
- en: '**If the internal commit point has been reached: ** The creation of the node
    group is rolled forward.'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果内部提交点已经达到：** 节点组的创建将被前滚。'
- en: '**If the internal commit point has not yet been reached. ** The creation of
    the node group is rolled back'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果内部提交点尚未达到。** 节点组的创建将被回滚。'
- en: '|'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '**If a node other than the master fails: ** The creation of the node group
    is always rolled forward.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果除主节点之外的节点失败：** 节点组的创建总是被前滚。'
- en: '**If the master fails: **'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果主节点失败：**'
- en: '**If the internal commit point has been reached: ** The creation of the node
    group is rolled forward.'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果内部提交点已经达到：** 节点组的创建将被前滚。'
- en: '**If the internal commit point has not yet been reached. ** The creation of
    the node group is rolled back'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果内部提交点尚未达到。** 节点组的创建将被回滚。'
- en: '|'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '**If the execution of CREATE NODEGROUP has reached the internal commit point: **
    When restarted, the cluster includes the new node group. Otherwise it without.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果执行CREATE NODEGROUP已经达到内部提交点：** 当重新启动时，集群将包括新的节点组。否则不包括。'
- en: '**If the execution of CREATE NODEGROUP has not yet reached the internal commit
    point: ** When restarted, the cluster does not include the new node group.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果执行CREATE NODEGROUP尚未达到内部提交点：** 当重新启动时，集群不包括新的节点组。'
- en: '|'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Table reorganization |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 表重新组织 |'
- en: '**If a node other than the master fails: ** The table reorganization is always
    rolled forward.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果除主节点之外的节点失败：** 表重新组织总是被前滚。'
- en: '**If the master fails: **'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果主节点失败：**'
- en: '**If the internal commit point has been reached: ** The table reorganization
    is rolled forward.'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果内部提交点已经达到：** 表重新组织将被前滚。'
- en: '**If the internal commit point has not yet been reached. ** The table reorganization
    is rolled back.'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果内部提交点尚未达到。** 表重新组织将被回滚。'
- en: '|'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '**If a node other than the master fails: ** The table reorganization is always
    rolled forward.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果除主节点之外的节点失败：** 表重新组织总是被前滚。'
- en: '**If the master fails: **'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果主节点失败：**'
- en: '**If the internal commit point has been reached: ** The table reorganization
    is rolled forward.'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果内部提交点已经达到：** 表重新组织将被前滚。'
- en: '**If the internal commit point has not yet been reached. ** The table reorganization
    is rolled back.'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果内部提交点尚未达到。** 表重新组织将被回滚。'
- en: '|'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '**If the execution of an ALTER TABLE ... REORGANIZE PARTITION statement has
    reached the internal commit point: ** When the cluster is restarted, the data
    and indexes belonging to *`table`* are distributed using the “new” data nodes.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果执行ALTER TABLE ... REORGANIZE PARTITION语句已经达到内部提交点：** 当集群重新启动时，属于*`table`*的数据和索引将使用“新”数据节点进行分发。'
- en: '**If the execution of an ALTER TABLE ... REORGANIZE PARTITION statement has
    not yet reached the internal commit point: ** When the cluster is restarted, the
    data and indexes belonging to *`table`* are distributed using only the “old” data
    nodes.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**如果执行ALTER TABLE ... REORGANIZE PARTITION语句尚未达到内部提交点：** 当集群重新启动时，属于*`table`*的数据和索引将仅使用“旧”数据节点进行分发。'
- en: '|'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '**Dropping node groups. ** The [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client") client supports a [`DROP
    NODEGROUP`](mysql-cluster-mgm-client-commands.html#ndbclient-drop-nodegroup) command,
    but it is possible to drop a node group only when no data nodes in the node group
    contain any data. Since there is currently no way to “empty” a specific data node
    or node group, this command works only the following two cases:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**删除节点组。** [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm
    — The NDB Cluster Management Client")客户端支持[`DROP NODEGROUP`](mysql-cluster-mgm-client-commands.html#ndbclient-drop-nodegroup)命令，但只有当节点组中的数据节点不包含任何数据时才能删除节点组。由于目前没有办法“清空”特定数据节点或节点组，此命令仅适用于以下两种情况：'
- en: After issuing [`CREATE NODEGROUP`](mysql-cluster-mgm-client-commands.html#ndbclient-create-nodegroup)
    in the [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — The
    NDB Cluster Management Client") client, but before issuing any [`ALTER TABLE ...
    REORGANIZE PARTITION`](alter-table.html "15.1.9 ALTER TABLE Statement") statements
    in the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") client.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — The NDB
    Cluster Management Client")客户端中发出[`CREATE NODEGROUP`](mysql-cluster-mgm-client-commands.html#ndbclient-create-nodegroup)命令之后，在[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端中发出任何[`ALTER TABLE ... REORGANIZE
    PARTITION`](alter-table.html "15.1.9 ALTER TABLE Statement")语句之前。
- en: After dropping all [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") tables using [`DROP TABLE`](drop-table.html "15.1.32 DROP TABLE Statement").
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用 [`DROP TABLE`](drop-table.html "15.1.32 DROP TABLE Statement") 删除所有 [`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") 表之后。
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    does not work for this purpose because the data nodes continue to store the table
    definitions.'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    不适用于此目的，因为数据节点继续存储表定义。'
