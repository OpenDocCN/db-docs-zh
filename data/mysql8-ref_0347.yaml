- en: 7.9.4 The DBUG Package
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7.9.4 `DBUG` 包
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/dbug-package.html](https://dev.mysql.com/doc/refman/8.0/en/dbug-package.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/dbug-package.html](https://dev.mysql.com/doc/refman/8.0/en/dbug-package.html)
- en: The MySQL server and most MySQL clients are compiled with the `DBUG` package
    originally created by Fred Fish. When you have configured MySQL for debugging,
    this package makes it possible to get a trace file of what the program is doing.
    See [Section 7.9.1.2, “Creating Trace Files”](making-trace-files.html "7.9.1.2 Creating
    Trace Files").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 服务器和大多数 MySQL 客户端都是使用由 Fred Fish 最初创建的 `DBUG` 包编译的。当您为调试配置 MySQL 时，此包使得可以获得程序正在执行的跟踪文件。参见
    [Section 7.9.1.2, “Creating Trace Files”](making-trace-files.html "7.9.1.2 Creating
    Trace Files")。
- en: This section summarizes the argument values that you can specify in debug options
    on the command line for MySQL programs that have been built with debugging support.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节总结了在使用带有调试支持的 MySQL 程序时可以在命令行上指定的调试选项的参数值。
- en: 'The `DBUG` package can be used by invoking a program with the `--debug[=*`debug_options`*]`
    or `-# [*`debug_options`*]` option. If you specify the `--debug` or `-#` option
    without a *`debug_options`* value, most MySQL programs use a default value. The
    server default is `d:t:i:o,/tmp/mysqld.trace` on Unix and `d:t:i:O,\mysqld.trace`
    on Windows. The effect of this default is:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`DBUG` 包可以通过使用 `--debug[=*`debug_options`*]` 或 `-# [*`debug_options`*]` 选项来调用程序。如果您在不指定
    *`debug_options`* 值的情况下指定 `--debug` 或 `-#` 选项，大多数 MySQL 程序会使用默认值。在 Unix 上，服务器默认值为
    `d:t:i:o,/tmp/mysqld.trace`，在 Windows 上为 `d:t:i:O,\mysqld.trace`。这个默认值的效果是：'
- en: '`d`: Enable output for all debug macros'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`d`: 启用所有调试宏的输出'
- en: '`t`: Trace function calls and exits'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t`: 跟踪函数调用和退出'
- en: '`i`: Add PID to output lines'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`i`: 在输出行中添加 PID'
- en: '`o,/tmp/mysqld.trace`, `O,\mysqld.trace`: Set the debug output file.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`o,/tmp/mysqld.trace`, `O,\mysqld.trace`: 设置调试输出文件。'
- en: Most client programs use a default *`debug_options`* value of `d:t:o,/tmp/*`program_name`*.trace`,
    regardless of platform.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数客户端程序使用默认的 *`debug_options`* 值为 `d:t:o,/tmp/*`program_name`*.trace`，无论平台如何。
- en: 'Here are some example debug control strings as they might be specified on a
    shell command line:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些示例调试控制字符串，如在 shell 命令行上指定的方式：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server"), it is also
    possible to change `DBUG` settings at runtime by setting the [`debug`](server-system-variables.html#sysvar_debug)
    system variable. This variable has global and session values:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")，还可以通过设置 [`debug`](server-system-variables.html#sysvar_debug)
    系统变量在运行时更改 `DBUG` 设置。此变量具有全局和会话值：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Changing the global [`debug`](server-system-variables.html#sysvar_debug) value
    requires privileges sufficient to set global system variables. Changing the session
    [`debug`](server-system-variables.html#sysvar_debug) value requires privileges
    sufficient to set restricted session system variables. See [Section 7.1.9.1, “System
    Variable Privileges”](system-variable-privileges.html "7.1.9.1 System Variable
    Privileges").
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 更改全局 [`debug`](server-system-variables.html#sysvar_debug) 值需要足够设置全局系统变量的权限。更改会话
    [`debug`](server-system-variables.html#sysvar_debug) 值需要足够设置受限会话系统变量的权限。参见 [Section 7.1.9.1,
    “System Variable Privileges”](system-variable-privileges.html "7.1.9.1 System
    Variable Privileges")。
- en: 'The *`debug_options`* value is a sequence of colon-separated fields:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*`debug_options`* 值是一个以冒号分隔的字段序列：'
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Each field within the value consists of a mandatory flag character, optionally
    preceded by a `+` or `-` character, and optionally followed by a comma-separated
    list of modifiers:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 值内的每个字段由一个必需的标志字符组成，可选地前面跟着一个 `+` 或 `-` 字符，并可选地后跟着一个逗号分隔的修饰符列表：
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The following table describes the permitted flag characters. Unrecognized flag
    characters are silently ignored.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表描述了允许的标志字符。未识别的标志字符会被静默忽略。
- en: '| Flag | Description |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 标志 | 描述 |'
- en: '| `d` | Enable output from `DBUG_*`XXX`*` macros for the current state. May
    be followed by a list of keywords, which enables output only for the `DBUG` macros
    with that keyword. An empty list of keywords enables output for all macros.In
    MySQL, common debug macro keywords to enable are `enter`, `exit`, `error`, `warning`,
    `info`, and `loop`. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `d` | 启用当前状态下 `DBUG_*`XXX`*` 宏的输出。可以跟随一个关键字列表，仅为具有该关键字的 `DBUG` 宏启用输出。空关键字列表为所有宏启用输出。在
    MySQL 中，常见的调试宏关键字包括 `enter`、`exit`、`error`、`warning`、`info` 和 `loop`。 |'
- en: '| `D` | Delay after each debugger output line. The argument is the delay, in
    tenths of seconds, subject to machine capabilities. For example, `D,20` specifies
    a delay of two seconds. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `D` | 每个调试器输出行后延迟。参数是延迟时间，以秒为单位，取决于机器能力。例如，`D,20`指定了两秒的延迟。'
- en: '| `f` | Limit debugging, tracing, and profiling to the list of named functions.
    An empty list enables all functions. The appropriate `d` or `t` flags must still
    be given; this flag only limits their actions if they are enabled. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `f` | 将调试、跟踪和性能分析限制为命名函数列表。空列表启用所有函数。仍然必须给出适当的`d`或`t`标志；此标志仅限制它们的操作（如果它们已启用）。'
- en: '| `F` | Identify the source file name for each line of debug or trace output.
    |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `F` | 为每行调试或跟踪输出标识源文件名。 |'
- en: '| `i` | Identify the process with the PID or thread ID for each line of debug
    or trace output. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `i` | 为每行调试或跟踪输出标识具有PID或线程ID的进程。 |'
- en: '| `L` | Identify the source file line number for each line of debug or trace
    output. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| `L` | 为每行调试或跟踪输出标识源文件行号。 |'
- en: '| `n` | Print the current function nesting depth for each line of debug or
    trace output. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| `n` | 为每行调试或跟踪输出打印当前函数嵌套深度。 |'
- en: '| `N` | Number each line of debug output. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| `N` | 为每行调试输出编号。 |'
- en: '| `o` | Redirect the debugger output stream to the specified file. The default
    output is `stderr`. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `o` | 重定向调试器输出流到指定文件。默认输出为`stderr`。 |'
- en: '| `O` | Like `o`, but the file is really flushed between each write. When needed,
    the file is closed and reopened between each write. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `O` | 类似于`o`，但文件在每次写入之间真正刷新。在需要时，文件在每次写入之间关闭并重新打开。 |'
- en: '| `a` | Like `o`, but opens for append. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `a` | 类似于`o`，但用于追加打开。 |'
- en: '| `A` | Like `O`, but opens for append. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `A` | 类似于`O`，但用于追加打开。 |'
- en: '| `p` | Limit debugger actions to specified processes. A process must be identified
    with the `DBUG_PROCESS` macro and match one in the list for debugger actions to
    occur. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `p` | 将调试器操作限制为指定的进程。必须使用`DBUG_PROCESS`宏标识进程，并且匹配列表中的一个进程才会发生调试器操作。'
- en: '| `P` | Print the current process name for each line of debug or trace output.
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `P` | 为每行调试或跟踪输出打印当前进程名称。 |'
- en: '| `r` | When pushing a new state, do not inherit the previous state''s function
    nesting level. Useful when the output is to start at the left margin. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `r` | 推送新状态时，不继承先前状态的函数嵌套级别。当输出从左边距开始时很有用。 |'
- en: '| `t` | Enable function call/exit trace lines. May be followed by a list (containing
    only one modifier) giving a numeric maximum trace level, beyond which no output
    occurs for either debugging or tracing macros. The default is a compile time option.
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `t` | 启用函数调用/退出跟踪行。可以跟随一个列表（仅包含一个修饰符），给出一个数字最大跟踪级别，超过该级别，不会发生任何输出，无论是调试还是跟踪宏。默认是编译时选项。'
- en: '| `T` | Print the current timestamp for every line of output. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `T` | 为每行输出打印当前时间戳。 |'
- en: '| Flag | Description |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 标志 | 描述 |'
- en: 'The leading `+` or `-` character and trailing list of modifiers are used for
    flag characters such as `d` or `f` that can enable a debug operation for all applicable
    modifiers or just some of them:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 前导的`+`或`-`字符和修饰符列表用于像`d`或`f`这样的标志字符，可以为所有适用的修饰符启用调试操作或仅为其中一些启用：
- en: With no leading `+` or `-`, the flag value is set to exactly the modifier list
    as given.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有前导的`+`或`-`，标志值将准确设置为给定的修饰符列表。
- en: With a leading `+` or `-`, the modifiers in the list are added to or subtracted
    from the current modifier list.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以前导的`+`或`-`，列表中的修饰符将被添加到或从当前修饰符列表中减去。
- en: The following examples show how this works for the `d` flag. An empty `d` list
    enabled output for all debug macros. A nonempty list enables output only for the
    macro keywords in the list.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了`d`标志的工作原理。空的`d`列表启用了所有调试宏的输出。非空列表仅启用列表中的宏关键字的输出。
- en: 'These statements set the `d` value to the modifier list as given:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这些语句将`d`值设置为给定的修饰符列表：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'A leading `+` or `-` adds to or subtracts from the current `d` value:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 前导的`+`或`-`会增加或减去当前`d`值：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Adding to “all macros enabled” results in no change:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 添加到“启用所有宏”会导致没有变化：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Disabling all enabled macros disables the `d` flag entirely:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用所有已启用的宏会完全禁用`d`标志：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
