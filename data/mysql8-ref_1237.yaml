- en: 17.12 InnoDB and Online DDL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.12 InnoDB 和在线DDL
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl.html)
- en: '[17.12.1 Online DDL Operations](innodb-online-ddl-operations.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.12.1 在线DDL操作](innodb-online-ddl-operations.html)'
- en: '[17.12.2 Online DDL Performance and Concurrency](innodb-online-ddl-performance.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.12.2 在线DDL性能和并发性](innodb-online-ddl-performance.html)'
- en: '[17.12.3 Online DDL Space Requirements](innodb-online-ddl-space-requirements.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.12.3 在线DDL空间要求](innodb-online-ddl-space-requirements.html)'
- en: '[17.12.4 Online DDL Memory Management](online-ddl-memory-management.html)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.12.4 在线DDL内存管理](online-ddl-memory-management.html)'
- en: '[17.12.5 Configuring Parallel Threads for Online DDL Operations](online-ddl-parallel-thread-configuration.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.12.5 配置在线DDL操作的并行线程](online-ddl-parallel-thread-configuration.html)'
- en: '[17.12.6 Simplifying DDL Statements with Online DDL](innodb-online-ddl-single-multi.html)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.12.6 简化DDL语句的在线DDL](innodb-online-ddl-single-multi.html)'
- en: '[17.12.7 Online DDL Failure Conditions](innodb-online-ddl-failure-conditions.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.12.7 在线DDL失败条件](innodb-online-ddl-failure-conditions.html)'
- en: '[17.12.8 Online DDL Limitations](innodb-online-ddl-limitations.html)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[17.12.8 在线DDL限制](innodb-online-ddl-limitations.html)'
- en: 'The online DDL feature provides support for instant and in-place table alterations
    and concurrent DML. Benefits of this feature include:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在线DDL功能支持即时和原地表更改以及并发DML。此功能的好处包括：
- en: Improved responsiveness and availability in busy production environments, where
    making a table unavailable for minutes or hours is not practical.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在繁忙的生产环境中提高响应性和可用性，使表在几分钟或几小时内不可用是不切实际的。
- en: For in-place operations, the ability to adjust the balance between performance
    and concurrency during DDL operations using the `LOCK` clause. See [The LOCK clause](innodb-online-ddl-performance.html#innodb-online-ddl-locking-options
    "The LOCK clause").
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于原地操作，在DDL操作期间使用 `LOCK` 子句调整性能和并发性之间的平衡。参见 [LOCK子句](innodb-online-ddl-performance.html#innodb-online-ddl-locking-options
    "LOCK子句")。
- en: Less disk space usage and I/O overhead than the table-copy method.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比表复制方法使用更少的磁盘空间和I/O开销。
- en: Note
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`ALGORITHM=INSTANT` support is available for `ADD COLUMN` and other operations
    in MySQL 8.0.12.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`ALGORITHM=INSTANT` 支持在 MySQL 8.0.12 中的 `ADD COLUMN` 和其他操作中使用。'
- en: Typically, you do not need to do anything special to enable online DDL. By default,
    MySQL performs the operation instantly or in place, as permitted, with as little
    locking as possible.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您不需要采取任何特殊措施来启用在线DDL。默认情况下，MySQL 尽可能以立即或原地的方式执行操作，并尽量减少锁定。
- en: 'You can control aspects of a DDL operation using the `ALGORITHM` and `LOCK`
    clauses of the [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    statement. These clauses are placed at the end of the statement, separated from
    the table and column specifications by commas. For example:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE语句")语句的 `ALGORITHM`
    和 `LOCK` 子句来控制DDL操作的各个方面。这些子句位于语句末尾，与表和列规范用逗号分隔。例如：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `LOCK` clause may be used for operations that are performed in place and
    is useful for fine-tuning the degree of concurrent access to the table during
    operations. Only `LOCK=DEFAULT` is supported for operations that are performed
    instantly. The `ALGORITHM` clause is primarily intended for performance comparisons
    and as a fallback to the older table-copying behavior in case you encounter any
    issues. For example:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`LOCK` 子句可用于原地执行的操作，并且在操作期间对表的并发访问程度进行微调非常有用。仅支持 `LOCK=DEFAULT` 用于立即执行的操作。`ALGORITHM`
    子句主要用于性能比较，并作为旧表复制行为的后备，以防遇到任何问题。例如：'
- en: To avoid accidentally making the table unavailable for reads, writes, or both,
    during an in-place [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    operation, specify a clause on the [`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement") statement such as `LOCK=NONE` (permit reads and writes) or `LOCK=SHARED`
    (permit reads). The operation halts immediately if the requested level of concurrency
    is not available.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了避免在原地[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE语句")操作期间意外使表对读取、写入或两者都不可用，请在[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE语句")语句上指定一个子句，如 `LOCK=NONE`（允许读取和写入）或
    `LOCK=SHARED`（允许读取）。如果所请求的并发级别不可用，则操作立即停止。
- en: To compare performance between algorithms, run a statement with `ALGORITHM=INSTANT`,
    `ALGORITHM=INPLACE` and `ALGORITHM=COPY`. You can also run a statement with the
    [`old_alter_table`](server-system-variables.html#sysvar_old_alter_table) configuration
    option enabled to force the use of `ALGORITHM=COPY`.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了比较算法之间的性能，请运行带有`ALGORITHM=INSTANT`、`ALGORITHM=INPLACE`和`ALGORITHM=COPY`的语句。您还可以运行带有启用[`old_alter_table`](server-system-variables.html#sysvar_old_alter_table)配置选项的语句，以强制使用`ALGORITHM=COPY`。
- en: To avoid tying up the server with an [`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement") operation that copies the table, include `ALGORITHM=INSTANT`
    or `ALGORITHM=INPLACE`. The statement halts immediately if it cannot use the specified
    algorithm.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了避免使用[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作拷贝表格而占用服务器资源，请包含`ALGORITHM=INSTANT`或`ALGORITHM=INPLACE`。如果无法使用指定的算法，该语句将立即停止。
