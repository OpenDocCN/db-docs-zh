- en: 25.2.4 What is New in MySQL NDB Cluster 8.0
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 25.2.4 MySQL NDB Cluster 8.0中的新功能
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-what-is-new.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-what-is-new.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-what-is-new.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-what-is-new.html)
- en: The following sections describe changes in the implementation of MySQL NDB Cluster
    in NDB Cluster 8.0 through 8.0.35, as compared to earlier release series. NDB
    Cluster 8.0 is available as a General Availability (GA) release, beginning with
    NDB 8.0.19\. NDB Cluster 7.6 and 7.5 are previous GA releases still supported
    in production; for information about NDB Cluster 7.6, see [What is New in NDB
    Cluster 7.6](/doc/refman/5.7/en/mysql-cluster-what-is-new-7-6.html). For similar
    information about NDB Cluster 7.5, see [What is New in NDB Cluster 7.5](/doc/refman/5.7/en/mysql-cluster-what-is-new-7-5.html).
    NDB Cluster 7.4 and 7.3 were previous GA releases which have reached their end
    of life, and which are no longer supported or maintained. We recommend that new
    deployments for production use MySQL NDB Cluster 8.0.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节描述了与早期版本系列相比，MySQL NDB Cluster在NDB Cluster 8.0至8.0.35中的实现变化。NDB Cluster
    8.0作为一个通用可用性（GA）版本发布，从NDB 8.0.19开始。NDB Cluster 7.6和7.5是之前的GA版本，仍在生产中得到支持；有关NDB
    Cluster 7.6的信息，请参阅[What is New in NDB Cluster 7.6](/doc/refman/5.7/en/mysql-cluster-what-is-new-7-6.html)。有关NDB
    Cluster 7.5的类似信息，请参阅[What is New in NDB Cluster 7.5](/doc/refman/5.7/en/mysql-cluster-what-is-new-7-5.html)。NDB
    Cluster 7.4和7.3是之前的GA版本，已经到达生命周期终点，不再得到支持或维护。我们建议新的生产部署使用MySQL NDB Cluster 8.0。
- en: What is New in NDB Cluster 8.0
  id: totrans-3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: MySQL NDB Cluster 8.0中的新功能
- en: 'Major changes and new features in NDB Cluster 8.0 which are likely to be of
    interest are shown in the following list:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: NDB Cluster 8.0中的重大变化和新功能可能会引起兴趣，如下列表所示：
- en: '**Compatibility enhancements. ** The following changes reduce longstanding
    nonessential differences in `NDB` behavior as compared to that of other MySQL
    storage engines:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**兼容性增强。** 以下更改减少了`NDB`行为与其他MySQL存储引擎相比的长期非必要差异：'
- en: '**Development in parallel with MySQL server. ** Beginning with this release,
    MySQL NDB Cluster is being developed in parallel with the standard MySQL 8.0 server
    under a new unified release model with the following features:'
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与MySQL服务器并行开发。** 从此版本开始，MySQL NDB Cluster正在与标准MySQL 8.0服务器并行开发，采用新的统一发布模型，具有以下特点：'
- en: NDB 8.0 is developed in, built from, and released with the MySQL 8.0 source
    code tree.
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: NDB 8.0是在MySQL 8.0源代码树中开发、构建和发布的。
- en: The numbering scheme for NDB Cluster 8.0 releases follows the scheme for MySQL
    8.0.
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: NDB Cluster 8.0的编号方案遵循MySQL 8.0的方案。
- en: 'Building the source with `NDB` support appends `-cluster` to the version string
    returned by [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    `-V`, as shown here:'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`NDB`支持构建源代码会在[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") `-V`返回的版本字符串末尾添加`-cluster`，如下所示：
- en: '[PRE0]'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`NDB` binaries continue to display both the MySQL Server version and the `NDB`
    engine version, like this:'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`NDB`二进制文件继续显示MySQL服务器版本和`NDB`引擎版本，如下所示：'
- en: '[PRE1]'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In MySQL Cluster NDB 8.0, these two version numbers are always the same.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL Cluster NDB 8.0中，这两个版本号始终相同。
- en: To build the MySQL source with NDB Cluster support, use the CMake option [`-DWITH_NDB`](source-configuration-options.html#option_cmake_with_ndb)
    (NDB 8.0.31 and later; for earlier releases, use [`-DWITH_NDBCLUSTER`](source-configuration-options.html#option_cmake_with_ndbcluster)
    instead).
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使用NDB Cluster支持构建MySQL源代码，请使用CMake选项[`-DWITH_NDB`](source-configuration-options.html#option_cmake_with_ndb)（NDB
    8.0.31及更高版本；对于早期版本，请改用[`-DWITH_NDBCLUSTER`](source-configuration-options.html#option_cmake_with_ndbcluster)）。
- en: '**Platform support notes. ** NDB 8.0 makes the following changes in platform
    support:'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台支持说明。** NDB 8.0在平台支持方面做出以下更改：'
- en: '`NDBCLUSTER` no longer supports 32-bit platforms. Beginning with NDB 8.0.21,
    the NDB build process checks the system architecture and aborts if it is not a
    64-bit platform.'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NDBCLUSTER`不再支持32位平台。从NDB 8.0.21开始，NDB构建过程会检查系统架构，并在不是64位平台时中止。'
- en: It is now possible to build `NDB` from source for 64-bit `ARM` CPUs. Currently,
    this support is source-only, and we do not provide any precompiled binaries for
    this platform.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在可以为64位`ARM` CPU从源代码构建`NDB`。目前，此支持仅限源代码，我们不为此平台提供任何预编译的二进制文件。
- en: '**Database and table names. ** NDB 8.0 removes the previous 63-byte limit on
    identifiers for databases and tables. These identifiers can now use up to 64 bytes,
    as for such objects using other MySQL storage engines. See [Section 25.2.7.11,
    “Previous NDB Cluster Issues Resolved in NDB Cluster 8.0”](mysql-cluster-limitations-resolved.html
    "25.2.7.11 Previous NDB Cluster Issues Resolved in NDB Cluster 8.0").'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库和表名。** NDB 8.0 删除了先前对数据库和表标识符的 63 字节限制。这些标识符现在可以使用最多 64 字节，就像使用其他 MySQL
    存储引擎的对象一样。请参阅 [Section 25.2.7.11, “Previous NDB Cluster Issues Resolved in NDB
    Cluster 8.0”](mysql-cluster-limitations-resolved.html "25.2.7.11 Previous NDB
    Cluster Issues Resolved in NDB Cluster 8.0")。'
- en: '**Generated names for foreign keys. ** `NDB` now uses the pattern `*`tbl_name`*_fk_*`N`*`
    for naming internally generated foreign keys. This is similar to the pattern used
    by [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine").'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外键生成的名称。** `NDB` 现在使用模式 `*`tbl_name`*_fk_*`N`*` 用于内部生成的外键命名。这类似于 [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") 使用的模式。'
- en: '**Schema and metadata distribution and synchronization. ** NDB 8.0 makes use
    of the MySQL data dictionary to distribute schema information to SQL nodes joining
    a cluster and to synchronize new schema changes between existing SQL nodes. The
    following list describes individual enhancements relating to this integration
    work:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模式和元数据的分发和同步。** NDB 8.0 使用 MySQL 数据字典将模式信息分发给加入集群的 SQL 节点，并在现有 SQL 节点之间同步新的模式更改。以下列表描述了与此集成工作相关的各个增强功能：'
- en: '**Schema distribution enhancements. ** The `NDB` schema distribution coordinator,
    which handles schema operations and tracks their progress, has been extended in
    NDB 8.0 to ensure that resources used during a schema operation are released at
    its conclusion. Previously, some of this work was done by the schema distribution
    client; this has been changed due to the fact that the client did not always have
    all needed state information, which could lead to resource leaks when the client
    decided to abandon the schema operation prior to completion and without informing
    the coordinator.'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模式分发增强。** `NDB` 模式分发协调器，负责处理模式操作并跟踪其进度，在 NDB 8.0 中已扩展，以确保在模式操作结束时释放使用的资源。以前，一些工作是由模式分发客户端完成的；由于客户端并非总是具有所有所需的状态信息，这可能导致在客户端决定在完成之前放弃模式操作并且未通知协调器的情况下导致资源泄漏。'
- en: To help fix this issue, schema operation timeout detection has been moved from
    the schema distribution client to the coordinator, providing the coordinator with
    an opportunity to clean up any resources used during the schema operation. The
    coordinator now checks ongoing schema operations for timeout at regular intervals,
    and marks participants that have not yet completed a given schema operation as
    failed when detecting timeout. It also provides suitable warnings whenever a schema
    operation timeout occurs. (It should be noted that, after such a timeout is detected,
    the schema operation itself continues.) Additional reporting is done by printing
    a list of active schema operations at regular intervals whenever one or more of
    these operations is ongoing.
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了帮助解决这个问题，模式操作超时检测已从模式分发客户端移至协调器，使协调器有机会在模式操作期间清理任何使用的资源。协调器现在定期检查正在进行的模式操作是否超时，并在检测到超时时将尚未完成给定模式操作的参与者标记为失败。每当发生模式操作超时时，它还会提供适当的警告。（值得注意的是，在检测到超时后，模式操作本身会继续进行。）每当一个或多个这些操作正在进行时，定期打印活动模式操作列表以进行额外报告。
- en: As an additional part of this work, a new [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") option [`--ndb-schema-dist-timeout`](mysql-cluster-options-variables.html#option_mysqld_ndb-schema-dist-timeout)
    makes it possible to set the length of time to wait until a schema operation is
    marked as having timed out.
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为这项工作的额外部分，一个新的 [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    选项 [`--ndb-schema-dist-timeout`](mysql-cluster-options-variables.html#option_mysqld_ndb-schema-dist-timeout)
    可以设置等待模式操作被标记为超时的时间长度。
- en: '**Disk data file distribution. ** NDB Cluster 8.0.14, uses the MySQL data dictionary
    to make sure that disk data files and related constructs such as tablespaces and
    log file groups are correctly distributed between all connected SQL nodes.'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**磁盘数据文件分发。** NDB Cluster 8.0.14 使用 MySQL 数据字典确保磁盘数据文件和相关构造（如表空间和日志文件组）在所有连接的
    SQL 节点之间正确分发。'
- en: '**Schema synchronization of tablespace objects. ** When a MySQL Server connects
    as an SQL node to an NDB cluster, it checks its data dictionary against the information
    found in the `NDB` dictionary.'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表空间对象的模式同步。** 当MySQL服务器作为SQL节点连接到NDB集群时，它会将其数据字典与`NDB`数据字典中的信息进行比较。'
- en: Previously, the only `NDB` objects synchronized on connection of a new SQL node
    were databases and tables; MySQL NDB Cluster 8.0 also implements schema synchronization
    of disk data objects including tablespaces and log file groups. Among other benefits,
    this eliminates the possibility of a mismatch between the MySQL data dictionary
    and the `NDB` dictionary following a native backup and restore, in which tablespaces
    and log file groups were restored to the `NDB` dictionary, but not to the MySQL
    Server's data dictionary.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，新SQL节点连接时同步的唯一`NDB`对象是数据库和表；MySQL NDB Cluster 8.0还实现了磁盘数据对象的模式同步，包括表空间和日志文件组。除其他好处外，这消除了在本地备份和恢复后MySQL数据字典和`NDB`数据字典之间不匹配的可能性，其中表空间和日志文件组被恢复到`NDB`数据字典，但未恢复到MySQL服务器的数据字典。
- en: It is also no longer possible to issue a [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") statement that refers to a nonexistent tablespace.
    Such a statement now fails with an error.
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在不再可能发出引用不存在表空间的[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")语句。这样的语句现在会失败并显示错误。
- en: '**Database DDL synchronization enhancements. ** Work done for NDB 8.0 insures
    that synchronization of databases by newly joined (or rejoined) SQL nodes with
    those on existing SQL nodes now makes proper use of the data dictionary so that
    any database-level operations ([`CREATE DATABASE`](create-database.html "15.1.12 CREATE
    DATABASE Statement"), [`ALTER DATABASE`](alter-database.html "15.1.2 ALTER DATABASE
    Statement"), or [`DROP DATABASE`](drop-database.html "15.1.24 DROP DATABASE Statement"))
    that may have been missed by this SQL node are now correctly duplicated on it
    when it connects (or reconnects) to the cluster.'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库DDL同步增强。** 为NDB 8.0所做的工作确保了新加入（或重新加入）SQL节点与现有SQL节点上的数据库的同步现在正确地利用数据字典，以便任何可能被该SQL节点忽略的数据库级操作（[`CREATE
    DATABASE`](create-database.html "15.1.12 CREATE DATABASE Statement")、[`ALTER DATABASE`](alter-database.html
    "15.1.2 ALTER DATABASE Statement")或[`DROP DATABASE`](drop-database.html "15.1.24 DROP
    DATABASE Statement")）在连接（或重新连接）到集群时现在在其上正确地复制。'
- en: As part of the schema synchronization procedure performed when starting, an
    SQL node now compares all databases on the cluster's data nodes with those in
    its own data dictionary, and if any of these is found to be missing from the SQL
    node's data dictionary, the SQL Node installs it locally by executing a [`CREATE
    DATABASE`](create-database.html "15.1.12 CREATE DATABASE Statement") statement.
    A database thus created uses the default MySQL Server database properties (such
    as those as determined by [`character_set_database`](server-system-variables.html#sysvar_character_set_database)
    and [`collation_database`](server-system-variables.html#sysvar_collation_database))
    that are in effect on this SQL node at the time the statement is executed.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为启动时执行的模式同步过程的一部分，SQL节点现在会将集群数据节点上的所有数据库与其自己的数据字典进行比较，如果发现任何数据库在SQL节点的数据字典中缺失，则SQL节点通过执行[`CREATE
    DATABASE`](create-database.html "15.1.12 CREATE DATABASE Statement")语句在本地安装它。因此，所创建的数据库使用的是在执行该语句时在此SQL节点上生效的默认MySQL服务器数据库属性（例如由[`character_set_database`](server-system-variables.html#sysvar_character_set_database)和[`collation_database`](server-system-variables.html#sysvar_collation_database)确定的属性）。
- en: '**NDB metadata change detection and synchronization. ** NDB 8.0 implements
    a new mechanism for detection of updates to metadata for data objects such as
    tables, tablespaces, and log file groups with the MySQL data dictionary. This
    is done using a thread, the `NDB` metadata change monitor thread, which runs in
    the background and checks periodically for inconsistencies between the `NDB` dictionary
    and the MySQL data dictionary.'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB元数据更改检测和同步。** NDB 8.0实现了一种新的机制，用于检测数据对象（如表、表空间和日志文件组）的元数据更新与MySQL数据字典之间的不一致。这是通过一个线程，即`NDB`元数据更改监视线程，在后台定期检查`NDB`数据字典和MySQL数据字典之间的不一致性来完成的。'
- en: The monitor performs metadata checks every 60 seconds by default. The polling
    interval can be adjusted by setting the value of the [`ndb_metadata_check_interval`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_check_interval)
    system variable; polling can be disabled altogether by setting the [`ndb_metadata_check`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_check)
    system variable to `OFF`. The status variable [`Ndb_metadata_detected_count`](mysql-cluster-options-variables.html#statvar_Ndb_metadata_detected_count)
    shows the number of times since [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL
    Server") was last started that inconsistencies have been detected.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，监视器每隔`60秒`执行一次元数据检查。可以通过设置[`ndb_metadata_check_interval`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_check_interval)系统变量的值来调整轮询间隔；通过将[`ndb_metadata_check`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_check)系统变量设置为`OFF`可以完全禁用轮询。状态变量[`Ndb_metadata_detected_count`](mysql-cluster-options-variables.html#statvar_Ndb_metadata_detected_count)显示自上次启动[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")以来检测到不一致性的次数。
- en: '`NDB` ensures that `NDB` database, table, log file group, and tablespace objects
    submitted by the metadata change monitor thread during operations following startup
    are automatically checked for mismatches and synchronized by the `NDB` binlog
    thread.'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`NDB`确保在启动后的操作期间，由元数据更改监视器线程提交的`NDB`数据库、表、日志文件组和表空间对象会被`NDB` binlog线程自动检查不匹配并同步。'
- en: 'NDB 8.0 adds two status variables relating to automatic synchronization: [`Ndb_metadata_synced_count`](mysql-cluster-options-variables.html#statvar_Ndb_metadata_synced_count)
    shows the number of objects synchronized automatically; [`Ndb_metadata_excluded_count`](mysql-cluster-options-variables.html#statvar_Ndb_metadata_excluded_count)
    indicates the number of objects for which synchronization has failed (prior to
    NDB 8.0.22, this variable was named `Ndb_metadata_blacklist_size`). In addition,
    you can see which objects have been synchronized by inspecting the cluster log.'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: NDB 8.0增加了两个与自动同步相关的状态变量：[`Ndb_metadata_synced_count`](mysql-cluster-options-variables.html#statvar_Ndb_metadata_synced_count)显示自动同步的对象数量；[`Ndb_metadata_excluded_count`](mysql-cluster-options-variables.html#statvar_Ndb_metadata_excluded_count)指示同步失败的对象数量（在NDB
    8.0.22之前，此变量名为`Ndb_metadata_blacklist_size`）。此外，您可以通过检查集群日志查看已同步的对象。
- en: Setting the [`ndb_metadata_sync`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_sync)
    system variable to `true` overrides any settings that have been made for [`ndb_metadata_check_interval`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_check_interval)
    and [`ndb_metadata_check`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_check),
    causing the change monitor thread to begin continuous metadata change detection.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将[`ndb_metadata_sync`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_sync)系统变量设置为`true`会覆盖为[`ndb_metadata_check_interval`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_check_interval)和[`ndb_metadata_check`](mysql-cluster-options-variables.html#sysvar_ndb_metadata_check)所做的任何设置，导致更改监视器线程开始连续元数据更改检测。
- en: In NDB 8.0.22 and later, setting `ndb_metadata_sync` to `true` clears the list
    of objects for which synchronization has failed previously, which means it is
    no longer necessary to discover individual tables or to re-trigger synchronization
    by reconnecting the SQL node to the cluster. In addition, setting this variable
    to `false` clears the list of objects waiting to be retried.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在NDB 8.0.22及更高版本中，将`ndb_metadata_sync`设置为`true`会清除先前同步失败的对象列表，这意味着不再需要发现单个表或通过重新连接SQL节点到集群来重新触发同步。此外，将此变量设置为`false`会清除等待重新尝试的对象列表。
- en: 'Beginning with NDB 8.0.21, more detailed information about the current state
    of automatic synchronization than can be obtained from log messages or status
    variables is provided by two new tables added to the MySQL Performance Schema.
    The tables are listed here:'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从NDB 8.0.21开始，比日志消息或状态变量提供有关自动同步当前状态的更详细信息的两个新表已添加到MySQL性能模式中。这些表在此列出：
- en: '[`ndb_sync_pending_objects`](performance-schema-ndb-sync-pending-objects-table.html
    "29.12.12.1 The ndb_sync_pending_objects Table"): Contains information about database
    objects for which mismatches have been detected between the `NDB` dictionary and
    the MySQL data dictionary (and which have not been excluded from automatic synchronization).'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ndb_sync_pending_objects`](performance-schema-ndb-sync-pending-objects-table.html
    "29.12.12.1 The ndb_sync_pending_objects Table")：包含在`NDB`字典和MySQL数据字典之间检测到不匹配的数据库对象信息（且未被排除在自动同步之外）。'
- en: '[`ndb_sync_excluded_objects`](performance-schema-ndb-sync-excluded-objects-table.html
    "29.12.12.2 The ndb_sync_excluded_objects Table"): Contains information about
    `NDB` database objects which have been excluded because they cannot be synchronized
    between the `NDB` dictionary and the MySQL data dictionary, and thus require manual
    intervention.'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ndb_sync_excluded_objects`](performance-schema-ndb-sync-excluded-objects-table.html
    "29.12.12.2 ndb_sync_excluded_objects 表")：包含由于无法在 `NDB` 字典和 MySQL 数据字典之间同步而被排除的
    `NDB` 数据库对象的信息，因此需要手动干预。'
- en: A row in one of these tables provides the database object's parent schema, name,
    and type. Types of objects include schemas, tablespaces, log file groups, and
    tables. (If the object is a log file group or tablespace, the parent schema is
    `NULL`.) In addition, the [`ndb_sync_excluded_objects`](performance-schema-ndb-sync-excluded-objects-table.html
    "29.12.12.2 The ndb_sync_excluded_objects Table") table shows the reason for which
    the object has been excluded.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些表中的一行提供了数据库对象的父模式、名称和类型。对象类型包括模式、表空间、日志文件组和表。 （如果对象是日志文件组或表空间，则父模式为 `NULL`。）此外，[`ndb_sync_excluded_objects`](performance-schema-ndb-sync-excluded-objects-table.html
    "29.12.12.2 ndb_sync_excluded_objects 表") 表显示了对象被排除的原因。
- en: These tables are present only if `NDBCLUSTER` storage engine support is enabled.
    For more information about these tables, see [Section 29.12.12, “Performance Schema
    NDB Cluster Tables”](performance-schema-ndb-cluster-tables.html "29.12.12 Performance
    Schema NDB Cluster Tables").
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些表仅在启用了 `NDBCLUSTER` 存储引擎支持时存在。有关这些表的更多信息，请参阅 [第 29.12.12 节，“性能模式 NDB Cluster
    表”](performance-schema-ndb-cluster-tables.html "29.12.12 性能模式 NDB Cluster 表")。
- en: '**Changes in NDB table extra metadata. ** The extra metadata property of an
    `NDB` table is used for storing serialized metadata from the MySQL data dictionary,
    rather than storing the binary representation of the table as in previous versions.
    (This was a `.frm` file, no longer used by the MySQL Server—see [Chapter 16, *MySQL
    Data Dictionary*](data-dictionary.html "Chapter 16 MySQL Data Dictionary").) As
    part of the work to support this change, the available size of the table''s extra
    metadata has been increased. This means that `NDB` tables created in NDB Cluster
    8.0 are not compatible with previous NDB Cluster releases. Tables created in previous
    releases can be used with NDB 8.0, but cannot be opened afterwards by an earlier
    version.'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB 表额外元数据的更改。** `NDB` 表的额外元数据属性用于存储来自 MySQL 数据字典的序列化元数据，而不是像以前版本中那样存储表的二进制表示。（这是一个
    `.frm` 文件，MySQL Server 不再使用—参见 [第 16 章，*MySQL 数据字典*](data-dictionary.html "第 16
    章 MySQL 数据字典")。）作为支持此更改的一部分，表的额外元数据的可用大小已增加。这意味着在 NDB Cluster 8.0 中创建的 `NDB` 表与以前的
    NDB Cluster 版本不兼容。在以前的版本中创建的表可以在 NDB 8.0 中使用，但之后不能被较早版本打开。'
- en: This metadata is accessible using the NDB API methods [`getExtraMetadata()`](/doc/ndbapi/en/ndb-table.html#ndb-table-getextrametadata)
    and [`setExtraMetadata()`](/doc/ndbapi/en/ndb-table.html#ndb-table-setextrametadata).
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以使用 NDB API 方法 [`getExtraMetadata()`](/doc/ndbapi/en/ndb-table.html#ndb-table-getextrametadata)
    和 [`setExtraMetadata()`](/doc/ndbapi/en/ndb-table.html#ndb-table-setextrametadata)
    访问此元数据。
- en: For more information, see [Section 25.3.7, “Upgrading and Downgrading NDB Cluster”](mysql-cluster-upgrade-downgrade.html
    "25.3.7 Upgrading and Downgrading NDB Cluster").
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 [第 25.3.7 节，“NDB Cluster 升级和降级”](mysql-cluster-upgrade-downgrade.html
    "25.3.7 NDB Cluster 升级和降级")。
- en: '**On-the-fly upgrades of tables using .frm files. ** A table created in NDB
    7.6 and earlier contains metadata in the form of a compressed `.frm` file, which
    is no longer supported in MySQL 8.0\. To facilitate online upgrades to NDB 8.0,
    `NDB` performs on-the-fly translation of this metadata and writes it into the
    MySQL Server''s data dictionary, which enables the [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") in NDB Cluster 8.0 to work with the table without preventing
    subsequent use of the table by a previous version of the `NDB` software.'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 .frm 文件进行表的即时升级。** 在 NDB 7.6 及更早版本中创建的表包含以压缩的 `.frm` 文件形式存储的元数据，而这在 MySQL
    8.0 中已不再支持。为了方便在线升级到 NDB 8.0，`NDB` 对此元数据进行即时转换，并将其写入 MySQL Server 的数据字典中，从而使 NDB
    Cluster 8.0 中的 [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") 能够与该表一起工作，而不会阻止先前版本的
    `NDB` 软件继续使用该表。'
- en: Important
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: Once a table's structure has been modified in NDB 8.0, its metadata is stored
    using the data dictionary, and it can no longer be accessed by NDB 7.6 and earlier.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦表的结构在 NDB 8.0 中被修改，其元数据将使用数据字典存储，之后将无法被 NDB 7.6 及更早版本访问。
- en: This enhancement also makes it possible to restore an `NDB` backup made using
    an earlier version to a cluster running NDB 8.0 (or later).
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这一增强还使得可以将使用早期版本创建的`NDB`备份还原到运行 NDB 8.0（或更高版本）的集群中。
- en: '**Metadata consistency check error logging. ** As part of work previously done
    in NDB 8.0, the metadata check performed as part of auto-synchronization between
    the representation of an `NDB` table in the NDB dictionary and its counterpart
    in the MySQL data dictionary includes the table''s name, storage engine, and internal
    ID. Beginning with NDB 8.0.23, the range of properties checked is expanded to
    include properties of the following data objects:'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**元数据一致性检查错误日志。** 作为之前在 NDB 8.0 中完成的工作的一部分，元数据检查作为在 NDB 字典中的`NDB`表与其在 MySQL
    数据字典中的对应之间的自动同步的一部分执行，包括表的名称、存储引擎和内部 ID。 从 NDB 8.0.23 开始，所检查的属性范围扩展到包括以下数据对象的属性：'
- en: Columns
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列
- en: Indexes
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引
- en: Foreign keys
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外键
- en: 'In addition, details of any mismatches in metadata properties are now written
    to the MySQL server error log. The formats used for the error log messages differ
    slightly depending on whether the discrepancy is found on the table level or on
    the level of a column, index, or foreign key. The format for a log error resulting
    from a table-level property mismatch is shown here, where *`property`* is the
    property name, *`ndb_value`* is the property value as stored in the NDB dictionary,
    and *`mysqld_value`* is the value of the property as stored in the MySQL data
    dictionary:'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，现在任何元数据属性不匹配的详细信息都将写入 MySQL 服务器错误日志。 根据不一致性是在表级别还是在列、索引或外键级别发现的，错误日志消息的格式略有不同。
    表级属性不匹配导致的日志错误的格式如下，其中*`property`*是属性名称，*`ndb_value`*是存储在 NDB 字典中的属性值，*`mysqld_value`*是存储在
    MySQL 数据字典中的属性值：
- en: '[PRE2]'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For mismatches in properties of columns, indexes, and foreign keys, the format
    is as follows, where *`obj_type`* is one of `column`, `index`, or `foreign key`,
    and *`obj_name`* is the name of the object:'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于列、索引和外键属性不匹配的情况，格式如下，其中*`obj_type`*是`column`、`index`或`foreign key`之一，*`obj_name`*是对象的名称：
- en: '[PRE3]'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Metadata checks are performed during automatic synchronization of `NDB` tables
    when they are installed in the data dictionary of any [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") acting as an SQL node in an NDB Cluster. If
    the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") is debug-compiled,
    checks are also made whenever a [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") statement is executed, and whenever an `NDB` table is opened.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在将`NDB`表安装到充当 NDB 集群中 SQL 节点的任何[**mysqld**](mysqld.html "6.3.1 mysqld — The
    MySQL Server")的数据字典中时，将执行元数据检查。 如果[**mysqld**](mysqld.html "6.3.1 mysqld — The
    MySQL Server")是调试编译的，则还会在执行[`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement")语句时进行检查，并在打开`NDB`表时进行检查。
- en: '**Synchronization of user privileges with NDB_STORED_USER. ** A new mechanism
    for sharing and synchronizing users, roles, and privileges between SQL nodes is
    available in NDB 8.0, using the [`NDB_STORED_USER`](privileges-provided.html#priv_ndb-stored-user)
    privilege. Distributed privileges as implemented in NDB 7.6 and earlier (see [Distributed
    Privileges Using Shared Grant Tables](/doc/refman/5.7/en/mysql-cluster-privilege-distribution.html))
    are no longer supported.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与 NDB_STORED_USER 同步用户权限。** 在 NDB 8.0 中提供了一种新的机制，使用[`NDB_STORED_USER`](privileges-provided.html#priv_ndb-stored-user)权限在
    SQL 节点之间共享和同步用户、角色和权限。 NDB 7.6及更早版本中实现的分布式权限（请参阅[使用共享授权表进行分布式权限](/doc/refman/5.7/en/mysql-cluster-privilege-distribution.html)）不再受支持。'
- en: 'Once a user account is created on an SQL node, the user and its privileges
    can be stored in `NDB` and thus shared between all SQL nodes in the cluster by
    issuing a [`GRANT`](grant.html "15.7.1.6 GRANT Statement") statement such as this
    one:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦在 SQL 节点上创建了用户帐户，用户及其权限可以存储在`NDB`中，并通过发出类似于以下语句的[`GRANT`](grant.html "15.7.1.6 GRANT
    Statement")语句在集群中的所有 SQL 节点之间共享：
- en: '[PRE4]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`NDB_STORED_USER` always has global scope and must be granted using `ON *.*`.
    System reserved accounts such as `mysql.session@localhost` or `mysql.infoschema@localhost`
    cannot be assigned this privilege.'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`NDB_STORED_USER`始终具有全局范围，并且必须使用`ON *.*`授予。 诸如`mysql.session@localhost`或`mysql.infoschema@localhost`之类的系统保留帐户不能被分配此权限。'
- en: Roles can also be shared between SQL nodes by issuing the appropriate `GRANT
    NDB_STORED_USER` statement. Assigning such a role to a user does not cause the
    user to be shared; the `NDB_STORED_USER` privilege must be granted to each user
    explicitly.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过发出适当的 `GRANT NDB_STORED_USER` 语句，角色也可以在 SQL 节点之间共享。将此类角色分配给用户不会导致用户共享；必须显式地向每个用户授予
    `NDB_STORED_USER` 权限。
- en: A user or role having `NDB_STORED_USER`, along with its privileges, is shared
    with all SQL nodes as soon as they join a given NDB Cluster. It is possible to
    make such changes from any connected SQL node, but recommended practice is to
    do so from a designated SQL node only, since the order of execution of statements
    affecting privileges from different SQL nodes cannot be guaranteed to be the same
    on all SQL nodes.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 拥有 `NDB_STORED_USER` 的用户或角色及其权限会在加入给定 NDB 集群的所有 SQL 节点之后立即共享。可以从任何连接的 SQL 节点进行此类更改，但建议仅从指定的
    SQL 节点进行，因为无法保证不同 SQL 节点影响权限的语句执行顺序在所有 SQL 节点上相同。
- en: Prior to NDB 8.0.27, changes to the privileges of a user or role were synchronized
    immediately with all connected SQL nodes. Beginning with MySQL 8.0.27, an SQL
    node takes a global read lock when updating privileges, which keeps concurrent
    changes executed by multiple SQL nodes from causing a deadlock.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 NDB 8.0.27 之前，用户或角色的权限更改会立即与所有连接的 SQL 节点同步。从 MySQL 8.0.27 开始，更新权限时，SQL 节点会获取全局读锁，以防止多个
    SQL 节点执行的并发更改导致死锁。
- en: '**Implications for upgrades. ** Due to changes in the MySQL server''s privilege
    system (see [Section 8.2.3, “Grant Tables”](grant-tables.html "8.2.3 Grant Tables")),
    privilege tables using the `NDB` storage engine do not function correctly in NDB
    8.0\. It is safe but not necessary to retain such privilege tables created in
    NDB 7.6 or earlier, but they are no longer used for access control. In NDB 8.0,
    a [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") acting as an SQL
    node and detecting such tables in `NDB` writes a warning to the MySQL server log,
    and creates [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage
    Engine") shadow tables local to itself; such shadow tables are created on each
    MySQL server connected to the cluster. When performing an upgrade from NDB 7.6
    or earlier, the privilege tables using `NDB` can be removed safely using [**ndb_drop_table**](mysql-cluster-programs-ndb-drop-table.html
    "25.5.11 ndb_drop_table — Drop an NDB Table") once all MySQL servers acting as
    SQL nodes have been upgraded (see [Section 25.3.7, “Upgrading and Downgrading
    NDB Cluster”](mysql-cluster-upgrade-downgrade.html "25.3.7 Upgrading and Downgrading
    NDB Cluster")).'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**升级的影响。** 由于 MySQL 服务器权限系统的更改（请参阅[第 8.2.3 节，“授权表”](grant-tables.html "8.2.3 Grant
    Tables")），在 NDB 8.0 中，使用 `NDB` 存储引擎的权限表无法正常运行。保留在 NDB 7.6 或更早版本中创建的此类权限表是安全的，但不是必需的，因为它们不再用于访问控制。在
    NDB 8.0 中，作为 SQL 节点的 [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    检测到这些表在 `NDB` 中时，会向 MySQL 服务器日志写入警告，并在本地创建 [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") 阴影表；这样的阴影表会在连接到集群的每个 MySQL 服务器上创建。在从 NDB
    7.6 或更早版本升级时，可以在所有作为 SQL 节点的 MySQL 服务器升级后安全地使用 [**ndb_drop_table**](mysql-cluster-programs-ndb-drop-table.html
    "25.5.11 ndb_drop_table — Drop an NDB Table") 删除使用 `NDB` 的权限表（请参阅[第 25.3.7 节，“升级和降级
    NDB 集群”](mysql-cluster-upgrade-downgrade.html "25.3.7 Upgrading and Downgrading
    NDB Cluster")）。'
- en: The [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") utility's [`--restore-privilege-tables`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_restore-privilege-tables)
    option is deprecated but continues to be honored in NDB 8.0, and can still be
    used to restore distributed privilege tables present in a backup taken from a
    previous release of NDB Cluster to a cluster running NDB 8.0\. These tables are
    handled as described in the preceding paragraph.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") 实用程序的 [`--restore-privilege-tables`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_restore-privilege-tables)
    选项已被弃用，但在 NDB 8.0 中仍然受到尊重，并且仍然可以用于将从先前版本的 NDB 集群备份中获取的分布式权限表恢复到运行 NDB 8.0 的集群中。这些表的处理方式如前一段所述。'
- en: Shared users and grants are stored in the `ndb_sql_metadata` table, which [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") by default does not restore
    in NDB 8.0; you can specify the [`--include-stored-grants`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_include-stored-grants)
    option to cause it to do so.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 共享用户和授权存储在`ndb_sql_metadata`表中，默认情况下，[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — 恢复NDB集群备份")在NDB 8.0中不会恢复这些内容；您可以指定[`--include-stored-grants`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_include-stored-grants)选项来执行此操作。
- en: See [Section 25.6.13, “Privilege Synchronization and NDB_STORED_USER”](mysql-cluster-privilege-synchronization.html
    "25.6.13 Privilege Synchronization and NDB_STORED_USER"), for more information.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息请参见[第25.6.13节，“特权同步和NDB_STORED_USER”](mysql-cluster-privilege-synchronization.html
    "25.6.13 特权同步和NDB_STORED_USER")。
- en: '**INFORMATION_SCHEMA changes. ** The following changes are made in the display
    of information regarding Disk Data files in the Information Schema [`FILES`](information-schema-files-table.html
    "28.3.15 The INFORMATION_SCHEMA FILES Table") table:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**INFORMATION_SCHEMA更改。** 在Information Schema [`FILES`](information-schema-files-table.html
    "28.3.15 INFORMATION_SCHEMA FILES表")表中关于磁盘数据文件信息的显示进行了以下更改：'
- en: Tablespaces and log file groups are no longer represented in the `FILES` table.
    (These constructs are not actually files.)
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表空间和日志文件组不再在`FILES`表中表示。（这些构造实际上不是文件。）
- en: Each data file is now represented by a single row in the `FILES` table. Each
    undo log file is also now represented in this table by one row only. (Previously,
    a row was displayed for each copy of each of these files on each data node.)
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个数据文件现在在`FILES`表中由一行表示。每个撤销日志文件也仅由一行在此表中表示。（以前，在每个数据节点上的每个这些文件的副本都显示为一行。）
- en: 'In addition, [`INFORMATION_SCHEMA`](information-schema.html "Chapter 28 INFORMATION_SCHEMA
    Tables") tables are now populated with tablespace statistics for MySQL Cluster
    tables. (Bug #27167728)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '此外，[`INFORMATION_SCHEMA`](information-schema.html "第28章 INFORMATION_SCHEMA表")表现在为MySQL
    Cluster表填充表空间统计信息。（Bug #27167728）'
- en: '**Error information with ndb_perror. ** The deprecated `--ndb` option for [**perror**](perror.html
    "6.8.2 perror — Display MySQL Error Message Information") has been removed. Instead,
    use [**ndb_perror**](mysql-cluster-programs-ndb-perror.html "25.5.16 ndb_perror
    — Obtain NDB Error Message Information") to obtain error message information from
    `NDB` error codes. (Bug #81704, Bug #81705, Bug #23523926, Bug #23523957)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用ndb_perror获取错误信息。** 已删除了[**perror**](perror.html "6.8.2 perror — 显示MySQL错误信息")的已弃用`--ndb`选项。请改用[**ndb_perror**](mysql-cluster-programs-ndb-perror.html
    "25.5.16 ndb_perror — 获取NDB错误信息")来从`NDB`错误代码获取错误消息信息。（Bug #81704, Bug #81705,
    Bug #23523926, Bug #23523957）'
- en: '**Condition pushdown enhancements. ** Previously, condition pushdown was limited
    to predicate terms referring to column values from the same table to which the
    condition was being pushed. In NDB 8.0, this restriction is removed such that
    column values from tables earlier in the query plan can also be referred to from
    pushed conditions. NDB 8.0 supports joins comparing column expressions, as well
    as comparisons between columns in the same table. Columns and column expressions
    to be compared must be of exactly the same type; this means they must also be
    of the same signedness, length, character set, precision, and scale, whenever
    these attributes apply. Conditions being pushed could not be part of pushed joins
    prior to NDB 8.0.27, when this restriction is lifted.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**条件推送增强。** 以前，条件推送仅限于将条件推送到引用来自与条件所推送的表相同的列值的谓词项。在NDB 8.0中，取消了此限制，使得可以从查询计划中较早的表中引用列值。NDB
    8.0支持比较列表达式的连接，以及在同一表中比较列。要比较的列和列表达式必须完全相同类型；这意味着它们在适用这些属性时也必须具有相同的符号、长度、字符集、精度和比例。在NDB
    8.0.27之前，被推送的条件不能是推送连接的一部分，当解除此限制时。'
- en: Pushing down larger parts of a condition allows more rows to be filtered out
    by the data nodes, thereby reducing the number of rows which [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") must handle during join processing. Another
    benefit of these enhancements is that filtering can be performed in parallel in
    the LDM threads, rather than in a single mysqld process on an SQL node; this has
    the potential to improve query performance significantly.
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下推更大部分条件允许数据节点过滤更多行，从而减少[**mysqld**](mysqld.html "6.3.1 mysqld — MySQL服务器")在连接处理期间必须处理的行数。这些增强的另一个好处是过滤可以在LDM线程中并行执行，而不是在SQL节点上的单个mysqld进程中执行；这有可能显著提高查询性能。
- en: Existing rules for type compatibility between column values being compared continue
    to apply (see [Section 10.2.1.5, “Engine Condition Pushdown Optimization”](engine-condition-pushdown-optimization.html
    "10.2.1.5 Engine Condition Pushdown Optimization")).
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 继续适用于被比较的列值之间的类型兼容性的现有规则（参见[第10.2.1.5节，“引擎条件下推优化”](engine-condition-pushdown-optimization.html
    "10.2.1.5 引擎条件下推优化")）。
- en: '**Pushdown of outer joins and semijoins. ** Work done in NDB 8.0.20 allows
    many outer joins and semijoins, and not only those using a primary key or unique
    key lookup, to be pushed down to the data nodes (see [Section 10.2.1.5, “Engine
    Condition Pushdown Optimization”](engine-condition-pushdown-optimization.html
    "10.2.1.5 Engine Condition Pushdown Optimization")).'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**外连接和半连接的下推。** 在NDB 8.0.20中完成的工作允许许多外连接和半连接（不仅仅是使用主键或唯一键查找的连接）被下推到数据节点（参见[第10.2.1.5节，“引擎条件下推优化”](engine-condition-pushdown-optimization.html
    "10.2.1.5 引擎条件下推优化")）。'
- en: 'Outer joins using scans which can now be pushed include those which meet the
    following conditions:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在可以下推的扫描外连接包括符合以下条件的连接：
- en: There are no unpushed conditions on the table
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表中没有未下推的条件
- en: There are no unpushed conditions on other tables in the same join nest, or in
    upper join nests on which it depends
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在同一连接嵌套中的其他表或依赖它的上层连接嵌套中没有未下推的条件
- en: All other tables in the same join nest, or in upper join nests on which it depends,
    are also pushed
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同一连接嵌套中的所有其他表，或依赖它的上层连接嵌套，也被下推
- en: A semijoin that uses an index scan can now be pushed if it meets the conditions
    just noted for a pushed outer join, and it uses the `firstMatch` strategy (see
    [Section 10.2.2.1, “Optimizing IN and EXISTS Subquery Predicates with Semijoin
    Transformations”](semijoins.html "10.2.2.1 Optimizing IN and EXISTS Subquery Predicates
    with Semijoin Transformations")).
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果半连接使用索引扫描，并且符合刚才提到的被下推外连接的条件，并且使用`firstMatch`策略，那么现在可以将其下推（参见[第10.2.2.1节，“使用半连接转换优化IN和EXISTS子查询谓词”](semijoins.html
    "10.2.2.1 使用半连接转换优化IN和EXISTS子查询谓词")）。
- en: 'These additional improvements are made in NDB 8.0.21:'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些额外的改进是在NDB 8.0.21中完成的：
- en: Antijoins produced by the MySQL Optimizer through the transformation of `NOT
    EXISTS` and `NOT IN` queries (see [Section 10.2.2.1, “Optimizing IN and EXISTS
    Subquery Predicates with Semijoin Transformations”](semijoins.html "10.2.2.1 Optimizing
    IN and EXISTS Subquery Predicates with Semijoin Transformations")) can be pushed
    down to the data nodes by `NDB`.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过转换`NOT EXISTS`和`NOT IN`查询而由MySQL优化器生成的反连接（参见[第10.2.2.1节，“使用半连接转换优化IN和EXISTS子查询谓词”](semijoins.html
    "10.2.2.1 使用半连接转换优化IN和EXISTS子查询谓词")）可以被`NDB`下推到数据节点。
- en: This can be done when there is no unpushed condition on the table, and the query
    fulfills any other conditions which must be met for an outer join to be pushed
    down.
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当表中没有未下推的条件，并且查询满足外连接下推必须满足的任何其他条件时，可以执行此操作。
- en: '`NDB` attempts to identify and evaluate a non-dependent scalar subquery before
    trying to retrieve any rows from the table to which it is attached. When it can
    do so, the value obtained is used as part of a pushed condition, instead of using
    the subquery which provided the value.'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NDB`在尝试从附加的表中检索任何行之前，会尝试识别和评估一个非依赖标量子查询。当它能够这样做时，获得的值将作为下推条件的一部分使用，而不是使用提供值的子查询。'
- en: 'Beginning with NDB 8.0.27, conditions pushed as part of a pushed query can
    now refer to columns from ancestor tables within the same pushed query, subject
    to the following conditions:'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从NDB 8.0.27开始，作为下推查询的一部分下推的条件现在可以引用同一下推查询中祖先表的列，但必须满足以下条件：
- en: Pushed conditions may include any of the comparison operators [`<`](comparison-operators.html#operator_less-than),
    [`<=`](comparison-operators.html#operator_less-than-or-equal), [`>`](comparison-operators.html#operator_greater-than),
    [`>=`](comparison-operators.html#operator_greater-than-or-equal), [`=`](comparison-operators.html#operator_equal),
    and [`<>`](comparison-operators.html#operator_not-equal).
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推送的条件可能包括任何比较运算符[`<`](comparison-operators.html#operator_less-than)，[`<=`](comparison-operators.html#operator_less-than-or-equal)，[`>`](comparison-operators.html#operator_greater-than)，[`>=`](comparison-operators.html#operator_greater-than-or-equal)，[`=`](comparison-operators.html#operator_equal)，和[`<>`](comparison-operators.html#operator_not-equal)。
- en: Values being compared must be of the same type, including length, precision,
    and scale.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被比较的值必须是相同类型，包括长度、精度和比例。
- en: '`NULL` handling is performed according to the comparison semantics specified
    by the ISO SQL standard; any comparison with `NULL` returns `NULL`.'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NULL`处理根据ISO SQL标准指定的比较语义执行；任何与`NULL`的比较都返回`NULL`。'
- en: 'Consider the table created using the statement shown here:'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 考虑使用此处所示语句创建的表：
- en: '[PRE5]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: A query such as [`SELECT * FROM t AS m JOIN t AS n ON m.x >= n.y`](select.html
    "15.2.13 SELECT Statement") can now use the engine condition pushdown optimization
    to push down the condition column `y`.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查询语句如[`SELECT * FROM t AS m JOIN t AS n ON m.x >= n.y`](select.html "15.2.13 SELECT
    Statement")现在可以使用引擎条件推送优化来推送条件列`y`。
- en: When a join cannot be pushed, [`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")
    should provide the reason or reasons.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当无法推送连接时，[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")应提供原因或原因。
- en: See [Section 10.2.1.5, “Engine Condition Pushdown Optimization”](engine-condition-pushdown-optimization.html
    "10.2.1.5 Engine Condition Pushdown Optimization"), for more information.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息请参见[Section 10.2.1.5, “引擎条件推送优化”](engine-condition-pushdown-optimization.html
    "10.2.1.5 Engine Condition Pushdown Optimization")。
- en: The NDB API methods [`branch_col_eq_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-eq-param),
    [`branch_col_ne_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-ne-param),
    [`branch_col_lt_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-lt-param),
    [`branch_col_le_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-le-param),
    [`branch_col_gt_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-gt-param),
    and [`branch_col_ge_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-ge-param)
    were added in NDB 8.0.27 as part of this work. These [`NdbInterpretedCode`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html)
    can be used to compare column values with values of parameters.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: NDB API方法[`branch_col_eq_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-eq-param)，[`branch_col_ne_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-ne-param)，[`branch_col_lt_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-lt-param)，[`branch_col_le_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-le-param)，[`branch_col_gt_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-gt-param)，和[`branch_col_ge_param()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-ge-param)在NDB
    8.0.27中作为这项工作的一部分添加。这些[`NdbInterpretedCode`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html)可用于比较列值与参数值。
- en: In addition, [`NdbScanFilter::cmp_param()`](/doc/ndbapi/en/ndb-ndbscanfilter.html#ndb-ndbscanfilter-cmp-param),
    also added in NDB 8.0.27, makes it possible to define comparisons between column
    values and parameter values for use in performing scans.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，[`NdbScanFilter::cmp_param()`](/doc/ndbapi/en/ndb-ndbscanfilter.html#ndb-ndbscanfilter-cmp-param)，也在NDB
    8.0.27中添加，使得可以定义列值和参数值之间的比较，用于执行扫描。
- en: '**Increase in maximum row size. ** NDB 8.0 increases the maximum number of
    bytes that can be stored in an `NDBCLUSTER` table from 14000 to 30000 bytes.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最大行大小增加。** NDB 8.0将`NDBCLUSTER`表中可存储的最大字节数从14000增加到30000字节。'
- en: A [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types") or [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types") column continues to use 264 bytes of this total,
    as before.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")或[`TEXT`](blob.html "13.3.4 The
    BLOB and TEXT Types")列继续使用此总数的264字节，与以前一样。'
- en: The maximum offset for a fixed-width column of an `NDB` table is 8188 bytes;
    this is also unchanged from previous releases.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`NDB`表的固定宽度列的最大偏移量为8188字节；这与之前的版本保持不变。'
- en: See [Section 25.2.7.5, “Limits Associated with Database Objects in NDB Cluster”](mysql-cluster-limitations-database-objects.html
    "25.2.7.5 Limits Associated with Database Objects in NDB Cluster"), for more information.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第 25.2.7.5 节，“NDB 集群中数据库对象相关的限制”](mysql-cluster-limitations-database-objects.html
    "25.2.7.5 Limits Associated with Database Objects in NDB Cluster")。
- en: '**ndb_mgm SHOW command and single user mode. ** In NDB 8.0, when the cluster
    in single user mode, the output of the management client [`SHOW`](mysql-cluster-mgm-client-commands.html#ndbclient-show)
    command indicates which API or SQL node has exclusive access while this mode is
    in effect.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_mgm SHOW 命令和单用户模式。** 在 NDB 8.0 中，当集群处于单用户模式时，管理客户端的 [`SHOW`](mysql-cluster-mgm-client-commands.html#ndbclient-show)
    命令的输出指示在此模式下哪个 API 或 SQL 节点具有独占访问权限。'
- en: '**Online column renames. ** Columns of `NDB` tables can now be renamed online,
    using `ALGORITHM=INPLACE`. See [Section 25.6.12, “Online Operations with ALTER
    TABLE in NDB Cluster”](mysql-cluster-online-operations.html "25.6.12 Online Operations
    with ALTER TABLE in NDB Cluster"), for more information.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在线列重命名。** 现在可以在线重命名`NDB`表的列，使用`ALGORITHM=INPLACE`。有关更多信息，请参见[第 25.6.12 节，“NDB
    集群中 ALTER TABLE 的在线操作”](mysql-cluster-online-operations.html "25.6.12 Online Operations
    with ALTER TABLE in NDB Cluster")。'
- en: '**Improved ndb_mgmd startup times. ** Start times for management nodes daemon
    have been significantly improved in NDB 8.0, in the following ways:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**改进的 ndb_mgmd 启动时间。** 在 NDB 8.0 中，管理节点守护程序的启动时间已经得到显著改善，具体体现在以下方面：'
- en: Due to replacing the list data structure formerly used by `ndb_mgmd` for handling
    node properties from configuration data with a hash table, overall startup times
    for the management server have been decreased by a factor of 6 or more.
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于将`ndb_mgmd`以前用于处理配置数据中节点属性的列表数据结构替换为哈希表，管理服务器的整体启动时间已经减少了 6 倍或更多。
- en: In addition, in cases where data and SQL node host names not present in the
    management server's `hosts` file are used in the cluster configuration file, [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon") start times can
    be up to 20 times shorter than was previously the case.
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，在集群配置文件中使用的数据和 SQL 节点主机名未出现在管理服务器的`hosts`文件中时，[**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon") 的启动时间可能比以前短多达 20
    倍。
- en: '**NDB API enhancements. ** [`NdbScanFilter::cmp()`](/doc/ndbapi/en/ndb-ndbscanfilter.html#ndb-ndbscanfilter-cmp)
    and several comparison methods of [`NdbInterpretedCode`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html)
    can now be used to compare table column values with each other. The affected `NdbInterpretedCode`
    methods are listed here:'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB API 增强。** [`NdbScanFilter::cmp()`](/doc/ndbapi/en/ndb-ndbscanfilter.html#ndb-ndbscanfilter-cmp)
    和 [`NdbInterpretedCode`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html) 的几种比较方法现在可以用于比较表列值。受影响的`NdbInterpretedCode`方法在此列出：'
- en: '[`branch_col_eq()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-eq)'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`branch_col_eq()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-eq)'
- en: '[`branch_col_ge()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-ge)'
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`branch_col_ge()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-ge)'
- en: '[`branch_col_gt()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-gt)'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`branch_col_gt()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-gt)'
- en: '[`branch_col_le()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-le)'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`branch_col_le()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-le)'
- en: '[`branch_col_lt()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-lt)'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`branch_col_lt()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-lt)'
- en: '[`branch_col_ne()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-ne)'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`branch_col_ne()`](/doc/ndbapi/en/ndb-ndbinterpretedcode.html#ndb-ndbinterpretedcode-branch-col-ne)'
- en: For all of the methods just listed, table column values to be compared much
    be of exactly matching types, including with respect to length, precision, signedness,
    scale, character set, and collation, as applicable.
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于上述列出的所有方法，要比较的表列值必须完全匹配类型，包括长度、精度、有符号性、比例、字符集和排序规则（如适用）。
- en: See the descriptions of the individual API methods for more information.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见各个 API 方法的描述。
- en: '**Offline multithreaded index builds. ** It is now possible to specify a set
    of cores to be used for I/O threads performing offline multithreaded builds of
    ordered indexes, as opposed to normal I/O duties such as file I/O， compression，
    or decompression. “Offline” in this context refers to building of ordered indexes
    performed when the parent table is not being written to; such building takes place
    when an `NDB` cluster performs a node or system restart, or as part of restoring
    a cluster from backup using [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") [`--rebuild-indexes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_rebuild-indexes).'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**离线多线程索引构建。** 现在可以指定一组核心用于执行离线多线程构建有序索引的I/O线程，而不是执行正常的I/O任务，如文件I/O，压缩或解压缩。在这种情况下，“离线”指的是在父表未被写入时执行有序索引构建；这种构建发生在`NDB`集群执行节点或系统重启时，或作为使用[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") [`--rebuild-indexes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_rebuild-indexes)从备份还原集群的一部分时。'
- en: In addition, the default behavior for offline index build work is modified to
    use all cores available to [**ndbmtd**](mysql-cluster-programs-ndbmtd.html "25.5.3 ndbmtd
    — The NDB Cluster Data Node Daemon (Multi-Threaded)"), rather limiting itself
    to the core reserved for the I/O thread. Doing so can improve restart and restore
    times and performance, availability, and the user experience.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，离线索引构建工作的默认行为已修改为使用所有可用于[**ndbmtd**](mysql-cluster-programs-ndbmtd.html "25.5.3 ndbmtd
    — The NDB Cluster Data Node Daemon (Multi-Threaded)")的核心，而不仅限于为I/O线程保留的核心。这样做可以提高重启和还原时间以及性能、可用性和用户体验。
- en: 'This enhancement is implemented as follows:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此增强功能的实现如下：
- en: The default value for [`BuildIndexThreads`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-buildindexthreads)
    is changed from 0 to 128\. This means that offline ordered index builds are now
    multithreaded by default.
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[`BuildIndexThreads`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-buildindexthreads)的默认值从0更改为128。这意味着离线有序索引构建现在默认是多线程的。'
- en: The default value for [`TwoPassInitialNodeRestartCopy`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-twopassinitialnoderestartcopy)
    is changed from `false` to `true`. This means that an initial node restart first
    copies all data from a “live” node to one that is starting—without creating any
    indexes—builds ordered indexes offline, and then again synchronizes its data with
    the live node, that is, synchronizing twice and building indexes offline between
    the two synchronizations. This causes an initial node restart to behave more like
    the normal restart of a node, and reduces the time required for building indexes.
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[`TwoPassInitialNodeRestartCopy`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-twopassinitialnoderestartcopy)的默认值从`false`更改为`true`。这意味着初始节点重启首先将所有数据从“活动”节点复制到正在启动的节点，而不创建任何索引，然后离线构建有序索引，然后再次将其数据与活动节点同步，即在两次同步之间进行离线索引构建。这使得初始节点重启的行为更像节点的正常重启，并减少了构建索引所需的时间。'
- en: A new thread type (`idxbld`) is defined for the [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)
    configuration parameter, to allow locking of offline index build threads to specific
    CPUs.
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为[`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)配置参数定义了一个新的线程类型（`idxbld`），以允许将离线索引构建线程锁定到特定的CPU。
- en: 'In addition, `NDB` now distinguishes the thread types that are accessible to
    `ThreadConfig` by these two criteria:'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，`NDB`现在通过这两个标准区分可访问`ThreadConfig`的线程类型：
- en: Whether the thread is an execution thread. Threads of types `main`, `ldm`, `recv`,
    `rep`, `tc`, and `send` are execution threads; thread types `io`, `watchdog`,
    and `idxbld` are not.
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 线程是否是执行线程。`main`，`ldm`，`recv`，`rep`，`tc`和`send`类型的线程是执行线程；`io`，`watchdog`和`idxbld`类型的线程不是。
- en: Whether the allocation of the thread to a given task is permanent or temporary.
    Currently all thread types except `idxbld` are permanent.
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 线程分配给特定任务是永久的还是临时的。目前除了`idxbld`之外的所有线程类型都是永久的。
- en: 'For additional information, see the descriptions of the indicated parameters
    in the Manual. (Bug #25835748, Bug #26928111)'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '要获取更多信息，请参阅手册中指定参数的描述。（Bug #25835748, Bug #26928111）'
- en: '**logbuffers table backup process information. ** When performing an NDB backup,
    the [`ndbinfo.logbuffers`](mysql-cluster-ndbinfo-logbuffers.html "25.6.16.42 The
    ndbinfo logbuffers Table") table now displays information regarding buffer usage
    by the backup process on each data node. This is implemented as rows reflecting
    two new log types in addition to `REDO` and `DD-UNDO`. One of these rows has the
    log type `BACKUP-DATA`, which shows the amount of data buffer used during backup
    to copy fragments to backup files. The other row has the log type `BACKUP-LOG`,
    which displays the amount of log buffer used during the backup to record changes
    made after the backup has started. One each of these `log_type` rows is shown
    in the `logbuffers` table for each data node in the cluster. Rows having these
    two log types are present in the table only while an NDB backup is currently in
    progress. (Bug #25822988)'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**logbuffers 表备份过程信息。** 在执行 NDB 备份时，[`ndbinfo.logbuffers`](mysql-cluster-ndbinfo-logbuffers.html
    "25.6.16.42 ndbinfo logbuffers 表") 表现在显示每个数据节点上备份过程中缓冲区使用情况的信息。这通过反映两种新的日志类型的行来实现，除了
    `REDO` 和 `DD-UNDO`。其中一行具有日志类型 `BACKUP-DATA`，显示备份期间用于将片段复制到备份文件的数据缓冲区的使用量。另一行具有日志类型
    `BACKUP-LOG`，显示备份期间用于记录备份开始后所做更改的日志缓冲区的使用量。在集群中的每个数据节点的 `logbuffers` 表中显示这两种 `log_type`
    行。只有在 NDB 备份正在进行时，表中才存在具有这两种日志类型的行。 (Bug #25822988)'
- en: '**ndbinfo.processes table on Windows. ** The process ID of the monitor process
    used on Windows platforms by [`RESTART`](restart.html "15.7.8.8 RESTART Statement")
    to spawn and restart a [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    is now shown in the [`processes`](mysql-cluster-ndbinfo-processes.html "25.6.16.50 The
    ndbinfo processes Table") table as an `angel_pid`.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows 上的 ndbinfo.processes 表。** 在 Windows 平台上由 [`RESTART`](restart.html
    "15.7.8.8 RESTART 语句") 用于生成和重新启动 [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL
    服务器") 的监视进程的进程 ID 现在在 [`processes`](mysql-cluster-ndbinfo-processes.html "25.6.16.50 ndbinfo
    processes 表") 表中显示为 `angel_pid`。'
- en: '**String hashing improvements. ** Prior to NDB 8.0, all string hashing was
    based on first transforming the string into a normalized form, then MD5-hashing
    the resulting binary image. This could give rise to some performance problems,
    for the following reasons:'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**字符串哈希改进。** 在 NDB 8.0 之前，所有字符串哈希都是基于首先将字符串转换为规范化形式，然后对结果的二进制图像进行 MD5 哈希。由于以下原因，这可能会导致一些性能问题：'
- en: The normalized string is always space padded to its full length. For a [`VARCHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types"), this often involved adding more spaces than
    there were characters in the original string.
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规范化字符串始终会被填充到其完整长度。对于 [`VARCHAR`](char.html "13.3.2 CHAR 和 VARCHAR 类型")，这通常涉及添加比原始字符串中的字符更多的空格。
- en: The string libraries were not optimized for this space padding, which added
    considerable overhead in some use cases.
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串库未针对这种空格填充进行优化，在某些情况下增加了相当大的开销。
- en: The padding semantics varied between character sets, some of which were not
    padded to their full length.
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 填充语义在字符集之间有所不同，其中一些字符集没有填充到其完整长度。
- en: The transformed string could become quite large, even without space padding;
    some Unicode 9.0 collations can transform a single code point into 100 bytes or
    more of character data.
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换后的字符串可能会变得非常庞大，即使没有空格填充；一些 Unicode 9.0 的排序规则可以将单个代码点转换为 100 字节甚至更多的字符数据。
- en: Subsequent MD5 hashing consisted mainly of padding with spaces, and was not
    particularly efficient, possibly causing additional performance penalties by flushing
    significant portions of the L1 cache.
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后续的 MD5 哈希主要是通过填充空格来实现的，并且效率不是特别高，可能会通过刷新 L1 缓存的大部分内容导致额外的性能损失。
- en: A collation provides its own hash function, which hashes the string directly
    without first creating a normalized string. In addition, for a Unicode 9.0 collation,
    the hash is computed without padding. `NDB` now takes advantage of this built-in
    function whenever hashing a string identified as using a Unicode 9.0 collation.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 排序规则提供了自己的哈希函数，直接对字符串进行哈希而不是首先创建规范化字符串。此外，对于 Unicode 9.0 排序规则，哈希是在不填充的情况下计算的。`NDB`
    现在在哈希一个被识别为使用 Unicode 9.0 排序规则的字符串时利用这个内置函数。
- en: 'Since, for other collations, there are existing databases which are hash partitioned
    on the transformed string, `NDB` continues to employ the previous method for hashing
    strings that use these, to maintain compatibility. (Bug #89590, Bug #89604, Bug
    #89609, Bug #27515000, Bug #27523758, Bug #27522732)'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '由于对于其他排序规则，存在着已经在转换后的字符串上进行哈希分区的现有数据库，`NDB`继续采用先前用于对这些字符串进行哈希的方法，以保持兼容性。（Bug
    #89590，Bug #89604，Bug #89609，Bug #27515000，Bug #27523758，Bug #27522732）'
- en: '**RESET MASTER changes. ** Because the MySQL Server now executes [`RESET MASTER`](reset-master.html
    "15.4.1.2 RESET MASTER Statement") with a global read lock, the behavior of this
    statement when used with NDB Cluster has changed in the following two respects:'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RESET MASTER更改。** 因为MySQL服务器现在使用全局读锁执行[`RESET MASTER`](reset-master.html
    "15.4.1.2 RESET MASTER Statement")，所以当与NDB Cluster一起使用时，此语句的行为在以下两个方面发生了变化：'
- en: It is no longer guaranteed to be synchronous; that is, it is now possible that
    a read coming immediately before `RESET MASTER` is issued may not be logged until
    after the binary log has been rotated.
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不再保证是同步的；也就是说，现在可能会出现在发出`RESET MASTER`之前立即进行的读取操作可能要等到二进制日志被轮换后才被记录。
- en: It now behaves in exactly the same fashion, whether the statement is issued
    on the same SQL node that is writing the binary log, or on a different SQL node
    in the same cluster.
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在无论语句是在写入二进制日志的相同SQL节点上执行，还是在同一集群中的不同SQL节点上执行，它的行为都完全相同。
- en: Note
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '[`SHOW BINLOG EVENTS`](show-binlog-events.html "15.7.7.2 SHOW BINLOG EVENTS
    Statement"), [`FLUSH LOGS`](flush.html#flush-logs), and most data definition statements
    continue, as they did in previous `NDB` versions, to operate in a synchronous
    fashion.'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`SHOW BINLOG EVENTS`](show-binlog-events.html "15.7.7.2 SHOW BINLOG EVENTS
    Statement")，[`FLUSH LOGS`](flush.html#flush-logs)，以及大多数数据定义语句继续像以前的`NDB`版本一样以同步方式运行。'
- en: '**ndb_restore option usage. ** The [`--nodeid`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_nodeid)
    and [`--backupid`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_backupid)
    options are now both required when invoking [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup").'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_restore选项用法。** 在调用[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup")时，现在需要同时使用[`--nodeid`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_nodeid)和[`--backupid`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_backupid)选项。'
- en: '**ndb_log_bin default. ** NDB 8.0 changes the default value of the [`ndb_log_bin`](mysql-cluster-options-variables.html#sysvar_ndb_log_bin)
    system variable from `TRUE` to `FALSE`.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_log_bin默认值。** NDB 8.0将[`ndb_log_bin`](mysql-cluster-options-variables.html#sysvar_ndb_log_bin)系统变量的默认值从`TRUE`更改为`FALSE`。'
- en: '**Dynamic transactional resource allocation. ** Allocation of resources in
    the transaction coordinator is now performed using dynamic memory pools. This
    means that resource allocation determined by data node configuration parameters
    such as [`MaxDMLOperationsPerTransaction`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxdmloperationspertransaction),
    [`MaxNoOfConcurrentIndexOperations`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnoofconcurrentindexoperations),
    [`MaxNoOfConcurrentOperations`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnoofconcurrentoperations),
    [`MaxNoOfConcurrentScans`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnoofconcurrentscans),
    [`MaxNoOfConcurrentTransactions`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnoofconcurrenttransactions),
    [`MaxNoOfFiredTriggers`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnooffiredtriggers),
    [`MaxNoOfLocalScans`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnooflocalscans),
    and [`TransactionBufferMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactionbuffermemory)
    is now done in such a way that, if the load represented by each of these parameters
    is within the target load for all such resources, others of these resources can
    be limited so as not to exceed the total resources available.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态事务资源分配。** 现在，事务协调器中的资源分配是使用动态内存池进行的。这意味着资源分配由数据节点配置参数决定，例如[`MaxDMLOperationsPerTransaction`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxdmloperationspertransaction)、[`MaxNoOfConcurrentIndexOperations`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnoofconcurrentindexoperations)、[`MaxNoOfConcurrentOperations`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnoofconcurrentoperations)、[`MaxNoOfConcurrentScans`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnoofconcurrentscans)、[`MaxNoOfConcurrentTransactions`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnoofconcurrenttransactions)、[`MaxNoOfFiredTriggers`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnooffiredtriggers)、[`MaxNoOfLocalScans`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxnooflocalscans)和[`TransactionBufferMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactionbuffermemory)现在以这样的方式进行，即如果每个参数所代表的负载都在所有这些资源的目标负载范围内，那么其他这些资源可以被限制，以使总资源不超过可用资源。'
- en: 'As part of this work, several new data node parameters controlling transactional
    resources in [`DBTC`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbtc.html),
    listed here, have been added:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为这项工作的一部分，已添加了几个新的数据节点参数，用于控制[`DBTC`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbtc.html)中的事务资源，列在这里：
- en: '[`ReservedConcurrentIndexOperations`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedconcurrentindexoperations)'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ReservedConcurrentIndexOperations`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedconcurrentindexoperations)'
- en: '[`ReservedConcurrentOperations`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedconcurrentoperations)'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ReservedConcurrentOperations`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedconcurrentoperations)'
- en: '[`ReservedConcurrentScans`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedconcurrentscans)'
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ReservedConcurrentScans`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedconcurrentscans)'
- en: '[`ReservedConcurrentTransactions`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedconcurrenttransactions)'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ReservedConcurrentTransactions`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedconcurrenttransactions)'
- en: '[`ReservedFiredTriggers`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedfiredtriggers)'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ReservedFiredTriggers`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedfiredtriggers)'
- en: '[`ReservedLocalScans`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedlocalscans)'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ReservedLocalScans`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedlocalscans)'
- en: '[`ReservedTransactionBufferMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedtransactionbuffermemory).'
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ReservedTransactionBufferMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-reservedtransactionbuffermemory).'
- en: See the descriptions of the parameters just listed for further information.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关刚才列出的参数的更多信息，请参阅其描述。
- en: '**Backups using multiple LDMs per data node. ** `NDB` backups can now be performed
    in a parallel fashion on individual data nodes using multiple local data managers
    (LDMs). (Previously, backups were done in parallel across data nodes, but were
    always serial within data node processes.) No special syntax is required for the
    [`START BACKUP`](mysql-cluster-backup-using-management-client.html "25.6.8.2 Using
    The NDB Cluster Management Client to Create a Backup") command in the [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client") client to enable this feature,
    but all data nodes must be using multiple LDMs. This means that data nodes must
    be running [**ndbmtd**](mysql-cluster-programs-ndbmtd.html "25.5.3 ndbmtd — The
    NDB Cluster Data Node Daemon (Multi-Threaded)") ([**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — The NDB Cluster Data Node Daemon") is single-threaded and thus
    always has only one LDM) and they must be configured to use multiple LDMs before
    taking the backup; you can do this by choosing an appropriate setting for one
    of the multi-threaded data node configuration parameters [`MaxNoOfExecutionThreads`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-maxnoofexecutionthreads)
    or [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig).'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每个数据节点使用多个本地数据管理器进行备份。** `NDB` 现在可以在每个数据节点上并行执行备份，使用多个本地数据管理器（LDMs）。 （以前，备份是在数据节点之间并行进行的，但在数据节点进程内部始终是串行的。）在
    [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — NDB集群管理客户端")
    客户端的 [`START BACKUP`](mysql-cluster-backup-using-management-client.html "25.6.8.2 使用NDB集群管理客户端创建备份")
    命令中不需要特殊的语法来启用此功能，但所有数据节点必须使用多个LDMs。 这意味着数据节点必须运行 [**ndbmtd**](mysql-cluster-programs-ndbmtd.html
    "25.5.3 ndbmtd — NDB集群数据节点守护程序（多线程）")（[**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — NDB集群数据节点守护程序") 是单线程的，因此始终只有一个LDM）并且在进行备份之前必须配置为使用多个LDMs；您可以通过为多线程数据节点配置参数
    [`MaxNoOfExecutionThreads`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-maxnoofexecutionthreads)
    或 [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)
    之一选择适当的设置来实现这一点。'
- en: Backups using multiple LDMs create subdirectories, one per LDM, under the `BACKUP/BACKUP-*`backup_id`*/`
    directory. [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") now detects these subdirectories automatically,
    and if they exist, attempts to restore the backup in parallel; see [Section 25.5.23.3,
    “Restoring from a backup taken in parallel”](ndb-restore-parallel-data-node-backup.html
    "25.5.23.3 Restoring from a backup taken in parallel"), for details. (Single-threaded
    backups are restored as in previous versions of `NDB`.) It is also possible to
    restore backups taken in parallel using an [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") binary from a previous
    version of NDB Cluster by modifying the usual restore procedure; [Section 25.5.23.3.2,
    “Restoring a parallel backup serially”](ndb-restore-parallel-data-node-backup.html#ndb-restore-parallel-backup-serial
    "25.5.23.3.2 Restoring a parallel backup serially"), provides information on how
    to do this.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用多个LDMs 进行备份会在 `BACKUP/BACKUP-*backup_id*/` 目录下创建子目录，每个LDM 一个。[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — 恢复NDB集群备份") 现在会自动检测这些子目录，如果存在，则尝试并行恢复备份；详细信息请参见 [第25.5.23.3节，“从并行备份中恢复”](ndb-restore-parallel-data-node-backup.html
    "25.5.23.3 从并行备份中恢复")。 （单线程备份将像以前的 `NDB` 版本一样恢复。）还可以通过修改通常的恢复过程，使用先前版本的NDB集群的
    [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — 恢复NDB集群备份") 二进制文件来恢复并行备份；[第25.5.23.3.2节，“串行恢复并行备份”](ndb-restore-parallel-data-node-backup.html#ndb-restore-parallel-backup-serial
    "25.5.23.3.2 串行恢复并行备份") 提供了如何执行此操作的信息。
- en: You can force the creation of single-threaded backups by setting the [`EnableMultithreadedBackup`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-enablemultithreadedbackup)
    data node parameter to 0 for all data nodes in the `[ndbd default]` section of
    the cluster's global configuration file (`config.ini`).
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以通过在集群的全局配置文件（`config.ini`）的 `[ndbd default]` 部分为所有数据节点将 [`EnableMultithreadedBackup`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-enablemultithreadedbackup)
    数据节点参数设置为 0 来强制创建单线程备份。
- en: '**Binary configuration file enhancements. ** NDB 8.0 uses a new format for
    the management server''s binary configuration file. Previously, a maximum of 16381
    sections could appear in the cluster configuration file; now the maximum number
    of sections is 4G. This is intended to support larger numbers of nodes in a cluster
    than was possible before this change.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二进制配置文件增强。** NDB 8.0使用了管理服务器二进制配置文件的新格式。以前，集群配置文件中最多可以出现16381个部分；现在，部分的最大数量为4G。这旨在支持比以前更大数量的节点在集群中。'
- en: Upgrades to the new format are relatively seamless, and should seldom if ever
    require manual intervention, as the management server continues to be able to
    read the old format without issue. A downgrade from NDB 8.0 to an older version
    of the NDB Cluster software requires manual removal of any binary configuration
    files or, alternatively, starting the older management server binary with the
    [`--initial`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_initial) option.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 升级到新格式相对无缝，并且很少需要手动干预，因为管理服务器仍然可以无问题地读取旧格式。从NDB 8.0降级到旧版本的NDB集群软件需要手动删除任何二进制配置文件，或者使用[`--initial`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_initial)选项启动旧管理服务器二进制文件。
- en: For more information, see [Section 25.3.7, “Upgrading and Downgrading NDB Cluster”](mysql-cluster-upgrade-downgrade.html
    "25.3.7 Upgrading and Downgrading NDB Cluster").
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[第25.3.7节，“NDB集群升级和降级”](mysql-cluster-upgrade-downgrade.html "25.3.7 NDB集群升级和降级")。
- en: '**Increased number of data nodes. ** NDB 8.0 increases the maximum number of
    data nodes supported per cluster to 144 (previously, this was 48). Data nodes
    can now use node IDs in the range 1 to 144, inclusive.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增加数据节点数量。** NDB 8.0将每个集群支持的数据节点最大数量增加到144（以前为48）。数据节点现在可以使用范围为1到144的节点ID。'
- en: Previously, the recommended node IDs for management nodes were 49 and 50\. These
    are still supported for management nodes, but using them as such limits the maximum
    number of data nodes to 142; for this reason, it is now recommended that node
    IDs 145 and 146 are used for management nodes.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，管理节点的推荐节点ID为49和50。这些仍然支持用作管理节点，但将它们用作此类节点会限制数据节点的最大数量为142；因此，现在建议将节点ID 145和146用于管理节点。
- en: As part of this work, the format used for the data node `sysfile` has been updated
    to version 2. This file records information such as the last global checkpoint
    index, restart status, and node group membership of each node (see [NDB Cluster
    Data Node File System Directory](/doc/ndb-internals/en/ndb-internals-ndbd-filesystemdir-files.html)).
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为这项工作的一部分，用于数据节点`sysfile`的格式已更新为版本2。该文件记录了每个节点的最后全局检查点索引、重启状态和节点组成员资格等信息（参见[NDB集群数据节点文件系统目录](/doc/ndb-internals/en/ndb-internals-ndbd-filesystemdir-files.html)）。
- en: '**RedoOverCommitCounter and RedoOverCommitLimit changes. ** Due to ambiguities
    in the semantics for setting them to 0, the minimum value for each of the data
    node configuration parameters [`RedoOverCommitCounter`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-redoovercommitcounter)
    and [`RedoOverCommitLimit`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-redoovercommitlimit)
    has been increased to 1.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RedoOverCommitCounter和RedoOverCommitLimit更改。** 由于将它们设置为0的语义存在歧义，因此数据节点配置参数[`RedoOverCommitCounter`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-redoovercommitcounter)和[`RedoOverCommitLimit`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-redoovercommitlimit)的最小值已增加到1。'
- en: '**ndb_autoincrement_prefetch_sz changes. ** The default value of the [`ndb_autoincrement_prefetch_sz`](mysql-cluster-options-variables.html#sysvar_ndb_autoincrement_prefetch_sz)
    server system variable is increased to 512.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_autoincrement_prefetch_sz更改。** [`ndb_autoincrement_prefetch_sz`](mysql-cluster-options-variables.html#sysvar_ndb_autoincrement_prefetch_sz)服务器系统变量的默认值增加到512。'
- en: '**Changes in parameter maximums and defaults. ** NDB 8.0 makes the following
    changes in configuration parameter maximum and default values:'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**参数最大值和默认值的更改。** NDB 8.0对配置参数的最大值和默认值进行了以下更改：'
- en: The maximum for [`DataMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-datamemory)
    is increased to 16 terabytes.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-datamemory)的最大值增加到16TB。'
- en: The maximum for [`DiskPageBufferMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-diskpagebuffermemory)
    is also increased to 16 terabytes.
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DiskPageBufferMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-diskpagebuffermemory)的最大值也增加到16TB。'
- en: The default value for [`StringMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-stringmemory)
    is increased to 25%.
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认值[`StringMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-stringmemory)已增加至25%。
- en: The default for [`LcpScanProgressTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-lcpscanprogresstimeout)
    is increased to 180 seconds.
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`LcpScanProgressTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-lcpscanprogresstimeout)的默认值已增加至180秒。'
- en: '**Disk Data checkpointing improvements. ** NDB Cluster 8.0 provides a number
    of new enhancements which help to reduce the latency of checkpoints of Disk Data
    tables and tablespaces when using non-volatile memory devices such as solid-state
    drives and the NVMe specification for such devices. These improvements include
    those in the following list:'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**磁盘数据检查点改进。** NDB Cluster 8.0提供了许多新的增强功能，有助于在使用非易失性内存设备（如固态硬盘和NVMe规范的设备）时减少磁盘数据表和表空间的检查点延迟。这些改进包括以下内容：'
- en: Avoiding bursts of checkpoint disk writes
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免检查点磁盘写入的突发
- en: Speeding up checkpoints for disk data tablespaces when the redo log or the undo
    log becomes full
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速当重做日志或撤销日志变满时的磁盘数据表空间检查点
- en: Balancing checkpoints to disk and in-memory checkpoints against one other, when
    necessary
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在必要时平衡磁盘和内存检查点之间的检查点
- en: Protecting disk devices from overload to help ensure low latency under high
    loads
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护磁盘设备免受过载，以确保在高负载下低延迟
- en: As part of this work, two data node configuration parameters have been added.
    [`MaxDiskDataLatency`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxdiskdatalatency)
    places a ceiling on the degree of latency permitted for disk access and causes
    transactions taking longer than this length of time to be aborted. [`DiskDataUsingSameDisk`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-diskdatausingsamedisk)
    makes it possible to take advantage of housing Disk Data tablespaces on separate
    disks by increasing the rate at which checkpoints of such tablespaces can be performed.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为这项工作的一部分，已添加了两个数据节点配置参数。[`MaxDiskDataLatency`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-maxdiskdatalatency)设定了磁盘访问允许的延迟上限，并导致超过此时间长度的事务被中止。[`DiskDataUsingSameDisk`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-diskdatausingsamedisk)使得可以利用将磁盘数据表空间放置在不同磁盘上，从而增加这些表空间的检查点执行速度。
- en: 'In addition, three new tables in the [`ndbinfo`](mysql-cluster-ndbinfo.html
    "25.6.16 ndbinfo: The NDB Cluster Information Database") database provide information
    about Disk Data performance:'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，[`ndbinfo`](mysql-cluster-ndbinfo.html "25.6.16 ndbinfo：NDB Cluster信息数据库")数据库中的三个新表提供有关磁盘数据性能的信息：
- en: The [`diskstat`](mysql-cluster-ndbinfo-diskstat.html "25.6.16.31 The ndbinfo
    diskstat Table") table reports on writes to Disk Data tablespaces during the past
    second
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diskstat`](mysql-cluster-ndbinfo-diskstat.html "25.6.16.31 ndbinfo diskstat表")表报告过去一秒钟对磁盘数据表空间的写入'
- en: The [`diskstats_1sec`](mysql-cluster-ndbinfo-diskstats-1sec.html "25.6.16.32 The
    ndbinfo diskstats_1sec Table") table reports on writes to Disk Data tablespaces
    for each of the last 20 seconds
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diskstats_1sec`](mysql-cluster-ndbinfo-diskstats-1sec.html "25.6.16.32 ndbinfo
    diskstats_1sec表")表报告过去20秒对磁盘数据表空间的写入'
- en: The [`pgman_time_track_stats`](mysql-cluster-ndbinfo-pgman-time-track-stats.html
    "25.6.16.49 The ndbinfo pgman_time_track_stats Table") table reports on the latency
    of disk operations relating to Disk Data tablespaces
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`pgman_time_track_stats`](mysql-cluster-ndbinfo-pgman-time-track-stats.html
    "25.6.16.49 ndbinfo pgman_time_track_stats表")表报告与磁盘数据表空间相关的磁盘操作的延迟'
- en: '**Memory allocation and TransactionMemory. ** A new [`TransactionMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactionmemory)
    parameter simplifies allocation of data node memory for transactions as part of
    the work done to pool transactional and Local Data Manager (LDM) memory. This
    parameter is intended to replace several older transactional memory parameters
    which have been deprecated.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存分配和TransactionMemory。** 新的[`TransactionMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactionmemory)参数简化了数据节点内存用于事务的分配，作为汇总事务和本地数据管理器（LDM）内存的工作的一部分。该参数旨在取代已被弃用的几个旧事务内存参数。'
- en: 'Transaction memory can now be set in any of the three ways listed here:'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务内存现在可以通过以下三种方式之一设置：
- en: Several configuration parameters are incompatible with [`TransactionMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactionmemory).
    If any of these are set, `TransactionMemory` cannot be set (see [Parameters incompatible
    with TransactionMemory](mysql-cluster-ndbd-definition.html#mysql-cluster-transactionmemory-incompatible
    "Parameters incompatible with TransactionMemory")), and the data node's transaction
    memory is determined as it was previous to NDB 8.0.
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几个配置参数与[`TransactionMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactionmemory)不兼容。如果设置了其中任何一个，就无法设置`TransactionMemory`（请参阅[与TransactionMemory不兼容的参数](mysql-cluster-ndbd-definition.html#mysql-cluster-transactionmemory-incompatible
    "Parameters incompatible with TransactionMemory")），并且数据节点的事务内存将如同在NDB 8.0之前一样确定。
- en: Note
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Attempting to set `TransactionMemory` and any of these parameters concurrently
    in the `config.ini` file prevents the management server from starting.
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试在`config.ini`文件中同时设置`TransactionMemory`和任何这些参数会阻止管理服务器启动。
- en: If `TransactionMemory` is set, this value is used for determining transaction
    memory. `TransactionMemory` cannot be set if any of the incompatible parameters
    mentioned in the previous item have also been set.
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设置了`TransactionMemory`，则该值用于确定事务内存。如果已设置了前面提到的任何不兼容参数，则无法设置`TransactionMemory`。
- en: If none of the incompatible parameters are set and `TransactionMemory` is also
    not set, transaction memory is set by `NDB`.
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果没有设置任何不兼容的参数，并且也没有设置`TransactionMemory`，则事务内存由`NDB`设置。
- en: For more information, see the description of [`TransactionMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactionmemory),
    as well as [Section 25.4.3.13, “Data Node Memory Management”](mysql-cluster-data-node-memory-management.html
    "25.4.3.13 Data Node Memory Management").
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[`TransactionMemory`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactionmemory)的描述，以及[第25.4.3.13节，“数据节点内存管理”](mysql-cluster-data-node-memory-management.html
    "25.4.3.13 Data Node Memory Management")。
- en: '**Support for additional fragment replicas. ** NDB 8.0 increases the maximum
    number of fragment replicas supported in production from two to four. (Previously,
    it was possible to set [`NoOfReplicas`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-noofreplicas)
    to 3 or 4, but this was not officially supported or verified in testing.)'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**支持额外的片段副本。** NDB 8.0将在生产中支持的片段副本的最大数量从两个增加到四个。（以前，可以将[`NoOfReplicas`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-noofreplicas)设置为3或4，但这在测试中并未得到官方支持或验证。）'
- en: '**Restoring by slices. ** Beginning with NDB 8.0.20, it is possible to divide
    a backup into roughly equal portions (slices) and to restore these slices in parallel
    using two new options implemented for [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup"):'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分片恢复。** 从NDB 8.0.20开始，可以将备份分成大致相等的部分（片段），并使用两个新选项并行恢复这些片段，这两个选项已经在[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup")中实现：'
- en: '[`--num-slices`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_num-slices)
    determines the number of slices into which the backup should be divided.'
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--num-slices`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_num-slices)确定备份应分成的片段数。'
- en: '[`--slice-id`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_slice-id)
    provides the ID of the slice to be restored by the current instance of [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup").'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--slice-id`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_slice-id)提供要由当前实例的[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup")恢复的片段的ID。'
- en: This makes it possible to employ multiple instances of [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") to restore subsets of the
    backup in parallel, potentially reducing the amount of time required to perform
    the restore operation.
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这使得可以使用多个实例的[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup")并行恢复备份的子集，可能减少执行恢复操作所需的时间。
- en: For more information, see the description of the [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") [`--num-slices`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_num-slices)
    option.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup")的[`--num-slices`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_num-slices)选项的描述。
- en: '**Read from any fragment replica enabled. ** Read from any fragment replica
    is enabled by default for all `NDB` tables. This means that the default value
    for the [`ndb_read_backup`](mysql-cluster-options-variables.html#sysvar_ndb_read_backup)
    system variable is now ON, and that the value of the `NDB_TABLE` comment option
    `READ_BACKUP` is 1 when creating a new `NDB` table. Enabling read from any fragment
    replica significantly improves performance for reads from `NDB` tables, with minimal
    impact on writes.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从任何片段副本读取已启用。** 对于所有`NDB`表，默认启用从任何片段副本读取。这意味着[`ndb_read_backup`](mysql-cluster-options-variables.html#sysvar_ndb_read_backup)系统变量的默认值现在为ON，并且在创建新的`NDB`表时，`NDB_TABLE`注释选项`READ_BACKUP`的值为1。启用从任何片段副本读取显著提高了从`NDB`表读取的性能，对写入的影响很小。'
- en: For more information, see the description of the [`ndb_read_backup`](mysql-cluster-options-variables.html#sysvar_ndb_read_backup)
    system variable, and [Section 15.1.20.12, “Setting NDB Comment Options”](create-table-ndb-comment-options.html
    "15.1.20.12 Setting NDB Comment Options").
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[`ndb_read_backup`](mysql-cluster-options-variables.html#sysvar_ndb_read_backup)系统变量的描述，以及[Section 15.1.20.12，“设置NDB注释选项”](create-table-ndb-comment-options.html
    "15.1.20.12 Setting NDB Comment Options")。
- en: '**ndb_blob_tool enhancements. ** Beginning with NDB 8.0.20, the [**ndb_blob_tool**](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — Check and Repair BLOB and TEXT columns of NDB Cluster
    Tables") utility can detect missing blob parts for which inline parts exist and
    replace these with placeholder blob parts (consisting of space characters) of
    the correct length. To check whether there are missing blob parts, use the [`--check-missing`](mysql-cluster-programs-ndb-blob-tool.html#option_ndb_blob_tool_check-missing)
    option with this program. To replace any missing blob parts with placeholders,
    use the [`--add-missing`](mysql-cluster-programs-ndb-blob-tool.html#option_ndb_blob_tool_add-missing)
    option.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_blob_tool增强。** 从NDB 8.0.20开始，[**ndb_blob_tool**](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — Check and Repair BLOB and TEXT columns of NDB Cluster
    Tables")实用程序可以检测缺失的blob部分，其中存在内联部分，并用正确长度的占位符blob部分（由空格字符组成）替换这些部分。要检查是否存在缺失的blob部分，请使用此程序的[`--check-missing`](mysql-cluster-programs-ndb-blob-tool.html#option_ndb_blob_tool_check-missing)选项。要用占位符替换任何缺失的blob部分，请使用[`--add-missing`](mysql-cluster-programs-ndb-blob-tool.html#option_ndb_blob_tool_add-missing)选项。'
- en: For more information, see [Section 25.5.6, “ndb_blob_tool — Check and Repair
    BLOB and TEXT columns of NDB Cluster Tables”](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — Check and Repair BLOB and TEXT columns of NDB Cluster
    Tables").
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 25.5.6，“ndb_blob_tool — 检查和修复NDB Cluster表的BLOB和TEXT列”](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — Check and Repair BLOB and TEXT columns of NDB Cluster
    Tables")。
- en: '**ndbinfo versioning. ** `NDB` 8.0.20 and later supports versioning for [`ndbinfo`](mysql-cluster-ndbinfo.html
    "25.6.16 ndbinfo: The NDB Cluster Information Database") tables, and maintains
    the current definitions for its tables internally. At startup, `NDB` compares
    its supported `ndbinfo` version with the version stored in the data dictionary.
    If the versions differ, `NDB` drops any old `ndbinfo` tables and recreates them
    using the current definitions.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndbinfo 版本控制。** `NDB` 8.0.20及更高版本支持[`ndbinfo`](mysql-cluster-ndbinfo.html
    "25.6.16 ndbinfo: The NDB Cluster Information Database")表的版本控制，并在内部维护其表的当前定义。在启动时，`NDB`会将其支持的`ndbinfo`版本与数据字典中存储的版本进行比较。如果版本不同，`NDB`会删除任何旧的`ndbinfo`表，并使用当前定义重新创建它们。'
- en: '**Support for Fedora Linux. ** Beginning with NDB 8.0.20, Fedora Linux is a
    supported platform for NDB Cluster Community releases and can be installed using
    the RPMs supplied for this purpose by Oracle. These can be obtained from the [NDB
    Cluster downloads page](https://dev.mysql.com/downloads/cluster/).'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对Fedora Linux的支持。** 从NDB 8.0.20开始，Fedora Linux是NDB Cluster Community版本的支持平台，并可以使用Oracle提供的RPM包进行安装。这些可以从[NDB
    Cluster下载页面](https://dev.mysql.com/downloads/cluster/)获取。'
- en: '**NDB programs—NDBT dependency removal. ** The dependency of a number of `NDB`
    utility programs on the `NDBT` library has been removed. This library is used
    internally for development, and is not required for normal use; its inclusion
    in these programs could lead to unwanted issues when testing.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB程序—NDBT依赖项移除。** 已移除了许多`NDB`实用程序对`NDBT`库的依赖。该库在开发中内部使用，对于正常使用不需要；将其包含在这些程序中可能会导致测试时出现不希望的问题。'
- en: 'Affected programs are listed here, along with the `NDB` versions in which the
    dependency was removed:'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 受影响的程序列在此处，以及移除依赖项的`NDB`版本：
- en: '[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup")'
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — 恢复 NDB 集群备份")'
- en: '[**ndb_delete_all**](mysql-cluster-programs-ndb-delete-all.html "25.5.8 ndb_delete_all
    — Delete All Rows from an NDB Table")'
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**ndb_delete_all**](mysql-cluster-programs-ndb-delete-all.html "25.5.8 ndb_delete_all
    — 删除 NDB 表中的所有行")'
- en: '[**ndb_show_tables**](mysql-cluster-programs-ndb-show-tables.html "25.5.27 ndb_show_tables
    — Display List of NDB Tables") (NDB 8.0.20)'
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**ndb_show_tables**](mysql-cluster-programs-ndb-show-tables.html "25.5.27 ndb_show_tables
    — 显示 NDB 表列表") (NDB 8.0.20)'
- en: '[**ndb_waiter**](mysql-cluster-programs-ndb-waiter.html "25.5.30 ndb_waiter
    — Wait for NDB Cluster to Reach a Given Status") (NDB 8.0.20)'
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**ndb_waiter**](mysql-cluster-programs-ndb-waiter.html "25.5.30 ndb_waiter
    — 等待 NDB 集群达到给定状态") (NDB 8.0.20)'
- en: The principal effect of this change for users is that these programs no longer
    print `NDBT_ProgramExit - *`status`*` following completion of a run. Applications
    that depend upon such behavior should be updated to reflect the change when upgrading
    to the indicated versions.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这一变化对用户的主要影响是，这些程序在运行完成后不再打印`NDBT_ProgramExit - *`status`*`。依赖于这种行为的应用程序在升级到指定版本时应该进行更新。
- en: '**Foreign keys and lettercasing. ** [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") stores the names of foreign keys using the case with which they
    were defined. Formerly, when the value of the [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    system variable was set to 0, it performed case-sensitive comparisons of foreign
    key names as used in [`SELECT`](select.html "15.2.13 SELECT Statement") and other
    SQL statements with the names as stored. Beginning with NDB 8.0.20, such comparisons
    are now always performed in a case-insensitive fashion, regardless of the value
    of `lower_case_table_names`.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外键和大小写。** [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB 集群 8.0") 使用外键名称的定义大小写存储这些名称。以前，当[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)系统变量的值设置为
    0 时，它对外键名称进行区分大小写比较，就像在[`SELECT`](select.html "15.2.13 SELECT 语句")和其他 SQL 语句中使用的名称与存储的名称一样。从
    NDB 8.0.20 开始，无论`lower_case_table_names`的值如何，这样的比较现在总是以不区分大小写的方式进行。'
- en: '**Multiple transporters. ** NDB 8.0.20 introduces support for multiple transporters
    to handle node-to-node communication between pairs of data nodes. This facilitates
    higher rates of update operations for each node group in the cluster, and helps
    avoid constraints imposed by system or other limitations on inter-node communications
    using a single socket.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多个传输器。** NDB 8.0.20 引入了支持多个传输器，用于处理数据节点之间的节点间通信。这有助于集群中每个节点组的更新操作速率更高，并有助于避免使用单个套接字进行节点间通信时系统或其他限制所施加的约束。'
- en: By default, `NDB` now uses a number of transporters based on the number of local
    data management (LDM) threads or the number of transaction coordinator (TC) threads,
    whichever is greater. By default, the number of transporters is equal to half
    of this number. While the default should perform well for most workloads, it is
    possible to adjust the number of transporters employed by each node group by setting
    the [`NodeGroupTransporters`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-nodegrouptransporters)
    data node configuration parameter (also introduced in NDB 8.0.20), up a maximum
    of the greater of the number of LDM threads or the number of TC threads. Setting
    it to 0 causes the number of transporters to be the same as the number of LDM
    threads.
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，`NDB`现在根据本地数据管理（LDM）线程数或事务协调器（TC）线程数中较大的那个数来使用一定数量的传输器。默认情况下，传输器的数量等于这个数的一半。虽然默认情况下对大多数工作负载表现良好，但可以通过设置[`NodeGroupTransporters`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-nodegrouptransporters)数据节点配置参数（也在
    NDB 8.0.20 中引入）来调整每个节点组使用的传输器数量，最大值为 LDM 线程数或 TC 线程数中较大的那个数。将其设置为 0 会导致传输器的数量与
    LDM 线程数相同。
- en: '**ndb_restore: primary key schema changes. ** NDB 8.0.21 (and later) supports
    different primary key definitions for source and target tables when restoring
    an `NDB` native backup with [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") when it is run with the
    [`--allow-pk-changes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_allow-pk-changes)
    option. Both increasing and decreasing the number of columns making up the original
    primary key are supported.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_restore：主键模式更改。** NDB 8.0.21（及更高版本）在使用[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — 恢复 NDB 集群备份")恢复 `NDB` 本机备份时，支持源表和目标表的不同主键定义，当使用[`--allow-pk-changes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_allow-pk-changes)选项运行时。
    支持增加和减少构成原始主键的列数。'
- en: When the primary key is extended with an additional column or columns, any columns
    added must be defined as `NOT NULL`, and no values in any such columns may be
    changed during the time that the backup is being taken. Because some applications
    set all column values in a row when updating it, whether or not all values are
    actually changed, this can cause a restore operation to fail even if no values
    in the column to be added to the primary key have changed. You can override this
    behavior using the [`--ignore-extended-pk-updates`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_ignore-extended-pk-updates)
    option also added in NDB 8.0.21; in this case, you must ensure that no such values
    are changed.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当主键使用额外列扩展时，添加的任何列必须定义为`NOT NULL`，并且在进行备份时，这些列中的任何值都不得更改。 因为一些应用程序在更新行时会设置所有列的值，无论实际上是否更改了所有值，这可能会导致恢复操作失败，即使要添加到主键的列中没有值发生更改。
    您可以使用 NDB 8.0.21 中还添加的[`--ignore-extended-pk-updates`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_ignore-extended-pk-updates)选项覆盖此行为；在这种情况下，您必须确保不更改任何这样的值。
- en: A column can be removed from the table's primary key whether or not this column
    remains part of the table.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论这一列是否仍然是表的一部分，都可以从表的主键中删除一列。
- en: For more information, see the description of the [`--allow-pk-changes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_allow-pk-changes)
    option for [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup").
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要获取更多信息，请参阅[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — 恢复 NDB 集群备份")选项[`--allow-pk-changes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_allow-pk-changes)的描述。
- en: '**Merging backups with ndb_restore. ** In some cases, it may be desirable to
    consolidate data originally stored in different instances of NDB Cluster (all
    using the same schema) into a single target NDB Cluster. This is now supported
    when using backups created in the [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client") client (see [Section 25.6.8.2,
    “Using The NDB Cluster Management Client to Create a Backup”](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 Using The NDB Cluster Management Client to Create a Backup")) and restoring
    them with [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup"), using the [`--remap-column`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_remap-column)
    option added in NDB 8.0.21 along with [`--restore-data`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_restore-data)
    (and possibly additional compatible options as needed or desired). `--remap-column`
    can be employed to handle cases in which primary and unique key values are overlapping
    between source clusters, and it is necessary that they do not overlap in the target
    cluster, as well as to preserve other relationships between tables such as foreign
    keys.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 ndb_restore 合并备份。** 在某些情况下，可能希望将最初存储在不同 NDB 集群实例（都使用相同模式）中的数据合并到单个目标 NDB
    集群中。 当使用[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — NDB
    集群管理客户端")客户端创建的备份（请参阅[第 25.6.8.2 节，“使用 NDB 集群管理客户端创建备份”](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 使用 NDB 集群管理客户端创建备份")）并使用[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — 恢复 NDB 集群备份")进行恢复时，现在支持使用 NDB 8.0.21 中添加的[`--remap-column`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_remap-column)选项以及[`--restore-data`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_restore-data)（可能还需要或希望的其他兼容选项）。
    `--remap-column` 可用于处理源集群之间主键和唯一键值重叠的情况，并且在目标集群中不重叠是必要的，以及保留表之间的其他关系，如外键。'
- en: '[`--remap-column`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_remap-column)
    takes as its argument a string having the format `*`db`*.*`tbl`*.*`col`*:*`fn`*:*`args`*`,
    where *`db`*, *`tbl`*, and *`col`* are, respectively, the names of the database,
    table, and column, *`fn`* is the name of a remapping function, and *`args`* is
    one or more arguments to *`fn`*. There is no default value. Only `offset` is supported
    as the function name, with *`args`* as the integer offset to be applied to the
    value of the column when inserting it into the target table from the backup. This
    column must be one of [`INT`](integer-types.html "13.1.2 Integer Types (Exact
    Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT") or [`BIGINT`](integer-types.html
    "13.1.2 Integer Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT,
    BIGINT"); the allowed range of the offset value is the same as the signed version
    of that type (this allows the offset to be negative if desired).'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`--remap-column`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_remap-column)的参数是一个字符串，格式为`*`db`*.*`tbl`*.*`col`*:*`fn`*:*`args`*`，其中*`db`*，*`tbl`*和*`col`*分别是数据库，表和列的名称，*`fn`*是重新映射函数的名称，*`args`*是一个或多个*`fn`*的参数。没有默认值。只支持`offset`作为函数名称，*`args`*是要在从备份插入目标表时应用到列值的整数偏移量。此列必须是[`INT`](integer-types.html
    "13.1.2 Integer Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT,
    BIGINT")或[`BIGINT`](integer-types.html "13.1.2 Integer Types (Exact Value) - INTEGER,
    INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT")之一；偏移值的允许范围与该类型的有符号版本相同（如果需要，这允许偏移为负）。'
- en: The new option can be used multiple times in the same invocation of [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup"), so that you can remap
    to new values multiple columns of the same table, different tables, or both. The
    offset value does not have to be the same for all instances of the option.
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新选项可以在同一次调用[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup")中多次使用，这样您可以重新映射同一表的多个列，不同表或两者的新值。偏移值不必对所有选项实例相同。
- en: 'In addition, two new options are provided for [**ndb_desc**](mysql-cluster-programs-ndb-desc.html
    "25.5.9 ndb_desc — Describe NDB Tables"), also beginning in NDB 8.0.21:'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，还为[**ndb_desc**](mysql-cluster-programs-ndb-desc.html "25.5.9 ndb_desc —
    Describe NDB Tables")提供了两个新选项，从NDB 8.0.21开始：
- en: '[`--auto-inc`](mysql-cluster-programs-ndb-desc.html#option_ndb_desc_auto-inc)
    (short form `-a`): Includes the next auto-increment value in the output, if the
    table has an `AUTO_INCREMENT` column.'
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--auto-inc`](mysql-cluster-programs-ndb-desc.html#option_ndb_desc_auto-inc)（简写形式`-a`）：如果表具有`AUTO_INCREMENT`列，则在输出中包含下一个自增值。'
- en: '[`--context`](mysql-cluster-programs-ndb-desc.html#option_ndb_desc_context)
    (short form `-x`): Provides extra information about the table, including the schema,
    database name, table name, and internal ID.'
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--context`](mysql-cluster-programs-ndb-desc.html#option_ndb_desc_context)（简写形式`-x`）：提供有关表的额外信息，包括模式，数据库名称，表名称和内部ID。'
- en: For more information and examples, see the description of the [`--remap-column`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_remap-column)
    option.
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息和示例，请参阅[`--remap-column`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_remap-column)选项的描述。
- en: '**Send thread improvements. ** As of NDB 8.0.20, each send thread now handles
    sends to a subset of transporters, and each block thread now assists only one
    send thread, resulting in more send threads, and thus better performance and data
    node scalability.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发送线程改进。** 从NDB 8.0.20开始，每个发送线程现在处理发送到一组传输器的发送，并且每个块线程现在只辅助一个发送线程，导致更多的发送线程，从而提高性能和数据节点的可伸缩性。'
- en: '**Adaptive spin control using SpinMethod. ** A simple interface for setting
    up adaptive CPU spin on platforms supporting it, using the [`SpinMethod`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-spinmethod)
    data node parameter. This parameter (added in NDB 8.0.20, functional beginning
    with NDB 8.0.24) has four settings, one each for static spinning, cost-based adaptive
    spinning, latency-optimized adaptive spinning, and adaptive spinning optimized
    for database machines on which each thread has its own CPU. Each of these settings
    causes the data node to use a set of predetermined values for one or more spin
    parameters which enable adaptive spinning, set spin timing, and set spin overhead,
    as appropriate to a given scenario, thus obviating the need to set these directly
    for common use cases.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用SpinMethod进行自适应自旋控制。** 在支持的平台上设置自适应CPU自旋的简单接口，使用[`SpinMethod`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-spinmethod)数据节点参数。该参数（在NDB
    8.0.20中添加，从NDB 8.0.24开始生效）有四个设置，分别用于静态自旋、基于成本的自适应自旋、优化延迟的自适应自旋以及针对每个线程都有自己CPU的数据库机器进行优化的自适应自旋。这些设置中的每一个都会使数据节点使用一组预定值来设置一个或多个自旋参数，从而实现自适应自旋，设置自旋时间和自旋开销，适用于特定场景，从而无需为常见用例直接设置这些值。'
- en: 'For fine-tuning spin behavior, it is also possible to set these and additional
    spin parameters directly, using the existing [`SchedulerSpinTimer`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-schedulerspintimer)
    data node configuration parameter as well as the following [`DUMP`](/doc/ndb-internals/en/dump-commands.html)
    commands in the [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm
    — The NDB Cluster Management Client") client:'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了对自旋行为进行微调，还可以直接设置这些和其他自旋参数，使用现有的[`SchedulerSpinTimer`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-schedulerspintimer)数据节点配置参数以及在[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — NDB集群管理客户端")客户端中的以下[`DUMP`](/doc/ndb-internals/en/dump-commands.html)命令：
- en: '[`DUMP 104000 (SetSchedulerSpinTimerAll)`](/doc/ndb-internals/en/dump-command-104000.html):
    Sets spin time for all threads'
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DUMP 104000 (SetSchedulerSpinTimerAll)`](/doc/ndb-internals/en/dump-command-104000.html):
    设置所有线程的自旋时间'
- en: '[`DUMP 104001 (SetSchedulerSpinTimerThread)`](/doc/ndb-internals/en/dump-command-104001.html):
    Sets spin time for a specified thread'
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DUMP 104001 (SetSchedulerSpinTimerThread)`](/doc/ndb-internals/en/dump-command-104001.html):
    设置指定线程的自旋时间'
- en: '[`DUMP 104002 (SetAllowedSpinOverhead)`](/doc/ndb-internals/en/dump-command-104002.html):
    Sets spin overhead as the number of units of CPU time allowed to gain 1 unit of
    latency'
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DUMP 104002 (SetAllowedSpinOverhead)`](/doc/ndb-internals/en/dump-command-104002.html):
    设置自旋开销，即允许获得1单位延迟所需的CPU时间单位数'
- en: '[`DUMP 104003 (SetSpintimePerCall)`](/doc/ndb-internals/en/dump-command-104003.html):
    Sets the time for a call to spin'
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DUMP 104003 (SetSpintimePerCall)`](/doc/ndb-internals/en/dump-command-104003.html):
    设置调用的自旋时间'
- en: '[`DUMP 104004 (EnableAdaptiveSpinning)`](/doc/ndb-internals/en/dump-command-104004.html):
    Enables or disables adaptive spinning'
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DUMP 104004 (EnableAdaptiveSpinning)`](/doc/ndb-internals/en/dump-command-104004.html):
    启用或禁用自适应自旋'
- en: NDB 8.0.20 also adds a new TCP configuration parameter [`TcpSpinTime`](mysql-cluster-tcp-definition.html#ndbparam-tcp-tcpspintime)
    which sets the time to spin for a given TCP connection.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: NDB 8.0.20还添加了一个新的TCP配置参数[`TcpSpinTime`](mysql-cluster-tcp-definition.html#ndbparam-tcp-tcpspintime)，用于设置给定TCP连接的自旋时间。
- en: The [**ndb_top**](mysql-cluster-programs-ndb-top.html "25.5.29 ndb_top — View
    CPU usage information for NDB threads") tool is also enhanced to provide spin
    time information per thread.
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**ndb_top**](mysql-cluster-programs-ndb-top.html "25.5.29 ndb_top — 查看NDB线程的CPU使用信息")
    工具也得到增强，以提供每个线程的自旋时间信息。'
- en: For additional information, see the description of the [`SpinMethod`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-spinmethod)
    parameter, the listed `DUMP` commands, and [Section 25.5.29, “ndb_top — View CPU
    usage information for NDB threads”](mysql-cluster-programs-ndb-top.html "25.5.29 ndb_top
    — View CPU usage information for NDB threads").
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[`SpinMethod`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-spinmethod)参数的描述，列出的`DUMP`命令以及[Section 25.5.29,
    “ndb_top — 查看NDB线程的CPU使用信息”](mysql-cluster-programs-ndb-top.html "25.5.29 ndb_top
    — 查看NDB线程的CPU使用信息")。
- en: '**Disk Data and cluster restarts. ** Beginning with NDB 8.0.21, an initial
    restart of the cluster forces the removal of all Disk Data objects such as tablespaces
    and log file groups, including any data files and undo log files associated with
    these objects.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**磁盘数据和集群重启。** 从NDB 8.0.21开始，集群的初始重启会强制删除所有磁盘数据对象，如表空间和日志文件组，包括与这些对象相关联的任何数据文件和撤销日志文件。'
- en: See [Section 25.6.11, “NDB Cluster Disk Data Tables”](mysql-cluster-disk-data.html
    "25.6.11 NDB Cluster Disk Data Tables"), for more information.
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息请参见[第 25.6.11 节，“NDB 集群磁盘数据表”](mysql-cluster-disk-data.html "25.6.11 NDB
    Cluster Disk Data Tables")。
- en: '**Disk Data extent allocation. ** Beginning with NDB 8.0.20, allocation of
    extents in data files is done in a round-robin fashion among all data files used
    by a given tablespace. This is expected to improve distribution of data in cases
    where multiple storage devices are used for Disk Data storage.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**磁盘数据范围分配。** 从 NDB 8.0.20 开始，在数据文件中分配范围是在给定表空间中使用的所有数据文件之间以循环方式进行的。这有望改善在使用多个存储设备进行磁盘数据存储时数据的分布。'
- en: For more information, see [Section 25.6.11.1, “NDB Cluster Disk Data Objects”](mysql-cluster-disk-data-objects.html
    "25.6.11.1 NDB Cluster Disk Data Objects").
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息请参见[第 25.6.11.1 节，“NDB 集群磁盘数据对象”](mysql-cluster-disk-data-objects.html "25.6.11.1 NDB
    Cluster Disk Data Objects")。
- en: '**--ndb-log-fail-terminate option. ** Beginning with NDB 8.0.21, you can cause
    the SQL node to terminate whenever it is unable to log all row events fully. This
    can be done by starting [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    with the [`--ndb-log-fail-terminate`](mysql-cluster-options-variables.html#option_mysqld_ndb-log-fail-terminate)
    option.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**--ndb-log-fail-terminate 选项。** 从 NDB 8.0.21 开始，您可以通过使用 [`--ndb-log-fail-terminate`](mysql-cluster-options-variables.html#option_mysqld_ndb-log-fail-terminate)
    选项启动 [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")，使 SQL 节点在无法完全记录所有行事件时终止。'
- en: '**AllowUnresolvedHostNames parameter. ** By default, a management node refuses
    to start when it cannot resolve a host name present in the global configuration
    file, which can be problematic in some environments such as Kubernetes. Beginning
    with NDB 8.0.22, it is possible to override this behavior by setting [`AllowUnresolvedHostNames`](mysql-cluster-tcp-definition.html#ndbparam-tcp-allowunresolvedhostnames)
    to `true` in the `[tcp default]` section of the cluster global configuration file
    (`config.ini` file). Doing so causes such errors to be treated as warnings instead,
    and to permit [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd
    — The NDB Cluster Management Server Daemon") to continue starting'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AllowUnresolvedHostNames 参数。** 默认情况下，管理节点在无法解析全局配置文件中存在的主机名时拒绝启动，这在某些环境（如
    Kubernetes）中可能会有问题。从 NDB 8.0.22 开始，可以通过在集群全局配置文件（`config.ini` 文件）的 `[tcp default]`
    部分中将 [`AllowUnresolvedHostNames`](mysql-cluster-tcp-definition.html#ndbparam-tcp-allowunresolvedhostnames)
    设置为 `true` 来覆盖此行为。这样做会将此类错误视为警告，并允许 [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon") 继续启动'
- en: '**Blob write performance enhancements. ** NDB 8.0.22 implements a number of
    improvements which allow more efficient batching when modifying multiple blob
    columns in the same row, or when modifying multiple rows containing blob columns
    in the same statement, by reducing the number of round trips required between
    an SQL or other API node and the data nodes when applying these modifications.
    The performance of many [`INSERT`](insert.html "15.2.7 INSERT Statement"), [`UPDATE`](update.html
    "15.2.17 UPDATE Statement"), and [`DELETE`](delete.html "15.2.2 DELETE Statement")
    statements can thus be improved. Examples of such statements are listed here,
    where *`table`* is an `NDB` table containing one or more Blob columns:'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Blob 写入性能增强。** NDB 8.0.22 实现了一些改进，允许在同一行中修改多个 blob 列或在同一语句中修改包含 blob 列的多行时更有效地进行批处理，从而减少
    SQL 或其他 API 节点与数据节点之间在应用这些修改时所需的往返次数。因此，许多 [`INSERT`](insert.html "15.2.7 INSERT
    Statement")、[`UPDATE`](update.html "15.2.17 UPDATE Statement") 和 [`DELETE`](delete.html
    "15.2.2 DELETE Statement") 语句的性能可以得到改善。这里列出了一些这样的语句示例，其中 *`table`* 是包含一个或多个 Blob
    列的 `NDB` 表：'
- en: '`INSERT INTO *`table`* VALUES ROW(1, *`blob_value1`*, *`blob_value2`*, ...)`,
    that is, insertion of a row containing one or more Blob columns'
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INSERT INTO *`table`* VALUES ROW(1, *`blob_value1`*, *`blob_value2`*, ...)`，即插入包含一个或多个
    Blob 列的一行数据'
- en: '`INSERT INTO *`table`* VALUES ROW(1, *`blob_value1`*), ROW(2, *`blob_value2`*),
    ROW(3, *`blob_value3`*), ...`, that is, insertion of multiple rows containing
    one or more Blob columns'
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INSERT INTO *`table`* VALUES ROW(1, *`blob_value1`*), ROW(2, *`blob_value2`*),
    ROW(3, *`blob_value3`*), ...`，即插入包含一个或多个 Blob 列的多行数据'
- en: '`UPDATE *`table`* SET *`blob_column1`* = *`blob_value1`*, *`blob_column2`*
    = *`blob_value2`*, ...`'
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UPDATE *`table`* SET *`blob_column1`* = *`blob_value1`*, *`blob_column2`*
    = *`blob_value2`*, ...`'
- en: '`UPDATE *`table`* SET *`blob_column`* = *`blob_value`* WHERE *`primary_key_column`*
    in (*`value_list`*)`, where the primary key column is not a Blob type'
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UPDATE *`table`* SET *`blob_column`* = *`blob_value`* WHERE *`primary_key_column`*
    in (*`value_list`*)`，其中主键列不是 Blob 类型'
- en: '`DELETE FROM *`table`* WHERE *`primary_key_column`* = *`value`*`, where the
    primary key column is not a Blob type'
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DELETE FROM *`table`* WHERE *`primary_key_column`* = *`value`*`，其中主键列不是 Blob
    类型'
- en: '`DELETE FROM *`table`* WHERE *`primary_key_column`* IN (*`value_list`*)`, where
    the primary key column is not a Blob type'
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DELETE FROM *`table`* WHERE *`primary_key_column`* IN (*`value_list`*)`，其中主键列不是
    Blob 类型'
- en: Other SQL statements may benefit from these improvements as well. These include
    [`LOAD DATA INFILE`](load-data.html "15.2.9 LOAD DATA Statement") and [`CREATE
    TABLE ... SELECT ...`](create-table-select.html "15.1.20.4 CREATE TABLE ... SELECT
    Statement"). In addition, [`ALTER TABLE *`table`* ENGINE = NDB`](alter-table.html
    "15.1.9 ALTER TABLE Statement"), where *`table`* uses a storage engine other than
    `NDB` prior to execution of the statement, may also execute more efficiently.
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 其他 SQL 语句也可能从这些改进中受益。这些包括 [`LOAD DATA INFILE`](load-data.html "15.2.9 LOAD DATA
    Statement") 和 [`CREATE TABLE ... SELECT ...`](create-table-select.html "15.1.20.4 CREATE
    TABLE ... SELECT Statement")。此外，[`ALTER TABLE *`table`* ENGINE = NDB`](alter-table.html
    "15.1.9 ALTER TABLE Statement")，其中 *`table`* 在执行语句之前使用的存储引擎不是 `NDB`，也可能执行得更有效率。
- en: This enhancement applies to statements affecting columns of MySQL type [`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types"), [`MEDIUMBLOB`](blob.html "13.3.4 The BLOB and
    TEXT Types"), [`LONGBLOB`](blob.html "13.3.4 The BLOB and TEXT Types"), [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types"), [`MEDIUMTEXT`](blob.html "13.3.4 The BLOB and
    TEXT Types"), and [`LONGTEXT`](blob.html "13.3.4 The BLOB and TEXT Types"). Statements
    which update [`TINYBLOB`](blob.html "13.3.4 The BLOB and TEXT Types") or [`TINYTEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types") columns (or both types) only are not affected
    by this work, and no changes in their performance should be expected.
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这种改进适用于影响 MySQL 类型 [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")、[`MEDIUMBLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types")、[`LONGBLOB`](blob.html "13.3.4 The BLOB and
    TEXT Types")、[`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types")、[`MEDIUMTEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types") 和 [`LONGTEXT`](blob.html "13.3.4 The BLOB and
    TEXT Types") 列的语句。仅更新 [`TINYBLOB`](blob.html "13.3.4 The BLOB and TEXT Types")
    或 [`TINYTEXT`](blob.html "13.3.4 The BLOB and TEXT Types") 列（或两种类型）的语句不受此工作的影响，不应期望其性能发生变化。
- en: 'The performance of some SQL statements is not noticeably improved by this enhancement,
    due to the fact that they require scans of table Blob columns, which breaks up
    batching. Such statements include those of the types listed here:'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于某些 SQL 语句需要扫描表格 Blob 列，这会破坏批处理，因此这种改进对某些 SQL 语句的性能没有明显提升。这些语句包括以下类型：
- en: '[`SELECT FROM *`table`* [WHERE *`key_column`* IN (*`blob_value_list`*)]`](select.html
    "15.2.13 SELECT Statement"), where rows are selected by matching on a primary
    key or unique key column which uses a Blob type'
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SELECT FROM *`table`* [WHERE *`key_column`* IN (*`blob_value_list`*)]`](select.html
    "15.2.13 SELECT Statement")，其中通过匹配使用 Blob 类型的主键或唯一键列来选择行'
- en: '`UPDATE *`table`* SET *`blob_column`* = *`blob_value`* WHERE *`condition`*`,
    using a *`condition`* which does not depend on a unique value'
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UPDATE *`table`* SET *`blob_column`* = *`blob_value`* WHERE *`condition`*`，使用一个不依赖于唯一值的
    *`condition`*'
- en: '`DELETE FROM *`table`* WHERE *`condition`*` to delete rows containing one or
    more Blob columns, using a *`condition`* which does not depend on a unique value'
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DELETE FROM *`table`* WHERE *`condition`*` 用于删除包含一个或多个 Blob 列的行，使用一个不依赖于唯一值的
    *`condition`*'
- en: A copying `ALTER TABLE` statement on a table which already used the `NDB` storage
    engine prior to executing the statement, and whose rows contain one or more Blob
    columns before or after the statement is executed (or both)
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在执行语句之前已经使用 `NDB` 存储引擎的表上执行复制 `ALTER TABLE` 语句，并且在执行语句之前或之后（或两者都有）表的行包含一个或多个
    Blob 列
- en: To take advantage of this improvement to its fullest extent, you may wish to
    increase the values used for the [`--ndb-batch-size`](mysql-cluster-options-variables.html#option_mysqld_ndb-batch-size)
    and [`--ndb-blob-write-batch-bytes`](mysql-cluster-options-variables.html#option_mysqld_ndb-blob-write-batch-bytes)
    options for [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server"), to minimize
    the number of round trips required to modify blobs. For replication, it is also
    recommended that you enable the [`slave_allow_batching`](mysql-cluster-options-variables.html#sysvar_slave_allow_batching)
    system variable, which minimizes the number of round trips required by the replica
    cluster to apply epoch transactions.
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了充分利用这一改进，您可能希望增加用于 [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    的 [`--ndb-batch-size`](mysql-cluster-options-variables.html#option_mysqld_ndb-batch-size)
    和 [`--ndb-blob-write-batch-bytes`](mysql-cluster-options-variables.html#option_mysqld_ndb-blob-write-batch-bytes)
    选项的值，以最小化修改 blob 所需的往返次数。对于复制，还建议启用 [`slave_allow_batching`](mysql-cluster-options-variables.html#sysvar_slave_allow_batching)
    系统变量，以最小化副本集群应用时代事务所需的往返次数。
- en: Note
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Beginning with NDB 8.0.30, you should also use [`ndb_replica_batch_size`](mysql-cluster-options-variables.html#sysvar_ndb_replica_batch_size)
    instead of `--ndb-batch-size`, and [`ndb_replica_blob_write_batch_bytes`](mysql-cluster-options-variables.html#sysvar_ndb_replica_blob_write_batch_bytes)
    rather than `--ndb-blob-write-batch-bytes`. See the descriptions of these variables,
    as well as [Section 25.7.5, “Preparing the NDB Cluster for Replication”](mysql-cluster-replication-preparation.html
    "25.7.5 Preparing the NDB Cluster for Replication"), for more information.
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 NDB 8.0.30 版本开始，您还应该使用 [`ndb_replica_batch_size`](mysql-cluster-options-variables.html#sysvar_ndb_replica_batch_size)
    替代 `--ndb-batch-size`，以及 [`ndb_replica_blob_write_batch_bytes`](mysql-cluster-options-variables.html#sysvar_ndb_replica_blob_write_batch_bytes)
    而不是 `--ndb-blob-write-batch-bytes`。有关这些变量的描述以及更多信息，请参见这些变量的描述，以及 [第 25.7.5 节，“为复制准备
    NDB 集群”](mysql-cluster-replication-preparation.html "25.7.5 Preparing the NDB
    Cluster for Replication")。
- en: '**Node.js update. ** Beginning with NDB 8.0.22, the `NDB` adapter for Node.js
    is built using version 12.18.3, and only that version (or a later version of Node.js)
    is now supported.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node.js 更新。** 从 NDB 8.0.22 版本开始，Node.js 的 `NDB` 适配器使用的是版本 12.18.3，并且现在仅支持该版本（或更高版本的
    Node.js）。'
- en: '**Encrypted backups. ** NDB 8.0.22 adds support for backup files encrypted
    using AES-256-CBC; this is intended to protect against recovery of data from backups
    that have been accessed by unauthorized parties. When encrypted, backup data is
    protected by a user-supplied password. The password can be any string consisting
    of up to 256 characters from the range of printable ASCII characters other than
    `!`, `''`, `"`, `$`, `%`, `\`, and `^`. Retention of the password used to encrypt
    any given NDB Cluster backup must be performed by the user or application; `NDB`
    does not save the password. The password can be empty, although this is not recommended.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加密备份。** NDB 8.0.22 版本新增了对使用 AES-256-CBC 加密的备份文件的支持；这旨在防止未经授权的人员从已被访问的备份中恢复数据。当备份数据加密时，会由用户提供的密码进行保护。密码可以是任何由可打印
    ASCII 字符范围内除了 `!`, `''`, `"`, `$`, `%`, `\`, 和 `^` 之外的最多 256 个字符组成的字符串。对于加密任何给定
    NDB 集群备份所使用的密码的保留必须由用户或应用程序执行；`NDB` 不保存密码。密码可以为空，尽管这并不推荐。'
- en: When taking an NDB Cluster backup, you can encrypt it by using `ENCRYPT PASSWORD=*`password`*`
    with the management client [`START BACKUP`](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 Using The NDB Cluster Management Client to Create a Backup") command.
    Users of the MGM API can also initiate an encrypted backup by calling [`ndb_mgm_start_backup4()`](/doc/ndbapi/en/mgm-functions-backup.html#mgm-ndb-mgm-start-backup4).
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在进行 NDB 集群备份时，可以使用管理客户端 [`START BACKUP`](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 Using The NDB Cluster Management Client to Create a Backup") 命令，并通过
    `ENCRYPT PASSWORD=*`password`*` 进行加密。MGM API 的用户也可以通过调用 [`ndb_mgm_start_backup4()`](/doc/ndbapi/en/mgm-functions-backup.html#mgm-ndb-mgm-start-backup4)
    来启动加密备份。
- en: You can encrypt existing backup files using the [**ndbxfrm**](mysql-cluster-programs-ndbxfrm.html
    "25.5.31 ndbxfrm — Compress, Decompress, Encrypt, and Decrypt Files Created by
    NDB Cluster") utility which is added to the NDB Cluster distribution in the 8.0.22
    release; this program can also be employed for decrypting encrypted backup files.
    In addition, [**ndbxfrm**](mysql-cluster-programs-ndbxfrm.html "25.5.31 ndbxfrm
    — Compress, Decompress, Encrypt, and Decrypt Files Created by NDB Cluster") can
    compress backup files and decompress compressed backup files using the same method
    that is employed by NDB Cluster for creating backups when the [`CompressedBackup`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-compressedbackup)
    configuration parameter is set to 1.
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以使用[**ndbxfrm**](mysql-cluster-programs-ndbxfrm.html "25.5.31 ndbxfrm — Compress,
    Decompress, Encrypt, and Decrypt Files Created by NDB Cluster")实用程序对现有的备份文件进行加密，该实用程序已添加到NDB
    Cluster发行版中的8.0.22版本中；该程序还可用于解密加密的备份文件。此外，[**ndbxfrm**](mysql-cluster-programs-ndbxfrm.html
    "25.5.31 ndbxfrm — Compress, Decompress, Encrypt, and Decrypt Files Created by
    NDB Cluster")可以使用与NDB Cluster在设置[`CompressedBackup`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-compressedbackup)配置参数为1时创建备份时所使用的相同方法来压缩备份文件和解压缩压缩备份文件。
- en: To restore from an encrypted backup, use [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") with the options [`--decrypt`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_decrypt)
    and [`--backup-password`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_backup-password).
    Both options are required, along with any others that would be needed to restore
    the same backup if it were not encrypted. [**ndb_print_backup_file**](mysql-cluster-programs-ndb-print-backup-file.html
    "25.5.17 ndb_print_backup_file — Print NDB Backup File Contents") and [**ndbxfrm**](mysql-cluster-programs-ndbxfrm.html
    "25.5.31 ndbxfrm — Compress, Decompress, Encrypt, and Decrypt Files Created by
    NDB Cluster") can also read encrypted files using, respectively, `-P` *`password`*
    and [`--decrypt-password=*`password`*`](mysql-cluster-programs-ndbxfrm.html#option_ndbxfrm_decrypt-password).
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要从加密备份中恢复，请使用[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup")与选项[`--decrypt`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_decrypt)和[`--backup-password`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_backup-password)。这两个选项是必需的，以及任何其他在未加密情况下恢复相同备份所需的选项。[**ndb_print_backup_file**](mysql-cluster-programs-ndb-print-backup-file.html
    "25.5.17 ndb_print_backup_file — Print NDB Backup File Contents")和[**ndbxfrm**](mysql-cluster-programs-ndbxfrm.html
    "25.5.31 ndbxfrm — Compress, Decompress, Encrypt, and Decrypt Files Created by
    NDB Cluster")也可以分别使用`-P` *`password`*和[`--decrypt-password=*`password`*`](mysql-cluster-programs-ndbxfrm.html#option_ndbxfrm_decrypt-password)读取加密文件。
- en: In all cases in which a password is supplied together with an option for encryption
    or decryption, the password must be quoted; you can use either single or double
    quotation marks to delimit the password.
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在提供密码以及加密或解密选项的所有情况下，密码必须用引号括起来；您可以使用单引号或双引号来界定密码。
- en: 'Beginning with NDB 8.0.24, several `NDB` programs, listed here, also support
    input of the password from standard input, similarly to how this is done when
    logging in interactively with the [**mysql**](mysql.html "6.5.1 mysql — The MySQL
    Command-Line Client") client using the [`--password`](mysql-command-options.html#option_mysql_password)
    option (without including the password on the command line):'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从NDB 8.0.24开始，这里列出的几个`NDB`程序还支持从标准输入输入密码，类似于在与[**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client")客户端交互登录时使用[`--password`](mysql-command-options.html#option_mysql_password)选项（不包括在命令行中输入密码）的方式：
- en: For [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") and [**ndb_print_backup_file**](mysql-cluster-programs-ndb-print-backup-file.html
    "25.5.17 ndb_print_backup_file — Print NDB Backup File Contents"), the [`--backup-password-from-stdin`](mysql-cluster-programs-ndb-print-backup-file.html#option_ndb_print_backup_file_backup-password-from-stdin)
    option enables input of the password in a secure fashion, similar to how it is
    done by the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    client' [`--password`](mysql-command-options.html#option_mysql_password) option.
    For [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup"), use the option together with the [`--decrypt`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_decrypt)
    option; for [**ndb_print_backup_file**](mysql-cluster-programs-ndb-print-backup-file.html
    "25.5.17 ndb_print_backup_file — Print NDB Backup File Contents"), use the option
    in place of the `-P` option.
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于[**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — 恢复 NDB Cluster 备份")和[**ndb_print_backup_file**](mysql-cluster-programs-ndb-print-backup-file.html
    "25.5.17 ndb_print_backup_file — 打印 NDB 备份文件内容")，[`--backup-password-from-stdin`](mysql-cluster-programs-ndb-print-backup-file.html#option_ndb_print_backup_file_backup-password-from-stdin)选项使得可以以安全的方式输入密码，类似于[**mysql**](mysql.html
    "6.5.1 mysql — MySQL 命令行客户端")客户端的[`--password`](mysql-command-options.html#option_mysql_password)选项。对于[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — 恢复 NDB Cluster 备份")，与[`--decrypt`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_decrypt)选项一起使用；对于[**ndb_print_backup_file**](mysql-cluster-programs-ndb-print-backup-file.html
    "25.5.17 ndb_print_backup_file — 打印 NDB 备份文件内容")，使用该选项代替 `-P` 选项。
- en: For [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — The
    NDB Cluster Management Client") the option [`--backup-password-from-stdin`](mysql-cluster-programs-ndb-mgm.html#option_ndb_mgm_backup-password-from-stdin),
    is supported together with [`--execute "START BACKUP [*`options`*]"`](mysql-cluster-programs-ndb-mgm.html#option_ndb_mgm_execute)
    for starting a cluster backup from the system shell.
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — NDB Cluster
    管理客户端")，选项[`--backup-password-from-stdin`](mysql-cluster-programs-ndb-mgm.html#option_ndb_mgm_backup-password-from-stdin)与[`--execute
    "START BACKUP [*`选项`*]"`](mysql-cluster-programs-ndb-mgm.html#option_ndb_mgm_execute)一起支持从系统
    shell 启动集群备份。
- en: Two [**ndbxfrm**](mysql-cluster-programs-ndbxfrm.html "25.5.31 ndbxfrm — Compress,
    Decompress, Encrypt, and Decrypt Files Created by NDB Cluster") options, [`--encrypt-password-from-stdin`](mysql-cluster-programs-ndbxfrm.html#option_ndbxfrm_encrypt-password-from-stdin)
    and [`--decrypt-password-from-stdin`](mysql-cluster-programs-ndbxfrm.html#option_ndbxfrm_decrypt-password-from-stdin),
    cause similar behavior when using that program to encrypt or to decrypt a backup
    file.
  id: totrans-262
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个[**ndbxfrm**](mysql-cluster-programs-ndbxfrm.html "25.5.31 ndbxfrm — 压缩、解压、加密和解密
    NDB Cluster 创建的文件")选项，[`--encrypt-password-from-stdin`](mysql-cluster-programs-ndbxfrm.html#option_ndbxfrm_encrypt-password-from-stdin)和[`--decrypt-password-from-stdin`](mysql-cluster-programs-ndbxfrm.html#option_ndbxfrm_decrypt-password-from-stdin)，在使用该程序加密或解密备份文件时会导致类似的行为。
- en: See the descriptions of the programs just listed for more information.
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关刚列出的程序的更多信息，请参阅其描述。
- en: It is also possible, beginning with NDB 8.0.22, to enforce encryption of backups
    by setting [`RequireEncryptedBackup=1`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-requireencryptedbackup)
    in the `[ndbd default]` section of the cluster global configuration file. When
    this is done, the [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm
    — The NDB Cluster Management Client") client rejects any attempt to perform a
    backup that is not encrypted.
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 NDB 8.0.22 开始，还可以通过在集群全局配置文件的 `[ndbd default]` 部分中设置[`RequireEncryptedBackup=1`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-requireencryptedbackup)来强制备份加密。这样做时，[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — NDB Cluster 管理客户端")客户端将拒绝任何未加密的备份尝试。
- en: Beginning with NDB 8.0.24, you can cause [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client") to use encryption whenever
    it creates a backup by starting it with [`--encrypt-backup`](mysql-cluster-programs-ndb-mgm.html#option_ndb_mgm_encrypt-backup).
    In this case, the user is prompted for a password when invoking [`START BACKUP`](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 Using The NDB Cluster Management Client to Create a Backup") if none
    is supplied.
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从NDB 8.0.24开始，您可以通过使用[`--encrypt-backup`](mysql-cluster-programs-ndb-mgm.html#option_ndb_mgm_encrypt-backup)启动[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client")来使其在创建备份时使用加密。在这种情况下，如果未提供密码，则在调用[`START
    BACKUP`](mysql-cluster-backup-using-management-client.html "25.6.8.2 Using The
    NDB Cluster Management Client to Create a Backup")时会提示用户输入密码。
- en: '**IPv6 support. ** Beginning with NDB 8.0.22, IPv6 addressing is supported
    for connections to management and data nodes; this includes connections between
    management and data nodes with SQL nodes. When configuring a cluster, you can
    use numeric IPv6 addresses, host names which resolve to IPv6 addresses or both.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IPv6支持。** 从NDB 8.0.22开始，IPv6寻址支持与管理和数据节点的连接；这包括管理和数据节点与SQL节点之间的连接。在配置集群时，可以使用数字IPv6地址、解析为IPv6地址的主机名或两者兼用。'
- en: For IPv6 addressing to work, the operating platform and network on which the
    cluster is deployed must support IPv6\. As when using IPv4 addressing, hostname
    resolution to IPv6 addresses must be provided by the operating platform.
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使IPv6寻址正常工作，部署集群的操作平台和网络必须支持IPv6。与使用IPv4寻址时一样，主机名解析为IPv6地址必须由操作平台提供。
- en: 'A known issue on Linux platforms when running NDB 8.0.22 and later was that
    the operating system kernel was required to provide IPv6 support, even when no
    IPv6 addresses were in use. This issue is fixed in NDB 8.0.34 and later, where
    it is safe to disable IPv6 support in the Linux kernel if you do not intend to
    use IPv6 addressing (Bug #33324817, Bug #33870642).'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '在Linux平台上运行NDB 8.0.22及更高版本时已知的问题是，即使没有使用IPv6地址，操作系统内核也需要提供IPv6支持。这个问题在NDB 8.0.34及更高版本中已修复，如果不打算使用IPv6寻址，则可以安全地在Linux内核中禁用IPv6支持（Bug
    #33324817，Bug #33870642）。'
- en: 'IPv4 addressing continues to be supported by `NDB`. Using IPv4 and IPv6 addresses
    concurrently is not recommended, but can be made to work in the following cases:'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'IPv4 addressing continues to be supported by `NDB`. Using IPv4 and IPv6 addresses
    concurrently is not recommended, but can be made to work in the following cases:'
- en: 'When the management node is configured with IPv6 and data nodes are configured
    with IPv4 addresses in the `config.ini` file: This works if [`--bind-address`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_bind-address)
    is not used with **mgmd**, and data nodes are started with [`--ndb-connectstring`](mysql-cluster-programs-ndbd.html#option_ndbd_ndb-connectstring)
    set to the IPv4 address of the management nodes.'
  id: totrans-270
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当管理节点配置为IPv6，数据节点配置为IPv4地址在`config.ini`文件中时：如果未使用[`--bind-address`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_bind-address)与**mgmd**一起使用，并且数据节点启动时使用[`--ndb-connectstring`](mysql-cluster-programs-ndbd.html#option_ndbd_ndb-connectstring)设置为管理节点的IPv4地址，则可以正常工作。
- en: 'When the management node is configured with IPv4 and data nodes are configured
    with IPv6 addresses in `config.ini`: Similarly to the other case, this works if
    [`--bind-address`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_bind-address)
    is not passed to **mgmd** and data nodes are started with [`--ndb-connectstring`](mysql-cluster-programs-ndbd.html#option_ndbd_ndb-connectstring)
    set to the IPv6 address of the management node.'
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当管理节点配置为IPv4，数据节点配置为IPv6地址在`config.ini`文件中时：类似于另一种情况，如果未传递[`--bind-address`](mysql-cluster-programs-ndb-mgmd.html#option_ndb_mgmd_bind-address)给**mgmd**，并且数据节点启动时使用[`--ndb-connectstring`](mysql-cluster-programs-ndbd.html#option_ndbd_ndb-connectstring)设置为管理节点的IPv6地址，则可以正常工作。
- en: These cases work because [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon") does not bind to
    any IP address by default.
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些情况之所以有效，是因为[**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd
    — The NDB Cluster Management Server Daemon")默认不绑定到任何IP地址。
- en: To perform an upgrade from a version of `NDB` that does not support IPv6 addressing
    to one that does, provided that the network supports IPv4 and IPv6, first perform
    the software upgrade; after this has been done, you can update IPv4 addresses
    used in the `config.ini` file with IPv6 addresses. After this, to cause the configuration
    changes to take effect and to make the cluster start using the IPv6 addresses,
    it is necessary to perform a system restart of the cluster.
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要从不支持IPv6寻址的`NDB`版本升级到支持IPv6寻址的版本，前提是网络支持IPv4和IPv6，首先执行软件升级；完成后，可以使用IPv6地址更新`config.ini`文件中使用的IPv4地址。之后，为使配置更改生效并使集群开始使用IPv6地址，需要对集群进行系统重启。
- en: '**Auto-Installer deprecation and removal. ** The MySQL NDB Cluster Auto-Installer
    web-based installation tool (**ndb_setup.py**) is deprecated in NDB 8.0.22, and
    is removed in NDB 8.0.23 and later. It is no longer supported.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动安装程序弃用和移除。** MySQL NDB Cluster自动安装程序基于Web的安装工具（**ndb_setup.py**）在NDB 8.0.22中已被弃用，并在NDB
    8.0.23及更高版本中被移除。不再受支持。'
- en: '**ndbmemcache deprecation and removal. ** `ndbmemcache` is no longer supported.
    `ndbmemcache` was deprecated in NDB 8.0.22, and removed in NDB 8.0.23.'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndbmemcache弃用和移除。** `ndbmemcache`不再受支持。`ndbmemcache`在NDB 8.0.22中已被弃用，并在NDB
    8.0.23中被移除。'
- en: '**ndbinfo backup_id table. ** NDB 8.0.24 adds a [`backup_id`](mysql-cluster-ndbinfo-backup-id.html
    "25.6.16.3 The ndbinfo backup_id Table") table to the [`ndbinfo`](mysql-cluster-ndbinfo.html
    "25.6.16 ndbinfo: The NDB Cluster Information Database") information database.
    This is intended to serve as a replacement for obtaining this information by using
    [**ndb_select_all**](mysql-cluster-programs-ndb-select-all.html "25.5.25 ndb_select_all
    — Print Rows from an NDB Table") to dump the contents of the internal `SYSTAB_0`
    table, which is error-prone and takes an excessively long time to perform.'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndbinfo备份ID表。** NDB 8.0.24向[`ndbinfo`](mysql-cluster-ndbinfo.html "第25章 ndbinfo:
    NDB Cluster 信息数据库")信息数据库添加了一个[`backup_id`](mysql-cluster-ndbinfo-backup-id.html
    "25.6.16.3 ndbinfo backup_id 表")表。这旨在作为通过使用[**ndb_select_all**](mysql-cluster-programs-ndb-select-all.html
    "25.5.25 ndb_select_all — 打印 NDB 表中的行")来转储内部`SYSTAB_0`表的内容获取此信息的替代方法，后者容易出错且执行时间过长。'
- en: This table has a single column and row containing the ID of the most recent
    backup of the cluster taken using the [`START BACKUP`](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 Using The NDB Cluster Management Client to Create a Backup") management
    client command. In the event that no backup of this cluster can be found, the
    table contains a single row whose column value is `0`.
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个表有一列和一行，包含使用[`START BACKUP`](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 使用 NDB Cluster 管理客户端创建备份")管理客户端命令对集群进行的最新备份的ID。如果找不到此集群的备份，则表中包含一个列值为`0`的单行。
- en: '**Table partitioning enhancements. ** NDB 8.0.23 introduces a new method for
    handling table partitions and fragments, which can determine the number of local
    data managers (LDMs) for a given data node independently of the number of redo
    log parts. This means that the number of LDMs can now be highly variable. [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") can employ this method when the [`ClassicFragmentation`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-classicfragmentation)
    data node configuration parameter, also implemented in NDB 8.0.23, is set to `false`;
    when this is the case, the number of LDMs is no longer used to determine how many
    partitions to create for a table per data node, and the value of the [`PartitionsPerNode`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-partitionspernode)
    parameter (also introduced in NDB 8.0.23) determines this number instead, which
    is also used for calculating the number of fragments used for a table.'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表分区增强。** NDB 8.0.23引入了一种新的处理表分区和片段的方法，可以独立于重做日志部分的数量确定给定数据节点的本地数据管理器（LDMs）的数量。这意味着现在LDMs的数量可以高度变化。当[`ClassicFragmentation`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-classicfragmentation)数据节点配置参数设置为`false`时，[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")可以使用这种方法；在这种情况下，不再使用LDMs的数量来确定每个数据节点为表创建多少个分区，而是由[`PartitionsPerNode`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-partitionspernode)参数的值（也在NDB
    8.0.23中引入）来确定这个数量，这个数量也用于计算表使用的片段数量。'
- en: When `ClassicFragmentation` has its default value `true`, then the traditional
    method of using the number of LDMs is used to determine the number of fragments
    that a table should have.
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当`ClassicFragmentation`具有其默认值`true`时，将使用传统方法来确定表应具有的片段数，即使用LDM数。
- en: For more information, see the descriptions of the new parameters referenced
    previously, in [Multi-Threading Configuration Parameters (ndbmtd)](mysql-cluster-ndbd-definition.html#mysql-cluster-ndbd-definition-ndbmtd-parameters
    "Multi-Threading Configuration Parameters (ndbmtd)").
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅之前引用的新参数的描述，在[多线程配置参数（ndbmtd）](mysql-cluster-ndbd-definition.html#mysql-cluster-ndbd-definition-ndbmtd-parameters
    "多线程配置参数（ndbmtd）")中。
- en: '**Terminology updates. ** To align with work begun in MySQL 8.0.21 and NDB
    8.0.21, NDB 8.0.23 implements a number of changes in terminology, listed here:'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**术语更新。** 为了与MySQL 8.0.21和NDB 8.0.21中开始的工作保持一致，NDB 8.0.23实施了一些术语上的更改，列在此处：'
- en: The system variable [`ndb_slave_conflict_role`](mysql-cluster-options-variables.html#sysvar_ndb_slave_conflict_role)
    is now deprecated. It is replaced by [`ndb_conflict_role`](mysql-cluster-options-variables.html#sysvar_ndb_conflict_role).
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统变量[`ndb_slave_conflict_role`](mysql-cluster-options-variables.html#sysvar_ndb_slave_conflict_role)现已弃用。它被[`ndb_conflict_role`](mysql-cluster-options-variables.html#sysvar_ndb_conflict_role)替代。
- en: 'Many `NDB` status variables are deprecated. These variables, and their replacements,
    are shown in the following table:'
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多`NDB`状态变量已被弃用。这些变量及其替代项在下表中列出：
- en: '**Table 25.1 Deprecated NDB status variables and their replacements**'
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**表 25.1 已弃用的NDB状态变量及其替代项**'
- en: '| Deprecated variable | Replacement |'
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用变量 | 替代项 |'
- en: '| [`Ndb_api_adaptive_send_deferred_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_deferred_count_slave)
    | [`Ndb_api_adaptive_send_deferred_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_deferred_count_replica)
    |'
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_adaptive_send_deferred_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_deferred_count_slave)
    | [`Ndb_api_adaptive_send_deferred_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_deferred_count_replica)
    |'
- en: '| [`Ndb_api_adaptive_send_forced_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_forced_count_slave)
    | [`Ndb_api_adaptive_send_forced_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_forced_count_replica)
    |'
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_adaptive_send_forced_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_forced_count_slave)
    | [`Ndb_api_adaptive_send_forced_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_forced_count_replica)
    |'
- en: '| [`Ndb_api_adaptive_send_unforced_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_unforced_count_slave)
    | [`Ndb_api_adaptive_send_unforced_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_unforced_count_replica)
    |'
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_adaptive_send_unforced_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_unforced_count_slave)
    | [`Ndb_api_adaptive_send_unforced_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_adaptive_send_unforced_count_replica)
    |'
- en: '| [`Ndb_api_bytes_received_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_bytes_received_count_slave)
    | [`Ndb_api_bytes_received_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_bytes_received_count_replica)
    |'
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_bytes_received_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_bytes_received_count_slave)
    | [`Ndb_api_bytes_received_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_bytes_received_count_replica)
    |'
- en: '| [`Ndb_api_bytes_sent_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_bytes_sent_count_slave)
    | [`Ndb_api_bytes_sent_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_bytes_sent_count_replica)
    |'
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_bytes_sent_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_bytes_sent_count_slave)
    | [`Ndb_api_bytes_sent_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_bytes_sent_count_replica)
    |'
- en: '| [`Ndb_api_pk_op_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_pk_op_count_slave)
    | [`Ndb_api_pk_op_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_pk_op_count_replica)
    |'
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_pk_op_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_pk_op_count_slave)
    | [`Ndb_api_pk_op_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_pk_op_count_replica)
    |'
- en: '| [`Ndb_api_pruned_scan_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_pruned_scan_count_slave)
    | [`Ndb_api_pruned_scan_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_pruned_scan_count_replica)
    |'
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_pruned_scan_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_pruned_scan_count_slave)
    | [`Ndb_api_pruned_scan_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_pruned_scan_count_replica)
    |'
- en: '| [`Ndb_api_range_scan_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_range_scan_count_slave)
    | [`Ndb_api_range_scan_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_range_scan_count_replica)
    |'
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_range_scan_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_range_scan_count_slave)
    | [`Ndb_api_range_scan_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_range_scan_count_replica)
    |'
- en: '| [`Ndb_api_read_row_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_read_row_count_slave)
    | [`Ndb_api_read_row_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_read_row_count_replica)
    |'
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_read_row_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_read_row_count_slave)
    | [`Ndb_api_read_row_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_read_row_count_replica)
    |'
- en: '| [`Ndb_api_scan_batch_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_scan_batch_count_slave)
    | [`Ndb_api_scan_batch_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_scan_batch_count_replica)
    |'
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_scan_batch_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_scan_batch_count_slave)
    | [`Ndb_api_scan_batch_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_scan_batch_count_replica)
    |'
- en: '| [`Ndb_api_table_scan_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_table_scan_count_slave)
    | [`Ndb_api_table_scan_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_table_scan_count_replica)
    |'
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_table_scan_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_table_scan_count_slave)
    | [`Ndb_api_table_scan_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_table_scan_count_replica)
    |'
- en: '| [`Ndb_api_trans_abort_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_abort_count_slave)
    | [`Ndb_api_trans_abort_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_abort_count_replica)
    |'
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_trans_abort_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_abort_count_slave)
    | [`Ndb_api_trans_abort_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_abort_count_replica)
    |'
- en: '| [`Ndb_api_trans_close_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_close_count_slave)
    | [`Ndb_api_trans_close_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_close_count_replica)
    |'
  id: totrans-298
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_trans_close_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_close_count_slave)
    | [`Ndb_api_trans_close_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_close_count_replica)
    |'
- en: '| [`Ndb_api_trans_commit_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_commit_count_slave)
    | [`Ndb_api_trans_commit_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_commit_count_replica)
    |'
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_trans_commit_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_commit_count_slave)
    | [`Ndb_api_trans_commit_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_commit_count_replica)
    |'
- en: '| [`Ndb_api_trans_local_read_row_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_local_read_row_count_slave)
    | [`Ndb_api_trans_local_read_row_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_local_read_row_count_replica)
    |'
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_trans_local_read_row_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_local_read_row_count_slave)
    | [`Ndb_api_trans_local_read_row_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_local_read_row_count_replica)
    |'
- en: '| [`Ndb_api_trans_start_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_start_count_slave)
    | [`Ndb_api_trans_start_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_start_count_replica)
    |'
  id: totrans-301
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_trans_start_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_start_count_slave)
    | [`Ndb_api_trans_start_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_trans_start_count_replica)
    |'
- en: '| [`Ndb_api_uk_op_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_uk_op_count_slave)
    | [`Ndb_api_uk_op_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_uk_op_count_replica)
    |'
  id: totrans-302
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_uk_op_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_uk_op_count_slave)
    | [`Ndb_api_uk_op_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_uk_op_count_replica)
    |'
- en: '| [`Ndb_api_wait_exec_complete_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_exec_complete_count_slave)
    | [`Ndb_api_wait_exec_complete_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_exec_complete_count_replica)
    |'
  id: totrans-303
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_wait_exec_complete_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_exec_complete_count_slave)
    | [`Ndb_api_wait_exec_complete_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_exec_complete_count_replica)
    |'
- en: '| [`Ndb_api_wait_meta_request_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_meta_request_count_slave)
    | [`Ndb_api_wait_meta_request_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_meta_request_count_replica)
    |'
  id: totrans-304
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_wait_meta_request_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_meta_request_count_slave)
    | [`Ndb_api_wait_meta_request_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_meta_request_count_replica)
    |'
- en: '| [`Ndb_api_wait_nanos_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_nanos_count_slave)
    | [`Ndb_api_wait_nanos_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_nanos_count_replica)
    |'
  id: totrans-305
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_wait_nanos_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_nanos_count_slave)
    | [`Ndb_api_wait_nanos_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_nanos_count_replica)
    |'
- en: '| [`Ndb_api_wait_scan_result_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_scan_result_count_slave)
    | [`Ndb_api_wait_scan_result_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_scan_result_count_replica)
    |'
  id: totrans-306
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_api_wait_scan_result_count_slave`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_scan_result_count_slave)
    | [`Ndb_api_wait_scan_result_count_replica`](mysql-cluster-options-variables.html#statvar_Ndb_api_wait_scan_result_count_replica)
    |'
- en: '| [`Ndb_slave_max_replicated_epoch`](mysql-cluster-options-variables.html#statvar_Ndb_slave_max_replicated_epoch)
    | [`Ndb_replica_max_replicated_epoch`](mysql-cluster-options-variables.html#statvar_Ndb_replica_max_replicated_epoch)
    |'
  id: totrans-307
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| [`Ndb_slave_max_replicated_epoch`](mysql-cluster-options-variables.html#statvar_Ndb_slave_max_replicated_epoch)
    | [`Ndb_replica_max_replicated_epoch`](mysql-cluster-options-variables.html#statvar_Ndb_replica_max_replicated_epoch)
    |'
- en: '| Deprecated variable | Replacement |'
  id: totrans-308
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用变量 | 替换 |'
- en: The deprecated status variables continue to be shown in the output of [`SHOW
    STATUS`](show-status.html "15.7.7.37 SHOW STATUS Statement"), but applications
    should be updated as soon as possible not to rely upon them any longer, since
    their availability in future release series is not guaranteed.
  id: totrans-309
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 弃用的状态变量仍然显示在[`SHOW STATUS`](show-status.html "15.7.7.37 SHOW STATUS Statement")的输出中，但应用程序应尽快更新，不再依赖于它们，因为它们在未来的发布系列中的可用性不能保证。
- en: The values `ADD_TABLE_MASTER` and `ADD_TABLE_SLAVE` previously shown in the
    `tab_copy_status` column of the `ndbinfo` [`ndbinfo.table_distribution_status`](mysql-cluster-ndbinfo-table-distribution-status.html
    "25.6.16.56 The ndbinfo table_distribution_status Table") table are deprecated.
    These are replaced by, respectively, the values `ADD_TABLE_COORDINATOR` and `ADD_TABLE_PARTICIPANT`.
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 先前在`ndbinfo` [`ndbinfo.table_distribution_status`](mysql-cluster-ndbinfo-table-distribution-status.html
    "25.6.16.56 The ndbinfo table_distribution_status Table")表的`tab_copy_status`列中显示的`ADD_TABLE_MASTER`和`ADD_TABLE_SLAVE`已被弃用。分别由`ADD_TABLE_COORDINATOR`和`ADD_TABLE_PARTICIPANT`替代。
- en: The `--help` output of some `NDB` client and utility programs such as [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") has been modified.
  id: totrans-311
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些`NDB`客户端和实用程序的`--help`输出，如[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup")已经修改。
- en: '**ThreadConfig enhancements. ** As of NDB 8.0.23, the configurability of the
    [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)
    parameter has been extended with two new thread types, listed here:'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ThreadConfig增强。** 从NDB 8.0.23开始，[`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)参数的可配置性已经扩展，增加了两种新的线程类型，列在这里：'
- en: '`query`: A query thread works (only) on [`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)
    queries. A query thread also acts as a recovery thread. The number of query threads
    must be 0, 1, 2, or 3 times the number of LDM threads. 0 (the default, unless
    using [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig),
    or [`AutomaticThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-automaticthreadconfig)
    is enabled) causes LDMs to behave as they did prior to NDB 8.0.23.'
  id: totrans-313
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`query`: 查询线程仅处理[`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)查询。查询线程还充当恢复线程。查询线程的数量必须是LDM线程数量的0、1、2或3倍。
    0（默认值，除非启用[`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)或[`AutomaticThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-automaticthreadconfig)）会导致LDM表现为NDB
    8.0.23之前的行为。'
- en: '`recover`: A recovery thread retrieves data from a local checkpoint. A recovery
    thread specified as such never acts as a query thread.'
  id: totrans-314
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`recover`: 恢复线程从本地检查点检索数据。指定为恢复线程的恢复线程永远不会充当查询线程。'
- en: 'It is also possible to combine the existing `main` and `rep` threads in either
    of two ways:'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 还可以以两种方式组合现有的`main`和`rep`线程：
- en: Into a single thread by setting either one of these arguments to 0\. When this
    is done, the resulting combined thread is shown with the name `main_rep` in the
    [`ndbinfo.threads`](mysql-cluster-ndbinfo-threads.html "25.6.16.62 The ndbinfo
    threads Table") table.
  id: totrans-316
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将这两个参数中的一个设置为0来将其合并为一个线程。这样做时，生成的合并线程在[`ndbinfo.threads`](mysql-cluster-ndbinfo-threads.html
    "25.6.16.62 The ndbinfo threads Table")表中显示为`main_rep`。
- en: Together with the `recv` thread by setting both `ldm` and `tc` to 0, and setting
    `recv` to 1\. In this case, the combined thread is named `main_rep_recv`.
  id: totrans-317
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将`ldm`和`tc`都设置为0，并将`recv`设置为1，与`recv`线程一起。在这种情况下，组合线程被命名为`main_rep_recv`。
- en: 'In addition, the maximum numbers of a number of existing thread types have
    been increased. The new maximums, including those for query threads and recovery
    threads, are listed here:'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，许多现有线程类型的最大数量已增加。包括查询线程和恢复线程在内的新最大值在此处列出：
- en: 'LDM: 332'
  id: totrans-319
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: LDM：332
- en: 'Query: 332'
  id: totrans-320
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询：332
- en: 'Recovery: 332'
  id: totrans-321
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复：332
- en: 'TC: 128'
  id: totrans-322
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: TC：128
- en: 'Receive: 64'
  id: totrans-323
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接收：64
- en: 'Send: 64'
  id: totrans-324
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送：64
- en: 'Main: 2'
  id: totrans-325
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要：2
- en: Maximums for other thread types remain unchanged.
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 其他线程类型的最大值保持不变。
- en: Also, as the result of work done relating to this task, `NDB` now employs mutexes
    to protect job buffers when using more than 32 block threads. While this can cause
    a slight decrease in performance (1 to 2 percent in most cases), it also significantly
    reduces the amount of memory required by very large configurations. For example,
    a setup with 64 threads which used 2 GB of job buffer memory prior to NDB 8.0.23
    should require only about 1 GB instead in NDB 8.0.23 and later. In our testing
    this has resulted in an overall improvement on the order of 5 percent in the execution
    of very complex queries.
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，作业缓冲区在使用超过32个块线程时，`NDB`现在使用互斥锁来保护。虽然这可能会导致性能略微下降（在大多数情况下为1到2％），但也显着减少了非常大配置所需的内存量。例如，在NDB
    8.0.23之前，使用2 GB作业缓冲区内存的64个线程设置，现在在NDB 8.0.23及更高版本中只需要约1 GB。在我们的测试中，这导致非常复杂查询的执行整体改善约5％。
- en: For further information, see the descriptions of the [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)
    parameter and the [`ndbinfo.threads`](mysql-cluster-ndbinfo-threads.html "25.6.16.62 The
    ndbinfo threads Table") table.
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)参数和[`ndbinfo.threads`](mysql-cluster-ndbinfo-threads.html
    "25.6.16.62 ndbinfo threads表")表的描述。
- en: '**ThreadConfig thread count changes. ** As the result of work done in NDB 8.0.30,
    setting the value of [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)
    requires including `main`, `rep`, `recv`, and `ldm` in the `ThreadConfig` value
    string explicitly, in this and subsequent NDB Cluster releases. In addition, `count=0`
    must be set explicitly for each thread type (of `main`, `rep`, or `ldm`) that
    is not to be used, and setting `count=1` for replication threads (`rep`) requires
    also setting `count=1` for `main`.'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ThreadConfig线程计数更改。** 由于NDB 8.0.30中的工作结果，需要在`ThreadConfig`值字符串中明确包含`main`、`rep`、`recv`和`ldm`的值，以及在此后的NDB集群版本中。此外，必须明确设置`count=0`以表示不使用的每个线程类型（`main`、`rep`或`ldm`），并且为复制线程（`rep`）设置`count=1`还需要为`main`设置`count=1`。'
- en: These changes can have a significant impact on upgrades of NDB clusters where
    this parameter is in use; see [Section 25.3.7, “Upgrading and Downgrading NDB
    Cluster”](mysql-cluster-upgrade-downgrade.html "25.3.7 Upgrading and Downgrading
    NDB Cluster"), for more information.
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些更改可能对使用此参数的NDB集群的升级产生重大影响；有关更多信息，请参阅[第25.3.7节，“NDB集群升级和降级”](mysql-cluster-upgrade-downgrade.html
    "25.3.7 NDB集群升级和降级")。
- en: '**ndbmtd Thread Auto-Configuration. ** Beginning with NDB 8.0.23, it is possible
    to employ automatic configuration of threads for multi-threaded data nodes using
    the [**ndbmtd**](mysql-cluster-programs-ndbmtd.html "25.5.3 ndbmtd — The NDB Cluster
    Data Node Daemon (Multi-Threaded)") configuration parameter [`AutomaticThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-automaticthreadconfig).
    When this parameter is set to 1, `NDB` sets up thread assignments automatically,
    based on the number of processors available to applications, for all thread supported
    thread types, including the new `query` and `recover` thread types described in
    the previous item. If the system does not limit the number of processors, you
    can do so if desired by setting [`NumCPUs`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-numcpus)
    (also added in NDB 8.0.23). Otherwise, automatic thread configuration accommodates
    up to 1024 CPUs.'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndbmtd 线程自动配置。** 从 NDB 8.0.23 开始，可以使用 [**ndbmtd**](mysql-cluster-programs-ndbmtd.html
    "25.5.3 ndbmtd — The NDB Cluster Data Node Daemon (Multi-Threaded)") 配置参数 [`AutomaticThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-automaticthreadconfig)
    来实现多线程数据节点的自动线程配置。当此参数设置为 1 时，`NDB` 根据应用程序可用的处理器数量自动设置线程分配，适用于所有支持线程类型，包括前一项中描述的新的
    `query` 和 `recover` 线程类型。如果系统不限制处理器数量，您可以通过设置 [`NumCPUs`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-numcpus)（也在
    NDB 8.0.23 中添加）来限制处理器数量。否则，自动线程配置支持最多 1024 个处理器。'
- en: Automatic thread configuration occurs regardless of any values set for [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)
    or [`MaxNoOfExecutionThreads`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-maxnoofexecutionthreads)
    in `config.ini`; this means that it is not necessary to set either of these parameters.
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论在 `config.ini` 中设置了 [`ThreadConfig`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-threadconfig)
    或 [`MaxNoOfExecutionThreads`](mysql-cluster-ndbd-definition.html#ndbparam-ndbmtd-maxnoofexecutionthreads)
    的值如何，自动线程配置都会发生；这意味着不需要设置这两个参数。
- en: 'In addition, NDB 8.0.23 implements a number of new [`ndbinfo`](mysql-cluster-ndbinfo.html
    "25.6.16 ndbinfo: The NDB Cluster Information Database") information database
    tables providing information about hardware and CPU availability, as well as CPU
    usage by `NDB` data nodes. These tables are listed here:'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '此外，NDB 8.0.23 实现了许多新的 [`ndbinfo`](mysql-cluster-ndbinfo.html "25.6.16 ndbinfo:
    The NDB Cluster Information Database") 信息数据库表，提供有关硬件和 CPU 可用性以及 `NDB` 数据节点的 CPU
    使用情况的信息。这些表列在此处：'
- en: '[`cpudata`](mysql-cluster-ndbinfo-cpudata.html "25.6.16.13 The ndbinfo cpudata
    Table")'
  id: totrans-334
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`cpudata`](mysql-cluster-ndbinfo-cpudata.html "25.6.16.13 The ndbinfo cpudata
    Table")'
- en: '[`cpudata_1sec`](mysql-cluster-ndbinfo-cpudata-1sec.html "25.6.16.14 The ndbinfo
    cpudata_1sec Table")'
  id: totrans-335
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`cpudata_1sec`](mysql-cluster-ndbinfo-cpudata-1sec.html "25.6.16.14 The ndbinfo
    cpudata_1sec Table")'
- en: '[`cpudata_20sec`](mysql-cluster-ndbinfo-cpudata-20sec.html "25.6.16.15 The
    ndbinfo cpudata_20sec Table")'
  id: totrans-336
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`cpudata_20sec`](mysql-cluster-ndbinfo-cpudata-20sec.html "25.6.16.15 The
    ndbinfo cpudata_20sec Table")'
- en: '[`cpudata_50ms`](mysql-cluster-ndbinfo-cpudata-50ms.html "25.6.16.16 The ndbinfo
    cpudata_50ms Table")'
  id: totrans-337
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`cpudata_50ms`](mysql-cluster-ndbinfo-cpudata-50ms.html "25.6.16.16 The ndbinfo
    cpudata_50ms Table")'
- en: '[`cpuinfo`](mysql-cluster-ndbinfo-cpuinfo.html "25.6.16.17 The ndbinfo cpuinfo
    Table")'
  id: totrans-338
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`cpuinfo`](mysql-cluster-ndbinfo-cpuinfo.html "25.6.16.17 The ndbinfo cpuinfo
    Table")'
- en: '[`hwinfo`](mysql-cluster-ndbinfo-hwinfo.html "25.6.16.38 The ndbinfo hwinfo
    Table")'
  id: totrans-339
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`hwinfo`](mysql-cluster-ndbinfo-hwinfo.html "25.6.16.38 The ndbinfo hwinfo
    Table")'
- en: Some of these tables are not available on every platform supported by NDB Cluster;
    see the individual descriptions of them for more information.
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些表中的一些在 NDB Cluster 支持的每个平台上都不可用；有关更多信息，请参阅它们的各自描述。
- en: '**Hierarchical views of NDB database objects. ** The [`dict_obj_tree`](mysql-cluster-ndbinfo-dict-obj-tree.html
    "25.6.16.25 The ndbinfo dict_obj_tree Table") table, added to the `ndbinfo` information
    database in NDB 8.0.24, can provide hierarchical and tree-like views of many `NDB`
    database objects, including the following:'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB 数据库对象的分层视图。** [`dict_obj_tree`](mysql-cluster-ndbinfo-dict-obj-tree.html
    "25.6.16.25 The ndbinfo dict_obj_tree Table") 表是在 NDB 8.0.24 中添加到 `ndbinfo` 信息数据库中的，可以提供许多
    `NDB` 数据库对象的分层和树状视图，包括以下内容：'
- en: Tables and associated indexes
  id: totrans-342
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表和相关索引
- en: Tablespaces and associated data files
  id: totrans-343
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表空间和相关数据文件
- en: Logfile groups and associated undo log files
  id: totrans-344
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志文件组和相关的撤销日志文件
- en: For more information and examples, see [Section 25.6.16.25, “The ndbinfo dict_obj_tree
    Table”](mysql-cluster-ndbinfo-dict-obj-tree.html "25.6.16.25 The ndbinfo dict_obj_tree
    Table").
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息和示例，请参见 [第 25.6.16.25 节，“ndbinfo dict_obj_tree 表”](mysql-cluster-ndbinfo-dict-obj-tree.html
    "25.6.16.25 The ndbinfo dict_obj_tree Table")。
- en: '**Index statistics enhancements. ** NDB 8.0.24 implements the following improvements
    in calculation of index statistics:'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**索引统计增强。** NDB 8.0.24 实现了以下改进，用于计算索引统计信息：'
- en: Index statistics were previously collected from one fragment only; this is changed
    such that this extrapolation is extended to additional fragments.
  id: totrans-347
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以前仅从一个片段收集索引统计信息；现在已更改为将此外推扩展到其他片段。
- en: The algorithm used for very small tables, such as those having very few rows
    where results are discarded, has been improved, so that estimates for such tables
    should be more accurate than previously.
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于非常小的表的算法已经改进，例如那些具有非常少行且结果被丢弃的表，因此对于这些表的估计应该比以前更准确。
- en: As of NDB 8.0.27, the index statistics tables are created and updated automatically
    by default, [`IndexStatAutoCreate`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-indexstatautocreate)
    and [`IndexStatAutoUpdate`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-indexstatautoupdate)
    both default to `1` (enabled) rather than `0` (disabled), and it is no longer
    necessary to run [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE
    Statement") to update the statistics.
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 NDB 8.0.27 开始，默认情况下索引统计表会自动创建和更新，[`IndexStatAutoCreate`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-indexstatautocreate)
    和 [`IndexStatAutoUpdate`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-indexstatautoupdate)
    都默认为 `1`（启用），而不是 `0`（禁用），因此不再需要运行 [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement") 来更新统计信息。
- en: For additional information, see [Section 25.6.15, “NDB API Statistics Counters
    and Variables”](mysql-cluster-ndb-api-statistics.html "25.6.15 NDB API Statistics
    Counters and Variables").
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见 [第 25.6.15 节，“NDB API 统计计数器和变量”](mysql-cluster-ndb-api-statistics.html
    "25.6.15 NDB API Statistics Counters and Variables")。
- en: '**Conversion between NULL and NOT NULL during restore operations. ** Beginning
    with NDB 8.0.26, [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") can support restoring of `NULL` columns as `NOT
    NULL` and the reverse, using the options listed here:'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在恢复操作期间 NULL 和 NOT NULL 之间的转换。** 从 NDB 8.0.26 开始，[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") 可以支持将 `NULL` 列恢复为 `NOT
    NULL`，反之亦然，使用以下列出的选项：'
- en: To restore a `NULL` column as `NOT NULL`, use the [`--lossy-conversions`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_lossy-conversions)
    option.
  id: totrans-352
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将 `NULL` 列恢复为 `NOT NULL`，请使用 [`--lossy-conversions`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_lossy-conversions)
    选项。
- en: The column originally declared as `NULL` must not contain any `NULL` rows; if
    it does, [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") exits with an error.
  id: totrans-353
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最初声明为 `NULL` 的列不得包含任何 `NULL` 行；如果包含，[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") 将以错误退出。
- en: To restore a `NOT NULL` column as `NULL`, use the [`--promote-attributes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_promote-attributes)
    option.
  id: totrans-354
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将 `NOT NULL` 列恢复为 `NULL`，请使用 [`--promote-attributes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_promote-attributes)
    选项。
- en: For more information, see the descriptions of the indicated [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") options.
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关指定的 [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") 选项的描述，请参见更多信息。
- en: '**SQL-compliant NULL comparison mode for NdbScanFilter. ** Traditionally, when
    making comparisons involving `NULL`, [`NdbScanFilter`](/doc/ndbapi/en/ndb-ndbscanfilter.html)
    treats `NULL` as equal to `NULL` (and thus considers `NULL == NULL` to be `TRUE`).
    This is not the same as specified by the SQL Standard, which requires that any
    comparison with `NULL` return `NULL`, including `NULL == NULL`.'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NdbScanFilter 的 SQL 兼容 NULL 比较模式。** 传统上，在涉及 `NULL` 的比较时，[`NdbScanFilter`](/doc/ndbapi/en/ndb-ndbscanfilter.html)
    将 `NULL` 视为等于 `NULL`（因此认为 `NULL == NULL` 为 `TRUE`）。这与 SQL 标准规定不同，SQL 标准要求任何与 `NULL`
    的比较都返回 `NULL`，包括 `NULL == NULL`。'
- en: Previously, it was not possible for an NDB API application to override this
    behavior; beginning with NDB 8.0.26, you can do so by calling [`NdbScanFilter::setSqlCmpSemantics()`](/doc/ndbapi/en/ndb-ndbscanfilter.html#ndb-ndbscanfilter-setsqlcmpsemantics)
    prior to creating a scan filter. (Thus, this method is always invoked as a class
    method and not as an instance method.) Doing so causes the next `NdbScanFilter`
    object to be created to employ SQL-compliant `NULL` comparison for all comparison
    operations performed over the lifetime of the instance. You must invoke the method
    for each [`NdbScanFilter`](/doc/ndbapi/en/ndb-ndbscanfilter.html) object that
    should use SQL-compliant comparisons.
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，NDB API 应用程序无法覆盖此行为；从 NDB 8.0.26 开始，您可以在创建扫描过滤器之前调用 [`NdbScanFilter::setSqlCmpSemantics()`](/doc/ndbapi/en/ndb-ndbscanfilter.html#ndb-ndbscanfilter-setsqlcmpsemantics)
    来实现。这样做会导致下一个 `NdbScanFilter` 对象在其生命周期内执行的所有比较操作都采用符合 SQL 标准的 `NULL` 比较。您必须为每个应使用符合
    SQL 标准比较的 [`NdbScanFilter`](/doc/ndbapi/en/ndb-ndbscanfilter.html) 对象调用该方法。
- en: For more information, see [NdbScanFilter::setSqlCmpSemantics()](/doc/ndbapi/en/ndb-ndbscanfilter.html#ndb-ndbscanfilter-setsqlcmpsemantics).
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅 [NdbScanFilter::setSqlCmpSemantics()](/doc/ndbapi/en/ndb-ndbscanfilter.html#ndb-ndbscanfilter-setsqlcmpsemantics)。
- en: '**Deprecation of NDB API .FRM file methods. ** MySQL 8.0 and NDB 8.0 no longer
    use `.FRM` files for storing table metadata. For this reason, the NDB API methods
    [`getFrmData()`](/doc/ndbapi/en/ndb-table.html#ndb-table-getfrmdata), [`getFrmLength()`](/doc/ndbapi/en/ndb-table.html#ndb-table-getfrmlength),
    and [`setFrm()`](/doc/ndbapi/en/ndb-table.html#ndb-table-setfrm) are deprecated
    as of NDB 8.0.27, and subject to removal in a future release. For reading and
    writing table metadata, use [`getExtraMetadata()`](/doc/ndbapi/en/ndb-table.html#ndb-table-getextrametadata)
    and [`setExtraMetadata()`](/doc/ndbapi/en/ndb-table.html#ndb-table-setextrametadata)
    instead.'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB API .FRM 文件方法的弃用。** MySQL 8.0 和 NDB 8.0 不再使用 `.FRM` 文件存储表元数据。因此，NDB API
    方法 [`getFrmData()`](/doc/ndbapi/en/ndb-table.html#ndb-table-getfrmdata)，[`getFrmLength()`](/doc/ndbapi/en/ndb-table.html#ndb-table-getfrmlength)，和
    [`setFrm()`](/doc/ndbapi/en/ndb-table.html#ndb-table-setfrm) 在 NDB 8.0.27 中已被弃用，并可能在未来的版本中移除。要读取和写入表元数据，请改用
    [`getExtraMetadata()`](/doc/ndbapi/en/ndb-table.html#ndb-table-getextrametadata)
    和 [`setExtraMetadata()`](/doc/ndbapi/en/ndb-table.html#ndb-table-setextrametadata)。'
- en: '**Preference for IPv4 or IPv6 addressing. ** NDB 8.0.26 adds the [`PreferIPVersion`](mysql-cluster-tcp-definition.html#ndbparam-tcp-preferipversion)
    configuration parameter, which controls the addressing preference for DNS resolution.
    IPv4 ([`PreferIPVersion=4`](mysql-cluster-tcp-definition.html#ndbparam-tcp-preferipversion))
    is the default. Because configuration retrieval in NDB requires that this preference
    be the same for all TCP connections, you should set it only in the `[tcp default]`
    section of the cluster global configuration (`config.ini`) file.'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IPv4 或 IPv6 寻址偏好。** NDB 8.0.26 添加了 [`PreferIPVersion`](mysql-cluster-tcp-definition.html#ndbparam-tcp-preferipversion)
    配置参数，用于控制 DNS 解析的寻址偏好。IPv4（[`PreferIPVersion=4`](mysql-cluster-tcp-definition.html#ndbparam-tcp-preferipversion)）是默认设置。由于
    NDB 中的配置检索要求所有 TCP 连接的偏好设置相同，因此您应该仅在集群全局配置文件（`config.ini`）的 `[tcp default]` 部分中设置它。'
- en: See [Section 25.4.3.10, “NDB Cluster TCP/IP Connections”](mysql-cluster-tcp-definition.html
    "25.4.3.10 NDB Cluster TCP/IP Connections"), for more information.
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅 [Section 25.4.3.10, “NDB Cluster TCP/IP Connections”](mysql-cluster-tcp-definition.html
    "25.4.3.10 NDB Cluster TCP/IP Connections")。
- en: '**Logging enhancements. ** Previously, analysis of NDB Cluster data node and
    management node logs could be hampered by the fact that different log messages
    used different formats, and that not all log messages included timestamps. Such
    issues were due in part to the fact that logging was performed by a number of
    different mechanisms, such as the functions `printf`, `fprintf`, `ndbout`, and
    `ndbout_c`, overloading of the `<<` operator, and so on.'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志增强。** 以前，NDB Cluster 数据节点和管理节点日志的分析可能会受到不同日志消息使用不同格式以及不是所有日志消息都包含时间戳的影响。这些问题部分是由于日志记录是通过多种不同机制执行的，如函数
    `printf`，`fprintf`，`ndbout` 和 `ndbout_c`，`<<` 操作符的重载等。'
- en: We fix these problems by standardizing on the `EventLogger` mechanism, which
    is already present in `NDB`, and which begins each log message with a timestamp
    in `YYYY-MM-DD HH:MM:SS` format.
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们通过标准化 `EventLogger` 机制来解决这些问题，该机制已经存在于 `NDB` 中，并且每条日志消息以 `YYYY-MM-DD HH:MM:SS`
    格式的时间戳开头。
- en: See [Section 25.6.3, “Event Reports Generated in NDB Cluster”](mysql-cluster-event-reports.html
    "25.6.3 Event Reports Generated in NDB Cluster"), for more information about NDB
    Cluster event logs and the `EventLogger` log message format.
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关 NDB Cluster 事件日志和 `EventLogger` 日志消息格式的更多信息，请参见 [第 25.6.3 节，“NDB Cluster
    生成的事件报告”](mysql-cluster-event-reports.html "25.6.3 Event Reports Generated in
    NDB Cluster")。
- en: '**Copying ALTER TABLE improvements. ** Beginning with NDB 8.0.27, a copying
    [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") on an `NDB` table
    compares the fragment commit counts for the source table before and after performing
    the copy. This allows the SQL node executing this statement to determine whether
    there has been any concurrent write activity to the table being altered; if so,
    the SQL node can then terminate the operation.'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复制 ALTER TABLE 改进。** 从 NDB 8.0.27 开始，在 `NDB` 表上执行复制的 [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") 会比较执行复制前后源表的片段提交计数。这使得执行此语句的 SQL 节点可以确定是否有任何并发写入活动对正在更改的表进行了操作；如果有，SQL
    节点可以终止操作。'
- en: When concurrent writes are detected being made to the table being altered, the
    `ALTER TABLE` statement is rejected with the error Detected change to data in
    source table during copying ALTER TABLE. Alter aborted to avoid inconsistency
    ([`ER_TABLE_DEF_CHANGED`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_table_def_changed)).
    Stopping the alter operation, rather than allowing it to proceed with concurrent
    writes taking place, can help prevent silent data loss or corruption.
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当检测到对正在更改的表进行并发写入时，`ALTER TABLE` 语句将被拒绝，并显示错误消息 Detected change to data in source
    table during copying ALTER TABLE. Alter aborted to avoid inconsistency ([`ER_TABLE_DEF_CHANGED`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_table_def_changed))。停止更改操作，而不是允许其继续进行并发写入，可以帮助防止数据丢失或损坏。
- en: '**ndbinfo index_stats table. ** NDB 8.0.28 adds the [`index_stats`](mysql-cluster-ndbinfo-index-stats.html
    "25.6.16.40 The ndbinfo index_stats Table") table, which provides basic information
    about NDB index statistics. It is intended primarily for internal testing, but
    may be useful as a supplement to [**ndb_index_stat**](mysql-cluster-programs-ndb-index-stat.html
    "25.5.14 ndb_index_stat — NDB Index Statistics Utility").'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndbinfo index_stats 表。** NDB 8.0.28 添加了 [`index_stats`](mysql-cluster-ndbinfo-index-stats.html
    "25.6.16.40 The ndbinfo index_stats Table") 表，提供关于 NDB 索引统计信息的基本信息。它主要用于内部测试，但可能作为
    [**ndb_index_stat**](mysql-cluster-programs-ndb-index-stat.html "25.5.14 ndb_index_stat
    — NDB Index Statistics Utility") 的补充。'
- en: '**ndb_import --table option. ** Prior to NDB 8.0.28, [**ndb_import**](mysql-cluster-programs-ndb-import.html
    "25.5.13 ndb_import — Import CSV Data Into NDB") always imported the data read
    from a CSV file into a table whose name was derived from the name of the file
    being read. NDB 8.0.28 adds a [`--table`](mysql-cluster-programs-ndb-import.html#option_ndb_import_table)
    option (short form: `-t`) for this program to specify the name of the target table
    directly, and override the previous behavior.'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_import --table 选项。** 在 NDB 8.0.28 之前，[**ndb_import**](mysql-cluster-programs-ndb-import.html
    "25.5.13 ndb_import — Import CSV Data Into NDB") 总是将从 CSV 文件中读取的数据导入到一个表中，该表的名称是根据正在读取的文件的名称派生而来的。NDB
    8.0.28 添加了一个 [`--table`](mysql-cluster-programs-ndb-import.html#option_ndb_import_table)
    选项（简写形式：`-t`）用于指定目标表的名称，并覆盖先前的行为。'
- en: The default behavior for [**ndb_import**](mysql-cluster-programs-ndb-import.html
    "25.5.13 ndb_import — Import CSV Data Into NDB") remains to use the base name
    of the input file as the name of the target table.
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**ndb_import**](mysql-cluster-programs-ndb-import.html "25.5.13 ndb_import
    — Import CSV Data Into NDB") 的默认行为��然是使用输入文件的基本名称作为目标表的名称。'
- en: '**ndb_import --missing-ai-column option. ** Beginning with NDB 8.0.29, [**ndb_import**](mysql-cluster-programs-ndb-import.html
    "25.5.13 ndb_import — Import CSV Data Into NDB") can import data from a CSV file
    that contains empty values for an `AUTO_INCREMENT` column, using the [`--missing-ai-column`](mysql-cluster-programs-ndb-import.html#option_ndb_import_missing-ai-column)
    option introduced in that release. The option can be used with one or more tables
    containing such a column.'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_import --missing-ai-column 选项。** 从 NDB 8.0.29 开始，[**ndb_import**](mysql-cluster-programs-ndb-import.html
    "25.5.13 ndb_import — Import CSV Data Into NDB") 可以使用在该版本中引入的 [`--missing-ai-column`](mysql-cluster-programs-ndb-import.html#option_ndb_import_missing-ai-column)
    选项导入包含 `AUTO_INCREMENT` 列的 CSV 文件中的空值数据。该选项可用于包含此类列的一个或多个表。'
- en: In order for this option to work, the `AUTO_INCREMENT` column in the CSV file
    must not contain any values. Otherwise, the import operation cannot proceed.
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为使此选项生效，CSV 文件中的 `AUTO_INCREMENT` 列不得包含任何值。否则，导入操作无法继续。
- en: '**ndb_import and empty lines. ** [**ndb_import**](mysql-cluster-programs-ndb-import.html
    "25.5.13 ndb_import — Import CSV Data Into NDB") has always rejected any empty
    lines encountered in an incoming CSV file. NDB 8.0.30 adds support for importing
    empty lines into a single column, provided that it is possible to convert the
    empty value into a column value.'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_import 和空行。** [**ndb_import**](mysql-cluster-programs-ndb-import.html
    "25.5.13 ndb_import — Import CSV Data Into NDB") 一直会拒绝在传入的 CSV 文件中遇到的任何空行。NDB
    8.0.30 添加了支持，可以将空行导入到单个列中，前提是可以将空值转换为列值。'
- en: '**ndb_restore --with-apply-status option. ** Beginning with NDB 8.0.29, it
    is possible to restore the `ndb_apply_status` table from an `NDB` backup, using
    [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup") with the [`--with-apply-status`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_with-apply-status)
    option added in that release. To use this option, you must also use [`--restore-data`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_restore-data)
    when invoking [**ndb_restore**](mysql-cluster-programs-ndb-restore.html "25.5.23 ndb_restore
    — Restore an NDB Cluster Backup").'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndb_restore --with-apply-status 选项。** 从 NDB 8.0.29 开始，可以使用 [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") 和该版本中添加的 [`--with-apply-status`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_with-apply-status)
    选项从 `NDB` 备份中恢复 `ndb_apply_status` 表。要使用此选项，调用 [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") 时还必须使用 [`--restore-data`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_restore-data)。'
- en: '`--with-apply-status` restores all rows of the `ndb_apply_status` table except
    for the row having `server_id = 0`; to restore this row, use [`--restore-epoch`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_restore-epoch).
    For more information, see [ndb_apply_status Table](mysql-cluster-replication-schema.html#ndb-replication-ndb-apply-status
    "ndb_apply_status Table"), as the description of the `--with-apply-status` option.'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`--with-apply-status` 会恢复除了具有 `server_id = 0` 的行之外的所有 `ndb_apply_status` 表的行；要恢复此行，请使用
    [`--restore-epoch`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_restore-epoch)。有关更多信息，请参阅
    [ndb_apply_status 表](mysql-cluster-replication-schema.html#ndb-replication-ndb-apply-status
    "ndb_apply_status 表")，以及 `--with-apply-status` 选项的描述。'
- en: '**SQL access to tables with missing indexes. ** Prior to NDB 8.0.29, when a
    user query attempted to open an `NDB` table with a missing or broken index, the
    MySQL server raised `NDB` error [`4243`](/doc/ndbapi/en/ndb-error-codes-application-error.html#ndberrno-4243)
    (Index not found). This situation could arise when constraint violations or missing
    data make it impossible to restore an index on an `NDB` table, and [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") [`--disable-indexes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_disable-indexes)
    was used to restore the data without the index.'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**具有缺失索引的表的 SQL 访问。** 在 NDB 8.0.29 之前，当用户查询尝试打开具有缺失或损坏索引的 `NDB` 表时，MySQL 服务器会引发
    `NDB` 错误 [`4243`](/doc/ndbapi/en/ndb-error-codes-application-error.html#ndberrno-4243)（索引未找到）。当约束违规或缺失数据使得无法在
    `NDB` 表上恢复索引时，会出现这种情况，并且使用 [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") 的 [`--disable-indexes`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_disable-indexes)
    用于在没有索引的情况下恢复数据。'
- en: Beginning with NDB 8.0.29, an SQL query against an `NDB` table which has missing
    indexes succeeds if the query does not use any of the missing indexes. Otherwise,
    the query is rejected with [`ER_NOT_KEYFILE`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_not_keyfile).
    In this case, you can use [`ALTER TABLE ... ALTER INDEX ... INVISIBLE`](alter-table.html#alter-table-index
    "Primary Keys and Indexes") to keep the MySQL Optimizer from trying to use the
    index, or drop the index (and then possibly re-create it) using the appropriate
    SQL statements.
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 NDB 8.0.29 开始，针对一个具有缺失索引的 `NDB` 表的 SQL 查询，如果查询不使用任何缺失的索引，则成功。否则，查询将被拒绝，并显示
    [`ER_NOT_KEYFILE`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_not_keyfile)。在这种情况下，您可以使用
    [`ALTER TABLE ... ALTER INDEX ... INVISIBLE`](alter-table.html#alter-table-index
    "主键和索引") 来阻止 MySQL 优化器尝试使用该索引，或者使用适当的 SQL 语句删除该索引（然后可能重新创建）。
- en: '**NDB API List::clear() method. ** The NDB API [`Dictionary`](/doc/ndbapi/en/ndb-dictionary.html)
    methods [`listEvents()`](/doc/ndbapi/en/ndb-dictionary.html#ndb-dictionary-listevents),
    [`listIndexes()`](/doc/ndbapi/en/ndb-dictionary.html#ndb-dictionary-listindexes),
    and [`listObjects()`](/doc/ndbapi/en/ndb-dictionary.html#ndb-dictionary-listobjects)
    each require a reference to a [`List`](/doc/ndbapi/en/ndb-list.html) object which
    is empty. Previously, reusing an existing `List` with any of these methods was
    problematic for this reason. NDB 8.0.29 makes this easier by implementing a [`clear()`](/doc/ndbapi/en/ndb-list.html#ndb-list-clear)
    method which removes all data from the list.'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB API List::clear() 方法。** NDB API [`Dictionary`](/doc/ndbapi/en/ndb-dictionary.html)
    方法 [`listEvents()`](/doc/ndbapi/en/ndb-dictionary.html#ndb-dictionary-listevents),
    [`listIndexes()`](/doc/ndbapi/en/ndb-dictionary.html#ndb-dictionary-listindexes)
    和 [`listObjects()`](/doc/ndbapi/en/ndb-dictionary.html#ndb-dictionary-listobjects)
    每个都需要一个空的 [`List`](/doc/ndbapi/en/ndb-list.html) 对象的引用。以前，使用任何这些方法重用现有的 `List`
    都会因为这个原因出现问题。NDB 8.0.29 通过实现一个 [`clear()`](/doc/ndbapi/en/ndb-list.html#ndb-list-clear)
    方法来简化这个过程，该方法会从列表中删除所有数据。'
- en: As part of this work, the `List` class destructor now calls `List::clear()`
    before removing any elements or attributes from the list.
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作为这项工作的一部分，`List` 类析构函数现在在从列表中删除任何元素或属性之前调用 `List::clear()`。
- en: '**NDB dictionary tables in ndbinfo. ** NDB 8.0.29 introduces several new tables
    in the [`ndbinfo`](mysql-cluster-ndbinfo.html "25.6.16 ndbinfo: The NDB Cluster
    Information Database") database providing information from [`NdbDictionary`](/doc/ndbapi/en/ndb-ndbdictionary.html)
    that previously required the use of [**ndb_desc**](mysql-cluster-programs-ndb-desc.html
    "25.5.9 ndb_desc — Describe NDB Tables"), [**ndb_select_all**](mysql-cluster-programs-ndb-select-all.html
    "25.5.25 ndb_select_all — Print Rows from an NDB Table"), and other **NDB** utility
    programs.'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB 字典表在 ndbinfo 中。** NDB 8.0.29 在 [`ndbinfo`](mysql-cluster-ndbinfo.html
    "25.6.16 ndbinfo: The NDB Cluster Information Database") 数据库中引入了几个新表，提供了以前需要使用
    [**ndb_desc**](mysql-cluster-programs-ndb-desc.html "25.5.9 ndb_desc — Describe
    NDB Tables"), [**ndb_select_all**](mysql-cluster-programs-ndb-select-all.html
    "25.5.25 ndb_select_all — Print Rows from an NDB Table") 和其他 **NDB** 实用程序程序来获取的来自
    [`NdbDictionary`](/doc/ndbapi/en/ndb-ndbdictionary.html) 的信息。'
- en: Two of these tables are actually views. The [`hash_maps`](mysql-cluster-ndbinfo-hash-maps.html
    "25.6.16.37 The ndbinfo hash_maps Table") table provides information about hash
    maps used by `NDB`; the [`files`](mysql-cluster-ndbinfo-files.html "25.6.16.35 The
    ndbinfo files Table") table shows information regarding files used for storing
    data on disk (see [Section 25.6.11, “NDB Cluster Disk Data Tables”](mysql-cluster-disk-data.html
    "25.6.11 NDB Cluster Disk Data Tables")).
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些表中有两个实际上是视图。[`hash_maps`](mysql-cluster-ndbinfo-hash-maps.html "25.6.16.37 ndbinfo
    hash_maps 表") 表提供了 `NDB` 使用的哈希映射的信息；[`files`](mysql-cluster-ndbinfo-files.html
    "25.6.16.35 ndbinfo files 表") 表显示了关于在磁盘上存储数据的文件的信息（参见 [第 25.6.11 节，“NDB 集群磁盘数据表”](mysql-cluster-disk-data.html
    "25.6.11 NDB Cluster Disk Data Tables")）。
- en: 'The remaining six `ndbinfo` tables added in NDB 8.0.29 are base tables. These
    tables are not hidden and are not named using the prefix `ndb$`. These tables
    are listed here, with descriptions of the objects represented in each table:'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: NDB 8.0.29 中添加的剩余六个 `ndbinfo` 表都是基本表。这些表不是隐藏的，也不使用 `ndb$` 前缀命名。这些表在此列出，包括每个表中表示的对象的描述：
- en: '[`blobs`](mysql-cluster-ndbinfo-blobs.html "25.6.16.4 The ndbinfo blobs Table"):
    Blob tables used to store the variable-size parts of [`BLOB`](blob.html "13.3.4 The
    BLOB and TEXT Types") and [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types")
    columns'
  id: totrans-382
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`blobs`](mysql-cluster-ndbinfo-blobs.html "25.6.16.4 ndbinfo blobs 表"): 用于存储
    [`BLOB`](blob.html "13.3.4 BLOB 和 TEXT 类型") 和 [`TEXT`](blob.html "13.3.4 BLOB
    和 TEXT 类型") 列的可变大小部分的 Blob 表'
- en: '[`dictionary_columns`](mysql-cluster-ndbinfo-dictionary-columns.html "25.6.16.22 The
    ndbinfo dictionary_columns Table"): Columns of `NDB` tables'
  id: totrans-383
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`dictionary_columns`](mysql-cluster-ndbinfo-dictionary-columns.html "25.6.16.22 ndbinfo
    dictionary_columns 表"): `NDB` 表的列'
- en: '[`dictionary_tables`](mysql-cluster-ndbinfo-dictionary-tables.html "25.6.16.23 The
    ndbinfo dictionary_tables Table"): `NDB` tables'
  id: totrans-384
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`dictionary_tables`](mysql-cluster-ndbinfo-dictionary-tables.html "25.6.16.23 ndbinfo
    dictionary_tables 表"): `NDB` 表'
- en: '[`events`](mysql-cluster-ndbinfo-events.html "25.6.16.34 The ndbinfo events
    Table"): Event subscriptions in the NDB API'
  id: totrans-385
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`events`](mysql-cluster-ndbinfo-events.html "25.6.16.34 ndbinfo events 表"):
    NDB API 中的事件订阅'
- en: '[`foreign_keys`](mysql-cluster-ndbinfo-foreign-keys.html "25.6.16.36 The ndbinfo
    foreign_keys Table"): Foreign keys on `NDB` tables'
  id: totrans-386
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`foreign_keys`](mysql-cluster-ndbinfo-foreign-keys.html "25.6.16.36 ndbinfo
    foreign_keys 表"): `NDB` 表上的外键'
- en: '[`index_columns`](mysql-cluster-ndbinfo-index-columns.html "25.6.16.39 The
    ndbinfo index_columns Table"): Indexes on `NDB` tables'
  id: totrans-387
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`index_columns`](mysql-cluster-ndbinfo-index-columns.html "25.6.16.39 ndbinfo
    index_columns 表")：`NDB` 表上的索引'
- en: NDB 8.0.29 also makes changes in the `ndbinfo` storage engine's implementation
    of primary keys to improve compatibility with [`NdbDictionary`](/doc/ndbapi/en/ndb-ndbdictionary.html).
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: NDB 8.0.29 还对 `ndbinfo` 存储引擎的主键实现进行了更改，以提高与 [`NdbDictionary`](/doc/ndbapi/en/ndb-ndbdictionary.html)
    的兼容性。
- en: '**ndbcluster plugin and Performance Schema. ** As of NDB 8.0.29, `ndbcluster`
    plugin threads are shown in the Performance Schema [`threads`](performance-schema-threads-table.html
    "29.12.21.8 The threads Table") and [`setup_threads`](performance-schema-setup-threads-table.html
    "29.12.2.5 The setup_threads Table") tables, making it possible to obtain information
    about the performance of these threads. The three threads exposed in [`performance_schema`](performance-schema.html
    "Chapter 29 MySQL Performance Schema") tables are listed here:'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndbcluster 插件和性能模式。** 从 NDB 8.0.29 开始，`ndbcluster` 插件线程显示在性能模式 [`threads`](performance-schema-threads-table.html
    "29.12.21.8 threads 表") 和 [`setup_threads`](performance-schema-setup-threads-table.html
    "29.12.2.5 setup_threads 表") 中，可以获取有关这些线程性能的信息。在 [`performance_schema`](performance-schema.html
    "第 29 章 MySQL 性能模式") 表中公开的三个线程列在此处：'
- en: '`ndb_binlog`: Binary logging thread'
  id: totrans-390
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ndb_binlog`：二进制日志线程'
- en: '`ndb_index_stat`: Index statistics thread'
  id: totrans-391
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ndb_index_stat`：索引统计线程'
- en: '`ndb_metadata`: Metadata thread'
  id: totrans-392
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ndb_metadata`：元数据线程'
- en: See [ndbcluster Plugin Threads](mysql-cluster-ps-tables.html#mysql-cluster-plugin-threads
    "ndbcluster Plugin Threads"), for more information and examples.
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息和示例，请参阅 [ndbcluster 插件线程](mysql-cluster-ps-tables.html#mysql-cluster-plugin-threads
    "ndbcluster 插件线程")。
- en: In NDB 8.0.30 and later, transaction batching memory usage is visible as `memory/ndbcluster/Thd_ndb::batch_mem_root`
    in the Performance Schema [`memory_summary_by_thread_by_event_name`](performance-schema-memory-summary-tables.html
    "29.12.20.10 Memory Summary Tables") and [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table") tables. You can use this information
    to see how much memory is being used by transactions. For additional information,
    see [Transaction Memory Usage](mysql-cluster-ps-tables.html#mysql-cluster-trx-batch-memory
    "Transaction Memory Usage").
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 NDB 8.0.30 及更高版本中，事务批处理内存使用情况可在性能模式 [`memory_summary_by_thread_by_event_name`](performance-schema-memory-summary-tables.html
    "29.12.20.10 内存摘要表") 和 [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 setup_instruments 表") 中以 `memory/ndbcluster/Thd_ndb::batch_mem_root`
    的形式显示。您可以使用这些信息来查看事务使用了多少内存。有关更多信息，请参阅 [事务内存使用](mysql-cluster-ps-tables.html#mysql-cluster-trx-batch-memory
    "事务内存使用")。
- en: '**Configurable blob inline size. ** Beginning with NDB 8.0.30, it is possible
    to set a blob column''s inline size as part of [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") or [`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement"). The maximum inline size supported by NDB Cluster is 29980 bytes.'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可配置的 blob 内联大小。** 从 NDB 8.0.30 开始，可以在 [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE 语句") 或 [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE
    语句") 中设置 blob 列的内联大小。NDB Cluster 支持的最大内联大小为 29980 字节。'
- en: For additional information and examples, see [NDB_COLUMN Options](create-table-ndb-comment-options.html#create-table-ndb-comment-column-options
    "NDB_COLUMN Options"), as well as [String Type Storage Requirements](storage-requirements.html#data-types-storage-reqs-strings
    "String Type Storage Requirements").
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息和示例，请参阅 [NDB_COLUMN 选项](create-table-ndb-comment-options.html#create-table-ndb-comment-column-options
    "NDB_COLUMN 选项")，以及 [字符串类型存储要求](storage-requirements.html#data-types-storage-reqs-strings
    "字符串类型存储要求")。
- en: '**replica_allow_batching enabled by default. ** Replica write batching improves
    NDB Cluster Replication performance greatly, especially when replicating blob-type
    columns ([`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types"), [`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types"), and [`JSON`](json.html "13.5 The JSON Data
    Type")), and so generally should be enabled whenever using replication with NDB
    Cluster. For this reason, beginning with NDB 8.0.30, the [`replica_allow_batching`](mysql-cluster-options-variables.html#sysvar_replica_allow_batching)
    system variable is enabled by default, and setting it to `OFF` raises a warning.'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**replica_allow_batching 默认启用。** 复制写批处理极大地提高了NDB集群复制性能，特别是在复制 blob 类型列（[`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")、[`BLOB`](blob.html "13.3.4 The BLOB and TEXT
    Types") 和 [`JSON`](json.html "13.5 The JSON Data Type")）时，因此通常在使用NDB集群进行复制时应启用。因此，从NDB
    8.0.30开始，默认启用了[`replica_allow_batching`](mysql-cluster-options-variables.html#sysvar_replica_allow_batching)系统变量，并将其设置为`OFF`会引发警告。'
- en: '**Conflict resolution insert operation support. ** Prior to NDB 8.0.30, there
    were only two strategies available for resolving primary key conflicts for update
    and delete operations, implemented as the functions `NDB$MAX()` and `NDB$MAX_DELETE_WIN()`.
    Neither of these has any effect on write operations, other than that a write operation
    with the same primary key as a previous write is always rejected, and accepted
    and applied only if no operation having the same primary key already exists. NDB
    8.0.30 introduces two new conflict resolution functions `[NDB$MAX_INS()](mysql-cluster-replication-conflict-resolution.html#mysql-cluster-replication-ndb-max-ins
    "NDB$MAX_INS()")` and `[NDB$MAX_DEL_WIN_INS()](mysql-cluster-replication-conflict-resolution.html#mysql-cluster-replication-ndb-max-del-win-ins
    "NDB$MAX_DEL_WIN_INS()")` that handle primary key conflicts between insert operations.
    These functions handle conflicting writes as follows:'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**冲突解析插入操作支持。** 在NDB 8.0.30之前，仅有两种可用于解决主键冲突的策略，用作更新和删除操作的函数为 `NDB$MAX()` 和
    `NDB$MAX_DELETE_WIN()`。这两者对写操作没有任何影响，除非具有与先前写入相同主键的写操作总是被拒绝，并且仅在没有具有相同主键的操作存在时才被接受和应用。NDB
    8.0.30引入了两个新的冲突解析函数 `[NDB$MAX_INS()](mysql-cluster-replication-conflict-resolution.html#mysql-cluster-replication-ndb-max-ins
    "NDB$MAX_INS()")` 和 `[NDB$MAX_DEL_WIN_INS()](mysql-cluster-replication-conflict-resolution.html#mysql-cluster-replication-ndb-max-del-win-ins
    "NDB$MAX_DEL_WIN_INS()")`，用于处理插入操作之间的主键冲突。这些函数处理冲突写入如下：'
- en: If there is no conflicting write, apply this one (this is the same as `NDB$MAX()`).
  id: totrans-399
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果没有冲突写入，应用此操作（与 `NDB$MAX()` 相同）。
- en: 'Otherwise, apply “greatest timestamp wins” conflict resolution, as follows:'
  id: totrans-400
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 否则，应用“最大时间戳获胜”冲突解析，如下所示：
- en: If the timestamp for the incoming write is greater than that of the conflicting
    write, apply the incoming operation.
  id: totrans-401
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果传入写入的时间戳大于冲突写入的时间戳，则应用传入操作。
- en: If the timestamp for the incoming write is *not* greater, reject the incoming
    write operation.
  id: totrans-402
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果传入写入的时间戳*不*大，则拒绝传入写入操作。
- en: For conflicting update and delete operations, `NDB$MAX_INS()` behaves as `[NDB$MAX()](mysql-cluster-replication-conflict-resolution.html#mysql-cluster-replication-ndb-max
    "NDB$MAX()")` does, and `NDB$MAX_DEL_WIN_INS()` behaves in the same way as `[NDB$MAX_DELETE_WIN()](mysql-cluster-replication-conflict-resolution.html#mysql-cluster-replication-ndb-max-delete-win
    "NDB$MAX_DELETE_WIN()")`.
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于冲突的更新和删除操作，`NDB$MAX_INS()` 的行为类似于 `[NDB$MAX()](mysql-cluster-replication-conflict-resolution.html#mysql-cluster-replication-ndb-max
    "NDB$MAX()")`，而 `NDB$MAX_DEL_WIN_INS()` 的行为与 `[NDB$MAX_DELETE_WIN()](mysql-cluster-replication-conflict-resolution.html#mysql-cluster-replication-ndb-max-delete-win
    "NDB$MAX_DELETE_WIN()")` 相同。
- en: This enhancement provides support for configuring conflict detection when handling
    conflicting replicated write operations, so that a replicated [`INSERT`](insert.html
    "15.2.7 INSERT Statement") with a higher timestamp column value is applied idempotently,
    while a replicated `INSERT` with a lower timestamp column value is rejected.
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此增强功能提供了在处理冲突的复制写操作时配置冲突检测的支持，因此具有更高时间戳列值的复制[`INSERT`](insert.html "15.2.7 INSERT
    Statement")会被幂等地应用，而具有较低时间戳列值的复制`INSERT`会被拒绝。
- en: As with the other conflict resolution functions, rejected operations can optionally
    be logged in an exceptions table; rejected operations increment a counter (status
    variables [`Ndb_conflict_fn_max`](mysql-cluster-options-variables.html#statvar_Ndb_conflict_fn_max)
    for “greatest timestamp wins” and [`Ndb_conflict_fn_old`](mysql-cluster-options-variables.html#statvar_Ndb_conflict_fn_old)
    for “same timestamp wins”).
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与其他冲突解决函数一样，拒绝的操作可以选择记录在异常表中；拒绝的操作会增加一个计数器（状态变量[`Ndb_conflict_fn_max`](mysql-cluster-options-variables.html#statvar_Ndb_conflict_fn_max)
    用于“最大时间戳获胜”，以及[`Ndb_conflict_fn_old`](mysql-cluster-options-variables.html#statvar_Ndb_conflict_fn_old)
    用于“相同时间戳获胜”）。
- en: For more information, see the descriptions of the new conflict resolution functions,
    and as well as [Section 25.7.12, “NDB Cluster Replication Conflict Resolution”](mysql-cluster-replication-conflict-resolution.html
    "25.7.12 NDB Cluster Replication Conflict Resolution").
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅新冲突解决函数的描述，以及[第 25.7.12 节，“NDB 集群复制冲突解决”](mysql-cluster-replication-conflict-resolution.html
    "25.7.12 NDB 集群复制冲突解决")。
- en: '**Replication applier batch size control. ** Previously, the size of batches
    used when writing to a replica NDB Cluster was controlled by [`--ndb-batch-size`](mysql-cluster-options-variables.html#option_mysqld_ndb-batch-size),
    and the batch size used for writing blob data to the replica was determined by
    [`ndb-blob-write-batch-bytes`](mysql-cluster-options-variables.html#option_mysqld_ndb-blob-write-batch-bytes).
    One problem with this arrangement was that the replica used the global values
    of these variables which meant that changing either of them for the replica also
    affected the value used by all other sessions. In addition, it was not possible
    to set different defaults for these values exclusive to the replica, which should
    preferably have a higher default value than other sessions.'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复制应用程序批处理大小控制。** 以前，写入到副本 NDB 集群时使用的批处理大小由 [`--ndb-batch-size`](mysql-cluster-options-variables.html#option_mysqld_ndb-batch-size)
    控制，而写入 blob 数据到副本时使用的批处理大小由 [`ndb-blob-write-batch-bytes`](mysql-cluster-options-variables.html#option_mysqld_ndb-blob-write-batch-bytes)
    确定。这种安排的一个问题是，副本使用这些变量的全局值，这意味着更改其中一个变量对于副本也会影响所有其他会话使用的值。此外，不可能为这些值设置专门适用于副本的不同默认值，副本的默认值应该比其他会话的默认值更高。'
- en: NDB 8.0.30 adds two new system variables which are specific to the replica applier.
    [`ndb_replica_batch_size`](mysql-cluster-options-variables.html#sysvar_ndb_replica_batch_size)
    now controls the batch size used for the replica applier, and [`ndb_replica_blob_write_batch_bytes`](mysql-cluster-options-variables.html#sysvar_ndb_replica_blob_write_batch_bytes)
    variable now determines the blob write batch size used to perform batch blob writes
    on the replica.
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: NDB 8.0.30 添加了两个新的系统变量，这些变量专门用于复制应用程序。[`ndb_replica_batch_size`](mysql-cluster-options-variables.html#sysvar_ndb_replica_batch_size)
    现在控制用于复制应用程序的批处理大小，而 [`ndb_replica_blob_write_batch_bytes`](mysql-cluster-options-variables.html#sysvar_ndb_replica_blob_write_batch_bytes)
    变量现在确定用于在复制上执行批量 blob 写入的 blob 写入批处理大小。
- en: This change should improve the behavior of MySQL NDB Cluster Replication using
    default settings, and lets the user fine tune NDB replication performance without
    affecting user threads, such as those performing processing of SQL queries.
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此更改应该改善使用默认设置的 MySQL NDB 集群复制的行为，并允许用户微调 NDB 复制性能，而不会影响用户线程，例如执行 SQL 查询处理的线程。
- en: For more information, see the descriptions of the new variables. See also [Section 25.7.5,
    “Preparing the NDB Cluster for Replication”](mysql-cluster-replication-preparation.html
    "25.7.5 Preparing the NDB Cluster for Replication").
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅新变量的描述。另请参阅[第 25.7.5 节，“准备 NDB 集群进行复制”](mysql-cluster-replication-preparation.html
    "25.7.5 准备 NDB 集群进行复制")。
- en: '**Binary Log Transaction Compression. ** NDB 8.0.31 adds support for binary
    logs using compressed transactions with `ZSTD` compression. To enable this feature,
    set the [`ndb_log_transaction_compression`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression)
    system variable introduced in this release to `ON`. The level of compression used
    can be controlled using the [`ndb_log_transaction_compression_level_zstd`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression_level_zstd)
    system variable, which is also added in that release; the default compression
    level is 3.'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二进制日志事务压缩。** NDB 8.0.31增加了对使用`ZSTD`压缩的压缩事务的二进制日志的支持。要启用此功能，请将此版本中引入的[`ndb_log_transaction_compression`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression)系统变量设置为`ON`。使用的压缩级别可以通过[`ndb_log_transaction_compression_level_zstd`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression_level_zstd)系统变量进行控制，该系统变量也在该版本中添加；默认压缩级别为3。'
- en: Although the [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    and [`binlog_transaction_compression_level_zstd`](replication-options-binary-log.html#sysvar_binlog_transaction_compression_level_zstd)
    server system variables have no effect on binary logging of `NDB` tables, starting
    [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") with `--binlog-transaction-compression=ON`
    causes `ndb_log_transaction_compression` to be enabled automatically. You can
    disable it in a MySQL client session using `SET @@global.ndb_log_transaction_compression=OFF`
    after server startup has completed.
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管[`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)和[`binlog_transaction_compression_level_zstd`](replication-options-binary-log.html#sysvar_binlog_transaction_compression_level_zstd)服务器系统变量对`NDB`表的二进制日志记录没有影响，但使用`--binlog-transaction-compression=ON`启动[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")会自动启用`ndb_log_transaction_compression`。在服务器启动完成后，你可以在MySQL客户端会话中使用`SET
    @@global.ndb_log_transaction_compression=OFF`来禁用它。
- en: See the description of [`ndb_log_transaction_compression`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression)
    as well as [Section 7.4.4.5, “Binary Log Transaction Compression”](binary-log-transaction-compression.html
    "7.4.4.5 Binary Log Transaction Compression"), for more information.
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看[`ndb_log_transaction_compression`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression)的描述以及[第7.4.4.5节，“二进制日志事务压缩”](binary-log-transaction-compression.html
    "7.4.4.5 二进制日志事务压缩")，以获取更多信息。
- en: '**NDB Replication: Multithreaded Applier. ** As of NDB 8.0.33, NDB Cluster
    replication supports the MySQL multithreaded applier (MTA) on replica servers
    (and nonzero values of [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)),
    which enables the application of binary log transactions in parallel on the replica
    and thereby increasing throughput. (For more information about the multithreaded
    applier in the MySQL server, see [Section 19.2.3, “Replication Threads”](replication-threads.html
    "19.2.3 Replication Threads").)'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NDB 复制：多线程应用程序。** 从NDB 8.0.33开始，NDB Cluster复制支持副本服务器上的MySQL多线程应用程序（MTA）（以及[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)的非零值），这使得副本可以并行应用二进制日志事务，从而提高吞吐量。（有关MySQL服务器中多线程应用程序的更多信息，请参阅[第19.2.3节，“复制线程”](replication-threads.html
    "19.2.3 复制线程")。）'
- en: Enabling this feature on the replica requires that the source be started with
    [`--ndb-log-transaction-dependency`](mysql-cluster-options-variables.html#option_mysqld_ndb-log-transaction-dependency)
    set to `ON` (this option is also implemented in NDB 8.0.33). It is also necessary
    on the source to set [`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)
    to `WRITESET`. In addition, you must ensure that [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    has a value greater than 1 on the replica, and thus, that the replica uses multiple
    worker threads.
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在副本上启用此功能需要源数据库使用[`--ndb-log-transaction-dependency`](mysql-cluster-options-variables.html#option_mysqld_ndb-log-transaction-dependency)参数设置为`ON`（此选项也在NDB
    8.0.33中实现）。此外，源数据库还需要将[`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)设置为`WRITESET`。另外，你必须确保副本上的[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)的值大于1，从而确保副本使用多个工作线程。
- en: For additional information and requirements, see [Section 25.7.11, “NDB Cluster
    Replication Using the Multithreaded Applier”](mysql-cluster-replication-mta.html
    "25.7.11 NDB Cluster Replication Using the Multithreaded Applier").
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息和要求，请参见[第25.7.11节，“使用多线程应用程序复制的NDB集群复制”](mysql-cluster-replication-mta.html
    "25.7.11 NDB集群复制使用多线程应用程序复制")。
- en: '**Changes in build options. ** NDB 8.0.31 makes the following changes in CMake
    options used for building MySQL Cluster.'
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建选项的更改。** NDB 8.0.31对用于构建MySQL集群的CMake选项进行了以下更改。'
- en: The [`WITH_NDBCLUSTER`](source-configuration-options.html#option_cmake_with_ndbcluster)
    option is deprecated, and [`WITH_PLUGIN_NDBCLUSTER`](source-configuration-options.html#option_cmake_with_plugin_ndbcluster)
    is removed.
  id: totrans-418
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`WITH_NDBCLUSTER`](source-configuration-options.html#option_cmake_with_ndbcluster)选项已被弃用，[`WITH_PLUGIN_NDBCLUSTER`](source-configuration-options.html#option_cmake_with_plugin_ndbcluster)已被移除。'
- en: To build MySQL Cluster from source, use the newly-added [`WITH_NDB`](source-configuration-options.html#option_cmake_with_ndb)
    option.
  id: totrans-419
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要从源代码构建MySQL集群，请使用新添加的[`WITH_NDB`](source-configuration-options.html#option_cmake_with_ndb)选项。
- en: '[`WITH_NDBCLUSTER_STORAGE_ENGINE`](source-configuration-options.html#option_cmake_with_ndbcluster_storage_engine)
    continues to be supported, but is no longer needed for most builds.'
  id: totrans-420
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`WITH_NDBCLUSTER_STORAGE_ENGINE`](source-configuration-options.html#option_cmake_with_ndbcluster_storage_engine)仍然受支持，但对于大多数构建而言不再需要。'
- en: See [CMake Options for Compiling NDB Cluster](source-configuration-options.html#cmake-mysql-cluster-options
    "CMake Options for Compiling NDB Cluster"), for more information.
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[用于编译NDB集群的CMake选项](source-configuration-options.html#cmake-mysql-cluster-options
    "用于编译NDB集群的CMake选项")。
- en: '**File system encryption. ** Transparent Data Encryption (TDE) provides protection
    by encryption of `NDB` data at rest, that is, of all `NDB` table data and log
    files which are persisted to disk. This is intended to protect against recovering
    data after obtaining unauthorized access to NDB Cluster data files such as tablespace
    files or logs.'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件系统加密。** 透明数据加密（TDE）通过加密在静止状态下的`NDB`数据，即所有持久化到磁盘的`NDB`表数据和日志文件。这旨在防止在未经授权访问NDB集群数据文件（如表空间文件或日志）后恢复数据。'
- en: Encryption is implemented transparently by the NDB file system layer ([`NDBFS`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-ndbfs.html))
    on the data nodes; data is encrypted and decrypted as it is read from and written
    to the file, and `NDBFS` internal client blocks operate on files as normal.
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 加密由数据节点上的NDB文件系统层（[`NDBFS`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-ndbfs.html)）透明实现；数据在读取和写入文件时进行加密和解密，`NDBFS`内部客户端块像正常操作文件一样。
- en: '`NDBFS` can transparently encrypt a file directly from a user provided password,
    but decoupling the encryption and decryption of individual files from the user
    provided password can be advantageous for reasons of efficiency, usability, security,
    and flexibility. See [Section 25.6.14.2, “NDB File System Encryption Implementation”](mysql-cluster-tde-implementation.html
    "25.6.14.2 NDB File System Encryption Implementation").'
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`NDBFS`可以从用户提供的密码直接透明加密文件，但将单个文件的加密和解密与用户提供的密码分离可能有助于提高效率、可用性、安全性和灵活性。请参见[第25.6.14.2节，“NDB文件系统加密实现”](mysql-cluster-tde-implementation.html
    "25.6.14.2 NDB文件系统加密实现")。'
- en: TDE uses two types of keys. A secret key is used to encrypt the actual data
    and log files stored on disk (including LCP, redo, undo, and tablespace files).
    A master key is then used to encrypt the secret key.
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: TDE使用两种类型的密钥。一个秘密密钥用于加密存储在磁盘上的实际数据和日志文件（包括LCP、重做、撤销和表空间文件）。然后使用主密钥加密秘密密钥。
- en: The [`EncryptedFileSystem`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-encryptedfilesystem)
    data node configuration parameter, available beginning with NDB 8.0.29, when set
    to `1`, enforces encryption on files storing table data. This includes LCP data
    files, redo log files, tablespace files, and undo log files.
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据节点配置参数[`EncryptedFileSystem`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-encryptedfilesystem)，从NDB
    8.0.29开始提供，设置为`1`时，强制对存储表数据的文件进行加密。这包括LCP数据文件、重做日志文件、表空间文件和撤销日志文件。
- en: It is also necessary to provide a password to each data node when starting or
    restarting it, using one of the options [`--filesystem-password`](mysql-cluster-programs-ndbd.html#option_ndbd_filesystem-password)
    or [`--filesystem-password-from-stdin`](mysql-cluster-programs-ndbd.html#option_ndbd_filesystem-password-from-stdin).
    See [Section 25.6.14.1, “NDB File System Encryption Setup and Usage”](mysql-cluster-tde-setup.html
    "25.6.14.1 NDB File System Encryption Setup and Usage"). This password uses the
    same format and is subject to the same constraints as the password used for an
    encrypted `NDB` backup (see the description of the [**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — Restore an NDB Cluster Backup") [`--backup-password`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_backup-password)
    option for details).
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在启动或重新启动每个数据节点时，还需要为其提供密码，使用[`--filesystem-password`](mysql-cluster-programs-ndbd.html#option_ndbd_filesystem-password)或[`--filesystem-password-from-stdin`](mysql-cluster-programs-ndbd.html#option_ndbd_filesystem-password-from-stdin)选项之一。请参见[第25.6.14.1节，“NDB文件系统加密设置和使用”](mysql-cluster-tde-setup.html
    "25.6.14.1 NDB文件系统加密设置和使用")。此密码使用相同格式，并受到与用于加密`NDB`备份的密码相同的约束（有关加密`NDB`备份的详细信息，请参见[**ndb_restore**](mysql-cluster-programs-ndb-restore.html
    "25.5.23 ndb_restore — 恢复NDB集群备份") [`--backup-password`](mysql-cluster-programs-ndb-restore.html#option_ndb_restore_backup-password)选项的描述）。
- en: Only tables using the `NDB` storage engine are subject to encryption by this
    feature; see [Section 25.6.14.3, “NDB File System Encryption Limitations”](mysql-cluster-tde-limitations.html
    "25.6.14.3 NDB File System Encryption Limitations"). Other tables, such as those
    used for `NDB` schema distribution, replication, and binary logging, typically
    use [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine");
    see [Section 17.13, “InnoDB Data-at-Rest Encryption”](innodb-data-encryption.html
    "17.13 InnoDB Data-at-Rest Encryption"). For information about encryption of binary
    log files, see [Section 19.3.2, “Encrypting Binary Log Files and Relay Log Files”](replication-binlog-encryption.html
    "19.3.2 Encrypting Binary Log Files and Relay Log Files").
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只有使用`NDB`存储引擎的表才会受到此功能的加密影响；参见[第25.6.14.3节，“NDB文件系统加密限制”](mysql-cluster-tde-limitations.html
    "25.6.14.3 NDB文件系统加密限制")。其他表，如用于`NDB`模式分发、复制和二进制日志的表，通常使用[`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB存储引擎")；参见[第17.13节，“InnoDB数据静止时加密”](innodb-data-encryption.html "17.13 InnoDB数据静止时加密")。有关二进制日志文件加密的信息，请参见[第19.3.2节，“加密二进制日志文件和中继日志文件”](replication-binlog-encryption.html
    "19.3.2 加密二进制日志文件和中继日志文件")。
- en: Files generated or used by `NDB` processes, such as operating system logs, crash
    logs, and core dumps, are not encrypted. Files used by `NDB` but not containing
    any user table data are also not encrypted; these include LCP control files, schema
    files, and system files (see [NDB Cluster Data Node File System](/doc/ndb-internals/en/ndb-internals-ndbd-filesystem.html)).
    The management server configuration cache is also not encrypted.
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由`NDB`进程生成或使用的文件，如操作系统日志、崩溃日志和核心转储，不会被加密。由`NDB`使用但不包含任何用户表数据的文件也不会被加密；这些文件包括LCP控制文件、模式文件和系统文件（参见[NDB集群数据节点文件系统](/doc/ndb-internals/en/ndb-internals-ndbd-filesystem.html)）。管理服务器配置缓存也不会被加密。
- en: In addition, NDB 8.0.31 adds a new utility [**ndb_secretsfile_reader**](mysql-cluster-programs-ndb-secretsfile-reader.html
    "25.5.24 ndb_secretsfile_reader — Obtain Key Information from an Encrypted NDB
    Data File") for extracting key information from a secrets file (`S0.sysfile`).
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，NDB 8.0.31添加了一个新的实用程序[**ndb_secretsfile_reader**](mysql-cluster-programs-ndb-secretsfile-reader.html
    "25.5.24 ndb_secretsfile_reader — 从加密的NDB数据文件中获取密钥信息")，用于从秘密文件（`S0.sysfile`）中提取密钥信息。
- en: This enhancement builds on work done in NDB 8.0.22 to implement encrypted `NDB`
    backups. For more information about encrypted backups, see the description of
    the [`RequireEncryptedBackup`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-requireencryptedbackup)
    configuration parameter, as well as [Section 25.6.8.2, “Using The NDB Cluster
    Management Client to Create a Backup”](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 Using The NDB Cluster Management Client to Create a Backup").
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此增强功能建立在NDB 8.0.22中实现加密`NDB`备份的工作基础之上。有关加密备份的更多信息，请参见[`RequireEncryptedBackup`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-requireencryptedbackup)配置参数的描述，以及[第25.6.8.2节，“使用NDB集群管理客户端创建备份”](mysql-cluster-backup-using-management-client.html
    "25.6.8.2 使用NDB集群管理客户端创建备份")。
- en: '**Removal of unneeded program options. ** A number of “junk” command-line options
    for NDB utility and other programs which had never been implemented were removed
    in NDB Cluster 8.0.31\. The options and the programs from which they have been
    dropped are listed here:'
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移除不必要的程序选项。** 在 NDB Cluster 8.0.31 版本中，删除了一些“垃圾”命令行选项，这些选项从未被实现过。以下列出了被删除选项和程序：'
- en: '`--ndb-optimized-node-selection`:'
  id: totrans-433
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ndb-optimized-node-selection`:'
- en: '[**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — The NDB Cluster
    Data Node Daemon"), [**ndbmtd**](mysql-cluster-programs-ndbmtd.html "25.5.3 ndbmtd
    — The NDB Cluster Data Node Daemon (Multi-Threaded)"), [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html
    "25.5.5 ndb_mgm — The NDB Cluster Management Client"), [**ndb_delete_all**](mysql-cluster-programs-ndb-delete-all.html
    "25.5.8 ndb_delete_all — Delete All Rows from an NDB Table"), [**ndb_desc**](mysql-cluster-programs-ndb-desc.html
    "25.5.9 ndb_desc — Describe NDB Tables"), [**ndb_drop_index**](mysql-cluster-programs-ndb-drop-index.html
    "25.5.10 ndb_drop_index — Drop Index from an NDB Table"), [**ndb_drop_table**](mysql-cluster-programs-ndb-drop-table.html
    "25.5.11 ndb_drop_table — Drop an NDB Table"), **ndb_show_table**, [**ndb_blob_tool**](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — Check and Repair BLOB and TEXT columns of NDB Cluster
    Tables"), [**ndb_config**](mysql-cluster-programs-ndb-config.html "25.5.7 ndb_config
    — Extract NDB Cluster Configuration Information"), [**ndb_index_stat**](mysql-cluster-programs-ndb-index-stat.html
    "25.5.14 ndb_index_stat — NDB Index Statistics Utility"), [**ndb_move_data**](mysql-cluster-programs-ndb-move-data.html
    "25.5.15 ndb_move_data — NDB Data Copy Utility"), [**ndbinfo_select_all**](mysql-cluster-programs-ndbinfo-select-all.html
    "25.5.2 ndbinfo_select_all — Select From ndbinfo Tables"), [**ndb_select_count**](mysql-cluster-programs-ndb-select-count.html
    "25.5.26 ndb_select_count — Print Row Counts for NDB Tables")'
  id: totrans-434
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — NDB Cluster 数据节点守护程序"),
    [**ndbmtd**](mysql-cluster-programs-ndbmtd.html "25.5.3 ndbmtd — NDB Cluster 数据节点守护程序（多线程）"),
    [**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — NDB Cluster
    管理客户端"), [**ndb_delete_all**](mysql-cluster-programs-ndb-delete-all.html "25.5.8 ndb_delete_all
    — 从 NDB 表中删除所有行"), [**ndb_desc**](mysql-cluster-programs-ndb-desc.html "25.5.9 ndb_desc
    — 描述 NDB 表"), [**ndb_drop_index**](mysql-cluster-programs-ndb-drop-index.html
    "25.5.10 ndb_drop_index — 从 NDB 表中删除索引"), [**ndb_drop_table**](mysql-cluster-programs-ndb-drop-table.html
    "25.5.11 ndb_drop_table — 删除 NDB 表"), **ndb_show_table**, [**ndb_blob_tool**](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — 检查和修复 NDB Cluster 表的 BLOB 和 TEXT 列"), [**ndb_config**](mysql-cluster-programs-ndb-config.html
    "25.5.7 ndb_config — 提取 NDB Cluster 配置信息"), [**ndb_index_stat**](mysql-cluster-programs-ndb-index-stat.html
    "25.5.14 ndb_index_stat — NDB 索引统计工具"), [**ndb_move_data**](mysql-cluster-programs-ndb-move-data.html
    "25.5.15 ndb_move_data — NDB 数据复制工具"), [**ndbinfo_select_all**](mysql-cluster-programs-ndbinfo-select-all.html
    "25.5.2 ndbinfo_select_all — 从 ndbinfo 表中选择"), [**ndb_select_count**](mysql-cluster-programs-ndb-select-count.html
    "25.5.26 ndb_select_count — 打印 NDB 表的行数")'
- en: '`--character-sets-dir`:'
  id: totrans-435
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--character-sets-dir`:'
- en: '[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — The NDB
    Cluster Management Client"), [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon"), [**ndb_config**](mysql-cluster-programs-ndb-config.html
    "25.5.7 ndb_config — Extract NDB Cluster Configuration Information"), [**ndb_delete_all**](mysql-cluster-programs-ndb-delete-all.html
    "25.5.8 ndb_delete_all — Delete All Rows from an NDB Table"), [**ndb_desc**](mysql-cluster-programs-ndb-desc.html
    "25.5.9 ndb_desc — Describe NDB Tables"), [**ndb_drop_index**](mysql-cluster-programs-ndb-drop-index.html
    "25.5.10 ndb_drop_index — Drop Index from an NDB Table"), [**ndb_drop_table**](mysql-cluster-programs-ndb-drop-table.html
    "25.5.11 ndb_drop_table — Drop an NDB Table"), **ndb_show_table**, [**ndb_blob_tool**](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — Check and Repair BLOB and TEXT columns of NDB Cluster
    Tables"), [**ndb_config**](mysql-cluster-programs-ndb-config.html "25.5.7 ndb_config
    — Extract NDB Cluster Configuration Information"), [**ndb_index_stat**](mysql-cluster-programs-ndb-index-stat.html
    "25.5.14 ndb_index_stat — NDB Index Statistics Utility"), [**ndb_move_data**](mysql-cluster-programs-ndb-move-data.html
    "25.5.15 ndb_move_data — NDB Data Copy Utility"), [**ndbinfo_select_all**](mysql-cluster-programs-ndbinfo-select-all.html
    "25.5.2 ndbinfo_select_all — Select From ndbinfo Tables"), [**ndb_select_count**](mysql-cluster-programs-ndb-select-count.html
    "25.5.26 ndb_select_count — Print Row Counts for NDB Tables"), [**ndb_waiter**](mysql-cluster-programs-ndb-waiter.html
    "25.5.30 ndb_waiter — Wait for NDB Cluster to Reach a Given Status")'
  id: totrans-436
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — NDB集群管理客户端"),
    [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd — NDB集群管理服务器守护进程"),
    [**ndb_config**](mysql-cluster-programs-ndb-config.html "25.5.7 ndb_config — 提取NDB集群配置信息"),
    [**ndb_delete_all**](mysql-cluster-programs-ndb-delete-all.html "25.5.8 ndb_delete_all
    — 从NDB表中删除所有行"), [**ndb_desc**](mysql-cluster-programs-ndb-desc.html "25.5.9 ndb_desc
    — 描述NDB表"), [**ndb_drop_index**](mysql-cluster-programs-ndb-drop-index.html "25.5.10 ndb_drop_index
    — 从NDB表中删除索引"), [**ndb_drop_table**](mysql-cluster-programs-ndb-drop-table.html
    "25.5.11 ndb_drop_table — 删除NDB表"), **ndb_show_table**, [**ndb_blob_tool**](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — 检查和修复NDB集群表的BLOB和TEXT列"), [**ndb_config**](mysql-cluster-programs-ndb-config.html
    "25.5.7 ndb_config — 提取NDB集群配置信息"), [**ndb_index_stat**](mysql-cluster-programs-ndb-index-stat.html
    "25.5.14 ndb_index_stat — NDB索引统计实用程序"), [**ndb_move_data**](mysql-cluster-programs-ndb-move-data.html
    "25.5.15 ndb_move_data — NDB数据复制实用程序"), [**ndbinfo_select_all**](mysql-cluster-programs-ndbinfo-select-all.html
    "25.5.2 ndbinfo_select_all — 从ndbinfo表中选择"), [**ndb_select_count**](mysql-cluster-programs-ndb-select-count.html
    "25.5.26 ndb_select_count — 打印NDB表的行数"), [**ndb_waiter**](mysql-cluster-programs-ndb-waiter.html
    "25.5.30 ndb_waiter — 等待NDB集群达到给定状态")'
- en: '`--core-file`:'
  id: totrans-437
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--core-file`:'
- en: '[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — The NDB
    Cluster Management Client"), [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon"), [**ndb_config**](mysql-cluster-programs-ndb-config.html
    "25.5.7 ndb_config — Extract NDB Cluster Configuration Information"), [**ndb_delete_all**](mysql-cluster-programs-ndb-delete-all.html
    "25.5.8 ndb_delete_all — Delete All Rows from an NDB Table"), [**ndb_desc**](mysql-cluster-programs-ndb-desc.html
    "25.5.9 ndb_desc — Describe NDB Tables"), [**ndb_drop_index**](mysql-cluster-programs-ndb-drop-index.html
    "25.5.10 ndb_drop_index — Drop Index from an NDB Table"), [**ndb_drop_table**](mysql-cluster-programs-ndb-drop-table.html
    "25.5.11 ndb_drop_table — Drop an NDB Table"), **ndb_show_table**, [**ndb_blob_tool**](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — Check and Repair BLOB and TEXT columns of NDB Cluster
    Tables"), [**ndb_config**](mysql-cluster-programs-ndb-config.html "25.5.7 ndb_config
    — Extract NDB Cluster Configuration Information"), [**ndb_index_stat**](mysql-cluster-programs-ndb-index-stat.html
    "25.5.14 ndb_index_stat — NDB Index Statistics Utility"), [**ndb_move_data**](mysql-cluster-programs-ndb-move-data.html
    "25.5.15 ndb_move_data — NDB Data Copy Utility"), [**ndbinfo_select_all**](mysql-cluster-programs-ndbinfo-select-all.html
    "25.5.2 ndbinfo_select_all — Select From ndbinfo Tables"), [**ndb_select_count**](mysql-cluster-programs-ndb-select-count.html
    "25.5.26 ndb_select_count — Print Row Counts for NDB Tables"), [**ndb_waiter**](mysql-cluster-programs-ndb-waiter.html
    "25.5.30 ndb_waiter — Wait for NDB Cluster to Reach a Given Status")'
  id: totrans-438
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**ndb_mgm**](mysql-cluster-programs-ndb-mgm.html "25.5.5 ndb_mgm — NDB 集群管理客户端"),
    [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd — NDB 集群管理服务器守护进程"),
    [**ndb_config**](mysql-cluster-programs-ndb-config.html "25.5.7 ndb_config — 提取
    NDB 集群配置信息"), [**ndb_delete_all**](mysql-cluster-programs-ndb-delete-all.html
    "25.5.8 ndb_delete_all — 从 NDB 表中删除所有行"), [**ndb_desc**](mysql-cluster-programs-ndb-desc.html
    "25.5.9 ndb_desc — 描述 NDB 表"), [**ndb_drop_index**](mysql-cluster-programs-ndb-drop-index.html
    "25.5.10 ndb_drop_index — 从 NDB 表中删除索引"), [**ndb_drop_table**](mysql-cluster-programs-ndb-drop-table.html
    "25.5.11 ndb_drop_table — 删除 NDB 表"), **ndb_show_table**, [**ndb_blob_tool**](mysql-cluster-programs-ndb-blob-tool.html
    "25.5.6 ndb_blob_tool — 检查和修复 NDB 集群表的 BLOB 和 TEXT 列"), [**ndb_config**](mysql-cluster-programs-ndb-config.html
    "25.5.7 ndb_config — 提取 NDB 集群配置信息"), [**ndb_index_stat**](mysql-cluster-programs-ndb-index-stat.html
    "25.5.14 ndb_index_stat — NDB 索引统计实用程序"), [**ndb_move_data**](mysql-cluster-programs-ndb-move-data.html
    "25.5.15 ndb_move_data — NDB 数据复制实用程序"), [**ndbinfo_select_all**](mysql-cluster-programs-ndbinfo-select-all.html
    "25.5.2 ndbinfo_select_all — 从 ndbinfo 表中选择"), [**ndb_select_count**](mysql-cluster-programs-ndb-select-count.html
    "25.5.26 ndb_select_count — 打印 NDB 表的行计数"), [**ndb_waiter**](mysql-cluster-programs-ndb-waiter.html
    "25.5.30 ndb_waiter — 等待 NDB 集群达到给定状态")'
- en: '`--connect-retries` and `--connect-retry-delay`:'
  id: totrans-439
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--connect-retries` 和 `--connect-retry-delay`：'
- en: '[**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd — The
    NDB Cluster Management Server Daemon")'
  id: totrans-440
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd — NDB
    集群管理服务器守护进程")'
- en: '`--ndb-nodeid`:'
  id: totrans-441
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ndb-nodeid`：'
- en: '[**ndb_config**](mysql-cluster-programs-ndb-config.html "25.5.7 ndb_config
    — Extract NDB Cluster Configuration Information")'
  id: totrans-442
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**ndb_config**](mysql-cluster-programs-ndb-config.html "25.5.7 ndb_config
    — 提取 NDB 集群配置信息")'
- en: For more information, see the relevant program and option descriptions in [Section 25.5,
    “NDB Cluster Programs”](mysql-cluster-programs.html "25.5 NDB Cluster Programs").
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第 25.5 节，“NDB 集群程序”](mysql-cluster-programs.html "25.5 NDB Cluster
    Programs")中相关程序和选项的描述。
- en: '**Reading Configuration Cache Files. ** Beginning with NDB 8.0.32, it is possible
    to read binary configuration cache files created by [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon") using the [**ndb_config**](mysql-cluster-programs-ndb-config.html
    "25.5.7 ndb_config — Extract NDB Cluster Configuration Information") option [`--config-binary-file`](mysql-cluster-programs-ndb-config.html#option_ndb_config_config-binary-file)
    introduced in that release. This can simplify the process of determining whether
    the settings in a given configuration file have been applied to the cluster, or
    of recovery of settings from the binary cache after the `config.ini` file has
    somehow been damaged or lost.'
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**读取配置缓存文件。** 从 NDB 8.0.32 开始，可以使用该版本引入的 [`--config-binary-file`](mysql-cluster-programs-ndb-config.html#option_ndb_config_config-binary-file)
    选项，通过[**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html "25.5.4 ndb_mgmd — NDB
    集群管理服务器守护进程")创建的二进制配置缓存文件。这可以简化确定给定配置文件中的设置是否已应用于集群的过程，或在 `config.ini` 文件在某种方式受损或丢失后，从二进制缓存中恢复设置。'
- en: For more information and examples, see the description of this option in [Section 25.5.7,
    “ndb_config — Extract NDB Cluster Configuration Information”](mysql-cluster-programs-ndb-config.html
    "25.5.7 ndb_config — Extract NDB Cluster Configuration Information").
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息和示例，请参阅[第 25.5.7 节，“ndb_config — 提取 NDB 集群配置信息”](mysql-cluster-programs-ndb-config.html
    "25.5.7 ndb_config — 提取 NDB 集群配置信息")中对此选项的描述。
- en: '**ndbinfo transporter_details table. ** This [`ndbinfo`](mysql-cluster-ndbinfo.html
    "25.6.16 ndbinfo: The NDB Cluster Information Database") table provides information
    about individual transporters used in an NDB cluster. Added in NDB 8.0.37, it
    is otherwise similar to the `ndbinfo` [`transporters`](mysql-cluster-ndbinfo-transporters.html
    "25.6.16.65 The ndbinfo transporters Table") table.'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ndbinfo transporter_details 表。** 这个[`ndbinfo`](mysql-cluster-ndbinfo.html
    "25.6.16 ndbinfo: NDB 集群信息数据库")表提供了关于 NDB 集群中使用的各个传输器的信息。在 NDB 8.0.37 中添加，与 `ndbinfo`
    [`transporters`](mysql-cluster-ndbinfo-transporters.html "25.6.16.65 ndbinfo transporters
    表")表类似。'
- en: See [Section 25.6.16.64, “The ndbinfo transporter_details Table”](mysql-cluster-ndbinfo-transporter-details.html
    "25.6.16.64 The ndbinfo transporter_details Table"), for more information.
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[第 25.6.16.64 节，“ndbinfo transporter_details 表”](mysql-cluster-ndbinfo-transporter-details.html
    "25.6.16.64 ndbinfo transporter_details 表")。
- en: MySQL Cluster Manager provides support for NDB Cluster 8.0\. MySQL Cluster Manager
    has an advanced command-line interface that can simplify many complex NDB Cluster
    management tasks. See [MySQL Cluster Manager 8.0.36 User Manual](/doc/mysql-cluster-manager/8.0/en/),
    for more information.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL Cluster Manager 支持 NDB 集群 8.0。MySQL Cluster Manager 具有先进的命令行界面，可以简化许多复杂的
    NDB 集群管理任务。有关更多信息，请参阅[MySQL Cluster Manager 8.0.36 用户手册](/doc/mysql-cluster-manager/8.0/en/)。
