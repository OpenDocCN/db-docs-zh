- en: 11.7 Comments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11.7 注释
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/comments.html](https://dev.mysql.com/doc/refman/8.0/en/comments.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/comments.html](https://dev.mysql.com/doc/refman/8.0/en/comments.html)
- en: 'MySQL Server supports three comment styles:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 服务器支持三种注释样式：
- en: From a `#` character to the end of the line.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`#`字符到行尾。
- en: From a `-- ` sequence to the end of the line. In MySQL, the `-- ` (double-dash)
    comment style requires the second dash to be followed by at least one whitespace
    or control character (such as a space, tab, newline, and so on). This syntax differs
    slightly from standard SQL comment syntax, as discussed in [Section 1.6.2.4, “'--'
    as the Start of a Comment”](ansi-diff-comments.html "1.6.2.4 '--' as the Start
    of a Comment").
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`-- `序列到行尾。在 MySQL 中，`-- `（双破折号）注释样式要求第二个破折号后至少跟随一个空格或控制字符（如空格、制表符、换行符等）。这种语法与标准
    SQL 注释语法略有不同，如[1.6.2.4节，“'--'作为注释的开始”](ansi-diff-comments.html "1.6.2.4 '--'作为注释的开始")中所讨论的。
- en: From a `/*` sequence to the following `*/` sequence, as in the C programming
    language. This syntax enables a comment to extend over multiple lines because
    the beginning and closing sequences need not be on the same line.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`/*`序列到后续的`*/`序列，就像在 C 编程语言中一样。这种语法使得注释可以跨越多行，因为开始和结束序列不需要在同一行上。
- en: 'The following example demonstrates all three comment styles:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了所有三种注释样式：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Nested comments are not supported, and are deprecated; expect them to be removed
    in a future MySQL release. (Under some conditions, nested comments might be permitted,
    but usually are not, and users should avoid them.)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套注释不受支持，已被弃用；预计在未来的 MySQL 版本中将被移除。（在某些情况下，可能允许嵌套注释，但通常不建议使用。）
- en: 'MySQL Server supports certain variants of C-style comments. These enable you
    to write code that includes MySQL extensions, but is still portable, by using
    comments of the following form:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 服务器支持某些 C 风格注释的变体。这使您可以编写包含 MySQL 扩展的代码，但仍然是可移植的，通过使用以下形式的注释：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In this case, MySQL Server parses and executes the code within the comment
    as it would any other SQL statement, but other SQL servers should ignore the extensions.
    For example, MySQL Server recognizes the `STRAIGHT_JOIN` keyword in the following
    statement, but other servers should not:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，MySQL 服务器解析并执行注释中的代码，就像执行任何其他 SQL 语句一样，但其他 SQL 服务器应忽略这些扩展。例如，MySQL 服务器识别以下语句中的`STRAIGHT_JOIN`关键字，但其他服务器不应该：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you add a version number after the `!` character, the syntax within the
    comment is executed only if the MySQL version is greater than or equal to the
    specified version number. The `KEY_BLOCK_SIZE` keyword in the following comment
    is executed only by servers from MySQL 5.1.10 or higher:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在`!`字符后添加版本号，则仅当 MySQL 版本大于或等于指定版本号时才执行注释内的语法。以下注释中的`KEY_BLOCK_SIZE`关键字仅由
    MySQL 5.1.10 或更高版本的服务器执行：
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The version number uses the format *`Mmmrr`*, where *`M`* is a major version,
    *`mm`* is a two-digit minor version, and *`rr`* is a two-digit release number.
    For example: In a statement to be run only by a MySQL server version 8.0.31 or
    later, use `80031` in the comment.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 版本号使用格式*`Mmmrr`*，其中*`M`*是主要版本，*`mm`*是两位数的次要版本，*`rr`*是两位数的发布号。例如：在仅由 MySQL 服务器版本
    8.0.31 或更高版本运行的语句中，使用`80031`在注释中。
- en: The version number should be followed by at least one whitespace character (or
    the end of the comment). Beginning with MySQL 8.0.34, if this condition is not
    met, the statement triggers a warning ; you should expect this requirement to
    become strictly enforced in a future version of MySQL.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 版本号后应跟至少一个空白字符（或注释的结尾）。从 MySQL 8.0.34 开始，如果不满足此条件，该语句将触发警告；预计这一要求将在未来的 MySQL
    版本中得到严格执行。
- en: The comment syntax just described applies to how the [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") server parses SQL statements. The [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") client program also performs some
    parsing of statements before sending them to the server. (It does this to determine
    statement boundaries within a multiple-statement input line.) For information
    about differences between the server and [**mysql**](mysql.html "6.5.1 mysql —
    The MySQL Command-Line Client") client parsers, see [Section 6.5.1.6, “mysql Client
    Tips”](mysql-tips.html "6.5.1.6 mysql Client Tips").
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 刚才描述的注释语法适用于[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")服务器解析SQL语句的方式。[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端程序在将语句发送到服务器之前也会对一些语句进行解析。（它这样做是为了确定多语句输入行中的语句边界。）有关服务器和[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端解析器之间的差异的信息，请参见[Section 6.5.1.6,
    “mysql Client Tips”](mysql-tips.html "6.5.1.6 mysql Client Tips")。
- en: Comments in `/*!12345 ... */` format are not stored on the server. If this format
    is used to comment stored programs, the comments are not retained in the program
    body.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以`/*!12345 ... */`格式的注释不会存储在服务器上。如果使用此格式对存储的程序进行注释，这些注释不会保留在程序主体中。
- en: 'Another variant of C-style comment syntax is used to specify optimizer hints.
    Hint comments include a `+` character following the `/*` comment opening sequence.
    Example:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种C风格注释语法的变体用于指定优化器提示。提示注释包括在`/*`注释开头序列后跟一个`+`字符。示例：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For more information, see [Section 10.9.3, “Optimizer Hints”](optimizer-hints.html
    "10.9.3 Optimizer Hints").
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参见[Section 10.9.3, “Optimizer Hints”](optimizer-hints.html "10.9.3 Optimizer
    Hints")。
- en: The use of short-form [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") commands such as `\C` within multiple-line `/* ... */` comments is not
    supported. Short-form commands do work within single-line `/*! ... */` version
    comments, as do `/*+ ... */` optimizer-hint comments, which are stored in object
    definitions. If there is a concern that optimizer-hint comments may be stored
    in object definitions so that dump files when reloaded with `mysql` would result
    in execution of such commands, either invoke [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") with the [`--binary-mode`](mysql-command-options.html#option_mysql_binary-mode)
    option or use a reload client other than [**mysql**](mysql.html "6.5.1 mysql —
    The MySQL Command-Line Client").
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在多行`/* ... */`注释中使用诸如`\C`之类的[**mysql**](mysql.html "6.5.1 mysql — The MySQL
    Command-Line Client")短格式命令是不受支持的。短格式命令可以在单行`/*! ... */`版本注释中工作，`/*+ ... */`优化器提示注释也可以工作，这些注释存储在对象定义中。如果担心优化器提示注释可能存储在对象定义中，以至于重新加载时使用`mysql`的转储文件会导致执行此类命令，要么使用[`--binary-mode`](mysql-command-options.html#option_mysql_binary-mode)选项调用[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")，要么使用除[**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client")之外的重新加载客户端。
