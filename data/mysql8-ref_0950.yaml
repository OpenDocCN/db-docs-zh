- en: 15.2.11 Parenthesized Query Expressions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.2.11 带括号的查询表达式
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/parenthesized-query-expressions.html](https://dev.mysql.com/doc/refman/8.0/en/parenthesized-query-expressions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/parenthesized-query-expressions.html](https://dev.mysql.com/doc/refman/8.0/en/parenthesized-query-expressions.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'MySQL 8.0.22 and higher supports parenthesized query expressions according
    to the preceding syntax. At its simplest, a parenthesized query expression contains
    a single [`SELECT`](select.html "15.2.13 SELECT Statement") or other statement
    returning a result set and no following optional clauses:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8.0.22 及更高版本支持根据前述语法的带括号的查询表达式。在其最简单形式下，带括号的查询表达式包含一个返回结果集的单个[`SELECT`](select.html
    "15.2.13 SELECT Statement")或其他语句，没有后续的可选子句：
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: (Support for the [`TABLE`](table.html "15.2.16 TABLE Statement") and [`VALUES`](values.html
    "15.2.19 VALUES Statement") statements is available beginning with MySQL 8.0.19.)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: (支持从 MySQL 8.0.19 开始提供的[`TABLE`](table.html "15.2.16 TABLE Statement")和[`VALUES`](values.html
    "15.2.19 VALUES Statement")语句。)
- en: 'A parenthesized query expression can also contain queries linked by one or
    more set operations such as [`UNION`](union.html "15.2.18 UNION Clause"), and
    end with any or all of the optional clauses:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一个带括号的查询表达式也可以包含通过一个或多个集合操作连接的查询，例如[`UNION`](union.html "15.2.18 UNION Clause")，并以任意或所有可选子句结束：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In addition to `UNION`, the `INTERSECT` and `EXCEPT` set operators are available
    beginning with MySQL 8.0.31. `INTERSECT` acts before `UNION` and `EXCEPT`, so
    that the following two statements are equivalent:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`UNION`之外，`INTERSECT`和`EXCEPT`集合操作符从 MySQL 8.0.31 开始提供。`INTERSECT`在`UNION`和`EXCEPT`之前起作用，因此以下两个语句是等效的：
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Parenthesized query expressions are also used as query expressions, so a query
    expression, usually composed of query blocks, may also consist of parenthesized
    query expressions:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 带括号的查询表达式也用作查询表达式，因此查询表达式通常由查询块组成，也可以由带括号的查询表达式组成：
- en: '[PRE4]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Query blocks may have trailing `ORDER BY` and `LIMIT` clauses, which are applied
    before the outer set operation, `ORDER BY`, and `LIMIT`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 查询块可以有尾随的`ORDER BY`和`LIMIT`子句，在外部集合操作、`ORDER BY`和`LIMIT`之前应用。
- en: 'You cannot have a query block with a trailing `ORDER BY` or `LIMIT` without
    wrapping it in parentheses but parentheses may be used for enforcement in various
    ways:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 不能有带有尾随`ORDER BY`或`LIMIT`的查询块，而不将其包装在括号中，但可以以各种方式使用括号进行强制执行：
- en: 'To enforce `LIMIT` on each query block:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在每个查询块上强制执行`LIMIT`：
- en: '[PRE5]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To enforce `LIMIT` on both query blocks and the entire query expression:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在查询块和整个查询表达式上强制执行`LIMIT`：
- en: '[PRE6]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To enforce `LIMIT` on the entire query expression (with no parentheses):'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在整个查询表达式上强制执行`LIMIT`（不带括号）：
- en: '[PRE7]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Hybrid enforcement: `LIMIT` on the first query block and on the entire query
    expression:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合强制：在第一个查询块和整个查询表达式上强制执行`LIMIT`：
- en: '[PRE8]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The syntax described in this section is subject to certain restrictions:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中描述的语法受到一定的限制：
- en: A trailing `INTO` clause for a query expression is not permitted if there is
    another `INTO` clause inside parentheses.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果括号内有另一个`INTO`子句，则不允许为查询表达式添加尾随的`INTO`子句。
- en: Prior to MySQL 8.0.31, when `ORDER BY` or `LIMIT` occurred within a parenthesized
    query expression and was also applied in the outer query, the result was undefined.
    This is not an issue in MySQL 8.0.31 and later, where this is handled in accordance
    with the SQL standard.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.31 之前，当`ORDER BY`或`LIMIT`出现在带括号的查询表达式中并且也应用于外部查询时，结果是未定义的。在 MySQL
    8.0.31 及更高版本中，这将按照 SQL 标准处理。
- en: Prior to MySQL 8.0.31, parenthesized query expressions did not permit multiple
    levels of `ORDER BY` or `LIMIT` operations, and statements containing these were
    rejected with [`ER_NOT_SUPPORTED_YET`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_not_supported_yet).
    In MySQL 8.0.31 and later, this restriction is lifted, and nested parenthesized
    query expressions are permitted. The maximum level of nesting supported is 63;
    this is after any simplifications or merges have been performed by the parser.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.31 之前，带括号的查询表达式不允许多层次的`ORDER BY`或`LIMIT`操作，并且包含这些操作的语句将被拒绝，并显示[`ER_NOT_SUPPORTED_YET`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_not_supported_yet)。在
    MySQL 8.0.31 及更高版本中，此限制已被取消，并允许嵌套的带括号的查询表达式。支持的最大嵌套级别为 63；这是在解析器执行任何简化或合并之后。
- en: 'An example of such a statement is shown here:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里展示了这种语句的一个示例：
- en: '[PRE9]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You should be aware that, in MySQL 8.0.31 and later, when collapsing parenthesized
    expression bodies, MySQL follows SQL standard semantics, so that a higher outer
    limit cannot override an inner lower one. For example, `(SELECT ... LIMIT 5) LIMIT
    10` can return no more than five rows.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该注意，在 MySQL 8.0.31 及更高版本中，当折叠括号表达式体时，MySQL 遵循 SQL 标准语义，因此更高的外部限制不能覆盖更低的内部限制。例如，`(SELECT
    ... LIMIT 5) LIMIT 10` 最多只能返回五行。
