- en: 17.21.3 Forcing InnoDB Recovery
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.21.3 强制 InnoDB 恢复
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/forcing-innodb-recovery.html](https://dev.mysql.com/doc/refman/8.0/en/forcing-innodb-recovery.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/forcing-innodb-recovery.html](https://dev.mysql.com/doc/refman/8.0/en/forcing-innodb-recovery.html)
- en: 'To investigate database page corruption, you might dump your tables from the
    database with [`SELECT ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ...
    INTO Statement"). Usually, most of the data obtained in this way is intact. Serious
    corruption might cause `SELECT * FROM *`tbl_name`*` statements or `InnoDB` background
    operations to unexpectedly exit or assert, or even cause `InnoDB` roll-forward
    recovery to crash. In such cases, you can use the [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    option to force the `InnoDB` storage engine to start up while preventing background
    operations from running, so that you can dump your tables. For example, you can
    add the following line to the `[mysqld]` section of your option file before restarting
    the server:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了调查数据库页面损坏，您可以使用 [`SELECT ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT
    ... INTO Statement") 从数据库中导出表。通常，以这种方式获得的大部分数据是完整的。严重的损坏可能会导致 `SELECT * FROM *`tbl_name`*`
    语句或 `InnoDB` 后台操作意外退出或断言，甚至导致 `InnoDB` 回滚恢复崩溃。在这种情况下，您可以使用 [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    选项来强制 `InnoDB` 存储引擎启动，同时阻止后台操作运行，以便您可以导出表。例如，您可以在重新启动服务器之前将以下行添加到您的选项文件的 `[mysqld]`
    部分中：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For information about using option files, see [Section 6.2.2.2, “Using Option
    Files”](option-files.html "6.2.2.2 Using Option Files").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用选项文件的信息，请参见 [Section 6.2.2.2, “Using Option Files”](option-files.html "6.2.2.2 Using
    Option Files")。
- en: Warning
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Only set [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    to a value greater than 0 in an emergency situation, so that you can start `InnoDB`
    and dump your tables. Before doing so, ensure that you have a backup copy of your
    database in case you need to recreate it. Values of 4 or greater can permanently
    corrupt data files. Only use an [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    setting of 4 or greater on a production server instance after you have successfully
    tested the setting on a separate physical copy of your database. When forcing
    `InnoDB` recovery, you should always start with [`innodb_force_recovery=1`](innodb-parameters.html#sysvar_innodb_force_recovery)
    and only increase the value incrementally, as necessary.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在紧急情况下将 [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    设置为大于 0 的值，以便您可以启动 `InnoDB` 并导出表。在这样做之前，请确保您有数据库的备份副本，以防需要重新创建它。值为 4 或更大可能会永久损坏数据文件。仅在成功在数据库的单独物理副本上测试设置后，才在生产服务器实例上使用大于
    4 的 [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    设置。在强制 `InnoDB` 恢复时，您应始终从 [`innodb_force_recovery=1`](innodb-parameters.html#sysvar_innodb_force_recovery)
    开始，并根据需要逐渐增加值。
- en: '[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    is 0 by default (normal startup without forced recovery). The permissible nonzero
    values for [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    are 1 to 6. A larger value includes the functionality of lesser values. For example,
    a value of 3 includes all of the functionality of values 1 and 2.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    默认为 0（正常启动，无需强制恢复）。[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    允许的非零值为 1 到 6。较大的值包含较小值的功能。例如，值为 3 包含值为 1 和 2 的所有功能。'
- en: If you are able to dump your tables with an [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    value of 3 or less, then you are relatively safe that only some data on corrupt
    individual pages is lost. A value of 4 or greater is considered dangerous because
    data files can be permanently corrupted. A value of 6 is considered drastic because
    database pages are left in an obsolete state, which in turn may introduce more
    corruption into [B-trees](glossary.html#glos_b_tree "B-tree") and other database
    structures.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您能够使用值为 3 或更低的 [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    导出表，那么您相对安全，只有一些损坏的单个页面上的数据丢失。值为 4 或更大被认为是危险的，因为数据文件可能会永久损坏。值为 6 被认为是极端的，因为数据库页面处于过时状态，这反过来可能会在
    [B 树](glossary.html#glos_b_tree "B-tree") 和其他数据库结构中引入更多损坏。
- en: As a safety measure, `InnoDB` prevents [`INSERT`](insert.html "15.2.7 INSERT
    Statement"), [`UPDATE`](update.html "15.2.17 UPDATE Statement"), or [`DELETE`](delete.html
    "15.2.2 DELETE Statement") operations when [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    is greater than 0\. An [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    setting of 4 or greater places `InnoDB` in read-only mode.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作为安全措施，当[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)大于0时，`InnoDB`会阻止[`INSERT`](insert.html
    "15.2.7 INSERT Statement")、[`UPDATE`](update.html "15.2.17 UPDATE Statement")或[`DELETE`](delete.html
    "15.2.2 DELETE Statement")操作。设置为4或更高的[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)值会将`InnoDB`置于只读模式。
- en: '`1` (`SRV_FORCE_IGNORE_CORRUPT`)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1` (`SRV_FORCE_IGNORE_CORRUPT`)'
- en: Lets the server run even if it detects a corrupt [page](glossary.html#glos_page
    "page"). Tries to make `SELECT * FROM *`tbl_name`*` jump over corrupt index records
    and pages, which helps in dumping tables.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让服务器即使检测到损坏的[页面](glossary.html#glos_page "page")也能继续运行。尝试使`SELECT * FROM * tbl_name
    *`跳过损坏的索引记录和页面，有助于导出表格。
- en: '`2` (`SRV_FORCE_NO_BACKGROUND`)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2` (`SRV_FORCE_NO_BACKGROUND`)'
- en: Prevents the [master thread](glossary.html#glos_master_thread "master thread")
    and any [purge threads](glossary.html#glos_purge_thread "purge thread") from running.
    If an unexpected exit would occur during the [purge](glossary.html#glos_purge
    "purge") operation, this recovery value prevents it.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 阻止[主线程](glossary.html#glos_master_thread "master thread")和任何[清理线程](glossary.html#glos_purge_thread
    "purge thread")运行。如果在[清理](glossary.html#glos_purge "purge")操作期间发生意外退出，此恢复值将阻止它。
- en: '`3` (`SRV_FORCE_NO_TRX_UNDO`)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`3` (`SRV_FORCE_NO_TRX_UNDO`)'
- en: Does not run transaction [rollbacks](glossary.html#glos_rollback "rollback")
    after [crash recovery](glossary.html#glos_crash_recovery "crash recovery").
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在[崩溃恢复](glossary.html#glos_crash_recovery "crash recovery")后不运行事务[回滚](glossary.html#glos_rollback
    "rollback")。
- en: '`4` (`SRV_FORCE_NO_IBUF_MERGE`)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`4` (`SRV_FORCE_NO_IBUF_MERGE`)'
- en: Prevents [insert buffer](glossary.html#glos_insert_buffer "insert buffer") merge
    operations. If they would cause a crash, does not do them. Does not calculate
    table [statistics](glossary.html#glos_statistics "statistics"). This value can
    permanently corrupt data files. After using this value, be prepared to drop and
    recreate all secondary indexes. Sets `InnoDB` to read-only.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 阻止[插入缓冲区](glossary.html#glos_insert_buffer "insert buffer")合并操作。如果这些操作可能导致崩溃，则不执行。不计算表的[统计信息](glossary.html#glos_statistics
    "statistics")。这个值可能会永久损坏数据文件。使用此值后，准备好删除并重新创建所有辅助索引。将`InnoDB`设置为只读。
- en: '`5` (`SRV_FORCE_NO_UNDO_LOG_SCAN`)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`5` (`SRV_FORCE_NO_UNDO_LOG_SCAN`)'
- en: 'Does not look at [undo logs](glossary.html#glos_undo_log "undo log") when starting
    the database: `InnoDB` treats even incomplete transactions as committed. This
    value can permanently corrupt data files. Sets `InnoDB` to read-only.'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在启动数据库时不查看[撤销日志](glossary.html#glos_undo_log "undo log")：`InnoDB`将即使是不完整的事务也视为已提交。这个值可能会永久损坏数据文件。将`InnoDB`设置为只读。
- en: '`6` (`SRV_FORCE_NO_LOG_REDO`)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`6` (`SRV_FORCE_NO_LOG_REDO`)'
- en: Does not do the [redo log](glossary.html#glos_redo_log "redo log") roll-forward
    in connection with recovery. This value can permanently corrupt data files. Leaves
    database pages in an obsolete state, which in turn may introduce more corruption
    into B-trees and other database structures. Sets `InnoDB` to read-only.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在恢复过程中不执行[重做日志](glossary.html#glos_redo_log "redo log")的前进。这个值可能会永久损坏数据文件。将数据库页面留在过时状态，这可能会导致B树和其他数据库结构出现更多损坏。将`InnoDB`设置为只读。
- en: You can [`SELECT`](select.html "15.2.13 SELECT Statement") from tables to dump
    them. With an [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    value of 3 or less you can `DROP` or `CREATE` tables. [`DROP TABLE`](drop-table.html
    "15.1.32 DROP TABLE Statement") is also supported with an [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    value greater than 3\. [`DROP TABLE`](drop-table.html "15.1.32 DROP TABLE Statement")
    is not permitted with an [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    value greater than 4.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从表中[`SELECT`](select.html "15.2.13 SELECT Statement")以导出它们。当[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)值为3或更低时，可以`DROP`或`CREATE`表。当[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)值大于3时，也支持[`DROP
    TABLE`](drop-table.html "15.1.32 DROP TABLE Statement")。当[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)值大于4时，不允许[`DROP
    TABLE`](drop-table.html "15.1.32 DROP TABLE Statement")。
- en: If you know that a given table is causing an unexpected exit on rollback, you
    can drop it. If you encounter a runaway rollback caused by a failing mass import
    or [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement"), you can kill
    the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") process and set
    [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    to `3` to bring the database up without the rollback, and then `DROP` the table
    that is causing the runaway rollback.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您知道某个表在回滚时导致意外退出，您可以将其删除。如果遇到由于失败的大规模导入或[`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement")导致的无限回滚，您可以终止[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL
    Server")进程，并将[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)设置为`3`，以在没有回滚的情况下启动数据库，然后`DROP`掉导致无限回滚的表。
- en: If corruption within the table data prevents you from dumping the entire table
    contents, a query with an `ORDER BY *`primary_key`* DESC` clause might be able
    to dump the portion of the table after the corrupted part.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表数据中的损坏阻止您转储整个表内容，带有`ORDER BY *primary_key* DESC`子句的查询可能能够转储受损部分之后的表部分。
- en: If a high [`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)
    value is required to start `InnoDB`, there may be corrupted data structures that
    could cause complex queries (queries containing `WHERE`, `ORDER BY`, or other
    clauses) to fail. In this case, you may only be able to run basic `SELECT * FROM
    t` queries.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要较高的[`innodb_force_recovery`](innodb-parameters.html#sysvar_innodb_force_recovery)值才能启动`InnoDB`，可能存在损坏的数据结构，可能导致复杂查询（包含`WHERE`、`ORDER
    BY`或其他子句的查询）失败。在这种情况下，您可能只能运行基本的`SELECT * FROM t`查询。
