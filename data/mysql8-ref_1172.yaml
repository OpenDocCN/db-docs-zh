- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-file-per-table-tablespaces.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-file-per-table-tablespaces.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-file-per-table-tablespaces.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-file-per-table-tablespaces.html)
- en: 17.6.3.2 File-Per-Table Tablespaces
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 17.6.3.2 每表一个表空间
- en: A file-per-table tablespace contains data and indexes for a single `InnoDB`
    table, and is stored on the file system in a single data file.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每表一个表空间包含单个`InnoDB`表的数据和索引，并存储在单个数据文件中的文件系统中。
- en: 'File-per-table tablespace characteristics are described under the following
    topics in this section:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每表一个表空间的特性在本节中的以下主题下描述：
- en: '[File-Per-Table Tablespace Configuration](innodb-file-per-table-tablespaces.html#innodb-file-per-table-configuration
    "File-Per-Table Tablespace Configuration")'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每表一个表空间配置](innodb-file-per-table-tablespaces.html#innodb-file-per-table-configuration
    "每表一个表空间配置")'
- en: '[File-Per-Table Tablespace Data Files](innodb-file-per-table-tablespaces.html#innodb-file-per-table-data-files
    "File-Per-Table Tablespace Data Files")'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每表一个表空间数据文件](innodb-file-per-table-tablespaces.html#innodb-file-per-table-data-files
    "每表一个表空间数据文件")'
- en: '[File-Per-Table Tablespace Advantages](innodb-file-per-table-tablespaces.html#innodb-file-per-table-advantages
    "File-Per-Table Tablespace Advantages")'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每表一个表空间优势](innodb-file-per-table-tablespaces.html#innodb-file-per-table-advantages
    "每表一个表空间优势")'
- en: '[File-Per-Table Tablespace Disadvantages](innodb-file-per-table-tablespaces.html#innodb-file-per-table-disadvantages
    "File-Per-Table Tablespace Disadvantages")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[每表一个表空间的缺点](innodb-file-per-table-tablespaces.html#innodb-file-per-table-disadvantages
    "每表一个表空间的缺点")'
- en: File-Per-Table Tablespace Configuration
  id: totrans-8
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 每表一个表空间配置
- en: '`InnoDB` creates tables in file-per-table tablespaces by default. This behavior
    is controlled by the [`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    variable. Disabling [`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    causes `InnoDB` to create tables in the system tablespace.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`默认在每表一个表空间中创建表。此行为由[`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)变量控制。禁用[`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)会导致`InnoDB`在系统表空间中创建表。'
- en: An [`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)
    setting can be specified in an option file or configured at runtime using a [`SET
    GLOBAL`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment") statement.
    Changing the setting at runtime requires privileges sufficient to set global system
    variables. See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在选项文件中指定[`innodb_file_per_table`](innodb-parameters.html#sysvar_innodb_file_per_table)设置，也可以使用[`SET
    GLOBAL`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句在运行时进行配置。在运行时更改设置需要足够权限来设置全局系统变量。请参见[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: 'Option file:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 选项文件：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Using [`SET GLOBAL`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    at runtime:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行时使用[`SET GLOBAL`](set-variable.html "15.7.6.1 变量赋值的SET语法")：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: File-Per-Table Tablespace Data Files
  id: totrans-15
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 每表一个表空间数据文件
- en: 'A file-per-table tablespace is created in an `.ibd` data file in a schema directory
    under the MySQL data directory. The `.ibd` file is named for the table (`*`table_name`*.ibd`).
    For example, the data file for table `test.t1` is created in the `test` directory
    under the MySQL data directory:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每表一个表空间在MySQL数据目录下的模式目录中创建一个`.ibd`数据文件。`.ibd`文件以表名（`*`table_name`*.ibd`）命名。例如，表`test.t1`的数据文件将在MySQL数据目录下的`test`目录中创建：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can use the `DATA DIRECTORY` clause of the [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") statement to implicitly create a file-per-table
    tablespace data file outside of the data directory. For more information, see
    [Section 17.6.1.2, “Creating Tables Externally”](innodb-create-table-external.html
    "17.6.1.2 Creating Tables Externally").
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE语句")语句的`DATA DIRECTORY`子句隐式地在数据目录之外创建一个每表一个表空间数据文件。有关更多信息，请参见[第17.6.1.2节，“外部创建表”](innodb-create-table-external.html
    "17.6.1.2 外部创建表")。
- en: File-Per-Table Tablespace Advantages
  id: totrans-19
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 每表一个表空间优势
- en: File-per-table tablespaces have the following advantages over shared tablespaces
    such as the system tablespace or general tablespaces.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每表一个表空间相对于共享表空间（如系统表空间或通用表空间）具有以下优势。
- en: Disk space is returned to the operating system after truncating or dropping
    a table created in a file-per-table tablespace. Truncating or dropping a table
    stored in a shared tablespace creates free space within the shared tablespace
    data file, which can only be used for `InnoDB` data. In other words, a shared
    tablespace data file does not shrink in size after a table is truncated or dropped.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每表表空间中创建的表被截断或删除后，磁盘空间将返回给操作系统。在共享表空间中截断或删除表会在共享表空间数据文件中创建可用于`InnoDB`数据的空闲空间。换句话说，共享表空间数据文件在截断或删除表后不会缩小。
- en: A table-copying [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    operation on a table that resides in a shared tablespace can increase the amount
    of disk space occupied by the tablespace. Such operations may require as much
    additional space as the data in the table plus indexes. This space is not released
    back to the operating system as it is for file-per-table tablespaces.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在共享表空间中的表上执行表复制的[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作可能会增加表空间所占用的磁盘空间。这些操作可能需要额外的空间，与表中的数据加索引相同。这些空间不会像每表表空间那样释放回操作系统。
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    performance is better when executed on tables that reside in file-per-table tablespaces.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每表表空间文件中的表上执行[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE
    Statement")性能更好。
- en: File-per-table tablespace data files can be created on separate storage devices
    for I/O optimization, space management, or backup purposes. See [Section 17.6.1.2,
    “Creating Tables Externally”](innodb-create-table-external.html "17.6.1.2 Creating
    Tables Externally").
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在单独的存储设备上为I/O优化、空间管理或备份目的创建每表表空间数据文件。请参见[第17.6.1.2节，“外部创建表”](innodb-create-table-external.html
    "17.6.1.2 Creating Tables Externally")。
- en: You can import a table that resides in file-per-table tablespace from another
    MySQL instance. See [Section 17.6.1.3, “Importing InnoDB Tables”](innodb-table-import.html
    "17.6.1.3 Importing InnoDB Tables").
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以从另一个MySQL实例导入位于每表表空间中的表。请参见[第17.6.1.3节，“导入InnoDB表”](innodb-table-import.html
    "17.6.1.3 Importing InnoDB Tables")。
- en: Tables created in file-per-table tablespaces support features associated with
    `DYNAMIC` and `COMPRESSED` row formats, which are not supported by the system
    tablespace. See [Section 17.10, “InnoDB Row Formats”](innodb-row-format.html "17.10 InnoDB
    Row Formats").
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每表表空间文件中创建的表支持与系统表空间不支持的`DYNAMIC`和`COMPRESSED`行格式相关的功能。请参见[第17.10节，“InnoDB行格式”](innodb-row-format.html
    "17.10 InnoDB Row Formats")。
- en: Tables stored in individual tablespace data files can save time and improve
    chances for a successful recovery when data corruption occurs, when backups or
    binary logs are unavailable, or when the MySQL server instance cannot be restarted.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在单独表空间数据文件中的表在数据损坏发生、备份或二进制日志不可用或MySQL服务器实例无法重新启动时，可以节省时间并提高成功恢复的机会。
- en: Tables created in file-per-table tablespaces can be backed up or restored quickly
    using MySQL Enterprise Backup, without interrupting the use of other `InnoDB`
    tables. This is beneficial for tables on varying backup schedules or that require
    backup less frequently. See [Making a Partial Backup](/doc/mysql-enterprise-backup/8.0/en/partial.html)
    for details.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每表表空间文件中创建的表可以使用MySQL企业备份快速备份或恢复，而不会中断其他`InnoDB`表的使用。这对备份计划不同或需要较少备份的表非常有益。详细信息请参见[进行部分备份](/doc/mysql-enterprise-backup/8.0/en/partial.html)。
- en: File-per-table tablespaces permit monitoring table size on the file system by
    monitoring the size of the tablespace data file.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每表表空间允许通过监视表空间数据文件的大小来监视文件系统上的表大小。
- en: Common Linux file systems do not permit concurrent writes to a single file such
    as a shared tablespace data file when [`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)
    is set to `O_DIRECT`. As a result, there are possible performance improvements
    when using file-per-table tablespaces in conjunction with this setting.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见的Linux文件系统不允许在将[`innodb_flush_method`](innodb-parameters.html#sysvar_innodb_flush_method)设置为`O_DIRECT`时对单个文件进行并发写入。因此，在使用此设置时，使用每表表空间文件的方式可能会带来性能改进。
- en: Tables in a shared tablespace are limited in size by the 64TB tablespace size
    limit. By comparison, each file-per-table tablespace has a 64TB size limit, which
    provides plenty of room for individual tables to grow in size.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享表空间中的表受到64TB表空间大小限制的限制。相比之下，每个每表表空间都有一个64TB的大小限制，为表增长提供了充足的空间。
- en: File-Per-Table Tablespace Disadvantages
  id: totrans-32
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 以文件为单位的表空间的缺点
- en: File-per-table tablespaces have the following disadvantages compared to shared
    tablespaces such as the system tablespace or general tablespaces.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 与系统表空间或通用表空间等共享表空间相比，以文件为单位的表空间具有以下缺点。
- en: With file-per-table tablespaces, each table may have unused space that can only
    be utilized by rows of the same table, which can lead to wasted space if not properly
    managed.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以文件为单位的表空间，每个表可能会有未使用的空间，只能由同一表的行利用，如果管理不当可能会导致空间浪费。
- en: '`fsync` operations are performed on multiple file-per-table data files instead
    of a single shared tablespace data file. Because `fsync` operations are per file,
    write operations for multiple tables cannot be combined, which can result in a
    higher total number of `fsync` operations.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fsync` 操作是在多个以文件为单位的数据文件上执行的，而不是在单个共享表空间数据文件上执行。由于 `fsync` 操作是针对每个文件的，多个表的写操作不能合并，这可能导致更多的
    `fsync` 操作。'
- en: '[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") must keep an open
    file handle for each file-per-table tablespace, which may impact performance if
    you have numerous tables in file-per-table tablespaces.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") 必须为每个以文件为单位的表空间保持一个打开的文件句柄，如果在以文件为单位的表空间中有大量表，可能会影响性能。'
- en: More file descriptors are required when each table has its own data file.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个表都有自己的数据文件时，需要更多的文件描述符。
- en: There is potential for more fragmentation, which can impede [`DROP TABLE`](drop-table.html
    "15.1.32 DROP TABLE Statement") and table scan performance. However, if fragmentation
    is managed, file-per-table tablespaces can improve performance for these operations.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存在更多的碎片化可能会妨碍 [`DROP TABLE`](drop-table.html "15.1.32 DROP TABLE Statement")
    和表扫描性能。然而，如果管理碎片化，以文件为单位的表空间可以改善这些操作的性能。
- en: The buffer pool is scanned when dropping a table that resides in a file-per-table
    tablespace, which can take several seconds for large buffer pools. The scan is
    performed with a broad internal lock, which may delay other operations.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当删除位于以文件为单位的表空间中的表时，需要扫描缓冲池，对于大型缓冲池可能需要几秒钟。扫描是使用广泛的内部锁执行的，这可能会延迟其他操作。
- en: The [`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    variable, which defines the increment size for extending the size of an auto-extending
    shared tablespace file when it becomes full, does not apply to file-per-table
    tablespace files, which are auto-extending regardless of the [`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    setting. Initial file-per-table tablespace extensions are by small amounts, after
    which extensions occur in increments of 4MB.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    变量定义了在自动扩展的共享表空间文件满时扩展大小的增量大小，但不适用于自动扩展的以文件为单位的表空间文件，这些文件无论 [`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    设置如何都会自动扩展。初始以文件为单位的表空间扩展量很小，之后以 4MB 的增量进行扩展。'
