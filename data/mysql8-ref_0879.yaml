- en: 14.24.3 Expression Handling
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.24.3 表达式处理
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/precision-math-expressions.html](https://dev.mysql.com/doc/refman/8.0/en/precision-math-expressions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/precision-math-expressions.html](https://dev.mysql.com/doc/refman/8.0/en/precision-math-expressions.html)
- en: With precision math, exact-value numbers are used as given whenever possible.
    For example, numbers in comparisons are used exactly as given without a change
    in value. In strict SQL mode, for [`INSERT`](insert.html "15.2.7 INSERT Statement")
    into a column with an exact data type ([`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") or integer), a number is inserted with
    its exact value if it is within the column range. When retrieved, the value should
    be the same as what was inserted. (If strict SQL mode is not enabled, truncation
    for [`INSERT`](insert.html "15.2.7 INSERT Statement") is permissible.)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用精确数学，尽可能使用给定的精确值作为数字。例如，在比较中使用的数字将完全按照给定值使用，而不会更改值。在严格SQL模式下，对于具有精确数据类型（[`DECIMAL`](fixed-point-types.html
    "13.1.3 定点类型（精确值） - DECIMAL, NUMERIC")或整数）的列进行[`INSERT`](insert.html "15.2.7 INSERT语句")时，如果数字在列范围内，则将插入其精确值。检索时，值应与插入的值相同。（如果未启用严格SQL模式，则允许对[`INSERT`](insert.html
    "15.2.7 INSERT语句")进行截断。）
- en: 'Handling of a numeric expression depends on what kind of values the expression
    contains:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 数值表达式的处理取决于表达式包含的值的类型：
- en: If any approximate values are present, the expression is approximate and is
    evaluated using floating-point arithmetic.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表达式中存在任何近似值，则表达式是近似的，并使用浮点运算进行评估。
- en: If no approximate values are present, the expression contains only exact values.
    If any exact value contains a fractional part (a value following the decimal point),
    the expression is evaluated using [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") exact arithmetic and has a precision
    of 65 digits. The term “exact” is subject to the limits of what can be represented
    in binary. For example, `1.0/3.0` can be approximated in decimal notation as `.333...`,
    but not written as an exact number, so `(1.0/3.0)*3.0` does not evaluate to exactly
    `1.0`.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表达式中没有近似值，则表达式只包含精确值。如果任何精确值包含小数部分（小数点后的值），则使用[`DECIMAL`](fixed-point-types.html
    "13.1.3 定点类型（精确值） - DECIMAL, NUMERIC")精确算术进行评估，并具有65位数字的精度。术语“精确”受二进制表示的限制。例如，`1.0/3.0`可以在十进制表示中近似为`.333...`，但不能写成一个精确的数字，因此`(1.0/3.0)*3.0`不会精确评估为`1.0`。
- en: Otherwise, the expression contains only integer values. The expression is exact
    and is evaluated using integer arithmetic and has a precision the same as [`BIGINT`](integer-types.html
    "13.1.2 Integer Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT,
    BIGINT") (64 bits).
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，表达式只包含整数值。表达式是精确的，并使用整数运算进行评估，具有与[`BIGINT`](integer-types.html "13.1.2 整数类型（精确值）
    - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT")（64位）相同的精度。
- en: If a numeric expression contains any strings, they are converted to double-precision
    floating-point values and the expression is approximate.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数值表达式包含任何字符串，则它们将转换为双精度浮点值，并且表达式是近似的。
- en: 'Inserts into numeric columns are affected by the SQL mode, which is controlled
    by the [`sql_mode`](server-system-variables.html#sysvar_sql_mode) system variable.
    (See [Section 7.1.11, “Server SQL Modes”](sql-mode.html "7.1.11 Server SQL Modes").)
    The following discussion mentions strict mode (selected by the [`STRICT_ALL_TABLES`](sql-mode.html#sqlmode_strict_all_tables)
    or [`STRICT_TRANS_TABLES`](sql-mode.html#sqlmode_strict_trans_tables) mode values)
    and [`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero).
    To turn on all restrictions, you can simply use [`TRADITIONAL`](sql-mode.html#sqlmode_traditional)
    mode, which includes both strict mode values and [`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero):'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 插入到数值列中受SQL模式的影响，该模式由[`sql_mode`](server-system-variables.html#sysvar_sql_mode)系统变量控制。（参见[Section 7.1.11,
    “Server SQL Modes”](sql-mode.html "7.1.11 服务器SQL模式").）以下讨论提到了严格模式（由[`STRICT_ALL_TABLES`](sql-mode.html#sqlmode_strict_all_tables)或[`STRICT_TRANS_TABLES`](sql-mode.html#sqlmode_strict_trans_tables)模式值选择）和[`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)。要打开所有限制，您可以简单地使用[`TRADITIONAL`](sql-mode.html#sqlmode_traditional)模式，其中包括严格模式值和[`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If a number is inserted into an exact type column ([`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") or integer), it is
    inserted with its exact value if it is within the column range and precision.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将数字插入到精确类型列（[`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types (Exact
    Value) - DECIMAL, NUMERIC") 或整数）中，如果在列范围和精度内，则插入其精确值。
- en: If the value has too many digits in the fractional part, rounding occurs and
    a note is generated. Rounding is done as described in [Section 14.24.4, “Rounding
    Behavior”](precision-math-rounding.html "14.24.4 Rounding Behavior"). Truncation
    due to rounding of the fractional part is not an error, even in strict mode.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果小数部分的数字过多，将进行四舍五入并生成一个注释。四舍五入的处理如[第 14.24.4 节，“四舍五入行为”](precision-math-rounding.html
    "14.24.4 Rounding Behavior")中所述。由于小数部分的四舍五入而导致截断不是错误，即使在严格模式下也是如此。
- en: 'If the value has too many digits in the integer part, it is too large (out
    of range) and is handled as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果整数部分的数字过多，则它太大（超出范围）并按以下方式处理：
- en: If strict mode is not enabled, the value is truncated to the nearest legal value
    and a warning is generated.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未启用严格模式，则该值将被截断为最接近的合法值，并生成警告。
- en: If strict mode is enabled, an overflow error occurs.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果启用严格模式，则会发生溢出错误。
- en: 'Prior to MySQL 8.0.31, for [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") literals, in addition to the precision
    limit of 65 digits, there is a limit on how long the text of the literal can be.
    If the value exceeds approximately 80 characters, unexpected results can occur.
    For example:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.31之前，对于[`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types
    (Exact Value) - DECIMAL, NUMERIC")文字，除了65位数字的精度限制外，还有一个限制文字长度的限制。如果值超过大约80个字符，可能会导致意外结果。例如：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As of MySQL 8.0.31, this should no longer be an issue, as shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.31，这不再是一个问题，如下所示：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Underflow is not detected, so underflow handling is undefined.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 下溢不会被检测到，因此下溢处理是未定义的。
- en: 'For inserts of strings into numeric columns, conversion from string to number
    is handled as follows if the string has nonnumeric contents:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于将字符串插入到数字列中，如果字符串具有非数字内容，则将字符串转换为数字的处理如下：
- en: A string that does not begin with a number cannot be used as a number and produces
    an error in strict mode, or a warning otherwise. This includes the empty string.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以非数字开头的字符串不能用作数字，在严格模式下会产生错误，否则会产生警告。这包括空字符串。
- en: A string that begins with a number can be converted, but the trailing nonnumeric
    portion is truncated. If the truncated portion contains anything other than spaces,
    this produces an error in strict mode, or a warning otherwise.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以数字开头的字符串可以转换，但尾随的非数字部分将被截断。如果被截断的部分包含除空格以外的任何内容，在严格模式下会产生错误，否则会产生警告。
- en: By default, division by zero produces a result of `NULL` and no warning. By
    setting the SQL mode appropriately, division by zero can be restricted.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，除零操作会产生`NULL`结果且不会有警告。通过适当设置SQL模式，可以限制除零操作。
- en: 'With the [`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    SQL mode enabled, MySQL handles division by zero differently:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 启用[`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    SQL 模式后，MySQL会以不同方式处理除零操作：
- en: If strict mode is not enabled, a warning occurs.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未启用严格模式，将产生警告。
- en: If strict mode is enabled, inserts and updates involving division by zero are
    prohibited, and an error occurs.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果启用严格模式，则禁止涉及除零操作的插入和更新，并出现错误。
- en: In other words, inserts and updates involving expressions that perform division
    by zero can be treated as errors, but this requires [`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    in addition to strict mode.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，涉及除零操作的插入和更新可以被视为错误，但这需要[`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)以及严格模式。
- en: 'Suppose that we have this statement:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有以下语句：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This is what happens for combinations of strict and [`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    modes.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是严格模式和[`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)模式的组合情况。
- en: '| [`sql_mode`](server-system-variables.html#sysvar_sql_mode) Value | Result
    |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`sql_mode`](server-system-variables.html#sysvar_sql_mode) 值 | 结果 |'
- en: '| `''''` (Default) | No warning, no error; `i` is set to `NULL`. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `''''`（默认） | 无警告，无错误；`i` 被设置为 `NULL`。 |'
- en: '| strict | No warning, no error; `i` is set to `NULL`. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 严格 | 无警告，无错误；`i` 被设置为 `NULL`。 |'
- en: '| [`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    | Warning, no error; `i` is set to `NULL`. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    | 警告，没有错误；`i` 被设置为 `NULL`。 |'
- en: '| strict,[`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    | Error condition; no row is inserted. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 严格模式，[`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    | 错误条件；不插入任何行。 |'
