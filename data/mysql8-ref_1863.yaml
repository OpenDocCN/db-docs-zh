- en: 26.6.2 Partitioning Limitations Relating to Storage Engines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 26.6.2 关于存储引擎的分区限制
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/partitioning-limitations-storage-engines.html](https://dev.mysql.com/doc/refman/8.0/en/partitioning-limitations-storage-engines.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文链接：[https://dev.mysql.com/doc/refman/8.0/en/partitioning-limitations-storage-engines.html](https://dev.mysql.com/doc/refman/8.0/en/partitioning-limitations-storage-engines.html)
- en: In MySQL 8.0, partitioning support is not actually provided by the MySQL Server,
    but rather by a table storage engine's own or native partitioning handler. In
    MySQL 8.0, only the [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB
    Storage Engine") and [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") storage engines provide native partitioning handlers. This means that partitioned
    tables cannot be created using any other storage engine than these. (You must
    be using MySQL NDB Cluster with the `NDB` storage engine to create `NDB` tables.)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0中，分区支持实际上并非由MySQL Server提供，而是由表存储引擎自身或本地分区处理程序提供。在MySQL 8.0中，只有[`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB存储引擎")和[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0")存储引擎提供本地分区处理程序。这意味着分区表不能使用除这些之外的任何其他存储引擎来创建。（您必须使用带有`NDB`存储引擎的MySQL
    NDB Cluster来创建`NDB`表。）
- en: '**InnoDB storage engine. ** [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine") foreign keys and MySQL partitioning are not compatible.
    Partitioned `InnoDB` tables cannot have foreign key references, nor can they have
    columns referenced by foreign keys. `InnoDB` tables which have or which are referenced
    by foreign keys cannot be partitioned.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**InnoDB存储引擎。** [`InnoDB`](innodb-storage-engine.html "第17章 InnoDB存储引擎")外键和MySQL分区不兼容。分区的`InnoDB`表不能具有外键引用，也不能具有被外键引用的列。具有或被外键引用的`InnoDB`表不能进行分区。'
- en: '[`ALTER TABLE ... OPTIMIZE PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations") does not work correctly with partitioned
    tables that use `InnoDB`. Use `ALTER TABLE ... REBUILD PARTITION` and `ALTER TABLE
    ... ANALYZE PARTITION`, instead, for such tables. For more information, see [Section 15.1.9.1,
    “ALTER TABLE Partition Operations”](alter-table-partition-operations.html "15.1.9.1 ALTER
    TABLE Partition Operations").'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用`InnoDB`的分区表，[`ALTER TABLE ... OPTIMIZE PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations")无法正确工作。对于这些表，请改用`ALTER TABLE ... REBUILD
    PARTITION`和`ALTER TABLE ... ANALYZE PARTITION`。有关更多信息，请参见[第15.1.9.1节，“ALTER TABLE
    Partition Operations”](alter-table-partition-operations.html "15.1.9.1 ALTER TABLE
    Partition Operations")。
- en: '**User-defined partitioning and the NDB storage engine (NDB Cluster). ** Partitioning
    by `KEY` (including `LINEAR KEY`) is the only type of partitioning supported for
    the [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") storage engine.
    It is not possible under normal circumstances in NDB Cluster to create an NDB
    Cluster table using any partitioning type other than [`LINEAR`] `KEY`, and attempting
    to do so fails with an error.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户定义的分区和NDB存储引擎（NDB Cluster）。** `KEY`（包括`LINEAR KEY`）分区是唯一支持的[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")存储引擎的分区类型。在NDB Cluster中，通常情况下不可能使用除[`LINEAR`] `KEY`之外的任何分区类型来创建NDB
    Cluster表，尝试这样做会导致错误。'
- en: '*Exception (not for production)*: It is possible to override this restriction
    by setting the [`new`](server-system-variables.html#sysvar_new) system variable
    on NDB Cluster SQL nodes to `ON`. If you choose to do this, you should be aware
    that tables using partitioning types other than `[LINEAR] KEY` are not supported
    in production. *In such cases, you can create and use tables with partitioning
    types other than `KEY` or `LINEAR KEY`, but you do this entirely at your own risk*.
    You should also be aware that this functionality is now deprecated and subject
    to removal without further notice in a future release of NDB Cluster.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*异常（不适用于生产）*：可以通过在NDB Cluster SQL节点上设置[`new`](server-system-variables.html#sysvar_new)系统变量为`ON`来覆盖此限制。如果您选择这样做，您应该意识到不支持使用除`[LINEAR]
    KEY`之外的其他分区类型的表进行生产。*在这种情况下，您可以创建和使用除`KEY`或`LINEAR KEY`之外的其他分区类型的表，但这完全是自担风险的。*您还应该意识到，此功能现已被弃用，并可能在将来的NDB
    Cluster版本中不经通知地被移除。'
- en: The maximum number of partitions that can be defined for an [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") table depends on the number of data nodes
    and node groups in the cluster, the version of the NDB Cluster software in use,
    and other factors. See [NDB and user-defined partitioning](mysql-cluster-nodes-groups.html#mysql-cluster-nodes-groups-user-partitioning
    "NDB and user-defined partitioning"), for more information.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 可以为[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0") 表定义的最大分区数取决于集群中的数据节点和节点组数量、正在使用的NDB
    Cluster软件版本以及其他因素。有关更多信息，请参见[NDB和用户定义的分区](mysql-cluster-nodes-groups.html#mysql-cluster-nodes-groups-user-partitioning
    "NDB and user-defined partitioning")。
- en: The maximum amount of fixed-size data that can be stored per partition in an
    `NDB` table is 128 TB. Previously, this was 16 GB.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在`NDB`表中每个分区中可以存储的固定大小数据的最大量为128 TB。以前，这个值是16 GB。
- en: '[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") and [`ALTER
    TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER TABLE Partition
    Operations") statements that would cause a user-partitioned [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") table not to meet either or both of the following
    two requirements are not permitted, and fail with an error:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 会导致用户分区的[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0") 表不满足以下两个要求之一或两者的[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")和[`ALTER TABLE`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations")语句不被允许，并且会因错误而失败：
- en: The table must have an explicit primary key.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表必须具有显式主键。
- en: All columns listed in the table's partitioning expression must be part of the
    primary key.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表的分区表达式中列出的所有列必须是主键的一部分。
- en: '**Exception. ** If a user-partitioned [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") table is created using an empty column-list (that is, using
    `PARTITION BY KEY()` or `PARTITION BY LINEAR KEY()`), then no explicit primary
    key is required.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**异常。** 如果使用空列列表（即使用`PARTITION BY KEY()`或`PARTITION BY LINEAR KEY()`）创建用户分区的[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0") 表，则不需要显式主键。'
- en: '**Partition selection. ** Partition selection is not supported for [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") tables. See [Section 26.5, “Partition Selection”](partitioning-selection.html
    "26.5 Partition Selection"), for more information.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**分区选择。** [`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0") 表不支持分区选择。有关更多信息，请参见[第26.5节“分区选择”](partitioning-selection.html
    "26.5 分区选择")。'
- en: '**Upgrading partitioned tables. ** When performing an upgrade, tables which
    are partitioned by `KEY` must be dumped and reloaded. Partitioned tables using
    storage engines other than `InnoDB` cannot be upgraded from MySQL 5.7 or earlier
    to MySQL 8.0 or later; you must either drop the partitioning from such tables
    with `ALTER TABLE ... REMOVE PARTITIONING` or convert them to `InnoDB` using `ALTER
    TABLE ... ENGINE=INNODB` prior to the upgrade.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**升级分区表。** 在执行升级时，使用`KEY`进行分区的表必须进行转储和重新加载。使用除`InnoDB`之外的存储引擎进行分区的表无法从MySQL
    5.7或更早版本升级到MySQL 8.0或更高版本；您必须在升级之前使用`ALTER TABLE ... REMOVE PARTITIONING`删除这些表的分区，或者使用`ALTER
    TABLE ... ENGINE=INNODB`将其转换为`InnoDB`。'
- en: For information about converting `MyISAM` tables to `InnoDB`, see [Section 17.6.1.5,
    “Converting Tables from MyISAM to InnoDB”](converting-tables-to-innodb.html "17.6.1.5 Converting
    Tables from MyISAM to InnoDB").
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有关将`MyISAM`表转换为`InnoDB`的信息，请参见[第17.6.1.5节“从MyISAM转换表到InnoDB”](converting-tables-to-innodb.html
    "17.6.1.5 从MyISAM转换表到InnoDB")。
