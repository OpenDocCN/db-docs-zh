- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-failure-handling.html](https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-failure-handling.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-failure-handling.html](https://dev.mysql.com/doc/refman/8.0/en/clone-plugin-failure-handling.html)
- en: 7.6.7.9 Remote Cloning Operation Failure Handling
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 7.6.7.9 远程克隆操作失败处理
- en: This section describes failure handing at different stages of a cloning operation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了克隆操作在不同阶段的失败处理。
- en: Prerequisites are checked (see [Remote Cloning Prerequisites](clone-plugin-remote.html#clone-remote-prerequisites
    "Remote Cloning Prerequisites")).
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 先决条件被检查（参见[远程克隆先决条件](clone-plugin-remote.html#clone-remote-prerequisites "Remote
    Cloning Prerequisites")）。
- en: If a failure occurs during the prerequisite check, the [`CLONE INSTANCE`](clone.html
    "15.7.5 CLONE Statement") operation reports an error.
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在先决条件检查期间发生故障，则[`CLONE INSTANCE`](clone.html "15.7.5 CLONE Statement")操作会报告错误。
- en: Prior to MySQL 8.0.27, a backup lock on the donor and recipient blocks concurrent
    DDL operations. From MySQL 8.0.27, concurrent DDL on the donor is blocked only
    if the [`clone_block_ddl`](clone-plugin-options-variables.html#sysvar_clone_block_ddl)
    variable is set to `ON` (the default setting is `OFF`). See [Section 7.6.7.4,
    “Cloning and Concurrent DDL”](clone-plugin-concurrent-ddl.html "7.6.7.4 Cloning
    and Concurrent DDL").
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.27之前，在提供方和接收方上备份锁会阻止并发的DDL操作。从MySQL 8.0.27开始，仅当[`clone_block_ddl`](clone-plugin-options-variables.html#sysvar_clone_block_ddl)变量设置为`ON`时（默认设置为`OFF`）才会阻止提供方上的并发DDL。参见[Section 7.6.7.4,
    “Cloning and Concurrent DDL”](clone-plugin-concurrent-ddl.html "7.6.7.4 Cloning
    and Concurrent DDL")。
- en: If the cloning operation is unable to obtain a DDL lock within the time limit
    specified by the [`clone_ddl_timeout`](clone-plugin-options-variables.html#sysvar_clone_ddl_timeout)
    variable, an error is reported.
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果克隆操作无法在[`clone_ddl_timeout`](clone-plugin-options-variables.html#sysvar_clone_ddl_timeout)变量指定的时间限制内获得DDL锁，则会报告错误。
- en: User-created data (schemas, tables, tablespaces) and binary logs on the recipient
    are removed before data is cloned to the recipient data directory.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户创建的数据（模式、表、表空间）和接收方上的二进制日志在将数据克隆到接收方数据目录之前被移除。
- en: When user-created data and binary logs are removed from the recipient data directory
    during a remote cloning operation, the data is not saved and may be lost if a
    failure occurs. If the data is of importance, a backup should be taken before
    initiating a remote cloning operation.
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在远程克隆操作期间从接收方数据目录中移除用户创建的数据和二进制日志时，数据不会被保存，如果发生故障可能会丢失。如果数据很重要，应在启动远程克隆操作之前进行备份。
- en: 'For informational purposes, warnings are printed to the server error log to
    specify when data removal starts and finishes:'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了信息目的，警告会被打印到服务器错误日志中，以指定数据移除何时开始和结束：
- en: '[PRE0]'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If a failure occurs while removing data, the recipient may be left with a partial
    set of schemas, tables, and tablespaces that existed before the cloning operation.
    Any time during the execution of a cloning operation or after a failure, the server
    is always in a consistent state.
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在移除数据时发生故障，接收方可能会留下部分在克隆操作之前存在的模式、表和表空间。在执行克隆操作期间或发生故障后的任何时候，服务器始终处于一致状态。
- en: Data is cloned from the donor. User-created data, dictionary metadata, and other
    system data are cloned.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据从提供方克隆。用户创建的数据、字典元数据和其他系统数据都会被克隆。
- en: If a failure occurs while cloning data, the cloning operation is rolled back
    and all cloned data removed. At this stage, the previously existing user-created
    data and binary logs on the recipient have also been removed.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在克隆数据时发生故障，克隆操作将被回滚并移除所有克隆数据。在此阶段，接收方上先前存在的用户创建的数据和二进制日志也已被移除。
- en: Should this scenario occur, you can either rectify the cause of the failure
    and re-execute the cloning operation, or forgo the cloning operation and restore
    the recipient data from a backup taken before the cloning operation.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果发生这种情况，您可以纠正故障原因并重新执行克隆操作，或放弃克隆操作并从在克隆操作之前进行的备份中恢复接收方数据。
- en: The server is restarted automatically (applies to remote cloning operations
    that do not clone to a named directory). During startup, typical server startup
    tasks are performed.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器会自动重启（适用于不克隆到命名目录的远程克隆操作）。在启动过程中，会执行典型的服务器启动任务。
- en: If the automatic server restart fails, you can restart the server manually to
    complete the cloning operation.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果自动服务器重启失败，您可以手动重启服务器以完成克隆操作。
- en: Before MySQL 8.0.24, if a network error occurs during a cloning operation, the
    operation resumes if the error is resolved within five minutes. From MySQL 8.0.24,
    the operation resumes if the error is resolved within the time specified by the
    [`clone_donor_timeout_after_network_failure`](clone-plugin-options-variables.html#sysvar_clone_donor_timeout_after_network_failure)
    variable defined on the donor instance. The [`clone_donor_timeout_after_network_failure`](clone-plugin-options-variables.html#sysvar_clone_donor_timeout_after_network_failure)
    default setting is 5 minutes but a range of 0 to 30 minutes is supported. If the
    operation does not resume within the allotted time, it aborts and returns an error,
    and the donor drops the snapshot. A setting of zero causes the donor to drop the
    snapshot immediately when a network error occurs. Configuring a longer timeout
    allows more time for resolving network issues but also increases the size of the
    delta on the donor instance, which increases clone recovery time as well as replication
    lag in cases where the clone is intended as a replica or replication group member.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.24 之前，如果在克隆操作期间发生网络错误，且在五分钟内解决了错误，则操作会恢复。从 MySQL 8.0.24 开始，如果在捐赠实例上定义的[`clone_donor_timeout_after_network_failure`](clone-plugin-options-variables.html#sysvar_clone_donor_timeout_after_network_failure)变量指定的时间内解决了错误，则操作会恢复。[`clone_donor_timeout_after_network_failure`](clone-plugin-options-variables.html#sysvar_clone_donor_timeout_after_network_failure)的默认设置为5分钟，但支持0到30分钟的范围。如果操作未在分配的时间内恢复，则会中止并返回错误，捐赠者会删除快照。将设置为零会导致在发生网络错误时捐赠者立即删除快照。配置更长的超时时间允许更多时间解决网络问题，但也会增加捐赠实例上的增量大小，从而增加克隆恢复时间以及在克隆旨在作为副本或复制组成员时的复制延迟。
- en: Prior to MySQL 8.0.24, donor threads use the MySQL Server [`wait_timeout`](server-system-variables.html#sysvar_wait_timeout)
    setting when listening for Clone protocol commands. As a result, a low [`wait_timeout`](server-system-variables.html#sysvar_wait_timeout)
    setting could cause a long running remote cloning operation to timeout. From MySQL
    8.0.24, the Clone idle timeout is set to the default [`wait_timeout`](server-system-variables.html#sysvar_wait_timeout)
    setting, which is 28800 seconds (8 hours).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.24 之前，捐赠者线程在监听克隆协议命令时使用 MySQL Server [`wait_timeout`](server-system-variables.html#sysvar_wait_timeout)
    设置。因此，低[`wait_timeout`](server-system-variables.html#sysvar_wait_timeout)设置可能导致长时间运行的远程克隆操作超时。从
    MySQL 8.0.24 开始，克隆空闲超时设置为默认的[`wait_timeout`](server-system-variables.html#sysvar_wait_timeout)设置，即
    28800 秒（8小时）。
