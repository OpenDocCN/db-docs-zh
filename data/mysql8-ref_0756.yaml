- en: 13.3.5 The ENUM Type
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.3.5 ENUM类型
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/enum.html](https://dev.mysql.com/doc/refman/8.0/en/enum.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/enum.html](https://dev.mysql.com/doc/refman/8.0/en/enum.html)
- en: An `ENUM` is a string object with a value chosen from a list of permitted values
    that are enumerated explicitly in the column specification at table creation time.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`ENUM`是一个字符串对象，其值是在表创建时在列规范中明确枚举的允许值列表中选择的。'
- en: See [Section 13.3.1, “String Data Type Syntax”](string-type-syntax.html "13.3.1 String
    Data Type Syntax") for [`ENUM`](enum.html "13.3.5 The ENUM Type") type syntax
    and length limits.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见[第13.3.1节，“字符串数据类型语法”](string-type-syntax.html "13.3.1 字符串数据类型语法")以获取[`ENUM`](enum.html
    "13.3.5 ENUM类型")类型的语法和长度限制。
- en: 'The [`ENUM`](enum.html "13.3.5 The ENUM Type") type has these advantages:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ENUM`](enum.html "13.3.5 ENUM类型")类型具有以下优点：'
- en: Compact data storage in situations where a column has a limited set of possible
    values. The strings you specify as input values are automatically encoded as numbers.
    See [Section 13.7, “Data Type Storage Requirements”](storage-requirements.html
    "13.7 Data Type Storage Requirements") for storage requirements for the `ENUM`
    type.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列具有有限可能值集的情况下紧凑的数据存储。您指定的输入值字符串会自动编码为数字。有关`ENUM`类型的存储要求，请参见[第13.7节，“数据类型存储要求”](storage-requirements.html
    "13.7 数据类型存储要求")。
- en: Readable queries and output. The numbers are translated back to the corresponding
    strings in query results.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可读的查询和输出。数字在查询结果中被翻译回相应的字符串。
- en: 'and these potential issues to consider:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以及需要考虑的潜在问题：
- en: If you make enumeration values that look like numbers, it is easy to mix up
    the literal values with their internal index numbers, as explained in [Enumeration
    Limitations](enum.html#enum-limits "Enumeration Limitations").
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您创建看起来像数字的枚举值，很容易混淆文字值与其内部索引号，如[枚举限制](enum.html#enum-limits "枚举限制")中所解释的那样。
- en: Using `ENUM` columns in `ORDER BY` clauses requires extra care, as explained
    in [Enumeration Sorting](enum.html#enum-sorting "Enumeration Sorting").
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`ORDER BY`子句中使用`ENUM`列需要额外小心，如[枚举排序](enum.html#enum-sorting "枚举排序")中所解释的那样。
- en: '[Creating and Using ENUM Columns](enum.html#enum-using "Creating and Using
    ENUM Columns")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建和使用ENUM列](enum.html#enum-using "创建和使用ENUM列")'
- en: '[Index Values for Enumeration Literals](enum.html#enum-indexes "Index Values
    for Enumeration Literals")'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[枚举文字的索引值](enum.html#enum-indexes "枚举文字的索引值")'
- en: '[Handling of Enumeration Literals](enum.html#enum-literals "Handling of Enumeration
    Literals")'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[枚举文字的处理](enum.html#enum-literals "枚举文字的处理")'
- en: '[Empty or NULL Enumeration Values](enum.html#enum-nulls "Empty or NULL Enumeration
    Values")'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[空或NULL的枚举值](enum.html#enum-nulls "空或NULL的枚举值")'
- en: '[Enumeration Sorting](enum.html#enum-sorting "Enumeration Sorting")'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[枚举排序](enum.html#enum-sorting "枚举排序")'
- en: '[Enumeration Limitations](enum.html#enum-limits "Enumeration Limitations")'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[枚举限制](enum.html#enum-limits "枚举限制")'
- en: Creating and Using ENUM Columns
  id: totrans-16
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建和使用ENUM列
- en: 'An enumeration value must be a quoted string literal. For example, you can
    create a table with an `ENUM` column like this:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举值必须是带引号的字符串文字。例如，您可以像这样创建具有`ENUM`列的表：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Inserting 1 million rows into this table with a value of `'medium'` would require
    1 million bytes of storage, as opposed to 6 million bytes if you stored the actual
    string `'medium'` in a `VARCHAR` column.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 将值为`'medium'`的1百万行插入到此表中将需要1百万字节的存储空间，而如果您将实际字符串`'medium'`存储在`VARCHAR`列中，则需要6百万字节。
- en: Index Values for Enumeration Literals
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 枚举文字的索引值
- en: 'Each enumeration value has an index:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 每个枚举值都有一个索引：
- en: The elements listed in the column specification are assigned index numbers,
    beginning with 1.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列规范中列出的元素被分配索引号，从1开始。
- en: 'The index value of the empty string error value is 0\. This means that you
    can use the following [`SELECT`](select.html "15.2.13 SELECT Statement") statement
    to find rows into which invalid `ENUM` values were assigned:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空字符串错误值的索引值为0。这意味着您可以使用以下[`SELECT`](select.html "15.2.13 SELECT语句")语句查找分配了无效`ENUM`值的行：
- en: '[PRE1]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The index of the `NULL` value is `NULL`.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NULL`值的索引为`NULL`。'
- en: The term “index” here refers to a position within the list of enumeration values.
    It has nothing to do with table indexes.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这里的“索引”术语指的是枚举值列表中的位置。它与表索引无关。
- en: For example, a column specified as `ENUM('Mercury', 'Venus', 'Earth')` can have
    any of the values shown here. The index of each value is also shown.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，指定为`ENUM('Mercury', 'Venus', 'Earth')`的列可以具有此处显示的任何值。每个值的索引也显示在这里。
- en: '| Value | Index |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 值 | 索引 |'
- en: '| `NULL` | `NULL` |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `NULL` | `NULL` |'
- en: '| `''''` | 0 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `''''` | 0 |'
- en: '| `''Mercury''` | 1 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `''水星''` | 1 |'
- en: '| `''Venus''` | 2 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `''金星''` | 2 |'
- en: '| `''Earth''` | 3 |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `''地球''` | 3 |'
- en: An [`ENUM`](enum.html "13.3.5 The ENUM Type") column can have a maximum of 65,535
    distinct elements.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`ENUM`](enum.html "13.3.5 The ENUM Type")列最多可以有65,535个不同的元素。
- en: 'If you retrieve an `ENUM` value in a numeric context, the column value''s index
    is returned. For example, you can retrieve numeric values from an `ENUM` column
    like this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在数值上下文中检索`ENUM`值，则返回列值的索引。例如，可以像这样从`ENUM`列中检索数值：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Functions such as [`SUM()`](aggregate-functions.html#function_sum) or [`AVG()`](aggregate-functions.html#function_avg)
    that expect a numeric argument cast the argument to a number if necessary. For
    `ENUM` values, the index number is used in the calculation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如[`SUM()`](aggregate-functions.html#function_sum)或[`AVG()`](aggregate-functions.html#function_avg)之类的期望数值参数的函数在必要时将参数转换为数字。对于`ENUM`值，索引号用于计算。
- en: Handling of Enumeration Literals
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 处理枚举文字
- en: Trailing spaces are automatically deleted from `ENUM` member values in the table
    definition when a table is created.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建表时，表定义中的`ENUM`成员值的尾随空格会被自动删除。
- en: When retrieved, values stored into an `ENUM` column are displayed using the
    lettercase that was used in the column definition. Note that `ENUM` columns can
    be assigned a character set and collation. For binary or case-sensitive collations,
    lettercase is taken into account when assigning values to the column.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 检索时，存储到`ENUM`列中的值将使用在列定义中使用的大小写形式显示。请注意，`ENUM`列可以分配字符集和排序规则。对于二进制或区分大小写的排序规则，在为列分配值时会考虑大小写形式。
- en: 'If you store a number into an `ENUM` column, the number is treated as the index
    into the possible values, and the value stored is the enumeration member with
    that index. (However, this does *not* work with [`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement"), which treats all input as strings.) If the numeric value is
    quoted, it is still interpreted as an index if there is no matching string in
    the list of enumeration values. For these reasons, it is not advisable to define
    an `ENUM` column with enumeration values that look like numbers, because this
    can easily become confusing. For example, the following column has enumeration
    members with string values of `''0''`, `''1''`, and `''2''`, but numeric index
    values of `1`, `2`, and `3`:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将一个数字存储到一个`ENUM`列中，该数字将被视为可能值的索引，存储的值是具有该索引的枚举成员。（但是，这在[`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement")中*不*起作用，因为它将所有输入视为字符串。）如果将数字值引用起来，如果在枚举值列表中没有匹配的字符串，它仍然被解释为索引。因此，不建议定义一个具有看起来像数字的枚举值的`ENUM`列，因为这很容易变得令人困惑。例如，以下列具有字符串值为`'0'`，`'1'`和`'2'`的枚举成员，但索引值为`1`，`2`和`3`：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If you store `2`, it is interpreted as an index value, and becomes `'1'` (the
    value with index 2). If you store `'2'`, it matches an enumeration value, so it
    is stored as `'2'`. If you store `'3'`, it does not match any enumeration value,
    so it is treated as an index and becomes `'2'` (the value with index 3).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存储`2`，它被解释为索引值，并变为`'1'`（具有索引2的值）。如果存储`'2'`，它匹配一个枚举值，因此存储为`'2'`。如果存储`'3'`，它不匹配任何枚举值，因此被视为索引并变为`'2'`（具有索引3的值）。
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: To determine all possible values for an `ENUM` column, use [`SHOW COLUMNS FROM
    *`tbl_name`* LIKE '*`enum_col`*'`](show-columns.html "15.7.7.5 SHOW COLUMNS Statement")
    and parse the `ENUM` definition in the `Type` column of the output.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定`ENUM`列的所有可能值，请使用[`SHOW COLUMNS FROM *`tbl_name`* LIKE '*`enum_col`*'`](show-columns.html
    "15.7.7.5 SHOW COLUMNS Statement")并解析输出的`Type`列中的`ENUM`定义。
- en: In the C API, `ENUM` values are returned as strings. For information about using
    result set metadata to distinguish them from other strings, see [C API Basic Data
    Structures](/doc/c-api/8.0/en/c-api-data-structures.html).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在C API中，`ENUM`值以字符串形式返回。有关使用结果集元数据将其与其他字符串区分开的信息，请参阅[C API基本数据结构](/doc/c-api/8.0/en/c-api-data-structures.html)。
- en: Empty or NULL Enumeration Values
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 空或NULL枚举值
- en: 'An enumeration value can also be the empty string (`''''`) or `NULL` under
    certain circumstances:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，枚举值也可以是空字符串（`''`）或`NULL`：
- en: If you insert an invalid value into an `ENUM` (that is, a string not present
    in the list of permitted values), the empty string is inserted instead as a special
    error value. This string can be distinguished from a “normal” empty string by
    the fact that this string has the numeric value 0\. See [Index Values for Enumeration
    Literals](enum.html#enum-indexes "Index Values for Enumeration Literals") for
    details about the numeric indexes for the enumeration values.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果向`ENUM`中插入无效值（即不在允许值列表中的字符串），则插入空字符串作为特殊错误值。此字符串可以通过该字符串的数值为0来与“正常”空字符串区分。有关枚举值的数值索引的详细信息，请参阅[枚举文字的索引值](enum.html#enum-indexes
    "枚举文字的索引值")。
- en: If strict SQL mode is enabled, attempts to insert invalid `ENUM` values result
    in an error.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了严格的SQL模式，则尝试插入无效的`ENUM`值会导致错误。
- en: If an `ENUM` column is declared to permit `NULL`, the `NULL` value is a valid
    value for the column, and the default value is `NULL`. If an `ENUM` column is
    declared `NOT NULL`, its default value is the first element of the list of permitted
    values.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果声明`ENUM`列允许`NULL`，则`NULL`值是列的有效值，且默认值为`NULL`。如果声明`ENUM`列为`NOT NULL`，其默认值为允许值列表的第一个元素。
- en: Enumeration Sorting
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 枚举排序
- en: '`ENUM` values are sorted based on their index numbers, which depend on the
    order in which the enumeration members were listed in the column specification.
    For example, `''b''` sorts before `''a''` for `ENUM(''b'', ''a'')`. The empty
    string sorts before nonempty strings, and `NULL` values sort before all other
    enumeration values.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`ENUM`值根据它们的索引号排序，这取决于在列规范中列出枚举成员的顺序。例如，对于`ENUM(''b'', ''a'')`，`''b''`在`''a''`之前排序。空字符串在非空字符串之前排序，`NULL`值在所有其他枚举值之前排序。'
- en: 'To prevent unexpected results when using the `ORDER BY` clause on an `ENUM`
    column, use one of these techniques:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在对`ENUM`列使用`ORDER BY`子句时避免意外结果，请使用以下技术之一：
- en: Specify the `ENUM` list in alphabetic order.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按字母顺序指定`ENUM`列表。
- en: Make sure that the column is sorted lexically rather than by index number by
    coding `ORDER BY CAST(*`col`* AS CHAR)` or `ORDER BY CONCAT(*`col`*)`.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保通过编码`ORDER BY CAST(*`col`* AS CHAR)`或`ORDER BY CONCAT(*`col`*)`对列进行字典排序而不是按索引号排序。
- en: Enumeration Limitations
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 枚举限制
- en: An enumeration value cannot be an expression, even one that evaluates to a string
    value.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举值不能是表达式，即使是评估为字符串值的表达式也不行。
- en: 'For example, this [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement") statement does *not* work because the `CONCAT` function cannot be
    used to construct an enumeration value:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，此[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")语句不起作用，因为`CONCAT`函数不能用于构造枚举值：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You also cannot employ a user variable as an enumeration value. This pair of
    statements do *not* work:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您也不能将用户变量用作枚举值。这对语句不起作用：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We strongly recommend that you do *not* use numbers as enumeration values, because
    it does not save on storage over the appropriate [`TINYINT`](integer-types.html
    "13.1.2 Integer Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT,
    BIGINT") or [`SMALLINT`](integer-types.html "13.1.2 Integer Types (Exact Value)
    - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT") type, and it is easy to
    mix up the strings and the underlying number values (which might not be the same)
    if you quote the `ENUM` values incorrectly. If you do use a number as an enumeration
    value, always enclose it in quotation marks. If the quotation marks are omitted,
    the number is regarded as an index. See [Handling of Enumeration Literals](enum.html#enum-literals
    "Handling of Enumeration Literals") to see how even a quoted number could be mistakenly
    used as a numeric index value.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议*不要*将数字用作枚举值，因为它不会节省适当[`TINYINT`](integer-types.html "13.1.2 整数类型（精确值）
    - INTEGER、INT、SMALLINT、TINYINT、MEDIUMINT、BIGINT")或[`SMALLINT`](integer-types.html
    "13.1.2 整数类型（精确值） - INTEGER、INT、SMALLINT、TINYINT、MEDIUMINT、BIGINT")类型的存储空间，并且如果错误引用`ENUM`值，很容易混淆字符串和底层数值（可能不同）。如果将数字用作枚举值，请始终将其括在引号中。如果省略引号，则该数字被视为索引。请参阅[枚举文字的处理](enum.html#enum-literals
    "枚举文字的处理")以查看即使引用的数字也可能被错误地用作数值索引值的情况。
- en: Duplicate values in the definition cause a warning, or an error if strict SQL
    mode is enabled.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 定义中的重复值会导致警告，如果启用了严格的SQL模式，则会导致错误。
