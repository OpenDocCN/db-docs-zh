- en: 15.2.16 TABLE Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.2.16 TABLE语句
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/table.html](https://dev.mysql.com/doc/refman/8.0/en/table.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/table.html](https://dev.mysql.com/doc/refman/8.0/en/table.html)
- en: '`TABLE` is a DML statement introduced in MySQL 8.0.19 which returns rows and
    columns of the named table.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`TABLE`是MySQL 8.0.19中引入的DML语句，返回命名表的行和列。'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `TABLE` statement in some ways acts like [`SELECT`](select.html "15.2.13 SELECT
    Statement"). Given the existence of a table named `t`, the following two statements
    produce identical output:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`TABLE`语句在某些方面类似于[`SELECT`](select.html "15.2.13 SELECT语句")。给定名为`t`的表存在，以下两个语句产生相同的输出：'
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can order and limit the number of rows produced by `TABLE` using `ORDER
    BY` and `LIMIT` clauses, respectively. These function identically to the same
    clauses when used with `SELECT` (including an optional `OFFSET` clause with `LIMIT`),
    as you can see here:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`ORDER BY`和`LIMIT`子句对`TABLE`生成的行数进行排序和限制。这些与在`SELECT`中使用相同的子句完全相同（包括与`LIMIT`一起使用的可选`OFFSET`子句），如下所示：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`TABLE` differs from `SELECT` in two key respects:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`TABLE`在两个关键方面与`SELECT`不同：'
- en: '`TABLE` always displays all columns of the table.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TABLE`总是显示表的所有列。'
- en: '*Exception*: The output of `TABLE` does *not* include invisible columns. See
    [Section 15.1.20.10, “Invisible Columns”](invisible-columns.html "15.1.20.10 Invisible
    Columns").'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*例外*：`TABLE`的输出*不*包括不可见列。查看[第15.1.20.10节，“不可见列”](invisible-columns.html "15.1.20.10 不可见列")。'
- en: '`TABLE` does not allow for any arbitrary filtering of rows; that is, `TABLE`
    does not support any `WHERE` clause.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TABLE`不允许对行进行任意过滤；也就是说，`TABLE`不支持任何`WHERE`子句。'
- en: For limiting which table columns are returned, filtering rows beyond what can
    be accomplished using `ORDER BY` and `LIMIT`, or both, use `SELECT`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了限制返回的表列，过滤超出`ORDER BY`和`LIMIT`所能实现的行，或两者都使用，使用`SELECT`。
- en: '`TABLE` can be used with temporary tables.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`TABLE`可以与临时表一起使用。'
- en: '`TABLE` can also be used in place of `SELECT` in a number of other constructs,
    including those listed here:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`TABLE`也可以用于取代`SELECT`在许多其他结构中，包括以下列出的结构：'
- en: 'With set operators such as [`UNION`](union.html "15.2.18 UNION Clause"), as
    shown here:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用诸如[`UNION`](union.html "15.2.18 UNION子句")之类的集合运算符，如下所示：
- en: '[PRE3]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The [`UNION`](union.html "15.2.18 UNION Clause") just shown is equivalent to
    the following statement:'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 刚刚显示的[`UNION`](union.html "15.2.18 UNION子句")等效于以下语句：
- en: '[PRE4]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`TABLE` can also be used together in set operations with `SELECT` statements,
    [`VALUES`](values.html "15.2.19 VALUES Statement") statements, or both. See [Section 15.2.18,
    “UNION Clause”](union.html "15.2.18 UNION Clause"), [Section 15.2.4, “EXCEPT Clause”](except.html
    "15.2.4 EXCEPT Clause"), and [Section 15.2.8, “INTERSECT Clause”](intersect.html
    "15.2.8 INTERSECT Clause"), for more information and examples. See also [Section 15.2.14,
    “Set Operations with UNION, INTERSECT, and EXCEPT”](set-operations.html "15.2.14 Set
    Operations with UNION, INTERSECT, and EXCEPT").'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`TABLE`还可以与`SELECT`语句、[`VALUES`](values.html "15.2.19 VALUES语句")语句或两者一起在集合操作中使用。查看[第15.2.18节，“UNION子句”](union.html
    "15.2.18 UNION子句")、[第15.2.4节，“EXCEPT子句”](except.html "15.2.4 EXCEPT子句")和[第15.2.8节，“INTERSECT子句”](intersect.html
    "15.2.8 INTERSECT子句")，获取更多信息和示例。另请参阅[第15.2.14节，“使用UNION、INTERSECT和EXCEPT的集合操作”](set-operations.html
    "15.2.14 使用UNION、INTERSECT和EXCEPT的集合操作")。'
- en: With `INTO` to populate user variables, and with `INTO OUTFILE` or `INTO DUMPFILE`
    to write table data to a file. See [Section 15.2.13.1, “SELECT ... INTO Statement”](select-into.html
    "15.2.13.1 SELECT ... INTO Statement"), for more specific information and examples.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`INTO`填充用户变量，并使用`INTO OUTFILE`或`INTO DUMPFILE`将表数据写入文件。查看[第15.2.13.1节，“SELECT
    ... INTO语句”](select-into.html "15.2.13.1 SELECT ... INTO语句")，获取更具体的信息和示例。
- en: 'In many cases where you can employ subqueries. Given any table `t1` with a
    column named `a`, and a second table `t2` having a single column, statements such
    as the following are possible:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在许多情况下，您可以使用子查询。给定具有名为`a`的列的任何表`t1`，以及具有单列的第二个表`t2`，以下语句是可能的：
- en: '[PRE5]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Assuming that the single column of table `t1` is named `x`, the preceding is
    equivalent to each of the statements shown here (and produces exactly the same
    result in either case):'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设表`t1`的单列命名为`x`，前述与以下各语句等效（在任一情况下产生完全相同的结果）：
- en: '[PRE6]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: See [Section 15.2.15, “Subqueries”](subqueries.html "15.2.15 Subqueries"), for
    more information.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看[第15.2.15节，“子查询”](subqueries.html "15.2.15 子查询")，获取更多信息。
- en: With [`INSERT`](insert.html "15.2.7 INSERT Statement") and [`REPLACE`](replace.html
    "15.2.12 REPLACE Statement") statements, where you would otherwise use [`SELECT
    *`](select.html "15.2.13 SELECT Statement"). See [Section 15.2.7.1, “INSERT ...
    SELECT Statement”](insert-select.html "15.2.7.1 INSERT ... SELECT Statement"),
    for more information and examples.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`INSERT`](insert.html "15.2.7 INSERT 语句")和[`REPLACE`](replace.html "15.2.12 REPLACE
    语句")语句中，您原本会使用[`SELECT *`](select.html "15.2.13 SELECT 语句")。有关更多信息和示例，请参阅[第 15.2.7.1
    节，“INSERT ... SELECT 语句”](insert-select.html "15.2.7.1 INSERT ... SELECT 语句")。
- en: '[`TABLE`](table.html "15.2.16 TABLE Statement") can also be used in many cases
    in place of the [`SELECT`](select.html "15.2.13 SELECT Statement") in [`CREATE
    TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE TABLE ... SELECT
    Statement") or [`CREATE VIEW ... SELECT`](create-view.html "15.1.23 CREATE VIEW
    Statement"). See the descriptions of these statements for more information and
    examples.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TABLE`](table.html "15.2.16 TABLE 语句")在许多情况下也可以代替[`SELECT`](select.html "15.2.13 SELECT
    语句")在[`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE TABLE
    ... SELECT 语句")或[`CREATE VIEW ... SELECT`](create-view.html "15.1.23 CREATE VIEW
    语句")中使用。有关这些语句的更多信息和示例，请参阅其描述。'
