- en: 14.16.12 Spatial Aggregate Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.16.12 空间聚合函数
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/spatial-aggregate-functions.html](https://dev.mysql.com/doc/refman/8.0/en/spatial-aggregate-functions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://dev.mysql.com/doc/refman/8.0/en/spatial-aggregate-functions.html](https://dev.mysql.com/doc/refman/8.0/en/spatial-aggregate-functions.html)'
- en: MySQL supports aggregate functions that perform a calculation on a set of values.
    For general information about these functions, see [Section 14.19.1, “Aggregate
    Function Descriptions”](aggregate-functions.html "14.19.1 Aggregate Function Descriptions").
    This section describes the [`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)
    spatial aggregate function.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持对一组值执行计算的聚合函数。有关这些函数的一般信息，请参见[第14.19.1节，“聚合函数描述”](aggregate-functions.html
    "14.19.1 聚合函数描述")。本节描述了[`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)空间聚合函数。
- en: '[`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect) can
    be used as a window function, as signified in its syntax description by `[*`over_clause`*]`,
    representing an optional `OVER` clause. *`over_clause`* is described in [Section 14.20.2,
    “Window Function Concepts and Syntax”](window-functions-usage.html "14.20.2 Window
    Function Concepts and Syntax"), which also includes other information about window
    function usage.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)可以作为窗口函数使用，如其语法描述中的`[*`over_clause`*]`所示，表示可选的`OVER`子句。*`over_clause`*在[第14.20.2节，“窗口函数概念和语法”](window-functions-usage.html
    "14.20.2 窗口函数概念和语法")中描述，该节还包括有关窗口函数使用的其他信息。'
- en: '[`ST_Collect([DISTINCT] *`g`*) [*`over_clause`*]`](spatial-aggregate-functions.html#function_st-collect)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ST_Collect([DISTINCT] *`g`*) [*`over_clause`*]`](spatial-aggregate-functions.html#function_st-collect)'
- en: Aggregates geometry values and returns a single geometry collection value. With
    the `DISTINCT` option, returns the aggregation of the distinct geometry arguments.
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 聚合几何值并返回单个几何集合值。使用`DISTINCT`选项，返回不同几何参数的聚合。
- en: As with other aggregate functions, `GROUP BY` may be used to group arguments
    into subsets. [`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)
    returns an aggregate value for each subset.
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与其他聚合函数一样，可以使用`GROUP BY`将参数分组为子集。[`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)为每个子集返回一个聚合值。
- en: This function executes as a window function if *`over_clause`* is present. *`over_clause`*
    is as described in [Section 14.20.2, “Window Function Concepts and Syntax”](window-functions-usage.html
    "14.20.2 Window Function Concepts and Syntax"). In contrast to most aggregate
    functions that support windowing, [`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)
    permits use of *`over_clause`* together with `DISTINCT`.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`over_clause`*存在，则此函数将作为窗口函数执行。*`over_clause`*如[第14.20.2节，“窗口函数概念和语法”](window-functions-usage.html
    "14.20.2 窗口函数概念和语法")中描述的那样。与大多数支持窗口化的聚合函数不同，[`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)允许将*`over_clause`*与`DISTINCT`一起使用。
- en: '[`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect) handles
    its arguments as follows:'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)处理其参数如下：'
- en: '`NULL` arguments are ignored.'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NULL`参数将被忽略。'
- en: If all arguments are `NULL` or the aggregate result is empty, the return value
    is `NULL`.
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果所有参数都为`NULL`或聚合结果为空，则返回值为`NULL`。
- en: If any geometry argument is not a syntactically well-formed geometry, an [`ER_GIS_INVALID_DATA`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_gis_invalid_data)
    error occurs.
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果任何几何参数不是语法上良好形式的几何图形，则会发生[`ER_GIS_INVALID_DATA`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_gis_invalid_data)错误。
- en: If any geometry argument is a syntactically well-formed geometry in an undefined
    spatial reference system (SRS), an [`ER_SRS_NOT_FOUND`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_srs_not_found)
    error occurs.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果任何几何参数是在未定义的空间参考系统（SRS）中为语法上良好形式的几何图形，则会发生[`ER_SRS_NOT_FOUND`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_srs_not_found)错误。
- en: If there are multiple geometry arguments and those arguments are in the same
    SRS, the return value is in that SRS. If those arguments are not in the same SRS,
    an [`ER_GIS_DIFFERENT_SRIDS_AGGREGATION`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_gis_different_srids_aggregation)
    error occurs.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果存在多个几何参数且这些参数在相同的SRS中，则返回值也将在该SRS中。如果这些参数不在相同的SRS中，则会发生[`ER_GIS_DIFFERENT_SRIDS_AGGREGATION`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_gis_different_srids_aggregation)错误。
- en: 'The result is the narrowest `Multi*`Xxx`*` or `GeometryCollection` value possible,
    with the result type determined from the non-`NULL` geometry arguments as follows:'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果是可能的最窄的`Multi*`Xxx`*`或`GeometryCollection`值，结果类型根据非`NULL`几何参数确定如下：
- en: If all arguments are `Point` values, the result is a `MultiPoint` value.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果所有参数都是`Point`值，则结果是一个`MultiPoint`值。
- en: If all arguments are `LineString` values, the result is a `MultiLineString`
    value.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果所有参数都是`LineString`值，则结果是一个`MultiLineString`值。
- en: If all arguments are `Polygon` values, the result is a `MultiPolygon` value.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果所有参数都是`Polygon`值，则结果是一个`MultiPolygon`值。
- en: Otherwise, the arguments are a mix of geometry types and the result is a `GeometryCollection`
    value.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，参数是几何类型的混合，结果是一个`GeometryCollection`值。
- en: 'This example data set shows hypothetical products by year and location of manufacture:'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个示例数据集展示了假设产品按年份和制造地点的情况：
- en: '[PRE0]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Some sample queries using [`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)
    on the data set:'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些使用[`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect)在数据集上的示例查询：
- en: '[PRE1]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This function was added in MySQL 8.0.24.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数在MySQL 8.0.24中添加。
