- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/xa-states.html](https://dev.mysql.com/doc/refman/8.0/en/xa-states.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/xa-states.html](https://dev.mysql.com/doc/refman/8.0/en/xa-states.html)
- en: 15.3.8.2 XA Transaction States
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.3.8.2 XA 事务状态
- en: 'An XA transaction progresses through the following states:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 XA 事务会经历以下状态：
- en: Use [`XA START`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements")
    to start an XA transaction and put it in the `ACTIVE` state.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 [`XA START`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements")
    来启动一个XA事务并将其置于 `ACTIVE` 状态。
- en: For an `ACTIVE` XA transaction, issue the SQL statements that make up the transaction,
    and then issue an [`XA END`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements")
    statement. [`XA END`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements")
    puts the transaction in the `IDLE` state.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于一个 `ACTIVE` 的XA事务，发出构成事务的SQL语句，然后发出 [`XA END`](xa-statements.html "15.3.8.1 XA
    Transaction SQL Statements") 语句。[`XA END`](xa-statements.html "15.3.8.1 XA Transaction
    SQL Statements") 将事务置于 `IDLE` 状态。
- en: 'For an `IDLE` XA transaction, you can issue either an [`XA PREPARE`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements") statement or an `XA COMMIT ... ONE PHASE`
    statement:'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于一个 `IDLE` 的XA事务，可以发出 [`XA PREPARE`](xa-statements.html "15.3.8.1 XA Transaction
    SQL Statements") 语句或 `XA COMMIT ... ONE PHASE` 语句：
- en: '[`XA PREPARE`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements")
    puts the transaction in the `PREPARED` state. An [`XA RECOVER`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements") statement at this point includes the
    transaction''s *`xid`* value in its output, because [`XA RECOVER`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements") lists all XA transactions that are in
    the `PREPARED` state.'
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`XA PREPARE`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements")
    将事务置于 `PREPARED` 状态。此时，[`XA RECOVER`](xa-statements.html "15.3.8.1 XA Transaction
    SQL Statements") 语句会在输出中包含事务的 *`xid`* 值，因为 [`XA RECOVER`](xa-statements.html "15.3.8.1 XA
    Transaction SQL Statements") 列出所有处于 `PREPARED` 状态的XA事务。'
- en: '`XA COMMIT ... ONE PHASE` prepares and commits the transaction. The *`xid`*
    value is not listed by [`XA RECOVER`](xa-statements.html "15.3.8.1 XA Transaction
    SQL Statements") because the transaction terminates.'
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`XA COMMIT ... ONE PHASE` 准备并提交事务。*`xid`* 值不会被 [`XA RECOVER`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements") 列出，因为事务已经终止。'
- en: For a `PREPARED` XA transaction, you can issue an [`XA COMMIT`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements") statement to commit and terminate the
    transaction, or [`XA ROLLBACK`](xa-statements.html "15.3.8.1 XA Transaction SQL
    Statements") to roll back and terminate the transaction.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于一个 `PREPARED` 的XA事务，可以发出 [`XA COMMIT`](xa-statements.html "15.3.8.1 XA Transaction
    SQL Statements") 语句来提交并终止事务，或者发出 [`XA ROLLBACK`](xa-statements.html "15.3.8.1 XA
    Transaction SQL Statements") 来回滚并终止事务。
- en: 'Here is a simple XA transaction that inserts a row into a table as part of
    a global transaction:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个简单的 XA 事务，作为全局事务的一部分向表中插入一行：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In MySQL 8.0.28 and earlier, within the context of a given client connection,
    XA transactions and local (non-XA) transactions are mutually exclusive. For example,
    if [`XA START`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements") has
    been issued to begin an XA transaction, a local transaction cannot be started
    until the XA transaction has been committed or rolled back. Conversely, if a local
    transaction has been started with [`START TRANSACTION`](commit.html "15.3.1 START
    TRANSACTION, COMMIT, and ROLLBACK Statements"), no XA statements can be used until
    the transaction has been committed or rolled back.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.28 及更早版本中，在给定客户端连接的上下文中，XA 事务和本地（非XA）事务是互斥的。例如，如果已经发出 [`XA START`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements") 来开始一个XA事务，那么在XA事务提交或回滚之前不能启动本地事务。反之，如果已经使用
    [`START TRANSACTION`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK
    Statements") 开始了本地事务，那么在事务提交或回滚之前不能使用XA语句。
- en: MySQL 8.0.29 and later supports detached XA transactions, enabled by the [`xa_detach_on_prepare`](server-system-variables.html#sysvar_xa_detach_on_prepare)
    system variable (`ON` by default). Detached transactions are disconnected from
    the current session following execution of [`XA PREPARE`](xa-statements.html "15.3.8.1 XA
    Transaction SQL Statements") (and can be committed or rolled back by another connection).
    This means that the current session is free to start a new local transaction or
    XA transaction without having to wait for the prepared XA transaction to be committed
    or rolled back.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8.0.29及更高版本支持分离的XA事务，通过[`xa_detach_on_prepare`](server-system-variables.html#sysvar_xa_detach_on_prepare)系统变量启用（默认为`ON`）。分离的事务在执行[`XA
    PREPARE`](xa-statements.html "15.3.8.1 XA事务SQL语句")后与当前会话断开连接（可以由另一个连接提交或回滚）。这意味着当前会话可以自由开始新的本地事务或XA事务，而无需等待准备的XA事务被提交或回滚。
- en: When XA transactions are detached, a connection has no special knowledge of
    any XA transaction that it has prepared. If the current session tries to commit
    or roll back a given XA transaction (even one which it prepared) after another
    connection has already done so, the attempt is rejected with an invalid XID error
    ([`ER_XAER_NOTA`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_xaer_nota))
    since the requested *`xid`* no longer exists.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当XA事务被分离时，一个连接对其准备的任何XA事务没有特殊知识。如果当前会话尝试提交或回滚给定的XA事务（即使是它准备的），在另一个连接已经这样做之后，请求将被拒绝，并显示无效的XID错误（[`ER_XAER_NOTA`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_xaer_nota)），因为请求的*`xid`*不再存在。
- en: Note
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Detached XA transactions cannot use temporary tables.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 分离的XA事务不能使用临时表。
- en: When detached XA transactions are disabled (`xa_detach_on_prepare` set to `OFF`),
    an XA transaction remains connected until it is committed or rolled back by the
    originating connection, as described previously for MySQL 8.0.28 and earlier.
    Disabling detached XA transactions is not recommended for a MySQL server instance
    used in group replication; see [Server Instance Configuration](group-replication-requirements.html#group-replication-configuration
    "Server Instance Configuration"), for more information.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当禁用分离的XA事务（`xa_detach_on_prepare`设置为`OFF`）时，一个XA事务会保持连接，直到由发起连接提交或回滚，就像之前描述的MySQL
    8.0.28及更早版本一样。不建议为用于组复制的MySQL服务器实例禁用分离的XA事务；有关更多信息，请参阅[服务器实例配置](group-replication-requirements.html#group-replication-configuration
    "服务器实例配置")。
- en: 'If an XA transaction is in the `ACTIVE` state, you cannot issue any statements
    that cause an implicit commit. That would violate the XA contract because you
    could not roll back the XA transaction. Trying to execute such a statement raises
    the following error:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个XA事务处于`ACTIVE`状态，你不能发出任何导致隐式提交的语句。这将违反XA协议，因为你无法回滚XA事务。尝试执行这样的语句会引发以下错误：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Statements to which the preceding remark applies are listed at [Section 15.3.3,
    “Statements That Cause an Implicit Commit”](implicit-commit.html "15.3.3 Statements
    That Cause an Implicit Commit").
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 适用于前述备注的语句列在[第15.3.3节，“导致隐式提交的语句”](implicit-commit.html "15.3.3 导致隐式提交的语句")中。
