- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/show-index.html](https://dev.mysql.com/doc/refman/8.0/en/show-index.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/show-index.html](https://dev.mysql.com/doc/refman/8.0/en/show-index.html)
- en: 15.7.7.22 SHOW INDEX Statement
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.7.7.22 显示索引语句
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[`SHOW INDEX`](show-index.html "15.7.7.22 SHOW INDEX Statement") returns table
    index information. The format resembles that of the `SQLStatistics` call in ODBC.
    This statement requires some privilege for any column in the table.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`显示索引`](show-index.html "15.7.7.22 SHOW INDEX Statement")返回表索引信息。格式类似于ODBC中的`SQLStatistics`调用。此语句对表中的任何列都需要一些特权。'
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'An alternative to `*`tbl_name`* FROM *`db_name`*` syntax is *`db_name`*.*`tbl_name`*.
    These two statements are equivalent:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 作为`*`tbl_name`* FROM *`db_name`*`语法的替代方案是*`db_name`*.*`tbl_name`*。这两个语句是等效的：
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The optional `EXTENDED` keyword causes the output to include information about
    hidden indexes that MySQL uses internally and are not accessible by users.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的`EXTENDED`关键字导致输出包括MySQL内部使用但用户无法访问的隐藏索引的信息。
- en: The `WHERE` clause can be given to select rows using more general conditions,
    as discussed in [Section 28.8, “Extensions to SHOW Statements”](extended-show.html
    "28.8 Extensions to SHOW Statements").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`WHERE`子句选择使用更一般条件的行，如[第28.8节“SHOW语句的扩展”](extended-show.html "28.8 Extensions
    to SHOW Statements")中所讨论的。
- en: '[`SHOW INDEX`](show-index.html "15.7.7.22 SHOW INDEX Statement") returns the
    following fields:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[`显示索引`](show-index.html "15.7.7.22 SHOW INDEX Statement")返回以下字段：'
- en: '`Table`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`表`'
- en: The name of the table.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表的名称。
- en: '`Non_unique`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`非唯一`'
- en: 0 if the index cannot contain duplicates, 1 if it can.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果索引不能包含重复项，则为0，如果可以，则为1。
- en: '`Key_name`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`键名`'
- en: The name of the index. If the index is the primary key, the name is always `PRIMARY`.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引的名称。如果索引是主键，则名称始终为`PRIMARY`。
- en: '`Seq_in_index`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Seq_in_index`'
- en: The column sequence number in the index, starting with 1.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引中的列序号，从1开始。
- en: '`Column_name`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`列名`'
- en: The column name. See also the description for the `Expression` column.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列名。另请参阅`Expression`列的描述。
- en: '`Collation`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`排序规则`'
- en: How the column is sorted in the index. This can have values `A` (ascending),
    `D` (descending), or `NULL` (not sorted).
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列在索引中的排序方式。这可以是`A`（升序）、`D`（降序）或`NULL`（未排序）的值。
- en: '`Cardinality`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`基数`'
- en: An estimate of the number of unique values in the index. To update this number,
    run [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement") or
    (for `MyISAM` tables) [**myisamchk -a**](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility").
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引中唯一值的估计数量。要更新此数字，请运行[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement")或（对于`MyISAM`表）[**myisamchk -a**](myisamchk.html "6.6.4 myisamchk
    — MyISAM Table-Maintenance Utility")。
- en: '`Cardinality` is counted based on statistics stored as integers, so the value
    is not necessarily exact even for small tables. The higher the cardinality, the
    greater the chance that MySQL uses the index when doing joins.'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`基数`是根据存储为整数的统计数据计算的，因此即使对于小表，该值也不一定是精确的。基数越高，MySQL在执行连接时使用索引的可能性就越大。'
- en: '`Sub_part`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`子部分`'
- en: The index prefix. That is, the number of indexed characters if the column is
    only partly indexed, `NULL` if the entire column is indexed.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引前缀。也就是，如果列仅部分索引，则索引字符数，如果整个列被索引，则为`NULL`。
- en: Note
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Prefix *limits* are measured in bytes. However, prefix *lengths* for index specifications
    in [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement"), [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement"), and [`CREATE INDEX`](create-index.html
    "15.1.15 CREATE INDEX Statement") statements are interpreted as number of characters
    for nonbinary string types ([`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types"),
    [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types"), [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")) and number of bytes for binary string types
    ([`BINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY Types"), [`VARBINARY`](binary-varbinary.html
    "13.3.3 The BINARY and VARBINARY Types"), [`BLOB`](blob.html "13.3.4 The BLOB
    and TEXT Types")). Take this into account when specifying a prefix length for
    a nonbinary string column that uses a multibyte character set.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前缀*限制*以字节为单位。但是，在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")、[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")和[`CREATE INDEX`](create-index.html
    "15.1.15 CREATE INDEX Statement")语句中的索引规范中，对于非二进制字符串类型（[`CHAR`](char.html "13.3.2 The
    CHAR and VARCHAR Types")、[`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types")、[`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")），解释为字符数，对于二进制字符串类型（[`BINARY`](binary-varbinary.html
    "13.3.3 The BINARY and VARBINARY Types")、[`VARBINARY`](binary-varbinary.html "13.3.3 The
    BINARY and VARBINARY Types")、[`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")），解释为字节数。在为使用多字节字符集的非二进制字符串列指定前缀长度时，请考虑这一点。
- en: For additional information about index prefixes, see [Section 10.3.5, “Column
    Indexes”](column-indexes.html "10.3.5 Column Indexes"), and [Section 15.1.15,
    “CREATE INDEX Statement”](create-index.html "15.1.15 CREATE INDEX Statement").
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关索引前缀的其他信息，请参见[第10.3.5节，“列索引”](column-indexes.html "10.3.5 Column Indexes")和[第15.1.15节，“CREATE
    INDEX Statement”](create-index.html "15.1.15 CREATE INDEX Statement")。
- en: '`Packed`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Packed`'
- en: Indicates how the key is packed. `NULL` if it is not.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指示键是如何打包的。如果不是，则为`NULL`。
- en: '`Null`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Null`'
- en: Contains `YES` if the column may contain `NULL` values and `''` if not.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含`YES`表示列可能包含`NULL`值，`''`表示不包含。
- en: '`Index_type`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index_type`'
- en: The index method used (`BTREE`, `FULLTEXT`, `HASH`, `RTREE`).
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用的索引方法（`BTREE`、`FULLTEXT`、`HASH`、`RTREE`）。
- en: '`Comment`'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Comment`'
- en: Information about the index not described in its own column, such as `disabled`
    if the index is disabled.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关索引未在其自己的列中描述的信息，例如如果索引已禁用，则为`disabled`。
- en: '`Index_comment`'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index_comment`'
- en: Any comment provided for the index with a `COMMENT` attribute when the index
    was created.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在创建索引时使用`COMMENT`属性提供的任何注释。
- en: '`Visible`'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Visible`'
- en: Whether the index is visible to the optimizer. See [Section 10.3.12, “Invisible
    Indexes”](invisible-indexes.html "10.3.12 Invisible Indexes").
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引是否对优化器可见。请参见[第10.3.12节，“不可见索引”](invisible-indexes.html "10.3.12 Invisible
    Indexes")。
- en: '`Expression`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Expression`'
- en: 'MySQL 8.0.13 and higher supports functional key parts (see [Functional Key
    Parts](create-index.html#create-index-functional-key-parts "Functional Key Parts")),
    which affects both the `Column_name` and `Expression` columns:'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL 8.0.13及更高版本支持功能键部分（参见[功能键部分](create-index.html#create-index-functional-key-parts
    "Functional Key Parts"）），这影响了`Column_name`和`Expression`列：
- en: For a nonfunctional key part, `Column_name` indicates the column indexed by
    the key part and `Expression` is `NULL`.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于非功能键部分，`Column_name`表示由键部分索引的列，`Expression`为`NULL`。
- en: For a functional key part, `Column_name` column is `NULL` and `Expression` indicates
    the expression for the key part.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于功能键部分，`Column_name`列为`NULL`，`Expression`表示键部分的表���式。
- en: Information about table indexes is also available from the `INFORMATION_SCHEMA`
    [`STATISTICS`](information-schema-statistics-table.html "28.3.34 The INFORMATION_SCHEMA
    STATISTICS Table") table. See [Section 28.3.34, “The INFORMATION_SCHEMA STATISTICS
    Table”](information-schema-statistics-table.html "28.3.34 The INFORMATION_SCHEMA
    STATISTICS Table"). The extended information about hidden indexes is available
    only using `SHOW EXTENDED INDEX`; it cannot be obtained from the [`STATISTICS`](information-schema-statistics-table.html
    "28.3.34 The INFORMATION_SCHEMA STATISTICS Table") table.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 表索引的信息也可以从`INFORMATION_SCHEMA`的[`STATISTICS`](information-schema-statistics-table.html
    "28.3.34 The INFORMATION_SCHEMA STATISTICS Table")表中获取。请参见[第28.3.34节，“INFORMATION_SCHEMA
    STATISTICS Table”](information-schema-statistics-table.html "28.3.34 The INFORMATION_SCHEMA
    STATISTICS Table")。有关隐藏索引的扩展信息仅可使用`SHOW EXTENDED INDEX`获得；无法从[`STATISTICS`](information-schema-statistics-table.html
    "28.3.34 The INFORMATION_SCHEMA STATISTICS Table")表中获取。
- en: You can list a table's indexes with the [**mysqlshow -k *`db_name`* *`tbl_name`***](mysqlshow.html
    "6.5.7 mysqlshow — Display Database, Table, and Column Information") command.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[**mysqlshow -k *`db_name`* *`tbl_name`***](mysqlshow.html "6.5.7 mysqlshow
    — Display Database, Table, and Column Information")命令列出表的索引。
- en: In MySQL 8.0.30 and later, `SHOW INDEX` includes the table's generated invisible
    key, if it has one, by default. You can cause this information to be suppressed
    in the statement's output by setting [`show_gipk_in_create_table_and_information_schema
    = OFF`](server-system-variables.html#sysvar_show_gipk_in_create_table_and_information_schema).
    For more information, see [Section 15.1.20.11, “Generated Invisible Primary Keys”](create-table-gipks.html
    "15.1.20.11 Generated Invisible Primary Keys").
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.30 及更高版本中，默认情况下，`SHOW INDEX` 包括表的生成的不可见键。您可以通过设置[`show_gipk_in_create_table_and_information_schema
    = OFF`](server-system-variables.html#sysvar_show_gipk_in_create_table_and_information_schema)来抑制该信息在语句输出中的显示。更多信息，请参见[Section 15.1.20.11,
    “Generated Invisible Primary Keys”](create-table-gipks.html "15.1.20.11 Generated
    Invisible Primary Keys")。
