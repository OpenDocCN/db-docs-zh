- en: 9.2 Database Backup Methods
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9.2 数据库备份方法
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/backup-methods.html](https://dev.mysql.com/doc/refman/8.0/en/backup-methods.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/backup-methods.html](https://dev.mysql.com/doc/refman/8.0/en/backup-methods.html)
- en: This section summarizes some general methods for making backups.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分总结了一些制作备份的一般方法。
- en: Making a Hot Backup with MySQL Enterprise Backup
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用MySQL企业备份进行热备份
- en: Customers of MySQL Enterprise Edition can use the [MySQL Enterprise Backup](glossary.html#glos_mysql_enterprise_backup
    "MySQL Enterprise Backup") product to do [physical](glossary.html#glos_physical
    "physical") backups of entire instances or selected databases, tables, or both.
    This product includes features for [incremental](glossary.html#glos_incremental_backup
    "incremental backup") and [compressed](glossary.html#glos_compressed_backup "compressed
    backup") backups. Backing up the physical database files makes restore much faster
    than logical techniques such as the `mysqldump` command. `InnoDB` tables are copied
    using a [hot backup](glossary.html#glos_hot_backup "hot backup") mechanism. (Ideally,
    the `InnoDB` tables should represent a substantial majority of the data.) Tables
    from other storage engines are copied using a [warm backup](glossary.html#glos_warm_backup
    "warm backup") mechanism. For an overview of the MySQL Enterprise Backup product,
    see [Section 32.1, “MySQL Enterprise Backup Overview”](mysql-enterprise-backup.html
    "32.1 MySQL Enterprise Backup Overview").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL企业版的客户可以使用[MySQL企业备份](glossary.html#glos_mysql_enterprise_backup "MySQL
    Enterprise Backup")产品对整个实例或选定的数据库、表或两者进行[物理](glossary.html#glos_physical "物理")备份。该产品包括增量备份和压缩备份的功能。备份物理数据库文件比逻辑技术（如`mysqldump`命令）快得多。`InnoDB`表使用[热备份](glossary.html#glos_hot_backup
    "热备份")机制进行复制。（理想情况下，`InnoDB`表应该占据大部分数据。）其他存储引擎的表使用[温备份](glossary.html#glos_warm_backup
    "温备份")机制进行复制。有关MySQL企业备份产品的概述，请参见[第32.1节，“MySQL企业备份概述”](mysql-enterprise-backup.html
    "32.1 MySQL企业备份概述")。
- en: Making Backups with mysqldump
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用mysqldump进行备份
- en: The [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")
    program can make backups. It can back up all kinds of tables. (See [Section 9.4,
    “Using mysqldump for Backups”](using-mysqldump.html "9.4 Using mysqldump for Backups").)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")程序可以进行备份。它可以备份所有类型的表。（参见[第9.4节，“使用mysqldump进行备份”](using-mysqldump.html
    "9.4 使用mysqldump进行备份")。）'
- en: For `InnoDB` tables, it is possible to perform an online backup that takes no
    locks on tables using the [`--single-transaction`](mysqldump.html#option_mysqldump_single-transaction)
    option to [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program"). See [Section 9.3.1, “Establishing a Backup Policy”](backup-policy.html
    "9.3.1 Establishing a Backup Policy").
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`InnoDB`表，可以使用[`--single-transaction`](mysqldump.html#option_mysqldump_single-transaction)选项在不锁定表的情况下执行在线备份，使用[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")。参见[第9.3.1节，“建立备份策略”](backup-policy.html
    "9.3.1 建立备份策略")。
- en: Making Backups by Copying Table Files
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过复制表文件进行备份
- en: 'MyISAM tables can be backed up by copying table files (`*.MYD`, `*.MYI` files,
    and associated `*.sdi` files). To get a consistent backup, stop the server or
    lock and flush the relevant tables:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过复制表文件（`*.MYD`、`*.MYI`文件和相关的`*.sdi`文件）备份MyISAM表。为了获得一致的备份，停止服务器或锁定并刷新相关表：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You need only a read lock; this enables other clients to continue to query the
    tables while you are making a copy of the files in the database directory. The
    flush is needed to ensure that the all active index pages are written to disk
    before you start the backup. See [Section 15.3.6, “LOCK TABLES and UNLOCK TABLES
    Statements”](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES Statements"),
    and [Section 15.7.8.3, “FLUSH Statement”](flush.html "15.7.8.3 FLUSH Statement").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您只需要一个读锁；这使得其他客户端可以继续查询表，同时您可以复制数据库目录中的文件。刷新是必要的，以确保在开始备份之前将所有活动索引页写入磁盘。参见[第15.3.6节，“LOCK
    TABLES和UNLOCK TABLES语句”](lock-tables.html "15.3.6 LOCK TABLES和UNLOCK TABLES语句")和[第15.7.8.3节，“FLUSH语句”](flush.html
    "15.7.8.3 FLUSH语句")。
- en: You can also create a binary backup simply by copying the table files, as long
    as the server isn't updating anything. (But note that table file copying methods
    do not work if your database contains `InnoDB` tables. Also, even if the server
    is not actively updating data, `InnoDB` may still have modified data cached in
    memory and not flushed to disk.)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过简单地复制表文件来创建二进制备份，只要服务器没有更新任何内容。（但请注意，如果您的数据库包含`InnoDB`表，则表文件复制方法不起作用。此外，即使服务器没有活动更新数据，`InnoDB`可能仍然在内存中缓存修改的数据，而未刷新到磁盘。）
- en: For an example of this backup method, refer to the export and import example
    in [Section 15.2.6, “IMPORT TABLE Statement”](import-table.html "15.2.6 IMPORT
    TABLE Statement").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此备份方法的示例，请参考[Section 15.2.6, “IMPORT TABLE Statement”](import-table.html "15.2.6 IMPORT
    TABLE Statement")中的导出和导入示例。
- en: Making Delimited-Text File Backups
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建分隔文本文件备份
- en: To create a text file containing a table's data, you can use [`SELECT * INTO
    OUTFILE '*`file_name`*' FROM *`tbl_name`*`](select-into.html "15.2.13.1 SELECT
    ... INTO Statement"). The file is created on the MySQL server host, not the client
    host. For this statement, the output file cannot already exist because permitting
    files to be overwritten constitutes a security risk. See [Section 15.2.13, “SELECT
    Statement”](select.html "15.2.13 SELECT Statement"). This method works for any
    kind of data file, but saves only table data, not the table structure.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建包含表数据的文本文件，可以使用[`SELECT * INTO OUTFILE '*`file_name`*' FROM *`tbl_name`*`](select-into.html
    "15.2.13.1 SELECT ... INTO Statement")。该文件在MySQL服务器主机上创建，而不是客户端主机。对于此语句，输出文件不能已经存在，因为允许文件被覆盖构成安全风险。请参阅[Section 15.2.13,
    “SELECT Statement”](select.html "15.2.13 SELECT Statement")。此方法适用于任何类型的数据文件，但仅保存表数据，而不保存表结构。
- en: Another way to create text data files (along with files containing [`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") statements for the
    backed up tables) is to use [**mysqldump**](mysqldump.html "6.5.4 mysqldump —
    A Database Backup Program") with the [`--tab`](mysqldump.html#option_mysqldump_tab)
    option. See [Section 9.4.3, “Dumping Data in Delimited-Text Format with mysqldump”](mysqldump-delimited-text.html
    "9.4.3 Dumping Data in Delimited-Text Format with mysqldump").
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种创建文本数据文件（以及包含用于备份表的[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement")语句的文件）的方法是使用[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program")与[`--tab`](mysqldump.html#option_mysqldump_tab)选项。请参阅[Section 9.4.3,
    “Dumping Data in Delimited-Text Format with mysqldump”](mysqldump-delimited-text.html
    "9.4.3 Dumping Data in Delimited-Text Format with mysqldump")。
- en: To reload a delimited-text data file, use [`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement") or [**mysqlimport**](mysqlimport.html "6.5.5 mysqlimport — A
    Data Import Program").
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要重新加载分隔文本数据文件，请使用[`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement")或[**mysqlimport**](mysqlimport.html
    "6.5.5 mysqlimport — A Data Import Program")。
- en: Making Incremental Backups by Enabling the Binary Log
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过启用二进制日志进行增量备份
- en: MySQL supports incremental backups using the binary log. The binary log files
    provide you with the information you need to replicate changes to the database
    that are made subsequent to the point at which you performed a backup. Therefore,
    to allow a server to be restored to a point-in-time, binary logging must be enabled
    on it, which is the default setting for MySQL 8.0 ; see [Section 7.4.4, “The Binary
    Log”](binary-log.html "7.4.4 The Binary Log").
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持使用二进制日志进行增量备份。二进制日志文件提供了您需要的信息，以便复制在您执行备份之后对数据库所做的更改。因此，为了允许服务器恢复到某个时间点，必须在其上启用二进制日志记录，这是MySQL
    8.0的默认设置；请参阅[Section 7.4.4, “The Binary Log”](binary-log.html "7.4.4 The Binary
    Log")。
- en: At the moment you want to make an incremental backup (containing all changes
    that happened since the last full or incremental backup), you should rotate the
    binary log by using [`FLUSH LOGS`](flush.html#flush-logs). This done, you need
    to copy to the backup location all binary logs which range from the one of the
    moment of the last full or incremental backup to the last but one. These binary
    logs are the incremental backup; at restore time, you apply them as explained
    in [Section 9.5, “Point-in-Time (Incremental) Recovery”](point-in-time-recovery.html
    "9.5 Point-in-Time (Incremental) Recovery"). The next time you do a full backup,
    you should also rotate the binary log using [`FLUSH LOGS`](flush.html#flush-logs)
    or [**mysqldump --flush-logs**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program"). See [Section 6.5.4, “mysqldump — A Database Backup Program”](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program").
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想要进行增量备份（包含自上次完整或增量备份以来发生的所有更改）时，你应该通过使用[`FLUSH LOGS`](flush.html#flush-logs)来旋转二进制日志。完成这一步后，你需要将从上次完整或增量备份时刻到倒数第二个时刻的所有二进制日志复制到备份位置。这些二进制日志就是增量备份；在恢复时，你需要按照[第9.5节，“时间点（增量）恢复”](point-in-time-recovery.html
    "9.5 Point-in-Time (Incremental) Recovery")中的说明应用它们。下次进行完整备份时，你也应该使用[`FLUSH LOGS`](flush.html#flush-logs)或[**mysqldump
    --flush-logs**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")来旋转二进制日志。参见[第6.5.4节，“mysqldump
    — 数据库备份程序”](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")。
- en: Making Backups Using Replicas
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用副本进行备份
- en: If you have performance problems with a server while making backups, one strategy
    that can help is to set up replication and perform backups on the replica rather
    than on the source. See [Section 19.4.1, “Using Replication for Backups”](replication-solutions-backups.html
    "19.4.1 Using Replication for Backups").
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在备份时服务器出现性能问题，一个有助于解决问题的策略是设置复制并在副本上执行备份，而不是在源服务器上执行。参见[第19.4.1节，“使用复制进行备份”](replication-solutions-backups.html
    "19.4.1 Using Replication for Backups")。
- en: If you are backing up a replica, you should back up its connection metadata
    repository and applier metadata repository (see [Section 19.2.4, “Relay Log and
    Replication Metadata Repositories”](replica-logs.html "19.2.4 Relay Log and Replication
    Metadata Repositories")) when you back up the replica's databases, regardless
    of the backup method you choose. This information is always needed to resume replication
    after you restore the replica's data. If your replica is replicating [`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement") statements, you should also back up any `SQL_LOAD-*`
    files that exist in the directory that the replica uses for this purpose. The
    replica needs these files to resume replication of any interrupted [`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement") operations. The location of this directory is the
    value of the system variable [`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)
    (from MySQL 8.0.26) or [`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)
    (before MySQL 8.0.26). If the server was not started with that variable set, the
    directory location is the value of the [`tmpdir`](server-system-variables.html#sysvar_tmpdir)
    system variable.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在备份一个副本，你应该在备份副本数据库时备份其连接元数据存储库和应用程序元数据存储库（参见[第19.2.4节，“中继日志和复制元数据存储库”](replica-logs.html
    "19.2.4 Relay Log and Replication Metadata Repositories")），无论你选择哪种备份方法，这些信息总是需要的，以便在恢复副本数据后恢复复制。如果你的副本正在复制[`LOAD
    DATA`](load-data.html "15.2.9 LOAD DATA Statement")语句，你还应该备份副本用于此目的的任何`SQL_LOAD-*`文件。副本需要这些文件来恢复任何中断的[`LOAD
    DATA`](load-data.html "15.2.9 LOAD DATA Statement")操作的复制。此目录的位置是系统变量[`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)（从MySQL
    8.0.26开始）或[`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)（MySQL
    8.0.26之前）的值。如果服务器未使用该变量启动，则目录位置是系统变量[`tmpdir`](server-system-variables.html#sysvar_tmpdir)的值。
- en: Recovering Corrupt Tables
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 恢复损坏的表
- en: If you have to restore `MyISAM` tables that have become corrupt, try to recover
    them using [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR TABLE Statement")
    or [**myisamchk -r**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") first. That should work in 99.9% of all cases. If [**myisamchk**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility") fails, see [Section 9.6,
    “MyISAM Table Maintenance and Crash Recovery”](myisam-table-maintenance.html "9.6 MyISAM
    Table Maintenance and Crash Recovery").
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果必须恢复已损坏的 `MyISAM` 表，请尝试首先使用 [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR
    TABLE Statement") 或 [**myisamchk -r**](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility") 进行恢复。在 99.9% 的情况下，这应该有效。如果 [**myisamchk**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility") 失败，请参阅 [第 9.6 节，“MyISAM
    表维护和崩溃恢复”](myisam-table-maintenance.html "9.6 MyISAM Table Maintenance and Crash
    Recovery")。
- en: Making Backups Using a File System Snapshot
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用文件系统快照进行备份。
- en: 'If you are using a Veritas file system, you can make a backup like this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Veritas 文件系统，可以这样进行备份：
- en: From a client program, execute [`FLUSH TABLES WITH READ LOCK`](flush.html#flush-tables-with-read-lock).
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从客户端程序执行 [`FLUSH TABLES WITH READ LOCK`](flush.html#flush-tables-with-read-lock)。
- en: From another shell, execute `mount vxfs snapshot`.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从另一个 shell 中执行 `mount vxfs snapshot`。
- en: From the first client, execute [`UNLOCK TABLES`](lock-tables.html "15.3.6 LOCK
    TABLES and UNLOCK TABLES Statements").
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从第一个客户端执行 [`UNLOCK TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK
    TABLES Statements")。
- en: Copy files from the snapshot.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从快照中复制文件。
- en: Unmount the snapshot.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 卸载快照。
- en: Similar snapshot capabilities may be available in other file systems, such as
    LVM or ZFS.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 其他文件系统（如 LVM 或 ZFS）可能具有类似的快照功能。
