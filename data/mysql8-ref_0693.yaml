- en: 12.8.5 The binary Collation Compared to _bin Collations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12.8.5 二进制排序规则与_bin排序规则的比较
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-binary-collations.html](https://dev.mysql.com/doc/refman/8.0/en/charset-binary-collations.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-binary-collations.html](https://dev.mysql.com/doc/refman/8.0/en/charset-binary-collations.html)
- en: This section describes how the `binary` collation for binary strings compares
    to `_bin` collations for nonbinary strings.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了二进制字符串的`binary`排序规则与非二进制字符串的`_bin`排序规则的比较。
- en: Binary strings (as stored using the [`BINARY`](binary-varbinary.html "13.3.3 The
    BINARY and VARBINARY Types"), [`VARBINARY`](binary-varbinary.html "13.3.3 The
    BINARY and VARBINARY Types"), and [`BLOB`](blob.html "13.3.4 The BLOB and TEXT
    Types") data types) have a character set and collation named `binary`. Binary
    strings are sequences of bytes and the numeric values of those bytes determine
    comparison and sort order. See [Section 12.10.8, “The Binary Character Set”](charset-binary-set.html
    "12.10.8 The Binary Character Set").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`BINARY`](binary-varbinary.html "13.3.3 BINARY和VARBINARY类型")、[`VARBINARY`](binary-varbinary.html
    "13.3.3 BINARY和VARBINARY类型")和[`BLOB`](blob.html "13.3.4 BLOB和TEXT类型")数据类型存储的二进制字符串具有名为`binary`的字符集和排序规则。二进制字符串是字节序列，这些字节的数值确定了比较和排序顺序。参见[第12.10.8节，“二进制字符集”](charset-binary-set.html
    "12.10.8 二进制字符集")。
- en: Nonbinary strings (as stored using the [`CHAR`](char.html "13.3.2 The CHAR and
    VARCHAR Types"), [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types"), and
    [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types") data types) have a character
    set and collation other than `binary`. A given nonbinary character set can have
    several collations, each of which defines a particular comparison and sort order
    for the characters in the set. For most character sets, one of these is the binary
    collation, indicated by a `_bin` suffix in the collation name. For example, the
    binary collations for `latin1` and `big5` are named `latin1_bin` and `big5_bin`,
    respectively. `utf8mb4` is an exception that has two binary collations, `utf8mb4_bin`
    and `utf8mb4_0900_bin`; see [Section 12.10.1, “Unicode Character Sets”](charset-unicode-sets.html
    "12.10.1 Unicode Character Sets").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`CHAR`](char.html "13.3.2 CHAR和VARCHAR类型")、[`VARCHAR`](char.html "13.3.2 CHAR和VARCHAR类型")和[`TEXT`](blob.html
    "13.3.4 BLOB和TEXT类型")数据类型存储的非二进制字符串具有除`binary`之外的字符集和排序规则。给定的非二进制字符集可以有多个排序规则，每个规则定义了集合中字符的特定比较和排序顺序。对于大多数字符集，其中一个是二进制排序规则，在排序规则名称中以`_bin`后缀表示。例如，`latin1`和`big5`的二进制排序规则分别命名为`latin1_bin`和`big5_bin`。`utf8mb4`是一个例外，它有两个二进制排序规则，分别是`utf8mb4_bin`和`utf8mb4_0900_bin`；参见[第12.10.1节，“Unicode字符集”](charset-unicode-sets.html
    "12.10.1 Unicode字符集")。
- en: 'The `binary` collation differs from `_bin` collations in several respects,
    discussed in the following sections:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`binary`排序规则在几个方面与`_bin`排序规则不同，将在以下部分讨论：'
- en: '[The Unit for Comparison and Sorting](charset-binary-collations.html#charset-binary-collations-comparison-units
    "The Unit for Comparison and Sorting")'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比较和排序的单位](charset-binary-collations.html#charset-binary-collations-comparison-units
    "比较和排序的单位")'
- en: '[Character Set Conversion](charset-binary-collations.html#charset-binary-collations-charset-conversion
    "Character Set Conversion")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[字符集转换](charset-binary-collations.html#charset-binary-collations-charset-conversion
    "字符集转换")'
- en: '[Lettercase Conversion](charset-binary-collations.html#charset-binary-collations-lettercase-conversion
    "Lettercase Conversion")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[大小写转换](charset-binary-collations.html#charset-binary-collations-lettercase-conversion
    "大小写转换")'
- en: '[Trailing Space Handling in Comparisons](charset-binary-collations.html#charset-binary-collations-trailing-space-comparisons
    "Trailing Space Handling in Comparisons")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比较中的尾随空格处理](charset-binary-collations.html#charset-binary-collations-trailing-space-comparisons
    "比较中的尾随空格处理")'
- en: '[Trailing Space Handling for Inserts and Retrievals](charset-binary-collations.html#charset-binary-collations-trailing-space-inserts-retrievals
    "Trailing Space Handling for Inserts and Retrievals")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[插入和检索的尾随空格处理](charset-binary-collations.html#charset-binary-collations-trailing-space-inserts-retrievals
    "插入和检索的尾随空格处理")'
- en: The Unit for Comparison and Sorting
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 比较和排序的单位
- en: Binary strings are sequences of bytes. For the `binary` collation, comparison
    and sorting are based on numeric byte values. Nonbinary strings are sequences
    of characters, which might be multibyte. Collations for nonbinary strings define
    an ordering of the character values for comparison and sorting. For `_bin` collations,
    this ordering is based on numeric character code values, which is similar to ordering
    for binary strings except that character code values might be multibyte.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 二进制字符串是字节序列。对于`binary`校对规则，比较和排序基于数字字节值。非二进制字符串是字符序列，可能是多字节的。非二进制字符串的校对规则定义了用于比较和排序的字符值排序。对于`_bin`校对规则，此排序基于数字字符代码值，类似于二进制字符串的排序，只是字符代码值可能是多字节的。
- en: Character Set Conversion
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 字符集转换
- en: 'A nonbinary string has a character set and is automatically converted to another
    character set in many cases, even when the string has a `_bin` collation:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 非二进制字符串具有一个字符集，并且在许多情况下会自动转换为另一个字符集，即使字符串具有`_bin`校对规则：
- en: 'When assigning column values to another column that has a different character
    set:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将列值分配给具有不同字符集的另一列时：
- en: '[PRE0]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When assigning column values for [`INSERT`](insert.html "15.2.7 INSERT Statement")
    or [`UPDATE`](update.html "15.2.17 UPDATE Statement") using a string literal:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用字符串字面值为[`INSERT`](insert.html "15.2.7 INSERT Statement")或[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")分配列值时：
- en: '[PRE1]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'When sending results from the server to a client:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从服务器发送结果到客户端时：
- en: '[PRE2]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For binary string columns, no conversion occurs. For cases similar to those
    preceding, the string value is copied byte-wise.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于二进制字符串列，不会发生转换。对于类似的情况，字符串值会逐字节复制。
- en: Lettercase Conversion
  id: totrans-22
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 大小写转换
- en: 'Collations for nonbinary character sets provide information about lettercase
    of characters, so characters in a nonbinary string can be converted from one lettercase
    to another, even for `_bin` collations that ignore lettercase for ordering:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 非二进制字符集的校对规则提供了关于字符大小写的信息，因此非二进制字符串中的字符可以从一个大小写转换为另一个大小写，即使是对于忽略大小写进行排序的`_bin`校对规则：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The concept of lettercase does not apply to bytes in a binary string. To perform
    lettercase conversion, the string must first be converted to a nonbinary string
    using a character set appropriate for the data stored in the string:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 字节中的大小写概念不适用于二进制字符串。要执行大小写转换，必须首先使用适合存储在字符串中的数据的字符集将字符串转换为非二进制字符串：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Trailing Space Handling in Comparisons
  id: totrans-27
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 比较中处理末尾空格
- en: 'MySQL collations have a pad attribute, which has a value of `PAD SPACE` or
    `NO PAD`:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL校对规则具有一个`PAD SPACE`或`NO PAD`的填充属性：
- en: Most MySQL collations have a pad attribute of `PAD SPACE`.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数MySQL校对规则具有`PAD SPACE`的填充属性。
- en: The Unicode collations based on UCA 9.0.0 and higher have a pad attribute of
    `NO PAD`; see [Section 12.10.1, “Unicode Character Sets”](charset-unicode-sets.html
    "12.10.1 Unicode Character Sets").
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于UCA 9.0.0及更高版本的Unicode校对规则具有`NO PAD`的填充属性；参见[第12.10.1节，“Unicode字符集”](charset-unicode-sets.html
    "12.10.1 Unicode Character Sets")。
- en: 'For nonbinary strings (`CHAR`, `VARCHAR`, and `TEXT` values), the string collation
    pad attribute determines treatment in comparisons of trailing spaces at the end
    of strings:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非二进制字符串（`CHAR`，`VARCHAR`和`TEXT`值），字符串校对填充属性决定了在比较末尾空格时的处理方式：
- en: For `PAD SPACE` collations, trailing spaces are insignificant in comparisons;
    strings are compared without regard to trailing spaces.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于`PAD SPACE`校对规则，比较中末尾空格不重要；字符串比较时不考虑末尾空格。
- en: '`NO PAD` collations treat trailing spaces as significant in comparisons, like
    any other character.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NO PAD`校对规则将末尾空格视为比较中的重要字符，就像任何其他字符一样。'
- en: The differing behaviors can be demonstrated using the two `utf8mb4` binary collations,
    one of which is `PAD SPACE`, the other of which is `NO PAD`. The example also
    shows how to use the `INFORMATION_SCHEMA` [`COLLATIONS`](information-schema-collations-table.html
    "28.3.6 The INFORMATION_SCHEMA COLLATIONS Table") table to determine the pad attribute
    for collations.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这些不同的行为可以使用两个`utf8mb4`二进制校对规则来演示，其中一个是`PAD SPACE`，另一个是`NO PAD`。示例还展示了如何使用`INFORMATION_SCHEMA`
    [`COLLATIONS`](information-schema-collations-table.html "28.3.6 The INFORMATION_SCHEMA
    COLLATIONS Table")表来确定校对规则的填充属性。
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: “Comparison” in this context does not include the [`LIKE`](string-comparison-functions.html#operator_like)
    pattern-matching operator, for which trailing spaces are significant, regardless
    of collation.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在此上下文中的“比较”不包括[`LIKE`](string-comparison-functions.html#operator_like)模式匹配运算符，对于这些运算符，无论校对规则如何，末尾空格都是重要的。
- en: 'For binary strings (`BINARY`, `VARBINARY`, and `BLOB` values), all bytes are
    significant in comparisons, including trailing spaces:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于二进制字符串（`BINARY`，`VARBINARY`和`BLOB`值），在比较中所有字节都是重要的，包括尾随空格：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Trailing Space Handling for Inserts and Retrievals
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 插入和检索的尾随空格处理
- en: '`CHAR(*`N`*)` columns store nonbinary strings *`N`* characters long. For inserts,
    values shorter than *`N`* characters are extended with spaces. For retrievals,
    trailing spaces are removed.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`CHAR(*`N`*)`列存储长度为*`N`*个字符的非二进制字符串。对于插入操作，长度小于*`N`*个字符的值将用空格扩展。对于检索，尾随空格将被移除。'
- en: '`BINARY(*`N`*)` columns store binary strings *`N`* bytes long. For inserts,
    values shorter than *`N`* bytes are extended with `0x00` bytes. For retrievals,
    nothing is removed; a value of the declared length is always returned.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`BINARY(*`N`*)`列存储长度为*`N`*字节的二进制字符串。对于插入操作，长度小于*`N`*字节的值将用`0x00`字节扩展。对于检索，不会删除任何内容；始终返回声明长度的值。'
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
