- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-features-max-allowed-packet.html](https://dev.mysql.com/doc/refman/8.0/en/replication-features-max-allowed-packet.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-features-max-allowed-packet.html](https://dev.mysql.com/doc/refman/8.0/en/replication-features-max-allowed-packet.html)
- en: 19.5.1.20 Replication and max_allowed_packet
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.5.1.20 复制和max_allowed_packet
- en: '[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    sets an upper limit on the size of any single message between the MySQL server
    and clients, including replicas. If you are replicating large column values (such
    as might be found in [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types") or [`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types") columns) and [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    is too small on the source, the source fails with an error, and the replica shuts
    down the replication I/O (receiver) thread. If [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    is too small on the replica, this also causes the replica to stop the I/O thread.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)设置了MySQL服务器和客户端之间的任何单个消息的大小上限，包括副本。如果在源端复制大型列值（例如可能在[`TEXT`](blob.html
    "13.3.4 BLOB和TEXT类型")或[`BLOB`](blob.html "13.3.4 BLOB和TEXT类型")列中找到的值），而[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)在源端设置过小，源端将会出现错误，并且副本会关闭复制I/O（接收器）线程。如果副本端的[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)设置过小，也会导致副本停止I/O线程。'
- en: Row-based replication sends all columns and column values for updated rows from
    the source to the replica, including values of columns that were not actually
    changed by the update. This means that, when you are replicating large column
    values using row-based replication, you must take care to set [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    large enough to accommodate the largest row in any table to be replicated, even
    if you are replicating updates only, or you are inserting only relatively small
    values.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 基于行的复制从源端向副本发送更新行的所有列和列值，包括实际上未被更新的列的值。这意味着，当您使用基于行的复制复制大型列值时，您必须确保将[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)设置得足够大，以容纳要复制的任何表中最大行的大小，即使您只复制更新，或者只插入相对较小的值。
- en: On a multi-threaded replica (with [`replica_parallel_workers > 0`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers > 0`](replication-options-replica.html#sysvar_slave_parallel_workers)),
    ensure that the system variable [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)
    or [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)
    is set to a value equal to or greater than the setting for the [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    system variable on the source. The default setting for [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)
    or [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max),
    128M, is twice the default setting for [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet),
    which is 64M. [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    limits the packet size that the source can send, but the addition of an event
    header can produce a binary log event exceeding this size. Also, in row-based
    replication, a single event can be significantly larger than the [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    size, because the value of [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    only limits each column of the table.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在多线程复制（具有[`replica_parallel_workers > 0`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers
    > 0`](replication-options-replica.html#sysvar_slave_parallel_workers)）中，确保系统变量[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)或[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)的设置值等于或大于源端[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)系统变量的设置值。[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)或[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)的默认设置为128M，是[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)系统变量的默认设置值64M的两倍。[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)限制了源端可以发送的数据包大小，但添加事件头可能会产生超过此大小的二进制日志事件。此外，在基于行的复制中，单个事件可能比[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)大小显著更大，因为[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)的值仅限制表的每列。
- en: The replica actually accepts packets up to the limit set by its [`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)
    or [`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)
    setting, which default to the maximum setting of 1GB, to prevent a replication
    failure due to a large packet. However, the value of [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)
    or [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)
    controls the memory that is made available on the replica to hold incoming packets.
    The specified memory is shared among all the replica worker queues.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，复制端接受的数据包上限由其[`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)或[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)设置确定，默认设置为最大设置值1GB，以防止由于大数据包而导致复制失败。然而，[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)或[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)的值控制了复制端可用于保存传入数据包的内存。指定的内存是在所有复制工作队列之间共享的。
- en: The value of [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)
    or [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)
    is a soft limit, and if an unusually large event (consisting of one or multiple
    packets) exceeds this size, the transaction is held until all the replica workers
    have empty queues, and then processed. All subsequent transactions are held until
    the large transaction has been completed. So although unusual events larger than
    [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)
    or [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)
    can be processed, the delay to clear the queues of all the replica workers and
    the wait to queue subsequent transactions can cause lag on the replica and decreased
    concurrency of the replica workers. [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)
    or [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)
    should therefore be set high enough to accommodate most expected event sizes.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)或[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)的值是一个软限制，如果一个异常大的事件（由一个或多个数据包组成）超过了这个大小，事务将被暂停，直到所有副本工作者的队列为空，然后再处理。所有后续事务都将被暂停，直到大事务完成。因此，虽然大于[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)或[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)的异常事件可以被处理，但清空所有副本工作者队列和等待排队后续事务的延迟可能导致副本延迟和副本工作者并发性降低。因此，[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)或[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)应设置为足够高，以容纳大多数预期事件大小。'
