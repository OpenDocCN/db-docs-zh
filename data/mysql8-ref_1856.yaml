- en: 26.3.3 Exchanging Partitions and Subpartitions with Tables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 26.3.3 与表交换分区和子分区
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/partitioning-management-exchange.html](https://dev.mysql.com/doc/refman/8.0/en/partitioning-management-exchange.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/partitioning-management-exchange.html](https://dev.mysql.com/doc/refman/8.0/en/partitioning-management-exchange.html)
- en: 'In MySQL 8.0, it is possible to exchange a table partition or subpartition
    with a table using `ALTER TABLE *`pt`* EXCHANGE PARTITION *`p`* WITH TABLE *`nt`*`,
    where *`pt`* is the partitioned table and *`p`* is the partition or subpartition
    of *`pt`* to be exchanged with unpartitioned table *`nt`*, provided that the following
    statements are true:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0中，可以使用`ALTER TABLE *`pt`* EXCHANGE PARTITION *`p`* WITH TABLE *`nt`*`来交换表分区或子分区与未分区表*`nt`*，其中*`pt`*是分区表，*`p`*是要与未分区表*`nt`*交换的*`pt`*的分区或子分区，前提是以下陈述为真：
- en: Table *`nt`* is not itself partitioned.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表*`nt`*本身没有分区。
- en: Table *`nt`* is not a temporary table.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表*`nt`*不是临时表。
- en: The structures of tables *`pt`* and *`nt`* are otherwise identical.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表*`pt`*和*`nt`*的结构在其他方面是相同的。
- en: Table `nt` contains no foreign key references, and no other table has any foreign
    keys that refer to `nt`.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表`nt`不包含外键引用，也没有其他表有任何外键引用指向`nt`。
- en: There are no rows in *`nt`* that lie outside the boundaries of the partition
    definition for *`p`*. This condition does not apply if `WITHOUT VALIDATION` is
    used.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*`nt`*中没有位于*`p`*的分区定义边界之外的行。如果使用`WITHOUT VALIDATION`，则不适用此条件。'
- en: Both tables must use the same character set and collation.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两个表必须使用相同的字符集和校对规则。
- en: For `InnoDB` tables, both tables must use the same row format. To determine
    the row format of an `InnoDB` table, query [`INFORMATION_SCHEMA.INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table").
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于`InnoDB`表，两个表必须使用相同的行格式。要确定`InnoDB`表的行格式，请查询[`INFORMATION_SCHEMA.INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table")。
- en: Any partition-level `MAX_ROWS` setting for `p` must be the same as the table-level
    `MAX_ROWS` value set for `nt`. The setting for any partition-level `MIN_ROWS`
    setting for `p` must also be the same any table-level `MIN_ROWS` value set for
    `nt`.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任何分区级别的`MAX_ROWS`设置对于`p`必须与为`nt`设置的表级别`MAX_ROWS`值相同。对于`p`的任何分区级别的`MIN_ROWS`设置也必须与为`nt`设置的表级别`MIN_ROWS`值相同。
- en: This is true in either case whether not `pt` has an explicit table-level `MAX_ROWS`
    or `MIN_ROWS` option in effect.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论`pt`是否具有显式的表级别`MAX_ROWS`或`MIN_ROWS`选项生效，这在任何情况下都是正确的。
- en: The `AVG_ROW_LENGTH` cannot differ between the two tables `pt` and `nt`.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`AVG_ROW_LENGTH`在表`pt`和表`nt`之间不能有差异。'
- en: '`pt` does not have any partitions that use the `DATA DIRECTORY` option. This
    restriction is lifted for `InnoDB` tables in MySQL 8.0.14 and later.'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表`pt`不能有任何使用`DATA DIRECTORY`选项的分区。这个限制在MySQL 8.0.14及更高版本中对`InnoDB`表解除。
- en: '`INDEX DIRECTORY` cannot differ between the table and the partition to be exchanged
    with it.'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`INDEX DIRECTORY`在表和要与之交换的分区之间不能有差异。'
- en: No table or partition `TABLESPACE` options can be used in either of the tables.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任何表或分区`TABLESPACE`选项都不能在任何表中使用。
- en: In addition to the [`ALTER`](privileges-provided.html#priv_alter), [`INSERT`](privileges-provided.html#priv_insert),
    and [`CREATE`](privileges-provided.html#priv_create) privileges usually required
    for [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") statements,
    you must have the [`DROP`](privileges-provided.html#priv_drop) privilege to perform
    [`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER TABLE Statement").
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 除了通常需要的[`ALTER`](privileges-provided.html#priv_alter)、[`INSERT`](privileges-provided.html#priv_insert)和[`CREATE`](privileges-provided.html#priv_create)权限外，您必须具有[`DROP`](privileges-provided.html#priv_drop)权限才能执行[`ALTER
    TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER TABLE Statement")。
- en: 'You should also be aware of the following effects of [`ALTER TABLE ... EXCHANGE
    PARTITION`](alter-table.html "15.1.9 ALTER TABLE Statement"):'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您还应该了解[`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER
    TABLE Statement")的以下影响：
- en: Executing [`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER
    TABLE Statement") does not invoke any triggers on either the partitioned table
    or the table to be exchanged.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行[`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER TABLE
    Statement")不会触发分区表或要交换表上的任何触发器。
- en: Any `AUTO_INCREMENT` columns in the exchanged table are reset.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交换表中的任何`AUTO_INCREMENT`列都会被重置。
- en: The `IGNORE` keyword has no effect when used with `ALTER TABLE ... EXCHANGE
    PARTITION`.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`ALTER TABLE ... EXCHANGE PARTITION`时，`IGNORE`关键字不起作用。
- en: 'The syntax for [`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER
    TABLE Statement") is shown here, where *`pt`* is the partitioned table, *`p`*
    is the partition (or subpartition) to be exchanged, and *`nt`* is the nonpartitioned
    table to be exchanged with *`p`*:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER TABLE
    Statement")的语法如下，其中*`pt`*是分区表，*`p`*是要交换的分区（或子分区），*`nt`*是要与*`p`*交换的非分区表：'
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Optionally, you can append `WITH VALIDATION` or `WITHOUT VALIDATION`. When `WITHOUT
    VALIDATION` is specified, the [`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html
    "15.1.9 ALTER TABLE Statement") operation does not perform any row-by-row validation
    when exchanging a partition a nonpartitioned table, allowing database administrators
    to assume responsibility for ensuring that rows are within the boundaries of the
    partition definition. `WITH VALIDATION` is the default.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，你可以附加`WITH VALIDATION`或`WITHOUT VALIDATION`。当指定`WITHOUT VALIDATION`时，[`ALTER
    TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER TABLE Statement")
    操作在交换分区到非分区表时不执行逐行验证，允许数据库管理员承担确保行在分区定义边界内的责任。`WITH VALIDATION`是默认选项。
- en: One and only one partition or subpartition may be exchanged with one and only
    one nonpartitioned table in a single [`ALTER TABLE EXCHANGE PARTITION`](alter-table.html
    "15.1.9 ALTER TABLE Statement") statement. To exchange multiple partitions or
    subpartitions, use multiple [`ALTER TABLE EXCHANGE PARTITION`](alter-table.html
    "15.1.9 ALTER TABLE Statement") statements. `EXCHANGE PARTITION` may not be combined
    with other [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") options.
    The partitioning and (if applicable) subpartitioning used by the partitioned table
    may be of any type or types supported in MySQL 8.0.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在单个[`ALTER TABLE EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER TABLE Statement")语句中，只能将一个分区或子分区与一个非分区表交换。要交换多个分区或子分区，请使用多个[`ALTER
    TABLE EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER TABLE Statement")语句。`EXCHANGE
    PARTITION`不能与其他[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")选项结合使用。分区表使用的分区和（如果适用）子分区可以是
    MySQL 8.0 支持的任何类型。
- en: Exchanging a Partition with a Nonpartitioned Table
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 与非分区表交换分区
- en: 'Suppose that a partitioned table `e` has been created and populated using the
    following SQL statements:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 假设已经使用以下 SQL 语句创建和填充了分区表`e`：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now we create a nonpartitioned copy of `e` named `e2`. This can be done using
    the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") client
    as shown here:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们创建一个名为`e2`的非分区副本`e`。可以使用[**mysql**](mysql.html "6.5.1 mysql — The MySQL
    Command-Line Client")客户端来完成，如下所示：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can see which partitions in table `e` contain rows by querying the Information
    Schema [`PARTITIONS`](information-schema-partitions-table.html "28.3.21 The INFORMATION_SCHEMA
    PARTITIONS Table") table, like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查询信息模式[`PARTITIONS`](information-schema-partitions-table.html "28.3.21 The
    INFORMATION_SCHEMA PARTITIONS Table")表，你可以看到表`e`中包含行的分区，就像这样：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For partitioned `InnoDB` tables, the row count given in the `TABLE_ROWS` column
    of the Information Schema [`PARTITIONS`](information-schema-partitions-table.html
    "28.3.21 The INFORMATION_SCHEMA PARTITIONS Table") table is only an estimated
    value used in SQL optimization, and is not always exact.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于分区`InnoDB`表，信息模式[`PARTITIONS`](information-schema-partitions-table.html "28.3.21 The
    INFORMATION_SCHEMA PARTITIONS Table")表中`TABLE_ROWS`列中给出的行数仅是 SQL 优化中使用的估计值，并不总是准确的。
- en: 'To exchange partition `p0` in table `e` with table `e2`, you can use [`ALTER
    TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER TABLE Partition
    Operations"), as shown here:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要交换表`e`中的分区`p0`与表`e2`，可以使用[`ALTER TABLE`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations")，如下所示：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'More precisely, the statement just issued causes any rows found in the partition
    to be swapped with those found in the table. You can observe how this has happened
    by querying the Information Schema [`PARTITIONS`](information-schema-partitions-table.html
    "28.3.21 The INFORMATION_SCHEMA PARTITIONS Table") table, as before. The table
    row that was previously found in partition `p0` is no longer present:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 更准确地说，刚刚执行的语句导致在分区中找到的任何行与表中找到的行交换。你可以通过再次查询信息模式[`PARTITIONS`](information-schema-partitions-table.html
    "28.3.21 The INFORMATION_SCHEMA PARTITIONS Table")表来观察这是如何发生的。之前在分区`p0`中找到的表行不再存在：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you query table `e2`, you can see that the “missing” row can now be found
    there:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果查询表`e2`，你会发现“缺失”的行现在可以在那里找到：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The table to be exchanged with the partition does not necessarily have to be
    empty. To demonstrate this, we first insert a new row into table `e`, making sure
    that this row is stored in partition `p0` by choosing an `id` column value that
    is less than 50, and verifying this afterward by querying the [`PARTITIONS`](information-schema-partitions-table.html
    "28.3.21 The INFORMATION_SCHEMA PARTITIONS Table") table:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 与分区交换的表不一定要为空。为了演示这一点，我们首先向表`e`插入一行新数据，确保这行数据存储在分区`p0`中，方法是选择一个小于50的`id`列值，并在之后通过查询[`PARTITIONS`](information-schema-partitions-table.html
    "28.3.21 The INFORMATION_SCHEMA PARTITIONS Table")表进行验证：
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now we once again exchange partition `p0` with table `e2` using the same [`ALTER
    TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER TABLE Partition
    Operations") statement as previously:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们再次使用与之前相同的[`ALTER TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER
    TABLE Partition Operations")语句交换分区`p0`与表`e2`：
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output of the following queries shows that the table row that was stored
    in partition `p0` and the table row that was stored in table `e2`, prior to issuing
    the [`ALTER TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER TABLE
    Partition Operations") statement, have now switched places:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下查询的输出显示，在发出[`ALTER TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER
    TABLE Partition Operations")语句之前存储在分区`p0`中的表行和存储在表`e2`中的表行现在已经交换位置：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Nonmatching Rows
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 不匹配的行
- en: 'You should keep in mind that any rows found in the nonpartitioned table prior
    to issuing the [`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER
    TABLE Statement") statement must meet the conditions required for them to be stored
    in the target partition; otherwise, the statement fails. To see how this occurs,
    first insert a row into `e2` that is outside the boundaries of the partition definition
    for partition `p0` of table `e`. For example, insert a row with an `id` column
    value that is too large; then, try to exchange the table with the partition again:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在发出[`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER
    TABLE Statement")语句之前，在非分区表中找到的任何行必须满足存储在目标分区中的条件；否则，该语句将失败。为了看到这是如何发生的，首先向`e2`插入一行数据，该行数据超出了表`e`的分区`p0`的定义范围。例如，插入一个`id`列值过大的行；然后，再次尝试与分区交换表：
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Only the `WITHOUT VALIDATION` option would permit this operation to succeed:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 只有`WITHOUT VALIDATION`选项才能使此操作成功：
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: When a partition is exchanged with a table that contains rows that do not match
    the partition definition, it is the responsibility of the database administrator
    to fix the non-matching rows, which can be performed using [`REPAIR TABLE`](repair-table.html
    "15.7.3.5 REPAIR TABLE Statement") or [`ALTER TABLE ... REPAIR PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations").
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当将一个分区与包含不符合分区定义的行的表交换时，由数据库管理员负责修复不匹配的行，可以使用[`REPAIR TABLE`](repair-table.html
    "15.7.3.5 REPAIR TABLE Statement")或[`ALTER TABLE ... REPAIR PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations")来执行。
- en: Exchanging Partitions Without Row-By-Row Validation
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 不需要逐行验证即可交换分区
- en: To avoid time consuming validation when exchanging a partition with a table
    that has many rows, it is possible to skip the row-by-row validation step by appending
    `WITHOUT VALIDATION` to the [`ALTER TABLE ... EXCHANGE PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations") statement.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当将一个分区与包含许多行的表交换时，为了避免耗时的验证，可以在[`ALTER TABLE ... EXCHANGE PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations")语句中添加`WITHOUT VALIDATION`来跳过逐行验证步骤。
- en: The following example compares the difference between execution times when exchanging
    a partition with a nonpartitioned table, with and without validation. The partitioned
    table (table `e`) contains two partitions of 1 million rows each. The rows in
    p0 of table e are removed and p0 is exchanged with a nonpartitioned table of 1
    million rows. The `WITH VALIDATION` operation takes 0.74 seconds. By comparison,
    the `WITHOUT VALIDATION` operation takes 0.01 seconds.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例比较了与和不带验证时交换分区与非分区表的执行时间差异。分区表（表`e`）包含两个各有100万行的分区。表`e`的p0中的行被移除，并且p0与一个有100万行的非分区表交换。`WITH
    VALIDATION`操作耗时0.74秒。相比之下，`WITHOUT VALIDATION`操作只需0.01秒。
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If a partition is exchanged with a table that contains rows that do not match
    the partition definition, it is the responsibility of the database administrator
    to fix the non-matching rows, which can be performed using [`REPAIR TABLE`](repair-table.html
    "15.7.3.5 REPAIR TABLE Statement") or [`ALTER TABLE ... REPAIR PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations").
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将一个分区与包含不符合分区定义的行的表进行交换，数据库管理员有责任修复不匹配的行，可以使用[`REPAIR TABLE`](repair-table.html
    "15.7.3.5 REPAIR TABLE Statement")或[`ALTER TABLE ... REPAIR PARTITION`](alter-table-partition-operations.html
    "15.1.9.1 ALTER TABLE Partition Operations")来执行此操作。
- en: Exchanging a Subpartition with a Nonpartitioned Table
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 用非分区表交换子分区
- en: 'You can also exchange a subpartition of a subpartitioned table (see [Section 26.2.6,
    “Subpartitioning”](partitioning-subpartitions.html "26.2.6 Subpartitioning"))
    with a nonpartitioned table using an [`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html
    "15.1.9 ALTER TABLE Statement") statement. In the following example, we first
    create a table `es` that is partitioned by `RANGE` and subpartitioned by `KEY`,
    populate this table as we did table `e`, and then create an empty, nonpartitioned
    copy `es2` of the table, as shown here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用[`ALTER TABLE ... EXCHANGE PARTITION`](alter-table.html "15.1.9 ALTER
    TABLE Statement")语句，将分区表的一个子分区（参见[第26.2.6节，“子分区”](partitioning-subpartitions.html
    "26.2.6 Subpartitioning")）与非分区表进行交换。在下面的示例中，我们首先创建一个按`RANGE`分区并按`KEY`子分区的表`es`，像我们创建表`e`一样填充这个表，然后创建一个空的、非分区的副本`es2`，如下所示：
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Although we did not explicitly name any of the subpartitions when creating
    table `es`, we can obtain generated names for these by including the `SUBPARTITION_NAME`
    column of the [`PARTITIONS`](information-schema-partitions-table.html "28.3.21 The
    INFORMATION_SCHEMA PARTITIONS Table") table from `INFORMATION_SCHEMA` when selecting
    from that table, as shown here:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们在创建表`es`时没有明确命名任何子分区，但我们可以通过在从`INFORMATION_SCHEMA`中的[`PARTITIONS`](information-schema-partitions-table.html
    "28.3.21 The INFORMATION_SCHEMA PARTITIONS Table")表中选择时包含`SUBPARTITION_NAME`列来获取这些子分区的生成名称，如下所示：
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following [`ALTER TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER
    TABLE Partition Operations") statement exchanges subpartition `p3sp0` in table
    `es` with the nonpartitioned table `es2`:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下[`ALTER TABLE`](alter-table-partition-operations.html "15.1.9.1 ALTER TABLE
    Partition Operations")语句将表`es`中的子分区`p3sp0`与非分区表`es2`进行交换：
- en: '[PRE15]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You can verify that the rows were exchanged by issuing the following queries:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过发出以下查询来验证行是否已经交换：
- en: '[PRE16]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If a table is subpartitioned, you can exchange only a subpartition of the table—not
    an entire partition—with an unpartitioned table, as shown here:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表被子分区，你只能交换表的一个子分区，而不是整个分区，如下所示：
- en: '[PRE17]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Table structures are compared in a strict fashion; the number, order, names,
    and types of columns and indexes of the partitioned table and the nonpartitioned
    table must match exactly. In addition, both tables must use the same storage engine:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 表结构严格比较；分区表和非分区表的列和索引的数量、顺序、名称和类型必须完全匹配。此外，两个表必须使用相同的存储引擎：
- en: '[PRE18]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
