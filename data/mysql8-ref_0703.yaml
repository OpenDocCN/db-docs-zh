- en: 12.9.7 The utf32 Character Set (UTF-32 Unicode Encoding)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12.9.7 utf32字符集（UTF-32 Unicode编码）
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf32.html](https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf32.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf32.html](https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf32.html)
- en: The `utf32` character set is fixed length (like `ucs2` and unlike `utf16`).
    `utf32` uses 32 bits for every character, unlike `ucs2` (which uses 16 bits for
    every character), and unlike `utf16` (which uses 16 bits for some characters and
    32 bits for others).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`utf32`字符集是固定长度的（类似于`ucs2`，不同于`utf16`）。`utf32`为每个字符使用32位，不同于`ucs2`（每个字符使用16位），也不同于`utf16`（某些字符使用16位，某些使用32位）。'
- en: '`utf32` takes twice as much space as `ucs2` and more space than `utf16`, but
    `utf32` has the same advantage as `ucs2` that it is predictable for storage: The
    required number of bytes for `utf32` equals the number of characters times 4\.
    Also, unlike `utf16`, there are no tricks for encoding in `utf32`, so the stored
    value equals the code value.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`utf32`占用的空间是`ucs2`的两倍，比`utf16`更多，但`utf32`和`ucs2`一样具有存储的优势：`utf32`所需的字节数等于字符数乘以4。此外，与`utf16`不同，`utf32`没有编码技巧，因此存储的值等于代码值。'
- en: 'To demonstrate how the latter advantage is useful, here is an example that
    shows how to determine a `utf8mb4` value given the `utf32` code value:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示后一种优势的用处，这里有一个示例，展示如何根据`utf32`的代码值确定一个`utf8mb4`的值：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'MySQL is very forgiving about additions of unassigned Unicode characters or
    private-use-area characters. There is in fact only one validity check for `utf32`:
    No code value may be greater than `0x10ffff`. For example, this is illegal:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL对未分配的Unicode字符或专用区域字符的添加非常宽容。实际上，`utf32`只有一个有效性检查：没有代码值可以大于`0x10ffff`。例如，这是不合法的：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
