- en: 1\. Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 概述
- en: 原文：[https://sqlite.com/dbstat.html](https://sqlite.com/dbstat.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/dbstat.html](https://sqlite.com/dbstat.html)
- en: The DBSTAT virtual table is a read-only [eponymous virtual table](vtab.html#epovtab)
    that returns information about the amount of disk space used to store the content
    of an SQLite database. Example use cases for the DBSTAT virtual table include
    the [sqlite3_analyzer.exe](sqlanalyze.html) utility program and the [table size
    pie-chart](https://www.sqlite.org/src/repo-tabsize) in the [Fossil-implemented](https://www.fossil-scm.org/)
    version control system for SQLite.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: DBSTAT 虚拟表是一个只读的[eponymous 虚拟表](vtab.html#epovtab)，返回关于存储 SQLite 数据库内容所用磁盘空间量的信息。DBSTAT
    虚拟表的示例用途包括[sqlite3_analyzer.exe](sqlanalyze.html)实用程序程序以及[Fossil 实现的](https://www.fossil-scm.org/)SQLite
    版本控制系统中的[table size 饼图](https://www.sqlite.org/src/repo-tabsize)。
- en: The DBSTAT virtual table is available on all [database connections](c3ref/sqlite3.html)
    when SQLite is built using the [SQLITE_ENABLE_DBSTAT_VTAB](compile.html#enable_dbstat_vtab)
    compile-time option.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当 SQLite 使用[SQLITE_ENABLE_DBSTAT_VTAB](compile.html#enable_dbstat_vtab)编译时选项构建时，DBSTAT
    虚拟表在所有[数据库连接](c3ref/sqlite3.html)上都可用。
- en: 'The DBSTAT virtual table is an [eponymous virtual table](vtab.html#epovtab),
    meaning that is not necessary to run [CREATE VIRTUAL TABLE](lang_createvtab.html)
    to create an instance of the dbstat virtual table before using it. The "dbstat"
    module name can be used as if it were a table name to query the dbstat virtual
    table directly. For example:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: DBSTAT 虚拟表是一个[eponymous 虚拟表](vtab.html#epovtab)，这意味着在使用之前不需要运行[CREATE VIRTUAL
    TABLE](lang_createvtab.html)创建 dbstat 虚拟表的实例。可以将 "dbstat" 模块名称用作查询 dbstat 虚拟表直接的表名。例如：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If a named virtual table that uses the dbstat module is desired, then the recommended
    way to create an instance of the dbstat virtual table is as follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果希望使用 dbstat 模块的命名虚拟表，则创建 dbstat 虚拟表实例的推荐方法如下：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note the "temp." qualifier before the virtual table name ("stat"). This qualifier
    causes the virtual table to be temporary - to only exist for the duration of the
    current database connection. This is the recommended approach.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在虚拟表名（"stat"）之前的 "temp." 限定词。此限定词使虚拟表在当前数据库连接的持续时间内为临时存在。这是推荐的方法。
- en: The "main" argument to dbstat is default schema for which information is to
    be provided. The default is "main", and so the use of "main" in the example above
    is redundant. For any particular query, the schema can be changed by specifying
    the alternative schema as a function argument to the virtual table name in the
    FROM clause of the query. (See further discussion of [table-valued functions in
    the FROM clause](lang_select.html#tabfunc1) for more details.)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: dbstat 的 "main" 参数是提供信息的默认模式。默认为 "main"，因此上述示例中使用 "main" 是多余的。对于任何特定查询，可以通过在查询的
    FROM 子句中的虚拟表名称的函数参数中指定替代模式来更改模式（有关更多详细信息，请参见[FROM 子句中的表值函数](lang_select.html#tabfunc1)的进一步讨论）。
- en: 'The schema for the DBSTAT virtual table looks like this:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: DBSTAT 虚拟表的模式如下：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The DBSTAT table only reports on the content of btrees within the database file.
    Freelist pages, pointer-map pages, and the lock page are omitted from the analysis.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: DBSTAT 表仅报告数据库文件中 B 树的内容。自由列表页面、指针映射页面和锁页面不包括在分析中。
- en: By default, there is a single row in the DBSTAT table for each btree page the
    database file. Each row provides information about the space utilization of that
    one page of the database. However, if the hidden column "aggregate" is TRUE, then
    results are aggregated and there is a single row in the DBSTAT table for each
    btree in the database, providing information about space utilization across the
    entire btree.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，数据库文件中每个 B 树页面的 DBSTAT 表中有一行。每行提供有关数据库的该页面的空间利用信息。但是，如果隐藏列 "aggregate"
    为 TRUE，则结果将被聚合，DBSTAT 表中每个数据库中的每个 B 树仅有一行，提供跨整个 B 树的空间利用信息。
- en: 2\. The "path" column of the dbstat virtual table
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. dbstat 虚拟表的 "path" 列
- en: 'The "path" column describes the path taken from the root node of the btree
    structure to each page. The "path" of the root node itself is ''/''. The "path"
    is NULL when "aggregate" is TRUE. The "path" for the left-most child page of the
    root of a btree page is ''/000/''. (Btrees store content ordered from left to
    right so the pages to the left have smaller keys than the pages to the right.)
    The next to left-most child of the root page is ''/001'', and so on, each sibling
    page identified by a 3-digit hex value. The children of the 451st left-most sibling
    have paths such as ''/1c2/000/, ''/1c2/001/'' etc. Overflow pages are specified
    by appending a ''+'' character and a six-digit hexadecimal value to the path to
    the cell they are linked from. For example, the three overflow pages in a chain
    linked from the left-most cell of the 450th child of the root page are identified
    by the paths:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: “path”列描述了从b树结构的根节点到每个页面的路径。根节点本身的“path”是“/”。当“aggregate”为TRUE时，“path”为NULL。“path”对于b树页的根节点的最左侧子页面是“/000/”。（B树按从左到右的顺序存储内容，因此左边的页面的键比右边的页面的键小。）根页面的下一个页面是“/001”，依此类推，每个兄弟页面由3位十六进制值标识。第451个最左侧兄弟的子页面的路径如“/1c2/000/”，“/1c2/001/”等。溢出页通过将“+”字符和六位十六进制值附加到它们连接的单元格的路径来指定。例如，从根页面的第450个子页面的最左边单元格链接的三个溢出页由以下路径标识：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If the paths are sorted using the BINARY collation sequence, then the overflow
    pages associated with a cell will appear earlier in the sort-order than its child
    page:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果路径使用二进制排序规则排序，则与单元格相对应的溢出页将出现在其子页面的排序顺序之前：
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 3\. Aggregated Data
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 聚合数据
- en: Beginning with SQLite version 3.31.0 (2020-01-22), the DBSTAT table has a new
    [hidden column](vtab.html#hiddencol) named "aggregate", which if constrained to
    be TRUE will cause DBSTAT to generate one row per btree in the database, rather
    than one row per page. When running in aggregated mode, the "path", "pagetype",
    and "pgoffset" columns are always NULL and the "pageno" column holds the number
    of pages in the entire btree, rather than the number of the page that corresponds
    to the row.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从SQLite版本3.31.0（2020-01-22）开始，DBSTAT表新增了一个名为“aggregate”的[隐藏列](vtab.html#hiddencol)，如果约束为TRUE，则DBSTAT将针对数据库中的每个b数生成一行，而不是每页生成一行。在聚合模式下运行时，“path”、“pagetype”和“pgoffset”列始终为NULL，“pageno”列保存的是整个b树中的页面数，而不是对应行的页面数。
- en: 'The following table shows the meanings of the (non-hidden) columns of DBSTAT
    in both normal and aggregated mode:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了DBSTAT（非隐藏）列在正常模式和聚合模式下的含义：
- en: '| Column | Normal meaning | Aggregate-mode meaning |'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| 列 | 正常含义 | 聚合模式含义 |'
- en: '| name | The name of the table or index that is implemented by the btree of
    the current row |'
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| name | 当前行对应的b树实现的表或索引的名称 |'
- en: '| path | See [description above](#dbstatpath) | Always NULL |'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| path | 参见[上面的描述](#dbstatpath) | 始终为NULL |'
- en: '| pageno | The page number of the database page for the current row | The total
    number of pages in the btree for the current row |'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| pageno | 当前行所对应的数据库页面的页码 | 当前行所对应的b树中的页面总数 |'
- en: '| pagetype | ''leaf'' or ''interior'' | Always NULL |'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| pagetype | ‘leaf’或‘interior’ | 始终为NULL |'
- en: '| ncell | Number of cells on the current page or btree |'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| ncell | 当前页面或b树上的单元格数 |'
- en: '| payload | Bytes of useful payload on the current page or btree |'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| payload | 当前页面或b树上的有用有效载荷字节数 |'
- en: '| unused | Unused bytes of on the current page or btree |'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| unused | 当前页面或b树上未使用的字节 |'
- en: '| mx_payload | The largest payload found anywhere in the current page or btree.
    |'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| mx_payload | 当前页面或b树中找到的最大有效负载。'
- en: '| pgoffset | Byte offset to the start of the page | Always NULL |'
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| pgoffset | 页面开始的字节偏移 | 始终为NULL |'
- en: '| pgsize | Total storage space used by the current page or btree. |'
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_TB
  zh: '| pgsize | 当前页面或b树使用的总存储空间。'
- en: 4\. Example uses of the dbstat virtual table
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. DBSTAT虚拟表的用例
- en: 'To find the total number of pages used to store table "xyz" in schema "aux1",
    use either of the following two queries (the first is the traditional way, and
    the second shows the use of the aggregated feature):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找模式“aux1”中表“xyz”所使用的页面总数，请使用以下两个查询中的任一个（第一个是传统方法，第二个展示了聚合功能的使用方式）：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To see how efficiently the content of a table is stored on disk, compute the
    amount of space used to hold actual content divided by the total amount of disk
    space used. The closer this number is to 100%, the more efficient the packing.
    (In this example, the 'xyz' table is assumed to be in the 'main' schema. Again,
    there are two different versions that show the use of DBSTAT both without and
    with the new aggregated feature, respectively.)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看表格内容在磁盘上的存储效率，计算实际内容占用的空间与总磁盘空间的比值。这个比值越接近100%，打包效率越高。（在此示例中，假定'xyz'表位于'main'模式中。再次提醒，这里有两个不同版本展示了使用DBSTAT的情况，分别是不带和带有新聚合特性。）
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To find the average fan-out for a table, run:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到表的平均扇出，运行：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Modern filesystems operate faster when disk accesses are sequential. Hence,
    SQLite will run faster if the content of the database file is on sequential pages.
    To find out what fraction of the pages in a database are sequential (and thus
    obtain a measurement that might be useful in determining when to [VACUUM](lang_vacuum.html)),
    run a query like the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当磁盘访问是顺序时，现代文件系统的操作速度更快。因此，如果数据库文件的内容位于顺序页面上，SQLite 将运行更快。要找出数据库中顺序页面的比例（因此可以得到一个在决定何时执行[VACUUM](lang_vacuum.html)时可能有用的测量），运行如下查询：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
