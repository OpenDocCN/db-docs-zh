- en: 15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Statements
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.3.4 保存点、回滚到保存点和释放保存点语句
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/savepoint.html](https://dev.mysql.com/doc/refman/8.0/en/savepoint.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/savepoint.html](https://dev.mysql.com/doc/refman/8.0/en/savepoint.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`InnoDB` supports the SQL statements [`SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT,
    ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Statements"), [`ROLLBACK TO SAVEPOINT`](savepoint.html
    "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Statements"),
    [`RELEASE SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT,
    and RELEASE SAVEPOINT Statements") and the optional `WORK` keyword for [`ROLLBACK`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements").'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`支持SQL语句[`SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO
    SAVEPOINT, and RELEASE SAVEPOINT Statements")、[`ROLLBACK TO SAVEPOINT`](savepoint.html
    "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Statements")、[`RELEASE
    SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and RELEASE
    SAVEPOINT Statements")以及用于[`ROLLBACK`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")的可选`WORK`关键字。'
- en: The [`SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and
    RELEASE SAVEPOINT Statements") statement sets a named transaction savepoint with
    a name of *`identifier`*. If the current transaction has a savepoint with the
    same name, the old savepoint is deleted and a new one is set.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and
    RELEASE SAVEPOINT Statements")语句使用*`identifier`*设置具有名称的事务保存点。如果当前事务具有相同名称的保存点，则旧保存点将被删除，并设置一个新的保存点。'
- en: The [`ROLLBACK TO SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO
    SAVEPOINT, and RELEASE SAVEPOINT Statements") statement rolls back a transaction
    to the named savepoint without terminating the transaction. Modifications that
    the current transaction made to rows after the savepoint was set are undone in
    the rollback, but `InnoDB` does *not* release the row locks that were stored in
    memory after the savepoint. (For a new inserted row, the lock information is carried
    by the transaction ID stored in the row; the lock is not separately stored in
    memory. In this case, the row lock is released in the undo.) Savepoints that were
    set at a later time than the named savepoint are deleted.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ROLLBACK TO SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT,
    and RELEASE SAVEPOINT Statements")语句将事务回滚到指定的保存点，而不终止事务。在回滚中，当前事务在设置保存点后对行所做的修改将被撤消，但`InnoDB`不会释放保存点后存储在内存中的行锁。（对于新插入的行，锁信息由存储在行中的事务ID携带；锁不会单独存储在内存中。在这种情况下，行锁在撤消时被释放。）比指定保存点设置的保存点将被删除。'
- en: 'If the [`ROLLBACK TO SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK
    TO SAVEPOINT, and RELEASE SAVEPOINT Statements") statement returns the following
    error, it means that no savepoint with the specified name exists:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`ROLLBACK TO SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT,
    and RELEASE SAVEPOINT Statements")语句返回以下错误，则表示不存在具有指定名称的保存点：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The [`RELEASE SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT,
    and RELEASE SAVEPOINT Statements") statement removes the named savepoint from
    the set of savepoints of the current transaction. No commit or rollback occurs.
    It is an error if the savepoint does not exist.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[`RELEASE SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT,
    and RELEASE SAVEPOINT Statements")语句从当前事务的保存点集中移除指定的保存点。不会发生提交或回滚。如果保存点不存在，则会报错。'
- en: All savepoints of the current transaction are deleted if you execute a [`COMMIT`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements"), or a [`ROLLBACK`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements") that does not name
    a savepoint.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果执行[`COMMIT`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")或未命名保存点的[`ROLLBACK`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")，则会删除当前事务的所有保存点。
- en: A new savepoint level is created when a stored function is invoked or a trigger
    is activated. The savepoints on previous levels become unavailable and thus do
    not conflict with savepoints on the new level. When the function or trigger terminates,
    any savepoints it created are released and the previous savepoint level is restored.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当调用存储函数或触发器被激活时，将创建一个新的保存点级别。之前级别上的保存点变得不可用，因此不会与新级别上的保存点发生冲突。当函数或触发器终止时，它创建的任何保存点都会被释放，并且之前的保存点级别会被恢复。
