- en: 14.4.4 Assignment Operators
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.4.4 分配运算符
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html](https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html](https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html)
- en: '**Table 14.6 Assignment Operators**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**表14.6 分配运算符**'
- en: '| Name | Description |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '| [`:=`](assignment-operators.html#operator_assign-value) | Assign a value
    |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`:=`](assignment-operators.html#operator_assign-value) | 分配一个值 |'
- en: '| [`=`](assignment-operators.html#operator_assign-equal) | Assign a value (as
    part of a [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement, or as part of the `SET` clause in an [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statement) |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`=`](assignment-operators.html#operator_assign-equal) | 分配一个值（作为[`SET`](set-variable.html
    "15.7.6.1 变量分配的SET语法")语句的一部分，或作为[`UPDATE`](update.html "15.2.17 UPDATE语句中SET子句的一部分")语句中的`SET`子句）
    |'
- en: '[`:=`](assignment-operators.html#operator_assign-value)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`:=`](assignment-operators.html#operator_assign-value)'
- en: Assignment operator. Causes the user variable on the left hand side of the operator
    to take on the value to its right. The value on the right hand side may be a literal
    value, another variable storing a value, or any legal expression that yields a
    scalar value, including the result of a query (provided that this value is a scalar
    value). You can perform multiple assignments in the same [`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment") statement. You can perform multiple
    assignments in the same statement.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分配运算符。导致运算符左侧的用户变量取右侧的值。右侧的值可以是文字值，存储值的另一个变量，或产生标量值的任何合法表达式，包括查询的结果（前提是这个值是标量值）。您可以在同一条[`SET`](set-variable.html
    "15.7.6.1 变量分配的SET语法")语句中执行多个分配。您可以在同一条语句中执行多个分配。
- en: Unlike [`=`](assignment-operators.html#operator_assign-equal), the [`:=`](assignment-operators.html#operator_assign-value)
    operator is never interpreted as a comparison operator. This means you can use
    [`:=`](assignment-operators.html#operator_assign-value) in any valid SQL statement
    (not just in [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statements) to assign a value to a variable.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与[`=`](assignment-operators.html#operator_assign-equal)不同，[`:=`](assignment-operators.html#operator_assign-value)运算符永远不会被解释为比较运算符。这意味着您可以在任何有效的SQL语句（不仅仅是在[`SET`](set-variable.html
    "15.7.6.1 变量分配的SET语法")语句中）中使用[`:=`](assignment-operators.html#operator_assign-value)来为变量分配一个值。
- en: '[PRE0]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can make value assignments using [`:=`](assignment-operators.html#operator_assign-value)
    in other statements besides [`SELECT`](select.html "15.2.13 SELECT Statement"),
    such as [`UPDATE`](update.html "15.2.17 UPDATE Statement"), as shown here:'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了[`SELECT`](select.html "15.2.13 SELECT语句")之外，您还可以在其他语句中使用[`:=`](assignment-operators.html#operator_assign-value)进行值分配，例如[`UPDATE`](update.html
    "15.2.17 UPDATE语句")，如下所示：
- en: '[PRE1]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: While it is also possible both to set and to read the value of the same variable
    in a single SQL statement using the [`:=`](assignment-operators.html#operator_assign-value)
    operator, this is not recommended. [Section 11.4, “User-Defined Variables”](user-variables.html
    "11.4 User-Defined Variables"), explains why you should avoid doing this.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然在单个SQL语句中使用[`:=`](assignment-operators.html#operator_assign-value)运算符既可以设置变量的值又可以读取变量的值，但不建议这样做。[第11.4节，“用户定义变量”](user-variables.html
    "11.4 用户定义变量")解释了为什么应该避免这样做。
- en: '[`=`](assignment-operators.html#operator_assign-equal)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`=`](assignment-operators.html#operator_assign-equal)'
- en: This operator is used to perform value assignments in two cases, described in
    the next two paragraphs.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此运算符用于在下面两种情况下执行值分配，分别在接下来的两段中描述。
- en: Within a [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement, `=` is treated as an assignment operator that causes the user variable
    on the left hand side of the operator to take on the value to its right. (In other
    words, when used in a [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable
    Assignment") statement, `=` is treated identically to [`:=`](assignment-operators.html#operator_assign-value).)
    The value on the right hand side may be a literal value, another variable storing
    a value, or any legal expression that yields a scalar value, including the result
    of a query (provided that this value is a scalar value). You can perform multiple
    assignments in the same [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable
    Assignment") statement.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句中，`=`被视为一个赋值运算符，导致操作符左侧的用户变量取得右侧的值。（换句话说，在[`SET`](set-variable.html
    "15.7.6.1 变量赋值的SET语法")语句中使用时，`=`与[`:=`](assignment-operators.html#operator_assign-value)的作用是相同的。）右侧的值可以是一个字面值，存储值的另一个变量，或者产生标量值的任何合法表达式，包括查询的结果（前提是这个值是一个标量值）。你可以在同一个[`SET`](set-variable.html
    "15.7.6.1 变量赋值的SET语法")语句中执行多个赋值操作。
- en: In the `SET` clause of an [`UPDATE`](update.html "15.2.17 UPDATE Statement")
    statement, `=` also acts as an assignment operator; in this case, however, it
    causes the column named on the left hand side of the operator to assume the value
    given to the right, provided any `WHERE` conditions that are part of the [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") are met. You can make multiple assignments in the
    same `SET` clause of an [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在[`UPDATE`](update.html "15.2.17 UPDATE语句")语句的`SET`子句中，`=`也充当一个赋值运算符；然而，在这种情况下，它会导致操作符左侧命名的列取得右侧给定的值，前提是[`UPDATE`](update.html
    "15.2.17 UPDATE语句")中的任何`WHERE`条件都得到满足。你可以在同一个`SET`子句的[`UPDATE`](update.html "15.2.17 UPDATE语句")语句中进行多个赋值操作。
- en: In any other context, `=` is treated as a [comparison operator](comparison-operators.html#operator_equal).
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在任何其他上下文中，`=`被视为一个[比较运算符](comparison-operators.html#operator_equal)。
- en: '[PRE2]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For more information, see [Section 15.7.6.1, “SET Syntax for Variable Assignment”](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment"), [Section 15.2.17, “UPDATE Statement”](update.html
    "15.2.17 UPDATE Statement"), and [Section 15.2.15, “Subqueries”](subqueries.html
    "15.2.15 Subqueries").
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[第15.7.6.1节，“变量赋值的SET语法”](set-variable.html "15.7.6.1 变量赋值的SET语法")，[第15.2.17节，“UPDATE语句”](update.html
    "15.2.17 UPDATE语句")，以及[第15.2.15节，“子查询”](subqueries.html "15.2.15 子查询")。
