- en: 1\. Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 介绍
- en: 原文：[https://sqlite.com/sessionintro.html](https://sqlite.com/sessionintro.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/sessionintro.html](https://sqlite.com/sessionintro.html)
- en: The session extension provide a mechanism for conviently recording changes to
    some or all of certain tables in an SQLite database, and packaging those changes
    into a "changeset" or "patchset" file that can later be used to apply the same
    set of changes to another database with the same schema and compatible starting
    data. A "changeset" may also be inverted and used to "undo" a session.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 会话扩展提供了一种机制，用于方便地记录 SQLite 数据库中某些或所有表的更改，并将这些更改打包成“变更集”或“补丁集”文件，以便稍后将相同的更改集应用到具有相同模式和兼容起始数据的另一个数据库中。一个“变更集”也可以被反转并用于“撤消”一个会话。
- en: This document is an introduction to the session extension. The details of the
    interface are in the separate [Session Extension C-language Interface](session/intro.html)
    document.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本文介绍了会话扩展。接口的详细信息在单独的 [Session Extension C 语言接口](session/intro.html) 文档中。
- en: 1.1\. Typical Use Case
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1\. 典型使用案例
- en: Suppose SQLite is used as the [application file format](appfileformat.html)
    for a particular design application. Two users, Alice and Bob, each start with
    a baseline design that is about a gigabyte in size. They work all day, in parallel,
    each making their own customizations and tweaks to the design. At the end of the
    day, they would like to merge their changes together into a single unified design.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 SQLite 用作特定设计应用的 [application file format](appfileformat.html)。两个用户，Alice
    和 Bob，每个人都从一个约一千兆字节大小的基线设计开始。他们全天并行工作，各自对设计进行自定义和微调。在一天结束时，他们希望将他们的变更合并为单一的统一设计。
- en: The session extension facilitates this by recording all changes to both Alice's
    and Bob's databases and writing those changes into changeset or patchset files.
    At the end of the day, Alice can send her changeset to Bob and Bob can "apply"
    it to his database. The result (assuming there are no conflicts) is that Bob's
    database then contains both his changes and Alice's changes. Likewise, Bob can
    send a changeset of his work over to Alice and she can apply his changes to her
    database.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 会话扩展通过记录 Alice 和 Bob 数据库的所有更改，并将这些更改写入变更集或补丁集文件中，从而便于此过程。一天结束时，Alice 可以将她的变更集发送给
    Bob，并且 Bob 可以“应用”到他的数据库中。结果（假设没有冲突）是 Bob 的数据库现在包含了他自己的变更和 Alice 的变更。同样地，Bob 可以将他的工作变更集发送给
    Alice，她可以将他的变更应用到她的数据库中。
- en: In other words, the session extension provides a facility for SQLite database
    files that is similar to the unix [patch](https://en.wikipedia.org/wiki/Patch_(Unix))
    utility program, or to the "merge" capabilities of version control systems such
    as [Fossil](https://www.fossil-scm.org/), [Git](https://git-scm.com), or [Mercurial](http://www.mercurial-scm.org/).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，会话扩展为 SQLite 数据库文件提供了一个类似于 unix [patch](https://en.wikipedia.org/wiki/Patch_(Unix))
    实用程序或版本控制系统（如 [Fossil](https://www.fossil-scm.org/)、[Git](https://git-scm.com)
    或 [Mercurial](http://www.mercurial-scm.org/)）的“合并”功能的设施。
- en: 1.2\. Obtaining the Session Extension
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2\. 获取会话扩展
- en: 'Since [version 3.13.0](releaselog/3_13_0.html) (2016-05-18), the session extension
    has been included in the SQLite [amalgamation](amalgamation.html) source distribution.
    By default, the session extension is disabled. To enable it, build with the following
    compiler switches:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 自 [version 3.13.0](releaselog/3_13_0.html)（2016-05-18）起，会话扩展已包含在 SQLite [amalgamation](amalgamation.html)
    源分发中。默认情况下，会话扩展是禁用的。要启用它，请使用以下编译器开关构建：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Or, if using the autoconf build system, pass the --enable-session option to
    the configure script.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果使用 autoconf 构建系统，请在配置脚本中传递 --enable-session 选项。
- en: 1.3\. Limitations
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.3\. 限制
- en: Prior to SQLite version 3.17.0, the session extension only worked with [rowid
    tables](rowidtable.html), not [WITHOUT ROWID](withoutrowid.html) tables. As of
    3.17.0, both rowid and WITHOUT ROWID tables are supported. However, extra steps
    are needed to record primary keys for WITHOUT ROWID table changes.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 SQLite 版本 3.17.0 之前，会话扩展仅适用于 [rowid tables](rowidtable.html)，而不适用于 [WITHOUT
    ROWID](withoutrowid.html) 表。从 3.17.0 开始，rowid 和 WITHOUT ROWID 表都得到支持。然而，对于 WITHOUT
    ROWID 表的更改，需要额外的步骤来记录主键。
- en: There is no support for [virtual tables](vtab.html). Changes to virtual tables
    are not captured.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持 [virtual tables](vtab.html)。虚拟表的更改不会被捕获。
- en: The session extension only works with tables that have a declared PRIMARY KEY.
    The PRIMARY KEY of a table may be an INTEGER PRIMARY KEY (rowid alias) or an external
    PRIMARY KEY.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 会话扩展仅适用于具有声明的主键的表。表的主键可以是 INTEGER PRIMARY KEY（rowid 别名）或外部主键。
- en: SQLite allows [NULL values](nulls.html) to be stored in PRIMARY KEY columns.
    However, the session extension ignores all such rows. No changes affecting rows
    with one or more NULL values in PRIMARY KEY columns are recorded by the sessions
    module.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLite允许在主键列中存储[NULL值](nulls.html)。但是，会话扩展会忽略所有这些行。会话模块不记录影响具有一个或多个主键列中的NULL值的行的任何更改。
- en: 2\. Concepts
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 概念
- en: 2.1\. Changesets and Patchsets
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1\. 更改集和补丁集
- en: 'The sessions module revolves around creating and manipulating changesets. A
    changeset is a blob of data that encodes a series of changes to a database. Each
    change in a changeset is one of the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 会话模块围绕创建和操作更改集展开。更改集是一段数据块，编码了对数据库的一系列更改。更改集中的每个更改都是以下之一：
- en: An **INSERT**. An INSERT change contains a single row to add to a database table.
    The payload of the INSERT change consists of the values for each field of the
    new row.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**INSERT**。INSERT更改包含要添加到数据库表中的单行。INSERT更改的负载包含新行每个字段的值。
- en: A **DELETE**. A DELETE change represents a row, identified by its primary key
    values, to remove from a database table. The payload of a DELETE change consists
    of the values for all fields of the deleted row.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**DELETE**。DELETE更改表示要从数据库表中删除的行，由其主键值标识。DELETE更改的负载包含删除行的所有字段的值。
- en: 'An **UPDATE**. An UPDATE change represents the modification of one or more
    non-PRIMARY KEY fields of a single row within a database table, identified by
    its PRIMARY KEY fields. The payload for an UPDATE change consists of:'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**UPDATE**。UPDATE更改表示修改数据库表中单行的一个或多个非主键字段，由其主键字段标识。UPDATE更改的负载包括：
- en: The PRIMARY KEY values identifying the modified row,
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标识修改行的主键值，
- en: The new values for each modified field of the row, and
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个修改字段的新值，以及
- en: The original values for each modified field of the row.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行的每个修改字段的原始值。
- en: An UPDATE change does not contain any information regarding non-PRIMARY KEY
    fields that are not modified by the change. It is not possible for an UPDATE change
    to specify modifications to PRIMARY KEY fields.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: UPDATE更改不包含有关未由更改修改的非主键字段的任何信息。UPDATE更改无法指定对主键字段的修改。
- en: 'A single changeset may contain changes that apply to more than one database
    table. For each table that the changeset includes at least one change for, it
    also encodes the following data:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 单个更改集可能包含适用于多个数据库表的更改。对于每个更改集至少包含一条变更的表，它还编码以下数据：
- en: The name of the database table,
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库表的名称，
- en: The number of columns the table has, and
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表中的列数，以及
- en: Which of those columns are PRIMARY KEY columns.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些列中哪些是主键列。
- en: Changesets may only be applied to databases that contain tables matching the
    above three criteria as stored in the changeset.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 更改集只能应用于包含与更改集中存储的上述三个条件匹配的表的数据库。
- en: 'A patchset is similar to a changeset. It is slightly more compact than a changeset,
    but provides more limited conflict detection and resolution options (see the next
    section for details). The differences between a patchset and a changeset are that:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 补丁集类似于更改集。它比更改集稍微紧凑，但提供了更有限的冲突检测和解决选项（详情请参见下一节）。补丁集与更改集的区别在于：
- en: For a **DELETE** change, the payload consists of the PRIMARY KEY fields only.
    The original values of other fields are not stored as part of a patchset.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于**DELETE**更改，负载仅包括主键字段。其他字段的原始值不作为补丁集的一部分存储。
- en: For an **UPDATE** change, the payload consists of the PRIMARY KEY fields and
    the new values of modified fields only. The original values of modified fields
    are not stored as part of a patchset.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于**UPDATE**更改，负载仅包括主键字段和修改字段的新值。修改字段的原始值不作为补丁集的一部分存储。
- en: 2.2\. Conflicts
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2\. 冲突
- en: When a changeset or patchset is applied to a database, an attempt is made to
    insert a new row for each INSERT change, remove a row for each DELETE change and
    modify a row for each UPDATE change. If the target database is in the same state
    as the original database that the changeset was recorded on, this is a simple
    matter. However, if the contents of the target database is not in exactly this
    state, conflicts can occur when applying the changeset or patchset.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当将更改集或补丁集应用于数据库时，会尝试为每个INSERT更改插入一行新行，为每个DELETE更改删除一行，并为每个UPDATE更改修改一行。如果目标数据库的内容与记录更改集时的原始数据库状态完全相同，这很简单。但是，如果目标数据库的内容不完全处于这种状态，当应用更改集或补丁集时可能会发生冲突。
- en: 'When processing an **INSERT** change, the following conflicts can occur:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 处理**INSERT**变更时，可能会发生以下冲突：
- en: The target database may already contain a row with the same PRIMARY KEY values
    as specified by the INSERT change.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标数据库可能已包含与INSERT变更指定的相同主键值的行。
- en: Some other database constraint, for example a UNIQUE or CHECK constraint, may
    be violated when the new row is inserted.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当新行插入时，可能会违反一些其他数据库约束，例如唯一约束或检查约束。
- en: 'When processing a **DELETE** change, the following conflicts may be detected:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 处理**DELETE**变更时，可能会检测到以下冲突：
- en: The target database may contain no row with the specified PRIMARY KEY values
    to delete.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标数据库可能不包含指定主键值的行以进行删除。
- en: The target database may contain a row with the specified PRIMARY KEY values,
    but the other fields may contain values that do not match those stored as part
    of the changeset. This type of conflict is not detected when using a patchset.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标数据库可能包含具有指定主键值的行，但其他字段可能包含与变更集内存储的值不匹配的值。使用补丁集时不会检测到此类冲突。
- en: 'When processing an **UPDATE** change, the following conflicts may be detected:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 处理**UPDATE**变更时，可能会检测到以下冲突：
- en: The target database may contain no row with the specified PRIMARY KEY values
    to modify.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标数据库可能不包含指定主键值的行以进行修改。
- en: The target database may contain a row with the specified PRIMARY KEY values,
    but the current values of the fields that will be modified by the change may not
    match the original values stored within the changeset. This type of conflict is
    not detected when using a patchset.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标数据库可能包含具有指定主键值的行，但由变更集内存储的原始值与将被修改的字段的当前值不匹配。使用补丁集时不会检测到此类冲突。
- en: Some other database constraint, for example a UNIQUE or CHECK constraint, may
    be violated when the row is updated.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当更新行时，可能会违反一些其他数据库约束，例如唯一约束或检查约束。
- en: Depending on the type of conflict, a sessions application has a variety of configurable
    options for dealing with conflicts, ranging from omitting the conflicting change,
    aborting the entire changeset application or applying the change despite the conflict.
    For details, refer to the documentation for the [sqlite3changeset_apply()](session/sqlite3changeset_apply.html)
    API.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 根据冲突类型，会话应用程序具有多种可配置选项用于处理冲突，从忽略冲突变更、中止整个变更集应用程序或尽管存在冲突但仍应用变更。详情请参考[sqlite3changeset_apply()](session/sqlite3changeset_apply.html)
    API的文档。
- en: 2.3\. Changeset Construction
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.3\. 变更集构建
- en: After a session object has been configured, it begins monitoring for changes
    to its configured tables. However, it does not record an entire change each time
    a row within the database is modified. Instead, it records just the PRIMARY KEY
    fields for each inserted row, and just the PRIMARY KEY and all original row values
    for any updated or deleted rows. If a row is modified more than once by a single
    session, no new information is recorded.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成会话对象后，它开始监视其配置表格的更改。但每次修改数据库中的行时，它并不记录整个变更。相反，它仅记录每个插入行的主键字段，以及任何更新或删除行的主键和所有原始行值。如果单个会话多次修改一行，则不会记录新信息。
- en: The other information required to create a changeset or patchset is read from
    the database file when [sqlite3session_changeset()](session/sqlite3session_changeset.html)
    or [sqlite3session_patchset()](session/sqlite3session_patchset.html) is called.
    Specifically,
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 调用[sqlite3session_changeset()](session/sqlite3session_changeset.html)或[sqlite3session_patchset()](session/sqlite3session_patchset.html)时，从数据库文件中读取创建变更集或补丁集所需的其他信息。具体来说，
- en: For each primary key recorded as a result of an INSERT operation, the sessions
    module checks if there is a row with a matching primary key still in the table.
    If so, an INSERT change is added to the changeset.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于因INSERT操作而记录为主键的每个主键，会话模块会检查表中是否仍存在具有匹配主键的行。如果存在，则将添加INSERT变更到变更集中。
- en: For each primary key recorded as a result of an UPDATE or DELETE operation,
    the sessions module also checks for a row with a matching primary key within the
    table. If one can be found, but one or more of the non-PRIMARY KEY fields does
    not match the original recorded value, an UPDATE is added to the changeset. Or,
    if there is no row at all with the specified primary key, a DELETE is added to
    the changeset. If the row does exist but none of the non-PRIMARY KEY fields have
    been modified, no change is added to the changeset.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于由于 UPDATE 或 DELETE 操作记录的每个主键，会话模块还检查表中是否存在具有匹配主键的行。如果可以找到一行，但一个或多个非主键字段与原始记录的值不匹配，则将
    UPDATE 添加到变更集中。或者，如果根本没有具有指定主键的行，则向变更集添加 DELETE。如果行确实存在但未修改任何非主键字段，则不向变更集添加更改。
- en: One implication of the above is that if a change is made and then unmade within
    a single session (for example if a row is inserted and then deleted again), the
    sessions module does not report any change at all. Or if a row is updated multiple
    times within the same session, all updates are coalesced into a single update
    within any changeset or patchset blob.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 由上述可知，如果在单个会话内进行更改并撤消更改（例如，如果插入行然后再次删除），则会话模块不报告任何更改。或者如果在同一会话内多次更新行，则所有更新都合并为任何变更集或补丁集
    blob 中的单个更新。
- en: 3\. Using The Session Extension
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 使用会话扩展
- en: This section provides examples that demonstrate how to use the sessions extension.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供示例，演示如何使用会话扩展。
- en: 3.1\. Capturing a Changeset
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1\. 捕获变更集
- en: 'The example code below demonstrates the steps involved in capturing a changeset
    while executing SQL commands. In summary:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例代码演示了在执行 SQL 命令时捕获变更集所涉及的步骤。总结如下：
- en: A session object (type sqlite3_session*) is created by making a call to the
    [sqlite3session_create()](session/sqlite3session_create.html) API function.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过调用 [sqlite3session_create()](session/sqlite3session_create.html) API 函数创建会话对象（类型为
    sqlite3_session*）。
- en: A single session object monitors changes made to a single database (i.e. "main",
    "temp" or an attached database) via a single sqlite3* database handle.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 单个会话对象通过单个 sqlite3* 数据库句柄监视对单个数据库（即“main”、“temp”或已附加的数据库）的更改。
- en: The session object is configured with a set of tables to monitor changes on.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会话对象已配置为监视更改的表集。
- en: 'By default a session object does not monitor changes on any database table.
    Before it does so it must be configured. There are three ways to configure the
    set of tables to monitor changes on:'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，会话对象不监视任何数据库表的更改。在监视之前，必须对其进行配置。有三种方法可以配置要监视更改的表集：
- en: By explicitly specifying tables using one call to [sqlite3session_attach()](session/sqlite3session_attach.html)
    for each table, or
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过为每个表使用一次 [sqlite3session_attach()](session/sqlite3session_attach.html) 调用显式指定表，或者
- en: By specifying that all tables in the database should be monitored for changes
    using a call to [sqlite3session_attach()](session/sqlite3session_attach.html)
    with a NULL argument, or
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用 NULL 参数调用 [sqlite3session_attach()](session/sqlite3session_attach.html)
    指定监视数据库中所有表的更改。
- en: By configuring a callback to be invoked the first time each table is written
    to that indicates to the session module whether or not changes on the table should
    be monitored.
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过配置回调，在每次写入表时第一次调用时，指示会话模块是否应监视表上的更改。
- en: The example code below uses the second of the methods enumerated above - it
    monitors for changes on all database tables.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下面的示例代码使用上述方法中的第二种方法 - 它监视所有数据库表的更改。
- en: Changes are made to the database by executing SQL statements. The session object
    records these changes.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行 SQL 语句对数据库进行更改。会话对象记录这些更改。
- en: A changeset blob is extracted from the session object using a call to [sqlite3session_changeset()](session/sqlite3session_changeset.html)
    (or, if using patchsets, a call to the [sqlite3session_patchset()](session/sqlite3session_patchset.html)
    function).
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用调用 [sqlite3session_changeset()](session/sqlite3session_changeset.html) 函数从会话对象中提取变更集
    blob（或者，如果使用补丁集，则调用 [sqlite3session_patchset()](session/sqlite3session_patchset.html)
    函数）。
- en: The session object is deleted using a call to the [sqlite3session_delete()](session/sqlite3session_delete.html)
    API function.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用调用 [sqlite3session_delete()](session/sqlite3session_delete.html) API 函数删除会话对象。
- en: It is not necessary to delete a session object after extracting a changeset
    or patchset from it. It can be left attached to the database handle and will continue
    monitoring for changes on the configured tables as before. However, if [sqlite3session_changeset()](session/sqlite3session_changeset.html)
    or [sqlite3session_patchset()](session/sqlite3session_patchset.html) is called
    a second time on a session object, the changeset or patchset will contain *all*
    changes that have taken place on the connection since the session was created.
    In other words, a session object is not reset or zeroed by a call to sqlite3session_changeset()
    or sqlite3session_patchset().
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从session对象中提取变更集或补丁集后，不必删除该会话对象。它可以保持连接到数据库句柄，并继续监视配置的表中的变更，就像之前一样。但是，如果在会话对象上第二次调用[sqlite3session_changeset()](session/sqlite3session_changeset.html)或[sqlite3session_patchset()](session/sqlite3session_patchset.html)，则变更集或补丁集将包含自会话创建以来连接上发生的*所有*变更。换句话说，会话对象不会因调用sqlite3session_changeset()或sqlite3session_patchset()而重置或归零。
- en: '[PRE1]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 3.2\. Applying a Changeset to a Database
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2\. 将变更集应用到数据库
- en: Applying a changeset to a database is simpler than capturing a changeset. Usually,
    a single call to [sqlite3changeset_apply()](session/sqlite3changeset_apply.html),
    as depicted in the example code below, suffices.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 将变更集应用到数据库比捕获变更集更简单。通常，如下面的示例代码所示，只需调用一次[sqlite3changeset_apply()](session/sqlite3changeset_apply.html)即可。
- en: In cases where it is complicated, the complications in applying a changeset
    lie in conflict resolution. Refer to the API documentation linked above for details.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用变更集时复杂的情况通常出现在冲突解决中。有关详细信息，请参阅上面链接的API文档。
- en: '[PRE2]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 3.3\. Inspecting the Contents of a Changeset
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3\. 检查变更集的内容
- en: 'The example code below demonstrates the techniques used to iterate through
    and extract the data related to all changes in a changeset. To summarize:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例代码演示了用于迭代并提取变更集中所有变更数据的技术。总结如下：
- en: The [sqlite3changeset_start()](session/sqlite3changeset_start.html) API is called
    to create and initialize an iterator to iterate through the contents of a changeset.
    Initially, the iterator points to no element at all.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用[sqlite3changeset_start()](session/sqlite3changeset_start.html) API来创建和初始化一个迭代器，以便迭代变更集的内容。最初，迭代器不指向任何元素。
- en: The first call to [sqlite3changeset_next()](session/sqlite3changeset_next.html)
    on the iterator moves it to point to the first change in the changeset (or to
    EOF, if the changeset is completely empty). sqlite3changeset_next() returns SQLITE_ROW
    if it moves the iterator to point to a valid entry, SQLITE_DONE if it moves the
    iterator to EOF, or an SQLite error code if an error occurs.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一次调用[sqlite3changeset_next()](session/sqlite3changeset_next.html)会将迭代器移动到变更集中第一个变更处（如果变更集完全为空，则移动到EOF）。sqlite3changeset_next()在将迭代器移动到有效条目时返回SQLITE_ROW，在将迭代器移动到EOF时返回SQLITE_DONE，在发生错误时返回SQLite错误代码。
- en: If the iterator points to a valid entry, the [sqlite3changeset_op()](session/sqlite3changeset_op.html)
    API may be used to determine the type of change (INSERT, UPDATE or DELETE) that
    the iterator points to. Additionally, the same API can be used to obtain the name
    of the table the change applies to and its expected number of columns and primary
    key columns.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果迭代器指向有效条目，则可以使用[sqlite3changeset_op()](session/sqlite3changeset_op.html) API来确定迭代器指向的变更类型（INSERT、UPDATE或DELETE）。此外，相同的API还可用于获取应用变更的表的名称、预期列数和主键列数。
- en: If the iterator points to a valid INSERT or UPDATE entry, the [sqlite3changeset_new()](session/sqlite3changeset_new.html)
    API may be used to obtain the new.* values within the change payload.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果迭代器指向有效的INSERT或UPDATE条目，则可以使用[sqlite3changeset_new()](session/sqlite3changeset_new.html)
    API来获取变更负载中的new.*值。
- en: If the iterator points to a valid DELETE or UPDATE entry, the [sqlite3changeset_old()](session/sqlite3changeset_old.html)
    API may be used to obtain the old.* values within the change payload.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果迭代器指向有效的DELETE或UPDATE条目，则可以使用[sqlite3changeset_old()](session/sqlite3changeset_old.html)
    API来获取变更负载中的old.*值。
- en: An iterator is deleted using a call to the [sqlite3changeset_finalize()](session/sqlite3changeset_finalize.html)
    API. If an error occured while iterating, an SQLite error code is returned (even
    if the same error code has already been returned by sqlite3changeset_next()).
    Or, if no error has occurred, SQLITE_OK is returned.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用调用[sqlite3changeset_finalize()](session/sqlite3changeset_finalize.html) API来删除迭代器。如果在迭代过程中发生错误，则返回SQLite错误代码（即使sqlite3changeset_next()已经返回相同的错误代码）。如果没有发生错误，则返回SQLITE_OK。
- en: '[PRE3]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 4\. Extended Functionality
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 扩展功能
- en: 'Most applications will only use the session module functionality described
    in the previous section. However, the following additional functionality is available
    for the use and manipulation of changeset and patchset blobs:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数应用程序仅使用前一部分描述的会话模块功能。但是，以下额外功能可供使用和操作变更集和补丁集二进制数据：
- en: Two or more changeset/patchsets may be combined using the [sqlite3changeset_concat()](session/sqlite3changeset_concat.html)
    or [sqlite3_changegroup](session/changegroup.html) interfaces.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用[sqlite3changeset_concat()](session/sqlite3changeset_concat.html)或[sqlite3_changegroup](session/changegroup.html)接口合并两个或多个变更集/补丁集。
- en: A changeset may be "inverted" using the [sqlite3changeset_invert()](session/sqlite3changeset_invert.html)
    API function. An inverted changeset undoes the changes made by the original. If
    changeset C^+ is the inverse of changeset C, then applying C and then C^+ to a
    database should leave the database unchanged.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用[sqlite3changeset_invert()](session/sqlite3changeset_invert.html) API函数“反转”一个变更集。反转后的变更集会撤销原始变更。如果变更集C^+是变更集C的逆变更集，则将变更集C应用于数据库，然后再应用C^+，数据库应该保持不变。
