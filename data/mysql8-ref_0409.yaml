- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/connection-control-installation.html](https://dev.mysql.com/doc/refman/8.0/en/connection-control-installation.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/connection-control-installation.html](https://dev.mysql.com/doc/refman/8.0/en/connection-control-installation.html)
- en: 8.4.2.1 Connection-Control Plugin Installation
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 8.4.2.1 连接控制插件安装
- en: This section describes how to install the connection-control plugins, `CONNECTION_CONTROL`
    and `CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`. For general information about
    installing plugins, see [Section 7.6.1, “Installing and Uninstalling Plugins”](plugin-loading.html
    "7.6.1 Installing and Uninstalling Plugins").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何安装连接控制插件`CONNECTION_CONTROL`和`CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`。有关安装插件的一般信息，请参见[第7.6.1节，“安装和卸载插件”](plugin-loading.html
    "7.6.1 Installing and Uninstalling Plugins")。
- en: To be usable by the server, the plugin library file must be located in the MySQL
    plugin directory (the directory named by the [`plugin_dir`](server-system-variables.html#sysvar_plugin_dir)
    system variable). If necessary, configure the plugin directory location by setting
    the value of [`plugin_dir`](server-system-variables.html#sysvar_plugin_dir) at
    server startup.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要使服务器可用，插件库文件必须位于MySQL插件目录中（由[`plugin_dir`](server-system-variables.html#sysvar_plugin_dir)系统变量命名的目录）。如果需要，通过在服务器启动时设置[`plugin_dir`](server-system-variables.html#sysvar_plugin_dir)的值来配置插件目录位置。
- en: The plugin library file base name is `connection_control`. The file name suffix
    differs per platform (for example, `.so` for Unix and Unix-like systems, `.dll`
    for Windows).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 插件库文件的基本名称是`connection_control`。文件名后缀因平台而异（例如，对于Unix和类Unix系统，为`.so`，对于Windows为`.dll`）。
- en: 'To load the plugins at server startup, use the [`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add)
    option to name the library file that contains them. With this plugin-loading method,
    the option must be given each time the server starts. For example, put these lines
    in the server `my.cnf` file, adjusting the `.so` suffix for your platform as necessary:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要在服务器启动时加载插件，请使用[`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add)选项命名包含它们的库文件。使用此插件加载方法，选项必须在每次服务器启动时给出。例如，将以下行放入服务器的`my.cnf`文件中，根据需要调整您平台的`.so`后缀：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After modifying `my.cnf`, restart the server to cause the new settings to take
    effect.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 修改`my.cnf`后，重新启动服务器以使新设置生效。
- en: 'Alternatively, to load the plugins at runtime, use these statements, adjusting
    the `.so` suffix for your platform as necessary:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要在运行时加载插件，请使用以下语句，根据需要调整您平台的`.so`后缀：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN Statement")
    loads the plugin immediately, and also registers it in the `mysql.plugins` system
    table to cause the server to load it for each subsequent normal startup without
    the need for [`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN Statement")立即加载插件，并在`mysql.plugins`系统表中注册它，以使服务器在每次后续正常启动时加载它，而无需[`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add)。'
- en: 'To verify plugin installation, examine the Information Schema [`PLUGINS`](information-schema-plugins-table.html
    "28.3.22 The INFORMATION_SCHEMA PLUGINS Table") table or use the [`SHOW PLUGINS`](show-plugins.html
    "15.7.7.25 SHOW PLUGINS Statement") statement (see [Section 7.6.2, “Obtaining
    Server Plugin Information”](obtaining-plugin-information.html "7.6.2 Obtaining
    Server Plugin Information")). For example:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证插件安装，请检查信息模式[`PLUGINS`](information-schema-plugins-table.html "28.3.22 The
    INFORMATION_SCHEMA PLUGINS Table")表，或使用[`SHOW PLUGINS`](show-plugins.html "15.7.7.25 SHOW
    PLUGINS Statement")语句（参见[第7.6.2节，“获取服务器插件信息”](obtaining-plugin-information.html
    "7.6.2 Obtaining Server Plugin Information")）。例如：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If a plugin fails to initialize, check the server error log for diagnostic messages.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插件初始化失败，请检查服务器错误日志以获取诊断信息。
- en: 'If the plugins have been previously registered with [`INSTALL PLUGIN`](install-plugin.html
    "15.7.4.4 INSTALL PLUGIN Statement") or are loaded with [`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add),
    you can use the `--connection-control` and `--connection-control-failed-login-attempts`
    options at server startup to control plugin activation. For example, to load the
    plugins at startup and prevent them from being removed at runtime, use these options:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插件之前已经使用[`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN Statement")注册过，或者使用[`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add)加载过，您可以在服务器启动时使用`--connection-control`和`--connection-control-failed-login-attempts`选项来控制插件的激活。例如，要在启动时加载插件并防止它们在运行时被移除，请使用以下选项：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If it is desired to prevent the server from running without a given connection-control
    plugin, use an option value of `FORCE` or `FORCE_PLUS_PERMANENT` to force server
    startup to fail if the plugin does not initialize successfully.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果希望防止服务器在没有给定连接控制插件的情况下运行，请使用 `FORCE` 或 `FORCE_PLUS_PERMANENT` 的选项值，以强制服务器启动失败，如果插件未成功初始化。
- en: Note
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is possible to install one plugin without the other, but both must be installed
    for full connection-control capability. In particular, installing only the `CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`
    plugin is of little use because, without the `CONNECTION_CONTROL` plugin to provide
    the data that populates the [`CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`](information-schema-connection-control-failed-login-attempts-table.html
    "28.6.2 The INFORMATION_SCHEMA CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS Table")
    table, the table is always empty.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 可以安装一个插件而不安装另一个插件，但必须同时安装两个插件才能实现完整的连接控制功能。特别是，仅安装 `CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`
    插件几乎没有用处，因为没有 `CONNECTION_CONTROL` 插件提供数据来填充 [`CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`](information-schema-connection-control-failed-login-attempts-table.html
    "28.6.2 INFORMATION_SCHEMA CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS 表") 表，该表始终为空。
- en: '[Connection Delay Configuration](connection-control-installation.html#connection-control-plugin-delay-configuration
    "Connection Delay Configuration")'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[连接延迟配置](connection-control-installation.html#connection-control-plugin-delay-configuration
    "连接延迟配置")'
- en: '[Connection Failure Assessment](connection-control-installation.html#connection-control-plugin-failure-assessment
    "Connection Failure Assessment")'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[连接失败评估](connection-control-installation.html#connection-control-plugin-failure-assessment
    "连接失败评估")'
- en: '[Connection Failure Monitoring](connection-control-installation.html#connection-control-plugin-failure-monitoring
    "Connection Failure Monitoring")'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[连接失败监控](connection-control-installation.html#connection-control-plugin-failure-monitoring
    "连接失败监控")'
- en: Connection Delay Configuration
  id: totrans-22
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 连接延迟配置
- en: 'To enable configuring its operation, the `CONNECTION_CONTROL` plugin exposes
    these system variables:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用其操作配置，`CONNECTION_CONTROL` 插件公开了这些系统变量：
- en: '[`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold):
    The number of consecutive failed connection attempts permitted to accounts before
    the server adds a delay for subsequent connection attempts. To disable failed-connection
    counting, set [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    to zero.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold):
    在服务器在为账户添加延迟以进行后续连接尝试之前允许的连续失败连接尝试次数。要禁用失败连接计数，请将 [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    设置为零。'
- en: '[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay):
    The minimum delay in milliseconds for connection failures above the threshold.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay):
    连接失败的最小延迟时间（毫秒）超过阈值。'
- en: '[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay):
    The maximum delay in milliseconds for connection failures above the threshold.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay):
    连接失败的最大延迟时间（毫秒）超过阈值。'
- en: 'If [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    is nonzero, failed-connection counting is enabled and has these properties:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    不为零，则启用了失败连接计数，并具有以下属性：
- en: The delay is zero up through [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    consecutive failed connection attempts.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 延迟为零，直到[`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    连续失败的连接尝试。
- en: Thereafter, the server adds an increasing delay for subsequent consecutive attempts,
    until a successful connection occurs. The initial unadjusted delays begin at 1000
    milliseconds (1 second) and increase by 1000 milliseconds per attempt. That is,
    once delay has been activated for an account, the unadjusted delays for subsequent
    failed attempts are 1000 milliseconds, 2000 milliseconds, 3000 milliseconds, and
    so forth.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 之后，服务器会为后续连续尝试添加递增延迟，直到成功连接发生。初始未调整的延迟从1000毫秒（1秒）开始，每次尝试增加1000毫秒。也就是说，一旦账户激活延迟，后续失败尝试的未调整延迟为1000毫秒、2000毫秒、3000毫秒等。
- en: The actual delay experienced by a client is the unadjusted delay, adjusted to
    lie within the values of the [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    and [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    system variables, inclusive.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端实际经历的延迟是未调整的延迟，调整后的值在[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)和[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)系统变量的值范围内。
- en: Once delay has been activated for an account, the first successful connection
    thereafter by the account also experiences a delay, but failure counting is reset
    for subsequent connections.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦账户激活延迟，随后该账户的第一次成功连接也会经历延迟，但是对于后续连接，失败计数会被重置。
- en: 'For example, with the default [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    value of 3, there is no delay for the first three consecutive failed connection
    attempts by an account. The actual adjusted delays experienced by the account
    for the fourth and subsequent failed connections depend on the [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    and [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    values:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，使用默认的[`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)值为3，账户的前三次连续连接尝试失败不会有延迟。账户在第四次及后续失败连接中实际调整的延迟取决于[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)和[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)的值：
- en: If [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    and [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    are 1000 and 20000, the adjusted delays are the same as the unadjusted delays,
    up to a maximum of 20000 milliseconds. The fourth and subsequent failed connections
    are delayed by 1000 milliseconds, 2000 milliseconds, 3000 milliseconds, and so
    forth.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)和[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)分别为1000和20000，调整后的延迟与未调整的延迟相同，最多不超过20000毫秒。第四次及后续失败连接延迟为1000毫秒、2000毫秒、3000毫秒等。
- en: If [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    and [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    are 1500 and 20000, the adjusted delays for the fourth and subsequent failed connections
    are 1500 milliseconds, 2000 milliseconds, 3000 milliseconds, and so forth, up
    to a maximum of 20000 milliseconds.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)和[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)分别为1500和20000，第四次及后续失败连接的调整延迟为1500毫秒、2000毫秒、3000毫秒等，最多不超过20000毫秒。
- en: If [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    and [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    are 2000 and 3000, the adjusted delays for the fourth and subsequent failed connections
    are 2000 milliseconds, 2000 milliseconds, and 3000 milliseconds, with all subsequent
    failed connections also delayed by 3000 milliseconds.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    和 [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    分别为 2000 和 3000，则第四次及后续失败连接的调整延迟为 2000 毫秒、2000 毫秒和 3000 毫秒，所有后续失败连接也将延迟 3000 毫秒。
- en: 'You can set the `CONNECTION_CONTROL` system variables at server startup or
    runtime. Suppose that you want to permit four consecutive failed connection attempts
    before the server starts delaying its responses, with a minimum delay of 2000
    milliseconds. To set the relevant variables at server startup, put these lines
    in the server `my.cnf` file:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在服务器启动或运行时设置`CONNECTION_CONTROL`系统变量。假设您希望在服务器开始延迟其响应之前允许四次连续失败的连接尝试，最小延迟为
    2000 毫秒。要在服务器启动时设置相关变量，请将以下行放入服务器的`my.cnf`文件中：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To set and persist the variables at runtime, use these statements:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要在运行时设置并持久化变量，请使用以下语句：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[`SET PERSIST`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    sets a value for the running MySQL instance. It also saves the value, causing
    it to carry over to subsequent server restarts. To change a value for the running
    MySQL instance without having it carry over to subsequent restarts, use the `GLOBAL`
    keyword rather than `PERSIST`. See [Section 15.7.6.1, “SET Syntax for Variable
    Assignment”](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment").'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SET PERSIST`](set-variable.html "15.7.6.1 变量赋值的SET语法") 为正在运行的 MySQL 实例设置一个值。它还保存该值，导致其在后续服务器重新启动时保留。要更改正在运行的
    MySQL 实例的值，而不使其在后续重新启动时保留，使用`GLOBAL`关键字而不是`PERSIST`。参见[Section 15.7.6.1, “变量赋值的SET语法”](set-variable.html
    "15.7.6.1 变量赋值的SET语法")。'
- en: 'The [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    and [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    system variables both have minimum and maximum values of 1000 and 2147483647\.
    In addition, the permitted range of values of each variable also depends on the
    current value of the other:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    和 [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    系统变量的最小值和最大值均为 1000 和 2147483647。此外，每个变量的允许值范围还取决于另一个变量的当前值：'
- en: '[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    cannot be set greater than the current value of [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay).'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    不能设置为大于当前值[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)。'
- en: '[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    cannot be set less than the current value of [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay).'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    不能设置为小于当前值[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)。'
- en: Thus, to make the changes required for some configurations, you might need to
    set the variables in a specific order. Suppose that the current minimum and maximum
    delays are 1000 and 2000, and that you want to set them to 3000 and 5000\. You
    cannot first set [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    to 3000 because that is greater than the current [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    value of 2000\. Instead, set [`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)
    to 5000, then set [`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)
    to 3000.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了对某些配置所需的更改进行设置，您可能需要按特定顺序设置变量。假设当前的最小延迟和最大延迟分别为1000和2000，并且您想将它们设置为3000和5000。您不能首先将[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)设置为3000，因为这大于当前的[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)值2000。相反，先将[`connection_control_max_connection_delay`](connection-control-variables.html#sysvar_connection_control_max_connection_delay)设置为5000，然后将[`connection_control_min_connection_delay`](connection-control-variables.html#sysvar_connection_control_min_connection_delay)设置为3000。
- en: Connection Failure Assessment
  id: totrans-45
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 连接失败评估
- en: When the `CONNECTION_CONTROL` plugin is installed, it checks connection attempts
    and tracks whether they fail or succeed. For this purpose, a failed connection
    attempt is one for which the client user and host match a known MySQL account
    but the provided credentials are incorrect, or do not match any known account.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当安装了`CONNECTION_CONTROL`插件时，它会检查连接尝试并跟踪它们是失败还是成功。为此，连接失败尝试是指客户端用户和主机匹配已知的MySQL账户，但提供的凭据不正确，或者不匹配任何已知账户。
- en: 'Failed-connection counting is based on the user/host combination for each connection
    attempt. Determination of the applicable user name and host name takes proxying
    into account and occurs as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 失败连接计数基于每次连接尝试的用户/主机组合。适用用户名称和主机名称的确定考虑了代理，并按以下方式进行：
- en: If the client user proxies another user, the account for failed-connection counting
    is the proxying user, not the proxied user. For example, if `external_user@example.com`
    proxies `proxy_user@example.com`, connection counting uses the proxying user,
    `external_user@example.com`, rather than the proxied user, `proxy_user@example.com`.
    Both `external_user@example.com` and `proxy_user@example.com` must have valid
    entries in the `mysql.user` system table and a proxy relationship between them
    must be defined in the `mysql.proxies_priv` system table (see [Section 8.2.19,
    “Proxy Users”](proxy-users.html "8.2.19 Proxy Users")).
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果客户端用户代理另一个用户，则失败连接计数的账户是代理用户，而不是被代理用户。例如，如果`external_user@example.com`代理了`proxy_user@example.com`，连接计数使用代理用户`external_user@example.com`，而不是被代理用户`proxy_user@example.com`。`external_user@example.com`和`proxy_user@example.com`必须在`mysql.user`系统表中有有效条目，并且它们之间必须在`mysql.proxies_priv`系统表中定义代理关系（参见[第8.2.19节，“代理用户”](proxy-users.html
    "8.2.19 代理用户")）。
- en: If the client user does not proxy another user, but does match a `mysql.user`
    entry, counting uses the [`CURRENT_USER()`](information-functions.html#function_current-user)
    value corresponding to that entry. For example, if a user `user1` connecting from
    a host `host1.example.com` matches a `user1@host1.example.com` entry, counting
    uses `user1@host1.example.com`. If the user matches a `user1@%.example.com`, `user1@%.com`,
    or `user1@%` entry instead, counting uses `user1@%.example.com`, `user1@%.com`,
    or `user1@%`, respectively.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果客户端用户没有代理另一个用户，但匹配了一个`mysql.user`条目，则计数使用与该条目对应的[`CURRENT_USER()`](information-functions.html#function_current-user)值。例如，如果用户`user1`从主机`host1.example.com`连接匹配了`user1@host1.example.com`条目，则计数使用`user1@host1.example.com`。如果用户匹配了`user1@%.example.com`、`user1@%.com`或`user1@%`条目，计数分别使用`user1@%.example.com`、`user1@%.com`或`user1@%`。
- en: For the cases just described, the connection attempt matches some `mysql.user`
    entry, and whether the request succeeds or fails depends on whether the client
    provides the correct authentication credentials. For example, if the client presents
    an incorrect password, the connection attempt fails.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于刚才描述的情况，连接尝试匹配了一些`mysql.user`条目，请求成功或失败取决于客户端是否提供了正确的身份验证凭据。例如，如果客户端提供了错误的密码，连接尝试将失败。
- en: If the connection attempt matches no `mysql.user` entry, the attempt fails.
    In this case, no [`CURRENT_USER()`](information-functions.html#function_current-user)
    value is available and connection-failure counting uses the user name provided
    by the client and the client host as determined by the server. For example, if
    a client attempts to connect as user `user2` from host `host2.example.com`, the
    user name part is available in the client request and the server determines the
    host information. The user/host combination used for counting is `user2@host2.example.com`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果连接尝试与任何 `mysql.user` 条目不匹配，则尝试失败。在这种情况下，没有 [`CURRENT_USER()`](information-functions.html#function_current-user)
    值可用，连接失败计数使用客户端提供的用户名和服务器确定的客户端主机。例如，如果客户端尝试作为用户 `user2` 从主机 `host2.example.com`
    连接，则用户名称部分在客户端请求中可用，服务器确定主机信息。用于计数的用户/主机组合是 `user2@host2.example.com`。
- en: Note
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The server maintains information about which client hosts can possibly connect
    to the server (essentially the union of host values for `mysql.user` entries).
    If a client attempts to connect from any other host, the server rejects the attempt
    at an early stage of connection setup:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器维护关于哪些客户端主机可能连接到服务器的信息（基本上是 `mysql.user` 条目的主机值的并集）。如果客户端尝试从任何其他主机连接，服务器在连接设置的早期阶段拒绝尝试：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Because this type of rejection occurs so early, `CONNECTION_CONTROL` does not
    see it, and does not count it.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这种类型的拒绝发生得如此早，`CONNECTION_CONTROL` 看不到它，并且不计数。
- en: Connection Failure Monitoring
  id: totrans-56
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 连接失败监控
- en: 'To monitor failed connections, use these information sources:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要监视失败连接，请使用以下信息来源：
- en: The [`Connection_control_delay_generated`](connection-control-variables.html#statvar_Connection_control_delay_generated)
    status variable indicates the number of times the server added a delay to its
    response to a failed connection attempt. This does not count attempts that occur
    before reaching the threshold defined by the [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    system variable.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_control_delay_generated`](connection-control-variables.html#statvar_Connection_control_delay_generated)
    状态变量指示服务器在响应失败连接尝试时添加延迟的次数。这不包括在达到由 [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    系统变量定义的阈值之前发生的尝试。'
- en: The `INFORMATION_SCHEMA` [`CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`](information-schema-connection-control-failed-login-attempts-table.html
    "28.6.2 The INFORMATION_SCHEMA CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS Table")
    table provides information about the current number of consecutive failed connection
    attempts per account (user/host combination). This counts all failed attempts,
    regardless of whether they were delayed.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INFORMATION_SCHEMA` [`CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`](information-schema-connection-control-failed-login-attempts-table.html
    "28.6.2 INFORMATION_SCHEMA CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS 表") 表提供了关于每个账户（用户/主机组合）连续失败连接尝试的当前数量的信息。这计算所有失败尝试，无论它们是否被延迟。'
- en: 'Assigning a value to [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    at runtime has these effects:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行时为 [`connection_control_failed_connections_threshold`](connection-control-variables.html#sysvar_connection_control_failed_connections_threshold)
    赋值会产生以下效果：
- en: All accumulated failed-connection counters are reset to zero.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有累积的失败连接计数器被重置为零。
- en: The [`Connection_control_delay_generated`](connection-control-variables.html#statvar_Connection_control_delay_generated)
    status variable is reset to zero.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Connection_control_delay_generated`](connection-control-variables.html#statvar_Connection_control_delay_generated)
    状态变量被重置为零。'
- en: The [`CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`](information-schema-connection-control-failed-login-attempts-table.html
    "28.6.2 The INFORMATION_SCHEMA CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS Table")
    table becomes empty.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS`](information-schema-connection-control-failed-login-attempts-table.html
    "28.6.2 INFORMATION_SCHEMA CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS 表") 表变为空。'
