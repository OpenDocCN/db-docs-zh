- en: 28.3.34 The INFORMATION_SCHEMA STATISTICS Table
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 28.3.34 The INFORMATION_SCHEMA STATISTICS Table
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/information-schema-statistics-table.html](https://dev.mysql.com/doc/refman/8.0/en/information-schema-statistics-table.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/information-schema-statistics-table.html](https://dev.mysql.com/doc/refman/8.0/en/information-schema-statistics-table.html)
- en: The [`STATISTICS`](information-schema-statistics-table.html "28.3.34 The INFORMATION_SCHEMA
    STATISTICS Table") table provides information about table indexes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`STATISTICS`](information-schema-statistics-table.html "28.3.34 The INFORMATION_SCHEMA
    STATISTICS Table")表提供有关表索引的信息。'
- en: Columns in [`STATISTICS`](information-schema-statistics-table.html "28.3.34 The
    INFORMATION_SCHEMA STATISTICS Table") that represent table statistics hold cached
    values. The [`information_schema_stats_expiry`](server-system-variables.html#sysvar_information_schema_stats_expiry)
    system variable defines the period of time before cached table statistics expire.
    The default is 86400 seconds (24 hours). If there are no cached statistics or
    statistics have expired, statistics are retrieved from storage engines when querying
    table statistics columns. To update cached values at any time for a given table,
    use [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement").
    To always retrieve the latest statistics directly from storage engines, set [`information_schema_stats_expiry=0`](server-system-variables.html#sysvar_information_schema_stats_expiry).
    For more information, see [Section 10.2.3, “Optimizing INFORMATION_SCHEMA Queries”](information-schema-optimization.html
    "10.2.3 Optimizing INFORMATION_SCHEMA Queries").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`STATISTICS`](information-schema-statistics-table.html "28.3.34 The INFORMATION_SCHEMA
    STATISTICS Table")中表示表统计信息的列保存了缓存值。[`information_schema_stats_expiry`](server-system-variables.html#sysvar_information_schema_stats_expiry)系统变量定义了缓存表统计信息过期之前的时间段。默认值为86400秒（24小时）。如果没有缓存的统计信息或统计信息已过期，则在查询表统计信息列时从存储引擎中检索统计信息。要随时更新给定表的缓存值，请使用[`ANALYZE
    TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")。要始终直接从存储引擎中检索最新的统计信息，请设置[`information_schema_stats_expiry=0`](server-system-variables.html#sysvar_information_schema_stats_expiry)。有关更多信息，请参见[Section 10.2.3，“优化
    INFORMATION_SCHEMA 查询”](information-schema-optimization.html "10.2.3 Optimizing
    INFORMATION_SCHEMA Queries")。'
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If the [`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)
    system variable is enabled, [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement") may fail because it cannot update statistics tables in the data
    dictionary, which use `InnoDB`. For [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement") operations that update the key distribution, failure may occur
    even if the operation updates the table itself (for example, if it is a `MyISAM`
    table). To obtain the updated distribution statistics, set [`information_schema_stats_expiry=0`](server-system-variables.html#sysvar_information_schema_stats_expiry).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了[`innodb_read_only`](innodb-parameters.html#sysvar_innodb_read_only)系统变量，则可能因为无法更新使用`InnoDB`的数据字典中的统计信息表而导致[`ANALYZE
    TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")失败。即使操作更新了表本身（例如，如果是`MyISAM`表），对更新键分布的[`ANALYZE
    TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")操作也可能导致失败。要获取更新后的分布统计信息，请设置[`information_schema_stats_expiry=0`](server-system-variables.html#sysvar_information_schema_stats_expiry)。
- en: 'The [`STATISTICS`](information-schema-statistics-table.html "28.3.34 The INFORMATION_SCHEMA
    STATISTICS Table") table has these columns:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[`STATISTICS`](information-schema-statistics-table.html "28.3.34 The INFORMATION_SCHEMA
    STATISTICS Table")表具有以下列：'
- en: '`TABLE_CATALOG`'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TABLE_CATALOG`'
- en: The name of the catalog to which the table containing the index belongs. This
    value is always `def`.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含索引的表所属的目录的名称。此值始终为`def`。
- en: '`TABLE_SCHEMA`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TABLE_SCHEMA`'
- en: The name of the schema (database) to which the table containing the index belongs.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含索引的表所属的模式（数据库）的名称。
- en: '`TABLE_NAME`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TABLE_NAME`'
- en: The name of the table containing the index.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含索引的表的名称。
- en: '`NON_UNIQUE`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NON_UNIQUE`'
- en: 0 if the index cannot contain duplicates, 1 if it can.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果索引不能包含重复项，则为0，如果可以则为1。
- en: '`INDEX_SCHEMA`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INDEX_SCHEMA`'
- en: The name of the schema (database) to which the index belongs.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引所属的模式（数据库）的名称。
- en: '`INDEX_NAME`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INDEX_NAME`'
- en: The name of the index. If the index is the primary key, the name is always `PRIMARY`.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引的名称。如果索引是主键，则名称始终为`PRIMARY`。
- en: '`SEQ_IN_INDEX`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SEQ_IN_INDEX`'
- en: The column sequence number in the index, starting with 1.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引中的列序号，从1开始。
- en: '`COLUMN_NAME`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COLUMN_NAME`'
- en: The column name. See also the description for the `EXPRESSION` column.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列名。另请参阅`EXPRESSION`列的描述。
- en: '`COLLATION`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COLLATION`'
- en: How the column is sorted in the index. This can have values `A` (ascending),
    `D` (descending), or `NULL` (not sorted).
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列在索引中的排序方式。这可以是`A`（升序），`D`（降序）或`NULL`（未排序）。
- en: '`CARDINALITY`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CARDINALITY`'
- en: An estimate of the number of unique values in the index. To update this number,
    run [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement") or
    (for `MyISAM` tables) [**myisamchk -a**](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility").
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引中唯一值的估计数量。要更新此数字，请运行[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE
    TABLE Statement")或（对于`MyISAM`表）[**myisamchk -a**](myisamchk.html "6.6.4 myisamchk
    — MyISAM Table-Maintenance Utility")。
- en: '`CARDINALITY` is counted based on statistics stored as integers, so the value
    is not necessarily exact even for small tables. The higher the cardinality, the
    greater the chance that MySQL uses the index when doing joins.'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`CARDINALITY`是基于存储为整数的统计数据计算的，因此即使对于小表，该值也不一定是精确的。基数越高，MySQL在执行连接时使用索引的可能性就越大。'
- en: '`SUB_PART`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SUB_PART`'
- en: The index prefix. That is, the number of indexed characters if the column is
    only partly indexed, `NULL` if the entire column is indexed.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引前缀。也就是，如果列仅部分索引，则索引字符数，如果整个列被索引，则为`NULL`。
- en: Note
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Prefix *limits* are measured in bytes. However, prefix *lengths* for index specifications
    in [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement"), [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement"), and [`CREATE INDEX`](create-index.html
    "15.1.15 CREATE INDEX Statement") statements are interpreted as number of characters
    for nonbinary string types ([`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types"),
    [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types"), [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")) and number of bytes for binary string types
    ([`BINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY Types"), [`VARBINARY`](binary-varbinary.html
    "13.3.3 The BINARY and VARBINARY Types"), [`BLOB`](blob.html "13.3.4 The BLOB
    and TEXT Types")). Take this into account when specifying a prefix length for
    a nonbinary string column that uses a multibyte character set.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前缀*限制*以字节为单位。但是，在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")，[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")和[`CREATE INDEX`](create-index.html
    "15.1.15 CREATE INDEX Statement")语句中的索引规范中，对于非二进制字符串类型（[`CHAR`](char.html "13.3.2 The
    CHAR and VARCHAR Types")，[`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types")，[`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")），前缀*长度*被解释为多字节字符集的字符数，对于二进制字符串类型（[`BINARY`](binary-varbinary.html
    "13.3.3 The BINARY and VARBINARY Types")，[`VARBINARY`](binary-varbinary.html "13.3.3 The
    BINARY and VARBINARY Types")，[`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")），前缀*长度*以字节为单位。在为使用多字节字符集的非二进制字符串列指定前缀长度时，请考虑这一点。
- en: For additional information about index prefixes, see [Section 10.3.5, “Column
    Indexes”](column-indexes.html "10.3.5 Column Indexes"), and [Section 15.1.15,
    “CREATE INDEX Statement”](create-index.html "15.1.15 CREATE INDEX Statement").
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关索引前缀的其他信息，请参见[第10.3.5节，“列索引”](column-indexes.html "10.3.5 Column Indexes")和[第15.1.15节，“CREATE
    INDEX Statement”](create-index.html "15.1.15 CREATE INDEX Statement")。
- en: '`PACKED`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PACKED`'
- en: Indicates how the key is packed. `NULL` if it is not.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指示键如何打包。如果不是，则为`NULL`。
- en: '`NULLABLE`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NULLABLE`'
- en: Contains `YES` if the column may contain `NULL` values and `''` if not.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含`YES`，如果列可能包含`NULL`值，`''`如果不包含。
- en: '`INDEX_TYPE`'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INDEX_TYPE`'
- en: The index method used (`BTREE`, `FULLTEXT`, `HASH`, `RTREE`).
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用的索引方法（`BTREE`，`FULLTEXT`，`HASH`，`RTREE`）。
- en: '`COMMENT`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COMMENT`'
- en: Information about the index not described in its own column, such as `disabled`
    if the index is disabled.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关于索引的信息，未在其自己的列中描述，例如如果索引已禁用，则为`disabled`。
- en: '`INDEX_COMMENT`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INDEX_COMMENT`'
- en: Any comment provided for the index with a `COMMENT` attribute when the index
    was created.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建索引时使用`COMMENT`属性提供的索引的任何注释。
- en: '`IS_VISIBLE`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IS_VISIBLE`'
- en: Whether the index is visible to the optimizer. See [Section 10.3.12, “Invisible
    Indexes”](invisible-indexes.html "10.3.12 Invisible Indexes").
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引是否对优化器可见。请参见[第10.3.12节，“不可见索引”](invisible-indexes.html "10.3.12 Invisible
    Indexes")。
- en: '`EXPRESSION`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EXPRESSION`'
- en: 'MySQL 8.0.13 and higher supports functional key parts (see [Functional Key
    Parts](create-index.html#create-index-functional-key-parts "Functional Key Parts")),
    which affects both the `COLUMN_NAME` and `EXPRESSION` columns:'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL 8.0.13及更高版本支持功能键部分（参见[功能键部分](create-index.html#create-index-functional-key-parts
    "Functional Key Parts")），这影响`COLUMN_NAME`和`EXPRESSION`列：
- en: For a nonfunctional key part, `COLUMN_NAME` indicates the column indexed by
    the key part and `EXPRESSION` is `NULL`.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于非功能键部分，`COLUMN_NAME`指示由键部分索引的列，`EXPRESSION`为`NULL`。
- en: For a functional key part, `COLUMN_NAME` column is `NULL` and `EXPRESSION` indicates
    the expression for the key part.
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于功能键部分，`COLUMN_NAME`列为`NULL`，而`EXPRESSION`表示键部分的表达式。
- en: Notes
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: There is no standard `INFORMATION_SCHEMA` table for indexes. The MySQL column
    list is similar to what SQL Server 2000 returns for `sp_statistics`, except that
    `QUALIFIER` and `OWNER` are replaced with `CATALOG` and `SCHEMA`, respectively.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有用于索引的标准`INFORMATION_SCHEMA`表。MySQL列列表类似于 SQL Server 2000 返回的`sp_statistics`，只是`QUALIFIER`和`OWNER`分别替换为`CATALOG`和`SCHEMA`。
- en: 'Information about table indexes is also available from the [`SHOW INDEX`](show-index.html
    "15.7.7.22 SHOW INDEX Statement") statement. See [Section 15.7.7.22, “SHOW INDEX
    Statement”](show-index.html "15.7.7.22 SHOW INDEX Statement"). The following statements
    are equivalent:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 表索引的信息也可以从[`SHOW INDEX`](show-index.html "15.7.7.22 SHOW INDEX Statement")语句中获取。请参见[第
    15.7.7.22 节，“SHOW INDEX Statement”](show-index.html "15.7.7.22 SHOW INDEX Statement")。以下语句是等效的：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In MySQL 8.0.30 and later, information about generated invisible primary key
    columns is visible in this table by default. You can cause such information to
    be hidden by setting [`show_gipk_in_create_table_and_information_schema = OFF`](server-system-variables.html#sysvar_show_gipk_in_create_table_and_information_schema).
    For more information, see [Section 15.1.20.11, “Generated Invisible Primary Keys”](create-table-gipks.html
    "15.1.20.11 Generated Invisible Primary Keys").
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.30 及更高版本中，默认情况下，此表中显示有关生成的不可见主键列的信息。您可以通过设置[`show_gipk_in_create_table_and_information_schema
    = OFF`](server-system-variables.html#sysvar_show_gipk_in_create_table_and_information_schema)来隐藏此类信息。有关更多信息，请参见[第
    15.1.20.11 节，“生成的不可见主键”](create-table-gipks.html "15.1.20.11 生成的不可见主键")。
