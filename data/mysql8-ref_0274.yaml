- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/binary-log-formats.html](https://dev.mysql.com/doc/refman/8.0/en/binary-log-formats.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/binary-log-formats.html](https://dev.mysql.com/doc/refman/8.0/en/binary-log-formats.html)
- en: 7.4.4.1 Binary Logging Formats
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 7.4.4.1 二进制日志格式
- en: 'The server uses several logging formats to record information in the binary
    log:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器使用几种日志记录格式来记录二进制日志中的信息：
- en: Replication capabilities in MySQL originally were based on propagation of SQL
    statements from source to replica. This is called *statement-based logging*. You
    can cause this format to be used by starting the server with [`--binlog-format=STATEMENT`](replication-options-binary-log.html#sysvar_binlog_format).
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL中的复制功能最初基于从源到副本的SQL语句传播。这被称为*基于语句的日志记录*。您可以通过使用[`--binlog-format=STATEMENT`](replication-options-binary-log.html#sysvar_binlog_format)启动服务器来使用此格式。
- en: In *row-based logging* (the default), the source writes events to the binary
    log that indicate how individual table rows are affected. You can cause the server
    to use row-based logging by starting it with [`--binlog-format=ROW`](replication-options-binary-log.html#sysvar_binlog_format).
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*基于行的日志记录*（默认情况下）中，源将事件写入二进制日志，指示单个表行受到的影响。您可以通过使用[`--binlog-format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)启动服务器来使用基于行的日志记录。
- en: 'A third option is also available: *mixed logging*. With mixed logging, statement-based
    logging is used by default, but the logging mode switches automatically to row-based
    in certain cases as described below. You can cause MySQL to use mixed logging
    explicitly by starting [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    with the option [`--binlog-format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format).'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有第三个选项：*混合日志记录*。使用混合日志记录，默认情况下使用基于语句的日志记录，但在某些情况下自动切换到基于行的日志记录，如下所述。您可以通过使用选项[`--binlog-format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)显式启动MySQL来使用混合日志记录。
- en: The logging format can also be set or limited by the storage engine being used.
    This helps to eliminate issues when replicating certain statements between a source
    and replica which are using different storage engines.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录格式也可以由正在使用的存储引擎设置或限制。这有助于消除在源和副本之间复制某些语句时使用不同存储引擎时出现的问题。
- en: With statement-based replication, there may be issues with replicating nondeterministic
    statements. In deciding whether or not a given statement is safe for statement-based
    replication, MySQL determines whether it can guarantee that the statement can
    be replicated using statement-based logging. If MySQL cannot make this guarantee,
    it marks the statement as potentially unreliable and issues the warning, Statement
    may not be safe to log in statement format.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用基于语句的复制时，可能会出现复制非确定性语句的问题。在决定给定语句是否适合基于语句的复制时，MySQL确定是否可以保证该语句可以使用基于语句的日志记录进行复制。如果MySQL无法做出此保证，则将该语句标记为潜在不可靠，并发出警告，语句可能不安全以语句格式记录。
- en: You can avoid these issues by using MySQL's row-based replication instead.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用MySQL的基于行的复制来避免这些问题。
