- en: 20.3.1 Group Replication Requirements
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 20.3.1 Group Replication Requirements
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-requirements.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-requirements.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-requirements.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-requirements.html)
- en: '[Infrastructure](group-replication-requirements.html#group-replication-infrastructure
    "Infrastructure")'
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[基础设施](group-replication-requirements.html#group-replication-infrastructure
    "基础设施")'
- en: '[Server Instance Configuration](group-replication-requirements.html#group-replication-configuration
    "Server Instance Configuration")'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[服务器实例配置](group-replication-requirements.html#group-replication-configuration
    "服务器实例配置")'
- en: Server instances that you want to use for Group Replication must satisfy the
    following requirements.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望用于Group Replication的服务器实例必须满足以下要求。
- en: Infrastructure
  id: totrans-5
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 基础设施
- en: '**InnoDB Storage Engine. ** Data must be stored in the [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") transactional storage engine. Transactions
    are executed optimistically and then, at commit time, are checked for conflicts.
    If there are conflicts, in order to maintain consistency across the group, some
    transactions are rolled back. This means that a transactional storage engine is
    required. Moreover, [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB
    Storage Engine") provides some additional functionality that enables better management
    and handling of conflicts when operating together with Group Replication. The
    use of other storage engines, including the temporary [`MEMORY`](memory-storage-engine.html
    "18.3 The MEMORY Storage Engine") storage engine, might cause errors in Group
    Replication. Convert any tables in other storage engines to use [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") before using the instance with Group Replication.
    You can prevent the use of other storage engines by setting the [`disabled_storage_engines`](server-system-variables.html#sysvar_disabled_storage_engines)
    system variable on group members, for example:'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**InnoDB存储引擎。** 数据必须存储在[`InnoDB`](innodb-storage-engine.html "第17章 InnoDB存储引擎")事务性存储引擎中。事务乐观执行，然后在提交时检查冲突。如果存在冲突，为了在组内保持一致性，一些事务将被回滚。这意味着需要一个事务性存储引擎。此外，[`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB存储引擎")提供了一些额外功能，使其在与Group Replication一起操作时能更好地管理和处理冲突。使用其他存储引擎，包括临时[`MEMORY`](memory-storage-engine.html
    "第18.3章 MEMORY存储引擎")存储引擎，可能会导致Group Replication中的错误。在将实例与Group Replication一起使用之前，请将任何其他存储引擎中的表转换为使用[`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB存储引擎")。您可以通过在组成员上设置[`disabled_storage_engines`](server-system-variables.html#sysvar_disabled_storage_engines)系统变量来阻止使用其他存储引擎，例如：'
- en: '[PRE0]'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Primary Keys. ** Every table that is to be replicated by the group must have
    a defined primary key, or primary key equivalent where the equivalent is a non-null
    unique key. Such keys are required as a unique identifier for every row within
    a table, enabling the system to determine which transactions conflict by identifying
    exactly which rows each transaction has modified. Group Replication has its own
    built-in set of checks for primary keys or primary key equivalents, and does not
    use the checks carried out by the [`sql_require_primary_key`](server-system-variables.html#sysvar_sql_require_primary_key)
    system variable. You may set `sql_require_primary_key=ON` for a server instance
    where Group Replication is running, and you may set the `REQUIRE_TABLE_PRIMARY_KEY_CHECK`
    option of the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement") statement to `ON` for a Group Replication
    channel. However, be aware that you might find some transactions that are permitted
    under Group Replication''s built-in checks are not permitted under the checks
    carried out when you set `sql_require_primary_key=ON` or `REQUIRE_TABLE_PRIMARY_KEY_CHECK=ON`.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主键。** 每个要被组复制的表必须有一个定义好的主键，或者等效的主键，其中等效主键是一个非空唯一键。这些键被要求作为表中每一行的唯一标识符，使系统能够通过确定每个事务修改了哪些行来确定哪些事务发生了冲突。组复制有自己内置的主键或主键等效的检查，不使用[`sql_require_primary_key`](server-system-variables.html#sysvar_sql_require_primary_key)系统变量执行的检查。您可以在运行组复制的服务器实例上设置`sql_require_primary_key=ON`，并且您可以为组复制通道设置[`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html "15.4.2.1 CHANGE
    MASTER TO Statement")语句的`REQUIRE_TABLE_PRIMARY_KEY_CHECK`选项为`ON`。但是，请注意，您可能会发现一些在组复制内置检查下允许的事务，在设置`sql_require_primary_key=ON`或`REQUIRE_TABLE_PRIMARY_KEY_CHECK=ON`时不被允许。'
- en: '**Network Performance. ** MySQL Group Replication is designed to be deployed
    in a cluster environment where server instances are very close to each other.
    The performance and stability of a group can be impacted by both network latency
    and network bandwidth. Bi-directional communication must be maintained at all
    times between all group members. If either inbound or outbound communication is
    blocked for a server instance (for example, by a firewall, or by connectivity
    issues), the member cannot function in the group, and the group members (including
    the member with issues) might not be able to report the correct member status
    for the affected server instance.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络性能。** MySQL组复制被设计用于部署在服务器实例非常接近的集群环境中。组的性能和稳定性可能会受到网络延迟和网络带宽的影响。所有组成员之间必须始终保持双向通信。如果某个服务器实例的入站或出站通信被阻止（例如，由防火墙或连接问题），该成员无法在组中运行，并且组成员（包括存在问题的成员）可能无法报告受影响服务器实例的正确成员状态。'
- en: From MySQL 8.0.14, you can use an IPv4 or IPv6 network infrastructure, or a
    mix of the two, for TCP communication between remote Group Replication servers.
    There is also nothing preventing Group Replication from operating over a virtual
    private network (VPN).
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.14开始，您可以在远程组复制服务器之间使用IPv4或IPv6网络基础设施，或两者混合，进行TCP通信。组复制也可以在虚拟专用网络（VPN）上运行，没有任何限制。
- en: Also from MySQL 8.0.14, where Group Replication server instances are co-located
    and share a local group communication engine (XCom) instance, a dedicated input
    channel with lower overhead is used for communication where possible instead of
    the TCP socket. For certain Group Replication tasks that require communication
    between remote XCom instances, such as joining a group, the TCP network is still
    used, so network performance influences the group's performance.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同样从MySQL 8.0.14开始，当组复制服务器实例位于同一位置并共享本地组通信引擎（XCom）实例时，会尽可能使用专用输入通道进行通信，而不是TCP套接字，以降低开销。对于某些需要远程XCom实例之间通信的组复制任务，比如加入一个组，仍然使用TCP网络，因此网络性能会影响组的性能。
- en: Server Instance Configuration
  id: totrans-12
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 服务器实例配置
- en: The following options must be configured as shown on server instances that are
    members of a group.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 必须按照以下所示配置的选项在组成员的服务器实例上进行配置。
- en: '**Unique Server Identifier. ** Use the [`server_id`](replication-options.html#sysvar_server_id)
    system variable to configure the server with a unique server ID, as required for
    all servers in replication topologies. The server ID must be a positive integer
    between 1 and (2^(32))−1, and it must be different from every other server ID
    in use by any other server in the replication topology.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**唯一服务器标识符。** 使用[`server_id`](replication-options.html#sysvar_server_id)系统变量为服务器配置一个唯一的服务器ID，这对于复制拓扑中的所有服务器都是必需的。服务器ID必须是介于1和(2^(32))−1之间的正整数，并且必须与复制拓扑中任何其他服务器使用的任何其他服务器ID不同。'
- en: '**Binary Log Active. ** Set [`--log-bin[=log_file_name]`](replication-options-binary-log.html#sysvar_log_bin).
    From MySQL 8.0, binary logging is enabled by default, and you do not need to specify
    this option unless you want to change the name of the binary log files. Group
    Replication replicates the binary log''s contents, therefore the binary log needs
    to be on for it to operate. See [Section 7.4.4, “The Binary Log”](binary-log.html
    "7.4.4 The Binary Log").'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二进制日志激活。** 设置[`--log-bin[=log_file_name]`](replication-options-binary-log.html#sysvar_log_bin)。从MySQL
    8.0开始，默认情况下启用了二进制日志记录，除非您想更改二进制日志文件的名称，否则不需要指定此选项。组复制会复制二进制日志的内容，因此二进制日志需要处于活动状态才能运行。请参阅[第7.4.4节，“二进制日志”](binary-log.html
    "7.4.4 二进制日志")。'
- en: '**Replica Updates Logged. ** Set [`log_replica_updates=ON`](replication-options-binary-log.html#sysvar_log_replica_updates)
    (from MySQL 8.0.26) or [`log_slave_updates=ON`](replication-options-binary-log.html#sysvar_log_slave_updates)
    (before MySQL 8.0.26). From MySQL 8.0, this setting is the default, so you do
    not need to specify it. Group members need to log transactions that are received
    from their donors at joining time and applied through the replication applier,
    and to log all transactions that they receive and apply from the group. This enables
    Group Replication to carry out distributed recovery by state transfer from an
    existing group member''s binary log.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复制更新记录。** 设置[`log_replica_updates=ON`](replication-options-binary-log.html#sysvar_log_replica_updates)（从MySQL
    8.0.26开始）或[`log_slave_updates=ON`](replication-options-binary-log.html#sysvar_log_slave_updates)（在MySQL
    8.0.26之前）。从MySQL 8.0开始，此设置是默认的，因此您不需要指定它。组成员需要记录从其提供者在加入时接收并通过复制应用程序应用的事务，并记录他们接收并应用于组中的所有事务。这使得组复制能够通过从现有组成员的二进制日志进行状态传输来进行分布式恢复。'
- en: '**Binary Log Row Format. ** Set [`binlog_format=row`](replication-options-binary-log.html#sysvar_binlog_format).
    This setting is the default, so you do not need to specify it. Group Replication
    relies on the row-based replication format to propagate changes consistently among
    the servers in the group, and extract the necessary information to detect conflicts
    among transactions that execute concurrently in different servers in the group.
    From MySQL 8.0.19, the `REQUIRE_ROW_FORMAT` setting is automatically added to
    Group Replication''s channels to enforce the use of row-based replication when
    the transactions are applied. See [Section 19.2.1, “Replication Formats”](replication-formats.html
    "19.2.1 Replication Formats") and [Section 19.3.3, “Replication Privilege Checks”](replication-privilege-checks.html
    "19.3.3 Replication Privilege Checks").'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二进制日志行格式。** 设置[`binlog_format=row`](replication-options-binary-log.html#sysvar_binlog_format)。这是默认设置，因此您不需要指定它。组复制依赖于基于行的复制格式来在组中的服务器之间一致地传播更改，并提取必要的信息以检测在组中不同服务器上同时执行的事务之间的冲突。从MySQL
    8.0.19开始，`REQUIRE_ROW_FORMAT`设置会自动添加到组复制的通道中，以强制在应用事务时使用基于行的复制。请参阅[第19.2.1节，“复制格式”](replication-formats.html
    "19.2.1 复制格式")和[第19.3.3节，“复制权限检查”](replication-privilege-checks.html "19.3.3 复制权限检查")。'
- en: '**Binary Log Checksums Off (to MySQL 8.0.20). ** Up to and including MySQL
    8.0.20, set [`binlog_checksum=NONE`](replication-options-binary-log.html#sysvar_binlog_checksum).
    In these releases, Group Replication cannot make use of checksums and does not
    support their presence in the binary log. From MySQL 8.0.21, Group Replication
    supports checksums, so group members may use the default setting [`binlog_checksum=CRC32`](replication-options-binary-log.html#sysvar_binlog_checksum),
    and you do not need to specify it.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关闭二进制日志校验和（至MySQL 8.0.20）。** 在MySQL 8.0.20及之前的版本中，设置[`binlog_checksum=NONE`](replication-options-binary-log.html#sysvar_binlog_checksum)。在这些版本中，组复制无法使用校验和，并且不支持其存在于二进制日志中。从MySQL
    8.0.21开始，组复制支持校验和，因此组成员可以使用默认设置[`binlog_checksum=CRC32`](replication-options-binary-log.html#sysvar_binlog_checksum)，您不需要指定它。'
- en: '**Global Transaction Identifiers On. ** Set [`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)
    and [`enforce_gtid_consistency=ON`](replication-options-gtids.html#sysvar_enforce_gtid_consistency).
    These settings are not the defaults. GTID-based replication is required for Group
    Replication, which uses global transaction identifiers to track the transactions
    that have been committed on every server instance in the group. See [Section 19.1.3,
    “Replication with Global Transaction Identifiers”](replication-gtids.html "19.1.3 Replication
    with Global Transaction Identifiers").'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全局事务标识符开启。** 将[`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)和[`enforce_gtid_consistency=ON`](replication-options-gtids.html#sysvar_enforce_gtid_consistency)设置为`ON`。这些设置不是默认值。基于GTID的复制对于Group
    Replication是必需的，它使用全局事务标识符来跟踪已在组中的每个服务器实例上提交的事务。参见[第19.1.3节，“使用全局事务标识符进行复制”](replication-gtids.html
    "19.1.3 使用全局事务标识符进行复制")。'
- en: '**Replication Information Repositories. ** Set [`master_info_repository=TABLE`](replication-options-replica.html#sysvar_master_info_repository)
    and [`relay_log_info_repository=TABLE`](replication-options-replica.html#sysvar_relay_log_info_repository).
    In MySQL 8.0, these settings are the default, and the `FILE` setting is deprecated.
    From MySQL 8.0.23, the use of these system variables is deprecated, so omit the
    system variables and just allow the default. The replication applier needs to
    have the replication metadata written to the `mysql.slave_master_info` and `mysql.slave_relay_log_info`
    system tables to ensure the Group Replication plugin has consistent recoverability
    and transactional management of the replication metadata. See [Section 19.2.4.2,
    “Replication Metadata Repositories”](replica-logs-status.html "19.2.4.2 Replication
    Metadata Repositories").'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复制信息存储库。** 将[`master_info_repository=TABLE`](replication-options-replica.html#sysvar_master_info_repository)和[`relay_log_info_repository=TABLE`](replication-options-replica.html#sysvar_relay_log_info_repository)设置为`TABLE`。在MySQL
    8.0中，这些设置是默认的，`FILE`设置已被弃用。从MySQL 8.0.23开始，这些系统变量的使用已被弃用，因此省略这些系统变量，只允许默认设置。复制应用程序需要将复制元数据写入`mysql.slave_master_info`和`mysql.slave_relay_log_info`系统表，以确保Group
    Replication插件具有一致的可恢复性和事务管理的复制元数据。参见[第19.2.4.2节，“复制元数据存储库”](replica-logs-status.html
    "19.2.4.2 复制元数据存储库")。'
- en: '**Transaction Write Set Extraction. ** Set [`transaction_write_set_extraction=XXHASH64`](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)
    so that while collecting rows to log them to the binary log, the server collects
    the write set as well. In MySQL 8.0, this setting is the default, and from MySQL
    8.0.26, the use of the system variable is deprecated. The write set is based on
    the primary keys of each row and is a simplified and compact view of a tag that
    uniquely identifies the row that was changed. Group Replication uses this information
    for conflict detection and certification on all group members.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事务写集提取。** 将[`transaction_write_set_extraction=XXHASH64`](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)设置为`XXHASH64`，以便在收集要记录到二进制日志的行时，服务器也收集写入集。在MySQL
    8.0中，这是默认设置，从MySQL 8.0.26开始，该系统变量的使用已被弃用。写入集基于每行的主键，并且是一个简化且紧凑的视图，用于唯一标识已更改的行。Group
    Replication在所有组成员上使用此信息进行冲突检测和认证。'
- en: '**Default Table Encryption. ** Set [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    to the same value on all group members. Default schema and tablespace encryption
    can be either enabled (`ON`) or disabled (`OFF`, the default) as long as the setting
    is the same on all members.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认表加密。** 将[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置为所有组成员上的相同值。默认模式和表空间加密可以启用（`ON`）或禁用（`OFF`，默认值），只要所有成员的设置相同即可。'
- en: '**Lower Case Table Names. ** Set [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    to the same value on all group members. A setting of 1 is correct for the use
    of the [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine")
    storage engine, which is required for Group Replication. Note that this setting
    is not the default on all platforms.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表名小写。** 将[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)设置为所有组成员上的相同值。对于使用[`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB存储引擎")存储引擎的情况，设置为1是正确的，这是Group Replication所需的。请注意，这个设置在所有平台上都不是默认值。'
- en: '**Binary Log Dependency Tracking. ** Setting [`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)
    to `WRITESET` can improve performance for a group member, depending on the group''s
    workload. While Group Replication carries out its own parallelization after certification
    when applying transactions from the relay log, independently of any value set
    for `binlog_transaction_dependency_tracking`, this value does affect how transactions
    are written to the binary logs on Group Replication members. The dependency information
    in those logs is used to assist the process of state transfer for distributed
    recovery from a donor''s binary log, which takes place whenever a member joins
    or rejoins the group.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二进制日志依赖跟踪。** 将[`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)设置为`WRITESET`可以根据组的工作负载提高组成员的性能。虽然在应用中继日志中的事务时，组复制在认证后进行自己的并行化，独立于为`binlog_transaction_dependency_tracking`设置的任何值，但是这个值确实影响了事务在组复制成员的二进制日志中的写入方式。这些日志中的依赖信息用于协助从捐赠者的二进制日志进行分布式恢复的状态传输过程，每当成员加入或重新加入组时都会发生。'
- en: Note
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: When [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    is `ON`, setting `binlog_transaction_dependency_tracking` to `WRITESET` has the
    same effect as setting it to `WRITESET_SESSION`.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)设置为`ON`时，将`binlog_transaction_dependency_tracking`设置为`WRITESET`与将其设置为`WRITESET_SESSION`具有相同的效果。
- en: '**Multithreaded Appliers. ** Group Replication members can be configured as
    multithreaded replicas, enabling transactions to be applied in parallel. From
    MySQL 8.0.27, all replicas are configured as multithreaded by default. A nonzero
    value for the system variable [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    (from MySQL 8.0.26) or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    (before MySQL 8.0.26) enables the multithreaded applier on the member. The default
    from MySQL 8.0.27 is 4 parallel applier threads, and up to 1024 parallel applier
    threads can be specified. For a multithreaded replica, the following settings
    are also required, which are the defaults from MySQL 8.0.27:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多线程应用程序。** 组复制成员可以配置为多线程副本，使事务可以并行应用。从MySQL 8.0.27开始，默认情况下所有副本都配置为多线程。系统变量[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)（从MySQL
    8.0.26开始）或[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)（MySQL
    8.0.26之前）的非零值启用了成员上的多线程应用程序。从MySQL 8.0.27开始，默认值为4个并行应用程序线程，最多可以指定1024个并行应用程序线程。对于多线程副本，还需要以下设置，这些设置是从MySQL
    8.0.27开始的默认设置：'
- en: '[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    (from MySQL 8.0.26) or [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    (before MySQL 8.0.26)'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)（从MySQL
    8.0.26开始）或[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)（MySQL
    8.0.26之前）'
- en: This setting is required to ensure that the final commit of parallel transactions
    is in the same order as the original transactions. Group Replication relies on
    consistency mechanisms built around the guarantee that all participating members
    receive and apply committed transactions in the same order.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此设置是为了确保并行事务的最终提交与原始事务的顺序相同。组复制依赖于围绕所有参与成员以相同顺序接收和应用已提交事务的一致性机制构建。
- en: '[`replica_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_replica_parallel_type)
    (from MySQL 8.0.26) or [`slave_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_slave_parallel_type)
    (before MySQL 8.0.26)'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_replica_parallel_type)（从MySQL
    8.0.26开始）或[`slave_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_slave_parallel_type)（MySQL
    8.0.26之前）'
- en: This setting is required with [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    or [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order).
    It specifies the policy used to decide which transactions are allowed to execute
    in parallel on the replica.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此设置需要与[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)或[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)一起使用。它指定了用于决定在副本上允许哪些事务并行执行的策略。
- en: Setting [`replica_parallel_workers=0`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers=0`](replication-options-replica.html#sysvar_slave_parallel_workers)
    disables parallel execution and gives the replica a single applier thread and
    no coordinator thread. With that setting, the [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    or [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    and [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    or [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    options have no effect and are ignored. From MySQL 8.0.27, if parallel execution
    is disabled when GTIDs are in use on a replica, the replica actually uses one
    parallel worker, to take advantage of the method for retrying transactions without
    accessing the file positions. However, this behavior does not change anything
    for the user.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置[`replica_parallel_workers=0`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers=0`](replication-options-replica.html#sysvar_slave_parallel_workers)会禁用并行执行，使得复制品只有一个应用程序线程和没有协调器线程。在这种设置下，[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)或[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)以及[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)或[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)选项不起作用，会被忽略。从MySQL
    8.0.27开始，如果在复制品上使用GTIDs时禁用了并行执行，复制品实际上会使用一个并行工作者，以利用在不访问文件位置的情况下重试事务的方法。然而，这种行为对用户不会有任何改变。
- en: '**Detached XA transactions. ** MySQL 8.0.29 and later supports detached XA
    transactions. A detached transaction is one which, once prepared, is no longer
    connected to the current session. This happens automatically as part of executing
    [`XA PREPARE`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements"). The
    prepared XA transaction can be committed or rolled back by another connection,
    and the current session can then initiate another XA transaction or local transaction
    without waiting for the transaction that was just prepared to complete.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分离的XA事务。** MySQL 8.0.29及更高版本支持分离的XA事务。分离的事务是指一旦准备好，就不再与当前会话连接的事务。这会自动发生作为执行[`XA
    PREPARE`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements")的一部分。准备好的XA事务可以由另一个连接提交或回滚，然后当前会话可以启动另一个XA事务或本地事务，而无需等待刚刚准备的事务完成。'
- en: When detached XA transaction support is enabled ([`xa_detach_on_prepare = ON`](server-system-variables.html#sysvar_xa_detach_on_prepare))
    it is possible for any connection to this server to list (using [`XA RECOVER`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements")), roll back, or commit any prepared
    XA transaction. In addition, you cannot use temporary tables within detached XA
    transactions.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用分离的XA事务支持（[`xa_detach_on_prepare = ON`](server-system-variables.html#sysvar_xa_detach_on_prepare)）时，任何连接到此服务器的连接都可以列出（使用[`XA
    RECOVER`](xa-statements.html "15.3.8.1 XA Transaction SQL Statements")）、回滚或提交任何准备好的XA事务。此外，在分离的XA事务中不能使用临时表。
- en: You can disable support for detached XA transactions by setting [`xa_detach_on_prepare`](server-system-variables.html#sysvar_xa_detach_on_prepare)
    to `OFF`, but this is not recommended. In particular, if this server is being
    set up as an instance in MySQL group replication, you should leave this variable
    set to its default value (`ON`).
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过将[`xa_detach_on_prepare`](server-system-variables.html#sysvar_xa_detach_on_prepare)设置为`OFF`可以禁用对分离的XA事务的支持，但这并不推荐。特别是，如果此服务器正在设置为MySQL组复制中的一个实例，您应该将此变量保持为其默认值（`ON`）。
- en: See [Section 15.3.8.2, “XA Transaction States”](xa-states.html "15.3.8.2 XA
    Transaction States"), for more information.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息请参见[Section 15.3.8.2, “XA Transaction States”](xa-states.html "15.3.8.2 XA
    Transaction States")。
