- en: 2.3.7 Windows Platform Restrictions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.3.7 Windows 平台限制
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/windows-restrictions.html](https://dev.mysql.com/doc/refman/8.0/en/windows-restrictions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/windows-restrictions.html](https://dev.mysql.com/doc/refman/8.0/en/windows-restrictions.html)
- en: 'The following restrictions apply to use of MySQL on the Windows platform:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 平台上使用 MySQL 时，有以下限制：
- en: '**Process memory**'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**进程内存**'
- en: On Windows 32-bit platforms, it is not possible by default to use more than
    2GB of RAM within a single process, including MySQL. This is because the physical
    address limit on Windows 32-bit is 4GB and the default setting within Windows
    is to split the virtual address space between kernel (2GB) and user/applications
    (2GB).
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Windows 32 位平台上，默认情况下无法在单个进程中使用超过 2GB 的 RAM，包括 MySQL。这是因为 Windows 32 位的物理地址限制为
    4GB，而 Windows 的默认设置是在内核（2GB）和用户/应用程序（2GB）之间分割虚拟地址空间。
- en: Some versions of Windows have a boot time setting to enable larger applications
    by reducing the kernel application. Alternatively, to use more than 2GB, use a
    64-bit version of Windows.
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些 Windows 版本在启动时设置以通过减少内核应用程序来启用更大的应用程序。或者，要使用超过 2GB，请使用 64 位版本的 Windows。
- en: '**File system aliases**'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件系统别名**'
- en: When using `MyISAM` tables, you cannot use aliases within Windows link to the
    data files on another volume and then link back to the main MySQL [`datadir`](server-system-variables.html#sysvar_datadir)
    location.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在使用 `MyISAM` 表时，不能在 Windows 中使用别名链接到另一个卷上的数据文件，然后再链接回主 MySQL [`datadir`](server-system-variables.html#sysvar_datadir)
    位置。
- en: This facility is often used to move the data and index files to a RAID or other
    fast solution.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个功能通常用于将数据和索引文件移动到 RAID 或其他快速解决方案。
- en: '**Limited number of ports**'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有限的端口数量**'
- en: Windows systems have about 4,000 ports available for client connections, and
    after a connection on a port closes, it takes two to four minutes before the port
    can be reused. In situations where clients connect to and disconnect from the
    server at a high rate, it is possible for all available ports to be used up before
    closed ports become available again. If this happens, the MySQL server appears
    to be unresponsive even though it is running. Ports may be used by other applications
    running on the machine as well, in which case the number of ports available to
    MySQL is lower.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Windows 系统有大约 4,000 个端口可用于客户端连接，当端口上的连接关闭后，需要两到四分钟才能重新使用该端口。在客户端与服务器之间以高速率连接和断开的情况下，可能会在关闭的端口再次可用之前用尽所有可用端口。如果发生这种情况，MySQL
    服务器看起来无响应，尽管它正在运行。端口也可能被机器上运行的其他应用程序使用，这种情况下，可供 MySQL 使用的端口数量较低。
- en: For more information about this problem, see [https://support.microsoft.com/kb/196271](https://support.microsoft.com/kb/196271).
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关此问题的更多信息，请参见 [https://support.microsoft.com/kb/196271](https://support.microsoft.com/kb/196271)。
- en: '**`DATA DIRECTORY` and `INDEX DIRECTORY`**'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`DATA DIRECTORY` 和 `INDEX DIRECTORY`**'
- en: The `DATA DIRECTORY` clause of the [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") statement is supported on Windows for `InnoDB` tables only,
    as described in [Section 17.6.1.2, “Creating Tables Externally”](innodb-create-table-external.html
    "17.6.1.2 Creating Tables Externally"). For `MyISAM` and other storage engines,
    the `DATA DIRECTORY` and `INDEX DIRECTORY` clauses for [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") are ignored on Windows and any other platforms
    with a nonfunctional `realpath()` call.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") 语句的 `DATA
    DIRECTORY` 子句仅支持 Windows 上的 `InnoDB` 表，如 [Section 17.6.1.2, “Creating Tables Externally”](innodb-create-table-external.html
    "17.6.1.2 Creating Tables Externally") 中所述。对于 `MyISAM` 和其他存储引擎，在 Windows 和其他具有非功能性
    `realpath()` 调用的平台上，`CREATE TABLE` 的 `DATA DIRECTORY` 和 `INDEX DIRECTORY` 子句将被忽略。'
- en: '**[`DROP DATABASE`](drop-database.html "15.1.24 DROP DATABASE Statement")**'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[`DROP DATABASE`](drop-database.html "15.1.24 DROP DATABASE Statement")**'
- en: You cannot drop a database that is in use by another session.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你不能删除另一个会话正在使用的数据库。
- en: '**Case-insensitive names**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不区分大小写的名称**'
- en: File names are not case-sensitive on Windows, so MySQL database and table names
    are also not case-sensitive on Windows. The only restriction is that database
    and table names must be specified using the same case throughout a given statement.
    See [Section 11.2.3, “Identifier Case Sensitivity”](identifier-case-sensitivity.html
    "11.2.3 Identifier Case Sensitivity").
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Windows 系统上的文件名不区分大小写，因此 MySQL 数据库和表名在 Windows 上也不区分大小写。唯一的限制是数据库和表名必须在给定语句中始终使用相同的大小写。参见
    [Section 11.2.3, “Identifier Case Sensitivity”](identifier-case-sensitivity.html
    "11.2.3 Identifier Case Sensitivity")。
- en: '**Directory and file names**'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目录和文件名**'
- en: 'On Windows, MySQL Server supports only directory and file names that are compatible
    with the current ANSI code pages. For example, the following Japanese directory
    name does not work in the Western locale (code page 1252):'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Windows 上，MySQL 服务器仅支持与当前 ANSI 代码页兼容的目录和文件名。例如，以下日文目录名在西方区域设置（代码页 1252）中无法使用：
- en: '[PRE0]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The same limitation applies to directory and file names referred to in SQL statements,
    such as the data file path name in [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA
    Statement").
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 相同的限制也适用于 SQL 语句中引用的目录和文件名，比如[`LOAD DATA`](load-data.html "15.2.9 LOAD DATA
    Statement")中的数据文件路径名。
- en: '**The `\` path name separator character**'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**路径名分隔符 `\` 字符**'
- en: 'Path name components in Windows are separated by the `\` character, which is
    also the escape character in MySQL. If you are using [`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement") or [`SELECT ... INTO OUTFILE`](select-into.html
    "15.2.13.1 SELECT ... INTO Statement"), use Unix-style file names with `/` characters:'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Windows 中的路径名组件由 `\` 字符分隔，这也是 MySQL 中的转义字符。如果你正在使用[`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement")或[`SELECT ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT
    ... INTO Statement")，请使用带有 `/` 字符的 Unix 风格文件名：
- en: '[PRE1]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Alternatively, you must double the `\` character:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，你必须将 `\` 字符加倍：
- en: '[PRE2]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Problems with pipes**'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管道问题**'
- en: Pipes do not work reliably from the Windows command-line prompt. If the pipe
    includes the character `^Z` / `CHAR(24)`, Windows thinks that it has encountered
    end-of-file and aborts the program.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 Windows 命令行提示符中，管道无法可靠工作。如果管道包含字符 `^Z` / `CHAR(24)`，Windows 认为已经遇到文件结尾并中止程序。
- en: 'This is mainly a problem when you try to apply a binary log as follows:'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你尝试应用二进制日志时，这主要是一个问题：
- en: '[PRE3]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If you have a problem applying the log and suspect that it is because of a
    `^Z` / `CHAR(24)` character, you can use the following workaround:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在应用日志时遇到问题，并怀疑是因为 `^Z` / `CHAR(24)` 字符，你可以使用以下解决方法：
- en: '[PRE4]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The latter command also can be used to reliably read any SQL file that may contain
    binary data.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 后一条命令也可用于可靠地读取可能包含二进制数据的任何 SQL 文件。
