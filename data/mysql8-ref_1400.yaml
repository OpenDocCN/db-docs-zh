- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption-scope.html](https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption-scope.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption-scope.html](https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption-scope.html)
- en: 19.3.2.1 Scope of Binary Log Encryption
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.3.2.1 二进制日志加密范围
- en: 'When binary log encryption is active for a MySQL server instance, the encryption
    coverage is as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当MySQL服务器实例启用二进制日志加密时，加密覆盖范围如下：
- en: Data at rest that is written to the binary log files and relay log files is
    encrypted from the point in time where encryption is started, using the two tier
    encryption architecture described above. Existing binary log files and relay log
    files that were present on the server when you started encryption are not encrypted.
    You can purge these files when they are no longer needed.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入二进制日志文件和中继日志文件的静态数据从加密开始的时间点起，使用上述两层加密架构进行加密。在启动加密时存在于服务器上的现有二进制日志文件和中继日志文件不会被加密。当这些文件不再需要时，可以清除这些文件。
- en: Data in motion in the replication event stream, which is sent to MySQL clients
    including [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility for
    Processing Binary Log Files"), is decrypted for transmission, and should therefore
    be protected in transit by the use of connection encryption (see [Section 8.3,
    “Using Encrypted Connections”](encrypted-connections.html "8.3 Using Encrypted
    Connections") and [Section 19.3.1, “Setting Up Replication to Use Encrypted Connections”](replication-encrypted-connections.html
    "19.3.1 Setting Up Replication to Use Encrypted Connections")).
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在发送到MySQL客户端（包括[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility
    for Processing Binary Log Files")）的复制事件流中的数据在传输时会被解密，因此应通过使用连接加密（参见[第8.3节，“使用加密连接”](encrypted-connections.html
    "8.3 Using Encrypted Connections")和[第19.3.1节，“设置复制使用加密连接”](replication-encrypted-connections.html
    "19.3.1 Setting Up Replication to Use Encrypted Connections")）来保护传输中的数据。
- en: 'Data in use that is held in the binary log transaction and statement caches
    during a transaction is in unencrypted format in the memory buffer that stores
    the cache. The data is written to a temporary file on disk if it exceeds the space
    available in the memory buffer. From MySQL 8.0.17, when binary log encryption
    is active on the server, temporary files used to hold the binary log cache are
    encrypted using AES-CTR (AES Counter mode) for stream encryption. Because the
    temporary files are volatile and tied to a single process, they are encrypted
    using single-tier encryption, using a randomly generated file password and initialization
    vector that exist only in memory and are never stored on disk or in the keyring.
    After each transaction is committed, the binary log cache is reset: the memory
    buffer is cleared, any temporary file used to hold the binary log cache is truncated,
    and a new file password and initialization vector are randomly generated for use
    with the next transaction. This reset also takes place when the server is restarted
    after a normal shutdown or an unexpected halt.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在事务期间存储在二进制日志事务和语句缓存中的数据以未加密格式存在于存储缓存的内存缓冲区中。如果超过内存缓冲区可用空间，数据将写入磁盘上的临时文件。从MySQL
    8.0.17开始，当服务器上启用二进制日志加密时，用于保存二进制日志缓存的临时文件将使用AES-CTR（AES Counter mode）进行流加密进行加密。由于临时文件是易失性的并且与单个进程绑定，因此它们使用单层加密进行加密，使用仅存在于内存中且永远不会存储在磁盘或密钥环中的随机生成的文件密码和初始化向量。在每个事务提交后，二进制日志缓存被重置：内存缓冲区被清除，用于保存二进制日志缓存的任何临时文件被截断，并为下一个事务使用随机生成的新文件密码和初始化向量。在服务器正常关闭或意外停止后重新启动时，也会进行此重置。
- en: Note
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you use [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement") when [`binlog_format=STATEMENT`](replication-options-binary-log.html#sysvar_binlog_format)
    is set, which is not recommended as the statement is considered unsafe for statement-based
    replication, a temporary file containing the data is created on the replica where
    the changes are applied. These temporary files are not encrypted when binary log
    encryption is active on the server. Use row-based or mixed binary logging format
    instead, which do not create the temporary files.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在设置[`binlog_format=STATEMENT`](replication-options-binary-log.html#sysvar_binlog_format)时使用[`LOAD
    DATA`](load-data.html "15.2.9 LOAD DATA Statement")，这不被推荐，因为该语句被认为对基于语句的复制不安全，将在应用更改的副本上创建包含数据的临时文件。当服务器上启用二进制日志加密时，这些临时文件不会被加密。相反，请改用基于行或混合二进制日志格式，这些格式不会创建临时文件。
