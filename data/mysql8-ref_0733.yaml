- en: 13.1 Numeric Data Types
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.1 数值数据类型
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/numeric-types.html](https://dev.mysql.com/doc/refman/8.0/en/numeric-types.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/numeric-types.html](https://dev.mysql.com/doc/refman/8.0/en/numeric-types.html)
- en: '[13.1.1 Numeric Data Type Syntax](numeric-type-syntax.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.1.1 数值数据类型语法](numeric-type-syntax.html)'
- en: '[13.1.2 Integer Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT,
    BIGINT](integer-types.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.1.2 整数类型（精确值） - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT](integer-types.html)'
- en: '[13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC](fixed-point-types.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.1.3 定点类型（精确值） - DECIMAL, NUMERIC](fixed-point-types.html)'
- en: '[13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE](floating-point-types.html)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.1.4 浮点类型（近似值） - FLOAT, DOUBLE](floating-point-types.html)'
- en: '[13.1.5 Bit-Value Type - BIT](bit-type.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.1.5 位值类型 - BIT](bit-type.html)'
- en: '[13.1.6 Numeric Type Attributes](numeric-type-attributes.html)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.1.6 数值类型属性](numeric-type-attributes.html)'
- en: '[13.1.7 Out-of-Range and Overflow Handling](out-of-range-and-overflow.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[13.1.7 超出范围和溢出处理](out-of-range-and-overflow.html)'
- en: MySQL supports all standard SQL numeric data types. These types include the
    exact numeric data types ([`INTEGER`](integer-types.html "13.1.2 Integer Types
    (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT"), [`SMALLINT`](integer-types.html
    "13.1.2 Integer Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT,
    BIGINT"), [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types (Exact
    Value) - DECIMAL, NUMERIC"), and [`NUMERIC`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC")), as well as the approximate numeric
    data types ([`FLOAT`](floating-point-types.html "13.1.4 Floating-Point Types (Approximate
    Value) - FLOAT, DOUBLE"), [`REAL`](floating-point-types.html "13.1.4 Floating-Point
    Types (Approximate Value) - FLOAT, DOUBLE"), and [`DOUBLE PRECISION`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE")). The keyword
    [`INT`](integer-types.html "13.1.2 Integer Types (Exact Value) - INTEGER, INT,
    SMALLINT, TINYINT, MEDIUMINT, BIGINT") is a synonym for [`INTEGER`](integer-types.html
    "13.1.2 Integer Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT,
    BIGINT"), and the keywords [`DEC`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") and [`FIXED`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") are synonyms for
    [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL,
    NUMERIC"). MySQL treats [`DOUBLE`](floating-point-types.html "13.1.4 Floating-Point
    Types (Approximate Value) - FLOAT, DOUBLE") as a synonym for [`DOUBLE PRECISION`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE") (a nonstandard
    extension). MySQL also treats [`REAL`](floating-point-types.html "13.1.4 Floating-Point
    Types (Approximate Value) - FLOAT, DOUBLE") as a synonym for [`DOUBLE PRECISION`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE") (a nonstandard
    variation), unless the [`REAL_AS_FLOAT`](sql-mode.html#sqlmode_real_as_float)
    SQL mode is enabled.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持所有标准SQL数值数据类型。这些类型包括精确数值数据类型（[`INTEGER`](integer-types.html "13.1.2 整数类型（精确值）
    - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT"), [`SMALLINT`](integer-types.html
    "13.1.2 整数类型（精确值） - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT"), [`DECIMAL`](fixed-point-types.html
    "13.1.3 定点类型（精确值） - DECIMAL, NUMERIC")和[`NUMERIC`](fixed-point-types.html "13.1.3 定点类型（精确值）
    - DECIMAL, NUMERIC"))，以及近似数值数据类型（[`FLOAT`](floating-point-types.html "13.1.4 浮点类型（近似值）
    - FLOAT, DOUBLE"), [`REAL`](floating-point-types.html "13.1.4 浮点类型（近似值） - FLOAT,
    DOUBLE")和[`DOUBLE PRECISION`](floating-point-types.html "13.1.4 浮点类型（近似值） - FLOAT,
    DOUBLE")）。关键字[`INT`](integer-types.html "13.1.2 整数类型（精确值） - INTEGER, INT, SMALLINT,
    TINYINT, MEDIUMINT, BIGINT")是[`INTEGER`](integer-types.html "13.1.2 整数类型（精确值）
    - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT")的同义词，关键字[`DEC`](fixed-point-types.html
    "13.1.3 定点类型（精确值） - DECIMAL, NUMERIC")和[`FIXED`](fixed-point-types.html "13.1.3 定点类型（精确值）
    - DECIMAL, NUMERIC")是[`DECIMAL`](fixed-point-types.html "13.1.3 定点类型（精确值） - DECIMAL,
    NUMERIC")的同义词。MySQL将[`DOUBLE`](floating-point-types.html "13.1.4 浮点类型（近似值） - FLOAT,
    DOUBLE")视为[`DOUBLE PRECISION`](floating-point-types.html "13.1.4 浮点类型（近似值） - FLOAT,
    DOUBLE")的同义词（非标准扩展）。MySQL还将[`REAL`](floating-point-types.html "13.1.4 浮点类型（近似值）
    - FLOAT, DOUBLE")视为[`DOUBLE PRECISION`](floating-point-types.html "13.1.4 浮点类型（近似值）
    - FLOAT, DOUBLE")的同义词（非标准变体），除非启用了[`REAL_AS_FLOAT`](sql-mode.html#sqlmode_real_as_float)
    SQL模式。
- en: The [`BIT`](bit-type.html "13.1.5 Bit-Value Type - BIT") data type stores bit
    values and is supported for [`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM
    Storage Engine"), [`MEMORY`](memory-storage-engine.html "18.3 The MEMORY Storage
    Engine"), [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage
    Engine"), and [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") tables.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[`BIT`](bit-type.html "13.1.5 Bit-Value Type - BIT")数据类型存储位值，并支持[`MyISAM`](myisam-storage-engine.html
    "18.2 The MyISAM Storage Engine")、[`MEMORY`](memory-storage-engine.html "18.3 The
    MEMORY Storage Engine")、[`InnoDB`](innodb-storage-engine.html "第17章 The InnoDB
    Storage Engine")和[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0")表。'
- en: For information about how MySQL handles assignment of out-of-range values to
    columns and overflow during expression evaluation, see [Section 13.1.7, “Out-of-Range
    and Overflow Handling”](out-of-range-and-overflow.html "13.1.7 Out-of-Range and
    Overflow Handling").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有关MySQL如何处理超出范围值分配给列和在表达式评估期间的溢出的信息，请参阅[第13.1.7节，“超出范围和溢出处理”](out-of-range-and-overflow.html
    "13.1.7 Out-of-Range and Overflow Handling")。
- en: For information about storage requirements of the numeric data types, see [Section 13.7,
    “Data Type Storage Requirements”](storage-requirements.html "13.7 Data Type Storage
    Requirements").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有关数值数据类型的存储要求的信息，请参阅[第13.7节，“数据类型存储要求”](storage-requirements.html "13.7 Data
    Type Storage Requirements")。
- en: For descriptions of functions that operate on numeric values, see [Section 14.6,
    “Numeric Functions and Operators”](numeric-functions.html "14.6 Numeric Functions
    and Operators"). The data type used for the result of a calculation on numeric
    operands depends on the types of the operands and the operations performed on
    them. For more information, see [Section 14.6.1, “Arithmetic Operators”](arithmetic-functions.html
    "14.6.1 Arithmetic Operators").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于操作数值的函数描述，请参阅[第14.6节，“数值函数和运算符”](numeric-functions.html "14.6 Numeric Functions
    and Operators")。对于数值操作数计算结果使用的数据类型取决于操作数的类型和执行的操作。更多信息，请参阅[第14.6.1节，“算术运算符”](arithmetic-functions.html
    "14.6.1 Arithmetic Operators")。
