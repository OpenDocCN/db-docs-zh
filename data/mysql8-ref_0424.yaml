- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/keyring-aws-plugin.html](https://dev.mysql.com/doc/refman/8.0/en/keyring-aws-plugin.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/keyring-aws-plugin.html](https://dev.mysql.com/doc/refman/8.0/en/keyring-aws-plugin.html)
- en: 8.4.4.9 Using the keyring_aws Amazon Web Services Keyring Plugin
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 8.4.4.9 使用keyring_aws亚马逊网络服务密钥环插件
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `keyring_aws` plugin is an extension included in MySQL Enterprise Edition,
    a commercial product. To learn more about commercial products, see [https://www.mysql.com/products/](https://www.mysql.com/products/).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`keyring_aws`插件是MySQL企业版中包含的扩展，这是一个商业产品。要了解更多关于商业产品的信息，请参阅[https://www.mysql.com/products/](https://www.mysql.com/products/)。'
- en: The `keyring_aws` keyring plugin communicates with the Amazon Web Services Key
    Management Service (AWS KMS) as a back end for key generation and uses a local
    file for key storage. All keyring material is generated exclusively by the AWS
    server, not by `keyring_aws`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`keyring_aws`密钥环插件与亚马逊网络服务密钥管理服务（AWS KMS）通信，作为密钥生成的后端，并使用本地文件进行密钥存储。所有密钥材料均由AWS服务器独家生成，而不是由`keyring_aws`生成。'
- en: 'MySQL Enterprise Edition can work with `keyring_aws` on Red Hat Enterprise
    Linux, SUSE Linux Enterprise Server, Debian, Ubuntu, macOS, and Windows. MySQL
    Enterprise Edition does not support the use of `keyring_aws` on these platforms:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL企业版可以在Red Hat Enterprise Linux、SUSE Linux Enterprise Server、Debian、Ubuntu、macOS和Windows上与`keyring_aws`一起使用。MySQL企业版不支持在以下平台上使用`keyring_aws`：
- en: EL6
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EL6
- en: Generic Linux (glibc2.12)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用Linux（glibc2.12）
- en: SLES 12 (with versions after MySQL Server 5.7)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SLES 12（MySQL Server 5.7之后的版本）
- en: Solaris
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Solaris
- en: 'The discussion here assumes that you are familiar with AWS in general and KMS
    in particular. Some pertinent information sources:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的讨论假定您对AWS有一般了解，特别是对KMS有了解。一些相关信息来源：
- en: '[AWS site](https://aws.amazon.com/kms/)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[AWS网站](https://aws.amazon.com/kms/)'
- en: '[KMS documentation](https://docs.aws.amazon.com/kms/)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[KMS文档](https://docs.aws.amazon.com/kms/)'
- en: 'The following sections provide configuration and usage information for the
    `keyring_aws` keyring plugin:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节提供了`keyring_aws`密钥环插件的配置和使用信息：
- en: '[keyring_aws Configuration](keyring-aws-plugin.html#keyring-aws-plugin-configuration
    "keyring_aws Configuration")'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[keyring_aws配置](keyring-aws-plugin.html#keyring-aws-plugin-configuration "keyring_aws配置")'
- en: '[keyring_aws Operation](keyring-aws-plugin.html#keyring-aws-plugin-operation
    "keyring_aws Operation")'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[keyring_aws操作](keyring-aws-plugin.html#keyring-aws-plugin-operation "keyring_aws操作")'
- en: '[keyring_aws Credential Changes](keyring-aws-plugin.html#keyring-aws-plugin-credential-changes
    "keyring_aws Credential Changes")'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[keyring_aws凭据更改](keyring-aws-plugin.html#keyring-aws-plugin-credential-changes
    "keyring_aws凭据更改")'
- en: keyring_aws Configuration
  id: totrans-17
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: keyring_aws配置
- en: To install `keyring_aws`, use the general instructions found in [Section 8.4.4.3,
    “Keyring Plugin Installation”](keyring-plugin-installation.html "8.4.4.3 Keyring
    Plugin Installation"), together with the plugin-specific configuration information
    found here.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`keyring_aws`，请使用[第8.4.4.3节中找到的一般说明，“密钥环插件安装”](keyring-plugin-installation.html
    "8.4.4.3 密钥环插件安装")，以及此处找到的插件特定配置信息。
- en: The plugin library file contains the `keyring_aws` plugin and two loadable functions,
    [`keyring_aws_rotate_cmk()`](keyring-functions-plugin-specific.html#function_keyring-aws-rotate-cmk)
    and [`keyring_aws_rotate_keys()`](keyring-functions-plugin-specific.html#function_keyring-aws-rotate-keys).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 插件库文件包含`keyring_aws`插件和两个可加载函数，[`keyring_aws_rotate_cmk()`](keyring-functions-plugin-specific.html#function_keyring-aws-rotate-cmk)和[`keyring_aws_rotate_keys()`](keyring-functions-plugin-specific.html#function_keyring-aws-rotate-keys)。
- en: 'To configure `keyring_aws`, you must obtain a secret access key that provides
    credentials for communicating with AWS KMS and write it to a configuration file:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置`keyring_aws`，您必须获取一个提供与AWS KMS通信凭据的秘密访问密钥，并将其写入配置文件：
- en: Create an AWS KMS account.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个AWS KMS账户。
- en: Use AWS KMS to create a secret access key ID and secret access key. The access
    key serves to verify your identity and that of your applications.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用AWS KMS创建一个秘密访问密钥ID和秘密访问密钥。访问密钥用于验证您的身份及您的应用程序的身份。
- en: Use the AWS KMS account to create a KMS key ID. At MySQL startup, set the [`keyring_aws_cmk_id`](keyring-system-variables.html#sysvar_keyring_aws_cmk_id)
    system variable to the CMK ID value. This variable is mandatory and there is no
    default. (Its value can be changed at runtime if desired using [`SET GLOBAL`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment").)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用AWS KMS账户创建一个KMS密钥ID。在MySQL启动时，将[`keyring_aws_cmk_id`](keyring-system-variables.html#sysvar_keyring_aws_cmk_id)系统变量设置为CMK
    ID值。此变量是强制性的，没有默认值。（如果需要，可以使用[`SET GLOBAL`](set-variable.html "15.7.6.1 变量赋值的SET语法")在运行时更改其值。）
- en: 'If necessary, create the directory in which the configuration file should be
    located. The directory should have a restrictive mode and be accessible only to
    the account used to run the MySQL server. For example, on Unix and Unix-like systems,
    to use `/usr/local/mysql/mysql-keyring/keyring_aws_conf` as the file name, the
    following commands (executed as `root`) create its parent directory and set the
    directory mode and ownership:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有必要，创建应放置配置文件的目录。该目录应具有限制模式，并且只能由用于运行MySQL服务器的帐户访问。例如，在Unix和类Unix系统上，要将`/usr/local/mysql/mysql-keyring/keyring_aws_conf`用作文件名，以下命令（以`root`身份执行）创建其父目录并设置目录模式和所有权：
- en: '[PRE0]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: At MySQL startup, set the [`keyring_aws_conf_file`](keyring-system-variables.html#sysvar_keyring_aws_conf_file)
    system variable to `/usr/local/mysql/mysql-keyring/keyring_aws_conf` to indicate
    the configuration file location to the server.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL启动时，将[`keyring_aws_conf_file`](keyring-system-variables.html#sysvar_keyring_aws_conf_file)系统变量设置为`/usr/local/mysql/mysql-keyring/keyring_aws_conf`，以指示服务器配置文件的位置。
- en: 'Prepare the `keyring_aws` configuration file, which should contain two lines:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备`keyring_aws`配置文件，其中应包含两行：
- en: 'Line 1: The secret access key ID'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第1行：秘密访问密钥ID
- en: 'Line 2: The secret access key'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第2行：秘密访问密钥
- en: 'For example, if the key ID is `wwwwwwwwwwwwwEXAMPLE` and the key is `xxxxxxxxxxxxx/yyyyyyy/zzzzzzzzEXAMPLEKEY`,
    the configuration file looks like this:'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，如果密钥ID为`wwwwwwwwwwwwwEXAMPLE`，密钥为`xxxxxxxxxxxxx/yyyyyyy/zzzzzzzzEXAMPLEKEY`，则配置文件如下所示：
- en: '[PRE1]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To be usable during the server startup process, `keyring_aws` must be loaded
    using the [`--early-plugin-load`](server-options.html#option_mysqld_early-plugin-load)
    option. The [`keyring_aws_cmk_id`](keyring-system-variables.html#sysvar_keyring_aws_cmk_id)
    system variable is mandatory and configures the KMS key ID obtained from the AWS
    KMS server. The [`keyring_aws_conf_file`](keyring-system-variables.html#sysvar_keyring_aws_conf_file)
    and [`keyring_aws_data_file`](keyring-system-variables.html#sysvar_keyring_aws_data_file)
    system variables optionally configure the locations of the files used by the `keyring_aws`
    plugin for configuration information and data storage. The file location variable
    default values are platform specific. To configure the locations explicitly, set
    the variable values at startup. For example, use these lines in the server `my.cnf`
    file, adjusting the `.so` suffix and file locations for your platform as necessary:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器启动过程中可用，必须使用[`--early-plugin-load`](server-options.html#option_mysqld_early-plugin-load)选项加载`keyring_aws`。[`keyring_aws_cmk_id`](keyring-system-variables.html#sysvar_keyring_aws_cmk_id)系统变量是必需的，并配置从AWS
    KMS服务器获取的KMS密钥ID。[`keyring_aws_conf_file`](keyring-system-variables.html#sysvar_keyring_aws_conf_file)和[`keyring_aws_data_file`](keyring-system-variables.html#sysvar_keyring_aws_data_file)系统变量可选地配置`keyring_aws`插件用于配置信息和数据存储的文件位置。文件位置变量的默认值是特定于平台的。要显式配置位置，请在启动时设置变量值。例如，在服务器`my.cnf`文件中使用这些行，根据需要调整`.so`后缀和文件位置：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For the `keyring_aws` plugin to start successfully, the configuration file must
    exist and contain valid secret access key information, initialized as described
    previously. The storage file need not exist. If it does not, `keyring_aws` attempts
    to create it (as well as its parent directory, if necessary).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要成功启动`keyring_aws`插件，配置文件必须存在并包含有效的秘密访问密钥信息，如前所述初始化。存储文件不需要存在。如果不存在，`keyring_aws`会尝试创建它（以及必要时的父目录）。
- en: For additional information about the system variables used to configure the
    `keyring_aws` plugin, see [Section 8.4.4.19, “Keyring System Variables”](keyring-system-variables.html
    "8.4.4.19 Keyring System Variables").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有关用于配置`keyring_aws`插件的系统变量的更多信息，请参见[第8.4.4.19节，“Keyring系统变量”](keyring-system-variables.html
    "8.4.4.19 Keyring系统变量")。
- en: 'Start the MySQL server and install the functions associated with the `keyring_aws`
    plugin. This is a one-time operation, performed by executing the following statements,
    adjusting the `.so` suffix for your platform as necessary:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 启动MySQL服务器并安装与`keyring_aws`插件关联的函数。这是一次性操作，通过执行以下语句执行，根据需要调整`.so`后缀以适应您的平台：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For additional information about the `keyring_aws` functions, see [Section 8.4.4.16,
    “Plugin-Specific Keyring Key-Management Functions”](keyring-functions-plugin-specific.html
    "8.4.4.16 Plugin-Specific Keyring Key-Management Functions").
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`keyring_aws`函数的更多信息，请参见[第8.4.4.16节，“插件特定的Keyring密钥管理函数”](keyring-functions-plugin-specific.html
    "8.4.4.16 插件特定的Keyring密钥管理函数")。
- en: keyring_aws Operation
  id: totrans-39
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: keyring_aws操作
- en: At plugin startup, the `keyring_aws` plugin reads the AWS secret access key
    ID and key from its configuration file. It also reads any encrypted keys contained
    in its storage file into its in-memory cache.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在插件启动时，`keyring_aws` 插件从其配置文件中读取 AWS 秘密访问密钥 ID 和密钥。它还将存储文件中包含的任何加密密钥读入其内存缓存中。
- en: 'During operation, `keyring_aws` maintains encrypted keys in the in-memory cache
    and uses the storage file as local persistent storage. Each keyring operation
    is transactional: `keyring_aws` either successfully changes both the in-memory
    key cache and the keyring storage file, or the operation fails and the keyring
    state remains unchanged.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行过程中，`keyring_aws` 在内存缓存中维护加密密钥，并使用存储文件作为本地持久存储。每个 `keyring_aws` 操作都是事务性的：`keyring_aws`
    要么成功地更改内存中的密钥缓存和密钥环存储文件，要么操作失败，密钥环状态保持不变。
- en: To ensure that keys are flushed only when the correct keyring storage file exists,
    `keyring_aws` stores a SHA-256 checksum of the keyring in the file. Before updating
    the file, the plugin verifies that it contains the expected checksum.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保仅在存在正确的密钥环存储文件时才刷新密钥，`keyring_aws` 在文件中存储密钥环的 SHA-256 校验和。在更新文件之前，插件会验证文件是否包含预期的校验和。
- en: 'The `keyring_aws` plugin supports the functions that comprise the standard
    MySQL Keyring service interface. Keyring operations performed by these functions
    are accessible at two levels:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`keyring_aws` 插件支持组成标准 MySQL 密钥环服务接口的函数。通过这些函数执行的密钥环操作可在两个级别访问：'
- en: 'SQL interface: In SQL statements, call the functions described in [Section 8.4.4.15,
    “General-Purpose Keyring Key-Management Functions”](keyring-functions-general-purpose.html
    "8.4.4.15 General-Purpose Keyring Key-Management Functions").'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 接口：在 SQL 语句中，调用 [第 8.4.4.15 节，“通用密钥环密钥管理函数”](keyring-functions-general-purpose.html
    "8.4.4.15 通用密钥环密钥管理函数") 中描述的函数。
- en: 'C interface: In C-language code, call the keyring service functions described
    in [Section 7.6.9.2, “The Keyring Service”](keyring-service.html "7.6.9.2 The
    Keyring Service").'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: C 接口：在 C 语言代码中，调用 [第 7.6.9.2 节，“密钥环服务”](keyring-service.html "7.6.9.2 密钥环服务")
    中描述的密钥环服务函数。
- en: 'Example (using the SQL interface):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 示例（使用 SQL 接口）：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In addition, the [`keyring_aws_rotate_cmk()`](keyring-functions-plugin-specific.html#function_keyring-aws-rotate-cmk)
    and [`keyring_aws_rotate_keys()`](keyring-functions-plugin-specific.html#function_keyring-aws-rotate-keys)
    functions “extend” the keyring plugin interface to provide AWS-related capabilities
    not covered by the standard keyring service interface. These capabilities are
    accessible only by calling these functions using SQL. There are no corresponding
    C-language key service functions.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，[`keyring_aws_rotate_cmk()`](keyring-functions-plugin-specific.html#function_keyring-aws-rotate-cmk)
    和 [`keyring_aws_rotate_keys()`](keyring-functions-plugin-specific.html#function_keyring-aws-rotate-keys)
    函数“扩展”了密钥环插件接口，提供了标准密钥环服务接口未涵盖的与 AWS 相关的功能。只能通过使用 SQL 调用这些函数来访问这些功能。没有相应的 C 语言密钥服务函数。
- en: For information about the characteristics of key values permitted by `keyring_aws`,
    see [Section 8.4.4.13, “Supported Keyring Key Types and Lengths”](keyring-key-types.html
    "8.4.4.13 Supported Keyring Key Types and Lengths").
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 `keyring_aws` 允许的密钥值特性的信息，请参阅 [第 8.4.4.13 节，“支持的密钥环密钥类型和长度”](keyring-key-types.html
    "8.4.4.13 支持的密钥环密钥类型和长度")。
- en: keyring_aws Credential Changes
  id: totrans-50
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: keyring_aws 凭据更改
- en: 'Assuming that the `keyring_aws` plugin has initialized properly at server startup,
    it is possible to change the credentials used for communicating with AWS KMS:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 `keyring_aws` 插件在服务器启动时已经正确初始化，可以更改用于与 AWS KMS 通信的凭据：
- en: Use AWS KMS to create a new secret access key ID and secret access key.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 AWS KMS 创建新的秘密访问密钥 ID 和秘密访问密钥。
- en: Store the new credentials in the configuration file (the file named by the [`keyring_aws_conf_file`](keyring-system-variables.html#sysvar_keyring_aws_conf_file)
    system variable). The file format is as described previously.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新凭据存储在配置文件中（由 [`keyring_aws_conf_file`](keyring-system-variables.html#sysvar_keyring_aws_conf_file)
    系统变量命名的文件）。文件格式如前所述。
- en: Reinitialize the `keyring_aws` plugin so that it re-reads the configuration
    file. Assuming that the new credentials are valid, the plugin should initialize
    successfully.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新初始化 `keyring_aws` 插件，以便重新读取配置文件。假设新凭据有效，插件应该成功初始化。
- en: 'There are two ways to reinitialize the plugin:'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有两种重新初始化插件的方法：
- en: Restart the server. This is simpler and has no side effects, but is not suitable
    for installations that require minimal server downtime with as few restarts as
    possible.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动服务器。这更简单，没有副作用，但不适用于需要最小化服务器停机时间并尽可能少重启的安装。
- en: 'Reinitialize the plugin without restarting the server by executing the following
    statements, adjusting the `.so` suffix for your platform as necessary:'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过执行以下语句重新初始化插件，根据需要调整`.so`后缀以适应您的平台，而无需重新启动服务器：
- en: '[PRE5]'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: In addition to loading a plugin at runtime, [`INSTALL PLUGIN`](install-plugin.html
    "15.7.4.4 INSTALL PLUGIN Statement") has the side effect of registering the plugin
    it in the `mysql.plugin` system table. Because of this, if you decide to stop
    using `keyring_aws`, it is not sufficient to remove the [`--early-plugin-load`](server-options.html#option_mysqld_early-plugin-load)
    option from the set of options used to start the server. That stops the plugin
    from loading early, but the server still attempts to load it when it gets to the
    point in the startup sequence where it loads the plugins registered in `mysql.plugin`.
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了在运行时加载插件外，[`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN
    Statement") 还具有在 `mysql.plugin` 系统表中注册插件的副作用。因此，如果您决定停止使用`keyring_aws`，仅仅从用于启动服务器的选项集中删除[`--early-plugin-load`](server-options.html#option_mysqld_early-plugin-load)选项是不够的。这样可以阻止插件早期加载，但服务器仍会在启动序列中加载在`mysql.plugin`中注册的插件。
- en: Consequently, if you execute the [`UNINSTALL PLUGIN`](uninstall-plugin.html
    "15.7.4.6 UNINSTALL PLUGIN Statement") plus [`INSTALL PLUGIN`](install-plugin.html
    "15.7.4.4 INSTALL PLUGIN Statement") sequence just described to change the AWS
    KMS credentials, then to stop using `keyring_aws`, it is necessary to execute
    [`UNINSTALL PLUGIN`](uninstall-plugin.html "15.7.4.6 UNINSTALL PLUGIN Statement")
    again to unregister the plugin in addition to removing the [`--early-plugin-load`](server-options.html#option_mysqld_early-plugin-load)
    option.
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，如果您执行上述描述的[`UNINSTALL PLUGIN`](uninstall-plugin.html "15.7.4.6 UNINSTALL
    PLUGIN Statement")加[`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN
    Statement")序列来更改 AWS KMS 凭据，那么要停止使用`keyring_aws`，需要再次执行[`UNINSTALL PLUGIN`](uninstall-plugin.html
    "15.7.4.6 UNINSTALL PLUGIN Statement")来取消注册插件，同时删除[`--early-plugin-load`](server-options.html#option_mysqld_early-plugin-load)选项。
