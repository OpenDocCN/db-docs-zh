- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-features-row-searches.html](https://dev.mysql.com/doc/refman/8.0/en/replication-features-row-searches.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-features-row-searches.html](https://dev.mysql.com/doc/refman/8.0/en/replication-features-row-searches.html)
- en: 19.5.1.27 Replication and Row Searches
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.5.1.27 复制和行搜索
- en: When a replica using row-based replication format applies an [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") or [`DELETE`](delete.html "15.2.2 DELETE Statement")
    operation, it must search the relevant table for the matching rows. The algorithm
    used to carry out this process uses one of the table's indexes to carry out the
    search as the first choice, and a hash table if there are no suitable indexes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用基于行的复制格式的副本应用[`UPDATE`](update.html "15.2.17 UPDATE Statement")或[`DELETE`](delete.html
    "15.2.2 DELETE Statement")操作时，必须搜索相关表以查找匹配的行。执行此过程的算法首选使用表的一个索引进行搜索，如果没有合适的索引，则使用哈希表。
- en: 'The algorithm first assesses the available indexes in the table definition
    to see if there is any suitable index to use, and if there are multiple possibilities,
    which index is the best fit for the operation. The algorithm ignores the following
    types of index:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 算法首先评估表定义中的可用索引，看是否有适合的索引可用，并且如果有多个可能性，哪个索引最适合该操作。算法忽略以下类型的索引：
- en: Fulltext indexes.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全文索引。
- en: Hidden indexes.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏索引。
- en: Generated indexes.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成的索引。
- en: Multi-valued indexes.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多值索引。
- en: Any index where the before-image of the row event does not contain all the columns
    of the index.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何索引，其中行事件的前图像不包含索引的所有列。
- en: 'If there are no suitable indexes after ruling out these index types, the algorithm
    does not use an index for the search. If there are suitable indexes, one index
    is selected from the candidates, in the following priority order:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在排除这些索引类型后没有合适的索引，则算法不使用索引进行搜索。如果有合适的索引，则从候选索引中选择一个索引，按以下优先顺序选择：
- en: A primary key.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主键。
- en: A unique index where every column in the index has a NOT NULL attribute. If
    more than one such index is available, the algorithm chooses the leftmost of these
    indexes.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 具有NOT NULL属性的索引，其中索引中的每一列都具有NOT NULL属性。如果有多个这样的索引可用，则算法选择这些索引中最左边的索引。
- en: Any other index. If more than one such index is available, the algorithm chooses
    the leftmost of these indexes.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任何其他索引。如果有多个这样的索引可用，则算法选择这些索引中最左边的索引。
- en: If the algorithm is able to select a primary key or a unique index where every
    column in the index has a `NOT NULL` attribute, it uses this index to iterate
    over the rows in the [`UPDATE`](update.html "15.2.17 UPDATE Statement") or [`DELETE`](delete.html
    "15.2.2 DELETE Statement") operation. For each row in the row event, the algorithm
    looks up the row in the index to locate the table record to update. If no matching
    record is found, it returns the error ER_KEY_NOT_FOUND and stops the replication
    applier thread.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果算法能够选择主键或唯一索引，其中索引中的每一列都具有`NOT NULL`属性，则使用该索引来迭代[`UPDATE`](update.html "15.2.17 UPDATE
    Statement")或[`DELETE`](delete.html "15.2.2 DELETE Statement")操作中的行。对于行事件中的每一行，算法在索引中查找行以定位要更新的表记录。如果找不到匹配记录，则返回错误ER_KEY_NOT_FOUND并停止复制应用程序线程。
- en: If the algorithm was not able to find a suitable index, or was only able to
    find an index that was non-unique or contained nulls, a hash table is used to
    assist in identifying the table records. The algorithm creates a hash table containing
    the rows in the [`UPDATE`](update.html "15.2.17 UPDATE Statement") or [`DELETE`](delete.html
    "15.2.2 DELETE Statement") operation, with the key as the full before-image of
    the row. The algorithm then iterates over all the records in the target table,
    using the selected index if it found one, or else performing a full table scan.
    For each record in the target table, it determines whether that row exists in
    the hash table. If the row is found in the hash table, the record in the target
    table is updated, and the row is deleted from the hash table. When all the records
    in the target table have been checked, the algorithm verifies whether the hash
    table is now empty. If there are any unmatched rows remaining in the hash table,
    the algorithm returns the error ER_KEY_NOT_FOUND and stops the replication applier
    thread.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果算法无法找到合适的索引，或者只能找到一个非唯一或包含空值的索引，那么将使用哈希表来帮助识别表记录。算法创建一个哈希表，其中包含[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")或[`DELETE`](delete.html "15.2.2 DELETE Statement")操作中的行，键为行的完整前图像。然后，算法遍历目标表中的所有记录，如果找到索引则使用该索引，否则执行全表扫描。对于目标表中的每条记录，它确定该行是否存在于哈希表中。如果在哈希表中找到该行，则更新目标表中的记录，并从哈希表中删除该行。当检查完目标表中的所有记录后，算法验证哈希表是否为空。如果哈希表中仍有任何未匹配的行，则算法返回错误ER_KEY_NOT_FOUND并停止复制应用程序线程。
- en: The [`slave_rows_search_algorithms`](replication-options-replica.html#sysvar_slave_rows_search_algorithms)
    system variable was previously used to control how rows are searched for matches.
    The use of this system variable is now deprecated, because the default setting,
    which uses an index scan followed by a hash scan as described above, is optimal
    for performance and works correctly in all scenarios.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`slave_rows_search_algorithms`](replication-options-replica.html#sysvar_slave_rows_search_algorithms)系统变量以前用于控制如何搜索匹配的行。现在不推荐使用这个系统变量，因为默认设置，即使用索引扫描后跟随哈希扫描的方式，对性能最优且在所有场景下都能正常工作。'
