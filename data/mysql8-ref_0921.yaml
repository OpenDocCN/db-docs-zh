- en: 15.1.23 CREATE VIEW Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.1.23 创建视图语句
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-view.html](https://dev.mysql.com/doc/refman/8.0/en/create-view.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-view.html](https://dev.mysql.com/doc/refman/8.0/en/create-view.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The [`CREATE VIEW`](create-view.html "15.1.23 CREATE VIEW Statement") statement
    creates a new view, or replaces an existing view if the `OR REPLACE` clause is
    given. If the view does not exist, [`CREATE OR REPLACE VIEW`](create-view.html
    "15.1.23 CREATE VIEW Statement") is the same as [`CREATE VIEW`](create-view.html
    "15.1.23 CREATE VIEW Statement"). If the view does exist, [`CREATE OR REPLACE
    VIEW`](create-view.html "15.1.23 CREATE VIEW Statement") replaces it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CREATE VIEW`](create-view.html "15.1.23 CREATE VIEW Statement")语句创建一个新视图，如果给出`OR
    REPLACE`子句，则替换现有视图。如果视图不存在，[`CREATE OR REPLACE VIEW`](create-view.html "15.1.23 CREATE
    VIEW Statement")与[`CREATE VIEW`](create-view.html "15.1.23 CREATE VIEW Statement")相同。如果视图存在，[`CREATE
    OR REPLACE VIEW`](create-view.html "15.1.23 CREATE VIEW Statement")将其替换。'
- en: For information about restrictions on view use, see [Section 27.9, “Restrictions
    on Views”](view-restrictions.html "27.9 Restrictions on Views").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有关视图使用限制的信息，请参阅[第27.9节，“视图限制”](view-restrictions.html "27.9 Restrictions on
    Views")。
- en: The *`select_statement`* is a [`SELECT`](select.html "15.2.13 SELECT Statement")
    statement that provides the definition of the view. (Selecting from the view selects,
    in effect, using the [`SELECT`](select.html "15.2.13 SELECT Statement") statement.)
    The *`select_statement`* can select from base tables or from other views. Beginning
    with MySQL 8.0.19, the [`SELECT`](select.html "15.2.13 SELECT Statement") statement
    can use a [`VALUES`](values.html "15.2.19 VALUES Statement") statement as its
    source, or can be replaced with a [`TABLE`](table.html "15.2.16 TABLE Statement")
    statement, as with [`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE
    TABLE ... SELECT Statement").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*`select_statement`*是一个[`SELECT`](select.html "15.2.13 SELECT Statement")语句，提供了视图的定义。（从视图中选择实际上是使用[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句进行选择。）*`select_statement`*可以从基本表或其他视图中进行选择。从MySQL
    8.0.19开始，[`SELECT`](select.html "15.2.13 SELECT Statement")语句可以使用[`VALUES`](values.html
    "15.2.19 VALUES Statement")语句作为其来源，或者可以被替换为[`TABLE`](table.html "15.2.16 TABLE
    Statement")语句，就像[`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE
    TABLE ... SELECT Statement")一样。'
- en: The view definition is “frozen” at creation time and is not affected by subsequent
    changes to the definitions of the underlying tables. For example, if a view is
    defined as `SELECT *` on a table, new columns added to the table later do not
    become part of the view, and columns dropped from the table result in an error
    when selecting from the view.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 视图定义在创建时“冻结”，不受后续对基础表定义的更改的影响。例如，如果一个视图被定义为在表上`SELECT *`，那么稍后添加到表中的新列不会成为视图的一部分，而从表中删除的列在从视图中选择时会导致错误。
- en: The `ALGORITHM` clause affects how MySQL processes the view. The `DEFINER` and
    `SQL SECURITY` clauses specify the security context to be used when checking access
    privileges at view invocation time. The `WITH CHECK OPTION` clause can be given
    to constrain inserts or updates to rows in tables referenced by the view. These
    clauses are described later in this section.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`ALGORITHM`子句影响MySQL处理视图的方式。`DEFINER`和`SQL SECURITY`子句指定在视图调用时检查访问权限时要使用的安全上下文。`WITH
    CHECK OPTION`子句可以用于限制对视图引用的表中的行的插入或更新。这些子句稍后在本节中描述。'
- en: The [`CREATE VIEW`](create-view.html "15.1.23 CREATE VIEW Statement") statement
    requires the [`CREATE VIEW`](privileges-provided.html#priv_create-view) privilege
    for the view, and some privilege for each column selected by the [`SELECT`](select.html
    "15.2.13 SELECT Statement") statement. For columns used elsewhere in the [`SELECT`](select.html
    "15.2.13 SELECT Statement") statement, you must have the [`SELECT`](privileges-provided.html#priv_select)
    privilege. If the `OR REPLACE` clause is present, you must also have the [`DROP`](privileges-provided.html#priv_drop)
    privilege for the view. If the `DEFINER` clause is present, the privileges required
    depend on the *`user`* value, as discussed in [Section 27.6, “Stored Object Access
    Control”](stored-objects-security.html "27.6 Stored Object Access Control").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CREATE VIEW`](create-view.html "15.1.23 CREATE VIEW Statement")语句需要视图的[`CREATE
    VIEW`](privileges-provided.html#priv_create-view)权限，并且对[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句中选择的每个列都需要一些权限。对于在[`SELECT`](select.html "15.2.13 SELECT
    Statement")语句中的其他地方使用的列，您必须具有[`SELECT`](privileges-provided.html#priv_select)权限。如果存在`OR
    REPLACE`子句，则还必须具有视图的[`DROP`](privileges-provided.html#priv_drop)权限。如果存在`DEFINER`子句，则所需的权限取决于*`user`*值，如[第27.6节，“存储对象访问控制”](stored-objects-security.html
    "27.6 Stored Object Access Control")中所讨论的那样。'
- en: When a view is referenced, privilege checking occurs as described later in this
    section.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当引用视图时，权限检查将按照本节后面描述的方式进行。
- en: 'A view belongs to a database. By default, a new view is created in the default
    database. To create the view explicitly in a given database, use *`db_name.view_name`*
    syntax to qualify the view name with the database name:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 视图属于数据库。默认情况下，新视图将在默认数据库中创建。要在特定数据库中显式创建视图，请使用*`db_name.view_name`*语法，以数据库名称限定视图名称：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Unqualified table or view names in the [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement are also interpreted with respect to the default database.
    A view can refer to tables or views in other databases by qualifying the table
    or view name with the appropriate database name.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SELECT`](select.html "15.2.13 SELECT Statement")语句中的未限定表或视图名称也会根据默认数据库进行解释。视图可以通过使用适当的数据库名称限定表或视图名称来引用其他数据库中的表或视图。'
- en: Within a database, base tables and views share the same namespace, so a base
    table and a view cannot have the same name.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库中，基本表和视图共享相同的命名空间，因此基本表和视图不能具有相同的名称。
- en: Columns retrieved by the [`SELECT`](select.html "15.2.13 SELECT Statement")
    statement can be simple references to table columns, or expressions that use functions,
    constant values, operators, and so forth.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由[`SELECT`](select.html "15.2.13 SELECT Statement")语句检索的列可以是对表列的简单引用，也可以是使用函数、常量值、运算符等的表达式。
- en: A view must have unique column names with no duplicates, just like a base table.
    By default, the names of the columns retrieved by the [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement are used for the view column names. To define explicit names
    for the view columns, specify the optional *`column_list`* clause as a list of
    comma-separated identifiers. The number of names in *`column_list`* must be the
    same as the number of columns retrieved by the [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 视图必须具有唯一的列名，不能有重复，就像基本表一样。默认情况下，由[`SELECT`](select.html "15.2.13 SELECT Statement")语句检索的列的名称用于视图列名。要为视图列定义显式名称，请指定可选的*`column_list`*子句作为逗号分隔的标识符列表。*`column_list`*中的名称数量必须与由[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句检索的列的数量相同。
- en: 'A view can be created from many kinds of [`SELECT`](select.html "15.2.13 SELECT
    Statement") statements. It can refer to base tables or other views. It can use
    joins, [`UNION`](union.html "15.2.18 UNION Clause"), and subqueries. The [`SELECT`](select.html
    "15.2.13 SELECT Statement") need not even refer to any tables:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 视图可以从许多种类的[`SELECT`](select.html "15.2.13 SELECT Statement")语句创建。它可以引用基本表或其他视图。它可以使用连接、[`UNION`](union.html
    "15.2.18 UNION Clause")和子查询。[`SELECT`](select.html "15.2.13 SELECT Statement")甚至不需要引用任何表：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following example defines a view that selects two columns from another
    table as well as an expression calculated from those columns:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例定义了一个视图，从另一个表中选择了两列，以及从这些列计算出的表达式：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'A view definition is subject to the following restrictions:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 视图定义受以下限制：
- en: The [`SELECT`](select.html "15.2.13 SELECT Statement") statement cannot refer
    to system variables or user-defined variables.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SELECT`](select.html "15.2.13 SELECT Statement")语句不能引用系统变量或用户定义的变量。'
- en: Within a stored program, the [`SELECT`](select.html "15.2.13 SELECT Statement")
    statement cannot refer to program parameters or local variables.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在存储程序中，[`SELECT`](select.html "15.2.13 SELECT Statement")语句不能引用程序参数或局部变量。
- en: The [`SELECT`](select.html "15.2.13 SELECT Statement") statement cannot refer
    to prepared statement parameters.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SELECT`](select.html "15.2.13 SELECT Statement")语句不能引用准备好的语句参数。'
- en: Any table or view referred to in the definition must exist. If, after the view
    has been created, a table or view that the definition refers to is dropped, use
    of the view results in an error. To check a view definition for problems of this
    kind, use the [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")
    statement.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义中引用的任何表或视图必须存在。如果在创建视图之后，定义引用的表或视图被删除，则使用该视图会导致错误。要检查此类问题的视图定义，请使用[`CHECK
    TABLE`](check-table.html "15.7.3.2 CHECK TABLE Statement")语句。
- en: The definition cannot refer to a `TEMPORARY` table, and you cannot create a
    `TEMPORARY` view.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义不能引用`TEMPORARY`表，也不能创建`TEMPORARY`视图。
- en: You cannot associate a trigger with a view.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不能将触发器与视图关联。
- en: Aliases for column names in the [`SELECT`](select.html "15.2.13 SELECT Statement")
    statement are checked against the maximum column length of 64 characters (not
    the maximum alias length of 256 characters).
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`SELECT`](select.html "15.2.13 SELECT Statement")语句中，列名的别名会被检查，其最大长度为64个字符（而不是最大别名长度为256个字符）。
- en: '`ORDER BY` is permitted in a view definition, but it is ignored if you select
    from a view using a statement that has its own `ORDER BY`.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 视图定义中允许使用`ORDER BY`，但如果使用具有自己`ORDER BY`的语句从视图中进行选择，则会被忽略。
- en: For other options or clauses in the definition, they are added to the options
    or clauses of the statement that references the view, but the effect is undefined.
    For example, if a view definition includes a `LIMIT` clause, and you select from
    the view using a statement that has its own `LIMIT` clause, it is undefined which
    limit applies. This same principle applies to options such as `ALL`, `DISTINCT`,
    or `SQL_SMALL_RESULT` that follow the [`SELECT`](select.html "15.2.13 SELECT Statement")
    keyword, and to clauses such as `INTO`, `FOR UPDATE`, `FOR SHARE`, `LOCK IN SHARE
    MODE`, and `PROCEDURE`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于定义中的其他选项或子句，它们会被添加到引用视图的语句的选项或子句中，但效果是未定义的。例如，如果视图定义包括`LIMIT`子句，并且您使用具有自己`LIMIT`子句的语句从视图中进行选择，则未定义哪个限制适用。这个原则也适用于跟随[`SELECT`](select.html
    "15.2.13 SELECT Statement")关键字的`ALL`、`DISTINCT`或`SQL_SMALL_RESULT`等选项，以及诸如`INTO`、`FOR
    UPDATE`、`FOR SHARE`、`LOCK IN SHARE MODE`和`PROCEDURE`等子句。
- en: 'The results obtained from a view may be affected if you change the query processing
    environment by changing system variables:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更改查询处理环境，可能会影响从视图中获取的结果：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `DEFINER` and `SQL SECURITY` clauses determine which MySQL account to use
    when checking access privileges for the view when a statement is executed that
    references the view. The valid `SQL SECURITY` characteristic values are `DEFINER`
    (the default) and `INVOKER`. These indicate that the required privileges must
    be held by the user who defined or invoked the view, respectively.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`DEFINER`和`SQL SECURITY`子句确定在执行引用视图的语句时使用哪个MySQL账户来检查访问权限。有效的`SQL SECURITY`特性值为`DEFINER`（默认）和`INVOKER`。这表示所需的权限必须由定义或调用视图的用户持有。'
- en: If the `DEFINER` clause is present, the *`user`* value should be a MySQL account
    specified as `'*`user_name`*'@'*`host_name`*'`, [`CURRENT_USER`](information-functions.html#function_current-user),
    or [`CURRENT_USER()`](information-functions.html#function_current-user). The permitted
    *`user`* values depend on the privileges you hold, as discussed in [Section 27.6,
    “Stored Object Access Control”](stored-objects-security.html "27.6 Stored Object
    Access Control"). Also see that section for additional information about view
    security.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在`DEFINER`子句，则*`user`*值应为MySQL账户，指定为`'*`user_name`*'@'*`host_name`*`、[`CURRENT_USER`](information-functions.html#function_current-user)或[`CURRENT_USER()`](information-functions.html#function_current-user)。允许的*`user`*值取决于您拥有的权限，如[第27.6节“存储对象访问控制”](stored-objects-security.html
    "27.6 Stored Object Access Control")中所讨论的。还请参阅该部分以获取有关视图安全性的其他信息。
- en: If the `DEFINER` clause is omitted, the default definer is the user who executes
    the [`CREATE VIEW`](create-view.html "15.1.23 CREATE VIEW Statement") statement.
    This is the same as specifying `DEFINER = CURRENT_USER` explicitly.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略了`DEFINER`子句，则默认的定义者是执行[`CREATE VIEW`](create-view.html "15.1.23 CREATE
    VIEW Statement")语句的用户。这与明确指定`DEFINER = CURRENT_USER`相同。
- en: Within a view definition, the [`CURRENT_USER`](information-functions.html#function_current-user)
    function returns the view's `DEFINER` value by default. For views defined with
    the `SQL SECURITY INVOKER` characteristic, [`CURRENT_USER`](information-functions.html#function_current-user)
    returns the account for the view's invoker. For information about user auditing
    within views, see [Section 8.2.23, “SQL-Based Account Activity Auditing”](account-activity-auditing.html
    "8.2.23 SQL-Based Account Activity Auditing").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图定义中，[`CURRENT_USER`](information-functions.html#function_current-user)函数默认返回视图的`DEFINER`值。对于使用`SQL
    SECURITY INVOKER`特性定义的视图，[`CURRENT_USER`](information-functions.html#function_current-user)返回视图调用者的账户。有关视图内用户审计的信息，请参阅[第8.2.23节“基于SQL的账户活动审计”](account-activity-auditing.html
    "8.2.23 SQL-Based Account Activity Auditing")。
- en: Within a stored routine that is defined with the `SQL SECURITY DEFINER` characteristic,
    [`CURRENT_USER`](information-functions.html#function_current-user) returns the
    routine's `DEFINER` value. This also affects a view defined within such a routine,
    if the view definition contains a `DEFINER` value of [`CURRENT_USER`](information-functions.html#function_current-user).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`SQL SECURITY DEFINER`特性定义的存储过程中，[`CURRENT_USER`](information-functions.html#function_current-user)返回该存储过程的`DEFINER`值。如果视图定义中包含[`CURRENT_USER`](information-functions.html#function_current-user)的`DEFINER`值，这也会影响到在此类存储过程中定义的视图。
- en: 'MySQL checks view privileges like this:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL检查视图权限的方式如下：
- en: 'At view definition time, the view creator must have the privileges needed to
    use the top-level objects accessed by the view. For example, if the view definition
    refers to table columns, the creator must have some privilege for each column
    in the select list of the definition, and the [`SELECT`](privileges-provided.html#priv_select)
    privilege for each column used elsewhere in the definition. If the definition
    refers to a stored function, only the privileges needed to invoke the function
    can be checked. The privileges required at function invocation time can be checked
    only as it executes: For different invocations, different execution paths within
    the function might be taken.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视图定义时，视图创建者必须具有使用视图访问的顶层对象所需的权限。例如，如果视图定义引用表列，则创建者必须对定义中的每个列具有某些权限，并且对定义中其他地方使用的每个列都需要[`SELECT`](privileges-provided.html#priv_select)权限。如果定义引用了一个存储函数，则只能检查调用函数所需的权限。在函数调用时需要的权限只能在执行时检查：对于不同的调用，函数内的不同执行路径可能被采取。
- en: The user who references a view must have appropriate privileges to access it
    ([`SELECT`](privileges-provided.html#priv_select) to select from it, [`INSERT`](privileges-provided.html#priv_insert)
    to insert into it, and so forth.)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引用视图的用户必须具有适当的权限来访问它（[`SELECT`](privileges-provided.html#priv_select)用于从中选择，[`INSERT`](privileges-provided.html#priv_insert)用于插入等）。
- en: When a view has been referenced, privileges for objects accessed by the view
    are checked against the privileges held by the view `DEFINER` account or invoker,
    depending on whether the `SQL SECURITY` characteristic is `DEFINER` or `INVOKER`,
    respectively.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当引用了一个视图时，会根据视图`DEFINER`账户或调用者持有的权限进行对象访问权限检查，具体取决于`SQL SECURITY`特性是`DEFINER`还是`INVOKER`。
- en: If reference to a view causes execution of a stored function, privilege checking
    for statements executed within the function depend on whether the function `SQL
    SECURITY` characteristic is `DEFINER` or `INVOKER`. If the security characteristic
    is `DEFINER`, the function runs with the privileges of the `DEFINER` account.
    If the characteristic is `INVOKER`, the function runs with the privileges determined
    by the view's `SQL SECURITY` characteristic.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果引用视图导致执行存储函数，则在函数内执行的语句的权限检查取决于函数的`SQL SECURITY`特性是`DEFINER`还是`INVOKER`。如果安全特性是`DEFINER`，则函数以`DEFINER`账户的权限运行。如果特性是`INVOKER`，则函数以视图的`SQL
    SECURITY`特性确定的权限运行。
- en: 'Example: A view might depend on a stored function, and that function might
    invoke other stored routines. For example, the following view invokes a stored
    function `f()`:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：一个视图可能依赖于一个存储函数，而该函数可能调用其他存储过程。例如，以下视图调用了一个存储函数`f()`：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Suppose that `f()` contains a statement such as this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 假设`f()`包含如下语句：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The privileges required for executing statements within `f()` need to be checked
    when `f()` executes. This might mean that privileges are needed for `p1()` or
    `p2()`, depending on the execution path within `f()`. Those privileges must be
    checked at runtime, and the user who must possess the privileges is determined
    by the `SQL SECURITY` values of the view `v` and the function `f()`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行`f()`时，需要检查执行语句所需的权限。这可能意味着在`f()`内部执行时需要`p1()`或`p2()`的权限，具体取决于`f()`内的执行路径。这些权限必须在运行时检查，而需要拥有这些权限的用户由视图`v`和函数`f()`的`SQL
    SECURITY`值确定。
- en: The `DEFINER` and `SQL SECURITY` clauses for views are extensions to standard
    SQL. In standard SQL, views are handled using the rules for `SQL SECURITY DEFINER`.
    The standard says that the definer of the view, which is the same as the owner
    of the view's schema, gets applicable privileges on the view (for example, [`SELECT`](privileges-provided.html#priv_select))
    and may grant them. MySQL has no concept of a schema “owner”, so MySQL adds a
    clause to identify the definer. The `DEFINER` clause is an extension where the
    intent is to have what the standard has; that is, a permanent record of who defined
    the view. This is why the default `DEFINER` value is the account of the view creator.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 视图的`DEFINER`和`SQL SECURITY`子句是标准SQL的扩展。在标准SQL中，视图使用`SQL SECURITY DEFINER`规则处理。标准规定视图的定义者，即视图模式的所有者，获得视图的适用权限（例如，[`SELECT`](privileges-provided.html#priv_select)）并可以授予它们。MySQL没有“模式所有者”的概念，因此MySQL添加了一个子句来标识定义者。`DEFINER`子句是一个扩展，其目的是拥有标准的内容；也就是说，永久记录谁定义了视图。这就是为什么默认的`DEFINER`值是视图创建者的帐户。
- en: 'The optional `ALGORITHM` clause is a MySQL extension to standard SQL. It affects
    how MySQL processes the view. `ALGORITHM` takes three values: `MERGE`, `TEMPTABLE`,
    or `UNDEFINED`. For more information, see [Section 27.5.2, “View Processing Algorithms”](view-algorithms.html
    "27.5.2 View Processing Algorithms"), as well as [Section 10.2.2.4, “Optimizing
    Derived Tables, View References, and Common Table Expressions with Merging or
    Materialization”](derived-table-optimization.html "10.2.2.4 Optimizing Derived
    Tables, View References, and Common Table Expressions with Merging or Materialization").'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的`ALGORITHM`子句是MySQL对标准SQL的扩展。它影响MySQL处理视图的方式。`ALGORITHM`有三个值：`MERGE`、`TEMPTABLE`或`UNDEFINED`。有关更多信息，请参见[Section 27.5.2,
    “View Processing Algorithms”](view-algorithms.html "27.5.2 View Processing Algorithms")，以及[Section 10.2.2.4,
    “Optimizing Derived Tables, View References, and Common Table Expressions with
    Merging or Materialization”](derived-table-optimization.html "10.2.2.4 Optimizing
    Derived Tables, View References, and Common Table Expressions with Merging or
    Materialization")。
- en: Some views are updatable. That is, you can use them in statements such as [`UPDATE`](update.html
    "15.2.17 UPDATE Statement"), [`DELETE`](delete.html "15.2.2 DELETE Statement"),
    or [`INSERT`](insert.html "15.2.7 INSERT Statement") to update the contents of
    the underlying table. For a view to be updatable, there must be a one-to-one relationship
    between the rows in the view and the rows in the underlying table. There are also
    certain other constructs that make a view nonupdatable.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一些视图是可更新的。也就是说，你可以在[`UPDATE`](update.html "15.2.17 UPDATE Statement")、[`DELETE`](delete.html
    "15.2.2 DELETE Statement")或[`INSERT`](insert.html "15.2.7 INSERT Statement")等语句中使用它们来更新底层表的内容。要使视图可更新，视图中的行与底层表中的行之间必须是一对一的关系。还有一些其他构造使视图不可更新。
- en: A generated column in a view is considered updatable because it is possible
    to assign to it. However, if such a column is updated explicitly, the only permitted
    value is `DEFAULT`. For information about generated columns, see [Section 15.1.20.8,
    “CREATE TABLE and Generated Columns”](create-table-generated-columns.html "15.1.20.8 CREATE
    TABLE and Generated Columns").
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 视图中的生成列被认为是可更新的，因为可以对其进行赋值。但是，如果显式更新这样的列，唯一允许的值是`DEFAULT`。有关生成列的信息，请参见[Section 15.1.20.8,
    “CREATE TABLE and Generated Columns”](create-table-generated-columns.html "15.1.20.8 CREATE
    TABLE and Generated Columns")。
- en: The `WITH CHECK OPTION` clause can be given for an updatable view to prevent
    inserts or updates to rows except those for which the `WHERE` clause in the *`select_statement`*
    is true.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 可以为可更新视图提供`WITH CHECK OPTION`子句，以防止插入或更新行，除非`select_statement`中的`WHERE`子句为真。
- en: In a `WITH CHECK OPTION` clause for an updatable view, the `LOCAL` and `CASCADED`
    keywords determine the scope of check testing when the view is defined in terms
    of another view. The `LOCAL` keyword restricts the `CHECK OPTION` only to the
    view being defined. `CASCADED` causes the checks for underlying views to be evaluated
    as well. When neither keyword is given, the default is `CASCADED`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在可更新视图的`WITH CHECK OPTION`子句中，`LOCAL`和`CASCADED`关键字确定了在视图以另一个视图的形式定义时进行检查测试的范围。`LOCAL`关键字将`CHECK
    OPTION`限制在正在定义的视图中。`CASCADED`会导致对底层视图的检查也被评估。当没有给出关键字时，默认值为`CASCADED`。
- en: For more information about updatable views and the `WITH CHECK OPTION` clause,
    see [Section 27.5.3, “Updatable and Insertable Views”](view-updatability.html
    "27.5.3 Updatable and Insertable Views"), and [Section 27.5.4, “The View WITH
    CHECK OPTION Clause”](view-check-option.html "27.5.4 The View WITH CHECK OPTION
    Clause").
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 关于可更新视图和`WITH CHECK OPTION`子句的更多信息，请参见[第27.5.3节，“可更新和可插入视图”](view-updatability.html
    "27.5.3 可更新和可插入视图")，以及[第27.5.4节，“带有CHECK OPTION子句的视图”](view-check-option.html
    "27.5.4 带有CHECK OPTION子句的视图")。
