- en: 14.24.5 Precision Math Examples
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.24.5 精度数学示例
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/precision-math-examples.html](https://dev.mysql.com/doc/refman/8.0/en/precision-math-examples.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/precision-math-examples.html](https://dev.mysql.com/doc/refman/8.0/en/precision-math-examples.html)
- en: This section provides some examples that show precision math query results in
    MySQL. These examples demonstrate the principles described in [Section 14.24.3,
    “Expression Handling”](precision-math-expressions.html "14.24.3 Expression Handling"),
    and [Section 14.24.4, “Rounding Behavior”](precision-math-rounding.html "14.24.4 Rounding
    Behavior").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了一些示例，展示了MySQL中精度数学查询结果的示例。这些示例演示了[第14.24.3节，“表达式处理”](precision-math-expressions.html
    "14.24.3 Expression Handling")和[第14.24.4节，“四舍五入行为”](precision-math-rounding.html
    "14.24.4 Rounding Behavior")中描述的原则。
- en: '**Example 1**. Numbers are used with their exact value as given when possible:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 1**。在可能的情况下，数字使用其给定的精确值：'
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For floating-point values, results are inexact:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于浮点值，结果是不精确的：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Another way to see the difference in exact and approximate value handling is
    to add a small number to a sum many times. Consider the following stored procedure,
    which adds `.0001` to a variable 1,000 times.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种看到精确值和近似值处理差异的方法是多次向总和中添加一个小数。考虑以下存储过程，它将`.0001`添加到一个变量1,000次。
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The sum for both `d` and `f` logically should be 1, but that is true only for
    the decimal calculation. The floating-point calculation introduces small errors:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`d`和`f`的总和在逻辑上应该为1，但这仅适用于十进制计算。浮点计算引入了小误差：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Example 2**. Multiplication is performed with the scale required by standard
    SQL. That is, for two numbers *`X1`* and *`X2`* that have scale *`S1`* and *`S2`*,
    the scale of the result is `*`S1`* + *`S2`*`:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 2**。乘法使用标准SQL所需的比例执行。也就是说，对于具有比例*S1*和*S2*的两个数字*X1*和*X2*，结果的比例为*S1* + *S2*：'
- en: '[PRE4]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Example 3**. Rounding behavior for exact-value numbers is well-defined:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 3**。精确值数字的四舍五入行为是明确定义的：'
- en: Rounding behavior (for example, with the [`ROUND()`](mathematical-functions.html#function_round)
    function) is independent of the implementation of the underlying C library, which
    means that results are consistent from platform to platform.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 四舍五入行为（例如，使用[`ROUND()`](mathematical-functions.html#function_round)函数）独立于底层C库的实现，这意味着结果在不同平台上是一致的。
- en: 'Rounding for exact-value columns ([`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") and integer) and exact-valued numbers
    uses the “round half away from zero” rule. A value with a fractional part of .5
    or greater is rounded away from zero to the nearest integer, as shown here:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精确值列（[`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types (Exact Value)
    - DECIMAL, NUMERIC") 和整数）以及精确值数字的四舍五入使用“远离零的方向”规则。具有小数部分为.5或更大的值将远离零四舍五入到最近的整数，如下所示：
- en: '[PRE5]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Rounding for floating-point values uses the C library, which on many systems
    uses the “round to nearest even” rule. A value with a fractional part exactly
    half way between two integers is rounded to the nearest even integer:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点值的四舍五入使用C库，许多系统上使用“四舍五入到最近偶数”的规则。具有恰好处于两个整数之间的小数部分的值将四舍五入为最近的偶数：
- en: '[PRE6]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Example 4**. In strict mode, inserting a value that is out of range for a
    column causes an error, rather than truncation to a legal value.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 4**。在严格模式下，插入超出列范围的值会导致错误，而不是截断为合法值。'
- en: 'When MySQL is not running in strict mode, truncation to a legal value occurs:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当MySQL未在严格模式下运行时，会发生截断为合法值的情况：
- en: '[PRE7]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'However, an error occurs if strict mode is in effect:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果启用了严格模式，则会发生错误：
- en: '[PRE8]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Example 5**: In strict mode and with [`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)
    set, division by zero causes an error, not a result of `NULL`.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 5**：在严格模式下，并且设置了[`ERROR_FOR_DIVISION_BY_ZERO`](sql-mode.html#sqlmode_error_for_division_by_zero)，除以零会导致错误，而不是结果为`NULL`。'
- en: 'In nonstrict mode, division by zero has a result of `NULL`:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在非严格模式下，除以零的结果为`NULL`：
- en: '[PRE9]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'However, division by zero is an error if the proper SQL modes are in effect:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果启用了正确的SQL模式，则除以零会导致错误：
- en: '[PRE10]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**Example 6**. Exact-value literals are evaluated as exact values.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 6**。精确值文字被评估为精确值。'
- en: 'Approximate-value literals are evaluated using floating point, but exact-value
    literals are handled as [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC"):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 近似值文字使用浮点数进行评估，但精确值文字被处理为[`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC")：
- en: '[PRE11]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Example 7**. If the argument to an aggregate function is an exact numeric
    type, the result is also an exact numeric type, with a scale at least that of
    the argument.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 7**。如果聚合函数的参数是精确数值类型，则结果也是精确数值类型，其精度至少与参数相同。'
- en: 'Consider these statements:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下语句：
- en: '[PRE12]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The result is a double only for the floating-point argument. For exact type
    arguments, the result is also an exact type:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 结果仅对浮点参数为双精度。对于精确类型参数，结果也是精确类型：
- en: '[PRE13]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The result is a double only for the floating-point argument. For exact type
    arguments, the result is also an exact type.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 结果仅对浮点参数为双精度。对于精确类型参数，结果也是精确类型。
