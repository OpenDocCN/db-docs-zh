- en: 15.1.36 RENAME TABLE Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.1.36 RENAME TABLE Statement
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/rename-table.html](https://dev.mysql.com/doc/refman/8.0/en/rename-table.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/rename-table.html](https://dev.mysql.com/doc/refman/8.0/en/rename-table.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[`RENAME TABLE`](rename-table.html "15.1.36 RENAME TABLE Statement") renames
    one or more tables. You must have [`ALTER`](privileges-provided.html#priv_alter)
    and [`DROP`](privileges-provided.html#priv_drop) privileges for the original table,
    and [`CREATE`](privileges-provided.html#priv_create) and [`INSERT`](privileges-provided.html#priv_insert)
    privileges for the new table.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`RENAME TABLE`](rename-table.html "15.1.36 RENAME TABLE Statement")重命名一个或多个表。你必须对原始表具有[`ALTER`](privileges-provided.html#priv_alter)和[`DROP`](privileges-provided.html#priv_drop)权限，对新表具有[`CREATE`](privileges-provided.html#priv_create)和[`INSERT`](privileges-provided.html#priv_insert)权限。'
- en: 'For example, to rename a table named `old_table` to `new_table`, use this statement:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要将名为`old_table`的表重命名为`new_table`，可以使用以下语句：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'That statement is equivalent to the following [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") statement:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 该语句等同于以下[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")语句：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`RENAME TABLE`, unlike [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE
    Statement"), can rename multiple tables within a single statement:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`RENAME TABLE`，与[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")不同，可以在单个语句中重命名多个表：'
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Renaming operations are performed left to right. Thus, to swap two table names,
    do this (assuming that a table with the intermediary name `tmp_table` does not
    already exist):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 重命名操作是从左到右执行的。因此，要交换两个表名，可以这样做（假设中间名为`tmp_table`的表不存在）：
- en: '[PRE4]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Metadata locks on tables are acquired in name order, which in some cases can
    make a difference in operation outcome when multiple transactions execute concurrently.
    See [Section 10.11.4, “Metadata Locking”](metadata-locking.html "10.11.4 Metadata
    Locking").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 表的元数据锁按名称顺序获取，在某些情况下，当多个事务同时执行时，这可能会影响操作结果。参见[Section 10.11.4, “Metadata Locking”](metadata-locking.html
    "10.11.4 Metadata Locking")。
- en: 'As of MySQL 8.0.13, you can rename tables locked with a [`LOCK TABLES`](lock-tables.html
    "15.3.6 LOCK TABLES and UNLOCK TABLES Statements") statement, provided that they
    are locked with a `WRITE` lock or are the product of renaming `WRITE`-locked tables
    from earlier steps in a multiple-table rename operation. For example, this is
    permitted:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.13开始，可以重命名被[`LOCK TABLES`](lock-tables.html "15.3.6 LOCK TABLES and
    UNLOCK TABLES Statements")语句锁定的表，前提是它们被使用`WRITE`锁定或是在多表重命名操作中从之前步骤中重命名`WRITE`锁定的表的结果。例如，这是允许的：
- en: '[PRE5]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is not permitted:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是不允许的：
- en: '[PRE6]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Prior to MySQL 8.0.13, to execute `RENAME TABLE`, there must be no tables locked
    with `LOCK TABLES`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.13之前，要执行`RENAME TABLE`，不能有使用`LOCK TABLES`锁定的表。
- en: With the transaction table locking conditions satisfied, the rename operation
    is done atomically; no other session can access any of the tables while the rename
    is in progress.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 满足事务表锁定条件后，重命名操作是原子性的；在重命名过程中，其他会话无法访问任何表。
- en: If any errors occur during a `RENAME TABLE`, the statement fails and no changes
    are made.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在`RENAME TABLE`过程中发生任何错误，该语句将失败，不会进行任何更改。
- en: 'You can use `RENAME TABLE` to move a table from one database to another:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`RENAME TABLE`将一个表从一个数据库移动到另一个数据库：
- en: '[PRE7]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Using this method to move all tables from one database to a different one in
    effect renames the database (an operation for which MySQL has no single statement),
    except that the original database continues to exist, albeit with no tables.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法将所有表从一个数据库移动到另一个数据库实际上是重命名数据库（MySQL没有单个语句执行此操作），只是原始数据库仍然存在，尽管没有表。
- en: Like `RENAME TABLE`, `ALTER TABLE ... RENAME` can also be used to move a table
    to a different database. Regardless of the statement used, if the rename operation
    would move the table to a database located on a different file system, the success
    of the outcome is platform specific and depends on the underlying operating system
    calls used to move table files.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 像`RENAME TABLE`一样，`ALTER TABLE ... RENAME`也可以用于将表移动到不同的数据库。无论使用哪种语句，如果重命名操作将表移动到位于不同文件系统上的数据库，操作结果的成功与否取决于特定平台，并取决于用于移动表文件的底层操作系统调用。
- en: If a table has triggers, attempts to rename the table into a different database
    fail with a Trigger in wrong schema ([`ER_TRG_IN_WRONG_SCHEMA`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_trg_in_wrong_schema))
    error.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个表有触发器，尝试将表重命名到不同的数据库会失败，并显示错误Trigger in wrong schema ([`ER_TRG_IN_WRONG_SCHEMA`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_trg_in_wrong_schema))。
- en: An unencrypted table can be moved to an encryption-enabled database and vice
    versa. However, if the [`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)
    variable is enabled, the [`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)
    privilege is required if the table encryption setting differs from the default
    database encryption.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 未加密的表可以移动到启用加密的数据库，反之亦然。但是，如果启用了[`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)变量，则如果表的加密设置与默认数据库加密不同，则需要[`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)权限。
- en: To rename `TEMPORARY` tables, `RENAME TABLE` does not work. Use [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") instead.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要重命名`TEMPORARY`表，`RENAME TABLE` 不起作用。请改用[`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement")。
- en: '`RENAME TABLE` works for views, except that views cannot be renamed into a
    different database.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`RENAME TABLE` 对视图有效，但视图不能重命名到不同的数据库。'
- en: Any privileges granted specifically for a renamed table or view are not migrated
    to the new name. They must be changed manually.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为重命名的表或视图专门授予的任何权限不会迁移到新名称。它们必须手动更改。
- en: '`RENAME TABLE *`tbl_name`* TO *`new_tbl_name`*` changes internally generated
    foreign key constraint names and user-defined foreign key constraint names that
    begin with the string “*`tbl_name`*_ibfk_” to reflect the new table name. `InnoDB`
    interprets foreign key constraint names that begin with the string “*`tbl_name`*_ibfk_”
    as internally generated names.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`RENAME TABLE *`tbl_name`* TO *`new_tbl_name`*` 会更改内部生成的以及以字符串“*`tbl_name`*_ibfk_”开头的用户定义的外键约束名称，以反映新表名。`InnoDB`将以字符串“*`tbl_name`*_ibfk_”开头的外键约束名称解释为内部生成的名称。'
- en: Foreign key constraint names that point to the renamed table are automatically
    updated unless there is a conflict, in which case the statement fails with an
    error. A conflict occurs if the renamed constraint name already exists. In such
    cases, you must drop and re-create the foreign keys for them to function properly.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 指向重命名表的外键约束名称会自动更新，除非存在冲突，否则语句将因错误而失败。如果重命名的约束名称已经存在，则会发生冲突。在这种情况下，您必须删除并重新创建外键以使其正常工作。
- en: '`RENAME TABLE *`tbl_name`* TO *`new_tbl_name`*` changes internally generated
    and user-defined `CHECK` constraint names that begin with the string “*`tbl_name`*_chk_”
    to reflect the new table name. MySQL interprets `CHECK` constraint names that
    begin with the string “*`tbl_name`*_chk_” as internally generated names. Example:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`RENAME TABLE *`tbl_name`* TO *`new_tbl_name`*` 会更改以字符串“*`tbl_name`*_chk_”开头的内部生成和用户定义的`CHECK`约束名称，以反映新表名。MySQL将以字符串“*`tbl_name`*_chk_”开头的`CHECK`约束名称解释为内部生成的名称。示例：'
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
