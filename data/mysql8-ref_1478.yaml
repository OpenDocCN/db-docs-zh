- en: 20.1.2 Group Replication Use Cases
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 20.1.2 Group Replication 使用案例
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-use-cases.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-use-cases.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/group-replication-use-cases.html](https://dev.mysql.com/doc/refman/8.0/en/group-replication-use-cases.html)
- en: Group Replication enables you to create fault-tolerant systems with redundancy
    by replicating the system state to a set of servers. Even if some of the servers
    subsequently fail, as long it is not all or a majority, the system is still available.
    Depending on the number of servers which fail the group might have degraded performance
    or scalability, but it is still available. Server failures are isolated and independent.
    They are tracked by a group membership service which relies on a distributed failure
    detector that is able to signal when any servers leave the group, either voluntarily
    or due to an unexpected halt. There is a distributed recovery procedure to ensure
    that when servers join the group they are brought up to date automatically. There
    is no need for server failover, and the multi-source update everywhere nature
    ensures that even updates are not blocked in the event of a single server failure.
    To summarize, MySQL Group Replication guarantees that the database service is
    continuously available.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Group Replication 可以让您创建具有冗余性的容错系统，通过将系统状态复制到一组服务器。即使其中一些服务器随后失败，只要不是全部或大多数，系统仍然可用。根据失败的服务器数量，群组可能会有性能或可伸缩性下降，但仍然可用。服务器故障是隔离的和独立的。它们由一个依赖于分布式故障检测器的群组成员服务跟踪，该故障检测器能够在任何服务器离开群组时发出信号，无论是自愿离开还是由于意外停止。有一个分布式恢复过程，确保当服务器加入群组时，它们会自动更新。不需要服务器故障转移，而多源更新到处的特性确保即使单个服务器故障，更新也不会被阻塞。总之，MySQL
    Group Replication 保证数据库服务持续可用。
- en: It is important to understand that although the database service is available,
    in the event of an unexpected server exit, those clients connected to it must
    be redirected, or failed over, to a different server. This is not something Group
    Replication attempts to resolve. A connector, load balancer, router, or some form
    of middleware are more suitable to deal with this issue. For example see [MySQL
    Router 8.0](/doc/mysql-router/8.0/en/).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要理解，尽管数据库服务可用，但在发生意外服务器退出时，连接到它的客户端必须被重定向或故障转移到另一台服务器。这不是 Group Replication
    试图解决的问题。连接器、负载均衡器、路由器或某种形式的中间件更适合处理这个问题。例如，请参阅 [MySQL Router 8.0](/doc/mysql-router/8.0/en/)。
- en: To summarize, MySQL Group Replication provides a highly available, highly elastic,
    dependable MySQL service.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，MySQL Group Replication 提供了一个高可用、高弹性、可靠的 MySQL 服务。
- en: Tip
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: To deploy multiple instances of MySQL, you can use [InnoDB Cluster](/doc/mysql-shell/8.0/en/mysql-innodb-cluster.html)
    which enables you to easily administer a group of MySQL server instances in [MySQL
    Shell](/doc/mysql-shell/8.0/en/). InnoDB Cluster wraps MySQL Group Replication
    in a programmatic environment that enables you easily deploy a cluster of MySQL
    instances to achieve high availability. In addition, InnoDB Cluster interfaces
    seamlessly with [MySQL Router](/doc/mysql-router/8.0/en/), which enables your
    applications to connect to the cluster without writing your own failover process.
    For similar use cases that do not require high availability, however, you can
    use [InnoDB ReplicaSet](/doc/mysql-shell/8.0/en/mysql-innodb-replicaset.html).
    Installation instructions for MySQL Shell can be found [here](/doc/mysql-shell/8.0/en/mysql-shell-install.html).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要部署多个 MySQL 实例，您可以使用 [InnoDB Cluster](/doc/mysql-shell/8.0/en/mysql-innodb-cluster.html)，它使您能够在
    [MySQL Shell](/doc/mysql-shell/8.0/en/) 中轻松管理一组 MySQL 服务器实例。InnoDB Cluster 在一个编程环境中封装了
    MySQL Group Replication，使您可以轻松部署一组 MySQL 实例以实现高可用性。此外，InnoDB Cluster 与 [MySQL
    Router](/doc/mysql-router/8.0/en/) 无缝接口，使您的应用程序可以连接到集群而无需编写自己的故障转移过程。然而，对于不需要高可用性的类似用例，您可以使用
    [InnoDB ReplicaSet](/doc/mysql-shell/8.0/en/mysql-innodb-replicaset.html)。MySQL
    Shell 的安装说明可以在[这里](/doc/mysql-shell/8.0/en/mysql-shell-install.html)找到。
- en: Example Use Cases
  id: totrans-7
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例用例
- en: The following examples are typical use cases for Group Replication.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例是 Group Replication 的典型用例。
- en: '*Elastic Replication* - Environments that require a very fluid replication
    infrastructure, where the number of servers has to grow or shrink dynamically
    and with as few side-effects as possible. For instance, database services for
    the cloud.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*弹性复制* - 需要非常灵活的复制基础设施的环境，在这种环境中，服务器数量必须能够动态增长或收缩，并且副作用尽可能少。例如，云端的数据库服务。'
- en: '*Highly Available Shards* - Sharding is a popular approach to achieve write
    scale-out. Use MySQL Group Replication to implement highly available shards, where
    each shard maps to a replication group.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*高可用碎片* - 分片是实现写扩展的流行方法。使用 MySQL 集群复制来实现高可用碎片，其中每个碎片映射到一个复制组。'
- en: '*Alternative to asynchronous Source-Replica replication* - In certain situations,
    using a single source server makes it a single point of contention. Writing to
    an entire group may prove more scalable under certain circumstances.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*替代异步源-副本复制* - 在某些情况下，使用单个源服务器会使其成为一个争用点。在某些情况下，向整个组写入可能更具可扩展性。'
- en: '*Autonomic Systems* - Additionally, you can deploy MySQL Group Replication
    purely for the automation that is built into the replication protocol (described
    already in this and previous chapters).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*自主系统* - 此外，您可以纯粹为内置于复制协议中的自动化部署 MySQL 集群复制（在本章和前几章中已经描述）。'
