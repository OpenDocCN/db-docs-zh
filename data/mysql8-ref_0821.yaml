- en: 14.15 Information Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.15 信息函数
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/information-functions.html](https://dev.mysql.com/doc/refman/8.0/en/information-functions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/information-functions.html](https://dev.mysql.com/doc/refman/8.0/en/information-functions.html)
- en: '**Table 14.20 Information Functions**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 14.20 信息函数**'
- en: '| Name | Description |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '| [`BENCHMARK()`](information-functions.html#function_benchmark) | Repeatedly
    execute an expression |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`BENCHMARK()`](information-functions.html#function_benchmark) | 反复执行一个表达式
    |'
- en: '| [`CHARSET()`](information-functions.html#function_charset) | Return the character
    set of the argument |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`CHARSET()`](information-functions.html#function_charset) | 返回参数的字符集 |'
- en: '| [`COERCIBILITY()`](information-functions.html#function_coercibility) | Return
    the collation coercibility value of the string argument |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`COERCIBILITY()`](information-functions.html#function_coercibility) | 返回字符串参数的排序强制性值
    |'
- en: '| [`COLLATION()`](information-functions.html#function_collation) | Return the
    collation of the string argument |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`COLLATION()`](information-functions.html#function_collation) | 返回字符串参数的排序规则
    |'
- en: '| [`CONNECTION_ID()`](information-functions.html#function_connection-id) |
    Return the connection ID (thread ID) for the connection |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`CONNECTION_ID()`](information-functions.html#function_connection-id) |
    返回连接的连接 ID（线程 ID） |'
- en: '| [`CURRENT_ROLE()`](information-functions.html#function_current-role) | Return
    the current active roles |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_ROLE()`](information-functions.html#function_current-role) | 返回当前活动角色
    |'
- en: '| [`CURRENT_USER()`, `CURRENT_USER`](information-functions.html#function_current-user)
    | The authenticated user name and host name |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_USER()`, `CURRENT_USER`](information-functions.html#function_current-user)
    | 认证用户的用户名和主机名 |'
- en: '| [`DATABASE()`](information-functions.html#function_database) | Return the
    default (current) database name |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`DATABASE()`](information-functions.html#function_database) | 返回默认（当前）数据库名称
    |'
- en: '| [`FOUND_ROWS()`](information-functions.html#function_found-rows) | For a
    SELECT with a LIMIT clause, the number of rows that would be returned were there
    no LIMIT clause |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`FOUND_ROWS()`](information-functions.html#function_found-rows) | 对于带有 LIMIT
    子句的 SELECT，如果没有 LIMIT 子句，将返回的行数 |'
- en: '| [`ICU_VERSION()`](information-functions.html#function_icu-version) | ICU
    library version |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`ICU_VERSION()`](information-functions.html#function_icu-version) | ICU
    库版本 |'
- en: '| [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    | Value of the AUTOINCREMENT column for the last INSERT |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    | 最后一次 INSERT 的 AUTOINCREMENT 列的值 |'
- en: '| [`ROLES_GRAPHML()`](information-functions.html#function_roles-graphml) |
    Return a GraphML document representing memory role subgraphs |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`ROLES_GRAPHML()`](information-functions.html#function_roles-graphml) |
    返回表示内存角色子图的 GraphML 文档 |'
- en: '| [`ROW_COUNT()`](information-functions.html#function_row-count) | The number
    of rows updated |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`ROW_COUNT()`](information-functions.html#function_row-count) | 更新的行数 |'
- en: '| [`SCHEMA()`](information-functions.html#function_schema) | Synonym for DATABASE()
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`SCHEMA()`](information-functions.html#function_schema) | DATABASE() 的同义词
    |'
- en: '| [`SESSION_USER()`](information-functions.html#function_session-user) | Synonym
    for USER() |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`SESSION_USER()`](information-functions.html#function_session-user) | USER()
    的同义词 |'
- en: '| [`SYSTEM_USER()`](information-functions.html#function_system-user) | Synonym
    for USER() |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`SYSTEM_USER()`](information-functions.html#function_system-user) | USER()
    的同义词 |'
- en: '| [`USER()`](information-functions.html#function_user) | The user name and
    host name provided by the client |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`USER()`](information-functions.html#function_user) | 客户端提供的用户名和主机名 |'
- en: '| [`VERSION()`](information-functions.html#function_version) | Return a string
    that indicates the MySQL server version |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`VERSION()`](information-functions.html#function_version) | 返回指示 MySQL 服务器版本的字符串
    |'
- en: '| Name | Description |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '[`BENCHMARK(*`count`*,*`expr`*)`](information-functions.html#function_benchmark)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`BENCHMARK(*`count`*,*`expr`*)`](information-functions.html#function_benchmark)'
- en: The [`BENCHMARK()`](information-functions.html#function_benchmark) function
    executes the expression *`expr`* repeatedly *`count`* times. It may be used to
    time how quickly MySQL processes the expression. The result value is `0`, or `NULL`
    for inappropriate arguments such as a `NULL` or negative repeat count.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`BENCHMARK()`](information-functions.html#function_benchmark) 函数重复执行表达式 *`expr`*
    *`count`* 次。它可用于计算 MySQL 处理表达式的速度。结果值为 `0`，对于不合适的参数（如 `NULL` 或负重复计数）为 `NULL`。'
- en: 'The intended use is from within the [**mysql**](mysql.html "6.5.1 mysql — The
    MySQL Command-Line Client") client, which reports query execution times:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 预期的用法是在[**mysql**](mysql.html "6.5.1 mysql — MySQL 命令行客户端")客户端内部，报告查询执行时间：
- en: '[PRE0]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The time reported is elapsed time on the client end, not CPU time on the server
    end. It is advisable to execute [`BENCHMARK()`](information-functions.html#function_benchmark)
    several times, and to interpret the result with regard to how heavily loaded the
    server machine is.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 报告的时间是客户端端的经过时间，而不是服务器端的CPU时间。建议多次执行[`BENCHMARK()`](information-functions.html#function_benchmark)，并根据服务器机器的负载情况解释结果。
- en: '[`BENCHMARK()`](information-functions.html#function_benchmark) is intended
    for measuring the runtime performance of scalar expressions, which has some significant
    implications for the way that you use it and interpret the results:'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`BENCHMARK()`](information-functions.html#function_benchmark)旨在衡量标量表达式的运行时性能，这对于您使用它和解释结果有一些重要影响：'
- en: Only scalar expressions can be used. Although the expression can be a subquery,
    it must return a single column and at most a single row. For example, [`BENCHMARK(10,
    (SELECT * FROM t))`](information-functions.html#function_benchmark) fails if the
    table `t` has more than one column or more than one row.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只能使用标量表达式。虽然表达式可以是子查询，但必须返回单列且最多一行。例如，如果表`t`有多于一列或多于一行，则[`BENCHMARK(10, (SELECT
    * FROM t))`](information-functions.html#function_benchmark)会失败。
- en: Executing a `SELECT *`expr`*` statement *`N`* times differs from executing `SELECT
    BENCHMARK(*`N`*, *`expr`*)` in terms of the amount of overhead involved. The two
    have very different execution profiles and you should not expect them to take
    the same amount of time. The former involves the parser, optimizer, table locking,
    and runtime evaluation *`N`* times each. The latter involves only runtime evaluation
    *`N`* times, and all the other components just once. Memory structures already
    allocated are reused, and runtime optimizations such as local caching of results
    already evaluated for aggregate functions can alter the results. Use of [`BENCHMARK()`](information-functions.html#function_benchmark)
    thus measures performance of the runtime component by giving more weight to that
    component and removing the “noise” introduced by the network, parser, optimizer,
    and so forth.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行`SELECT *`expr`*`语句*`N`*次与执行`SELECT BENCHMARK(*`N`*, *`expr`*)`在涉及的开销量方面有所不同。两者具有非常不同的执行概况，您不应该期望它们花费相同的时间。前者涉及解析器、优化器、表锁定和运行时评估各执行*N*次。后者仅涉及运行时评估*N*次，而所有其他组件仅执行一次。已分配的内存结构将被重用，并且运行时优化，例如对已为聚合函数评估的结果进行本地缓存，可能会改变结果。因此，使用[`BENCHMARK()`](information-functions.html#function_benchmark)通过给予该组件更多权重来衡量运行时组件的性能，并消除网络、解析器、优化器等引入的“噪音”。
- en: '[`CHARSET(*`str`*)`](information-functions.html#function_charset)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CHARSET(*`str`*)`](information-functions.html#function_charset)'
- en: Returns the character set of the string argument, or `NULL` if the argument
    is `NULL`.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回字符串参数的字符集，如果参数为`NULL`，则返回`NULL`。
- en: '[PRE1]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[`COERCIBILITY(*`str`*)`](information-functions.html#function_coercibility)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`COERCIBILITY(*`str`*)`](information-functions.html#function_coercibility)'
- en: Returns the collation coercibility value of the string argument.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回字符串参数的排序强制性值。
- en: '[PRE2]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The return values have the meanings shown in the following table. Lower values
    have higher precedence.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回值的含义如下表所示。较低的值具有更高的优先级。
- en: '| Coercibility | Meaning | Example |'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 强制性 | 含义 | 示例 |'
- en: '| `0` | Explicit collation | Value with `COLLATE` clause |'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `0` | 显式排序 | 带有`COLLATE`子句的值 |'
- en: '| `1` | No collation | Concatenation of strings with different collations |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `1` | 无排序 | 具有不同排序的字符串连接 |'
- en: '| `2` | Implicit collation | Column value, stored routine parameter or local
    variable |'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `2` | 隐式排序 | 列值、存储过程参数或本地变量 |'
- en: '| `3` | System constant | [`USER()`](information-functions.html#function_user)
    return value |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `3` | 系统常量 | [`USER()`](information-functions.html#function_user)返回值 |'
- en: '| `4` | Coercible | Literal string |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `4` | 可强制 | 字面字符串 |'
- en: '| `5` | Numeric | Numeric or temporal value |'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `5` | 数值 | 数值或时间值 |'
- en: '| `6` | Ignorable | `NULL` or an expression derived from `NULL` |'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `6` | 可忽略 | `NULL`或从`NULL`派生的表达式 |'
- en: For more information, see [Section 12.8.4, “Collation Coercibility in Expressions”](charset-collation-coercibility.html
    "12.8.4 Collation Coercibility in Expressions").
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第12.8.4节，“表达式中的排序强制性”](charset-collation-coercibility.html "12.8.4 表达式中的排序强制性")。
- en: '[`COLLATION(*`str`*)`](information-functions.html#function_collation)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`COLLATION(*`str`*)`](information-functions.html#function_collation)'
- en: Returns the collation of the string argument.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回字符串参数的排序。
- en: '[PRE3]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[`CONNECTION_ID()`](information-functions.html#function_connection-id)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CONNECTION_ID()`](information-functions.html#function_connection-id)'
- en: Returns the connection ID (thread ID) for the connection. Every connection has
    an ID that is unique among the set of currently connected clients.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回连接的连接ID（线程ID）。每个连接都有一个在当前连接的客户端集合中唯一的ID。
- en: The value returned by [`CONNECTION_ID()`](information-functions.html#function_connection-id)
    is the same type of value as displayed in the `ID` column of the Information Schema
    [`PROCESSLIST`](information-schema-processlist-table.html "28.3.23 The INFORMATION_SCHEMA
    PROCESSLIST Table") table, the `Id` column of [`SHOW PROCESSLIST`](show-processlist.html
    "15.7.7.29 SHOW PROCESSLIST Statement") output, and the `PROCESSLIST_ID` column
    of the Performance Schema [`threads`](performance-schema-threads-table.html "29.12.21.8 The
    threads Table") table.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CONNECTION_ID()`](information-functions.html#function_connection-id)返回的值与信息模式[`PROCESSLIST`](information-schema-processlist-table.html
    "28.3.23 The INFORMATION_SCHEMA PROCESSLIST Table")表的`ID`列、[`SHOW PROCESSLIST`](show-processlist.html
    "15.7.7.29 SHOW PROCESSLIST Statement")输出的`Id`列以及性能模式[`threads`](performance-schema-threads-table.html
    "29.12.21.8 The threads Table")表的`PROCESSLIST_ID`列中显示的值类型相同。'
- en: '[PRE4]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Warning
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: Changing the session value of the [`pseudo_thread_id`](server-system-variables.html#sysvar_pseudo_thread_id)
    system variable changes the value returned by the [`CONNECTION_ID()`](information-functions.html#function_connection-id)
    function.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改[`pseudo_thread_id`](server-system-variables.html#sysvar_pseudo_thread_id)系统变量的会话值会更改[`CONNECTION_ID()`](information-functions.html#function_connection-id)函数返回的值。
- en: '[`CURRENT_ROLE()`](information-functions.html#function_current-role)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CURRENT_ROLE()`](information-functions.html#function_current-role)'
- en: Returns a `utf8mb3` string containing the current active roles for the current
    session, separated by commas, or `NONE` if there are none. The value reflects
    the setting of the [`sql_quote_show_create`](server-system-variables.html#sysvar_sql_quote_show_create)
    system variable.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回一个包含当前会话中当前活动角色的`utf8mb3`字符串，用逗号分隔，如果没有则返回`NONE`。该值反映了[`sql_quote_show_create`](server-system-variables.html#sysvar_sql_quote_show_create)系统变量的设置。
- en: 'Suppose that an account is granted roles as follows:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设一个账户被授予以下角色：
- en: '[PRE5]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In sessions for `u1`, the initial [`CURRENT_ROLE()`](information-functions.html#function_current-role)
    value names the default account roles. Using [`SET ROLE`](set-role.html "15.7.1.11 SET
    ROLE Statement") changes that:'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在`u1`的会话中，初始[`CURRENT_ROLE()`](information-functions.html#function_current-role)值命名默认账户角色。使用[`SET
    ROLE`](set-role.html "15.7.1.11 SET ROLE Statement")更改该值：
- en: '[PRE6]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[`CURRENT_USER`](information-functions.html#function_current-user), [`CURRENT_USER()`](information-functions.html#function_current-user)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CURRENT_USER`](information-functions.html#function_current-user), [`CURRENT_USER()`](information-functions.html#function_current-user)'
- en: Returns the user name and host name combination for the MySQL account that the
    server used to authenticate the current client. This account determines your access
    privileges. The return value is a string in the `utf8mb3` character set.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回MySQL服务器用于验证当前客户端的用户名称和主机名组合的账户。此账户确定您的访问权限。返回值是`utf8mb3`字符集中的字符串。
- en: The value of [`CURRENT_USER()`](information-functions.html#function_current-user)
    can differ from the value of [`USER()`](information-functions.html#function_user).
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CURRENT_USER()`](information-functions.html#function_current-user)的值可能与[`USER()`](information-functions.html#function_user)的值不同。'
- en: '[PRE7]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The example illustrates that although the client specified a user name of `davida`
    (as indicated by the value of the [`USER()`](information-functions.html#function_user)
    function), the server authenticated the client using an anonymous user account
    (as seen by the empty user name part of the [`CURRENT_USER()`](information-functions.html#function_current-user)
    value). One way this might occur is that there is no account listed in the grant
    tables for `davida`.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该示例说明，尽管客户端指定了用户名为`davida`（如[`USER()`](information-functions.html#function_user)函数的值所示），但服务器却使用匿名用户账户对客户端进行了身份验证（如[`CURRENT_USER()`](information-functions.html#function_current-user)值的空用户部分所示）。这种情况可能发生的一种方式是在授权表中没有列出`davida`的账户。
- en: Within a stored program or view, [`CURRENT_USER()`](information-functions.html#function_current-user)
    returns the account for the user who defined the object (as given by its `DEFINER`
    value) unless defined with the `SQL SECURITY INVOKER` characteristic. In the latter
    case, [`CURRENT_USER()`](information-functions.html#function_current-user) returns
    the object's invoker.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在存储过程或视图中，[`CURRENT_USER()`](information-functions.html#function_current-user)返回定义对象的用户账户（由其`DEFINER`值给出），除非使用`SQL
    SECURITY INVOKER`特性定义。在后一种情况下，[`CURRENT_USER()`](information-functions.html#function_current-user)返回对象的调用者。
- en: Triggers and events have no option to define the `SQL SECURITY` characteristic,
    so for these objects, [`CURRENT_USER()`](information-functions.html#function_current-user)
    returns the account for the user who defined the object. To return the invoker,
    use [`USER()`](information-functions.html#function_user) or [`SESSION_USER()`](information-functions.html#function_session-user).
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 触发器和事件没有选项来定义`SQL SECURITY`特性，因此对于这些对象，[`CURRENT_USER()`](information-functions.html#function_current-user)返回定义对象的用户账户。要返回调用者，请使用[`USER()`](information-functions.html#function_user)或[`SESSION_USER()`](information-functions.html#function_session-user)。
- en: 'The following statements support use of the [`CURRENT_USER()`](information-functions.html#function_current-user)
    function to take the place of the name of (and, possibly, a host for) an affected
    user or a definer; in such cases, [`CURRENT_USER()`](information-functions.html#function_current-user)
    is expanded where and as needed:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下语句支持使用[`CURRENT_USER()`](information-functions.html#function_current-user)函数来代替受影响用户或定义者的名称（可能还有主机）；在这种情况下，[`CURRENT_USER()`](information-functions.html#function_current-user)会根据需要进行扩展：
- en: '[`DROP USER`](drop-user.html "15.7.1.5 DROP USER Statement")'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DROP USER`](drop-user.html "15.7.1.5 DROP USER语句")'
- en: '[`RENAME USER`](rename-user.html "15.7.1.7 RENAME USER Statement")'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`RENAME USER`](rename-user.html "15.7.1.7 RENAME USER语句")'
- en: '[`GRANT`](grant.html "15.7.1.6 GRANT Statement")'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`GRANT`](grant.html "15.7.1.6 GRANT语句")'
- en: '[`REVOKE`](revoke.html "15.7.1.8 REVOKE Statement")'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`REVOKE`](revoke.html "15.7.1.8 REVOKE语句")'
- en: '[`CREATE FUNCTION`](create-function.html "15.1.14 CREATE FUNCTION Statement")'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE FUNCTION`](create-function.html "15.1.14 CREATE FUNCTION语句")'
- en: '[`CREATE PROCEDURE`](create-procedure.html "15.1.17 CREATE PROCEDURE and CREATE
    FUNCTION Statements")'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE PROCEDURE`](create-procedure.html "15.1.17 CREATE PROCEDURE和CREATE
    FUNCTION语句")'
- en: '[`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE TRIGGER Statement")'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE TRIGGER语句")'
- en: '[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement")'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT语句")'
- en: '[`CREATE VIEW`](create-view.html "15.1.23 CREATE VIEW Statement")'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE VIEW`](create-view.html "15.1.23 CREATE VIEW语句")'
- en: '[`ALTER EVENT`](alter-event.html "15.1.3 ALTER EVENT Statement")'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ALTER EVENT`](alter-event.html "15.1.3 ALTER EVENT语句")'
- en: '[`ALTER VIEW`](alter-view.html "15.1.11 ALTER VIEW Statement")'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ALTER VIEW`](alter-view.html "15.1.11 ALTER VIEW语句")'
- en: '[`SET PASSWORD`](set-password.html "15.7.1.10 SET PASSWORD Statement")'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SET PASSWORD`](set-password.html "15.7.1.10 SET PASSWORD语句")'
- en: For information about the implications that this expansion of [`CURRENT_USER()`](information-functions.html#function_current-user)
    has for replication, see [Section 19.5.1.8, “Replication of CURRENT_USER()”](replication-features-current-user.html
    "19.5.1.8 Replication of CURRENT_USER()").
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于这种扩展[`CURRENT_USER()`](information-functions.html#function_current-user)的含义的信息，参见[Section 19.5.1.8,
    “CURRENT_USER()的复制”](replication-features-current-user.html "19.5.1.8 CURRENT_USER()的复制")。
- en: 'Beginning with MySQL 8.0.34, this function can be used for the default value
    of a [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types") or [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types") column, as shown in the following [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") statement:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.34开始，此函数可用于[`VARCHAR`](char.html "13.3.2 CHAR和VARCHAR类型")或[`TEXT`](blob.html
    "13.3.4 BLOB和TEXT类型")列的默认值，如下所示的[`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE语句")语句：
- en: '[PRE8]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[`DATABASE()`](information-functions.html#function_database)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DATABASE()`](information-functions.html#function_database)'
- en: Returns the default (current) database name as a string in the `utf8mb3` character
    set. If there is no default database, [`DATABASE()`](information-functions.html#function_database)
    returns `NULL`. Within a stored routine, the default database is the database
    that the routine is associated with, which is not necessarily the same as the
    database that is the default in the calling context.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回以`utf8mb3`字符集中的字符串形式的默认（当前）数据库名称。如果没有默认数据库，[`DATABASE()`](information-functions.html#function_database)返回`NULL`。在存储过程中，默认数据库是与存储过程关联的数据库，并不一定与调用上下文中的默认数据库相同。
- en: '[PRE9]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: If there is no default database, [`DATABASE()`](information-functions.html#function_database)
    returns `NULL`.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果没有默认数据库，[`DATABASE()`](information-functions.html#function_database)返回`NULL`。
- en: '[`FOUND_ROWS()`](information-functions.html#function_found-rows)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`FOUND_ROWS()`](information-functions.html#function_found-rows)'
- en: Note
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'The `SQL_CALC_FOUND_ROWS` query modifier and accompanying [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    function are deprecated as of MySQL 8.0.17; expect them to be removed in a future
    version of MySQL. As a replacement, considering executing your query with `LIMIT`,
    and then a second query with [`COUNT(*)`](aggregate-functions.html#function_count)
    and without `LIMIT` to determine whether there are additional rows. For example,
    instead of these queries:'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自MySQL 8.0.17起，`SQL_CALC_FOUND_ROWS`查询修饰符和相应的[`FOUND_ROWS()`](information-functions.html#function_found-rows)函数已被弃用；预计它们将在未来的MySQL版本中被移除。作为替代方案，考虑使用带有`LIMIT`的查询，然后再执行一个不带`LIMIT`但带有[`COUNT(*)`](aggregate-functions.html#function_count)的第二个查询，以确定是否有额外的行。例如，不要使用这些查询：
- en: '[PRE10]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Use these queries instead:'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改用以下查询：
- en: '[PRE11]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[`COUNT(*)`](aggregate-functions.html#function_count) is subject to certain
    optimizations. `SQL_CALC_FOUND_ROWS` causes some optimizations to be disabled.'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`COUNT(*)`](aggregate-functions.html#function_count)受到某些优化的影响。`SQL_CALC_FOUND_ROWS`会导致某些优化被禁用。'
- en: 'A [`SELECT`](select.html "15.2.13 SELECT Statement") statement may include
    a `LIMIT` clause to restrict the number of rows the server returns to the client.
    In some cases, it is desirable to know how many rows the statement would have
    returned without the `LIMIT`, but without running the statement again. To obtain
    this row count, include an `SQL_CALC_FOUND_ROWS` option in the [`SELECT`](select.html
    "15.2.13 SELECT Statement") statement, and then invoke [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    afterward:'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个[`SELECT`](select.html "15.2.13 SELECT Statement")语句可以包括一个`LIMIT`子句，以限制服务器返回给客户端的行数。在某些情况下，希望知道没有`LIMIT`时语句会返回多少行，但又不想再次运行该语句。要获取这个行数，需要在[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句中包含一个`SQL_CALC_FOUND_ROWS`选项，然后在之后调用[`FOUND_ROWS()`](information-functions.html#function_found-rows)：
- en: '[PRE12]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The second [`SELECT`](select.html "15.2.13 SELECT Statement") returns a number
    indicating how many rows the first [`SELECT`](select.html "15.2.13 SELECT Statement")
    would have returned had it been written without the `LIMIT` clause.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第二个[`SELECT`](select.html "15.2.13 SELECT Statement")返回一个数字，指示第一个不带`LIMIT`子句的[`SELECT`](select.html
    "15.2.13 SELECT Statement")将返回多少行。
- en: In the absence of the `SQL_CALC_FOUND_ROWS` option in the most recent successful
    [`SELECT`](select.html "15.2.13 SELECT Statement") statement, [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    returns the number of rows in the result set returned by that statement. If the
    statement includes a `LIMIT` clause, [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    returns the number of rows up to the limit. For example, [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    returns 10 or 60, respectively, if the statement includes `LIMIT 10` or `LIMIT
    50, 10`.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在最近成功的不带`SQL_CALC_FOUND_ROWS`选项的[`SELECT`](select.html "15.2.13 SELECT Statement")语句中，[`FOUND_ROWS()`](information-functions.html#function_found-rows)返回该语句返回的结果集中的行数。如果语句包含`LIMIT`子句，[`FOUND_ROWS()`](information-functions.html#function_found-rows)返回限制之前的行数。例如，如果语句包含`LIMIT
    10`或`LIMIT 50, 10`，则[`FOUND_ROWS()`](information-functions.html#function_found-rows)分别返回10或60。
- en: 'The row count available through [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    is transient and not intended to be available past the statement following the
    `SELECT SQL_CALC_FOUND_ROWS` statement. If you need to refer to the value later,
    save it:'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过[`FOUND_ROWS()`](information-functions.html#function_found-rows)获取的行数是瞬时的，不打算在`SELECT
    SQL_CALC_FOUND_ROWS`语句后的语句中使用。如果需要稍后引用该值，请保存它：
- en: '[PRE13]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If you are using `SELECT SQL_CALC_FOUND_ROWS`, MySQL must calculate how many
    rows are in the full result set. However, this is faster than running the query
    again without `LIMIT`, because the result set need not be sent to the client.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你使用`SELECT SQL_CALC_FOUND_ROWS`，MySQL必须计算完整结果集中有多少行。然而，这比再次运行不带`LIMIT`的查询要快，因为不需要将结果集发送给客户端。
- en: '`SQL_CALC_FOUND_ROWS` and [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    can be useful in situations when you want to restrict the number of rows that
    a query returns, but also determine the number of rows in the full result set
    without running the query again. An example is a Web script that presents a paged
    display containing links to the pages that show other sections of a search result.
    Using [`FOUND_ROWS()`](information-functions.html#function_found-rows) enables
    you to determine how many other pages are needed for the rest of the result.'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`SQL_CALC_FOUND_ROWS` 和 [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    在需要限制查询返回行数的情况下非常有用，同时又要确定完整结果集中的行数而不需要重新运行查询时。例如，一个 Web 脚本显示分页显示，包含指向显示搜索结果其他部分页面的链接。使用
    [`FOUND_ROWS()`](information-functions.html#function_found-rows) 可以帮助确定还需要多少其他页面来显示剩余的结果。'
- en: The use of `SQL_CALC_FOUND_ROWS` and [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    is more complex for [`UNION`](union.html "15.2.18 UNION Clause") statements than
    for simple [`SELECT`](select.html "15.2.13 SELECT Statement") statements, because
    `LIMIT` may occur at multiple places in a [`UNION`](union.html "15.2.18 UNION
    Clause"). It may be applied to individual [`SELECT`](select.html "15.2.13 SELECT
    Statement") statements in the [`UNION`](union.html "15.2.18 UNION Clause"), or
    global to the [`UNION`](union.html "15.2.18 UNION Clause") result as a whole.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 [`UNION`](union.html "15.2.18 UNION Clause") 语句，使用 `SQL_CALC_FOUND_ROWS`
    和 [`FOUND_ROWS()`](information-functions.html#function_found-rows) 比简单的 [`SELECT`](select.html
    "15.2.13 SELECT Statement") 语句更复杂，因为 `LIMIT` 可能出现在 [`UNION`](union.html "15.2.18 UNION
    Clause") 中的多个位置。它可以应用于 [`UNION`](union.html "15.2.18 UNION Clause") 中的各个 [`SELECT`](select.html
    "15.2.13 SELECT Statement") 语句，或者全局应用于整个 [`UNION`](union.html "15.2.18 UNION Clause")
    结果。
- en: 'The intent of `SQL_CALC_FOUND_ROWS` for [`UNION`](union.html "15.2.18 UNION
    Clause") is that it should return the row count that would be returned without
    a global `LIMIT`. The conditions for use of `SQL_CALC_FOUND_ROWS` with [`UNION`](union.html
    "15.2.18 UNION Clause") are:'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`SQL_CALC_FOUND_ROWS` 用于 [`UNION`](union.html "15.2.18 UNION Clause") 的目的是应返回在没有全局
    `LIMIT` 的情况下将返回的行数。使用 `SQL_CALC_FOUND_ROWS` 与 [`UNION`](union.html "15.2.18 UNION
    Clause") 的条件是：'
- en: The `SQL_CALC_FOUND_ROWS` keyword must appear in the first [`SELECT`](select.html
    "15.2.13 SELECT Statement") of the [`UNION`](union.html "15.2.18 UNION Clause").
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SQL_CALC_FOUND_ROWS` 关键字必须出现在 [`UNION`](union.html "15.2.18 UNION Clause")
    的第一个 [`SELECT`](select.html "15.2.13 SELECT Statement") 中。'
- en: The value of [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    is exact only if [`UNION ALL`](union.html "15.2.18 UNION Clause") is used. If
    [`UNION`](union.html "15.2.18 UNION Clause") without `ALL` is used, duplicate
    removal occurs and the value of [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    is only approximate.
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`FOUND_ROWS()`](information-functions.html#function_found-rows) 的值仅在使用 [`UNION
    ALL`](union.html "15.2.18 UNION Clause") 时是精确的。如果使用不带 `ALL` 的 [`UNION`](union.html
    "15.2.18 UNION Clause")，会发生重复移除，并且 [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    的值只是近似值。'
- en: If no `LIMIT` is present in the [`UNION`](union.html "15.2.18 UNION Clause"),
    `SQL_CALC_FOUND_ROWS` is ignored and returns the number of rows in the temporary
    table that is created to process the [`UNION`](union.html "15.2.18 UNION Clause").
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 [`UNION`](union.html "15.2.18 UNION Clause") 中没有 `LIMIT`，则会忽略 `SQL_CALC_FOUND_ROWS`
    并返回用于处理 [`UNION`](union.html "15.2.18 UNION Clause") 的临时表中的行数。
- en: Beyond the cases described here, the behavior of [`FOUND_ROWS()`](information-functions.html#function_found-rows)
    is undefined (for example, its value following a [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement that fails with an error).
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了这里描述的情况外，[`FOUND_ROWS()`](information-functions.html#function_found-rows)
    的行为是未定义的（例如，在出现错误的 [`SELECT`](select.html "15.2.13 SELECT Statement") 语句后其值是多少）。
- en: Important
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: '[`FOUND_ROWS()`](information-functions.html#function_found-rows) is not replicated
    reliably using statement-based replication. This function is automatically replicated
    using row-based replication.'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用基于语句的复制时，[`FOUND_ROWS()`](information-functions.html#function_found-rows)
    无法可靠地复制。此函数会在基于行的复制中自动复制。
- en: '[`ICU_VERSION()`](information-functions.html#function_icu-version)'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ICU_VERSION()`](information-functions.html#function_icu-version)'
- en: The version of the International Components for Unicode (ICU) library used to
    support regular expression operations (see [Section 14.8.2, “Regular Expressions”](regexp.html
    "14.8.2 Regular Expressions")). This function is primarily intended for use in
    test cases.
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于支持正则表达式操作的国际组件库（ICU）的版本（参见 [Section 14.8.2, “Regular Expressions”](regexp.html
    "14.8.2 Regular Expressions")）。此函数主要用于测试案例。
- en: '[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id), [`LAST_INSERT_ID(*`expr`*)`](information-functions.html#function_last-insert-id)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id), [`LAST_INSERT_ID(*`expr`*)`](information-functions.html#function_last-insert-id)'
- en: With no argument, [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    returns a `BIGINT UNSIGNED` (64-bit) value representing the first automatically
    generated value successfully inserted for an `AUTO_INCREMENT` column as a result
    of the most recently executed [`INSERT`](insert.html "15.2.7 INSERT Statement")
    statement. The value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    remains unchanged if no rows are successfully inserted.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 没有参数时，[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    返回一个`BIGINT UNSIGNED`（64位）值，表示作为最近执行的[`INSERT`](insert.html "15.2.7 INSERT Statement")语句的结果成功插入的第一个自动生成值，用于`AUTO_INCREMENT`列。如果没有成功插入行，则[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的值保持不变。
- en: With an argument, [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    returns an unsigned integer, or `NULL` if the argument is `NULL`.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有参数时，[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    返回一个无符号整数，如果参数为`NULL`，则返回`NULL`。
- en: 'For example, after inserting a row that generates an `AUTO_INCREMENT` value,
    you can get the value like this:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，在插入生成`AUTO_INCREMENT`值的行之后，您可以像这样获取该值：
- en: '[PRE14]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The currently executing statement does not affect the value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id).
    Suppose that you generate an `AUTO_INCREMENT` value with one statement, and then
    refer to [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    in a multiple-row [`INSERT`](insert.html "15.2.7 INSERT Statement") statement
    that inserts rows into a table with its own `AUTO_INCREMENT` column. The value
    of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id) remains
    stable in the second statement; its value for the second and later rows is not
    affected by the earlier row insertions. (You should be aware that, if you mix
    references to [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    and [`LAST_INSERT_ID(*`expr`*)`](information-functions.html#function_last-insert-id),
    the effect is undefined.)
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前执行的语句不会影响[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的值。假设您使用一个语句生成`AUTO_INCREMENT`值，然后在一个多行[`INSERT`](insert.html
    "15.2.7 INSERT Statement")语句中引用[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)，该语句将行插入到具有自己的`AUTO_INCREMENT`列的表中。[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的值在第二个语句中保持稳定；其值对第二行及后续行不受先前行插入的影响。（您应该注意，如果混合引用[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)和[`LAST_INSERT_ID(*`expr`*)`](information-functions.html#function_last-insert-id)，效果是未定义的。）
- en: If the previous statement returned an error, the value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    is undefined. For transactional tables, if the statement is rolled back due to
    an error, the value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    is left undefined. For manual [`ROLLBACK`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements"), the value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    is not restored to that before the transaction; it remains as it was at the point
    of the [`ROLLBACK`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK
    Statements").
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果前一个语句返回错误，则[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的值是未定义的。对于事务表，如果由于错误而回滚语句，则[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的值将保持未定义。对于手动[`ROLLBACK`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")，[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的值不会恢复到事务之前的值；它将保持在[`ROLLBACK`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")点时的值。
- en: 'Within the body of a stored routine (procedure or function) or a trigger, the
    value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    changes the same way as for statements executed outside the body of these kinds
    of objects. The effect of a stored routine or trigger upon the value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    that is seen by following statements depends on the kind of routine:'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在存储过程（procedure）或触发器的主体内，[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    的值与在这些对象的主体外执行语句时的方式相同。存储过程或触发器对后续语句看到的[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的值的影响取决于存储过程的类型：
- en: If a stored procedure executes statements that change the value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id),
    the changed value is seen by statements that follow the procedure call.
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果存储过程执行改变[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)值的语句，那么这个改变的值会被调用存储过程后的语句所看到。
- en: For stored functions and triggers that change the value, the value is restored
    when the function or trigger ends, so statements coming after it do not see a
    changed value.
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于改变值的存储函数和触发器，在函数或触发器结束时值会被恢复，因此在其后的语句不会看到改变的值。
- en: The ID that was generated is maintained in the server on a *per-connection basis*.
    This means that the value returned by the function to a given client is the first
    `AUTO_INCREMENT` value generated for most recent statement affecting an `AUTO_INCREMENT`
    column *by that client*. This value cannot be affected by other clients, even
    if they generate `AUTO_INCREMENT` values of their own. This behavior ensures that
    each client can retrieve its own ID without concern for the activity of other
    clients, and without the need for locks or transactions.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成的ID在服务器上以*每个连接为基础*进行维护。这意味着函数返回给特定客户端的值是该客户端最近影响`AUTO_INCREMENT`列的大多数最新语句生成的第一个`AUTO_INCREMENT`值。即使其他客户端生成了自己的`AUTO_INCREMENT`值，这个值也不会受到影响。这种行为确保每个客户端可以检索自己的ID，而不必担心其他客户端的活动，也不需要锁定或事务。
- en: The value of [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    is not changed if you set the `AUTO_INCREMENT` column of a row to a non-“magic”
    value (that is, a value that is not `NULL` and not `0`).
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果将行的`AUTO_INCREMENT`列设置为非“魔术”值（即不是`NULL`且不是`0`），则[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的值不会改变。
- en: Important
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: If you insert multiple rows using a single [`INSERT`](insert.html "15.2.7 INSERT
    Statement") statement, [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    returns the value generated for the *first* inserted row *only*. The reason for
    this is to make it possible to reproduce easily the same [`INSERT`](insert.html
    "15.2.7 INSERT Statement") statement against some other server.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果使用单个[`INSERT`](insert.html "15.2.7 INSERT语句")语句插入多行，[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)仅返回*第一*插入行生成的值。这样做的原因是为了能够轻松地在其他服务器上重现相同的[`INSERT`](insert.html
    "15.2.7 INSERT语句")语句。
- en: 'For example:'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE15]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Although the second [`INSERT`](insert.html "15.2.7 INSERT Statement") statement
    inserted three new rows into `t`, the ID generated for the first of these rows
    was `2`, and it is this value that is returned by [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    for the following [`SELECT`](select.html "15.2.13 SELECT Statement") statement.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管第二个[`INSERT`](insert.html "15.2.7 INSERT语句")语句向`t`插入了三行新记录，但为这些行中的第一行生成的ID是`2`，并且这个值会被后续的[`SELECT`](select.html
    "15.2.13 SELECT语句")语句中的[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)返回。
- en: 'If you use [`INSERT IGNORE`](insert.html "15.2.7 INSERT Statement") and the
    row is ignored, the [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    remains unchanged from the current value (or 0 is returned if the connection has
    not yet performed a successful `INSERT`) and, for non-transactional tables, the
    `AUTO_INCREMENT` counter is not incremented. For `InnoDB` tables, the `AUTO_INCREMENT`
    counter is incremented if [`innodb_autoinc_lock_mode`](innodb-parameters.html#sysvar_innodb_autoinc_lock_mode)
    is set to `1` or `2`, as demonstrated in the following example:'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果使用[`INSERT IGNORE`](insert.html "15.2.7 INSERT语句")并且行被忽略，[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)保持不变（或者如果连接尚未执行成功的`INSERT`，则返回0），对于非事务表，`AUTO_INCREMENT`计数器不会增加。对于`InnoDB`表，如果[`innodb_autoinc_lock_mode`](innodb-parameters.html#sysvar_innodb_autoinc_lock_mode)设置为`1`或`2`，`AUTO_INCREMENT`计数器会增加，如下例所示：
- en: '[PRE16]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: For more information, see [Section 17.6.1.6, “AUTO_INCREMENT Handling in InnoDB”](innodb-auto-increment-handling.html
    "17.6.1.6 AUTO_INCREMENT Handling in InnoDB").
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[Section 17.6.1.6, “InnoDB中的AUTO_INCREMENT处理”](innodb-auto-increment-handling.html
    "17.6.1.6 InnoDB中的AUTO_INCREMENT处理")。
- en: 'If *`expr`* is given as an argument to [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id),
    the value of the argument is returned by the function and is remembered as the
    next value to be returned by [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id).
    This can be used to simulate sequences:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果将*`expr`*作为参数传递给[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)，则函数将返回参数的值，并记住作为下一个由[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)返回的值。这可以用来模拟序列：
- en: 'Create a table to hold the sequence counter and initialize it:'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个表来保存序列计数器并初始化它：
- en: '[PRE17]'
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Use the table to generate sequence numbers like this:'
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用表来生成类似这样的序列号：
- en: '[PRE18]'
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement increments
    the sequence counter and causes the next call to [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    to return the updated value. The [`SELECT`](select.html "15.2.13 SELECT Statement")
    statement retrieves that value. The [`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html)
    C API function can also be used to get the value. See [mysql_insert_id()](/doc/c-api/8.0/en/mysql-insert-id.html).
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句递增序列计数器，并导致下一次调用[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)返回更新后的值。[`SELECT`](select.html
    "15.2.13 SELECT Statement")语句检索该值。[`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html)
    C API函数也可用于获取该值。请参阅[mysql_insert_id()](/doc/c-api/8.0/en/mysql-insert-id.html)。'
- en: You can generate sequences without calling [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id),
    but the utility of using the function this way is that the ID value is maintained
    in the server as the last automatically generated value. It is multi-user safe
    because multiple clients can issue the [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statement and get their own sequence value with the [`SELECT`](select.html
    "15.2.13 SELECT Statement") statement (or [`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html)),
    without affecting or being affected by other clients that generate their own sequence
    values.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以在不调用[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)的情况下生成序列，但以这种方式使用函数的实用性在于ID值在服务器中作为最后一个自动生成的值保持。它是多用户安全的，因为多个客户端可以发出[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")语句并使用[`SELECT`](select.html "15.2.13 SELECT Statement")语句（或[`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html)）获取自己的序列值，而不会影响或受其他生成自己序列值的客户端的影响。
- en: Note that [`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html) is only
    updated after [`INSERT`](insert.html "15.2.7 INSERT Statement") and [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") statements, so you cannot use the C API function to
    retrieve the value for [`LAST_INSERT_ID(*`expr`*)`](information-functions.html#function_last-insert-id)
    after executing other SQL statements like [`SELECT`](select.html "15.2.13 SELECT
    Statement") or [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment").
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，只有在执行[`INSERT`](insert.html "15.2.7 INSERT Statement")和[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")语句后，[`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html)才会更新，因此您不能在执行其他SQL语句（如[`SELECT`](select.html
    "15.2.13 SELECT Statement")或[`SET`](set-variable.html "15.7.6.1 SET Syntax for
    Variable Assignment")）后使用C API函数检索[`LAST_INSERT_ID(*`expr`*)`](information-functions.html#function_last-insert-id)的值。
- en: '[`ROLES_GRAPHML()`](information-functions.html#function_roles-graphml)'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ROLES_GRAPHML()`](information-functions.html#function_roles-graphml)'
- en: 'Returns a `utf8mb3` string containing a GraphML document representing memory
    role subgraphs. The [`ROLE_ADMIN`](privileges-provided.html#priv_role-admin) privilege
    (or the deprecated [`SUPER`](privileges-provided.html#priv_super) privilege) is
    required to see content in the `<graphml>` element. Otherwise, the result shows
    only an empty element:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回一个包含表示内存角色子图的GraphML文档的`utf8mb3`字符串。需要[`ROLE_ADMIN`](privileges-provided.html#priv_role-admin)权限（或已弃用的[`SUPER`](privileges-provided.html#priv_super)权限）才能查看`<graphml>`元素中的内容。否则，结果只显示一个空元素：
- en: '[PRE19]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[`ROW_COUNT()`](information-functions.html#function_row-count)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ROW_COUNT()`](information-functions.html#function_row-count)'
- en: '`ROW_COUNT()` returns a value as follows:'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`ROW_COUNT()`返回如下值：'
- en: 'DDL statements: 0\. This applies to statements such as [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") or [`DROP TABLE`](drop-table.html "15.1.32 DROP
    TABLE Statement").'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DDL语句：0。这适用于诸如[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")或[`DROP
    TABLE`](drop-table.html "15.1.32 DROP TABLE Statement")之类的语句。
- en: 'DML statements other than [`SELECT`](select.html "15.2.13 SELECT Statement"):
    The number of affected rows. This applies to statements such as [`UPDATE`](update.html
    "15.2.17 UPDATE Statement"), [`INSERT`](insert.html "15.2.7 INSERT Statement"),
    or [`DELETE`](delete.html "15.2.2 DELETE Statement") (as before), but now also
    to statements such as [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    and [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement").'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了 [`SELECT`](select.html "15.2.13 SELECT Statement") 之外的 DML 语句：受影响的行数。这适用于诸如
    [`UPDATE`](update.html "15.2.17 UPDATE Statement")、[`INSERT`](insert.html "15.2.7 INSERT
    Statement") 或 [`DELETE`](delete.html "15.2.2 DELETE Statement")（如前所述）的语句，但现在也适用于诸如
    [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") 和 [`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement") 的语句。
- en: '[`SELECT`](select.html "15.2.13 SELECT Statement"): -1 if the statement returns
    a result set, or the number of rows “affected” if it does not. For example, for
    `SELECT * FROM t1`, [`ROW_COUNT()`](information-functions.html#function_row-count)
    returns -1\. For `SELECT * FROM t1 INTO OUTFILE ''*`file_name`*''`, [`ROW_COUNT()`](information-functions.html#function_row-count)
    returns the number of rows written to the file.'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SELECT`](select.html "15.2.13 SELECT Statement")：如果语句返回结果集，则返回 -1，否则返回“受影响”的行数。例如，对于
    `SELECT * FROM t1`，[`ROW_COUNT()`](information-functions.html#function_row-count)
    返回 -1。对于 `SELECT * FROM t1 INTO OUTFILE ''*`file_name`*''`，[`ROW_COUNT()`](information-functions.html#function_row-count)
    返回写入文件的行数。'
- en: '[`SIGNAL`](signal.html "15.6.7.5 SIGNAL Statement") statements: 0.'
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SIGNAL`](signal.html "15.6.7.5 SIGNAL Statement") 语句：0。'
- en: For [`UPDATE`](update.html "15.2.17 UPDATE Statement") statements, the affected-rows
    value by default is the number of rows actually changed. If you specify the `CLIENT_FOUND_ROWS`
    flag to [`mysql_real_connect()`](/doc/c-api/8.0/en/mysql-real-connect.html) when
    connecting to [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server"), the
    affected-rows value is the number of rows “found”; that is, matched by the `WHERE`
    clause.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 [`UPDATE`](update.html "15.2.17 UPDATE Statement") 语句，默认情况下受影响的行数是实际更改的行数。如果在连接到
    [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") 时使用 `CLIENT_FOUND_ROWS`
    标志到 [`mysql_real_connect()`](/doc/c-api/8.0/en/mysql-real-connect.html)，受影响的行数是“找到”的行数；也就是，被
    `WHERE` 子句匹配的行数。
- en: For [`REPLACE`](replace.html "15.2.12 REPLACE Statement") statements, the affected-rows
    value is 2 if the new row replaced an old row, because in this case, one row was
    inserted after the duplicate was deleted.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 [`REPLACE`](replace.html "15.2.12 REPLACE Statement") 语句，如果新行替换了旧行，则受影响的行数为
    2，因为在这种情况下，删除重复项后插入了一行。
- en: For [`INSERT ... ON DUPLICATE KEY UPDATE`](insert-on-duplicate.html "15.2.7.2 INSERT
    ... ON DUPLICATE KEY UPDATE Statement") statements, the affected-rows value per
    row is 1 if the row is inserted as a new row, 2 if an existing row is updated,
    and 0 if an existing row is set to its current values. If you specify the `CLIENT_FOUND_ROWS`
    flag, the affected-rows value is 1 (not 0) if an existing row is set to its current
    values.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 [`INSERT ... ON DUPLICATE KEY UPDATE`](insert-on-duplicate.html "15.2.7.2 INSERT
    ... ON DUPLICATE KEY UPDATE Statement") 语句，每行的受影响行数为 1（如果将行插入为新行）、2（如果更新现有行）或
    0（如果将现有行设置为当前值）。如果指定了 `CLIENT_FOUND_ROWS` 标志，则如果将现有行设置为当前值，则受影响的行数为 1（而不是 0）。
- en: The [`ROW_COUNT()`](information-functions.html#function_row-count) value is
    similar to the value from the [`mysql_affected_rows()`](/doc/c-api/8.0/en/mysql-affected-rows.html)
    C API function and the row count that the [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") client displays following statement execution.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`ROW_COUNT()`](information-functions.html#function_row-count) 的值类似于 [`mysql_affected_rows()`](/doc/c-api/8.0/en/mysql-affected-rows.html)
    C API 函数的值以及 [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    客户端在语句执行后显示的行数。'
- en: '[PRE20]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Important
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: '[`ROW_COUNT()`](information-functions.html#function_row-count) is not replicated
    reliably using statement-based replication. This function is automatically replicated
    using row-based replication.'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`ROW_COUNT()`](information-functions.html#function_row-count) 在基于语句的复制中无法可靠地复制。此函数会自动使用基于行的复制进行复制。'
- en: '[`SCHEMA()`](information-functions.html#function_schema)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SCHEMA()`](information-functions.html#function_schema)'
- en: This function is a synonym for [`DATABASE()`](information-functions.html#function_database).
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数是 [`DATABASE()`](information-functions.html#function_database) 的同义词。
- en: '[`SESSION_USER()`](information-functions.html#function_session-user)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SESSION_USER()`](information-functions.html#function_session-user)'
- en: '[`SESSION_USER()`](information-functions.html#function_session-user) is a synonym
    for [`USER()`](information-functions.html#function_user).'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`SESSION_USER()`](information-functions.html#function_session-user) 是 [`USER()`](information-functions.html#function_user)
    的同义词。'
- en: 'Beginning with MySQL 8.0.34, like [`USER()`](information-functions.html#function_user),
    this function can be used for the default value of a [`VARCHAR`](char.html "13.3.2 The
    CHAR and VARCHAR Types") or [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types")
    column, as shown in the following [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") statement:'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.34开始，类似于[`USER()`](information-functions.html#function_user)，这个函数可以用作[`VARCHAR`](char.html
    "13.3.2 CHAR和VARCHAR类型")或[`TEXT`](blob.html "13.3.4 BLOB和TEXT类型")列的默认值，如下所示的[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE语句")语句：
- en: '[PRE21]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[`SYSTEM_USER()`](information-functions.html#function_system-user)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SYSTEM_USER()`](information-functions.html#function_system-user)'
- en: '[`SYSTEM_USER()`](information-functions.html#function_system-user) is a synonym
    for [`USER()`](information-functions.html#function_user).'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`SYSTEM_USER()`](information-functions.html#function_system-user)是[`USER()`](information-functions.html#function_user)的同义词。'
- en: Note
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The [`SYSTEM_USER()`](information-functions.html#function_system-user) function
    is distinct from the [`SYSTEM_USER`](privileges-provided.html#priv_system-user)
    privilege. The former returns the current MySQL account name. The latter distinguishes
    the system user and regular user account categories (see [Section 8.2.11, “Account
    Categories”](account-categories.html "8.2.11 Account Categories")).
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`SYSTEM_USER()`](information-functions.html#function_system-user)函数与[`SYSTEM_USER`](privileges-provided.html#priv_system-user)权限是不同的。前者返回当前的MySQL账户名。后者区分系统用户和普通用户账户类别（参见[第8.2.11节，“账户类别”](account-categories.html
    "8.2.11 账户类别")）。'
- en: 'Beginning with MySQL 8.0.34, like [`USER()`](information-functions.html#function_user),
    this function can be used for the default value of a [`VARCHAR`](char.html "13.3.2 The
    CHAR and VARCHAR Types") or [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types")
    column, as shown in the following [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") statement:'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.34开始，类似于[`USER()`](information-functions.html#function_user)，这个函数可以用作[`VARCHAR`](char.html
    "13.3.2 CHAR和VARCHAR类型")或[`TEXT`](blob.html "13.3.4 BLOB和TEXT类型")列的默认值，如下所示的[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE语句")语句：
- en: '[PRE22]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[`USER()`](information-functions.html#function_user)'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`USER()`](information-functions.html#function_user)'
- en: Returns the current MySQL user name and host name as a string in the `utf8mb3`
    character set.
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回当前的MySQL用户名和主机名作为一个字符串，使用`utf8mb3`字符集。
- en: '[PRE23]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The value indicates the user name you specified when connecting to the server,
    and the client host from which you connected. The value can be different from
    that of [`CURRENT_USER()`](information-functions.html#function_current-user).
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该值指示您连接到服务器时指定的用户名，以及您连接的客户端主机。该值可能与[`CURRENT_USER()`](information-functions.html#function_current-user)的值不同。
- en: 'Beginning with MySQL 8.0.34, this function can be used for the default value
    of a [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types") or [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types") column, as shown in the following [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") statement:'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.34开始，类似于[`USER()`](information-functions.html#function_user)，这个函数可以用作[`VARCHAR`](char.html
    "13.3.2 CHAR和VARCHAR类型")或[`TEXT`](blob.html "13.3.4 BLOB和TEXT类型")列的默认值，如下所示的[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE语句")语句：
- en: '[PRE24]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[`VERSION()`](information-functions.html#function_version)'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`VERSION()`](information-functions.html#function_version)'
- en: Returns a string that indicates the MySQL server version. The string uses the
    `utf8mb3` character set. The value might have a suffix in addition to the version
    number. See the description of the [`version`](server-system-variables.html#sysvar_version)
    system variable in [Section 7.1.8, “Server System Variables”](server-system-variables.html
    "7.1.8 Server System Variables").
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回一个指示MySQL服务器版本的字符串。该字符串使用`utf8mb3`字符集。该值可能除了版本号外还有后缀。请参阅[第7.1.8节，“服务器系统变量”](server-system-variables.html
    "7.1.8 服务器系统变量")中的[`version`](server-system-variables.html#sysvar_version)系统变量的描述。
- en: This function is unsafe for statement-based replication. A warning is logged
    if you use this function when [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is set to `STATEMENT`.
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数在基于语句的复制中是不安全的。如果在[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)设置为`STATEMENT`时使用此函数，将记录警告。
- en: '[PRE25]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
