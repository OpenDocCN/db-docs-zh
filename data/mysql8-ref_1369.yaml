- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html](https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html](https://dev.mysql.com/doc/refman/8.0/en/replication-options-replica.html)
- en: 19.1.6.3 Replica Server Options and Variables
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.1.6.3 副本服务器选项和变量
- en: 'This section explains the server options and system variables that apply to
    replica servers and contains the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了适用于副本服务器的服务器选项和系统变量，包括以下内容：
- en: '[Startup Options for Replica Servers](replication-options-replica.html#replication-optvars-slaves
    "Startup Options for Replica Servers")'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[副本服务器的启动选项](replication-options-replica.html#replication-optvars-slaves "副本服务器的启动选项")'
- en: '[System Variables Used on Replica Servers](replication-options-replica.html#replication-sysvars-slaves
    "System Variables Used on Replica Servers")'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[副本服务器上使用的系统变量](replication-options-replica.html#replication-sysvars-slaves
    "副本服务器上使用的系统变量")'
- en: Specify the options either on the [command line](command-line-options.html "6.2.2.1 Using
    Options on the Command Line") or in an [option file](option-files.html "6.2.2.2 Using
    Option Files"). Many of the options can be set while the server is running by
    using the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE
    REPLICATION SOURCE TO Statement") statement (from MySQL 8.0.23) or [`CHANGE MASTER
    TO`](change-master-to.html "15.4.2.1 CHANGE MASTER TO Statement") statement (before
    MySQL 8.0.23). Specify system variable values using [`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在[命令行](command-line-options.html "6.2.2.1 Using Options on the Command Line")上或在[选项文件](option-files.html
    "6.2.2.2 Using Option Files")中指定选项。许多选项可以在服务器运行时通过使用[`CHANGE REPLICATION SOURCE
    TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION SOURCE TO
    Statement")语句（从MySQL 8.0.23开始）或[`CHANGE MASTER TO`](change-master-to.html "15.4.2.1 CHANGE
    MASTER TO Statement")语句（在MySQL 8.0.23之前）进行设置。使用[`SET`](set-variable.html "15.7.6.1 SET
    Syntax for Variable Assignment")语法指定系统变量值。
- en: '**Server ID. ** On the source and each replica, you must set the [`server_id`](replication-options.html#sysvar_server_id)
    system variable to establish a unique replication ID in the range from 1 to 2^(32)
    − 1\. “Unique” means that each ID must be different from every other ID in use
    by any other source or replica in the replication topology. Example `my.cnf` file:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务器ID。** 在源和每个副本上，您必须设置[`server_id`](replication-options.html#sysvar_server_id)系统变量以建立范围从1到2^(32)
    − 1的唯一复制ID。 “唯一”意味着每个ID必须与复制拓扑中任何其他源或副本正在使用的任何其他ID不同。示例`my.cnf`文件：'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Startup Options for Replica Servers
  id: totrans-8
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 副本服务器的启动选项
- en: This section explains startup options for controlling replica servers. Many
    of these options can be set while the server is running by using the [`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement") statement (from MySQL 8.0.23) or [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement") statement (before MySQL 8.0.23). Others,
    such as the `--replicate-*` options, can be set only when the replica server starts.
    Replication-related system variables are discussed later in this section.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了控制副本服务器启动选项的内容。其中许多选项可以在服务器运行时通过使用[`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement")语句（从MySQL 8.0.23开始）或[`CHANGE
    MASTER TO`](change-master-to.html "15.4.2.1 CHANGE MASTER TO Statement")语句（在MySQL
    8.0.23之前）进行设置。其他选项，如`--replicate-*`选项，只能在副本服务器启动时设置。有关复制相关的系统变量将在本节后面讨论。
- en: '[`--master-info-file=*`file_name`*`](replication-options-replica.html#option_mysqld_master-info-file)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--master-info-file=*`file_name`*`](replication-options-replica.html#option_mysqld_master-info-file)'
- en: '| Command-Line Format | `--master-info-file=file_name` |'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--master-info-file=file_name` |'
- en: '| Deprecated | 8.0.18 |'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.18 |'
- en: '| Type | File name |'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: '| Default Value | `master.info` |'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `master.info` |'
- en: The use of this option is now deprecated. It was used to set the file name for
    the replica's connection metadata repository if [`master_info_repository=FILE`](replication-options-replica.html#sysvar_master_info_repository)
    was set. [`--master-info-file`](replication-options-replica.html#option_mysqld_master-info-file)
    and the use of the [`master_info_repository`](replication-options-replica.html#sysvar_master_info_repository)
    system variable are deprecated because the use of a file for the connection metadata
    repository has been superseded by crash-safe tables. For information about the
    connection metadata repository, see [Section 19.2.4.2, “Replication Metadata Repositories”](replica-logs-status.html
    "19.2.4.2 Replication Metadata Repositories").
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项的使用现已不推荐。如果设置了[`master_info_repository=FILE`](replication-options-replica.html#sysvar_master_info_repository)，则用于设置复制品连接元数据存储库的文件名。[`--master-info-file`](replication-options-replica.html#option_mysqld_master-info-file)和[`master_info_repository`](replication-options-replica.html#sysvar_master_info_repository)系统变量的使用已不推荐，因为使用文件作为连接元数据存储库已被崩溃安全表取代。有关连接元数据存储库的信息，请参阅[Section 19.2.4.2,
    “Replication Metadata Repositories”](replica-logs-status.html "19.2.4.2 Replication
    Metadata Repositories")。
- en: '[`--master-retry-count=*`count`*`](replication-options-replica.html#option_mysqld_master-retry-count)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--master-retry-count=*`count`*`](replication-options-replica.html#option_mysqld_master-retry-count)'
- en: '| Command-Line Format | `--master-retry-count=#` |'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--master-retry-count=#` |'
- en: '| Deprecated | Yes |'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 是 |'
- en: '| Type | Integer |'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `86400` |'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `86400` |'
- en: '| Minimum Value | `0` |'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value (64-bit platforms) | `18446744073709551615` |'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `18446744073709551615` |'
- en: '| Maximum Value (32-bit platforms) | `4294967295` |'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `4294967295` |'
- en: The number of times that the replica tries to reconnect to the source before
    giving up. The default value is 86400 times. A value of 0 means “infinite”, and
    the replica attempts to connect forever. Reconnection attempts are triggered when
    the replica reaches its connection timeout (specified by the [`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)
    or [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)
    system variable) without receiving data or a heartbeat signal from the source.
    Reconnection is attempted at intervals set by the `SOURCE_CONNECT_RETRY` | `MASTER_CONNECT_RETRY`
    option of the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement") statement (which defaults to every 60 seconds).
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制品在放弃之前尝试重新连接到源的次数。默认值为86400次。值为0表示“无限”，复制品会永远尝试连接。当复制品在未从源接收数据或心跳信号的情况下达到连接超时（由[`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)或[`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)系统变量指定）时，会触发重新连接尝试。重新连接尝试的间隔由[`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html "15.4.2.1 CHANGE
    MASTER TO Statement")语句的`SOURCE_CONNECT_RETRY` | `MASTER_CONNECT_RETRY`选项设置（默认为每60秒一次）。
- en: This option is deprecated; expect it to be removed in a future MySQL release.
    Use the `SOURCE_RETRY_COUNT` | `MASTER_RETRY_COUNT` option of the [`CHANGE REPLICATION
    SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION SOURCE
    TO Statement") | [`CHANGE MASTER TO`](change-master-to.html "15.4.2.1 CHANGE MASTER
    TO Statement") statement instead.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项已弃用；预计将在未来的MySQL版本中删除。请改用[`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement")语句的`SOURCE_RETRY_COUNT` | `MASTER_RETRY_COUNT`选项。
- en: '[`--max-relay-log-size=*`size`*`](replication-options-replica.html#option_mysqld_max-relay-log-size)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--max-relay-log-size=*`size`*`](replication-options-replica.html#option_mysqld_max-relay-log-size)'
- en: '| Command-Line Format | `--max-relay-log-size=#` |'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--max-relay-log-size=#` |'
- en: '| System Variable | `[max_relay_log_size](replication-options-replica.html#sysvar_max_relay_log_size)`
    |'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[max_relay_log_size](replication-options-replica.html#sysvar_max_relay_log_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1073741824` |'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1073741824` |'
- en: '| Unit | bytes |'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `4096` |'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "Note") |
    `4096` |'
- en: The size at which the server rotates relay log files automatically. If this
    value is nonzero, the relay log is rotated automatically when its size exceeds
    this value. If this value is zero (the default), the size at which relay log rotation
    occurs is determined by the value of [`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size).
    For more information, see [Section 19.2.4.1, “The Relay Log”](replica-logs-relaylog.html
    "19.2.4.1 The Relay Log").
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器自动轮换中继日志文件的大小。如果此值非零，则当中继日志大小超过此值时，中继日志会自动轮换。如果此值为零（默认值），则中继日志轮换发生的大小由[`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)的值确定。更多信息，请参阅[Section 19.2.4.1,
    “The Relay Log”](replica-logs-relaylog.html "19.2.4.1 The Relay Log")。
- en: '[`--relay-log-purge={0|1}`](replication-options-replica.html#option_mysqld_relay-log-purge)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--relay-log-purge={0|1}`](replication-options-replica.html#option_mysqld_relay-log-purge)'
- en: '| Command-Line Format | `--relay-log-purge[={OFF&#124;ON}]` |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log-purge[={OFF&#124;ON}]` |'
- en: '| System Variable | `[relay_log_purge](replication-options-replica.html#sysvar_relay_log_purge)`
    |'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_purge](replication-options-replica.html#sysvar_relay_log_purge)`
    |'
- en: '| Scope | Global |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Disable or enable automatic purging of relay logs as soon as they are no longer
    needed. The default value is 1 (enabled). This is a global variable that can be
    changed dynamically with `SET GLOBAL relay_log_purge = *`N`*`. Disabling purging
    of relay logs when enabling the [`--relay-log-recovery`](replication-options-replica.html#sysvar_relay_log_recovery)
    option risks data consistency and is therefore not crash-safe.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 禁用或启用中继日志在不再需要时自动清除。默认值为1（启用）。这是一个可以通过`SET GLOBAL relay_log_purge = *`N`*`动态更改的全局变量。在启用[`--relay-log-recovery`](replication-options-replica.html#sysvar_relay_log_recovery)选项时禁用中继日志清除会存在数据一致性风险，因此不具有崩溃安全性。
- en: '[`--relay-log-space-limit=*`size`*`](replication-options-replica.html#option_mysqld_relay-log-space-limit)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--relay-log-space-limit=*`size`*`](replication-options-replica.html#option_mysqld_relay-log-space-limit)'
- en: '| Command-Line Format | `--relay-log-space-limit=#` |'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log-space-limit=#` |'
- en: '| System Variable | `[relay_log_space_limit](replication-options-replica.html#sysvar_relay_log_space_limit)`
    |'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_space_limit](replication-options-replica.html#sysvar_relay_log_space_limit)`
    |'
- en: '| Scope | Global |'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `18446744073709551615` |'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `18446744073709551615` |'
- en: '| Unit | bytes |'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: 'This option places an upper limit on the total size in bytes of all relay logs
    on the replica. A value of 0 means “no limit”. This is useful for a replica server
    host that has limited disk space. When the limit is reached, the I/O (receiver)
    thread stops reading binary log events from the source server until the SQL thread
    has caught up and deleted some unused relay logs. Note that this limit is not
    absolute: There are cases where the SQL (applier) thread needs more events before
    it can delete relay logs. In that case, the receiver thread exceeds the limit
    until it becomes possible for the applier thread to delete some relay logs because
    not doing so would cause a deadlock. You should not set [`--relay-log-space-limit`](replication-options-replica.html#option_mysqld_relay-log-space-limit)
    to less than twice the value of [`--max-relay-log-size`](replication-options-replica.html#option_mysqld_max-relay-log-size)
    (or [`--max-binlog-size`](replication-options-binary-log.html#sysvar_max_binlog_size)
    if [`--max-relay-log-size`](replication-options-replica.html#option_mysqld_max-relay-log-size)
    is 0). In that case, there is a chance that the receiver thread waits for free
    space because [`--relay-log-space-limit`](replication-options-replica.html#option_mysqld_relay-log-space-limit)
    is exceeded, but the applier thread has no relay log to purge and is unable to
    satisfy the receiver thread. This forces the receiver thread to ignore [`--relay-log-space-limit`](replication-options-replica.html#option_mysqld_relay-log-space-limit)
    temporarily.'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项将在副本上的所有中继日志的总大小上设置一个上限，以字节为单位。值为0表示“无限制”。这对于具有有限磁盘空间的副本服务器主机非常有用。当达到限制时，I/O（接收器）线程停止从源服务器读取二进制日志事件，直到SQL线程赶上并删除一些未使用的中继日志。请注意，此限制并非绝对：在某些情况下，SQL（应用程序）线程需要更多事件才能删除中继日志。在这种情况下，接收器线程超过限制，直到应用程序线程能够删除一些中继日志，因为不这样做会导致死锁。不应将[`--relay-log-space-limit`](replication-options-replica.html#option_mysqld_relay-log-space-limit)设置为小于[`--max-relay-log-size`](replication-options-replica.html#option_mysqld_max-relay-log-size)的两倍（或[`--max-binlog-size`](replication-options-binary-log.html#sysvar_max_binlog_size)如果[`--max-relay-log-size`](replication-options-replica.html#option_mysqld_max-relay-log-size)为0）。在这种情况下，接收器线程可能会等待空闲空间，因为[`--relay-log-space-limit`](replication-options-replica.html#option_mysqld_relay-log-space-limit)已超过，但应用程序线程没有中继日志可清除，无法满足接收器线程。这会迫使接收器线程暂时忽略[`--relay-log-space-limit`](replication-options-replica.html#option_mysqld_relay-log-space-limit)。
- en: '[`--replicate-do-db=*`db_name`*`](replication-options-replica.html#option_mysqld_replicate-do-db)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-do-db=*`db_name`*`](replication-options-replica.html#option_mysqld_replicate-do-db)'
- en: '| Command-Line Format | `--replicate-do-db=name` |'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replicate-do-db=name` |'
- en: '| Type | String |'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: Creates a replication filter using the name of a database. Such filters can
    also be created using [`CHANGE REPLICATION FILTER REPLICATE_DO_DB`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement").
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用数据库名称创建一个复制过滤器。也可以使用[`CHANGE REPLICATION FILTER REPLICATE_DO_DB`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement")来创建这样的过滤器。
- en: This option supports channel specific replication filters, enabling multi-source
    replicas to use specific filters for different sources. To configure a channel
    specific replication filter on a channel named *`channel_1`* use `--replicate-do-db:*`channel_1`*:*`db_name`*`.
    In this case, the first colon is interpreted as a separator and subsequent colons
    are literal colons. See [Section 19.2.5.4, “Replication Channel Based Filters”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters") for more information.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项支持通道特定的复制过滤器，使多源副本可以为不同来源使用特定的过滤器。要在名为*`channel_1`*的通道上配置特定于通道的复制过滤器，请使用`--replicate-do-db:*`channel_1`*:*`db_name`*`。在这种情况下，第一个冒号被解释为分隔符，后续冒号为字面冒号。有关更多信息，请参见[第19.2.5.4节，“基于通道的复制过滤器”](replication-rules-channel-based-filters.html
    "19.2.5.4 基于通道的复制过滤器")。
- en: Note
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Global replication filters cannot be used on a MySQL server instance that is
    configured for Group Replication, because filtering transactions on some servers
    would make the group unable to reach agreement on a consistent state. Channel
    specific replication filters can be used on replication channels that are not
    directly involved with Group Replication, such as where a group member also acts
    as a replica to a source that is outside the group. They cannot be used on the
    `group_replication_applier` or `group_replication_recovery` channels.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局复制过滤器不能用于配置为组复制的 MySQL 服务器实例，因为在某些服务器上过滤事务会使组无法达成一致状态。通道特定的复制过滤器可以用于与组复制无直接关系的复制通道，例如，其中一个组成员同时充当到组外源的副本。它们不能用于
    `group_replication_applier` 或 `group_replication_recovery` 通道。
- en: The precise effect of this replication filter depends on whether statement-based
    or row-based replication is in use.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个复制过滤器的精确效果取决于是使用基于语句还是基于行的复制。
- en: '**Statement-based replication. ** Tell the replication SQL thread to restrict
    replication to statements where the default database (that is, the one selected
    by [`USE`](use.html "15.8.4 USE Statement")) is *`db_name`*. To specify more than
    one database, use this option multiple times, once for each database; however,
    doing so does *not* replicate cross-database statements such as `UPDATE *`some_db.some_table`*
    SET foo=''bar''` while a different database (or no database) is selected.'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**基于语句的复制。** 告诉复制 SQL 线程将复制限制在默认数据库（即由 [`USE`](use.html "15.8.4 USE Statement")
    选择的数据库）为 *`db_name`* 的语句上。要指定多个数据库，请多次使用此选项，每个数据库使用一次；但是，这样做 *不会* 复制跨数据库语句，例如
    `UPDATE *`some_db.some_table`* SET foo=''bar''`，而选择了不同的数据库（或没有选择数据库）。'
- en: Warning
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: To specify multiple databases you *must* use multiple instances of this option.
    Because database names can contain commas, if you supply a comma separated list
    then the list is treated as the name of a single database.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要指定多个数据库，*必须* 使用此选项的多个实例。因为数据库名称可以包含逗号，如果提供逗号分隔的列表，则该列表被视为单个数据库的名称。
- en: 'An example of what does not work as you might expect when using statement-based
    replication: If the replica is started with [`--replicate-do-db=sales`](replication-options-replica.html#option_mysqld_replicate-do-db)
    and you issue the following statements on the source, the [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") statement is *not* replicated:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用基于语句的复制时不像您期望的那样工作的示例：如果副本是使用 [`--replicate-do-db=sales`](replication-options-replica.html#option_mysqld_replicate-do-db)
    启动的，并且您在源上发出以下语句，则 [`UPDATE`](update.html "15.2.17 UPDATE Statement") 语句 *不会*
    被复制：
- en: '[PRE1]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The main reason for this “check just the default database” behavior is that
    it is difficult from the statement alone to know whether it should be replicated
    (for example, if you are using multiple-table [`DELETE`](delete.html "15.2.2 DELETE
    Statement") statements or multiple-table [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statements that act across multiple databases). It is also faster
    to check only the default database rather than all databases if there is no need.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这种“仅检查默认数据库”行为的主要原因是，仅从语句本身很难知道是否应该复制它（例如，如果您正在使用多表 [`DELETE`](delete.html "15.2.2 DELETE
    Statement") 语句或跨多个数据库操作的多表 [`UPDATE`](update.html "15.2.17 UPDATE Statement")
    语句）。如果没有必要，仅检查默认数据库而不是所有数据库会更快。
- en: '**Row-based replication. ** Tells the replication SQL thread to restrict replication
    to database *`db_name`*. Only tables belonging to *`db_name`* are changed; the
    current database has no effect on this. Suppose that the replica is started with
    [`--replicate-do-db=sales`](replication-options-replica.html#option_mysqld_replicate-do-db)
    and row-based replication is in effect, and then the following statements are
    run on the source:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**基于行的复制。** 告诉复制 SQL 线程将复制限制在数据库 *`db_name`* 上。只有属于 *`db_name`* 的表会被更改；当前数据库对此没有影响。假设副本是使用
    [`--replicate-do-db=sales`](replication-options-replica.html#option_mysqld_replicate-do-db)
    启动的，并且基于行的复制生效，然后在源上运行以下语句：'
- en: '[PRE2]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `february` table in the `sales` database on the replica is changed in accordance
    with the [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement; this occurs
    whether or not the [`USE`](use.html "15.8.4 USE Statement") statement was issued.
    However, issuing the following statements on the source has no effect on the replica
    when using row-based replication and [`--replicate-do-db=sales`](replication-options-replica.html#option_mysqld_replicate-do-db):'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 副本上的`sales`数据库中的`february`表根据[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句进行更改；无论是否发出了[`USE`](use.html
    "15.8.4 USE Statement")语句都会发生这种情况。但是，在源上发出以下语句时，当使用行复制和[`--replicate-do-db=sales`](replication-options-replica.html#option_mysqld_replicate-do-db)时，副本上没有影响：
- en: '[PRE3]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Even if the statement `USE prices` were changed to `USE sales`, the [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") statement's effects would still not be replicated.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 即使语句`USE prices`被更改为`USE sales`，[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句的效果仍不会被复制。
- en: 'Another important difference in how [`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)
    is handled in statement-based replication as opposed to row-based replication
    occurs with regard to statements that refer to multiple databases. Suppose that
    the replica is started with [`--replicate-do-db=db1`](replication-options-replica.html#option_mysqld_replicate-do-db),
    and the following statements are executed on the source:'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一个在语句复制和行复制中处理[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)的重要区别涉及到涉及多个数据库的语句。假设副本使用[`--replicate-do-db=db1`](replication-options-replica.html#option_mysqld_replicate-do-db)启动，并且在源上执行以下语句：
- en: '[PRE4]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you are using statement-based replication, then both tables are updated
    on the replica. However, when using row-based replication, only `table1` is affected
    on the replica; since `table2` is in a different database, `table2` on the replica
    is not changed by the [`UPDATE`](update.html "15.2.17 UPDATE Statement"). Now
    suppose that, instead of the `USE db1` statement, a `USE db4` statement had been
    used:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您使用语句复制，那么副本上的两个表都会被更新。但是，当使用行复制时，副本上只有`table1`受到影响；因为`table2`位于不同的数据库中，所以副本上的`table2`不会被[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")更改。现在假设，而不是`USE db1`语句，使用了`USE db4`语句：
- en: '[PRE5]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this case, the [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement
    would have no effect on the replica when using statement-based replication. However,
    if you are using row-based replication, the [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") would change `table1` on the replica, but not `table2`—in other words,
    only tables in the database named by [`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)
    are changed, and the choice of default database has no effect on this behavior.
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，当使用语句复制时，[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句对副本没有影响。但是，如果使用行复制，则[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")会更改副本上的`table1`，但不会更改`table2`—换句话说，只有由[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)命名的数据库中的表会被更改，默认数据库的选择对此行为没有影响。
- en: If you need cross-database updates to work, use [`--replicate-wild-do-table=*`db_name`*.%`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)
    instead. See [Section 19.2.5, “How Servers Evaluate Replication Filtering Rules”](replication-rules.html
    "19.2.5 How Servers Evaluate Replication Filtering Rules").
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果需要跨数据库更新生效，请改用[`--replicate-wild-do-table=*`db_name`*.%`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)。参见[第19.2.5节，“服务器如何评估复制过滤规则”](replication-rules.html
    "19.2.5 How Servers Evaluate Replication Filtering Rules")。
- en: Note
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: This option affects replication in the same manner that [`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)
    affects binary logging, and the effects of the replication format on how [`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)
    affects replication behavior are the same as those of the logging format on the
    behavior of [`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db).
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项对复制的影响与[`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)对二进制日志记录的影响方式相同，并且复制格式对[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)对复制行为的影响与日志格式对[`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)行为的影响相同。
- en: This option has no effect on [`BEGIN`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements"), [`COMMIT`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements"), or [`ROLLBACK`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements") statements.
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项对[`BEGIN`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")、[`COMMIT`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")或[`ROLLBACK`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")语句无效。
- en: '[`--replicate-ignore-db=*`db_name`*`](replication-options-replica.html#option_mysqld_replicate-ignore-db)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-ignore-db=*`db_name`*`](replication-options-replica.html#option_mysqld_replicate-ignore-db)'
- en: '| Command-Line Format | `--replicate-ignore-db=name` |'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replicate-ignore-db=name` |'
- en: '| Type | String |'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: Creates a replication filter using the name of a database. Such filters can
    also be created using [`CHANGE REPLICATION FILTER REPLICATE_IGNORE_DB`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement").
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用数据库名称创建一个复制过滤器。也可以使用[`CHANGE REPLICATION FILTER REPLICATE_IGNORE_DB`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement")来创建这样的过滤器。
- en: This option supports channel specific replication filters, enabling multi-source
    replicas to use specific filters for different sources. To configure a channel
    specific replication filter on a channel named *`channel_1`* use `--replicate-ignore-db:*`channel_1`*:*`db_name`*`.
    In this case, the first colon is interpreted as a separator and subsequent colons
    are literal colons. See [Section 19.2.5.4, “Replication Channel Based Filters”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters") for more information.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项支持通道特定的复制过滤器，使多源复制副本可以为不同源使用特定过滤器。要在名为*`channel_1`*的通道上配置通道特定的复制过滤器，请使用`--replicate-ignore-db:*`channel_1`*:*`db_name`*`。在这种情况下，第一个冒号被解释为分隔符，后续冒号为字面冒号。有关更多信息，请参见[Section 19.2.5.4,
    “Replication Channel Based Filters”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters")。
- en: Note
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Global replication filters cannot be used on a MySQL server instance that is
    configured for Group Replication, because filtering transactions on some servers
    would make the group unable to reach agreement on a consistent state. Channel
    specific replication filters can be used on replication channels that are not
    directly involved with Group Replication, such as where a group member also acts
    as a replica to a source that is outside the group. They cannot be used on the
    `group_replication_applier` or `group_replication_recovery` channels.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局复制过滤器不能在配置为组复制的 MySQL 服务器实例上使用，因为在某些服务器上过滤事务会导致组无法达成一致状态。通道特定的复制过滤器可以用于与组复制无直接关系的复制通道，例如，其中一个组成员同时充当了组外源的副本。它们不能用于`group_replication_applier`或`group_replication_recovery`通道。
- en: To specify more than one database to ignore, use this option multiple times,
    once for each database. Because database names can contain commas, if you supply
    a comma-separated list, it is treated as the name of a single database.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要忽略多个数据库，请多次使用此选项，每个数据库一次。因为数据库名称可以包含逗号，如果提供逗号分隔的列表，则将其视为单个数据库的名称。
- en: As with [`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db),
    the precise effect of this filtering depends on whether statement-based or row-based
    replication is in use, and are described in the next several paragraphs.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)一样，此过滤的精确效果取决于是否使用基于语句或基于行的复制，并在接下来的几段中描述。
- en: '**Statement-based replication. ** Tells the replication SQL thread not to replicate
    any statement where the default database (that is, the one selected by [`USE`](use.html
    "15.8.4 USE Statement")) is *`db_name`*.'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**基于语句的复制。** 告诉复制 SQL 线程不要复制默认数据库（即由[`USE`](use.html "15.8.4 USE Statement")选择的数据库）为*`db_name`*的任何语句。'
- en: '**Row-based replication. ** Tells the replication SQL thread not to update
    any tables in the database *`db_name`*. The default database has no effect.'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**基于行的复制。** 告诉复制 SQL 线程不要更新数据库*`db_name`*中的任何表。默认数据库不受影响。'
- en: 'When using statement-based replication, the following example does not work
    as you might expect. Suppose that the replica is started with [`--replicate-ignore-db=sales`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    and you issue the following statements on the source:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在使用基于语句的复制时，以下示例不会按您期望的方式工作。假设副本是使用[`--replicate-ignore-db=sales`](replication-options-replica.html#option_mysqld_replicate-ignore-db)启动的，并且您在源上发出以下语句：
- en: '[PRE6]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement *is* replicated
    in such a case because [`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    applies only to the default database (determined by the [`USE`](use.html "15.8.4 USE
    Statement") statement). Because the `sales` database was specified explicitly
    in the statement, the statement has not been filtered. However, when using row-based
    replication, the [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement's
    effects are *not* propagated to the replica, and the replica's copy of the `sales.january`
    table is unchanged; in this instance, [`--replicate-ignore-db=sales`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    causes *all* changes made to tables in the source's copy of the `sales` database
    to be ignored by the replica.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句会被复制，因为[`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)仅适用于默认数据库（由[`USE`](use.html
    "15.8.4 USE Statement")语句确定）。由于`sales`数据库在语句中被明确指定，因此该语句未被过滤。但是，在使用基于行的复制时，[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")语句的效果不会传播到副本，副本中的`sales.january`表的副本保持不变；在这种情况下，[`--replicate-ignore-db=sales`](replication-options-replica.html#option_mysqld_replicate-ignore-db)导致源数据库中`sales`数据库中的所有表的更改都被副本忽略。
- en: You should not use this option if you are using cross-database updates and you
    do not want these updates to be replicated. See [Section 19.2.5, “How Servers
    Evaluate Replication Filtering Rules”](replication-rules.html "19.2.5 How Servers
    Evaluate Replication Filtering Rules").
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您正在使用跨数据库更新并且不希望这些更新被复制，请不要使用此选项。请参阅[Section 19.2.5, “How Servers Evaluate
    Replication Filtering Rules”](replication-rules.html "19.2.5 How Servers Evaluate
    Replication Filtering Rules")。
- en: If you need cross-database updates to work, use [`--replicate-wild-ignore-table=*`db_name`*.%`](replication-options-replica.html#option_mysqld_replicate-wild-ignore-table)
    instead. See [Section 19.2.5, “How Servers Evaluate Replication Filtering Rules”](replication-rules.html
    "19.2.5 How Servers Evaluate Replication Filtering Rules").
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果需要跨数据库更新正常工作，请改用[`--replicate-wild-ignore-table=*`db_name`*.%`](replication-options-replica.html#option_mysqld_replicate-wild-ignore-table)。请参阅[Section 19.2.5,
    “How Servers Evaluate Replication Filtering Rules”](replication-rules.html "19.2.5 How
    Servers Evaluate Replication Filtering Rules")。
- en: Note
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: This option affects replication in the same manner that [`--binlog-ignore-db`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)
    affects binary logging, and the effects of the replication format on how [`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    affects replication behavior are the same as those of the logging format on the
    behavior of [`--binlog-ignore-db`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db).
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项对复制的影响方式与[`--binlog-ignore-db`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)对二进制日志的影响方式相同，并且复制格式对[`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)对复制行为的影响与日志格式对[`--binlog-ignore-db`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)行为的影响相同。
- en: This option has no effect on [`BEGIN`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements"), [`COMMIT`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements"), or [`ROLLBACK`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements") statements.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项对[`BEGIN`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")、[`COMMIT`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")或[`ROLLBACK`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")语句没有影响。
- en: '[`--replicate-do-table=*`db_name.tbl_name`*`](replication-options-replica.html#option_mysqld_replicate-do-table)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-do-table=*`db_name.tbl_name`*`](replication-options-replica.html#option_mysqld_replicate-do-table)'
- en: '| Command-Line Format | `--replicate-do-table=name` |'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replicate-do-table=name` |'
- en: '| Type | String |'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: Creates a replication filter by telling the replication SQL thread to restrict
    replication to a given table. To specify more than one table, use this option
    multiple times, once for each table. This works for both cross-database updates
    and default database updates, in contrast to [`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db).
    See [Section 19.2.5, “How Servers Evaluate Replication Filtering Rules”](replication-rules.html
    "19.2.5 How Servers Evaluate Replication Filtering Rules"). You can also create
    such a filter by issuing a [`CHANGE REPLICATION FILTER REPLICATE_DO_TABLE`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement") statement.
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过告诉复制 SQL 线程限制复制到给定表来创建复制过滤器。要指定多个表，多次使用此选项，每次为一个表。与[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)不同，这适用于跨数据库更新和默认数据库更新。参见[第
    19.2.5 节，“服务器如何评估复制过滤规则”](replication-rules.html "19.2.5 How Servers Evaluate
    Replication Filtering Rules")。您还可以通过发出[`CHANGE REPLICATION FILTER REPLICATE_DO_TABLE`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement")语句来创建这样的过滤器。
- en: This option supports channel specific replication filters, enabling multi-source
    replicas to use specific filters for different sources. To configure a channel
    specific replication filter on a channel named *`channel_1`* use `--replicate-do-table:*`channel_1`*:*`db_name.tbl_name`*`.
    In this case, the first colon is interpreted as a separator and subsequent colons
    are literal colons. See [Section 19.2.5.4, “Replication Channel Based Filters”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters") for more information.
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项支持通道特定的复制过滤器，使多源复制可以为不同源使用特定过滤器。要在名为*`channel_1`*的通道上配置通道特定的复制过滤器，请使用`--replicate-do-table:*`channel_1`*:*`db_name.tbl_name`*`。在这种情况下，第一个冒号被解释为分隔符，后续冒号为字面冒号。有关更多信息，请参见[第
    19.2.5.4 节，“基于复制通道的过滤器”](replication-rules-channel-based-filters.html "19.2.5.4 Replication
    Channel Based Filters")。
- en: Note
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Global replication filters cannot be used on a MySQL server instance that is
    configured for Group Replication, because filtering transactions on some servers
    would make the group unable to reach agreement on a consistent state. Channel
    specific replication filters can be used on replication channels that are not
    directly involved with Group Replication, such as where a group member also acts
    as a replica to a source that is outside the group. They cannot be used on the
    `group_replication_applier` or `group_replication_recovery` channels.
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局复制过滤器不能用于配置为组复制的 MySQL 服务器实例，因为在某些服务器上过滤事务会导致组无法达成一致状态。通道特定的复制过滤器可以用于与组复制无直接关系的复制通道，例如，其中一个组成员同时充当一个在组外的源的复制。它们不能用于`group_replication_applier`或`group_replication_recovery`通道。
- en: This option affects only statements that apply to tables. It does not affect
    statements that apply only to other database objects, such as stored routines.
    To filter statements operating on stored routines, use one or more of the `--replicate-*-db`
    options.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项仅影响适用于表的语句。它不影响仅适用于其他数据库对象（如存储过程）的语句。要过滤操作存储过程的语句，请使用一个或多个`--replicate-*-db`选项。
- en: '[`--replicate-ignore-table=*`db_name.tbl_name`*`](replication-options-replica.html#option_mysqld_replicate-ignore-table)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-ignore-table=*`db_name.tbl_name`*`](replication-options-replica.html#option_mysqld_replicate-ignore-table)'
- en: '| Command-Line Format | `--replicate-ignore-table=name` |'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replicate-ignore-table=name` |'
- en: '| Type | String |'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: Creates a replication filter by telling the replication SQL thread not to replicate
    any statement that updates the specified table, even if any other tables might
    be updated by the same statement. To specify more than one table to ignore, use
    this option multiple times, once for each table. This works for cross-database
    updates, in contrast to [`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db).
    See [Section 19.2.5, “How Servers Evaluate Replication Filtering Rules”](replication-rules.html
    "19.2.5 How Servers Evaluate Replication Filtering Rules"). You can also create
    such a filter by issuing a [`CHANGE REPLICATION FILTER REPLICATE_IGNORE_TABLE`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement") statement.
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过告诉复制 SQL 线程不复制更新指定表的任何语句来创建一个复制过滤器，即使同一语句可能更新其他表。要忽略多个表，请多次使用此选项，每次针对一个表。这适用于跨数据库更新，与[`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)相反。请参见[第19.2.5节，“服务器如何评估复制过滤规则”](replication-rules.html
    "19.2.5 服务器如何评估复制过滤规则")。您还可以通过发出[`CHANGE REPLICATION FILTER REPLICATE_IGNORE_TABLE`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER 语句")语句来创建这样的过滤器。
- en: This option supports channel specific replication filters, enabling multi-source
    replicas to use specific filters for different sources. To configure a channel
    specific replication filter on a channel named *`channel_1`* use `--replicate-ignore-table:*`channel_1`*:*`db_name.tbl_name`*`.
    In this case, the first colon is interpreted as a separator and subsequent colons
    are literal colons. See [Section 19.2.5.4, “Replication Channel Based Filters”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters") for more information.
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项支持通道特定的复制过滤器，使得多源复制可以为不同源使用特定的过滤器。要在名为*`channel_1`*的通道上配置通道特定的复制过滤器，请使用`--replicate-ignore-table:*`channel_1`*:*`db_name.tbl_name`*`。在这种情况下，第一个冒号被解释为分隔符，后续的冒号是字面冒号。有关更多信息，请参见[第19.2.5.4节，“基于通道的复制过滤器”](replication-rules-channel-based-filters.html
    "19.2.5.4 基于通道的复制过滤器")。
- en: Note
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Global replication filters cannot be used on a MySQL server instance that is
    configured for Group Replication, because filtering transactions on some servers
    would make the group unable to reach agreement on a consistent state. Channel
    specific replication filters can be used on replication channels that are not
    directly involved with Group Replication, such as where a group member also acts
    as a replica to a source that is outside the group. They cannot be used on the
    `group_replication_applier` or `group_replication_recovery` channels.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局复制过滤器不能用于配置为组复制的 MySQL 服务器实例，因为在某些服务器上过滤事务会导致组无法达成一致状态。通道特定的复制过滤器可以用于与组复制无直接关系的复制通道，例如，其中一个组成员同时充当组外源的副本。它们不能用于`group_replication_applier`或`group_replication_recovery`通道。
- en: This option affects only statements that apply to tables. It does not affect
    statements that apply only to other database objects, such as stored routines.
    To filter statements operating on stored routines, use one or more of the `--replicate-*-db`
    options.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项仅影响适用于表的语句。它不影响仅适用于其他数据库对象的语句，如存储过程。要过滤操作存储过程的语句，请使用一个或多个`--replicate-*-db`选项。
- en: '[`--replicate-rewrite-db=*`from_name`*->*`to_name`*`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-rewrite-db=*`from_name`*->*`to_name`*`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)'
- en: '| Command-Line Format | `--replicate-rewrite-db=old_name->new_name` |'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replicate-rewrite-db=old_name->new_name` |'
- en: '| Type | String |'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: Tells the replica to create a replication filter that translates the specified
    database to *`to_name`* if it was *`from_name`* on the source. Only statements
    involving tables are affected, not statements such as [`CREATE DATABASE`](create-database.html
    "15.1.12 CREATE DATABASE Statement"), [`DROP DATABASE`](drop-database.html "15.1.24 DROP
    DATABASE Statement"), and [`ALTER DATABASE`](alter-database.html "15.1.2 ALTER
    DATABASE Statement").
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 告诉副本创建一个复制过滤器，如果源上的指定数据库是*`from_name`*，则将其转换为*`to_name`*。只有涉及表的语句会受到影响，不包括[`CREATE
    DATABASE`](create-database.html "15.1.12 CREATE DATABASE 语句")、[`DROP DATABASE`](drop-database.html
    "15.1.24 DROP DATABASE 语句")和[`ALTER DATABASE`](alter-database.html "15.1.2 ALTER
    DATABASE 语句")等语句。
- en: To specify multiple rewrites, use this option multiple times. The server uses
    the first one with a *`from_name`* value that matches. The database name translation
    is done *before* the `--replicate-*` rules are tested. You can also create such
    a filter by issuing a [`CHANGE REPLICATION FILTER REPLICATE_REWRITE_DB`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement") statement.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要指定多个重写，请多次使用此选项。服务器将使用第一个匹配*`from_name`*值的重写。数据库名称转换是在测试`--replicate-*`规则之前完成的。您还可以通过发出[`CHANGE
    REPLICATION FILTER REPLICATE_REWRITE_DB`](change-replication-filter.html "15.4.2.2 CHANGE
    REPLICATION FILTER Statement")语句来创建这样的过滤器。
- en: 'If you use the [`--replicate-rewrite-db`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)
    option on the command line and the `>` character is special to your command interpreter,
    quote the option value. For example:'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您在命令行上使用[`--replicate-rewrite-db`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)选项，并且`>`字符对您的命令解释器很重要，请引用选项值。例如：
- en: '[PRE7]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The effect of the [`--replicate-rewrite-db`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)
    option differs depending on whether statement-based or row-based binary logging
    format is used for the query. With statement-based format, DML statements are
    translated based on the current database, as specified by the [`USE`](use.html
    "15.8.4 USE Statement") statement. With row-based format, DML statements are translated
    based on the database where the modified table exists. DDL statements are always
    filtered based on the current database, as specified by the [`USE`](use.html "15.8.4 USE
    Statement") statement, regardless of the binary logging format.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`--replicate-rewrite-db`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)选项的效果取决于查询使用的基于语句还是基于行的二进制日志格式而有所不同。对于基于语句的格式，DML语句基于由[`USE`](use.html
    "15.8.4 USE Statement")语句指定的当前数据库进行转换。对于基于行的格式，DML语句基于修改表所在的数据库进行转换。DDL语句始终基于由[`USE`](use.html
    "15.8.4 USE Statement")语句指定的当前数据库进行过滤，而不考虑二进制日志格式。'
- en: 'To ensure that rewriting produces the expected results, particularly in combination
    with other replication filtering options, follow these recommendations when you
    use the [`--replicate-rewrite-db`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)
    option:'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为确保重写产生预期结果，特别是与其他复制过滤选项结合使用时，请在使用[`--replicate-rewrite-db`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)选项时遵循以下建议：
- en: Create the *`from_name`* and *`to_name`* databases manually on the source and
    the replica with different names.
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在源和副本上手动创建*`from_name`*和*`to_name`*数据库，名称不同。
- en: If you use statement-based or mixed binary logging format, do not use cross-database
    queries, and do not specify database names in queries. For both DDL and DML statements,
    rely on the [`USE`](use.html "15.8.4 USE Statement") statement to specify the
    current database, and use only the table name in queries.
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您使用基于语句或混合二进制日志格式，请不要使用跨数据库查询，并且不要在查询中指定数据库名称。对于DDL和DML语句，依赖[`USE`](use.html
    "15.8.4 USE Statement")语句来指定当前数据库，并且在查询中只使用表名。
- en: If you use row-based binary logging format exclusively, for DDL statements,
    rely on the [`USE`](use.html "15.8.4 USE Statement") statement to specify the
    current database, and use only the table name in queries. For DML statements,
    you can use a fully qualified table name (*`db`*.*`table`*) if you want.
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您仅使用基于行的二进制日志格式，对于DDL语句，依赖[`USE`](use.html "15.8.4 USE Statement")语句来指定当前数据库，并且在查询中只使用表名。对于DML语句，如果需要，可以使用完全限定的表名（*`db`*.*`table`*）。
- en: If these recommendations are followed, it is safe to use the [`--replicate-rewrite-db`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)
    option in combination with table-level replication filtering options such as [`--replicate-do-table`](replication-options-replica.html#option_mysqld_replicate-do-table).
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果遵循这些建议，结合表级复制过滤选项（如[`--replicate-do-table`](replication-options-replica.html#option_mysqld_replicate-do-table)），使用[`--replicate-rewrite-db`](replication-options-replica.html#option_mysqld_replicate-rewrite-db)选项是安全的。
- en: 'This option supports channel specific replication filters, enabling multi-source
    replicas to use specific filters for different sources. Specify the channel name
    followed by a colon, followed by the filter specification. The first colon is
    interpreted as a separator, and any subsequent colons are interpreted as literal
    colons. For example, to configure a channel specific replication filter on a channel
    named *`channel_1`*, use:'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项支持通道特定的复制过滤器，使多源副本能够为不同源使用特定的过滤器。指定通道名称，后跟冒号，再跟过滤器规范。第一个冒号被解释为分隔符，任何后续的冒号都被解释为字面冒号。例如，要在名为*`channel_1`*的通道上配置通道特定的复制过滤器，请使用：
- en: '[PRE8]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you use a colon but do not specify a channel name, the option configures
    the replication filter for the default replication channel. See [Section 19.2.5.4,
    “Replication Channel Based Filters”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters") for more information.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果使用冒号但未指定通道名称，则该选项会为默认复制通道配置复制过滤器。有关更多信息，请参见[第 19.2.5.4 节，“基于复制通道的过滤器”](replication-rules-channel-based-filters.html
    "19.2.5.4 基于复制通道的过滤器")。
- en: Note
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Global replication filters cannot be used on a MySQL server instance that is
    configured for Group Replication, because filtering transactions on some servers
    would make the group unable to reach agreement on a consistent state. Channel
    specific replication filters can be used on replication channels that are not
    directly involved with Group Replication, such as where a group member also acts
    as a replica to a source that is outside the group. They cannot be used on the
    `group_replication_applier` or `group_replication_recovery` channels.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局复制过滤器不能在配置为组复制的 MySQL 服务器实例上使用，因为在某些服务器上过滤事务会导致组无法达成一致状态。通道特定的复制过滤器可以用于与组复制无直接关系的复制通道，例如，其中一个组成员同时充当了组外源的副本。它们不能用于`group_replication_applier`或`group_replication_recovery`通道。
- en: '[`--replicate-same-server-id`](replication-options-replica.html#option_mysqld_replicate-same-server-id)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-same-server-id`](replication-options-replica.html#option_mysqld_replicate-same-server-id)'
- en: '| Command-Line Format | `--replicate-same-server-id[={OFF&#124;ON}]` |'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replicate-same-server-id[={OFF&#124;ON}]` |'
- en: '| Type | Boolean |'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: This option is for use on replicas. The default is 0 (`FALSE`). With this option
    set to 1 (`TRUE`), the replica does not skip events that have its own server ID.
    This setting is normally useful only in rare configurations.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项用于副本。默认值为 0（`FALSE`）。将此选项设置为 1（`TRUE`）时，副本不会跳过具有自己服务器 ID 的事件。这个设置通常只在罕见的配置中有用。
- en: When binary logging is enabled on a replica, the combination of the [`--replicate-same-server-id`](replication-options-replica.html#option_mysqld_replicate-same-server-id)
    and [`--log-slave-updates`](replication-options-binary-log.html#sysvar_log_slave_updates)
    options on the replica can cause infinite loops in replication if the server is
    part of a circular replication topology. (In MySQL 8.0, binary logging is enabled
    by default, and replica update logging is the default when binary logging is enabled.)
    However, the use of global transaction identifiers (GTIDs) prevents this situation
    by skipping the execution of transactions that have already been applied. If [`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)
    is set on the replica, you can start the server with this combination of options,
    but you cannot change to any other GTID mode while the server is running. If any
    other GTID mode is set, the server does not start with this combination of options.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上启用二进制日志记录时，副本上的[`--replicate-same-server-id`](replication-options-replica.html#option_mysqld_replicate-same-server-id)和[`--log-slave-updates`](replication-options-binary-log.html#sysvar_log_slave_updates)选项的组合可能导致在服务器是循环复制拓扑的一部分时出现复制中的无限循环。（在
    MySQL 8.0 中，默认情况下启用二进制日志记录，并且在启用二进制日志记录时，默认情况下启用副本更新日志记录。）然而，全局事务标识符（GTID）的使用通过跳过已应用的事务的执行来防止这种情况。如果在副本上设置了[`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)，则可以使用这些选项的组合启动服务器，但在服务器运行时不能更改为任何其他
    GTID 模式。如果设置了任何其他 GTID 模式，则服务器不会以这些选项的组合启动。
- en: By default, the replication I/O (receiver) thread does not write binary log
    events to the relay log if they have the replica's server ID (this optimization
    helps save disk usage). If you want to use [`--replicate-same-server-id`](replication-options-replica.html#option_mysqld_replicate-same-server-id),
    be sure to start the replica with this option before you make the replica read
    its own events that you want the replication SQL (applier) thread to execute.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，复制 I/O（接收器）线程不会将具有副本服务器 ID 的二进制日志事件写入中继日志（此优化有助于节省磁盘使用量）。如果要使用[`--replicate-same-server-id`](replication-options-replica.html#option_mysqld_replicate-same-server-id)，请确保在使副本读取要复制
    SQL（applier）线程执行的自己事件之前，使用此选项启动副本。
- en: '[`--replicate-wild-do-table=*`db_name.tbl_name`*`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-wild-do-table=*`db_name.tbl_name`*`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)'
- en: '| Command-Line Format | `--replicate-wild-do-table=name` |'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replicate-wild-do-table=name` |'
- en: '| Type | String |'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: Creates a replication filter by telling the replication SQL (applier) thread
    to restrict replication to statements where any of the updated tables match the
    specified database and table name patterns. Patterns can contain the `%` and `_`
    wildcard characters, which have the same meaning as for the [`LIKE`](string-comparison-functions.html#operator_like)
    pattern-matching operator. To specify more than one table, use this option multiple
    times, once for each table. This works for cross-database updates. See [Section 19.2.5,
    “How Servers Evaluate Replication Filtering Rules”](replication-rules.html "19.2.5 How
    Servers Evaluate Replication Filtering Rules"). You can also create such a filter
    by issuing a [`CHANGE REPLICATION FILTER REPLICATE_WILD_DO_TABLE`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement") statement.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过告知复制 SQL（applier）线程，创建一个复制过滤器，限制复制到更新表匹配指定数据库和表名模式的语句。模式可以包含`%`和`_`通配符，其含义与[`LIKE`](string-comparison-functions.html#operator_like)模式匹配运算符相同。要指定多个表，需要多次使用此选项，每个表使用一次。这适用于跨数据库更新。参见[Section 19.2.5,
    “服务器如何评估复制过滤规则”](replication-rules.html "19.2.5 服务器如何评估复制过滤规则")。您也可以通过发出[`CHANGE
    REPLICATION FILTER REPLICATE_WILD_DO_TABLE`](change-replication-filter.html "15.4.2.2 CHANGE
    REPLICATION FILTER Statement")语句来创建这样的过滤器。
- en: This option supports channel specific replication filters, enabling multi-source
    replicas to use specific filters for different sources. To configure a channel
    specific replication filter on a channel named *`channel_1`* use `--replicate-wild-do-table:*`channel_1`*:*`db_name.tbl_name`*`.
    In this case, the first colon is interpreted as a separator and subsequent colons
    are literal colons. See [Section 19.2.5.4, “Replication Channel Based Filters”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters") for more information.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项支持通道特定的复制过滤器，使多源副本能够为不同源使用特定过滤器。要在名为*`channel_1`*的通道上配置通道特定的复制过滤器，请使用`--replicate-wild-do-table:*`channel_1`*:*`db_name.tbl_name`*`。在这种情况下，第一个冒号被解释为分隔符，后续冒号为字面冒号。有关更多信息，请参见[Section 19.2.5.4,
    “基于复制通道的过滤器”](replication-rules-channel-based-filters.html "19.2.5.4 基于复制通道的过滤器")。
- en: Important
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: Global replication filters cannot be used on a MySQL server instance that is
    configured for Group Replication, because filtering transactions on some servers
    would make the group unable to reach agreement on a consistent state. Channel
    specific replication filters can be used on replication channels that are not
    directly involved with Group Replication, such as where a group member also acts
    as a replica to a source that is outside the group. They cannot be used on the
    `group_replication_applier` or `group_replication_recovery` channels.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局复制过滤器不能在配置为组复制的 MySQL 服务器实例上使用，因为在某些服务器上过滤事务会导致组无法达成一致状态。通道特定的复制过滤器可以用于与组复制无直接关系的复制通道，例如，组成员同时充当源站外组的副本。它们不能用于`group_replication_applier`或`group_replication_recovery`通道。
- en: The replication filter specified by the [`--replicate-wild-do-table`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)
    option applies to tables, views, and triggers. It does not apply to stored procedures
    and functions, or events. To filter statements operating on the latter objects,
    use one or more of the `--replicate-*-db` options.
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由[`--replicate-wild-do-table`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)选项指定的复制过滤器适用于表、视图和触发器。它不适用于存储过程和函数，或事件。要过滤操作后者对象的语句，使用一个或多个`--replicate-*-db`选项。
- en: As an example, [`--replicate-wild-do-table=foo%.bar%`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)
    replicates only updates that use a table where the database name starts with `foo`
    and the table name starts with `bar`.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，[`--replicate-wild-do-table=foo%.bar%`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)仅复制使用数据库名称以`foo`开头且表名以`bar`开头的表的更新。
- en: If the table name pattern is `%`, it matches any table name and the option also
    applies to database-level statements ([`CREATE DATABASE`](create-database.html
    "15.1.12 CREATE DATABASE Statement"), [`DROP DATABASE`](drop-database.html "15.1.24 DROP
    DATABASE Statement"), and [`ALTER DATABASE`](alter-database.html "15.1.2 ALTER
    DATABASE Statement")). For example, if you use [`--replicate-wild-do-table=foo%.%`](replication-options-replica.html#option_mysqld_replicate-wild-do-table),
    database-level statements are replicated if the database name matches the pattern
    `foo%`.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果表名模式为`%`，它将匹配任何表名，并且该选项也适用于数据库级语句（[`CREATE DATABASE`](create-database.html
    "15.1.12 CREATE DATABASE Statement")，[`DROP DATABASE`](drop-database.html "15.1.24 DROP
    DATABASE Statement")和[`ALTER DATABASE`](alter-database.html "15.1.2 ALTER DATABASE
    Statement")）。例如，如果您使用[`--replicate-wild-do-table=foo%.%`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)，如果数据库名称与模式`foo%`匹配，则数据库级语句将被复制。
- en: Important
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: Table-level replication filters are only applied to tables that are explicitly
    mentioned and operated on in the query. They do not apply to tables that are implicitly
    updated by the query. For example, a [`GRANT`](grant.html "15.7.1.6 GRANT Statement")
    statement, which updates the `mysql.user` system table but does not mention that
    table, is not affected by a filter that specifies `mysql.%` as the wildcard pattern.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表级复制过滤器仅应用于在查询中明确提及并操作的表。它们不适用于查询隐式更新的表。例如，一个[`GRANT`](grant.html "15.7.1.6 GRANT
    Statement")语句，更新`mysql.user`系统表但未提及该表，不受指定`mysql.%`作为通配符模式的过滤器的影响。
- en: 'To include literal wildcard characters in the database or table name patterns,
    escape them with a backslash. For example, to replicate all tables of a database
    that is named `my_own%db`, but not replicate tables from the `my1ownAABCdb` database,
    you should escape the `_` and `%` characters like this: [`--replicate-wild-do-table=my\_own\%db`](replication-options-replica.html#option_mysqld_replicate-wild-do-table).
    If you use the option on the command line, you might need to double the backslashes
    or quote the option value, depending on your command interpreter. For example,
    with the **bash** shell, you would need to type [`--replicate-wild-do-table=my\\_own\\%db`](replication-options-replica.html#option_mysqld_replicate-wild-do-table).'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要在数据库或表名模式中包含字面通配符字符，请使用反斜杠进行转义。例如，要复制名为`my_own%db`的数据库的所有表，但不复制`my1ownAABCdb`数据库的表，您应该像这样转义`_`和`%`字符：[`--replicate-wild-do-table=my\_own\%db`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)。如果您在命令行上使用该选项，可能需要双倍反斜杠或引用选项值，具体取决于您的命令解释器。例如，在**bash**
    shell中，您需要键入[`--replicate-wild-do-table=my\\_own\\%db`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)。
- en: '[`--replicate-wild-ignore-table=*`db_name.tbl_name`*`](replication-options-replica.html#option_mysqld_replicate-wild-ignore-table)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-wild-ignore-table=*`db_name.tbl_name`*`](replication-options-replica.html#option_mysqld_replicate-wild-ignore-table)'
- en: '| Command-Line Format | `--replicate-wild-ignore-table=name` |'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replicate-wild-ignore-table=name` |'
- en: '| Type | String |'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: Creates a replication filter which keeps the replication SQL thread from replicating
    a statement in which any table matches the given wildcard pattern. To specify
    more than one table to ignore, use this option multiple times, once for each table.
    This works for cross-database updates. See [Section 19.2.5, “How Servers Evaluate
    Replication Filtering Rules”](replication-rules.html "19.2.5 How Servers Evaluate
    Replication Filtering Rules"). You can also create such a filter by issuing a
    [`CHANGE REPLICATION FILTER REPLICATE_WILD_IGNORE_TABLE`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement") statement.
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建一个复制过滤器，使复制SQL线程不会复制任何表匹配给定通配符模式的语句。要指定要忽略的多个表，请多次使用此选项，每个表使用一次。这适用于跨数据库更新。请参阅[第19.2.5节，“服务器如何评估复制过滤规则”](replication-rules.html
    "19.2.5 How Servers Evaluate Replication Filtering Rules")。您还可以通过发出[`CHANGE REPLICATION
    FILTER REPLICATE_WILD_IGNORE_TABLE`](change-replication-filter.html "15.4.2.2 CHANGE
    REPLICATION FILTER Statement")语句来创建此类过滤器。
- en: This option supports channel specific replication filters, enabling multi-source
    replicas to use specific filters for different sources. To configure a channel
    specific replication filter on a channel named *`channel_1`* use `--replicate-wild-ignore:*`channel_1`*:*`db_name.tbl_name`*`.
    In this case, the first colon is interpreted as a separator and subsequent colons
    are literal colons. See [Section 19.2.5.4, “Replication Channel Based Filters”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters") for more information.
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项支持通道特定的复制过滤器，使多源副本可以为不同源使用特定过滤器。要在名为*`channel_1`*的通道上配置通道特定的复制过滤器，请使用`--replicate-wild-ignore:*`channel_1`*:*`db_name.tbl_name`*`。在这种情况下，第一个冒号被解释为分隔符，后续冒号为字面冒号。有关更多信息，请参阅[第19.2.5.4节，“基于复制通道的过滤器”](replication-rules-channel-based-filters.html
    "19.2.5.4 Replication Channel Based Filters")。
- en: Important
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: Global replication filters cannot be used on a MySQL server instance that is
    configured for Group Replication, because filtering transactions on some servers
    would make the group unable to reach agreement on a consistent state. Channel
    specific replication filters can be used on replication channels that are not
    directly involved with Group Replication, such as where a group member also acts
    as a replica to a source that is outside the group. They cannot be used on the
    `group_replication_applier` or `group_replication_recovery` channels.
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 全局复制过滤器不能用于配置了组复制的 MySQL 服务器实例，因为在某些服务器上过滤事务会导致组无法达成一致状态。通道特定的复制过滤器可以用于与组复制无直接关系的复制通道，例如，其中一个组成员同时充当源站外组的副本。它们不能用于`group_replication_applier`或`group_replication_recovery`通道。
- en: As an example, [`--replicate-wild-ignore-table=foo%.bar%`](replication-options-replica.html#option_mysqld_replicate-wild-ignore-table)
    does not replicate updates that use a table where the database name starts with
    `foo` and the table name starts with `bar`. For information about how matching
    works, see the description of the [`--replicate-wild-do-table`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)
    option. The rules for including literal wildcard characters in the option value
    are the same as for [`--replicate-wild-ignore-table`](replication-options-replica.html#option_mysqld_replicate-wild-ignore-table)
    as well.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，[`--replicate-wild-ignore-table=foo%.bar%`](replication-options-replica.html#option_mysqld_replicate-wild-ignore-table)
    不会复制使用以`foo`开头的数据库和以`bar`开头的表的更新。有关匹配原理的信息，请参阅[`--replicate-wild-do-table`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)选项的描述。在选项值中包含字面通配符的规则与[`--replicate-wild-ignore-table`](replication-options-replica.html#option_mysqld_replicate-wild-ignore-table)相同。
- en: Important
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: Table-level replication filters are only applied to tables that are explicitly
    mentioned and operated on in the query. They do not apply to tables that are implicitly
    updated by the query. For example, a [`GRANT`](grant.html "15.7.1.6 GRANT Statement")
    statement, which updates the `mysql.user` system table but does not mention that
    table, is not affected by a filter that specifies `mysql.%` as the wildcard pattern.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表级复制过滤器仅适用于在查询中明确提及和操作的表。它们不适用于查询隐式更新的表。例如，一个[`GRANT`](grant.html "15.7.1.6 GRANT
    Statement")语句，更新`mysql.user`系统表但未提及该表，不受指定`mysql.%`作为通配符模式的过滤器影响。
- en: If you need to filter out [`GRANT`](grant.html "15.7.1.6 GRANT Statement") statements
    or other administrative statements, a possible workaround is to use the [`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    filter. This filter operates on the default database that is currently in effect,
    as determined by the [`USE`](use.html "15.8.4 USE Statement") statement. You can
    therefore create a filter to ignore statements for a database that is not replicated,
    then issue the [`USE`](use.html "15.8.4 USE Statement") statement to switch the
    default database to that one immediately before issuing any administrative statements
    that you want to ignore. In the administrative statement, name the actual database
    where the statement is applied.
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果需要过滤掉[`GRANT`](grant.html "15.7.1.6 GRANT Statement")语句或其他管理语句，一个可能的解决方法是使用[`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)过滤器。该过滤器作用于当前生效的默认数据库，由[`USE`](use.html
    "15.8.4 USE Statement")语句确定。因此，您可以创建一个过滤器来忽略未复制的数据库的语句，然后在要忽略的任何管理语句之前立即发出[`USE`](use.html
    "15.8.4 USE Statement")语句以切换默认数据库到该数据库。在管理语句中，命名应用语句的实际数据库。
- en: 'For example, if [`--replicate-ignore-db=nonreplicated`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    is configured on the replica server, the following sequence of statements causes
    the [`GRANT`](grant.html "15.7.1.6 GRANT Statement") statement to be ignored,
    because the default database `nonreplicated` is in effect:'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，如果在复制服务器上配置了 [`--replicate-ignore-db=nonreplicated`](replication-options-replica.html#option_mysqld_replicate-ignore-db)，则以下语句序列会导致
    [`GRANT`](grant.html "15.7.1.6 GRANT 语句") 语句被忽略，因为默认数据库 `nonreplicated` 生效：
- en: '[PRE9]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)'
- en: '| Command-Line Format | `--skip-replica-start[={OFF&#124;ON}]` |'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--skip-replica-start[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[skip_replica_start](replication-options-replica.html#sysvar_skip_replica_start)`
    |'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[skip_replica_start](replication-options-replica.html#sysvar_skip_replica_start)`
    |'
- en: '| Scope | Global |'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `OFF` |'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, use [`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)
    in place of [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start).
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，请使用 [`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)
    替代 [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)，后者在该版本中已被弃用。在
    MySQL 8.0.26 之前的版本中，请使用 [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)。
- en: '[`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)
    tells the replica server not to start the replication I/O (receiver) and SQL (applier)
    threads when the server starts. To start the threads later, use a [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement.'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)
    告诉复制服务器在启动时不要启动复制 I/O（接收器）和 SQL（应用程序）线程。要稍后启动线程，请使用 [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA 语句") 语句。'
- en: You can use the [`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)
    system variable in place of the command line option to allow access to this feature
    using MySQL Server’s privilege structure, so that database administrators do not
    need any privileged access to the operating system.
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以使用 [`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)
    系统变量代替命令行选项，以允许通过 MySQL 服务器的权限结构访问此功能，从而数据库管理员无需任何操作系统的特权访问。
- en: '[`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)'
- en: '| Command-Line Format | `--skip-slave-start[={OFF&#124;ON}]` |'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--skip-slave-start[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[skip_slave_start](replication-options-replica.html#sysvar_skip_slave_start)`
    |'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[skip_slave_start](replication-options-replica.html#sysvar_skip_slave_start)`
    |'
- en: '| Scope | Global |'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `OFF` |'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)
    is deprecated and the alias [`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)
    should be used instead. In releases before MySQL 8.0.26, use [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start).
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)
    已被弃用，应改用别名 [`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)。在
    MySQL 8.0.26 之前的版本中，请使用 [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)。
- en: Tells the replica server not to start the replication I/O (receiver) and SQL
    (applier) threads when the server starts. To start the threads later, use a [`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement") statement.
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 告诉复制服务器在启动时不要启动复制 I/O（接收器）和 SQL（应用程序）线程。要稍后启动线程，请使用 [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA 语句") 语句。
- en: From MySQL 8.0.24, you can use the [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)
    system variable in place of the command line option to allow access to this feature
    using MySQL Server’s privilege structure, so that database administrators do not
    need any privileged access to the operating system.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.24开始，您可以使用[`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)系统变量来代替命令行选项，以允许使用MySQL服务器的权限结构访问此功能，这样数据库管理员就不需要对操作系统拥有任何特权访问。
- en: '[`--slave-skip-errors=[*`err_code1`*,*`err_code2`*,...|all|ddl_exist_errors]`](replication-options-replica.html#option_mysqld_slave-skip-errors)'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--slave-skip-errors=[*`err_code1`*,*`err_code2`*,...|all|ddl_exist_errors]`](replication-options-replica.html#option_mysqld_slave-skip-errors)'
- en: '| Command-Line Format | `--slave-skip-errors=name` |'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-skip-errors=name` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_skip_errors](replication-options-replica.html#sysvar_slave_skip_errors)`
    |'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_skip_errors](replication-options-replica.html#sysvar_slave_skip_errors)`
    |'
- en: '| Scope | Global |'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `OFF` |'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: '| Valid Values | `OFF``[list of error codes]``all``ddl_exist_errors` |'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `OFF``[错误代码列表]``all``ddl_exist_errors` |'
- en: Normally, replication stops when an error occurs on the replica, which gives
    you the opportunity to resolve the inconsistency in the data manually. This option
    causes the replication SQL thread to continue replication when a statement returns
    any of the errors listed in the option value.
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常，当副本发生错误时，复制会停止，这为您提供了手动解决数据不一致性的机会。此选项使复制SQL线程在语句返回选项值中列出的任何错误时继续复制。
- en: Do not use this option unless you fully understand why you are getting errors.
    If there are no bugs in your replication setup and client programs, and no bugs
    in MySQL itself, an error that stops replication should never occur. Indiscriminate
    use of this option results in replicas becoming hopelessly out of synchrony with
    the source, with you having no idea why this has occurred.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除非您完全理解为什么会出现错误，否则不要使用此选项。如果您的复制设置和客户端程序中没有错误，MySQL本身也没有错误，那么应该永远不会发生导致复制停止的错误。滥用此选项会导致副本与源头彻底失去同步，而您却不知道为什么会发生这种情况。
- en: For error codes, you should use the numbers provided by the error message in
    your replica's error log and in the output of [`SHOW REPLICA STATUS`](show-replica-status.html
    "15.7.7.35 SHOW REPLICA STATUS Statement"). [Appendix B, *Error Messages and Common
    Problems*](error-handling.html "Appendix B Error Messages and Common Problems"),
    lists server error codes.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于错误代码，您应该使用副本错误日志和[`SHOW REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW
    REPLICA STATUS Statement")输出中提供的错误消息中的数字。[附录 B，*错误消息和常见问题*](error-handling.html
    "附录 B 错误消息和常见问题")列出了服务器错误代码。
- en: The shorthand value `ddl_exist_errors` is equivalent to the error code list
    `1007,1008,1050,1051,1054,1060,1061,1068,1094,1146`.
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 简写值`ddl_exist_errors`等同于错误代码列表`1007,1008,1050,1051,1054,1060,1061,1068,1094,1146`。
- en: You can also (but should not) use the very nonrecommended value of `all` to
    cause the replica to ignore all error messages and keeps going regardless of what
    happens. Needless to say, if you use `all`, there are no guarantees regarding
    the integrity of your data. Please do not complain (or file bug reports) in this
    case if the replica's data is not anywhere close to what it is on the source.
    *You have been warned*.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以（但不应该）使用非常不推荐的值`all`，使副本忽略所有错误消息并继续进行，无论发生什么情况。不用说，如果您使用`all`，则关于数据完整性就没有任何保证。如果副本的数据与源头的数据差距很大，请不要在这种情况下抱怨（或提交错误报告）。*您已经被警告*。
- en: This option does not work in the same way when replicating between NDB Clusters,
    due to the internal [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0")
    mechanism for checking epoch sequence numbers; normally, as soon as `NDB` detects
    an epoch number that is missing or otherwise out of sequence, it immediately stops
    the replica applier thread. Beginning with NDB 8.0.28, you can override this behavior
    by also specifying [`--ndb-applier-allow-skip-epoch`](mysql-cluster-options-variables.html#option_mysqld_ndb-applier-allow-skip-epoch)
    together with `--slave-skip-errors`; doing so causes `NDB` to ignore skipped epoch
    transactions.
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在复制 NDB 集群之间时，此选项的工作方式与复制内部[`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster
    8.0")机制检查时期序列号不同；通常，一旦`NDB`检测到缺失或其他序列不正确的时期号，它立即停止副本应用程序线程。从 NDB 8.0.28 开始，您可以通过同时指定[`--ndb-applier-allow-skip-epoch`](mysql-cluster-options-variables.html#option_mysqld_ndb-applier-allow-skip-epoch)和`--slave-skip-errors`来覆盖此行为；这样做会导致`NDB`忽略跳过的时期事务。
- en: 'Examples:'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '示例:'
- en: '[PRE10]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[`--slave-sql-verify-checksum={0|1}`](replication-options-replica.html#option_mysqld_slave-sql-verify-checksum)'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--slave-sql-verify-checksum={0|1}`](replication-options-replica.html#option_mysqld_slave-sql-verify-checksum)'
- en: '| Command-Line Format | `--slave-sql-verify-checksum[={OFF&#124;ON}]` |'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-sql-verify-checksum[={OFF&#124;ON}]` |'
- en: '| Type | Boolean |'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: When this option is enabled, the replica examines checksums read from the relay
    log. In the event of a mismatch, the replica stops with an error.
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此选项时，副本会检查从中继日志中读取的校验和。如果不匹配，则副本会出现错误。
- en: The following options are used internally by the MySQL test suite for replication
    testing and debugging. They are not intended for use in a production setting.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 以下选项仅在 MySQL 测试套件内部用于复制测试和调试。不适用于生产环境。
- en: '[`--abort-slave-event-count`](replication-options-replica.html#option_mysqld_abort-slave-event-count)'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--abort-slave-event-count`](replication-options-replica.html#option_mysqld_abort-slave-event-count)'
- en: '| Command-Line Format | `--abort-slave-event-count=#` |'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--abort-slave-event-count=#` |'
- en: '| Deprecated | 8.0.29 |'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.29 |'
- en: '| Type | Integer |'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: 'When this option is set to some positive integer *`value`* other than 0 (the
    default) it affects replication behavior as follows: After the replication SQL
    thread has started, *`value`* log events are permitted to be executed; after that,
    the replication SQL thread does not receive any more events, just as if the network
    connection from the source were cut. The replication SQL thread continues to run,
    and the output from [`SHOW REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW
    REPLICA STATUS Statement") displays `Yes` in both the `Replica_IO_Running` and
    the `Replica_SQL_Running` columns, but no further events are read from the relay
    log.'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当将此选项设置为除 0（默认值）之外的某个正整数*`value`*时，它会影响复制行为如下：在复制 SQL 线程启动后，允许执行*`value`*个日志事件；之后，复制
    SQL 线程不再接收任何事件，就好像源端的网络连接被切断一样。复制 SQL 线程继续运行，并且[`SHOW REPLICA STATUS`](show-replica-status.html
    "15.7.7.35 SHOW REPLICA STATUS Statement")的输出在`Replica_IO_Running`和`Replica_SQL_Running`列中都显示`Yes`，但不再从中继日志中读取更多事件。
- en: This option is used internally by the MySQL test suite for replication testing
    and debugging. It is not intended for use in a production setting. Beginning with
    MySQL 8.0.29, it is deprecated, and subject to removal in a future version of
    MySQL.
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项仅在 MySQL 测试套件内部用于复制测试和调试。不适用于生产环境。从 MySQL 8.0.29 开始，已弃用，并可能在将来的 MySQL 版本中移除。
- en: '[`--disconnect-slave-event-count`](replication-options-replica.html#option_mysqld_disconnect-slave-event-count)'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--disconnect-slave-event-count`](replication-options-replica.html#option_mysqld_disconnect-slave-event-count)'
- en: '| Command-Line Format | `--disconnect-slave-event-count=#` |'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--disconnect-slave-event-count=#` |'
- en: '| Deprecated | 8.0.29 |'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.29 |'
- en: '| Type | Integer |'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: This option is used internally by the MySQL test suite for replication testing
    and debugging. It is not intended for use in a production setting. Beginning with
    MySQL 8.0.29, it is deprecated, and subject to removal in a future version of
    MySQL.
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项仅在 MySQL 测试套件内部用于复制测试和调试。不适用于生产环境。从 MySQL 8.0.29 开始，已弃用，并可能在将来的 MySQL 版本中移除。
- en: System Variables Used on Replica Servers
  id: totrans-236
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 用于副本服务器的系统变量
- en: The following list describes system variables for controlling replica servers.
    They can be set at server startup and some of them can be changed at runtime using
    [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment"). Server
    options used with replicas are listed earlier in this section.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了用于控制复制服务器的系统变量。它们可以在服务器启动时设置，其中一些可以在运行时使用 [`SET`](set-variable.html "15.7.6.1 变量赋值的
    SET 语法") 进行更改。用于复制的服务器选项在本节的前面列出。
- en: '[`init_replica`](replication-options-replica.html#sysvar_init_replica)'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`init_replica`](replication-options-replica.html#sysvar_init_replica)'
- en: '| Command-Line Format | `--init-replica=name` |'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--init-replica=name` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入 | 8.0.26 |'
- en: '| System Variable | `[init_replica](replication-options-replica.html#sysvar_init_replica)`
    |'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[init_replica](replication-options-replica.html#sysvar_init_replica)`
    |'
- en: '| Scope | Global |'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: From MySQL 8.0.26, use [`init_replica`](replication-options-replica.html#sysvar_init_replica)
    in place of [`init_slave`](replication-options-replica.html#sysvar_init_slave),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`init_slave`](replication-options-replica.html#sysvar_init_slave).
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，请使用 [`init_replica`](replication-options-replica.html#sysvar_init_replica)
    代替已在该版本中弃用的 [`init_slave`](replication-options-replica.html#sysvar_init_slave)。在
    MySQL 8.0.26 之前的版本中，请使用 [`init_slave`](replication-options-replica.html#sysvar_init_slave)。
- en: '[`init_replica`](replication-options-replica.html#sysvar_init_replica) is similar
    to [`init_connect`](server-system-variables.html#sysvar_init_connect), but is
    a string to be executed by a replica server each time the replication SQL thread
    starts. The format of the string is the same as for the [`init_connect`](server-system-variables.html#sysvar_init_connect)
    variable. The setting of this variable takes effect for subsequent [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statements.'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`init_replica`](replication-options-replica.html#sysvar_init_replica) 类似于
    [`init_connect`](server-system-variables.html#sysvar_init_connect)，但是是每次复制 SQL
    线程启动时由复制服务器执行的字符串。该字符串的格式与 [`init_connect`](server-system-variables.html#sysvar_init_connect)
    变量相同。此变量的设置将对后续的 [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    语句") 生效。'
- en: Note
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The replication SQL thread sends an acknowledgment to the client before it executes
    [`init_replica`](replication-options-replica.html#sysvar_init_replica). Therefore,
    it is not guaranteed that [`init_replica`](replication-options-replica.html#sysvar_init_replica)
    has been executed when [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    Statement") returns. See [Section 15.4.2.6, “START REPLICA Statement”](start-replica.html
    "15.4.2.6 START REPLICA Statement") for more information.
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制 SQL 线程在执行 [`init_replica`](replication-options-replica.html#sysvar_init_replica)
    之前向客户端发送确认。因此，在 [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA 语句")
    返回之前，不能保证已执行 [`init_replica`](replication-options-replica.html#sysvar_init_replica)。有关更多信息，请参见
    [Section 15.4.2.6, “START REPLICA 语句”](start-replica.html "15.4.2.6 START REPLICA
    语句")。
- en: '[`init_slave`](replication-options-replica.html#sysvar_init_slave)'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`init_slave`](replication-options-replica.html#sysvar_init_slave)'
- en: '| Command-Line Format | `--init-slave=name` |'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--init-slave=name` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[init_slave](replication-options-replica.html#sysvar_init_slave)`
    |'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[init_slave](replication-options-replica.html#sysvar_init_slave)`
    |'
- en: '| Scope | Global |'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: From MySQL 8.0.26, [`init_slave`](replication-options-replica.html#sysvar_init_slave)
    is deprecated and the alias [`init_replica`](replication-options-replica.html#sysvar_init_replica)
    should be used instead. In releases before MySQL 8.0.26, use [`init_slave`](replication-options-replica.html#sysvar_init_slave).
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`init_slave`](replication-options-replica.html#sysvar_init_slave)
    已被弃用，应改用别名 [`init_replica`](replication-options-replica.html#sysvar_init_replica)。在
    MySQL 8.0.26 之前的版本中，请使用 [`init_slave`](replication-options-replica.html#sysvar_init_slave)。
- en: '[`init_slave`](replication-options-replica.html#sysvar_init_slave) is similar
    to [`init_connect`](server-system-variables.html#sysvar_init_connect), but is
    a string to be executed by a replica server each time the replication SQL thread
    starts. The format of the string is the same as for the [`init_connect`](server-system-variables.html#sysvar_init_connect)
    variable. The setting of this variable takes effect for subsequent [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statements.'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`init_slave`](replication-options-replica.html#sysvar_init_slave) 类似于 [`init_connect`](server-system-variables.html#sysvar_init_connect)，但是是一个字符串，每次复制
    SQL 线程启动时由副本服务器执行。字符串的格式与 [`init_connect`](server-system-variables.html#sysvar_init_connect)
    变量相同。此变量的设置将对后续的 [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    Statement") 语句生效。'
- en: Note
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The replication SQL thread sends an acknowledgment to the client before it executes
    [`init_slave`](replication-options-replica.html#sysvar_init_slave). Therefore,
    it is not guaranteed that [`init_slave`](replication-options-replica.html#sysvar_init_slave)
    has been executed when [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    Statement") returns. See [Section 15.4.2.6, “START REPLICA Statement”](start-replica.html
    "15.4.2.6 START REPLICA Statement") for more information.
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制 SQL 线程在执行 [`init_slave`](replication-options-replica.html#sysvar_init_slave)
    之前向客户端发送确认。因此，在 [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")
    返回之前，不能保证 [`init_slave`](replication-options-replica.html#sysvar_init_slave) 已执行。有关更多信息，请参见
    [Section 15.4.2.6, “START REPLICA Statement”](start-replica.html "15.4.2.6 START
    REPLICA Statement")。
- en: '[`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)'
- en: '| Command-Line Format | `--log-slow-replica-statements[={OFF&#124;ON}]` |'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-slow-replica-statements[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[log_slow_replica_statements](replication-options-replica.html#sysvar_log_slow_replica_statements)`
    |'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_slow_replica_statements](replication-options-replica.html#sysvar_log_slow_replica_statements)`
    |'
- en: '| Scope | Global |'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, use [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    in place of [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements).
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用 [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    替代从该版本开始弃用的 [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)。在
    MySQL 8.0.26 之前的版本中，请使用 [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)。
- en: When the slow query log is enabled, [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    enables logging for queries that have taken more than [`long_query_time`](server-system-variables.html#sysvar_long_query_time)
    seconds to execute on the replica. Note that if row-based replication is in use
    ([`binlog_format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)),
    [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    has no effect. Queries are only added to the replica's slow query log when they
    are logged in statement format in the binary log, that is, when [`binlog_format=STATEMENT`](replication-options-binary-log.html#sysvar_binlog_format)
    is set, or when [`binlog_format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)
    is set and the statement is logged in statement format. Slow queries that are
    logged in row format when [`binlog_format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)
    is set, or that are logged when [`binlog_format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)
    is set, are not added to the replica's slow query log, even if [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    is enabled.
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当慢查询日志启用时，[`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    启用记录在副本上执行时间超过 [`long_query_time`](server-system-variables.html#sysvar_long_query_time)
    秒的查询。请注意，如果使用基于行的复制（[`binlog_format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)），则
    [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    不起作用。仅当以语句格式在二进制日志中记录查询时，即设置 [`binlog_format=STATEMENT`](replication-options-binary-log.html#sysvar_binlog_format)
    或设置 [`binlog_format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)
    且语句以语句格式记录时，才将查询添加到副本的慢查询日志中。即使启用了 [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)，当以行格式记录慢查询时，当设置
    [`binlog_format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)
    时，或者当设置 [`binlog_format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)
    时记录时，这些慢查询不会添加到副本的慢查询日志中。
- en: Setting [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    has no immediate effect. The state of the variable applies on all subsequent [`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement") statements. Also
    note that the global setting for [`long_query_time`](server-system-variables.html#sysvar_long_query_time)
    applies for the lifetime of the SQL thread. If you change that setting, you must
    stop and restart the replication SQL thread to implement the change there (for
    example, by issuing [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA
    Statement") and [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")
    statements with the `SQL_THREAD` option).
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置 [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    没有立即效果。该变量的状态适用于所有后续的 [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    Statement") 语句。还要注意，全局设置的 [`long_query_time`](server-system-variables.html#sysvar_long_query_time)
    适用于 SQL 线程的生命周期。如果更改了该设置，必须停止并重新启动复制 SQL 线程以实施更改（例如，通过使用带有 `SQL_THREAD` 选项的 [`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") 和 [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") 语句）。
- en: '[`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)'
- en: '| Command-Line Format | `--log-slow-slave-statements[={OFF&#124;ON}]` |'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-slow-slave-statements[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[log_slow_slave_statements](replication-options-replica.html#sysvar_log_slow_slave_statements)`
    |'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_slow_slave_statements](replication-options-replica.html#sysvar_log_slow_slave_statements)`
    |'
- en: '| Scope | Global |'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    is deprecated and the alias [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)
    should be used instead. In releases before MySQL 8.0.26, use [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements).
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    已被弃用，应改用别名 [`log_slow_replica_statements`](replication-options-replica.html#sysvar_log_slow_replica_statements)。在
    MySQL 8.0.26 之前的版本中，请使用 [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)。
- en: When the slow query log is enabled, [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    enables logging for queries that have taken more than [`long_query_time`](server-system-variables.html#sysvar_long_query_time)
    seconds to execute on the replica. Note that if row-based replication is in use
    ([`binlog_format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)),
    [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    has no effect. Queries are only added to the replica's slow query log when they
    are logged in statement format in the binary log, that is, when [`binlog_format=STATEMENT`](replication-options-binary-log.html#sysvar_binlog_format)
    is set, or when [`binlog_format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)
    is set and the statement is logged in statement format. Slow queries that are
    logged in row format when [`binlog_format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)
    is set, or that are logged when [`binlog_format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)
    is set, are not added to the replica's slow query log, even if [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    is enabled.
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当慢查询日志被启用时，[`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    会记录在副本上执行时间超过[`long_query_time`](server-system-variables.html#sysvar_long_query_time)秒的查询。请注意，如果使用基于行的复制（[`binlog_format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)），[`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    不会生效。只有当查询以语句格式在二进制日志中记录时，即当设置[`binlog_format=STATEMENT`](replication-options-binary-log.html#sysvar_binlog_format)，或者当设置[`binlog_format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)并且语句以语句格式记录时，查询才会被添加到副本的慢查询日志中。即使启用了[`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)，当以行格式记录慢查询时，当设置[`binlog_format=MIXED`](replication-options-binary-log.html#sysvar_binlog_format)时，或者当设置[`binlog_format=ROW`](replication-options-binary-log.html#sysvar_binlog_format)时记录时，这些慢查询也不会被添加到副本的慢查询日志中。
- en: Setting [`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    has no immediate effect. The state of the variable applies on all subsequent [`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement") statements. Also
    note that the global setting for [`long_query_time`](server-system-variables.html#sysvar_long_query_time)
    applies for the lifetime of the SQL thread. If you change that setting, you must
    stop and restart the replication SQL thread to implement the change there (for
    example, by issuing [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA
    Statement") and [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")
    statements with the `SQL_THREAD` option).
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置[`log_slow_slave_statements`](replication-options-replica.html#sysvar_log_slow_slave_statements)
    没有立即生效。该变量的状态适用于所有后续的[`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    Statement")语句。还要注意，全局设置的[`long_query_time`](server-system-variables.html#sysvar_long_query_time)适用于SQL线程的生命周期。如果更改了该设置，必须停止并重新启动复制SQL线程以在那里实施更改（例如，通过使用带有`SQL_THREAD`选项的[`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")和[`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement")语句）。
- en: '[`master_info_repository`](replication-options-replica.html#sysvar_master_info_repository)'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`master_info_repository`](replication-options-replica.html#sysvar_master_info_repository)'
- en: '| Command-Line Format | `--master-info-repository={FILE&#124;TABLE}` |'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--master-info-repository={FILE&#124;TABLE}` |'
- en: '| Deprecated | 8.0.23 |'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.23 |'
- en: '| System Variable | `[master_info_repository](replication-options-replica.html#sysvar_master_info_repository)`
    |'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[master_info_repository](replication-options-replica.html#sysvar_master_info_repository)`
    |'
- en: '| Scope | Global |'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | String |'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `TABLE` |'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `TABLE` |'
- en: '| Valid Values | `FILE``TABLE` |'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `FILE``TABLE` |'
- en: The use of this system variable is now deprecated. The setting `TABLE` is the
    default, and is required when multiple replication channels are configured. The
    alternative setting `FILE` was previously deprecated.
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在已弃用此系统变量的使用。设置`TABLE`是默认值，并且在配置多个复制通道时是必需的。曾经弃用的替代设置`FILE`。
- en: With the default setting, the replica records metadata about the source, consisting
    of status and connection information, to an `InnoDB` table in the `mysql` system
    database named `mysql.slave_master_info`. For more information on the connection
    metadata repository, see [Section 19.2.4, “Relay Log and Replication Metadata
    Repositories”](replica-logs.html "19.2.4 Relay Log and Replication Metadata Repositories").
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认设置下，副本将关于源的元数据（包括状态和连接信息）记录到 `mysql` 系统数据库中的 `mysql.slave_master_info` 表中的
    `InnoDB` 表中。有关连接元数据存储库的更多信息，请参见 [第 19.2.4 节，“中继日志和复制元数据存储库”](replica-logs.html
    "19.2.4 中继日志和复制元数据存储库")。
- en: The `FILE` setting wrote the replica's connection metadata repository to a file,
    which was named `master.info` by default. The name could be changed using the
    [`--master-info-file`](replication-options-replica.html#option_mysqld_master-info-file)
    option.
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`FILE` 设置将副本的连接元数据存储库写入一个文件，默认情况下命名为 `master.info`。可以使用 [`--master-info-file`](replication-options-replica.html#option_mysqld_master-info-file)
    选项更改名称。'
- en: '[`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)'
- en: '| Command-Line Format | `--max-relay-log-size=#` |'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--max-relay-log-size=#` |'
- en: '| System Variable | `[max_relay_log_size](replication-options-replica.html#sysvar_max_relay_log_size)`
    |'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[max_relay_log_size](replication-options-replica.html#sysvar_max_relay_log_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变���设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1073741824` |'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1073741824` |'
- en: '| Unit | bytes |'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `4096` |'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `4096`
    |'
- en: If a write by a replica to its relay log causes the current log file size to
    exceed the value of this variable, the replica rotates the relay logs (closes
    the current file and opens the next one). If [`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)
    is 0, the server uses [`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)
    for both the binary log and the relay log. If [`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)
    is greater than 0, it constrains the size of the relay log, which enables you
    to have different sizes for the two logs. You must set [`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)
    to between 4096 bytes and 1GB (inclusive), or to 0\. The default value is 0\.
    See [Section 19.2.3, “Replication Threads”](replication-threads.html "19.2.3 Replication
    Threads").
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果副本对其中继日志的写入导致当前日志文件大小超过此变量的值，则副本会旋转中继日志（关闭当前文件并打开下一个文件）。如果 [`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)
    为 0，则服务器对二进制日志和中继日志均使用 [`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)。如果
    [`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)
    大于 0，则限制中继日志的大小，这使您可以为两个日志设置不同的大小。必须将 [`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)
    设置为介于 4096 字节和 1GB（包括）之间，或为 0。默认值为 0。请参阅 [第 19.2.3 节，“复制线程”](replication-threads.html
    "19.2.3 复制线程")。
- en: '[`relay_log`](replication-options-replica.html#sysvar_relay_log)'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`relay_log`](replication-options-replica.html#sysvar_relay_log)'
- en: '| Command-Line Format | `--relay-log=file_name` |'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log=file_name` |'
- en: '| System Variable | `[relay_log](replication-options-replica.html#sysvar_relay_log)`
    |'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log](replication-options-replica.html#sysvar_relay_log)` |'
- en: '| Scope | Global |'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | File name |'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: The base name for relay log files. For the default replication channel, the
    default base name for relay logs is `*`host_name`*-relay-bin`. For non-default
    replication channels, the default base name for relay logs is `*`host_name`*-relay-bin-*`channel`*`,
    where *`channel`* is the name of the replication channel recorded in this relay
    log.
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 中继日志文件的基本名称。对于默认复制通道，中继日志的默认基本名称为 `*`host_name`*-relay-bin`。对于非默认复制通道，中继日志的默认基本名称为
    `*`host_name`*-relay-bin-*`channel`*`，其中 *`channel`* 是此中继日志中记录的复制通道的名称。
- en: The server writes the file in the data directory unless the base name is given
    with a leading absolute path name to specify a different directory. The server
    creates relay log files in sequence by adding a numeric suffix to the base name.
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器将文件写入数据目录，除非使用具有前导绝对路径名的基本名称来指定不同目录。服务器通过向基本名称添加数字后缀按顺序创建中继日志文件。
- en: The relay log and relay log index on a replication server cannot be given the
    same names as the binary log and binary log index, whose names are specified by
    the [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin) and
    [`--log-bin-index`](replication-options-binary-log.html#option_mysqld_log-bin-index)
    options. The server issues an error message and does not start if the binary log
    and relay log file base names would be the same.
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在复制服务器上，中继日志和中继日志索引不能与由[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)和[`--log-bin-index`](replication-options-binary-log.html#option_mysqld_log-bin-index)选项指定的二进制日志和二进制日志索引具有相同的名称。如果二��制日志和中继日志文件基本名称相同，服务器会发出错误消息并且不会启动。
- en: Due to the manner in which MySQL parses server options, if you specify this
    variable at server startup, you must supply a value; *the default base name is
    used only if the option is not actually specified*. If you specify the [`relay_log`](replication-options-replica.html#sysvar_relay_log)
    system variable at server startup without specifying a value, unexpected behavior
    is likely to result; this behavior depends on the other options used, the order
    in which they are specified, and whether they are specified on the command line
    or in an option file. For more information about how MySQL handles server options,
    see [Section 6.2.2, “Specifying Program Options”](program-options.html "6.2.2 Specifying
    Program Options").
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于MySQL解析服务器选项的方式，如果您在服务器启动时指定了这个变量，您必须提供一个值；*只有在实际未指定该选项时才使用默认基本名称*。如果在服务器启动时指定[`relay_log`](replication-options-replica.html#sysvar_relay_log)系统变量而没有指定值，可能会导致意外行为；这取决于使用的其他选项、指定它们的顺序以及它们是在命令行中指定还是在选项文件中指定。有关MySQL如何处理服务器选项的更多信息，请参见[第6.2.2节，“指定程序选项”](program-options.html
    "6.2.2 指定程序选项")。
- en: If you specify this variable, the value specified is also used as the base name
    for the relay log index file. You can override this behavior by specifying a different
    relay log index file base name using the [`relay_log_index`](replication-options-replica.html#sysvar_relay_log_index)
    system variable.
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您指定了这个变量，那么指定的值也将用作中继日志索引文件的基本名称。您可以通过使用[`relay_log_index`](replication-options-replica.html#sysvar_relay_log_index)系统变量指定不同的中继日志索引文件基本名称来覆盖此行为。
- en: When the server reads an entry from the index file, it checks whether the entry
    contains a relative path. If it does, the relative part of the path is replaced
    with the absolute path set using the [`relay_log`](replication-options-replica.html#sysvar_relay_log)
    system variable. An absolute path remains unchanged; in such a case, the index
    must be edited manually to enable the new path or paths to be used.
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当服务器从索引文件中读取条目时，它会检查条目是否包含相对路径。如果包含，路径的相对部分将被使用[`relay_log`](replication-options-replica.html#sysvar_relay_log)系统变量设置的绝对路径替换。绝对路径保持不变；在这种情况下，必须手动编辑索引以启用新路径或路径的使用。
- en: 'You may find the [`relay_log`](replication-options-replica.html#sysvar_relay_log)
    system variable useful in performing the following tasks:'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能会发现[`relay_log`](replication-options-replica.html#sysvar_relay_log)系统变量在执行以下任务时很有用：
- en: Creating relay logs whose names are independent of host names.
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建与主机名无关的中继日志的名称。
- en: If you need to put the relay logs in some area other than the data directory
    because your relay logs tend to be very large and you do not want to decrease
    [`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size).
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您需要将中继日志放在数据目录之外的某个区域，因为您的中继日志往往非常大，并且您不想减少[`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)。
- en: To increase speed by using load-balancing between disks.
  id: totrans-328
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在磁盘之间使用负载平衡来提高速度。
- en: You can obtain the relay log file name (and path) from the [`relay_log_basename`](replication-options-replica.html#sysvar_relay_log_basename)
    system variable.
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以从[`relay_log_basename`](replication-options-replica.html#sysvar_relay_log_basename)系统变量中获取中继日志文件名（和路径）。
- en: '[`relay_log_basename`](replication-options-replica.html#sysvar_relay_log_basename)'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`relay_log_basename`](replication-options-replica.html#sysvar_relay_log_basename)'
- en: '| System Variable | `[relay_log_basename](replication-options-replica.html#sysvar_relay_log_basename)`
    |'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_basename](replication-options-replica.html#sysvar_relay_log_basename)`
    |'
- en: '| Scope | Global |'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | File name |'
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: '| Default Value | `datadir + ''/'' + hostname + ''-relay-bin''` |'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `datadir + ''/'' + hostname + ''-relay-bin''` |'
- en: Holds the base name and complete path to the relay log file. The maximum variable
    length is 256\. This variable is set by the server and is read only.
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保存中继日志文件的基本名称和完整路径。最大变量长度为256。此变量由服务器设置，只读。
- en: '[`relay_log_index`](replication-options-replica.html#sysvar_relay_log_index)'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`relay_log_index`](replication-options-replica.html#sysvar_relay_log_index)'
- en: '| Command-Line Format | `--relay-log-index=file_name` |'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log-index=file_name` |'
- en: '| System Variable | `[relay_log_index](replication-options-replica.html#sysvar_relay_log_index)`
    |'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_index](replication-options-replica.html#sysvar_relay_log_index)`
    |'
- en: '| Scope | Global |'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | File name |'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: '| Default Value | `*host_name*-relay-bin.index` |'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `*host_name*-relay-bin.index` |'
- en: The name for the relay log index file. The maximum variable length is 256\.
    If you do not specify this variable, but the [`relay_log`](replication-options-replica.html#sysvar_relay_log)
    system variable is specified, its value is used as the default base name for the
    relay log index file. If [`relay_log`](replication-options-replica.html#sysvar_relay_log)
    is also not specified, then for the default replication channel, the default name
    is `*`host_name`*-relay-bin.index`, using the name of the host machine. For non-default
    replication channels, the default name is `*`host_name`*-relay-bin-*`channel`*.index`,
    where *`channel`* is the name of the replication channel recorded in this relay
    log index.
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 中继日志索引文件的名称。最大变量长度为256。如果未指定此变量，但指定了[`relay_log`](replication-options-replica.html#sysvar_relay_log)系统变量，则其值将用作中继日志索引文件的默认基本名称。如果[`relay_log`](replication-options-replica.html#sysvar_relay_log)也未指定，则对于默认复制通道，默认名称为`*`host_name`*-relay-bin.index`，使用主机机器的名称。对于非默认复制通道，默认名称为`*`host_name`*-relay-bin-*`channel`*.index`，其中*`channel`*是在此中继日志索引中记录的复制通道的名称。
- en: The default location for relay log files is the data directory, or any other
    location that was specified using the [`relay_log`](replication-options-replica.html#sysvar_relay_log)
    system variable. You can use the [`relay_log_index`](replication-options-replica.html#sysvar_relay_log_index)
    system variable to specify an alternative location, by adding a leading absolute
    path name to the base name to specify a different directory.
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 中继日志文件的默认位置是数据目录，或者使用[`relay_log`](replication-options-replica.html#sysvar_relay_log)系统变量指定的任何其他位置。您可以使用[`relay_log_index`](replication-options-replica.html#sysvar_relay_log_index)系统变量指定替代位置，通过在基本名称前添加一个绝对路径名来指定不同的目录。
- en: The relay log and relay log index on a replication server cannot be given the
    same names as the binary log and binary log index, whose names are specified by
    the [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin) and
    [`--log-bin-index`](replication-options-binary-log.html#option_mysqld_log-bin-index)
    options. The server issues an error message and does not start if the binary log
    and relay log file base names would be the same.
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制服务器上的中继日志和中继日志索引不能与二进制日志和二进制日志索引具有相同的名称，其名称由[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)和[`--log-bin-index`](replication-options-binary-log.html#option_mysqld_log-bin-index)选项指定。如果二进制日志和中继日志文件的基本名称相同，服务器会发出错误消息并且不会启动。
- en: Due to the manner in which MySQL parses server options, if you specify this
    variable at server startup, you must supply a value; *the default base name is
    used only if the option is not actually specified*. If you specify the [`relay_log_index`](replication-options-replica.html#sysvar_relay_log_index)
    system variable at server startup without specifying a value, unexpected behavior
    is likely to result; this behavior depends on the other options used, the order
    in which they are specified, and whether they are specified on the command line
    or in an option file. For more information about how MySQL handles server options,
    see [Section 6.2.2, “Specifying Program Options”](program-options.html "6.2.2 Specifying
    Program Options").
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于 MySQL 解析服务器选项的方式，如果在服务器启动时指定此变量，必须提供一个值；*只有在实际未指定该选项时才使用默认基本名称*。 如果在服务器启动时指定
    [`relay_log_index`](replication-options-replica.html#sysvar_relay_log_index) 系统变量而没有指定值，可能会导致意外行为；此行为取决于使用的其他选项、指定它们的顺序以及它们是在命令行中指定还是在选项文件中指定。
    有关 MySQL 如何处理服务器选项的更多信息，请参见 [第 6.2.2 节，“指定程序选项”](program-options.html "6.2.2 指定程序选项")。
- en: '[`relay_log_info_file`](replication-options-replica.html#sysvar_relay_log_info_file)'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`relay_log_info_file`](replication-options-replica.html#sysvar_relay_log_info_file)'
- en: '| Command-Line Format | `--relay-log-info-file=file_name` |'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log-info-file=file_name` |'
- en: '| Deprecated | 8.0.18 |'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.18 |'
- en: '| System Variable | `[relay_log_info_file](replication-options-replica.html#sysvar_relay_log_info_file)`
    |'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_info_file](replication-options-replica.html#sysvar_relay_log_info_file)`
    |'
- en: '| Scope | Global |'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | File name |'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: '| Default Value | `relay-log.info` |'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `relay-log.info` |'
- en: The use of this system variable is now deprecated. It was used to set the file
    name for the replica's applier metadata repository if [`relay_log_info_repository=FILE`](replication-options-replica.html#sysvar_relay_log_info_repository)
    was set. [`relay_log_info_file`](replication-options-replica.html#sysvar_relay_log_info_file)
    and the use of the [`relay_log_info_repository`](replication-options-replica.html#sysvar_relay_log_info_repository)
    system variable are deprecated because the use of a file for the applier metadata
    repository has been superseded by crash-safe tables. For information about the
    applier metadata repository, see [Section 19.2.4.2, “Replication Metadata Repositories”](replica-logs-status.html
    "19.2.4.2 Replication Metadata Repositories").
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量的使用现已弃用。 如果设置了 [`relay_log_info_repository=FILE`](replication-options-replica.html#sysvar_relay_log_info_repository)，则用于设置复制品的应用程序元数据存储库的文件名。
    [`relay_log_info_file`](replication-options-replica.html#sysvar_relay_log_info_file)
    和 [`relay_log_info_repository`](replication-options-replica.html#sysvar_relay_log_info_repository)
    系统变量的使用已被弃用，因为使用文件作为应用程序元数据存储库已被崩溃安全表取代。 有关应用程序元数据存储库的信息，请参见 [第 19.2.4.2 节，“复制元数据存储库”](replica-logs-status.html
    "19.2.4.2 复制元数据存储库")。
- en: '[`relay_log_info_repository`](replication-options-replica.html#sysvar_relay_log_info_repository)'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`relay_log_info_repository`](replication-options-replica.html#sysvar_relay_log_info_repository)'
- en: '| Command-Line Format | `--relay-log-info-repository=value` |'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log-info-repository=value` |'
- en: '| Deprecated | 8.0.23 |'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.23 |'
- en: '| System Variable | `[relay_log_info_repository](replication-options-replica.html#sysvar_relay_log_info_repository)`
    |'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_info_repository](replication-options-replica.html#sysvar_relay_log_info_repository)`
    |'
- en: '| Scope | Global |'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `TABLE` |'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `TABLE` |'
- en: '| Valid Values | `FILE``TABLE` |'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `FILE``TABLE` |'
- en: The use of this system variable is now deprecated. The setting `TABLE` is the
    default, and is required when multiple replication channels are configured. The
    `TABLE` setting for the replica's applier metadata repository is also required
    to make replication resilient to unexpected halts. See [Section 19.4.2, “Handling
    an Unexpected Halt of a Replica”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 Handling an Unexpected Halt of a Replica") for more information. The alternative
    setting `FILE` was previously deprecated.
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量的使用现已不推荐。`TABLE` 是默认设置，当配置多个复制通道时，必须使用 `TABLE` 设置。副本的应用程序元数据存储库也需要 `TABLE`
    设置，以使复制对意外停止具有弹性。有关更多信息，请参见 [Section 19.4.2, “Handling an Unexpected Halt of a
    Replica”](replication-solutions-unexpected-replica-halt.html "19.4.2 Handling
    an Unexpected Halt of a Replica")。曾经不推荐使用替代设置 `FILE`。
- en: With the default setting, the replica stores its applier metadata repository
    as an `InnoDB` table in the `mysql` system database named `mysql.slave_relay_log_info`.
    For more information on the applier metadata repository, see [Section 19.2.4,
    “Relay Log and Replication Metadata Repositories”](replica-logs.html "19.2.4 Relay
    Log and Replication Metadata Repositories").
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认设置下，副本将其应用程序元数据存储库存储为 `InnoDB` 表，存储在名为 `mysql.slave_relay_log_info` 的 `mysql`
    系统数据库中。有关应用程序元数据存储库的更多信息，请参见 [Section 19.2.4, “Relay Log and Replication Metadata
    Repositories”](replica-logs.html "19.2.4 Relay Log and Replication Metadata Repositories")。
- en: The `FILE` setting wrote the replica's applier metadata repository to a file,
    which was named `relay-log.info` by default. The name could be changed using the
    [`relay_log_info_file`](replication-options-replica.html#sysvar_relay_log_info_file)
    system variable.
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，`FILE` 设置将副本的应用程序元数据存储库写入文件，默认情况下命名为 `relay-log.info`。可以使用 [`relay_log_info_file`](replication-options-replica.html#sysvar_relay_log_info_file)
    系统变量更改名称。
- en: '[`relay_log_purge`](replication-options-replica.html#sysvar_relay_log_purge)'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`relay_log_purge`](replication-options-replica.html#sysvar_relay_log_purge)'
- en: '| Command-Line Format | `--relay-log-purge[={OFF&#124;ON}]` |'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log-purge[={OFF&#124;ON}]` |'
- en: '| System Variable | `[relay_log_purge](replication-options-replica.html#sysvar_relay_log_purge)`
    |'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_purge](replication-options-replica.html#sysvar_relay_log_purge)`
    |'
- en: '| Scope | Global |'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Disables or enables automatic purging of relay log files as soon as they are
    not needed any more. The default value is 1 (`ON`).
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 禁用或启用中继日志文件在不再需要时立即清除。默认值为 1（`ON`）。
- en: '[`relay_log_recovery`](replication-options-replica.html#sysvar_relay_log_recovery)'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`relay_log_recovery`](replication-options-replica.html#sysvar_relay_log_recovery)'
- en: '| Command-Line Format | `--relay-log-recovery[={OFF&#124;ON}]` |'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log-recovery[={OFF&#124;ON}]` |'
- en: '| System Variable | `[relay_log_recovery](replication-options-replica.html#sysvar_relay_log_recovery)`
    |'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_recovery](replication-options-replica.html#sysvar_relay_log_recovery)`
    |'
- en: '| Scope | Global |'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: If enabled, this variable enables automatic relay log recovery immediately following
    server startup. The recovery process creates a new relay log file, initializes
    the SQL (applier) thread position to this new relay log, and initializes the I/O
    (receiver) thread to the applier thread position. Reading of the relay log from
    the source then continues. If `SOURCE_AUTO_POSITION=1` was set for the replication
    channel using the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") option, the source position
    used to start replication might be the one received in the connection and not
    the ones assigned in this process.
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用此变量，它将在服务器启动后立即启用自动中继日志恢复。恢复过程将创建一个新的中继日志文件，将 SQL（应用程序）线程位置初始化为此新中继日志，并将
    I/O（接收器）线程初始化为应用程序线程位置。然后继续从源读取中继日志。如果为使用 [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") 选项为复制通道设置了 `SOURCE_AUTO_POSITION=1`，则用于启动复制的源位置可能是在连接中接收到的位置，而不是在此过程中分配的位置。
- en: This global variable is read-only at runtime. Its value can be set with the
    [`--relay-log-recovery`](replication-options-replica.html#sysvar_relay_log_recovery)
    option at replica server startup, which should be used following an unexpected
    halt of a replica to ensure that no possibly corrupted relay logs are processed,
    and must be used in order to guarantee a crash-safe replica. The default value
    is 0 (disabled). For information on the combination of settings on a replica that
    is most resilient to unexpected halts, see [Section 19.4.2, “Handling an Unexpected
    Halt of a Replica”](replication-solutions-unexpected-replica-halt.html "19.4.2 Handling
    an Unexpected Halt of a Replica").
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此全局变量在运行时是只读的。可以在复制服务器启动时使用[`--relay-log-recovery`](replication-options-replica.html#sysvar_relay_log_recovery)选项设置其值，该选项应在复制品意外停止后使用，以确保不处理可能损坏的中继日志，并且必须使用以确保崩溃安全的复制品。默认值为0（禁用）。有关在复制品上设置的组合设置，以使其对意外停止最具弹性，请参见[第19.4.2节，“处理复制品意外停止”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 处理复制品意外停止")。
- en: For a multithreaded replica (where [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is greater than 0), setting [`--relay-log-recovery`](replication-options-replica.html#sysvar_relay_log_recovery)
    at startup automatically handles any inconsistencies and gaps in the sequence
    of transactions that have been executed from the relay log. These gaps can occur
    when file position based replication is in use. (For more details, see [Section 19.5.1.34,
    “Replication and Transaction Inconsistencies”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 Replication and Transaction Inconsistencies").) The relay log recovery
    process deals with gaps using the same method as the [`START REPLICA UNTIL SQL_AFTER_MTS_GAPS`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement would. When the replica reaches
    a consistent gap-free state, the relay log recovery process goes on to fetch further
    transactions from the source beginning at the SQL (applier) thread position. When
    GTID-based replication is in use, from MySQL 8.0.18 a multithreaded replica checks
    first whether `MASTER_AUTO_POSITION` is set to `ON`, and if it is, omits the step
    of calculating the transactions that should be skipped or not skipped, so that
    the old relay logs are not required for the recovery process.
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于多线程复制品（其中[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)大于0），在启动时设置[`--relay-log-recovery`](replication-options-replica.html#sysvar_relay_log_recovery)会自动处理已从中继日志执行的事务序列中的任何不一致和间隙。当使用基于文件位置的复制时，这些间隙可能会发生。（有关更多详细信息，请参见[第19.5.1.34节，“复制和事务不一致性”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 复制和事务不一致性")。）中继日志恢复过程使用与[`START REPLICA UNTIL SQL_AFTER_MTS_GAPS`](start-replica.html
    "15.4.2.6 START REPLICA Statement")语句相同的方法处理间隙。当复制品达到一致的无间隙状态时，中继日志恢复过程继续从源处获取进一步的事务，从SQL（应用程序）线程位置开始。当使用基于GTID的复制时，从MySQL
    8.0.18开始，多线程复制品首先检查`MASTER_AUTO_POSITION`是否设置为`ON`，如果是，则省略计算应跳过或不跳过的事务的步骤，因此不需要旧的中继日志进行恢复过程。
- en: Note
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'This variable does not affect the following Group Replication channels:'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量不会影响以下Group Replication通道：
- en: '`group_replication_applier`'
  id: totrans-395
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`group_replication_applier`'
- en: '`group_replication_recovery`'
  id: totrans-396
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`group_replication_recovery`'
- en: Any other channels running on a group are affected, such as a channel which
    is replicating from an outside source or another group.
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 任何其他在组上运行的通道都会受到影响，例如从外部来源或另一个组复制的通道。
- en: '[`relay_log_space_limit`](replication-options-replica.html#sysvar_relay_log_space_limit)'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`relay_log_space_limit`](replication-options-replica.html#sysvar_relay_log_space_limit)'
- en: '| Command-Line Format | `--relay-log-space-limit=#` |'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--relay-log-space-limit=#` |'
- en: '| System Variable | `[relay_log_space_limit](replication-options-replica.html#sysvar_relay_log_space_limit)`
    |'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[relay_log_space_limit](replication-options-replica.html#sysvar_relay_log_space_limit)`
    |'
- en: '| Scope | Global |'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `18446744073709551615` |'
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `18446744073709551615` |'
- en: '| Unit | bytes |'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: The maximum amount of space to use for all relay logs.
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于所有中继日志的最大空间量。
- en: '[`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)'
- en: '| Command-Line Format | `--replica-checkpoint-group=#` |'
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-checkpoint-group=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_checkpoint_group](replication-options-replica.html#sysvar_replica_checkpoint_group)`
    |'
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_checkpoint_group](replication-options-replica.html#sysvar_replica_checkpoint_group)`
    |'
- en: '| Scope | Global |'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `512` |'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `512` |'
- en: '| Minimum Value | `32` |'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `32` |'
- en: '| Maximum Value | `524280` |'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `524280` |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `8` |'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "Note") |
    `8` |'
- en: From MySQL 8.0.26, use [`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)
    in place of [`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group).
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用[`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)代替[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)，后者从该版本开始已被弃用。在
    MySQL 8.0.26 之前的版本中，请使用[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)。
- en: '[`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)
    sets the maximum number of transactions that can be processed by a multithreaded
    replica before a checkpoint operation is called to update its status as shown
    by [`SHOW REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW REPLICA STATUS
    Statement"). Setting this variable has no effect on replicas for which multithreading
    is not enabled. Setting this variable has no immediate effect. The state of the
    variable applies to all subsequent [`START REPLICA`](start-replica.html "15.4.2.6 START
    REPLICA Statement") statements.'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)
    设置多线程副本在调用检查点操作之前可以处理的最大事务数，如[`SHOW REPLICA STATUS`](show-replica-status.html
    "15.7.7.35 SHOW REPLICA STATUS Statement")所示。设置此变量对未启用多线程的副本没有影响。设置此变量没有立即效果。该变量的状态适用于所有后续的[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句。'
- en: Previously, multithreaded replicas were not supported by NDB Cluster, which
    silently ignored the setting for this variable. This restriction was lifted in
    MySQL 8.0.33.
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，NDB Cluster 不支持多线程副本，对于此变量的设置会被静默忽略。这个限制在 MySQL 8.0.33 中被取消。
- en: This variable works in combination with the [`replica_checkpoint_period`](replication-options-replica.html#sysvar_replica_checkpoint_period)
    system variable in such a way that, when either limit is exceeded, the checkpoint
    is executed and the counters tracking both the number of transactions and the
    time elapsed since the last checkpoint are reset.
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量与[`replica_checkpoint_period`](replication-options-replica.html#sysvar_replica_checkpoint_period)系统变量结合使用，当超过任一限制时，将执行检查点并重置跟踪事务数量和自上次检查点以来经过的时间的计数器。
- en: 'The minimum allowed value for this variable is 32, unless the server was built
    using [`-DWITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug),
    in which case the minimum value is 1\. The effective value is always a multiple
    of 8; you can set it to a value that is not such a multiple, but the server rounds
    it down to the next lower multiple of 8 before storing the value. (*Exception*:
    No such rounding is performed by the debug server.) Regardless of how the server
    was built, the default value is 512, and the maximum allowed value is 524280.'
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '此变量的最小允许值为 32，除非服务器是使用[`-DWITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)构建的，在这种情况下，最小值为
    1。有效值始终是 8 的倍数；您可以将其设置为不是这种倍数的值，但服务器会在存储值之前将其向下舍入到下一个较低的 8 的倍数。(*例外*: 调试服务器不执行此舍入。)无论服务器是如何构建的，默认值都是
    512，最大允许值为 524280。'
- en: '[`replica_checkpoint_period`](replication-options-replica.html#sysvar_replica_checkpoint_period)'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_checkpoint_period`](replication-options-replica.html#sysvar_replica_checkpoint_period)'
- en: '| Command-Line Format | `--replica-checkpoint-period=#` |'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-checkpoint-period=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_checkpoint_period](replication-options-replica.html#sysvar_replica_checkpoint_period)`
    |'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_checkpoint_period](replication-options-replica.html#sysvar_replica_checkpoint_period)`
    |'
- en: '| Scope | Global |'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `300` |'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `300` |'
- en: '| Minimum Value | `1` |'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: '| Unit | milliseconds |'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 毫秒 |'
- en: In MySQL 8.0.26 and later, use [`replica_checkpoint_period`](replication-options-replica.html#sysvar_replica_checkpoint_period)
    in place of [`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period),
    which is deprecated from that release; prior to MySQL 8.0.26, use [`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period).
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.26及更高版本中，使用[`replica_checkpoint_period`](replication-options-replica.html#sysvar_replica_checkpoint_period)代替[`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period)，后者从该版本开始被弃用；在MySQL
    8.0.26之前，请使用[`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period)。
- en: '`replica_checkpoint_period` sets the maximum time (in milliseconds) that is
    allowed to pass before a checkpoint operation is called to update the status of
    a multithreaded replica as shown by [`SHOW REPLICA STATUS`](show-replica-status.html
    "15.7.7.35 SHOW REPLICA STATUS Statement"). Setting this variable has no effect
    on replicas for which multithreading is not enabled. Setting this variable takes
    effect for all replication channels immediately, including running channels.'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`replica_checkpoint_period`设置了允许经过的最长时间（以毫秒为单位），在调用检查点操作以更新多线程副本状态之前。设置此变量对于未启用多线程的副本没有影响。设置此变量立即对所有复制通道生效，包括正在运行的通道。'
- en: Previously, multithreaded replicas were not supported by NDB Cluster, which
    silently ignored the setting for this variable. This restriction was lifted in
    MySQL 8.0.33.
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，NDB Cluster不支持多线程副本，对于这个变量的设置被静默忽略。这个限制在MySQL 8.0.33中被取消。
- en: This variable works in combination with the [`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)
    system variable in such a way that, when either limit is exceeded, the checkpoint
    is executed and the counters tracking both the number of transactions and the
    time elapsed since the last checkpoint are reset.
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量与[`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)系统变量结合使用，当超过任一限制时，将执行检查点并重置跟踪事务数量和自上次检查点以来经过的时间的计数器。
- en: The minimum allowed value for this variable is 1, unless the server was built
    using [`-DWITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug),
    in which case the minimum value is 0\. Regardless of how the server was built,
    the default value is 300 milliseconds, and the maximum possible value is 4294967295
    milliseconds (approximately 49.7 days).
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除非服务器是使用[`-DWITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)构建的，否则此变量的最小允许值为1，此时最小值为0。无论服务器是如何构建的，默认值为300毫秒，最大可能值为4294967295毫秒（约49.7天）。
- en: '[`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)'
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)'
- en: '| Command-Line Format | `--replica-compressed-protocol[={OFF&#124;ON}]` |'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-compressed-protocol[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_compressed_protocol](replication-options-replica.html#sysvar_replica_compressed_protocol)`
    |'
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_compressed_protocol](replication-options-replica.html#sysvar_replica_compressed_protocol)`
    |'
- en: '| Scope | Global |'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, use [`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)
    in place of [`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol),
    which is deprecated. In releases before MySQL 8.0.26, use [`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol).
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，请使用[`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)代替已弃用的[`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)。在MySQL
    8.0.26之前的版本中，请使用[`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)。
- en: '[`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)
    specifies whether to use compression of the source/replica connection protocol
    if both source and replica support it. If this variable is disabled (the default),
    connections are uncompressed. Changes to this variable take effect on subsequent
    connection attempts; this includes after issuing a [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement, as well as reconnections made by
    a running replication I/O (receiver) thread.'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)指定是否在源和副本都支持时使用源/副本连接协议的压缩。如果禁用此变量（默认值），则连接是未压缩的。对此变量的更改将在后续的连接尝试中生效；这包括发出[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句后，以及由正在运行的复制I/O（接收器）线程进行的重新连接。'
- en: Binary log transaction compression (available as of MySQL 8.0.20), which is
    activated by the [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    system variable, can also be used to save bandwidth. If you use binary log transaction
    compression in combination with protocol compression, protocol compression has
    less opportunity to act on the data, but can still compress headers and those
    events and transaction payloads that are uncompressed. For more information on
    binary log transaction compression, see [Section 7.4.4.5, “Binary Log Transaction
    Compression”](binary-log-transaction-compression.html "7.4.4.5 Binary Log Transaction
    Compression").
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 二进制日志事务压缩（自MySQL 8.0.20起可用），由[`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)系统变量激活，也可用于节省带宽。如果将二进制日志事务压缩与协议压缩结合使用，则协议压缩的作用数据减少，但仍可压缩标头以及未压缩的事件和事务有效载荷。有关二进制日志事务压缩的更多信息，请参见[第7.4.4.5节，“二进制日志事务压缩”](binary-log-transaction-compression.html
    "7.4.4.5 Binary Log Transaction Compression")。
- en: If [`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)
    is enabled, it takes precedence over any `SOURCE_COMPRESSION_ALGORITHMS` option
    specified for the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") statement. In this case, connections
    to the source use `zlib` compression if both the source and replica support that
    algorithm. If [`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)
    is disabled, the value of `SOURCE_COMPRESSION_ALGORITHMS` applies. For more information,
    see [Section 6.2.8, “Connection Compression Control”](connection-compression-control.html
    "6.2.8 Connection Compression Control").
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了[`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)，则优先于为[`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement")语句指定的任何`SOURCE_COMPRESSION_ALGORITHMS`选项。在这种情况下，如果源和副本都支持该算法，则源到副本的连接使用`zlib`压缩。如果禁用了[`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)，则应用`SOURCE_COMPRESSION_ALGORITHMS`的值。有关更多信息，请参见[第6.2.8节，“连接压缩控制”](connection-compression-control.html
    "6.2.8 Connection Compression Control")。
- en: '[`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)'
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)'
- en: '| Command-Line Format | `--replica-exec-mode=mode` |'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-exec-mode=mode` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_exec_mode](replication-options-replica.html#sysvar_replica_exec_mode)`
    |'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_exec_mode](replication-options-replica.html#sysvar_replica_exec_mode)`
    |'
- en: '| Scope | Global |'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `IDEMPOTENT` (NDB)`STRICT` (Other) |'
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `幂等`（NDB）`严格`（其他） |'
- en: '| Valid Values | `STRICT``IDEMPOTENT` |'
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `严格``幂等` |'
- en: From MySQL 8.0.26, use [`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)
    in place of [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode).
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用 [`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)
    替代 [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)，后者从该版本开始已被弃用。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)。
- en: '[`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)
    controls how a replication thread resolves conflicts and errors during replication.
    `IDEMPOTENT` mode causes suppression of duplicate-key and no-key-found errors;
    `STRICT` means no such suppression takes place.'
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)
    控制复制线程在复制过程中如何解决冲突和错误。`IDEMPOTENT` 模式会导致重复键和未找到键的错误被抑制；`STRICT` 表示不会发生此类抑制。'
- en: '`IDEMPOTENT` mode is intended for use in multi-source replication, circular
    replication, and some other special replication scenarios for NDB Cluster Replication.
    (See [Section 25.7.10, “NDB Cluster Replication: Bidirectional and Circular Replication”](mysql-cluster-replication-multi-source.html
    "25.7.10 NDB Cluster Replication: Bidirectional and Circular Replication"), and
    [Section 25.7.12, “NDB Cluster Replication Conflict Resolution”](mysql-cluster-replication-conflict-resolution.html
    "25.7.12 NDB Cluster Replication Conflict Resolution"), for more information.)
    NDB Cluster ignores any value explicitly set for [`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode),
    and always treats it as `IDEMPOTENT`.'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`IDEMPOTENT` 模式旨在用于多源复制、循环复制以及一些其他特殊的 NDB 集群复制场景。（详见 [第 25.7.10 节，“NDB 集群复制：双向和循环复制”](mysql-cluster-replication-multi-source.html
    "25.7.10 NDB Cluster Replication: Bidirectional and Circular Replication")，以及
    [第 25.7.12 节，“NDB 集群复制冲突解决”](mysql-cluster-replication-conflict-resolution.html
    "25.7.12 NDB Cluster Replication Conflict Resolution")，获取更多信息。）NDB 集群会忽略为 [`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)
    明确设置的任何值，并始终将其视为 `IDEMPOTENT`。'
- en: In MySQL Server 8.0, `STRICT` mode is the default value.
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL Server 8.0 中，`STRICT` 模式是默认值。
- en: Setting this variable takes immediate effect for all replication channels, including
    running channels.
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此变量会立即对所有复制通道生效，包括正在运行的通道。
- en: For storage engines other than [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0"), *`IDEMPOTENT` mode should be used only when you are absolutely
    sure that duplicate-key errors and key-not-found errors can safely be ignored*.
    It is meant to be used in fail-over scenarios for NDB Cluster where multi-source
    replication or circular replication is employed, and is not recommended for use
    in other cases.
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于除了 [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB 集群 8.0") 外的存储引擎，*只有在您绝对确定重复键错误和未找到键错误可以安全忽略时才应使用
    `IDEMPOTENT` 模式*。它旨在用于 NDB 集群的故障转移场景，其中使用了多源复制或循环复制，并不建议在其他情况下使用。
- en: '[`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)'
- en: '| Command-Line Format | `--replica-load-tmpdir=dir_name` |'
  id: totrans-474
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-load-tmpdir=dir_name` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_load_tmpdir](replication-options-replica.html#sysvar_replica_load_tmpdir)`
    |'
  id: totrans-476
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_load_tmpdir](replication-options-replica.html#sysvar_replica_load_tmpdir)`
    |'
- en: '| Scope | Global |'
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-479
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Directory name |'
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: '| Default Value | `Value of --tmpdir` |'
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `--tmpdir` 的值 |'
- en: From MySQL 8.0.26, use [`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)
    in place of [`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir).
  id: totrans-482
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用 [`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)
    替代 [`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)，后者从该版本开始已被弃用。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)。
- en: '[`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)
    specifies the name of the directory where the replica creates temporary files.
    Setting this variable takes effect for all replication channels immediately, including
    running channels. The variable value is by default equal to the value of the [`tmpdir`](server-system-variables.html#sysvar_tmpdir)
    system variable, or the default that applies when that system variable is not
    specified.'
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)
    指定了副本创建临时文件的目录名称。设置此变量会立即对所有复制通道生效，包括正在运行的通道。该变量的值默认等于[`tmpdir`](server-system-variables.html#sysvar_tmpdir)系统变量的值，或者在未指定该系统变量时适用的默认值。'
- en: When the replication SQL thread replicates a [`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement") statement, it extracts the file to be loaded from the relay log
    into temporary files, and then loads these into the table. If the file loaded
    on the source is huge, the temporary files on the replica are huge, too. Therefore,
    it might be advisable to use this option to tell the replica to put temporary
    files in a directory located in some file system that has a lot of available space.
    In that case, the relay logs are huge as well, so you might also want to set the
    [`relay_log`](replication-options-replica.html#sysvar_relay_log) system variable
    to place the relay logs in that file system.
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当复制 SQL 线程复制[`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement")语句时，它会将要加载的文件从中继日志提取到临时文件中，然后将这些文件加载到表中。如果源上加载的文件很大，副本上的临时文件也很大。因此，建议使用此选项告诉副本将临时文件放在某个具有大量可用空间的文件系统中的目录中。在这种情况下，中继日志也很大，因此您可能还想设置[`relay_log`](replication-options-replica.html#sysvar_relay_log)系统变量将中继日志放在该文件系统中。
- en: The directory specified by this option should be located in a disk-based file
    system (not a memory-based file system) so that the temporary files used to replicate
    [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement") statements can survive
    machine restarts. The directory also should not be one that is cleared by the
    operating system during the system startup process. However, replication can now
    continue after a restart if the temporary files have been removed.
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项指定的目录应位于基于磁盘的文件系统中（而非基于内存的文件系统），以便用于复制[`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement")语句的临时文件可以在机器重新启动时保留。该目录也不应该是在系统启动过程中被操作系统清除的目录。然而，如果临时文件已被删除，复制现在可以在重新启动后继续。
- en: '[`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)'
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)'
- en: '| Command-Line Format | `--replica-max-allowed-packet=#` |'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-max-allowed-packet=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_max_allowed_packet](replication-options-replica.html#sysvar_replica_max_allowed_packet)`
    |'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_max_allowed_packet](replication-options-replica.html#sysvar_replica_max_allowed_packet)`
    |'
- en: '| Scope | Global |'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1073741824` |'
  id: totrans-494
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1073741824` |'
- en: '| Minimum Value | `1024` |'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1024` |'
- en: '| Maximum Value | `1073741824` |'
  id: totrans-496
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1073741824` |'
- en: '| Unit | bytes |'
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `1024` |'
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "Note") |
    `1024` |'
- en: From MySQL 8.0.26, use [`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)
    in place of [`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet).
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，请使用[`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)代替从该版本开始已弃用的[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)。在
    MySQL 8.0.26 之前的版本中，请使用[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)。
- en: '[`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)
    sets the maximum packet size in bytes that the replication SQL (applier)and I/O
    (receiver) threads can handle. Setting this variable takes effect for all replication
    channels immediately, including running channels. It is possible for a source
    to write binary log events longer than its [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    setting once the event header is added. The setting for [`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)
    must be larger than the [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    setting on the source, so that large updates using row-based replication do not
    cause replication to fail.'
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)设置了复制
    SQL（应用程序）和 I/O（接收器）线程可以处理的最大数据包大小（以字节为单位）。设置此变量立即对所有复制通道生效，包括正在运行的通道。一旦添加了事件头，源端可以写入比其[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)设置更长的二进制日志事件。[`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)的设置必须大于源端的[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)设置，以确保使用基于行的复制进行大型更新时不会导致复制失败。'
- en: This global variable always has a value that is a positive integer multiple
    of 1024; if you set it to some value that is not, the value is rounded down to
    the next highest multiple of 1024 for it is stored or used; setting `replica_max_allowed_packet`
    to 0 causes 1024 to be used. (A truncation warning is issued in all such cases.)
    The default and maximum value is 1073741824 (1 GB); the minimum is 1024.
  id: totrans-501
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此全局变量始终具有值，该值是 1024 的正整数倍；如果将其设置为非 1024 的值，则该值将向上舍入为下一个最高的 1024 的倍数以进行存储或使用；将`replica_max_allowed_packet`设置为
    0 会导致使用 1024。（在所有这些情况下都会发出截断警告。）默认值和最大值为 1073741824（1 GB）；最小值�� 1024。
- en: '[`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)'
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)'
- en: '| Command-Line Format | `--replica-net-timeout=#` |'
  id: totrans-503
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-net-timeout=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-504
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_net_timeout](replication-options-replica.html#sysvar_replica_net_timeout)`
    |'
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_net_timeout](replication-options-replica.html#sysvar_replica_net_timeout)`
    |'
- en: '| Scope | Global |'
  id: totrans-506
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-508
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `60` |'
  id: totrans-510
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `60` |'
- en: '| Minimum Value | `1` |'
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `31536000` |'
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `31536000` |'
- en: '| Unit | seconds |'
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 秒 |'
- en: From MySQL 8.0.26, use [`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)
    in place of [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout).
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用[`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)代替从该版本开始已弃用的[`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)。在
    MySQL 8.0.26 之前的版本中，请使用[`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)。
- en: '[`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)
    specifies the number of seconds to wait for more data or a heartbeat signal from
    the source before the replica considers the connection broken, aborts the read,
    and tries to reconnect. Setting this variable has no immediate effect. The state
    of the variable applies on all subsequent [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") commands.'
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)指定了复制品在从源端等待更多数据或心跳信号之前的秒数，如果复制品认为连接中断，则中止读取并尝试重新连接。设置此变量不会立即生效。变量的状态适用于所有后续的[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")命令。'
- en: The default value is 60 seconds (one minute). The first retry occurs immediately
    after the timeout. The interval between retries is controlled by the `SOURCE_CONNECT_RETRY`
    option for the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") statement, and the number of
    reconnection attempts is limited by the `SOURCE_RETRY_COUNT` option.
  id: totrans-516
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为 60 秒（一分钟）。超时后立即进行第一次重试。重试间隔由[`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement")���句的`SOURCE_CONNECT_RETRY`选项控制，重新连接尝试次数由`SOURCE_RETRY_COUNT`选项限制。
- en: The heartbeat interval, which stops the connection timeout occurring in the
    absence of data if the connection is still good, is controlled by the `SOURCE_HEARTBEAT_PERIOD`
    option for the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") statement. The heartbeat interval
    defaults to half the value of [`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout),
    and it is recorded in the replica's connection metadata repository and shown in
    the [`replication_connection_configuration`](performance-schema-replication-connection-configuration-table.html
    "29.12.11.1 The replication_connection_configuration Table") Performance Schema
    table. Note that a change to the value or default setting of [`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)
    does not automatically change the heartbeat interval, whether that has been set
    explicitly or is using a previously calculated default. If the connection timeout
    is changed, you must also issue [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") to adjust the heartbeat interval
    to an appropriate value so that it occurs before the connection timeout.
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 心跳间隔由 [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE
    REPLICATION SOURCE TO Statement") 语句的 `SOURCE_HEARTBEAT_PERIOD` 选项控制，该选项防止在连接仍然良好的情况下在没有数据的情况下发生连接超时。心跳间隔默认为
    [`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)
    值的一半，并记录在副本的连接元数据存储库中，并显示在 [`replication_connection_configuration`](performance-schema-replication-connection-configuration-table.html
    "29.12.11.1 The replication_connection_configuration Table") 性能模式表中。请注意，对于 [`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)
    的值或默认设置的更改不会自动更改心跳间隔，无论是显式设置还是使用先前计算的默认值。如果更改连接超时时间，您还必须发出 [`CHANGE REPLICATION
    SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION SOURCE
    TO Statement") 来调整心跳间隔到一个适当的值，以便在连接超时之前发生。
- en: '[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)'
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)'
- en: '| Command-Line Format | `--replica-parallel-type=value` |'
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-parallel-type=value` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| Deprecated | 8.0.29 |'
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.29 |'
- en: '| System Variable | `[replica_parallel_type](replication-options-replica.html#sysvar_replica_parallel_type)`
    |'
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_parallel_type](replication-options-replica.html#sysvar_replica_parallel_type)`
    |'
- en: '| Scope | Global |'
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-524
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-526
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value (≥ 8.0.27) | `LOGICAL_CLOCK` |'
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≥ 8.0.27） | `LOGICAL_CLOCK` |'
- en: '| Default Value (8.0.26) | `DATABASE` |'
  id: totrans-528
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（8.0.26） | `DATABASE` |'
- en: '| Valid Values | `DATABASE``LOGICAL_CLOCK` |'
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `DATABASE``LOGICAL_CLOCK` |'
- en: From MySQL 8.0.26, use [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    in place of [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type).
  id: totrans-530
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用 [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    替代从该版本开始已弃用的 [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)。
- en: 'For multithreaded replicas (replicas on which [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is set to a value greater than 0), [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    specifies the policy used to decide which transactions are allowed to execute
    in parallel on the replica. The variable has no effect on replicas for which multithreading
    is not enabled. The possible values are:'
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于多线程副本（[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    或 [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    设置为大于 0 的值的副本），[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    指定了在副本上决定哪些事务可以并行执行的策略。该变量对于未启用多线程的副本没有影响。可能的值包括：
- en: '`LOGICAL_CLOCK`: Transactions are applied in parallel on the replica, based
    on timestamps which the replication source writes to the binary log. Dependencies
    between transactions are tracked based on their timestamps to provide additional
    parallelization where possible.'
  id: totrans-532
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOGICAL_CLOCK`: 事务在副本上并行应用，基于复制源写入二进制日志的时间戳。根据时间戳跟踪事务之间的依赖关系，以在可能的情况下提供额外的并行化。'
- en: '`DATABASE`: Transactions that update different databases are applied in parallel.
    This value is only appropriate if data is partitioned into multiple databases
    which are being updated independently and concurrently on the source. There must
    be no cross-database constraints, as such constraints may be violated on the replica.'
  id: totrans-533
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DATABASE`: 更新不同数据库的事务并行应用。只有在数据被分区到多个独立并且同时在源上更新的数据库时才适用此值。不能有跨数据库约束，因为这样的约束可能在副本上被违反。'
- en: When [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    or [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is enabled, you must use `LOGICAL_CLOCK`. Before MySQL 8.0.27, `DATABASE` is the
    default. From MySQL 8.0.27, multithreading is enabled by default for replica servers
    ([`replica_parallel_workers=4`](replication-options-replica.html#sysvar_replica_parallel_workers)
    by default), and `LOGICAL_CLOCK` is the default. (In MySQL 8.0.27 and later, [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    is also enabled by default.)
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)或[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)时，必须使用`LOGICAL_CLOCK`。在MySQL
    8.0.27之前，`DATABASE`是默认值。从MySQL 8.0.27开始，默认情况下为副本服务器启用多线程（[`replica_parallel_workers=4`](replication-options-replica.html#sysvar_replica_parallel_workers)为默认值），并且`LOGICAL_CLOCK`是默认值。（在MySQL
    8.0.27及更高版本中，默认情况下还启用了[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)。）
- en: When the replication topology uses multiple levels of replicas, `LOGICAL_CLOCK`
    may achieve less parallelization for each level the replica is away from the source.
    To compensate for this effect, you should set `binlog_transaction_dependency_tracking`
    to `WRITESET` or `WRITESET_SESSION` on the source *as well as on every intermediate
    replica* to specify that write sets are used instead of timestamps for parallelization
    where possible.
  id: totrans-535
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当复制拓扑结构使用多级副本时，`LOGICAL_CLOCK`可能会使每个副本距源的级别的并行化减少。为了补偿这种影响，您应该在源上以及每个中间副本上将`binlog_transaction_dependency_tracking`设置为`WRITESET`或`WRITESET_SESSION`，以指定在可能的情况下使用写入集而不是时间戳进行并行化。
- en: When binary log transaction compression is enabled using the [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    system variable, if [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    is set to `DATABASE`, all the databases affected by the transaction are mapped
    before the transaction is scheduled. The use of binary log transaction compression
    with the `DATABASE` policy can reduce parallelism compared to uncompressed transactions,
    which are mapped and scheduled for each event.
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用[`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)系统变量启用二进制日志事务压缩时，如果将[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)设置为`DATABASE`，则在调度事务之前会映射受事务影响的所有数据库。使用`DATABASE`策略的二进制日志事务压缩可能会减少与未压缩事务相比的并行性，后者会为每个事件映射并调度。
- en: '`replica_parallel_type` is deprecated beginning with MySQL 8.0.29, as is support
    for parallelization of transactions using database partitioning. Expect support
    for these to be removed in a future release, and for `LOGICAL_CLOCK` to be used
    exclusively thereafter.'
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`replica_parallel_type`从MySQL 8.0.29开始已弃用，使用数据库分区的事务并行化也已弃用。预计在未来的版本中将删除对这些的支持，并且之后将专门使用`LOGICAL_CLOCK`。'
- en: '[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)'
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)'
- en: '| Command-Line Format | `--replica-parallel-workers=#` |'
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-parallel-workers=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-540
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_parallel_workers](replication-options-replica.html#sysvar_replica_parallel_workers)`
    |'
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_parallel_workers](replication-options-replica.html#sysvar_replica_parallel_workers)`
    |'
- en: '| Scope | Global |'
  id: totrans-542
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-544
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value (≥ 8.0.27) | `4` |'
  id: totrans-546
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≥ 8.0.27） | `4` |'
- en: '| Default Value (8.0.26) | `0` |'
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（8.0.26） | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-548
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1024` |'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1024` |'
- en: Beginning with MySQL 8.0.26, [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is deprecated, and you should use `replica_parallel_workers` instead. (Prior to
    MySQL 8.0.26, you must use `slave_parallel_workers` to set the number of applier
    threads.)
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    已不推荐使用，应改为使用 `replica_parallel_workers`。 （在 MySQL 8.0.26 之前，必须使用 `slave_parallel_workers`
    来设置应用程序线程的数量。）
- en: '`replica_parallel_workers` enables multithreading on the replica and sets the
    number of applier threads for executing replication transactions in parallel.
    When the value is greater than or equal to 1, the replica uses the specified number
    of worker threads to execute transactions, plus a coordinator thread that reads
    transactions from the relay log and schedules them to workers. When the value
    is 0, there is only one thread that reads and applies transactions sequentially.
    If you are using multiple replication channels, the value of this variable applies
    to the threads used by each channel.'
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`replica_parallel_workers` 启用副本的多线程，并设置用于并行执行复制事务的应用程序线程数。当值大于或等于 1 时，副本使用指定数量的工作线程来执行事务，还有一个协调器线程从中继日志中读取事务并将其调度给工作线程。当值为
    0 时，只有一个线程按顺序读取和应用事务。如果使用多个复制通道，则此变量的值适用于每个通道使用的线程。'
- en: Prior to MySQL 8.0.27, the default value of this system variable is 0, so replicas
    use a single worker thread by default. Beginning with MySQL 8.0.27, the default
    value is 4, which means that replicas are multithreaded by default.
  id: totrans-552
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.27 之前，此系统变量的默认值为 0，因此副本默认使用单个工作线程。从 MySQL 8.0.27 开始，默认值为 4，这意味着副本默认为多线程。
- en: As of MySQL 8.0.30, setting this variable to 0 is deprecated, raises a warning,
    and is subject to removal in a future MySQL release. For a single worker, set
    `replica_parallel_workers` to 1 instead.
  id: totrans-553
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至 MySQL 8.0.30，将此变量设置为 0 已不推荐使用，会引发警告，并可能在将来的 MySQL 版本中删除。对于单个工作线程，请将 `replica_parallel_workers`
    设置为 1。
- en: When [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    (or [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order))
    is set to `ON` (the default in MySQL 8.0.27 and later), transactions on a replica
    are externalized on the replica in the same order as they appear in the replica's
    relay log. The way in which transactions are distributed among applier threads
    is determined by [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    (MySQL 8.0.26 and later) or [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    (prior to MySQL 8.0.26). Starting with MySQL 8.0.27, these system variables also
    have appropriate defaults for multithreading.
  id: totrans-554
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)（或
    [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)）设置为
    `ON`（MySQL 8.0.27 及更高版本的默认设置），副本上的事务按照在副本的中继日志中出现的顺序在副本上外部化。事务在应用程序线程之间的分配方式由
    [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)（MySQL
    8.0.26 及更高版本）或 [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)（MySQL
    8.0.26 之前）确定。从 MySQL 8.0.27 开始，这些系统变量也具有适当的多线程默认值。
- en: To disable parallel execution, set `replica_parallel_workers` to 1, in which
    case the replica uses one coordinator thread which reads transactions, and one
    worker thread which applies them, which means that transactions are applied sequentially.
    When `replica_parallel_workers` is equal to 1, the [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    ([`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type))
    and [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    ([`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order))
    system variables have no effect and are ignored. If `replica_parallel_workers`
    is equal to 0 while the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") option [`GTID_ONLY`](change-replication-source-to.html#crs-opt-gtid_only)
    is enabled, the replica has one coordinator thread and one worker thread, exactly
    as if `replica_parallel_workers` had been set to 1\. (`GTID_ONLY` is available
    in MySQL 8.0.27 and later.) With one parallel worker, the [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    ([`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order))
    system variable also has no effect.
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要禁用并行执行，请将`replica_parallel_workers`设置为1，这样副本将使用一个协调线程读取事务，一个工作线程应用事务，这意味着事务按顺序应用。当`replica_parallel_workers`等于1时，[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)（[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)）和[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)（[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)）系统变量不起作用，会被忽略。如果`replica_parallel_workers`等于0，同时启用[`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement")选项[`GTID_ONLY`](change-replication-source-to.html#crs-opt-gtid_only)，副本将有一个协调线程和一个工作线程，就像`replica_parallel_workers`被设置为1一样。（`GTID_ONLY`在MySQL
    8.0.27及更高版本中可用。）有一个并行工作者时，[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)（[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)）系统变量也不起作用。
- en: Setting [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    has no immediate effect but rather applies to all subsequent [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statements.
  id: totrans-556
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)没有立即效果，而是适用于所有后续的[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句。
- en: Multithreaded replicas are supported by NDB Cluster beginning with NDB 8.0.33\.
    (Previously, `NDB` silently ignored any setting for `replica_parallel_workers`.)
    See [Section 25.7.11, “NDB Cluster Replication Using the Multithreaded Applier”](mysql-cluster-replication-mta.html
    "25.7.11 NDB Cluster Replication Using the Multithreaded Applier"), for more information.
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 多线程副本从NDB Cluster 8.0.33版本开始受支持。（之前，`NDB`会默默忽略`replica_parallel_workers`的任何设置。）更多信息请参见[第25.7.11节，“使用多线程应用程序的NDB
    Cluster复制”](mysql-cluster-replication-mta.html "25.7.11 NDB Cluster Replication
    Using the Multithreaded Applier")。
- en: Increasing the number of workers improves the potential for parallelism. Typically,
    this improves performance up to a certain point, beyond which increasing the number
    of workers reduces performance due to concurrency effects such as lock contention.
    The ideal number depends on both hardware and workload; it can be difficult to
    predict and typically has to be found by testing. Tables without primary keys,
    which always harm performance, may have even greater negative performance impact
    on replicas having `replica_parallel_workers` > 1; so make sure that all tables
    have primary keys before enabling this option.
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 增加工作者数量可以提高并行性的潜力。通常情况下，这会提高性能，直到某个点，之后增加工作者数量会由于并发效应（如锁争用）而降低性能。理想数量取决于硬件和工作负载；很难预测，通常需要通过测试找到。没有主键的表总是会损害性能，在`replica_parallel_workers`
    > 1的副本上可能会产生更大的负面性能影响；因此，在启用此选项之前，请确保所有表都有主键。
- en: '[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)'
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)'
- en: '| Command-Line Format | `--replica-pending-jobs-size-max=#` |'
  id: totrans-560
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-pending-jobs-size-max=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-561
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_pending_jobs_size_max](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)`
    |'
  id: totrans-562
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)`
    |'
- en: '| Scope | Global |'
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-564
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-566
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `128M` |'
  id: totrans-567
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `128M` |'
- en: '| Minimum Value | `1024` |'
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1024` |'
- en: '| Maximum Value | `16EiB` |'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `16EiB` |'
- en: '| Unit | bytes |'
  id: totrans-570
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `1024` |'
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `1024`
    |'
- en: From MySQL 8.0.26, use [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)
    in place of [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max).
  id: totrans-572
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，使用[`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)代替从该版本开始已弃用的[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)。在MySQL
    8.0.26之前的版本中，使用[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)。
- en: For multithreaded replicas, this variable sets the maximum amount of memory
    (in bytes) available to applier queues holding events not yet applied. Setting
    this variable has no effect on replicas for which multithreading is not enabled.
    Setting this variable has no immediate effect. The state of the variable applies
    on all subsequent [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    Statement") statements.
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于多线程复制品，此变量设置了可用于尚未应用的事件的applier队列的最大内存量（以字节为单位）。设置此变量对未启用多线程的复制品没有影响。设置此变量没有立即效果。变量的状态适用于所有后续的[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句。
- en: The minimum possible value for this variable is 1024 bytes; the default is 128MB.
    The maximum possible value is 18446744073709551615 (16 exbibytes). Values that
    are not exact multiples of 1024 bytes are rounded down to the next lower multiple
    of 1024 bytes prior to being stored.
  id: totrans-574
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量的最小可能值为1024字节；默认值为128MB。最大可能值为18446744073709551615（16 exbibytes）。不是1024字节的精确倍数的值在存储之前会被舍入为下一个较低的1024字节的倍数。
- en: The value of this variable is a soft limit and can be set to match the normal
    workload. If an unusually large event exceeds this size, the transaction is held
    until all the worker threads have empty queues, and then processed. All subsequent
    transactions are held until the large transaction has been completed.
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量的值是一个软限制，可以设置为匹配正常工作负载。如果异常大的事件超过此大小，事务将被暂停，直到所有工作线程的队列为空，然后再处理。所有后续事务将被暂停，直到大事务完成。
- en: '[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)'
  id: totrans-576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)'
- en: '| Command-Line Format | `--replica-preserve-commit-order[={OFF&#124;ON}]` |'
  id: totrans-577
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-preserve-commit-order[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-578
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入 | 8.0.26 |'
- en: '| System Variable | `[replica_preserve_commit_order](replication-options-replica.html#sysvar_replica_preserve_commit_order)`
    |'
  id: totrans-579
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_preserve_commit_order](replication-options-replica.html#sysvar_replica_preserve_commit_order)`
    |'
- en: '| Scope | Global |'
  id: totrans-580
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-581
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-583
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value (≥ 8.0.27) | `ON` |'
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 (≥ 8.0.27) | `ON` |'
- en: '| Default Value (8.0.26) | `OFF` |'
  id: totrans-585
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 (8.0.26) | `OFF` |'
- en: From MySQL 8.0.26, use [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    in place of [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order).
  id: totrans-586
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，使用[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)代替从该版本开始已弃用的[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)。在MySQL
    8.0.26之前的版本中，使用[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)。
- en: For multithreaded replicas (replicas on which [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    is set to a value greater than 0), setting [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    ensures that transactions are executed and committed on the replica in the same
    order as they appear in the replica's relay log. This prevents gaps in the sequence
    of transactions that have been executed from the replica's relay log, and preserves
    the same transaction history on the replica as on the source (with the limitations
    listed below). This variable has no effect on replicas for which multithreading
    is not enabled.
  id: totrans-587
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于多线程复制（[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    设置为大于 0 的值的复制品），设置 [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    确保事务在复制品上按照在复制品的中继日志中出现的顺序执行和提交。这可以防止在已从复制品的中继日志执行的事务序列中出现间隙，并保留与源相同的事务历史（以下列出了限制）。此变量对未启用多线程的复制品没有影响。
- en: Before MySQL 8.0.27, the default for this system variable is `OFF`, meaning
    that transactions may be committed out of order. From MySQL 8.0.27, multithreading
    is enabled by default for replica servers ([`replica_parallel_workers=4`](replication-options-replica.html#sysvar_replica_parallel_workers)
    by default), so [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    is the default, and the setting [`replica_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_replica_parallel_type)
    is also the default. Also from MySQL 8.0.27, the setting for [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    is ignored if [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    is set to 1, because in that situation the order of transactions is preserved
    anyway.
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.27 之前，此系统变量的默认值为 `OFF`，意味着事务可能会无序提交。从 MySQL 8.0.27 开始，默认情况下为复制品服务器启用多线程（默认为
    [`replica_parallel_workers=4`](replication-options-replica.html#sysvar_replica_parallel_workers)），因此
    [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    是默认值，并且设置 [`replica_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_replica_parallel_type)
    也是默认值。同样从 MySQL 8.0.27 开始，如果 [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    设置为 1，则 [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    的设置将被忽略，因为在这种情况下事务的顺序已经被保留。
- en: Binary logging and replica update logging are not required on the replica to
    set [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order),
    and can be disabled if wanted. Setting [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    requires that [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    is set to `LOGICAL_CLOCK`, which is *not* the default setting before MySQL 8.0.27\.
    Before changing the value of [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    and [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type),
    the replication SQL thread (for all replication channels if you are using multiple
    replication channels) must be stopped.
  id: totrans-589
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 二进制日志和复制品更新日志不需要在复制品上设置 [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)，如果需要，可以禁用。设置
    [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    要求将 [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    设置为 `LOGICAL_CLOCK`，这在 MySQL 8.0.27 之前 *不* 是默认设置。在更改 [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    和 [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    的值之前，必须停止复制 SQL 线程（如果使用多个复制通道，则对所有复制通道都要停止）。
- en: When [`replica_preserve_commit_order=OFF`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    is set, the transactions that a multithreaded replica applies in parallel may
    commit out of order. Therefore, checking for the most recently executed transaction
    does not guarantee that all previous transactions from the source have been executed
    on the replica. There is a chance of gaps in the sequence of transactions that
    have been executed from the replica's relay log. This has implications for logging
    and recovery when using a multithreaded replica. See [Section 19.5.1.34, “Replication
    and Transaction Inconsistencies”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 Replication and Transaction Inconsistencies") for more information.
  id: totrans-590
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当[`replica_preserve_commit_order=OFF`](replication-options-replica.html#sysvar_replica_preserve_commit_order)被设置时，多线程复制并行应用的事务可能会无序提交。因此，检查最近执行的事务并不能保证源数据库上的所有先前事务已在复制中执行。在复制中继日志中执行的事务序列可能存在间隙的可能性。这对于使用多线程复制时的日志记录和恢复有影响。有关更多信息，请参见[第19.5.1.34节，“复制和事务不一致性”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 复制和事务不一致性")。
- en: When [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    is set, the executing worker thread waits until all previous transactions are
    committed before committing. While a given thread is waiting for other worker
    threads to commit their transactions, it reports its status as `Waiting for preceding
    transaction to commit`. With this mode, a multithreaded replica never enters a
    state that the source was not in. This supports the use of replication for read
    scale-out. See [Section 19.4.5, “Using Replication for Scale-Out”](replication-solutions-scaleout.html
    "19.4.5 Using Replication for Scale-Out").
  id: totrans-591
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)被设置时，执行的工作线程会等待所有先前的事务提交后再进行提交。当一个线程在等待其他工作线程提交它们的事务时，它会报告其状态为`等待前一个事务提交`。在这种模式下，多线程复制永远不会进入源数据库不在的状态。这支持将复制用于读取扩展。参见[第19.4.5节，“使用复制进行扩展”](replication-solutions-scaleout.html
    "19.4.5 使用复制进行扩展")。
- en: Note
  id: totrans-592
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    does not prevent source binary log position lag, where `Exec_master_log_pos` is
    behind the position up to which transactions have been executed. See [Section 19.5.1.34,
    “Replication and Transaction Inconsistencies”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 Replication and Transaction Inconsistencies").'
  id: totrans-593
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)不能防止源数据库二进制日志位置滞后，其中`Exec_master_log_pos`落后于已执行事务的位置。请参见[第19.5.1.34节，“复制和事务不一致性”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 复制和事务不一致性")。'
- en: '[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    does not preserve the commit order and transaction history if the replica uses
    filters on its binary log, such as [`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db).'
  id: totrans-594
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)不保留如果复制使用二进制日志过滤器，如[`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)，则不保留提交顺序和事务历史。'
- en: '[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    does not preserve the order of non-transactional DML updates. These might commit
    before transactions that precede them in the relay log, which might result in
    gaps in the sequence of transactions that have been executed from the replica''s
    relay log.'
  id: totrans-595
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)不保留非事务性DML更新的顺序。这些更新可能在在中继日志中先于它们之前的事务提交，这可能导致在复制中继日志中执行的事务序列中存在间隙。'
- en: A limitation to preserving the commit order on the replica can occur if statement-based
    replication is in use, and both transactional and non-transactional storage engines
    participate in a non-XA transaction that is rolled back on the source. Normally,
    non-XA transactions that are rolled back on the source are not replicated to the
    replica, but in this particular situation, the transaction might be replicated
    to the replica. If this does happen, a multithreaded replica without binary logging
    does not handle the transaction rollback, so the commit order on the replica diverges
    from the relay log order of the transactions in that case.
  id: totrans-596
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果使用基于语句的复制，并且事务性和非事务性存储引擎参与在源上回滚的非XA事务，可能会出现在副本上保留提交顺序的限制。通常，在源上回滚的非XA事务不会被复制到副本，但在这种特殊情况下，该事务可能会被复制到副本。如果发生这种情况，没有二进制日志记录的多线程副本无法处理事务回滚，因此在这种情况下，副本上的提交顺序会与中继日志中事务的顺序不同。
- en: '[`replica_sql_verify_checksum`](replication-options-replica.html#sysvar_replica_sql_verify_checksum)'
  id: totrans-597
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_sql_verify_checksum`](replication-options-replica.html#sysvar_replica_sql_verify_checksum)'
- en: '| Command-Line Format | `--replica-sql-verify-checksum[={OFF&#124;ON}]` |'
  id: totrans-598
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-sql-verify-checksum[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-599
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_sql_verify_checksum](replication-options-replica.html#sysvar_replica_sql_verify_checksum)`
    |'
  id: totrans-600
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_sql_verify_checksum](replication-options-replica.html#sysvar_replica_sql_verify_checksum)`
    |'
- en: '| Scope | Global |'
  id: totrans-601
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-602
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-603
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-604
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-605
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: From MySQL 8.0.26, use [`replica_sql_verify_checksum`](replication-options-replica.html#sysvar_replica_sql_verify_checksum)
    in place of [`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum).
  id: totrans-606
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，请使用[`replica_sql_verify_checksum`](replication-options-replica.html#sysvar_replica_sql_verify_checksum)替代[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)，后者从该版本开始已被弃用。在MySQL
    8.0.26之前的版本中，请使用[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)。
- en: '[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)
    causes the replication SQL (applier) thread to verify data using the checksums
    read from the relay log. In the event of a mismatch, the replica stops with an
    error. Setting this variable takes effect for all replication channels immediately,
    including running channels.'
  id: totrans-607
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)导致复制SQL（应用程序）线程使用从中继日志读取的校验和来验证数据。如果出现不匹配，副本将停止并显示错误。设置此变量立即对所有复制通道生效，包括正在运行的通道。'
- en: Note
  id: totrans-608
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The replication I/O (receiver)thread always reads checksums if possible when
    accepting events from over the network.
  id: totrans-609
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制I/O（接收器）线程在从网络接收事件时，始终尽可能读取校验和。
- en: '[`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)'
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)'
- en: '| Command-Line Format | `--replica-transaction-retries=#` |'
  id: totrans-611
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-transaction-retries=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-612
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_transaction_retries](replication-options-replica.html#sysvar_replica_transaction_retries)`
    |'
  id: totrans-613
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_transaction_retries](replication-options-replica.html#sysvar_replica_transaction_retries)`
    |'
- en: '| Scope | Global |'
  id: totrans-614
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-615
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-616
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-617
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `10` |'
  id: totrans-618
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10` |'
- en: '| Minimum Value | `0` |'
  id: totrans-619
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `18446744073709551615` |'
  id: totrans-620
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `18446744073709551615` |'
- en: From MySQL 8.0.26, use [`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)
    in place of [`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries).
  id: totrans-621
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用[`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)代替从该版本开始已弃用的[`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)。在
    MySQL 8.0.26 之前的版本中，请使用[`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)。
- en: '[`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)
    sets the maximum number of times for replication SQL threads on a single-threaded
    or multithreaded replica to automatically retry failed transactions before stopping.
    Setting this variable takes effect for all replication channels immediately, including
    running channels. The default value is 10\. Setting the variable to 0 disables
    automatic retrying of transactions.'
  id: totrans-622
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)
    设置了单线程或多线程副本上的复制 SQL 线程在停止之前自动重试失败事务的最大次数。设置此变量立即对所有复制通道生效，包括正在运行的通道。默认值为 10。将变量设置为
    0 会禁用事务的自动重试。'
- en: If a replication SQL thread fails to execute a transaction because of an [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") deadlock or because the transaction's
    execution time exceeded [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine")'s [`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    or [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0")'s [`TransactionDeadlockDetectionTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactiondeadlockdetectiontimeout)
    or [`TransactionInactiveTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactioninactivetimeout),
    it automatically retries [`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)
    times before stopping with an error. Transactions with a non-temporary error are
    not retried.
  id: totrans-623
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果复制 SQL 线程由于[`InnoDB`](innodb-storage-engine.html "第 17 章 InnoDB 存储引擎")死锁或事务执行时间超过[`InnoDB`](innodb-storage-engine.html
    "第 17 章 InnoDB 存储引擎")的[`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)或[`NDB`](mysql-cluster.html
    "第 25 章 MySQL NDB Cluster 8.0")的[`TransactionDeadlockDetectionTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactiondeadlockdetectiontimeout)或[`TransactionInactiveTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactioninactivetimeout)而无法执行事务时，它会在停止之前自动重试[`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)次数。非临时错误的事务不会重试。
- en: The Performance Schema table [`replication_applier_status`](performance-schema-replication-applier-status-table.html
    "29.12.11.6 The replication_applier_status Table") shows the number of retries
    that took place on each replication channel, in the `COUNT_TRANSACTIONS_RETRIES`
    column. The Performance Schema table [`replication_applier_status_by_worker`](performance-schema-replication-applier-status-by-worker-table.html
    "29.12.11.8 The replication_applier_status_by_worker Table") shows detailed information
    on transaction retries by individual applier threads on a single-threaded or multithreaded
    replica, and identifies the errors that caused the last transaction and the transaction
    currently in progress to be reattempted.
  id: totrans-624
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Performance Schema 表[`replication_applier_status`](performance-schema-replication-applier-status-table.html
    "29.12.11.6 replication_applier_status 表")显示了每个复制通道上发生的重试次数，在`COUNT_TRANSACTIONS_RETRIES`列中。Performance
    Schema 表[`replication_applier_status_by_worker`](performance-schema-replication-applier-status-by-worker-table.html
    "29.12.11.8 replication_applier_status_by_worker 表")显示了单线程或多线程副本上每个应用程序线程对事务重试的详细信息，并标识导致最后一个事务和当前正在进行的事务重新尝试的错误。
- en: '[`replica_type_conversions`](replication-options-replica.html#sysvar_replica_type_conversions)'
  id: totrans-625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_type_conversions`](replication-options-replica.html#sysvar_replica_type_conversions)'
- en: '| Command-Line Format | `--replica-type-conversions=set` |'
  id: totrans-626
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-type-conversions=set` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-627
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_type_conversions](replication-options-replica.html#sysvar_replica_type_conversions)`
    |'
  id: totrans-628
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_type_conversions](replication-options-replica.html#sysvar_replica_type_conversions)`
    |'
- en: '| Scope | Global |'
  id: totrans-629
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-630
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-631
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Set |'
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 设置 |'
- en: '| Default Value |  |'
  id: totrans-633
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 |  |'
- en: '| Valid Values | `ALL_LOSSY``ALL_NON_LOSSY``ALL_SIGNED``ALL_UNSIGNED` |'
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `ALL_LOSSY``ALL_NON_LOSSY``ALL_SIGNED``ALL_UNSIGNED` |'
- en: From MySQL 8.0.26, use [`replica_type_conversions`](replication-options-replica.html#sysvar_replica_type_conversions)
    in place of [`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions).
  id: totrans-635
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用 [`replica_type_conversions`](replication-options-replica.html#sysvar_replica_type_conversions)
    替代 [`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)，后者从该版本开始已被弃用。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)。
- en: '[`replica_type_conversions`](replication-options-replica.html#sysvar_replica_type_conversions)
    controls the type conversion mode in effect on the replica when using row-based
    replication. Its value is a comma-delimited set of zero or more elements from
    the list: `ALL_LOSSY`, `ALL_NON_LOSSY`, `ALL_SIGNED`, `ALL_UNSIGNED`. Set this
    variable to an empty string to disallow type conversions between the source and
    the replica. Setting this variable takes effect for all replication channels immediately,
    including running channels.'
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`replica_type_conversions`](replication-options-replica.html#sysvar_replica_type_conversions)
    控制在使用基于行的复制时副本上生效的类型转换模式。其值是一个由列表中零个或多个元素组成的逗号分隔集合：`ALL_LOSSY`、`ALL_NON_LOSSY`、`ALL_SIGNED`、`ALL_UNSIGNED`。将此变量设置为空字符串以禁止源和副本之间的类型转换。设置此变量立即对所有复制通道生效，包括正在运行的通道。'
- en: 'For additional information on type conversion modes applicable to attribute
    promotion and demotion in row-based replication, see [Row-based replication: attribute
    promotion and demotion](replication-features-differing-tables.html#replication-features-attribute-promotion
    "Row-based replication: attribute promotion and demotion").'
  id: totrans-637
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关基于行复制中适用于属性提升和降级的类型转换模式的更多信息，请参阅[基于行复制：属性提升和降级](replication-features-differing-tables.html#replication-features-attribute-promotion
    "基于行复制：属性提升和降级")。
- en: '[`replication_optimize_for_static_plugin_config`](replication-options-replica.html#sysvar_replication_optimize_for_static_plugin_config)'
  id: totrans-638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replication_optimize_for_static_plugin_config`](replication-options-replica.html#sysvar_replication_optimize_for_static_plugin_config)'
- en: '| Command-Line Format | `--replication-optimize-for-static-plugin-config[={OFF&#124;ON}]`
    |'
  id: totrans-639
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replication-optimize-for-static-plugin-config[={OFF&#124;ON}]`
    |'
- en: '| Introduced | 8.0.23 |'
  id: totrans-640
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.23 |'
- en: '| System Variable | `[replication_optimize_for_static_plugin_config](replication-options-replica.html#sysvar_replication_optimize_for_static_plugin_config)`
    |'
  id: totrans-641
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replication_optimize_for_static_plugin_config](replication-options-replica.html#sysvar_replication_optimize_for_static_plugin_config)`
    |'
- en: '| Scope | Global |'
  id: totrans-642
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-643
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-644
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-645
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-646
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Use shared locks, and avoid unnecessary lock acquisitions, to improve performance
    for semisynchronous replication. This setting and [`replication_sender_observe_commit_only`](replication-options-replica.html#sysvar_replication_sender_observe_commit_only)
    help as the number of replicas increases, because contention for locks can slow
    down performance. While this system variable is enabled, the semisynchronous replication
    plugin cannot be uninstalled, so you must disable the system variable before the
    uninstall can complete.
  id: totrans-647
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用共享锁，并避免不必要的锁获取，以提高半同步复制的性能。这个设置和 [`replication_sender_observe_commit_only`](replication-options-replica.html#sysvar_replication_sender_observe_commit_only)
    在副本数量增加时有帮助，因为锁争用会降低性能。在启用此系统变量时，半同步复制插件无法卸载，因此必须在卸载完成之前禁用该系统变量。
- en: This system variable can be enabled before or after installing the semisynchronous
    replication plugin, and can be enabled while replication is running. Semisynchronous
    replication source servers can also get performance benefits from enabling this
    system variable, because they use the same locking mechanisms as the replicas.
  id: totrans-648
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以在安装半同步复制插件之前或之后启用此系统变量，并且可以在复制运行时启用。半同步复制源服务器也可以通过启用此系统变量获得性能优势，因为它们使用与副本相同的锁定机制。
- en: '[`replication_optimize_for_static_plugin_config`](replication-options-replica.html#sysvar_replication_optimize_for_static_plugin_config)
    can be enabled when Group Replication is in use on a server. In that scenario,
    it might benefit performance when there is contention for locks due to high workloads.'
  id: totrans-649
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当服务器上使用组复制时，可以启用[`replication_optimize_for_static_plugin_config`](replication-options-replica.html#sysvar_replication_optimize_for_static_plugin_config)。在这种情况下，当由于高工作负载而导致锁争用时，可能会提高性能。
- en: '[`replication_sender_observe_commit_only`](replication-options-replica.html#sysvar_replication_sender_observe_commit_only)'
  id: totrans-650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replication_sender_observe_commit_only`](replication-options-replica.html#sysvar_replication_sender_observe_commit_only)'
- en: '| Command-Line Format | `--replication-sender-observe-commit-only[={OFF&#124;ON}]`
    |'
  id: totrans-651
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replication-sender-observe-commit-only[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.23 |'
  id: totrans-652
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.23 |'
- en: '| System Variable | `[replication_sender_observe_commit_only](replication-options-replica.html#sysvar_replication_sender_observe_commit_only)`
    |'
  id: totrans-653
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replication_sender_observe_commit_only](replication-options-replica.html#sysvar_replication_sender_observe_commit_only)`
    |'
- en: '| Scope | Global |'
  id: totrans-654
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-655
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-656
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-657
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-658
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Limit callbacks to improve performance for semisynchronous replication. This
    setting and [`replication_optimize_for_static_plugin_config`](replication-options-replica.html#sysvar_replication_optimize_for_static_plugin_config)
    help as the number of replicas increases, because contention for locks can slow
    down performance.
  id: totrans-659
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 限制回调以提高半同步复制的性能。这个设置和[`replication_optimize_for_static_plugin_config`](replication-options-replica.html#sysvar_replication_optimize_for_static_plugin_config)在副本数量增加时有帮助，因为锁争用可能会降低性能。
- en: This system variable can be enabled before or after installing the semisynchronous
    replication plugin, and can be enabled while replication is running. Semisynchronous
    replication source servers can also get performance benefits from enabling this
    system variable, because they use the same locking mechanisms as the replicas.
  id: totrans-660
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个系统变量可以在安装半同步复制插件之前或之后启用，并且可以在复制运行时启用。半同步复制源服务器也可以通过启用这个系统变量获得性能优势，因为它们使用与副本相同的锁定机制。
- en: '[`report_host`](replication-options-replica.html#sysvar_report_host)'
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`report_host`](replication-options-replica.html#sysvar_report_host)'
- en: '| Command-Line Format | `--report-host=host_name` |'
  id: totrans-662
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--report-host=host_name` |'
- en: '| System Variable | `[report_host](replication-options-replica.html#sysvar_report_host)`
    |'
  id: totrans-663
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[report_host](replication-options-replica.html#sysvar_report_host)`
    |'
- en: '| Scope | Global |'
  id: totrans-664
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-665
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-666
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-667
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: The host name or IP address of the replica to be reported to the source during
    replica registration. This value appears in the output of [`SHOW REPLICAS`](show-replicas.html
    "15.7.7.33 SHOW REPLICAS Statement") on the source server. Leave the value unset
    if you do not want the replica to register itself with the source.
  id: totrans-668
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在副本注册期间向源报告的副本的主机名或IP地址。此值将出现在源服务器的[`SHOW REPLICAS`](show-replicas.html "15.7.7.33 SHOW
    REPLICAS Statement")输出中。如果不希望副本向源注册自己，请将值保持未设置。
- en: Note
  id: totrans-669
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: It is not sufficient for the source to simply read the IP address of the replica
    server from the TCP/IP socket after the replica connects. Due to NAT and other
    routing issues, that IP may not be valid for connecting to the replica from the
    source or other hosts.
  id: totrans-670
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅仅从副本连接后的TCP/IP套接字中读取副本服务器的IP地址是不够的。由于NAT和其他路由问题，该IP可能无法用于从源或其他主机连接到副本。
- en: '[`report_password`](replication-options-replica.html#sysvar_report_password)'
  id: totrans-671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`report_password`](replication-options-replica.html#sysvar_report_password)'
- en: '| Command-Line Format | `--report-password=name` |'
  id: totrans-672
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--report-password=name` |'
- en: '| System Variable | `[report_password](replication-options-replica.html#sysvar_report_password)`
    |'
  id: totrans-673
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[report_password](replication-options-replica.html#sysvar_report_password)`
    |'
- en: '| Scope | Global |'
  id: totrans-674
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-675
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-676
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-677
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: The account password of the replica to be reported to the source during replica
    registration. This value appears in the output of [`SHOW REPLICAS`](show-replicas.html
    "15.7.7.33 SHOW REPLICAS Statement") on the source server if the source was started
    with [`--show-replica-auth-info`](replication-options-source.html#option_mysqld_show-replica-auth-info)
    or [`--show-slave-auth-info`](replication-options-source.html#option_mysqld_show-slave-auth-info).
  id: totrans-678
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在复制品注册期间向源报告的复制品的帐户密码。如果源使用 [`--show-replica-auth-info`](replication-options-source.html#option_mysqld_show-replica-auth-info)
    或 [`--show-slave-auth-info`](replication-options-source.html#option_mysqld_show-slave-auth-info)
    启动，则此值将出现在源服务器上 [`SHOW REPLICAS`](show-replicas.html "15.7.7.33 SHOW REPLICAS
    Statement") 的输出中。
- en: Although the name of this variable might imply otherwise, [`report_password`](replication-options-replica.html#sysvar_report_password)
    is not connected to the MySQL user privilege system and so is not necessarily
    (or even likely to be) the same as the password for the MySQL replication user
    account.
  id: totrans-679
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管此变量的名称可能暗示相反，[`report_password`](replication-options-replica.html#sysvar_report_password)
    与 MySQL 用户权限系统无关，因此不一��（甚至可能不是）与 MySQL 复制用户帐户的密码相同。
- en: '[`report_port`](replication-options-replica.html#sysvar_report_port)'
  id: totrans-680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`report_port`](replication-options-replica.html#sysvar_report_port)'
- en: '| Command-Line Format | `--report-port=port_num` |'
  id: totrans-681
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--report-port=port_num` |'
- en: '| System Variable | `[report_port](replication-options-replica.html#sysvar_report_port)`
    |'
  id: totrans-682
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[report_port](replication-options-replica.html#sysvar_report_port)`
    |'
- en: '| Scope | Global |'
  id: totrans-683
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-684
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-685
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-686
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `[slave_port]` |'
  id: totrans-687
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `[slave_port]` |'
- en: '| Minimum Value | `0` |'
  id: totrans-688
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `65535` |'
  id: totrans-689
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `65535` |'
- en: The TCP/IP port number for connecting to the replica, to be reported to the
    source during replica registration. Set this only if the replica is listening
    on a nondefault port or if you have a special tunnel from the source or other
    clients to the replica. If you are not sure, do not use this option.
  id: totrans-690
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于连接到复制品的 TCP/IP 端口号，在复制品注册期间向源报告。仅在复制品侦听非默认端口或源或其他客户端到复制品有特殊隧道时设置此选项。如果不确定，请不要使用此选项。
- en: The default value for this option is the port number actually used by the replica.
    This is also the default value displayed by [`SHOW REPLICAS`](show-replicas.html
    "15.7.7.33 SHOW REPLICAS Statement").
  id: totrans-691
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项的默认值是实际使用的复制品端口号。这也是 [`SHOW REPLICAS`](show-replicas.html "15.7.7.33 SHOW
    REPLICAS Statement") 显示的默认值。
- en: '[`report_user`](replication-options-replica.html#sysvar_report_user)'
  id: totrans-692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`report_user`](replication-options-replica.html#sysvar_report_user)'
- en: '| Command-Line Format | `--report-user=name` |'
  id: totrans-693
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--report-user=name` |'
- en: '| System Variable | `[report_user](replication-options-replica.html#sysvar_report_user)`
    |'
  id: totrans-694
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[report_user](replication-options-replica.html#sysvar_report_user)`
    |'
- en: '| Scope | Global |'
  id: totrans-695
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-696
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-697
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-698
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: The account user name of the replica to be reported to the source during replica
    registration. This value appears in the output of [`SHOW REPLICAS`](show-replicas.html
    "15.7.7.33 SHOW REPLICAS Statement") on the source server if the source was started
    with [`--show-replica-auth-info`](replication-options-source.html#option_mysqld_show-replica-auth-info)
    or [`--show-slave-auth-info`](replication-options-source.html#option_mysqld_show-slave-auth-info).
  id: totrans-699
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在复制品注册期间向源报告的复制品的帐户用户名。如果源使用 [`--show-replica-auth-info`](replication-options-source.html#option_mysqld_show-replica-auth-info)
    或 [`--show-slave-auth-info`](replication-options-source.html#option_mysqld_show-slave-auth-info)
    启动，则此值将出现在源服务器上 [`SHOW REPLICAS`](show-replicas.html "15.7.7.33 SHOW REPLICAS
    Statement") 的输出中。
- en: Although the name of this variable might imply otherwise, [`report_user`](replication-options-replica.html#sysvar_report_user)
    is not connected to the MySQL user privilege system and so is not necessarily
    (or even likely to be) the same as the name of the MySQL replication user account.
  id: totrans-700
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管此变量的名称可能暗示相反，[`report_user`](replication-options-replica.html#sysvar_report_user)
    与 MySQL 用户权限系统无关，因此不一定（甚至可能不是）与 MySQL 复制用户帐户的名称相同。
- en: '[`rpl_read_size`](replication-options-replica.html#sysvar_rpl_read_size)'
  id: totrans-701
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`rpl_read_size`](replication-options-replica.html#sysvar_rpl_read_size)'
- en: '| Command-Line Format | `--rpl-read-size=#` |'
  id: totrans-702
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--rpl-read-size=#` |'
- en: '| System Variable | `[rpl_read_size](replication-options-replica.html#sysvar_rpl_read_size)`
    |'
  id: totrans-703
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[rpl_read_size](replication-options-replica.html#sysvar_rpl_read_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-704
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-705
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-706
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-707
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `8192` |'
  id: totrans-708
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `8192` |'
- en: '| Minimum Value | `8192` |'
  id: totrans-709
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `8192` |'
- en: '| Maximum Value | `4294959104` |'
  id: totrans-710
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294959104` |'
- en: '| Unit | bytes |'
  id: totrans-711
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `8192` |'
  id: totrans-712
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `8192`
    |'
- en: The [`rpl_read_size`](replication-options-replica.html#sysvar_rpl_read_size)
    system variable controls the minimum amount of data in bytes that is read from
    the binary log files and relay log files. If heavy disk I/O activity for these
    files is impeding performance for the database, increasing the read size might
    reduce file reads and I/O stalls when the file data is not currently cached by
    the operating system.
  id: totrans-713
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`rpl_read_size`](replication-options-replica.html#sysvar_rpl_read_size) 系统变量控制从二进制日志文件和中继日志文件中读取的最小数据量（以字节为单位）。如果这些文件的大量磁盘I/O活动影响了数据库的性能，增加读取大小可能会减少文件读取和I/O停顿，尤其是当文件数据当前未被操作系统缓存时。'
- en: The minimum and default value for [`rpl_read_size`](replication-options-replica.html#sysvar_rpl_read_size)
    is 8192 bytes. The value must be a multiple of 4KB. Note that a buffer the size
    of this value is allocated for each thread that reads from the binary log and
    relay log files, including dump threads on sources and coordinator threads on
    replicas. Setting a large value might therefore have an impact on memory consumption
    for servers.
  id: totrans-714
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`rpl_read_size`](replication-options-replica.html#sysvar_rpl_read_size) 的最小和默认值为8192字节。该值必须是4KB的倍数。请注意，为从二进制日志和中继日志文件读取的每个线程分配了此值大小的缓冲区，包括源上的转储线程和副本上的协调器线程。因此，设置一个较大的值可能会影响服务器的内存消耗。'
- en: '[`rpl_semi_sync_replica_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)'
  id: totrans-715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_replica_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)'
- en: '| Command-Line Format | `--rpl-semi-sync-replica-enabled[={OFF&#124;ON}]` |'
  id: totrans-716
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--rpl-semi-sync-replica-enabled[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-717
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[rpl_semi_sync_replica_enabled](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)`
    |'
  id: totrans-718
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[rpl_semi_sync_replica_enabled](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)`
    |'
- en: '| Scope | Global |'
  id: totrans-719
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-720
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-721
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-722
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-723
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: '[`rpl_semi_sync_replica_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)
    is available when the `rpl_semi_sync_replica` (`semisync_replica.so` library)
    plugin was installed on the replica to set up semisynchronous replication. If
    the `rpl_semi_sync_slave` plugin (`semisync_slave.so` library) was installed,
    [`rpl_semi_sync_slave_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)
    is available instead.'
  id: totrans-724
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在副本上安装了`rpl_semi_sync_replica`（`semisync_replica.so`库）插件以设置半同步复制时，[`rpl_semi_sync_replica_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)
    可用。如果安装了`rpl_semi_sync_slave`插件（`semisync_slave.so`库），则可以使用[`rpl_semi_sync_slave_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)。
- en: '[`rpl_semi_sync_replica_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)
    controls whether semisynchronous replication is enabled on the replica server.
    To enable or disable the plugin, set this variable to `ON` or `OFF` (or 1 or 0),
    respectively. The default is `OFF`.'
  id: totrans-725
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_replica_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)
    控制着复制服务器上是否启用半同步复制。要启用或禁用插件，请将此变量分别设置为`ON`或`OFF`（或1或0）。默认值为`OFF`。'
- en: This variable is available only if the replica-side semisynchronous replication
    plugin is installed.
  id: totrans-726
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅当安装了副本端半同步复制插件时才可用此变量。
- en: '[`rpl_semi_sync_replica_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)'
  id: totrans-727
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_replica_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)'
- en: '| Command-Line Format | `--rpl-semi-sync-replica-trace-level=#` |'
  id: totrans-728
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令���格式 | `--rpl-semi-sync-replica-trace-level=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-729
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[rpl_semi_sync_replica_trace_level](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)`
    |'
  id: totrans-730
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[rpl_semi_sync_replica_trace_level](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)`
    |'
- en: '| Scope | Global |'
  id: totrans-731
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-732
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-733
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-734
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `32` |'
  id: totrans-735
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `32` |'
- en: '| Minimum Value | `0` |'
  id: totrans-736
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-737
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: '[`rpl_semi_sync_replica_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)
    is available when the `rpl_semi_sync_replica` (`semisync_replica.so` library)
    plugin was installed on the replica to set up semisynchronous replication. If
    the `rpl_semi_sync_slave` plugin (`semisync_slave.so` library) was installed,
    [`rpl_semi_sync_slave_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)
    is available instead.'
  id: totrans-738
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当安装了`rpl_semi_sync_replica`（`semisync_replica.so`库）插件以设置半同步复制时，[`rpl_semi_sync_replica_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)
    可用。如果安装了`rpl_semi_sync_slave`插件（`semisync_slave.so`库），则可用[`rpl_semi_sync_slave_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)。
- en: '[`rpl_semi_sync_replica_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)
    controls the semisynchronous replication debug trace level on the replica server.
    See [`rpl_semi_sync_master_trace_level`](replication-options-source.html#sysvar_rpl_semi_sync_master_trace_level)
    for the permissible values.'
  id: totrans-739
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_replica_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)
    控制副本服务器上半同步复制的调试跟踪级别。有关允许的值，请参阅[`rpl_semi_sync_master_trace_level`](replication-options-source.html#sysvar_rpl_semi_sync_master_trace_level)。'
- en: This variable is available only if the replica-side semisynchronous replication
    plugin is installed.
  id: totrans-740
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅当安装了副本端半同步复制插件时才可用此变量。
- en: '[`rpl_semi_sync_slave_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)'
  id: totrans-741
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_slave_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)'
- en: '| Command-Line Format | `--rpl-semi-sync-slave-enabled[={OFF&#124;ON}]` |'
  id: totrans-742
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--rpl-semi-sync-slave-enabled[={OFF&#124;ON}]` |'
- en: '| System Variable | `[rpl_semi_sync_slave_enabled](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)`
    |'
  id: totrans-743
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[rpl_semi_sync_slave_enabled](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)`
    |'
- en: '| Scope | Global |'
  id: totrans-744
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-745
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-746
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-747
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `OFF` |'
  id: totrans-748
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: '[`rpl_semi_sync_slave_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)
    is available when the `rpl_semi_sync_slave` (`semisync_slave.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_replica`
    plugin (`semisync_replica.so` library) was installed, [`rpl_semi_sync_replica_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)
    is available instead.'
  id: totrans-749
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当安装了`rpl_semi_sync_slave`（`semisync_slave.so`库）插件以设置半同步复制时，[`rpl_semi_sync_slave_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)
    可用。如果安装了`rpl_semi_sync_replica`插件（`semisync_replica.so`库），则可用[`rpl_semi_sync_replica_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_enabled)。
- en: '[`rpl_semi_sync_slave_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)
    controls whether semisynchronous replication is enabled on the replica server.
    To enable or disable the plugin, set this variable to `ON` or `OFF` (or 1 or 0),
    respectively. The default is `OFF`.'
  id: totrans-750
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_slave_enabled`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_enabled)
    控制副本服务器上是否启用半同步复制。要启用或禁用插件，请将此变量设置为`ON`或`OFF`（或分别为1或0）。默认值为`OFF`。'
- en: This variable is available only if the replica-side semisynchronous replication
    plugin is installed.
  id: totrans-751
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅当安装了副本端半同步复制插件时才可用此变量。
- en: '[`rpl_semi_sync_slave_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)'
  id: totrans-752
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_slave_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)'
- en: '| Command-Line Format | `--rpl-semi-sync-slave-trace-level=#` |'
  id: totrans-753
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--rpl-semi-sync-slave-trace-level=#` |'
- en: '| System Variable | `[rpl_semi_sync_slave_trace_level](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)`
    |'
  id: totrans-754
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[rpl_semi_sync_slave_trace_level](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)`
    |'
- en: '| Scope | Global |'
  id: totrans-755
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-756
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-757
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-758
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `32` |'
  id: totrans-759
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `32` |'
- en: '| Minimum Value | `0` |'
  id: totrans-760
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-761
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: '[`rpl_semi_sync_slave_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)
    is available when the `rpl_semi_sync_slave` (`semisync_slave.so` library) plugin
    was installed on the replica to set up semisynchronous replication. If the `rpl_semi_sync_replica`
    plugin (`semisync_replica.so` library) was installed, [`rpl_semi_sync_replica_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)
    is available instead.'
  id: totrans-762
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_slave_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)
    在安装了`rpl_semi_sync_slave`（`semisync_slave.so`库）插件的复制品上可用，用于设置半同步复制。如果安装了`rpl_semi_sync_replica`插件（`semisync_replica.so`库），则可用[`rpl_semi_sync_replica_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_replica_trace_level)。'
- en: '[`rpl_semi_sync_slave_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)
    controls the semisynchronous replication debug trace level on the replica server.
    See [`rpl_semi_sync_master_trace_level`](replication-options-source.html#sysvar_rpl_semi_sync_master_trace_level)
    for the permissible values.'
  id: totrans-763
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`rpl_semi_sync_slave_trace_level`](replication-options-replica.html#sysvar_rpl_semi_sync_slave_trace_level)
    控制复制品服务器上的半同步复制调试跟踪级别。有关允许的值，请参阅[`rpl_semi_sync_master_trace_level`](replication-options-source.html#sysvar_rpl_semi_sync_master_trace_level)。'
- en: This variable is available only if the replica-side semisynchronous replication
    plugin is installed.
  id: totrans-764
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅当安装了复制品端半同步复制插件时才可用。
- en: '[`rpl_stop_replica_timeout`](replication-options-replica.html#sysvar_rpl_stop_replica_timeout)'
  id: totrans-765
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`rpl_stop_replica_timeout`](replication-options-replica.html#sysvar_rpl_stop_replica_timeout)'
- en: '| Command-Line Format | `--rpl-stop-replica-timeout=#` |'
  id: totrans-766
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--rpl-stop-replica-timeout=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-767
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[rpl_stop_replica_timeout](replication-options-replica.html#sysvar_rpl_stop_replica_timeout)`
    |'
  id: totrans-768
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[rpl_stop_replica_timeout](replication-options-replica.html#sysvar_rpl_stop_replica_timeout)`
    |'
- en: '| Scope | Global |'
  id: totrans-769
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-770
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-771
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-772
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `31536000` |'
  id: totrans-773
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `31536000` |'
- en: '| Minimum Value | `2` |'
  id: totrans-774
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `2` |'
- en: '| Maximum Value | `31536000` |'
  id: totrans-775
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `31536000` |'
- en: '| Unit | seconds |'
  id: totrans-776
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 秒 |'
- en: From MySQL 8.0.26, use [`rpl_stop_replica_timeout`](replication-options-replica.html#sysvar_rpl_stop_replica_timeout)
    in place of [`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout).
  id: totrans-777
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，使用[`rpl_stop_replica_timeout`](replication-options-replica.html#sysvar_rpl_stop_replica_timeout)代替[`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)，后者从该版本开始已被弃用。在MySQL
    8.0.26之前的版本中，请使用[`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)。
- en: You can control the length of time (in seconds) that [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") waits before timing out by setting this variable.
    This can be used to avoid deadlocks between [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") and other SQL statements using different client
    connections to the replica.
  id: totrans-778
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过设置此变量，您可以控制[`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")在超时之前等待的时间长度（以秒为单位）。这可用于避免[`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")与使用不同客户端连接到复制品的其他SQL语句之间的死锁。
- en: The maximum and default value of `rpl_stop_replica_timeout` is 31536000 seconds
    (1 year). The minimum is 2 seconds. Changes to this variable take effect for subsequent
    [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") statements.
  id: totrans-779
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`rpl_stop_replica_timeout`的最大值和默认值为31536000秒（1年）。最小值为2秒。对此变量的更改将对后续的[`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")语句生效。'
- en: This variable affects only the client that issues a [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") statement. When the timeout is reached, the
    issuing client returns an error message stating that the command execution is
    incomplete. The client then stops waiting for the replication I/O (receiver)and
    SQL (applier) threads to stop, but the replication threads continue to try to
    stop, and the [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")
    statement remains in effect. Once the replication threads are no longer busy,
    the [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") statement
    is executed and the replica stops.
  id: totrans-780
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量仅影响发出 [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")
    命令的客户端。当超时时，发出命令的客户端将返回一条错误消息，指示命令执行不完整。客户端停止等待复制 I/O（接收器）和 SQL（应用程序）线程停止，但复制线程继续尝试停止，并且
    [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") 命令仍然有效。一旦复制线程不再忙碌，[`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") 命令将被执行，副本将停止。
- en: '[`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)'
  id: totrans-781
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)'
- en: '| Command-Line Format | `--rpl-stop-slave-timeout=#` |'
  id: totrans-782
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--rpl-stop-slave-timeout=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-783
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[rpl_stop_slave_timeout](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)`
    |'
  id: totrans-784
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[rpl_stop_slave_timeout](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)`
    |'
- en: '| Scope | Global |'
  id: totrans-785
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-786
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-787
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-788
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `31536000` |'
  id: totrans-789
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `31536000` |'
- en: '| Minimum Value | `2` |'
  id: totrans-790
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `2` |'
- en: '| Maximum Value | `31536000` |'
  id: totrans-791
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `31536000` |'
- en: '| Unit | seconds |'
  id: totrans-792
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 秒 |'
- en: From MySQL 8.0.26, [`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)
    is deprecated and the alias [`rpl_stop_replica_timeout`](replication-options-replica.html#sysvar_rpl_stop_replica_timeout)
    should be used instead. In releases before MySQL 8.0.26, use [`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout).
  id: totrans-793
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)
    已被弃用，应改用别名 [`rpl_stop_replica_timeout`](replication-options-replica.html#sysvar_rpl_stop_replica_timeout)。在
    MySQL 8.0.26 之前的版本中，请使用 [`rpl_stop_slave_timeout`](replication-options-replica.html#sysvar_rpl_stop_slave_timeout)。
- en: You can control the length of time (in seconds) that [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") waits before timing out by setting this variable.
    This can be used to avoid deadlocks between [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") and other SQL statements using different client
    connections to the replica.
  id: totrans-794
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过设置此变量，您可以控制 [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")
    在超时前等待的时间长度（以秒为单位）。这可用于避免在使用不同客户端连接到副本的其他 SQL 语句和 [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") 之间发生死锁。
- en: The maximum and default value of `rpl_stop_slave_timeout` is 31536000 seconds
    (1 year). The minimum is 2 seconds. Changes to this variable take effect for subsequent
    [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") statements.
  id: totrans-795
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`rpl_stop_slave_timeout` 的最大和默认值为 31536000 秒（1年）。最小值为 2 秒。对此变量的更改将对后续的 [`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") 命令生效。'
- en: This variable affects only the client that issues a [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") statement. When the timeout is reached, the
    issuing client returns an error message stating that the command execution is
    incomplete. The client then stops waiting for the replication I/O (receiver) and
    SQL (applier) threads to stop, but the replication threads continue to try to
    stop, and the [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")
    instruction remains in effect. Once the replication threads are no longer busy,
    the [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") statement
    is executed and the replica stops.
  id: totrans-796
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量仅影响发出 [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")
    命令的客户端。当超时时，发出命令的客户端将返回一条错误消息，指示命令执行不完整。客户端停止等待复制 I/O（接收器）和 SQL（应用程序）线程停止，但复制线程继续尝试停止，并且
    [`STOP REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") 指令仍然有效。一旦复制线程不再忙碌，[`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement") 命令将被执行，副本将停止。
- en: '[`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)'
  id: totrans-797
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)'
- en: '| Command-Line Format | `--skip-replica-start[={OFF&#124;ON}]` |'
  id: totrans-798
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--skip-replica-start[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-799
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入 | 8.0.26 |'
- en: '| System Variable | `[skip_replica_start](replication-options-replica.html#sysvar_skip_replica_start)`
    |'
  id: totrans-800
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[skip_replica_start](replication-options-replica.html#sysvar_skip_replica_start)`
    |'
- en: '| Scope | Global |'
  id: totrans-801
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-802
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-803
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-804
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-805
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, use [`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)
    in place of [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start).
  id: totrans-806
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，应使用 [`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)
    替代 [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)，因为从该版本开始已弃用。在
    MySQL 8.0.26 之前的版本中，请使用 [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)。
- en: '[`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)
    tells the replica server not to start the replication I/O (receiver) and SQL (applier)
    threads when the server starts. To start the threads later, use a [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement.'
  id: totrans-807
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)
    告诉复制服务器在启动服务器时不要启动复制 I/O（接收器）和 SQL（应用程序）线程。要稍后启动线程，请使用 [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") 语句。'
- en: This system variable is read-only and can be set by using the `PERSIST_ONLY`
    keyword or the `@@persist_only` qualifier with the [`SET`](set.html "13.3.6 The
    SET Type") statement. The [`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)
    command line option also sets this system variable. You can use the system variable
    in place of the command line option to allow access to this feature using MySQL
    Server’s privilege structure, so that database administrators do not need any
    privileged access to the operating system.
  id: totrans-808
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量为只读，可以使用 `PERSIST_ONLY` 关键字或 `@@persist_only` 修饰符与 [`SET`](set.html "13.3.6 The
    SET Type") 语句一起设置。[`--skip-replica-start`](replication-options-replica.html#option_mysqld_skip-replica-start)
    命令行选项也设置此系统变量。您可以使用系统变量代替命令行选项，以允许通过 MySQL Server 的权限结构访问此功能，这样数据库管理员就不需要对操作系统有任何特权访问。
- en: '[`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)'
  id: totrans-809
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)'
- en: '| Command-Line Format | `--skip-slave-start[={OFF&#124;ON}]` |'
  id: totrans-810
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--skip-slave-start[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-811
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[skip_slave_start](replication-options-replica.html#sysvar_skip_slave_start)`
    |'
  id: totrans-812
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[skip_slave_start](replication-options-replica.html#sysvar_skip_slave_start)`
    |'
- en: '| Scope | Global |'
  id: totrans-813
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-814
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-815
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-816
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-817
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)
    is deprecated and the alias [`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)
    should be used instead. In releases before MySQL 8.0.26, use [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start).
  id: totrans-818
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)
    已被弃用，应改用别名 [`skip_replica_start`](replication-options-replica.html#sysvar_skip_replica_start)。在
    MySQL 8.0.26 之前的版本中，请使用 [`skip_slave_start`](replication-options-replica.html#sysvar_skip_slave_start)。
- en: Tells the replica server not to start the replication I/O (receiver) and SQL
    (applier) threads when the server starts. To start the threads later, use a [`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement") statement.
  id: totrans-819
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 告诉复制服务器在启动服务器时不要启动复制 I/O（接收器）和 SQL（应用程序）线程。要稍后启动线程，请使用 [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") 语句。
- en: This system variable is available from MySQL 8.0.24\. It is read-only and can
    be set by using the `PERSIST_ONLY` keyword or the `@@persist_only` qualifier with
    the [`SET`](set.html "13.3.6 The SET Type") statement. The [`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)
    command line option also sets this system variable. You can use the system variable
    in place of the command line option to allow access to this feature using MySQL
    Server’s privilege structure, so that database administrators do not need any
    privileged access to the operating system.
  id: totrans-820
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量从MySQL 8.0.24版本开始可用。它是只读的，可以使用`PERSIST_ONLY`关键字或在[`SET`](set.html "13.3.6 The
    SET Type")语句中使用`@@persist_only`限定符来设置。[`--skip-slave-start`](replication-options-replica.html#option_mysqld_skip-slave-start)命令行选项也会设置此系统变量。您可以使用系统变量代替命令行选项，以允许通过MySQL服务器的权限结构访问此功能，这样数据库管理员就不需要对操作系统具有任何特权访问。
- en: '[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)'
  id: totrans-821
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)'
- en: '| Command-Line Format | `--slave-checkpoint-group=#` |'
  id: totrans-822
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-checkpoint-group=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-823
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_checkpoint_group](replication-options-replica.html#sysvar_slave_checkpoint_group)`
    |'
  id: totrans-824
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_checkpoint_group](replication-options-replica.html#sysvar_slave_checkpoint_group)`
    |'
- en: '| Scope | Global |'
  id: totrans-825
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-826
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-827
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-828
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `512` |'
  id: totrans-829
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `512` |'
- en: '| Minimum Value | `32` |'
  id: totrans-830
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `32` |'
- en: '| Maximum Value | `524280` |'
  id: totrans-831
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `524280` |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `8` |'
  id: totrans-832
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "Note") |
    `8` |'
- en: From MySQL 8.0.26, [`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)
    is deprecated and the alias [`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group).
  id: totrans-833
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)已被弃用，应改用别名[`replica_checkpoint_group`](replication-options-replica.html#sysvar_replica_checkpoint_group)。在MySQL
    8.0.26之前的版本中，请使用[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)。
- en: '[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)
    sets the maximum number of transactions that can be processed by a multithreaded
    replica before a checkpoint operation is called to update its status as shown
    by [`SHOW REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW REPLICA STATUS
    Statement"). Setting this variable has no effect on replicas for which multithreading
    is not enabled. Setting this variable has no immediate effect. The state of the
    variable applies on all subsequent [`START REPLICA`](start-replica.html "15.4.2.6 START
    REPLICA Statement") statements.'
  id: totrans-834
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)设置了多线程副本在调用检查点操作以更新其状态之前可以处理的最大事务数量，如[`SHOW
    REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW REPLICA STATUS Statement")所示。设置此变量对未启用多线程的副本没有影响。设置此变量没有立即效果。变量的状态适用于所有后续的[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句。'
- en: Previously, multithreaded replicas were not supported by NDB Cluster, which
    silently ignored the setting for this variable. This restriction was lifted in
    MySQL 8.0.33.
  id: totrans-835
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，NDB Cluster不支持多线程副本，对于此变量的设置被静默忽略。此限制在MySQL 8.0.33中解除。
- en: This variable works in combination with the [`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period)
    system variable in such a way that, when either limit is exceeded, the checkpoint
    is executed and the counters tracking both the number of transactions and the
    time elapsed since the last checkpoint are reset.
  id: totrans-836
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量与[`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period)系统变量结合使用，当超过任一限制时，将执行检查点，并重置跟踪事务数量和自上次检查点以来经过的时间的计数器。
- en: 'The minimum allowed value for this variable is 32, unless the server was built
    using [`-DWITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug),
    in which case the minimum value is 1\. The effective value is always a multiple
    of 8; you can set it to a value that is not such a multiple, but the server rounds
    it down to the next lower multiple of 8 before storing the value. (*Exception*:
    No such rounding is performed by the debug server.) Regardless of how the server
    was built, the default value is 512, and the maximum allowed value is 524280.'
  id: totrans-837
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '该变量的最小允许值为32，除非服务器是使用[`-DWITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)构建的，此时最小值为1。有效值始终是8的倍数；您可以将其设置为非8的倍数，但服务器在存储值之前会将其向下舍入到下一个较低的8的倍数。(*例外*:
    调试服务器不执行此舍入操作。) 无论服务器是如何构建的，默认值为512，最大允许值为524280。'
- en: '[`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period)'
  id: totrans-838
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period)'
- en: '| Command-Line Format | `--slave-checkpoint-period=#` |'
  id: totrans-839
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-checkpoint-period=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-840
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_checkpoint_period](replication-options-replica.html#sysvar_slave_checkpoint_period)`
    |'
  id: totrans-841
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_checkpoint_period](replication-options-replica.html#sysvar_slave_checkpoint_period)`
    |'
- en: '| Scope | Global |'
  id: totrans-842
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-843
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-844
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-845
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `300` |'
  id: totrans-846
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `300` |'
- en: '| Minimum Value | `1` |'
  id: totrans-847
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-848
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: '| Unit | milliseconds |'
  id: totrans-849
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 毫秒 |'
- en: As of MySQL 8.0.26, `slave_checkpoint_period` is deprecated, and [`replica_checkpoint_period`](replication-options-replica.html#sysvar_replica_checkpoint_period)
    should be used instead; prior to MySQL 8.0.26, use [`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period).
  id: totrans-850
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.26，`slave_checkpoint_period`已弃用，应改用[`replica_checkpoint_period`](replication-options-replica.html#sysvar_replica_checkpoint_period)；在MySQL
    8.0.26之前，请使用[`slave_checkpoint_period`](replication-options-replica.html#sysvar_slave_checkpoint_period)。
- en: '`slave_checkpoint_period` sets the maximum time (in milliseconds) that is allowed
    to pass before a checkpoint operation is called to update the status of a multithreaded
    replica as shown by [`SHOW REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW
    REPLICA STATUS Statement"). Setting this variable has no effect on replicas for
    which multithreading is not enabled. Setting this variable takes effect for all
    replication channels immediately, including running channels.'
  id: totrans-851
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`slave_checkpoint_period`设置了允许经过的最长时间（以毫秒为单位），在此时间内将调用检查点操作来更新多线程副本的状态，如[`SHOW
    REPLICA STATUS`](show-replica-status.html "15.7.7.35 SHOW REPLICA STATUS Statement")所示。设置此变量对未启用多线程的副本没有影响。设置此变量立即对所有复制通道生效，包括正在运行的通道。'
- en: Previously, multithreaded replicas were not supported by NDB Cluster, which
    silently ignored the setting for this variable. This restriction was lifted in
    MySQL 8.0.33.
  id: totrans-852
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，NDB Cluster不支持多线程副本，对于这个变量的设置被静默忽略。这个限制在MySQL 8.0.33中被取消。
- en: This variable works in combination with the [`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)
    system variable in such a way that, when either limit is exceeded, the checkpoint
    is executed and the counters tracking both the number of transactions and the
    time elapsed since the last checkpoint are reset.
  id: totrans-853
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量与[`slave_checkpoint_group`](replication-options-replica.html#sysvar_slave_checkpoint_group)系统变量结合使用，当超过任一限制时，将执行检查点并重置跟踪事务数量和自上次检查点以来经过的时间的计数器。
- en: The minimum allowed value for this variable is 1, unless the server was built
    using [`-DWITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug),
    in which case the minimum value is 0\. Regardless of how the server was built,
    the default value is 300 milliseconds, and the maximum possible value is 4294967295
    milliseconds (approximately 49.7 days).
  id: totrans-854
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该变量的最小允许值为1，除非服务器是使用[`-DWITH_DEBUG`](source-configuration-options.html#option_cmake_with_debug)构建的，此时最小值为0。无论服务器是如何构建的，默认值为300毫秒，最大可能值为4294967295毫秒（约49.7天）。
- en: '[`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)'
  id: totrans-855
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)'
- en: '| Command-Line Format | `--slave-compressed-protocol[={OFF&#124;ON}]` |'
  id: totrans-856
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-compressed-protocol[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.18 |'
  id: totrans-857
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.18 |'
- en: '| System Variable | `[slave_compressed_protocol](replication-options-replica.html#sysvar_slave_compressed_protocol)`
    |'
  id: totrans-858
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_compressed_protocol](replication-options-replica.html#sysvar_slave_compressed_protocol)`
    |'
- en: '| Scope | Global |'
  id: totrans-859
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-860
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-861
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-862
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-863
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: '[`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)
    is deprecated, and from MySQL 8.0.26, the alias [`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol).'
  id: totrans-864
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)
    已被弃用，从 MySQL 8.0.26 开始，应改用别名 [`replica_compressed_protocol`](replication-options-replica.html#sysvar_replica_compressed_protocol)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)。'
- en: '[`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)
    controls whether to use compression of the source/replica connection protocol
    if both source and replica support it. If this variable is disabled (the default),
    connections are uncompressed. Changes to this variable take effect on subsequent
    connection attempts; this includes after issuing a [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement, as well as reconnections made by
    a running replication I/O (receiver) thread.'
  id: totrans-865
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)
    控制是否在源/副本连接协议上使用压缩，如果源和副本都支持。如果禁用此变量（默认情况下），连接将不被压缩。对此变量的更改将在后续连接尝试中生效；这包括在发出
    [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement") 语句后，以及由正在运行的复制
    I/O（接收器）线程进行的重新连接。'
- en: Binary log transaction compression (available as of MySQL 8.0.20), which is
    activated by the [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    system variable, can also be used to save bandwidth. If you use binary log transaction
    compression in combination with protocol compression, protocol compression has
    less opportunity to act on the data, but can still compress headers and those
    events and transaction payloads that are uncompressed. For more information on
    binary log transaction compression, see [Section 7.4.4.5, “Binary Log Transaction
    Compression”](binary-log-transaction-compression.html "7.4.4.5 Binary Log Transaction
    Compression").
  id: totrans-866
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 二进制日志事务压缩（自 MySQL 8.0.20 起可用），由 [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    系统变量激活，也可用于节省带宽。如果将二进制日志事务压缩与协议压缩结合使用，协议压缩的作用机会较少，但仍可压缩标头以及未压缩的事件和事务有效载荷。有关二进制日志事务压缩的更多信息，请参见
    [Section 7.4.4.5, “Binary Log Transaction Compression”](binary-log-transaction-compression.html
    "7.4.4.5 Binary Log Transaction Compression")。
- en: As of MySQL 8.0.18, if [`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)
    is enabled, it takes precedence over any `SOURCE_COMPRESSION_ALGORITHMS` | `MASTER_COMPRESSION_ALGORITHMS`
    option specified for the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement") statement. In this case, connections to
    the source use `zlib` compression if both the source and replica support that
    algorithm. If [`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)
    is disabled, the value of `SOURCE_COMPRESSION_ALGORITHMS` | `MASTER_COMPRESSION_ALGORITHMS`
    applies. For more information, see [Section 6.2.8, “Connection Compression Control”](connection-compression-control.html
    "6.2.8 Connection Compression Control").
  id: totrans-867
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自 MySQL 8.0.18 起，如果启用了 [`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)，它将优先于为
    [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE
    REPLICATION SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement") 语句指定的任何 `SOURCE_COMPRESSION_ALGORITHMS`
    | `MASTER_COMPRESSION_ALGORITHMS` 选项。在这种情况下，如果源和副本都支持该算法，则连接到源使用 `zlib` 压缩。如果禁用了
    [`slave_compressed_protocol`](replication-options-replica.html#sysvar_slave_compressed_protocol)，则
    `SOURCE_COMPRESSION_ALGORITHMS` | `MASTER_COMPRESSION_ALGORITHMS` 的值适用。有关更多信息，请参见
    [Section 6.2.8, “Connection Compression Control”](connection-compression-control.html
    "6.2.8 Connection Compression Control")。
- en: As of MySQL 8.0.18, this system variable is deprecated. You should expect it
    to be removed in a future version of MySQL. See [Configuring Legacy Connection
    Compression](connection-compression-control.html#connection-compression-legacy-configuration
    "Configuring Legacy Connection Compression").
  id: totrans-868
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.18 开始，此系统变量已被弃用。您应该期望它在将来的 MySQL 版本中被移除。请参阅[配置传统连接压缩](connection-compression-control.html#connection-compression-legacy-configuration
    "配置传统连接压缩")。
- en: '[`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)'
  id: totrans-869
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)'
- en: '| Command-Line Format | `--slave-exec-mode=mode` |'
  id: totrans-870
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-exec-mode=mode` |'
- en: '| System Variable | `[slave_exec_mode](replication-options-replica.html#sysvar_slave_exec_mode)`
    |'
  id: totrans-871
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)
    |'
- en: '| Scope | Global |'
  id: totrans-872
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-873
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-874
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-875
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `IDEMPOTENT` (NDB)`STRICT` (Other) |'
  id: totrans-876
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `IDEMPOTENT`（NDB）`STRICT`（其他） |'
- en: '| Valid Values | `STRICT``IDEMPOTENT` |'
  id: totrans-877
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `STRICT``IDEMPOTENT` |'
- en: From MySQL 8.0.26, [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)
    is deprecated and the alias [`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode).
  id: totrans-878
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)
    已被弃用，应改用别名 [`replica_exec_mode`](replication-options-replica.html#sysvar_replica_exec_mode)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)。
- en: '[`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)
    controls how a replication thread resolves conflicts and errors during replication.
    `IDEMPOTENT` mode causes suppression of duplicate-key and no-key-found errors;
    `STRICT` means no such suppression takes place.'
  id: totrans-879
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)
    控制复制线程在复制过程中如何解决冲突和错误。`IDEMPOTENT` 模式导致重复键和找不到键错误的抑制；`STRICT` 表示不会发生这种抑制。'
- en: '`IDEMPOTENT` mode is intended for use in multi-source replication, circular
    replication, and some other special replication scenarios for NDB Cluster Replication.
    (See [Section 25.7.10, “NDB Cluster Replication: Bidirectional and Circular Replication”](mysql-cluster-replication-multi-source.html
    "25.7.10 NDB Cluster Replication: Bidirectional and Circular Replication"), and
    [Section 25.7.12, “NDB Cluster Replication Conflict Resolution”](mysql-cluster-replication-conflict-resolution.html
    "25.7.12 NDB Cluster Replication Conflict Resolution"), for more information.)
    NDB Cluster ignores any value explicitly set for [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode),
    and always treats it as `IDEMPOTENT`.'
  id: totrans-880
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`IDEMPOTENT` 模式适用于多源复制、循环复制和 NDB Cluster 复制的一些其他特殊复制场景。（有关更多信息，请参阅[第 25.7.10
    节，“NDB Cluster 复制：双向和循环复制”](mysql-cluster-replication-multi-source.html "25.7.10
    NDB Cluster 复制：双向和循环复制")，以及[第 25.7.12 节，“NDB Cluster 复制冲突解决”](mysql-cluster-replication-conflict-resolution.html
    "25.7.12 NDB Cluster 复制冲突解决")。）NDB Cluster 忽略为 [`slave_exec_mode`](replication-options-replica.html#sysvar_slave_exec_mode)
    明确设置的任何值，并始终将其视为 `IDEMPOTENT`。'
- en: In MySQL Server 8.0, `STRICT` mode is the default value.
  id: totrans-881
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL Server 8.0 中，`STRICT` 模式是默认值。
- en: Setting this variable takes immediate effect for all replication channels, including
    running channels.
  id: totrans-882
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此变量立即对所有复制通道生效，包括正在运行的通道。
- en: For storage engines other than [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0"), *`IDEMPOTENT` mode should be used only when you are absolutely
    sure that duplicate-key errors and key-not-found errors can safely be ignored*.
    It is meant to be used in fail-over scenarios for NDB Cluster where multi-source
    replication or circular replication is employed, and is not recommended for use
    in other cases.
  id: totrans-883
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于除了[`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0")之外的存储引擎，*只有在您绝对确定可以安全忽略重复键错误和找不到键错误时，才应使用`IDEMPOTENT`模式*。它旨在用于
    NDB Cluster 的故障转移场景，其中使用了多源复制或循环复制，并不建议在其他情况下使用。
- en: '[`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)'
  id: totrans-884
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)'
- en: '| Command-Line Format | `--slave-load-tmpdir=dir_name` |'
  id: totrans-885
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-load-tmpdir=dir_name` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-886
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_load_tmpdir](replication-options-replica.html#sysvar_slave_load_tmpdir)`
    |'
  id: totrans-887
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_load_tmpdir](replication-options-replica.html#sysvar_slave_load_tmpdir)`
    |'
- en: '| Scope | Global |'
  id: totrans-888
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | ��局 |'
- en: '| Dynamic | No |'
  id: totrans-889
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-890
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Directory name |'
  id: totrans-891
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 目录名称 |'
- en: '| Default Value | `Value of --tmpdir` |'
  id: totrans-892
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `--tmpdir` 的值 |'
- en: From MySQL 8.0.26, [`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)
    is deprecated and the alias [`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir).
  id: totrans-893
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)
    已弃用，应改用别名[`replica_load_tmpdir`](replication-options-replica.html#sysvar_replica_load_tmpdir)。在
    MySQL 8.0.26 之前的版本中，请使用[`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)。
- en: '[`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)
    specifies the name of the directory where the replica creates temporary files.
    Setting this variable takes effect for all replication channels immediately, including
    running channels. The variable value is by default equal to the value of the [`tmpdir`](server-system-variables.html#sysvar_tmpdir)
    system variable, or the default that applies when that system variable is not
    specified.'
  id: totrans-894
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_load_tmpdir`](replication-options-replica.html#sysvar_slave_load_tmpdir)
    指定副本创建临时文件的目录名称。设置此变量立即对所有复制通道生效，包括正在运行的通道。变量值默认等于[`tmpdir`](server-system-variables.html#sysvar_tmpdir)系统变量的值，或者在未指定该系统变量时适用的默认值。'
- en: When the replication SQL thread replicates a [`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement") statement, it extracts the file to be loaded from the relay log
    into temporary files, and then loads these into the table. If the file loaded
    on the source is huge, the temporary files on the replica are huge, too. Therefore,
    it might be advisable to use this option to tell the replica to put temporary
    files in a directory located in some file system that has a lot of available space.
    In that case, the relay logs are huge as well, so you might also want to set the
    [`relay_log`](replication-options-replica.html#sysvar_relay_log) system variable
    to place the relay logs in that file system.
  id: totrans-895
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当复制 SQL 线程复制[`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement")语句时，它会将要加载的文件从中继日志中提取到临时文件中，然后将这些文件加载到表中。如果源上加载的文件很大，则副本上的临时文件也很大。因此，建议使用此选项告诉副本将临时文件放在某个具有大量可用空间的文件系统中的目录中。在这种情况下，中继日志也很大，因此您可能还想设置[`relay_log`](replication-options-replica.html#sysvar_relay_log)系统变量以将中继日志放在该文件系统中。
- en: The directory specified by this option should be located in a disk-based file
    system (not a memory-based file system) so that the temporary files used to replicate
    [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement") statements can survive
    machine restarts. The directory also should not be one that is cleared by the
    operating system during the system startup process. However, replication can now
    continue after a restart if the temporary files have been removed.
  id: totrans-896
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项指定的目录应位于基于磁盘的文件系统中（而不是基于内存的文件系统），以便用于复制[`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement")语句的临时文件可以在机器重新启动时保留。该目录也不应该是在系统启动过程中被操作系统清除的目录。但是，如果临时文件已被删除，则复制现在可以在重新启动后继续。
- en: '[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)'
  id: totrans-897
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)'
- en: '| Command-Line Format | `--slave-max-allowed-packet=#` |'
  id: totrans-898
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-max-allowed-packet=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-899
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_max_allowed_packet](replication-options-replica.html#sysvar_slave_max_allowed_packet)`
    |'
  id: totrans-900
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_max_allowed_packet](replication-options-replica.html#sysvar_slave_max_allowed_packet)`
    |'
- en: '| Scope | Global |'
  id: totrans-901
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-902
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-903
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-904
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1073741824` |'
  id: totrans-905
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1073741824` |'
- en: '| Minimum Value | `1024` |'
  id: totrans-906
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1024` |'
- en: '| Maximum Value | `1073741824` |'
  id: totrans-907
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1073741824` |'
- en: '| Unit | bytes |'
  id: totrans-908
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `1024` |'
  id: totrans-909
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注") | `1024`
    |'
- en: From MySQL 8.0.26, [`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)
    is deprecated and the alias [`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet).
  id: totrans-910
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)
    已被弃用，应改用别名 [`replica_max_allowed_packet`](replication-options-replica.html#sysvar_replica_max_allowed_packet)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)。
- en: '[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)
    sets the maximum packet size in bytes that the replication SQL (applier) and I/O
    (receiver) threads can handle. Setting this variable takes effect for all replication
    channels immediately, including running channels. It is possible for a source
    to write binary log events longer than its [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    setting once the event header is added. The setting for [`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)
    must be larger than the [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    setting on the source, so that large updates using row-based replication do not
    cause replication to fail.'
  id: totrans-911
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)
    设置复制 SQL（应用程序）和 I/O（接收器）线程可以处理的最大数据包大小（以字节为单位）。设置此变量立即对所有复制通道生效，包括正在运行的通道。源可能写入比其
    [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    设置更长的二进制日志事件，一旦添加事件头。[`slave_max_allowed_packet`](replication-options-replica.html#sysvar_slave_max_allowed_packet)
    的设置必须大于源上的 [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    设置，以确保使用基于行的复制进行大型更新时不会导致复制失败。'
- en: This global variable always has a value that is a positive integer multiple
    of 1024; if you set it to some value that is not, the value is rounded down to
    the next highest multiple of 1024 for it is stored or used; setting `slave_max_allowed_packet`
    to 0 causes 1024 to be used. (A truncation warning is issued in all such cases.)
    The default and maximum value is 1073741824 (1 GB); the minimum is 1024.
  id: totrans-912
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此全局变量始终具有值，该值是 1024 的正整数倍；如果将其设置为非 1024 的值，则将其舍入到下一个最高的 1024 的倍数以进行存储或使用；将 `slave_max_allowed_packet`
    设置为 0 会���致使用 1024。（在所有这些情况下都会发出截断警告。）默认值和最大值为 1073741824（1 GB）；最小值为 1024。
- en: '[`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)'
  id: totrans-913
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)'
- en: '| Command-Line Format | `--slave-net-timeout=#` |'
  id: totrans-914
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-net-timeout=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-915
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_net_timeout](replication-options-replica.html#sysvar_slave_net_timeout)`
    |'
  id: totrans-916
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_net_timeout](replication-options-replica.html#sysvar_slave_net_timeout)`
    |'
- en: '| Scope | Global |'
  id: totrans-917
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-918
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-919
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-920
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `60` |'
  id: totrans-921
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `60` |'
- en: '| Minimum Value | `1` |'
  id: totrans-922
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `31536000` |'
  id: totrans-923
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `31536000` |'
- en: '| Unit | seconds |'
  id: totrans-924
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 秒 |'
- en: From MySQL 8.0.26, [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)
    is deprecated and the alias [`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout).
  id: totrans-925
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)
    已被弃用，应改用别名 [`replica_net_timeout`](replication-options-replica.html#sysvar_replica_net_timeout)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)。
- en: '[`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)
    specifies the number of seconds to wait for more data or a heartbeat signal from
    the source before the replica considers the connection broken, aborts the read,
    and tries to reconnect. Setting this variable has no immediate effect. The state
    of the variable applies on all subsequent [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") commands.'
  id: totrans-926
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)
    指定等待来自源的更多数据或心跳信号的秒数，然后副本认为连接已中断，中止读取，并尝试重新连接。设置此变量没有立即效果。变量的状态适用于所有后续的 [`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement") 命令。'
- en: The default value is 60 seconds (one minute). The first retry occurs immediately
    after the timeout. The interval between retries is controlled by the `SOURCE_CONNECT_RETRY`
    | `MASTER_CONNECT_RETRY` option for the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement") statement, and the number of reconnection
    attempts is limited by the `SOURCE_RETRY_COUNT` | `MASTER_RETRY_COUNT` option.
  id: totrans-927
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为 60 秒（一分钟）。超时后立即进行第一次重试。重试间隔由 [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO 语句") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO 语句") 语句的 `SOURCE_CONNECT_RETRY` | `MASTER_CONNECT_RETRY`
    选项控制，重连尝试次数由 `SOURCE_RETRY_COUNT` | `MASTER_RETRY_COUNT` 选项限制。
- en: The heartbeat interval, which stops the connection timeout occurring in the
    absence of data if the connection is still good, is controlled by the `SOURCE_HEARTBEAT_PERIOD`
    | `MASTER_HEARTBEAT_PERIOD` option for the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement") statement. The heartbeat interval defaults
    to half the value of [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout),
    and it is recorded in the replica's connection metadata repository and shown in
    the [`replication_connection_configuration`](performance-schema-replication-connection-configuration-table.html
    "29.12.11.1 The replication_connection_configuration Table") Performance Schema
    table. Note that a change to the value or default setting of [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)
    does not automatically change the heartbeat interval, whether that has been set
    explicitly or is using a previously calculated default. If the connection timeout
    is changed, you must also issue [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO Statement") to adjust the heartbeat interval to an
    appropriate value so that it occurs before the connection timeout.
  id: totrans-928
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 心跳间隔，用于防止在没有数据的情况下发生连接超时，由 [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO 语句") | [`CHANGE MASTER TO`](change-master-to.html
    "15.4.2.1 CHANGE MASTER TO 语句") 语句的 `SOURCE_HEARTBEAT_PERIOD` | `MASTER_HEARTBEAT_PERIOD`
    选项控制。心跳间隔默认为 [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)
    值的一半，并记录在副本的连接元数据存储库中，并显示在 [`replication_connection_configuration`](performance-schema-replication-connection-configuration-table.html
    "29.12.11.1 replication_connection_configuration 表") 性能模式表中。请注意，对于 [`slave_net_timeout`](replication-options-replica.html#sysvar_slave_net_timeout)
    的值或默认设置的更改不会自动更改心跳间隔，无论是显式设置还是使用先前计算的默认值。如果更改了连接超时时间，您还必须发出 [`CHANGE REPLICATION
    SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION SOURCE
    TO 语句") | [`CHANGE MASTER TO`](change-master-to.html "15.4.2.1 CHANGE MASTER TO
    语句") 来调整心跳间隔至适当值，以确保它在连接超时之前发生。
- en: '[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)'
  id: totrans-929
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)'
- en: '| Command-Line Format | `--slave-parallel-type=value` |'
  id: totrans-930
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-parallel-type=value` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-931
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_parallel_type](replication-options-replica.html#sysvar_slave_parallel_type)`
    |'
  id: totrans-932
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    |'
- en: '| Scope | Global |'
  id: totrans-933
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-934
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-935
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-936
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value (≥ 8.0.27) | `LOGICAL_CLOCK` |'
  id: totrans-937
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≥ 8.0.27） | `LOGICAL_CLOCK` |'
- en: '| Default Value (≤ 8.0.26) | `DATABASE` |'
  id: totrans-938
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≤ 8.0.26） | `DATABASE` |'
- en: '| Valid Values | `DATABASE``LOGICAL_CLOCK` |'
  id: totrans-939
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `DATABASE``LOGICAL_CLOCK` |'
- en: From MySQL 8.0.26, [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    is deprecated and the alias [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type).
  id: totrans-940
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    已被弃用，应改用别名 [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)。
- en: 'For multithreaded replicas (replicas on which [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is set to a value greater than 0), [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    specifies the policy used to decide which transactions are allowed to execute
    in parallel on the replica. The variable has no effect on replicas for which multithreading
    is not enabled. The possible values are:'
  id: totrans-941
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于多线程副本（将[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)设置为大于0的值的副本），[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)指定了用于决定在副本上哪些事务允许并行执行的策略。该变量对于未启用多线程的副本没有影响。可能的值包括：
- en: '`LOGICAL_CLOCK`: Transactions that are part of the same binary log group commit
    on a source are applied in parallel on a replica. The dependencies between transactions
    are tracked based on their timestamps to provide additional parallelization where
    possible. When this value is set, the [`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)
    system variable can be used on the source to specify that write sets are used
    for parallelization in place of timestamps, if a write set is available for the
    transaction and gives improved results compared to timestamps.'
  id: totrans-942
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOGICAL_CLOCK`：在源头上属于同一二进制日志组提交的事务在副本上并行应用。事务之间的依赖关系基于它们的时间戳进行跟踪，以在可能的情况下提供额外的并行化。当设置了这个值时，可以在源头上使用[`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)系统变量来指定在写入集可用的情况下，使用写入集代替时间戳进行并行化，如果写入集对事务提供了改进的结果。'
- en: '`DATABASE`: Transactions that update different databases are applied in parallel.
    This value is only appropriate if data is partitioned into multiple databases
    which are being updated independently and concurrently on the source. There must
    be no cross-database constraints, as such constraints may be violated on the replica.'
  id: totrans-943
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DATABASE`：更新不同数据库的事务并行应用。只有在数据被分区到多个独立并同时在源头上更新的数据库时，此值才合适。在副本上不得存在跨数据库约束，因为这样的约束可能会在副本上被违反。'
- en: When [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    or [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is set, you can only use `LOGICAL_CLOCK`. Before MySQL 8.0.27, `DATABASE` is the
    default. From MySQL 8.0.27, multithreading is enabled by default for replica servers
    ([`replica_parallel_workers=4`](replication-options-replica.html#sysvar_replica_parallel_workers)
    by default), so `LOGICAL_CLOCK` is the default, and the setting [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    is also the default.
  id: totrans-944
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)或[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)被设置时，只能使用`LOGICAL_CLOCK`。在MySQL
    8.0.27之前，默认为`DATABASE`。从MySQL 8.0.27开始，默认情况下为副本服务器启用了多线程（默认为[`replica_parallel_workers=4`](replication-options-replica.html#sysvar_replica_parallel_workers)），因此`LOGICAL_CLOCK`是默认值，并且设置[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)也是默认值。
- en: When your replication topology uses multiple levels of replicas, `LOGICAL_CLOCK`
    may achieve less parallelization for each level the replica is away from the source.
    You can reduce this effect by using [`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)
    on the source to specify that write sets are used instead of timestamps for parallelization
    where possible.
  id: totrans-945
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当您的复制拓扑结构使用多级副本时，`LOGICAL_CLOCK`可能会导致每个副本距离源头越远时并行化效果减少。您可以通过在源头使用[`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)来减少这种影响，以指定在可能的情况下使用写入集而不是时间戳进行并行化。
- en: When binary log transaction compression is enabled using the [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    system variable, if [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    or [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    is set to `DATABASE`, all the databases affected by the transaction are mapped
    before the transaction is scheduled. The use of binary log transaction compression
    with the `DATABASE` policy can reduce parallelism compared to uncompressed transactions,
    which are mapped and scheduled for each event.
  id: totrans-946
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用 [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    系统变量启用二进制日志事务压缩时，如果 [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    或 [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    设置为 `DATABASE`，则在调度事务之前将映射受事务影响的所有数据库。与未压缩的事务相比，使用 `DATABASE` 策略的二进制日志事务压缩可能会减少并行性，因为未压缩的事务会为每个事件映射并调度。
- en: '[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)'
  id: totrans-947
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)'
- en: '| Command-Line Format | `--slave-parallel-workers=#` |'
  id: totrans-948
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-parallel-workers=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-949
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_parallel_workers](replication-options-replica.html#sysvar_slave_parallel_workers)`
    |'
  id: totrans-950
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_parallel_workers](replication-options-replica.html#sysvar_slave_parallel_workers)`
    |'
- en: '| Scope | Global |'
  id: totrans-951
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-952
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-953
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-954
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value (≥ 8.0.27) | `4` |'
  id: totrans-955
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≥ 8.0.27） | `4` |'
- en: '| Default Value (≤ 8.0.26) | `0` |'
  id: totrans-956
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≤ 8.0.26） | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-957
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1024` |'
  id: totrans-958
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1024` |'
- en: From MySQL 8.0.26, [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is deprecated and the alias [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers).
  id: totrans-959
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    已弃用，应改用别名 [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)。
- en: '[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    enables multithreading on the replica and sets the number of applier threads for
    executing replication transactions in parallel. When the value is a number greater
    than 0, the replica is a multithreaded replica with the specified number of applier
    threads, plus a coordinator thread to manage them. If you are using multiple replication
    channels, each channel has this number of threads.'
  id: totrans-960
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    启用副本上的多线程，并设置用于并行执行复制事务的应用程序线程数。当值大于 0 时，副本是具有指定数量的应用程序线程的多线程副本，还有一个协调器线程来管理它们。如果使用多个复制通道，则每个通道都有这个数量的线程。'
- en: Before MySQL 8.0.27, the default for this system variable is 0, so replicas
    are not multithreaded by default. From MySQL 8.0.27, the default is 4, so replicas
    are multithreaded by default.
  id: totrans-961
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.27 之前，此系统变量的默认值为 0，因此默认情况下副本不是多线程的。从 MySQL 8.0.27 开始，默认值为 4，因此默认情况下副本是多线程的。
- en: Retrying of transactions is supported when multithreading is enabled on a replica.
    When [`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    or [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is set, transactions on a replica are externalized on the replica in the same
    order as they appear in the replica's relay log. The way in which transactions
    are distributed among applier threads is configured by [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    (from MySQL 8.0.26) or [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    (before MySQL 8.0.26). From MySQL 8.0.27, these system variables also have appropriate
    defaults for multithreading.
  id: totrans-962
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当启用多线程时，支持事务的重试。当设置[`replica_preserve_commit_order=ON`](replication-options-replica.html#sysvar_replica_preserve_commit_order)或[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)时，副本上的事务以与副本的中继日志中出现的顺序相同的顺序在副本上外部化。事务在应用程序线程之间分配的方式由[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)（从MySQL
    8.0.26开始）或[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)（在MySQL
    8.0.26之前）配置。从MySQL 8.0.27开始，这些系统变量也具有适用于多线程的默认值。
- en: To disable parallel execution, set [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    to 0, which gives the replica a single applier thread and no coordinator thread.
    With this setting, the [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    or [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    and [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    or [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    system variables have no effect and are ignored. From MySQL 8.0.27, if parallel
    execution is disabled when the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") option `GTID_ONLY` is enabled
    on a replica, the replica actually uses one parallel worker to take advantage
    of the method for retrying transactions without accessing the file positions.
    With one parallel worker, the [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    ([`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order))
    system variable also has no effect.
  id: totrans-963
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要禁用并行执行，将[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)设置为0，这将为副本提供一个单独的应用程序线程和没有协调器线程。在这种设置下，[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)或[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)以及[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)或[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)系统变量没有效果，并且被忽略。从MySQL
    8.0.27开始，如果在副本上启用`GTID_ONLY`选项时禁用并行执行，副本实际上会使用一个并行工作者来利用无需访问文件位置即可重试事务的方法。使用一个并行工作者，[`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)（[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)）系统变量也没有效果。
- en: Setting [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    has no immediate effect. The state of the variable applies on all subsequent [`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement") statements.
  id: totrans-964
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)没有立即效果。变量的状态适用于所有后续的[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句。
- en: Previously, multithreaded replicas were not supported by NDB Cluster, which
    silently ignored the setting for this variable. This restriction was lifted in
    MySQL 8.0.33.
  id: totrans-965
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以前，NDB Cluster不支持多线程副本，静默地忽略了此变量的设置。这个限制在MySQL 8.0.33中解除。
- en: '[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)'
  id: totrans-966
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)'
- en: '| Command-Line Format | `--slave-pending-jobs-size-max=#` |'
  id: totrans-967
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-pending-jobs-size-max=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-968
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_pending_jobs_size_max](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)`
    |'
  id: totrans-969
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_pending_jobs_size_max](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)`
    |'
- en: '| Scope | Global |'
  id: totrans-970
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-971
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-972
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-973
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value (≥ 8.0.12) | `128M` |'
  id: totrans-974
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≥ 8.0.12） | `128M` |'
- en: '| Default Value (8.0.11) | `16M` |'
  id: totrans-975
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（8.0.11） | `16M` |'
- en: '| Minimum Value | `1024` |'
  id: totrans-976
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1024` |'
- en: '| Maximum Value | `16EiB` |'
  id: totrans-977
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `16EiB` |'
- en: '| Unit | bytes |'
  id: totrans-978
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `1024` |'
  id: totrans-979
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `1024`
    |'
- en: From MySQL 8.0.26, [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)
    is deprecated and the alias [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max).
  id: totrans-980
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)
    已被弃用，应改用别名 [`replica_pending_jobs_size_max`](replication-options-replica.html#sysvar_replica_pending_jobs_size_max)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_pending_jobs_size_max`](replication-options-replica.html#sysvar_slave_pending_jobs_size_max)。
- en: For multithreaded replicas, this variable sets the maximum amount of memory
    (in bytes) available to applier queues holding events not yet applied. Setting
    this variable has no effect on replicas for which multithreading is not enabled.
    Setting this variable has no immediate effect. The state of the variable applies
    on all subsequent [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    Statement") commands.
  id: totrans-981
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于多线程复制，此变量设置了尚未应用的事件的接收器队列可用的最大内存量（以字节为单位）。设置此变量对未启用多线程的复制品没有影响。设置此变量不会立即生效。变量的状态适用于所有后续的
    [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement") 命令。
- en: The minimum possible value for this variable is 1024 bytes; the default is 128MB.
    The maximum possible value is 18446744073709551615 (16 exbibytes). Values that
    are not exact multiples of 1024 bytes are rounded down to the next lower multiple
    of 1024 bytes prior to being stored.
  id: totrans-982
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量的最小可能值为 1024 字节；默认值为 128MB。最大可能值为 18446744073709551615（16 exbibytes）。不是 1024
    字节的精确倍数的值在存储之前会被舍入到下一个较低的 1024 字节的倍数。
- en: The value of this variable is a soft limit and can be set to match the normal
    workload. If an unusually large event exceeds this size, the transaction is held
    until all the worker threads have empty queues, and then processed. All subsequent
    transactions are held until the large transaction has been completed.
  id: totrans-983
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量的值是一个软限制，可以设置为匹配正常工作负载。如果异常大的事件超过此大小，事务将被保持，直到所有工作线程的队列为空，然后再处理。所有后续事务将被保持，直到大事务完成。
- en: '[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)'
  id: totrans-984
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)'
- en: '| Command-Line Format | `--slave-preserve-commit-order[={OFF&#124;ON}]` |'
  id: totrans-985
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-preserve-commit-order[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-986
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_preserve_commit_order](replication-options-replica.html#sysvar_slave_preserve_commit_order)`
    |'
  id: totrans-987
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_preserve_commit_order](replication-options-replica.html#sysvar_slave_preserve_commit_order)`
    |'
- en: '| Scope | Global |'
  id: totrans-988
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-989
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-990
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-991
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value (≥ 8.0.27) | `ON` |'
  id: totrans-992
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≥ 8.0.27） | `ON` |'
- en: '| Default Value (≤ 8.0.26) | `OFF` |'
  id: totrans-993
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（≤ 8.0.26） | `OFF` |'
- en: From MySQL 8.0.26, [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is deprecated and the alias [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order).
  id: totrans-994
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    已被弃用，应改用别名 [`replica_preserve_commit_order`](replication-options-replica.html#sysvar_replica_preserve_commit_order)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)。
- en: For multithreaded replicas (replicas on which [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is set to a value greater than 0), setting [`slave_preserve_commit_order=1`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    ensures that transactions are executed and committed on the replica in the same
    order as they appear in the replica's relay log. This prevents gaps in the sequence
    of transactions that have been executed from the replica's relay log, and preserves
    the same transaction history on the replica as on the source (with the limitations
    listed below). This variable has no effect on replicas for which multithreading
    is not enabled.
  id: totrans-995
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于多线程副本（将[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)设置为大于
    0 的值的副本），设置[`slave_preserve_commit_order=1`](replication-options-replica.html#sysvar_slave_preserve_commit_order)确保事务在副本上以与它们在副本的中继日志中出现的顺序相同的顺序执行和提交。这可以防止在已从副本的中继日志执行的事务序列中出现间隙，并保留与源相同的事务历史（具有下面列出的限制）。此变量对未启用多线程的副本无效。
- en: Before MySQL 8.0.27, the default for this system variable is `OFF`, meaning
    that transactions may be committed out of order. From MySQL 8.0.27, multithreading
    is enabled by default for replica servers ([`replica_parallel_workers=4`](replication-options-replica.html#sysvar_replica_parallel_workers)
    by default), so [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is the default, and the setting [`slave_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_slave_parallel_type)
    is also the default. Also from MySQL 8.0.27, the setting for [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is ignored if [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is set to 1, because in that situation the order of transactions is preserved
    anyway.
  id: totrans-996
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.27 之前，此系统变量的默认值为`OFF`，意味着事务可能会按顺序提交。从 MySQL 8.0.27 开始，默认情况下为副本服务器启用了多线程（默认为[`replica_parallel_workers=4`](replication-options-replica.html#sysvar_replica_parallel_workers)），因此[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)是默认设置，设置[`slave_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_slave_parallel_type)也是默认设置。同样从
    MySQL 8.0.27 开始，如果将[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)设置为
    1，则[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)的设置将被忽略，因为在这种情况下，事务的顺序仍然会被保留。
- en: Up to and including MySQL 8.0.18, setting [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    requires that binary logging ([`log_bin`](replication-options-binary-log.html#sysvar_log_bin))
    and replica update logging ([`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates))
    are enabled on the replica, which are the default settings from MySQL 8.0\. From
    MySQL 8.0.19, binary logging and replica update logging are not required on the
    replica to set [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order),
    and can be disabled if wanted. In all releases, setting [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    requires that [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    is set to `LOGICAL_CLOCK`, which is *not* the default setting before MySQL 8.0.27\.
    Before changing the value of [`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    and [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type),
    the replication SQL thread (for all replication channels if you are using multiple
    replication channels) must be stopped.
  id: totrans-997
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.18，设置[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)要求在副本上启用二进制日志（[`log_bin`](replication-options-binary-log.html#sysvar_log_bin)）和副本更新日志（[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)），这是从MySQL
    8.0开始的默认设置。从MySQL 8.0.19开始，在副本上设置[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)不再需要启用二进制日志和副本更新日志，并且如果需要的话可以禁用。在所有版本中，设置[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)要求将[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)设置为`LOGICAL_CLOCK`，这在MySQL
    8.0.27之前*不*是默认设置。在更改[`slave_preserve_commit_order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)和[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)的值之前，必须停止复制SQL线程（如果使用多个复制通道，则对所有复制通道的复制SQL线程都要停止）。
- en: When [`slave_preserve_commit_order=OFF`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is set, which is the default, the transactions that a multithreaded replica applies
    in parallel may commit out of order. Therefore, checking for the most recently
    executed transaction does not guarantee that all previous transactions from the
    source have been executed on the replica. There is a chance of gaps in the sequence
    of transactions that have been executed from the replica's relay log. This has
    implications for logging and recovery when using a multithreaded replica. See
    [Section 19.5.1.34, “Replication and Transaction Inconsistencies”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 Replication and Transaction Inconsistencies") for more information.
  id: totrans-998
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当[`slave_preserve_commit_order=OFF`](replication-options-replica.html#sysvar_slave_preserve_commit_order)被设置时，这是默认设置，多线程复制的副本并行应用的事务可能会无序提交。因此，检查最近执行的事务并不能保证源端的所有先前事务在副本上已执行。副本的中继日志中执行的事务序列可能存在间隙的可能性。这对于使用多线程复制时的日志记录和恢复有影响。更多信息请参见[Section 19.5.1.34,
    “复制和事务不一致性”](replication-features-transaction-inconsistencies.html "19.5.1.34 复制和事务不一致性")。
- en: When [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    is set, the executing worker thread waits until all previous transactions are
    committed before committing. While a given thread is waiting for other worker
    threads to commit their transactions, it reports its status as `Waiting for preceding
    transaction to commit`. With this mode, a multithreaded replica never enters a
    state that the source was not in. This supports the use of replication for read
    scale-out. See [Section 19.4.5, “Using Replication for Scale-Out”](replication-solutions-scaleout.html
    "19.4.5 Using Replication for Scale-Out").
  id: totrans-999
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)被设置时，执行的工作线程会等待所有先前的事务提交后再进行提交。当一个线程在等待其他工作线程提交事务时，它会报告其状态为`等待前面的事务提交`。使用这种模式，多线程复制永远不会进入源端不在的状态。这支持将复制用于读取扩展。更多信息请参见[Section 19.4.5,
    “使用复制进行扩展”](replication-solutions-scaleout.html "19.4.5 使用复制进行扩展")。
- en: Note
  id: totrans-1000
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    does not prevent source binary log position lag, where `Exec_master_log_pos` is
    behind the position up to which transactions have been executed. See [Section 19.5.1.34,
    “Replication and Transaction Inconsistencies”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 Replication and Transaction Inconsistencies").'
  id: totrans-1001
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)不会阻止源二进制日志位置滞后，其中`Exec_master_log_pos`落后于已执行事务的位置。请参阅[Section 19.5.1.34,
    “Replication and Transaction Inconsistencies”](replication-features-transaction-inconsistencies.html
    "19.5.1.34 Replication and Transaction Inconsistencies")。'
- en: '[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    does not preserve the commit order and transaction history if the replica uses
    filters on its binary log, such as [`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db).'
  id: totrans-1002
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)不会保留副本在其二进制日志上使用过滤器时的提交顺序和事务历史，例如[`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)。'
- en: '[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    does not preserve the order of non-transactional DML updates. These might commit
    before transactions that precede them in the relay log, which might result in
    gaps in the sequence of transactions that have been executed from the replica''s
    relay log.'
  id: totrans-1003
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)不会保留非事务性DML更新的顺序。这些更新可能会在中继日志中的先前事务之前提交，这可能导致从副本的中继日志中执行的事务序列中出现间隙。'
- en: In releases before MySQL 8.0.19, [`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    does not preserve the order of statements with an `IF EXISTS` clause when the
    object concerned does not exist. These might commit before transactions that precede
    them in the relay log, which might result in gaps in the sequence of transactions
    that have been executed from the replica's relay log.
  id: totrans-1004
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.19之前的版本中，[`slave_preserve_commit_order=ON`](replication-options-replica.html#sysvar_slave_preserve_commit_order)在对象不存在时不会保留带有`IF
    EXISTS`子句的语句的顺序。这些语句可能会在中继日志中的先前事务之前提交，这可能导致从副本的中继日志中执行的事务序列中出现间隙。
- en: A limitation to preserving the commit order on the replica can occur if statement-based
    replication is in use, and both transactional and non-transactional storage engines
    participate in a non-XA transaction that is rolled back on the source. Normally,
    non-XA transactions that are rolled back on the source are not replicated to the
    replica, but in this particular situation, the transaction might be replicated
    to the replica. If this does happen, a multithreaded replica without binary logging
    does not handle the transaction rollback, so the commit order on the replica diverges
    from the relay log order of the transactions in that case.
  id: totrans-1005
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果使用基于语句的复制，并且事务性和非事务性存储引擎参与在源上回滚的非XA事务，可能会出现保留副本上提交顺序的限制。通常，在源上回滚的非XA事务不会被复制到副本，但在这种特殊情况下，该事务可能会被复制到副本。如果发生这种情况，没有二进制日志记录的多线程副本无法处理事务回滚，因此在这种情况下，副本上的提交顺序会与事务的中继日志顺序发生分歧。
- en: '[`slave_rows_search_algorithms`](replication-options-replica.html#sysvar_slave_rows_search_algorithms)'
  id: totrans-1006
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_rows_search_algorithms`](replication-options-replica.html#sysvar_slave_rows_search_algorithms)'
- en: '| Command-Line Format | `--slave-rows-search-algorithms=value` |'
  id: totrans-1007
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-rows-search-algorithms=value` |'
- en: '| Deprecated | 8.0.18 |'
  id: totrans-1008
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.18 |'
- en: '| System Variable | `[slave_rows_search_algorithms](replication-options-replica.html#sysvar_slave_rows_search_algorithms)`
    |'
  id: totrans-1009
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_rows_search_algorithms](replication-options-replica.html#sysvar_slave_rows_search_algorithms)`
    |'
- en: '| Scope | Global |'
  id: totrans-1010
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1011
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1012
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Set |'
  id: totrans-1013
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 设置 |'
- en: '| Default Value | `INDEX_SCAN,HASH_SCAN` |'
  id: totrans-1014
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `INDEX_SCAN,HASH_SCAN` |'
- en: '| Valid Values | `TABLE_SCAN,INDEX_SCAN``INDEX_SCAN,HASH_SCAN``TABLE_SCAN,HASH_SCAN``TABLE_SCAN,INDEX_SCAN,HASH_SCAN`
    (equivalent to INDEX_SCAN,HASH_SCAN) |'
  id: totrans-1015
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效取值 | `TABLE_SCAN,INDEX_SCAN``INDEX_SCAN,HASH_SCAN``TABLE_SCAN,HASH_SCAN``TABLE_SCAN,INDEX_SCAN,HASH_SCAN`（等同于INDEX_SCAN,HASH_SCAN）
    |'
- en: When preparing batches of rows for row-based logging and replication, this system
    variable controls how the rows are searched for matches, in particular whether
    hash scans are used. The use of this system variable is now deprecated. The default
    setting `INDEX_SCAN,HASH_SCAN` is optimal for performance and works correctly
    in all scenarios. See [Section 19.5.1.27, “Replication and Row Searches”](replication-features-row-searches.html
    "19.5.1.27 Replication and Row Searches").
  id: totrans-1016
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在为基于行的日志记录和复制准备行批次时，此系统变量控制如何搜索匹配的行，特别是是否使用哈希扫描。现在已弃用此系统变量。默认设置 `INDEX_SCAN,HASH_SCAN`
    对性能最佳，并在所有情况下都能正常工作。请参阅 [Section 19.5.1.27, “Replication and Row Searches”](replication-features-row-searches.html
    "19.5.1.27 Replication and Row Searches")。
- en: '[`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors)'
  id: totrans-1017
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors)'
- en: '| Command-Line Format | `--slave-skip-errors=name` |'
  id: totrans-1018
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-skip-errors=name` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-1019
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_skip_errors](replication-options-replica.html#sysvar_slave_skip_errors)`
    |'
  id: totrans-1020
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_skip_errors](replication-options-replica.html#sysvar_slave_skip_errors)`
    |'
- en: '| Scope | Global |'
  id: totrans-1021
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1022
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1023
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | String |'
  id: totrans-1024
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1025
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: '| Valid Values | `OFF``[list of error codes]``all``ddl_exist_errors` |'
  id: totrans-1026
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `OFF``[错误代码列表]``all``ddl_exist_errors` |'
- en: From MySQL 8.0.26, [`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors)
    is deprecated and the alias [`replica_skip_errors`](replication-options-replica.html#sysvar_replica_skip_errors)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors).
  id: totrans-1027
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors)
    已弃用，应使用别名 [`replica_skip_errors`](replication-options-replica.html#sysvar_replica_skip_errors)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors)。
- en: Normally, replication stops when an error occurs on the replica, which gives
    you the opportunity to resolve the inconsistency in the data manually. This variable
    causes the replication SQL thread to continue replication when a statement returns
    any of the errors listed in the variable value.
  id: totrans-1028
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常情况下，当副本出现错误时，复制过程会停止，这给了你机会手动解决数据不一致性。此变量使得复制 SQL 线程在语句返回变量值中列出的任何错误时继续复制。
- en: '[`replica_skip_errors`](replication-options-replica.html#sysvar_replica_skip_errors)'
  id: totrans-1029
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`replica_skip_errors`](replication-options-replica.html#sysvar_replica_skip_errors)'
- en: '| Command-Line Format | `--replica-skip-errors=name` |'
  id: totrans-1030
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--replica-skip-errors=name` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-1031
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[replica_skip_errors](replication-options-replica.html#sysvar_replica_skip_errors)`
    |'
  id: totrans-1032
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[replica_skip_errors](replication-options-replica.html#sysvar_replica_skip_errors)`
    |'
- en: '| Scope | Global |'
  id: totrans-1033
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-1034
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1035
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | String |'
  id: totrans-1036
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `OFF` |'
  id: totrans-1037
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: '| Valid Values | `OFF``[list of error codes]``all``ddl_exist_errors` |'
  id: totrans-1038
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `OFF``[错误代码列表]``all``ddl_exist_errors` |'
- en: From MySQL 8.0.26, use [`replica_skip_errors`](replication-options-replica.html#sysvar_replica_skip_errors)
    in place of [`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors).
  id: totrans-1039
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，应使用 [`replica_skip_errors`](replication-options-replica.html#sysvar_replica_skip_errors)
    替代 [`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors)，后者从该版本开始已被弃用。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_skip_errors`](replication-options-replica.html#sysvar_slave_skip_errors)。
- en: Normally, replication stops when an error occurs on the replica, which gives
    you the opportunity to resolve the inconsistency in the data manually. This variable
    causes the replication SQL thread to continue replication when a statement returns
    any of the errors listed in the variable value.
  id: totrans-1040
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常情况下，当副本���现错误时，复制过程会停止，这给了你机会手动解决数据不一致性。此变量使得复制 SQL 线程在语句返回变量值中列出的任何错误时继续复制。
- en: '[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)'
  id: totrans-1041
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)'
- en: '| Command-Line Format | `--slave-sql-verify-checksum[={OFF&#124;ON}]` |'
  id: totrans-1042
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-sql-verify-checksum[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-1043
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_sql_verify_checksum](replication-options-replica.html#sysvar_slave_sql_verify_checksum)`
    |'
  id: totrans-1044
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_sql_verify_checksum](replication-options-replica.html#sysvar_slave_sql_verify_checksum)`
    |'
- en: '| Scope | Global |'
  id: totrans-1045
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1046
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1047
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Boolean |'
  id: totrans-1048
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-1049
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: From MySQL 8.0.26, [`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)
    is deprecated and the alias [`replica_sql_verify_checksum`](replication-options-replica.html#sysvar_replica_sql_verify_checksum)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum).
  id: totrans-1050
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)
    已弃用，应改用别名 [`replica_sql_verify_checksum`](replication-options-replica.html#sysvar_replica_sql_verify_checksum)。在MySQL
    8.0.26之前的版本中，请使用 [`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)。
- en: '[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)
    causes the replication SQL thread to verify data using the checksums read from
    the relay log. In the event of a mismatch, the replica stops with an error. Setting
    this variable takes effect for all replication channels immediately, including
    running channels.'
  id: totrans-1051
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_sql_verify_checksum`](replication-options-replica.html#sysvar_slave_sql_verify_checksum)
    导致复制SQL线程使用从中继日志读取的校验和来验证数据。在出现不匹配时，副本将停止并显示错误。设置此变量立即对所有复制通道生效，包括正在运行的通道。'
- en: Note
  id: totrans-1052
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The replication I/O (receiver) thread always reads checksums if possible when
    accepting events from over the network.
  id: totrans-1053
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制I/O（接收器）线程在从网络接收事件时始终尽可能读取校验和。
- en: '[`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)'
  id: totrans-1054
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)'
- en: '| Command-Line Format | `--slave-transaction-retries=#` |'
  id: totrans-1055
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-transaction-retries=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-1056
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_transaction_retries](replication-options-replica.html#sysvar_slave_transaction_retries)`
    |'
  id: totrans-1057
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_transaction_retries](replication-options-replica.html#sysvar_slave_transaction_retries)`
    |'
- en: '| Scope | Global |'
  id: totrans-1058
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1059
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1060
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Integer |'
  id: totrans-1061
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `10` |'
  id: totrans-1062
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1063
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value (64-bit platforms) | `18446744073709551615` |'
  id: totrans-1064
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `18446744073709551615` |'
- en: '| Maximum Value (32-bit platforms) | `4294967295` |'
  id: totrans-1065
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `4294967295` |'
- en: From MySQL 8.0.26, [`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)
    is deprecated and the alias [`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries).
  id: totrans-1066
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，[`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)
    已弃用，应改用别名 [`replica_transaction_retries`](replication-options-replica.html#sysvar_replica_transaction_retries)。在MySQL
    8.0.26之前的版本中，请使用 [`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)。
- en: '[`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)
    sets the maximum number of times for replication SQL threads on a single-threaded
    or multithreaded replica to automatically retry failed transactions before stopping.
    Setting this variable takes effect for all replication channels immediately, including
    running channels. The default value is 10\. Setting the variable to 0 disables
    automatic retrying of transactions.'
  id: totrans-1067
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)
    设置单线程或多线程副本上的复制SQL线程在停止之前自动重试失败事务的最大次数。设置此变量立即对所有复制通道生效，包括正在运行的通道。默认值为10。将变量设置为0会禁用事务的自动重试。'
- en: If a replication SQL thread fails to execute a transaction because of an [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") deadlock or because the transaction's
    execution time exceeded [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine")'s [`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    or [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0")'s [`TransactionDeadlockDetectionTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactiondeadlockdetectiontimeout)
    or [`TransactionInactiveTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactioninactivetimeout),
    it automatically retries [`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)
    times before stopping with an error. Transactions with a non-temporary error are
    not retried.
  id: totrans-1068
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果复制 SQL 线程由于 [`InnoDB`](innodb-storage-engine.html "第 17 章 InnoDB 存储引擎") 死锁或因事务执行时间超过
    [`InnoDB`](innodb-storage-engine.html "第 17 章 InnoDB 存储引擎") 的 [`innodb_lock_wait_timeout`](innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
    或 [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0") 的 [`TransactionDeadlockDetectionTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactiondeadlockdetectiontimeout)
    或 [`TransactionInactiveTimeout`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-transactioninactivetimeout)
    而无法执行事务时，它会在停止并报错之前自动重试 [`slave_transaction_retries`](replication-options-replica.html#sysvar_slave_transaction_retries)
    次。具有非临时错误的事务不会被重试。
- en: The Performance Schema table [`replication_applier_status`](performance-schema-replication-applier-status-table.html
    "29.12.11.6 The replication_applier_status Table") shows the number of retries
    that took place on each replication channel, in the `COUNT_TRANSACTIONS_RETRIES`
    column. The Performance Schema table [`replication_applier_status_by_worker`](performance-schema-replication-applier-status-by-worker-table.html
    "29.12.11.8 The replication_applier_status_by_worker Table") shows detailed information
    on transaction retries by individual applier threads on a single-threaded or multithreaded
    replica, and identifies the errors that caused the last transaction and the transaction
    currently in progress to be reattempted.
  id: totrans-1069
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Performance Schema 表 [`replication_applier_status`](performance-schema-replication-applier-status-table.html
    "29.12.11.6 replication_applier_status 表") 显示了每个复制通道上发生的重试次数，在 `COUNT_TRANSACTIONS_RETRIES`
    列中。Performance Schema 表 [`replication_applier_status_by_worker`](performance-schema-replication-applier-status-by-worker-table.html
    "29.12.11.8 replication_applier_status_by_worker 表") 显示了单线程或多线程副本上各个应用程序线程对事务重试的详细信息，并标识导致最后一个事务和当前正在进行的事务重新尝试的错误。
- en: '[`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)'
  id: totrans-1070
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)'
- en: '| Command-Line Format | `--slave-type-conversions=set` |'
  id: totrans-1071
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--slave-type-conversions=set` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-1072
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.26 |'
- en: '| System Variable | `[slave_type_conversions](replication-options-replica.html#sysvar_slave_type_conversions)`
    |'
  id: totrans-1073
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[slave_type_conversions](replication-options-replica.html#sysvar_slave_type_conversions)`
    |'
- en: '| Scope | Global |'
  id: totrans-1074
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1075
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1076
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Set |'
  id: totrans-1077
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 集合 |'
- en: '| Default Value |  |'
  id: totrans-1078
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 |  |'
- en: '| Valid Values | `ALL_LOSSY``ALL_NON_LOSSY``ALL_SIGNED``ALL_UNSIGNED` |'
  id: totrans-1079
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `ALL_LOSSY``ALL_NON_LOSSY``ALL_SIGNED``ALL_UNSIGNED` |'
- en: From MySQL 8.0.26, [`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)
    is deprecated and the alias [`replica_type_conversions`](replication-options-replica.html#sysvar_replica_type_conversions)
    should be used instead. In releases before MySQL 8.0.26, use [`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions).
  id: totrans-1080
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，[`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)
    已被弃用，应改用别名 [`replica_type_conversions`](replication-options-replica.html#sysvar_replica_type_conversions)。在
    MySQL 8.0.26 之前的版本中，请使用 [`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)。
- en: '[`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)
    controls the type conversion mode in effect on the replica when using row-based
    replication. Its value is a comma-delimited set of zero or more elements from
    the list: `ALL_LOSSY`, `ALL_NON_LOSSY`, `ALL_SIGNED`, `ALL_UNSIGNED`. Set this
    variable to an empty string to disallow type conversions between the source and
    the replica. Setting this variable takes effect for all replication channels immediately,
    including running channels.'
  id: totrans-1081
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`slave_type_conversions`](replication-options-replica.html#sysvar_slave_type_conversions)
    控制着在使用基于行的复制时副本上生效的类型转换模式。其值是一个由逗号分隔的零个或多个元素的集合：`ALL_LOSSY`、`ALL_NON_LOSSY`、`ALL_SIGNED`、`ALL_UNSIGNED`。将此变量设置为空字符串以禁止源和副本之间的类型转换。设置此变量立即对所有复制通道生效，包括正在运行的通道。'
- en: 'For additional information on type conversion modes applicable to attribute
    promotion and demotion in row-based replication, see [Row-based replication: attribute
    promotion and demotion](replication-features-differing-tables.html#replication-features-attribute-promotion
    "Row-based replication: attribute promotion and demotion").'
  id: totrans-1082
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关适用于基于行的复制中属性提升和降级的类型转换模式的更多信息，请参阅[基于行的复制：属性提升和降级](replication-features-differing-tables.html#replication-features-attribute-promotion
    "基于行的复制：属性提升和降级")。
- en: '[`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)'
  id: totrans-1083
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)'
- en: '| Introduced | 8.0.26 |'
  id: totrans-1084
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[sql_replica_skip_counter](replication-options-replica.html#sysvar_sql_replica_skip_counter)`
    |'
  id: totrans-1085
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[sql_replica_skip_counter](replication-options-replica.html#sysvar_sql_replica_skip_counter)`
    |'
- en: '| Scope | Global |'
  id: totrans-1086
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1087
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1088
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1089
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-1090
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1091
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1092
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: From MySQL 8.0.26, use [`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)
    in place of [`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter).
  id: totrans-1093
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用 [`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)
    代替 [`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)，后者从该版本开始已被弃用。在
    MySQL 8.0.26 之前的版本中，请使用 [`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)。
- en: '[`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)
    specifies the number of events from the source that a replica should skip. Setting
    the option has no immediate effect. The variable applies to the next [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement; the next [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement also changes the value back to 0\.
    When this variable is set to a nonzero value and there are multiple replication
    channels configured, the [`START REPLICA`](start-replica.html "15.4.2.6 START
    REPLICA Statement") statement can only be used with the `FOR CHANNEL *`channel`*`
    clause.'
  id: totrans-1094
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)
    指定副本应跳过的源事件数。设置该选项没有立即效果。该变量适用于下一个 [`START REPLICA`](start-replica.html "15.4.2.6 START
    REPLICA 语句") 语句；下一个 [`START REPLICA`](start-replica.html "15.4.2.6 START REPLICA
    语句") 语句还会将值更改回 0。当此变量设置为非零值且配置了多个复制通道时，[`START REPLICA`](start-replica.html "15.4.2.6 START
    REPLICA 语句") 语句只能与 `FOR CHANNEL *`channel`*` 子句一起使用。'
- en: This option is incompatible with GTID-based replication, and must not be set
    to a nonzero value when [`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)
    is set. If you need to skip transactions when employing GTIDs, use [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    from the source instead. If you have enabled GTID assignment on a replication
    channel using the `ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS` option of the [`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement") statement, [`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)
    is available. See [Section 19.1.7.3, “Skipping Transactions”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions").
  id: totrans-1095
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该选项与基于GTID的复制不兼容，在设置[`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)时不能将其设置为非零值。如果在使用GTIDs时需要跳过事务，请改用源端的[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)。如果已经在复制通道上启用了GTID分配，使用[`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement")语句的`ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS`选项，[`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)可用。请参见[第19.1.7.3节，“跳过事务”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions")。
- en: Important
  id: totrans-1096
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: If skipping the number of events specified by setting this variable would cause
    the replica to begin in the middle of an event group, the replica continues to
    skip until it finds the beginning of the next event group and begins from that
    point. For more information, see [Section 19.1.7.3, “Skipping Transactions”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions").
  id: totrans-1097
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果跳过设置该变量指定的事件数量会导致复制品从事件组中间开始，那么复制品将继续跳过，直到找到下一个事件组的开头并从那一点开始。更多信息，请参见[第19.1.7.3节，“跳过事务”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions")。
- en: '[`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)'
  id: totrans-1098
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-1099
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[sql_slave_skip_counter](replication-options-replica.html#sysvar_sql_slave_skip_counter)`
    |'
  id: totrans-1100
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[sql_slave_skip_counter](replication-options-replica.html#sysvar_sql_slave_skip_counter)`
    |'
- en: '| Scope | Global |'
  id: totrans-1101
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1102
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1103
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1104
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-1105
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1106
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1107
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: From MySQL 8.0.26, [`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)
    is deprecated and the alias [`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)
    should be used instead. In releases before MySQL 8.0.26, use [`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter).
  id: totrans-1108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，[`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)已弃用，应改用别名[`sql_replica_skip_counter`](replication-options-replica.html#sysvar_sql_replica_skip_counter)。在MySQL
    8.0.26之前的版本中，请使用[`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)。
- en: '[`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)
    specifies the number of events from the source that a replica should skip. Setting
    the option has no immediate effect. The variable applies to the next [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement; the next [`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement") statement also changes the value back to 0\.
    When this variable is set to a nonzero value and there are multiple replication
    channels configured, the [`START REPLICA`](start-replica.html "15.4.2.6 START
    REPLICA Statement") statement can only be used with the `FOR CHANNEL *`channel`*`
    clause.'
  id: totrans-1109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)指定复制品应该跳过的源事件数量。设置该选项没有立即效果。该变量适用于下一个[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句；下一个[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句也会将值更改回0。当该变量设置为非零值且配置了多个复制通道时，[`START
    REPLICA`](start-replica.html "15.4.2.6 START REPLICA Statement")语句只能与`FOR CHANNEL
    *`channel`*`子句一起使用。'
- en: This option is incompatible with GTID-based replication, and must not be set
    to a nonzero value when [`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)
    is set. If you need to skip transactions when employing GTIDs, use [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    from the source instead. If you have enabled GTID assignment on a replication
    channel using the `ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS` option of the [`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement") statement, [`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)
    is available. See [Section 19.1.7.3, “Skipping Transactions”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions").
  id: totrans-1110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项与基于GTID的复制不兼容，在设置[`gtid_mode=ON`](replication-options-gtids.html#sysvar_gtid_mode)时不能设置为非零值。如果在使用GTIDs时需要跳过事务，请改用源端的[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)。如果已经在复制通道上启用了GTID分配，使用[`CHANGE
    REPLICATION SOURCE TO`](change-replication-source-to.html "15.4.2.3 CHANGE REPLICATION
    SOURCE TO Statement")语句的`ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS`选项，可以使用[`sql_slave_skip_counter`](replication-options-replica.html#sysvar_sql_slave_skip_counter)。参见[第19.1.7.3节，“跳过事务”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions")。
- en: Important
  id: totrans-1111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: If skipping the number of events specified by setting this variable would cause
    the replica to begin in the middle of an event group, the replica continues to
    skip until it finds the beginning of the next event group and begins from that
    point. For more information, see [Section 19.1.7.3, “Skipping Transactions”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions").
  id: totrans-1112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果通过设置此变量跳过指定数量的事件会导致副本在事件组中间开始，副本将继续跳过，直到找到下一个事件组的开头并从那里开始。有关更多信息，请参见[第19.1.7.3节，“跳过事务”](replication-administration-skip.html
    "19.1.7.3 Skipping Transactions")。
- en: '[`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info)'
  id: totrans-1113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info)'
- en: '| Command-Line Format | `--sync-master-info=#` |'
  id: totrans-1114
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--sync-master-info=#` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-1115
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[sync_master_info](replication-options-replica.html#sysvar_sync_master_info)`
    |'
  id: totrans-1116
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[sync_master_info](replication-options-replica.html#sysvar_sync_master_info)`
    |'
- en: '| Scope | Global |'
  id: totrans-1117
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1118
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1119
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-1120
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `10000` |'
  id: totrans-1121
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10000` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1122
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1123
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: From MySQL 8.0.26, [`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info)
    is deprecated and the alias [`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)
    should be used instead. In releases before MySQL 8.0.26, use [`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info).
  id: totrans-1124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，[`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info)已被弃用，应改用别名[`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)。在MySQL
    8.0.26之前的版本中，请使用[`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info)。
- en: '[`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info)
    specifies the number of events after which the replica updates the connection
    metadata repository. When the connection metadata repository is stored as an [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") table, which is the default from MySQL
    8.0, it is updated after this number of events. If the connection metadata repository
    is stored as a file, which is deprecated from MySQL 8.0, the replica synchronizes
    its `master.info` file to disk (using `fdatasync()`) after this number of events.
    The default value is 10000, and a zero value means that the repository is never
    updated. Setting this variable takes effect for all replication channels immediately,
    including running channels.'
  id: totrans-1125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info)指定副本在更新连接元数据存储库之前的事件数量。当连接元数据存储库存储为[`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine")表时（从MySQL 8.0开始默认），在此事件数量之后进行更新。如果连接元数据存储库存储为文件（从MySQL
    8.0开始不推荐使用），副本在此事件数量之后将其`master.info`文件同步到磁盘（使用`fdatasync()`）。默认值为10000，零值表示存储库永远不会更新。设置此变量立即对所有复制通道生效，包括正在运行的通道。'
- en: '[`sync_relay_log`](replication-options-replica.html#sysvar_sync_relay_log)'
  id: totrans-1126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_relay_log`](replication-options-replica.html#sysvar_sync_relay_log)'
- en: '| Command-Line Format | `--sync-relay-log=#` |'
  id: totrans-1127
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--sync-relay-log=#` |'
- en: '| System Variable | `[sync_relay_log](replication-options-replica.html#sysvar_sync_relay_log)`
    |'
  id: totrans-1128
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[sync_relay_log](replication-options-replica.html#sysvar_sync_relay_log)`
    |'
- en: '| Scope | Global |'
  id: totrans-1129
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1130
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1131
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Integer |'
  id: totrans-1132
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `10000` |'
  id: totrans-1133
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10000` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1134
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1135
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: If the value of this variable is greater than 0, the MySQL server synchronizes
    its relay log to disk (using `fdatasync()`) after every `sync_relay_log` events
    are written to the relay log. Setting this variable takes effect for all replication
    channels immediately, including running channels.
  id: totrans-1136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果此变量的值大于0，则MySQL服务器在每写入`sync_relay_log`事件到中继日志后将其中继日志同步到磁盘（使用`fdatasync()`）。设置此变量立即对所有复制通道生效，包括正在运行的通道。
- en: Setting `sync_relay_log` to 0 causes no synchronization to be done to disk;
    in this case, the server relies on the operating system to flush the relay log's
    contents from time to time as for any other file.
  id: totrans-1137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将`sync_relay_log`设置为0会导致不对磁盘进行同步；在这种情况下，服务器依赖操作系统定期刷新中继日志的内容，就像对任何其他文件一样。
- en: A value of 1 is the safest choice because in the event of an unexpected halt
    you lose at most one event from the relay log. However, it is also the slowest
    choice (unless the disk has a battery-backed cache, which makes synchronization
    very fast). For information on the combination of settings on a replica that is
    most resilient to unexpected halts, see [Section 19.4.2, “Handling an Unexpected
    Halt of a Replica”](replication-solutions-unexpected-replica-halt.html "19.4.2 Handling
    an Unexpected Halt of a Replica").
  id: totrans-1138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择值为1是最安全的选择，因为在意外停机时，您最多只会丢失一个中继日志事件。然而，这也是最慢的选择（除非磁盘具有带电池备份缓存，这样同步会非常快）。有关在复制品上设置的组合对于意外停机最具弹性的信息，请参阅[第19.4.2节，“处理复制品的意外停机”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 处理复制品的意外停机")。
- en: '[`sync_relay_log_info`](replication-options-replica.html#sysvar_sync_relay_log_info)'
  id: totrans-1139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_relay_log_info`](replication-options-replica.html#sysvar_sync_relay_log_info)'
- en: '| Command-Line Format | `--sync-relay-log-info=#` |'
  id: totrans-1140
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--sync-relay-log-info=#` |'
- en: '| Deprecated | 8.0.34 |'
  id: totrans-1141
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.34 |'
- en: '| System Variable | `[sync_relay_log_info](replication-options-replica.html#sysvar_sync_relay_log_info)`
    |'
  id: totrans-1142
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[sync_relay_log_info](replication-options-replica.html#sysvar_sync_relay_log_info)`
    |'
- en: '| Scope | Global |'
  id: totrans-1143
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1144
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1145
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Integer |'
  id: totrans-1146
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `10000` |'
  id: totrans-1147
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10000` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1148
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1149
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: The number of transactions after which the replica updates the applier metadata
    repository. When the applier metadata repository is stored as an [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") table (the default in MySQL 8.0 and later),
    it is updated after every transaction and this system variable is ignored. If
    the applier metadata repository is stored as a file (deprecated in MySQL 8.0),
    the replica synchronizes its `relay-log.info` file to disk (using `fdatasync()`)
    after this many transactions. `0` (zero) means that the file contents are flushed
    by the operating system only. Setting this variable takes effect for all replication
    channels immediately, including running channels.
  id: totrans-1150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制品更新应用程序元数据存储库之后的事务数。当应用程序元数据存储库存储为一个[`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB存储引擎")表（MySQL 8.0及以后版本的默认值），它在每个事务之后更新，此系统变量将被忽略。如果应用程序元数据存储库存储为一个文件（MySQL
    8.0中已弃用），则复制品在此数量的事务之后将其`relay-log.info`文件同步到磁盘（使用`fdatasync()`）。`0`（零）表示文件内容仅由操作系统刷新。设置此变量立即对所有复制通道生效，包括正在运行的通道。
- en: Since storing applier metadata as a file is deprecated, this variable is also
    deprecated; as of MySQL 8.0.34, the server raises a warning whenever you set it
    or read its value. You should expect `sync_relay_log_info` to be removed in a
    future version of MySQL, and migrate applications now that may depend on it.
  id: totrans-1151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于存储应用程序元数据为文件已被弃用，此变量也已被弃用；从MySQL 8.0.34开始，服务器在设置或读取其值时会发出警告。您应该期望`sync_relay_log_info`在将来的MySQL版本中被移除，并立即迁移可能依赖它的应用程序。
- en: '[`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)'
  id: totrans-1152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)'
- en: '| Command-Line Format | `--sync-source-info=#` |'
  id: totrans-1153
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--sync-source-info=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-1154
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[sync_source_info](replication-options-replica.html#sysvar_sync_source_info)`
    |'
  id: totrans-1155
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[sync_source_info](replication-options-replica.html#sysvar_sync_source_info)`
    |'
- en: '| Scope | Global |'
  id: totrans-1156
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-1157
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1158
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-1159
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `10000` |'
  id: totrans-1160
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `10000` |'
- en: '| Minimum Value | `0` |'
  id: totrans-1161
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-1162
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: From MySQL 8.0.26, use [`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)
    in place of [`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info).
  id: totrans-1163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用 [`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)
    替代从该版本开始已弃用的 [`sync_master_info`](replication-options-replica.html#sysvar_sync_master_info)。在
    MySQL 8.0.26 之前的版本中，请使用 [`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)。
- en: '[`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)
    specifies the number of events after which the replica updates the connection
    metadata repository. When the connection metadata repository is stored as an [`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") table, which is the default from MySQL
    8.0, it is updated after this number of events. If the connection metadata repository
    is stored as a file, which is deprecated from MySQL 8.0, the replica synchronizes
    its `master.info` file to disk (using `fdatasync()`) after this number of events.
    The default value is 10000, and a zero value means that the repository is never
    updated. Setting this variable takes effect for all replication channels immediately,
    including running channels.'
  id: totrans-1164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sync_source_info`](replication-options-replica.html#sysvar_sync_source_info)
    指定了副本更新连接元数据存储库之后的事件数量。当连接元数据存储库存储为 [`InnoDB`](innodb-storage-engine.html "第17章
    InnoDB 存储引擎") 表时（从 MySQL 8.0 开始默认），在此事件数量之后进行更新。如果连接元数据存储库存储为文件（从 MySQL 8.0 开始已弃用），则副本在此事件数量之后将其
    `master.info` 文件同步到磁盘（使用 `fdatasync()`）。默认值为 10000，零值表示存储库永远不会更新。设置此变量立即对所有复制通道生效，包括正在运行的通道。'
- en: '[`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)'
  id: totrans-1165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)'
- en: '| Command-Line Format | `--terminology-use-previous=#` |'
  id: totrans-1166
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--terminology-use-previous=#` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-1167
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[terminology_use_previous](replication-options-replica.html#sysvar_terminology_use_previous)`
    |'
  id: totrans-1168
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[terminology_use_previous](replication-options-replica.html#sysvar_terminology_use_previous)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-1169
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-1170
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-1171
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-1172
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `NONE` |'
  id: totrans-1173
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `NONE` |'
- en: '| Valid Values | `NONE``BEFORE_8_0_26` |'
  id: totrans-1174
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `NONE``BEFORE_8_0_26` |'
- en: In MySQL 8.0.26, incompatible changes were made to instrumentation names containing
    the terms `master`, `slave`, and `mts` (for “Multi-Threaded Slave”), which were
    changed respectively to `source`, `replica`, and `mta` (for “Multi-Threaded Applier”).
    If these incompatible changes impact your applications, set the [`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)
    system variable to `BEFORE_8_0_26` to make MySQL Server use the old versions of
    the names for the objects specified in the previous list. This enables monitoring
    tools that rely on the old names to continue working until they can be updated
    to use the new names.
  id: totrans-1175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.26 中，对包含术语 `master`、`slave` 和 `mts`（代表“多线程从属”）的仪表命名进行了不兼容的更改，分别更改为
    `source`、`replica` 和 `mta`（代表“多线程应用程序”）。如果这些不兼容的更改影响到您的应用程序，请将 [`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)
    系统变量设置为 `BEFORE_8_0_26`，以便 MySQL Server 使用前述列表中指定对象的旧版本名称。这样一来，依赖于旧名称的监控工具将继续工作，直到它们可以更新为使用新名称。
- en: Set the [`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)
    system variable with session scope to support individual users, or with global
    scope to be the default for all new sessions. When global scope is used, the slow
    query log contains the old versions of the names.
  id: totrans-1176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将[`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)系统变量设置为会话范围以支持个别用户，或者设置为全局范围以成为所有新会话的默认值。当使用全局范围时，慢查询日志包含旧版本的名称。
- en: The affected instrumentation names are given in the following list. The [`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)
    system variable only affects these items. It does not affect the new aliases for
    system variables, status variables, and command-line options that were also introduced
    in MySQL 8.0.26, and these can still be used when it is set.
  id: totrans-1177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 受影响的仪表化名称列在以下列表中。[`terminology_use_previous`](replication-options-replica.html#sysvar_terminology_use_previous)系统变量仅影响这些项目。它不影响在MySQL
    8.0.26中引入的系统变量、状态变量和命令行选项的新别名，当设置时仍然可以使用这些别名。
- en: Instrumented locks (mutexes), visible in the `mutex_instances` and `events_waits_*`
    Performance Schema tables with the prefix `wait/synch/mutex/`
  id: totrans-1178
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仪表化锁（互斥锁），在具有前缀`wait/synch/mutex/`的`mutex_instances`和`events_waits_*`性能模式表中可见
- en: Read/write locks, visible in the `rwlock_instances` and `events_waits_*` Performance
    Schema tables with the prefix `wait/synch/rwlock/`
  id: totrans-1179
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读/写锁，在具有前缀`wait/synch/rwlock/`的`rwlock_instances`和`events_waits_*`性能模式表中可见
- en: Instrumented condition variables, visible in the `cond_instances` and `events_waits_*`
    Performance Schema tables with the prefix `wait/synch/cond/`
  id: totrans-1180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仪表化条件变量，在具有前缀`wait/synch/cond/`的`cond_instances`和`events_waits_*`性能模式表中可见
- en: Instrumented memory allocations, visible in the `memory_summary_*` Performance
    Schema tables with the prefix `memory/sql/`
  id: totrans-1181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仪表化内存分配，在具有前缀`memory/sql/`的`memory_summary_*`性能模式表中可见
- en: Thread names, visible in the `threads` Performance Schema table with the prefix
    `thread/sql/`
  id: totrans-1182
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线程名称，在具有前缀`thread/sql/`的`threads`性能模式表中可见
- en: Thread stages, visible in the `events_stages_*` Performance Schema tables with
    the prefix `stage/sql/`, and without the prefix in the `threads` and `processlist`
    Performance Schema tables, the output from the `SHOW PROCESSLIST` statement, the
    Information Schema `processlist` table, and the slow query log
  id: totrans-1183
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线程阶段，在具有前缀`stage/sql/`的`events_stages_*`性能模式表中可见，在`threads`和`processlist`性能模式表中没有前缀，在`SHOW
    PROCESSLIST`语句的输出中，在信息模式`processlist`表中，在慢查询日志中
- en: Thread commands, visible in the `events_statements_history*` and `events_statements_summary_*_by_event_name`
    Performance Schema tables with the prefix `statement/com/`, and without the prefix
    in the `threads` and `processlist` Performance Schema tables, the output from
    the `SHOW PROCESSLIST` statement, the Information Schema `processlist` table,
    and the output from the `SHOW REPLICA STATUS` statement
  id: totrans-1184
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线程命令，在具有前缀`statement/com/`的`events_statements_history*`和`events_statements_summary_*_by_event_name`性能模式表中可见，在`threads`和`processlist`性能模式表中没有前缀，在`SHOW
    PROCESSLIST`语句的输出中，在信息模式`processlist`表中，在`SHOW REPLICA STATUS`语句的输出中
