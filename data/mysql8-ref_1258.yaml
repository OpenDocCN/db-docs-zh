- en: 17.15.4 InnoDB INFORMATION_SCHEMA FULLTEXT Index Tables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.15.4 InnoDB INFORMATION_SCHEMA FULLTEXT 索引表
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-fulltext_index-tables.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-fulltext_index-tables.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-fulltext_index-tables.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-fulltext_index-tables.html)
- en: 'The following tables provide metadata for `FULLTEXT` indexes:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格提供了 `FULLTEXT` 索引的元数据：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Table Overview
  id: totrans-4
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 表格概述
- en: '[`INNODB_FT_CONFIG`](information-schema-innodb-ft-config-table.html "28.4.15 The
    INFORMATION_SCHEMA INNODB_FT_CONFIG Table"): Provides metadata about the `FULLTEXT`
    index and associated processing for an `InnoDB` table.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_CONFIG`](information-schema-innodb-ft-config-table.html "28.4.15 INFORMATION_SCHEMA
    INNODB_FT_CONFIG 表")：提供关于 `InnoDB` 表的 `FULLTEXT` 索引和相关处理的元数据。'
- en: '[`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table"): Provides a snapshot
    of the [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html "28.4.17 The
    INFORMATION_SCHEMA INNODB_FT_DELETED Table") table; it is used only during an
    [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement") maintenance
    operation. When [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE
    Statement") is run, the [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table") table is emptied,
    and `DOC_ID` values are removed from the [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 The INFORMATION_SCHEMA INNODB_FT_DELETED Table") table. Because the contents
    of [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table") typically have
    a short lifetime, this table has limited utility for monitoring or debugging.
    For information about running [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") on tables with `FULLTEXT` indexes, see [Section 14.9.6, “Fine-Tuning
    MySQL Full-Text Search”](fulltext-fine-tuning.html "14.9.6 Fine-Tuning MySQL Full-Text
    Search").'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 INFORMATION_SCHEMA INNODB_FT_BEING_DELETED 表")：提供 [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 INFORMATION_SCHEMA INNODB_FT_DELETED 表") 表的快照；仅在 [`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE 语句") 维护操作期间使用。运行 [`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE 语句") 时，[`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 INFORMATION_SCHEMA INNODB_FT_BEING_DELETED 表") 表会被清空，并且从 [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 INFORMATION_SCHEMA INNODB_FT_DELETED 表") 表中删除 `DOC_ID` 值。由于 [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 INFORMATION_SCHEMA INNODB_FT_BEING_DELETED 表") 的内容通常寿命较短，因此该表对于监控或调试具有有限的实用性。有关在具有
    `FULLTEXT` 索引的表上运行 [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE
    语句") 的信息，请参见 [第 14.9.6 节，“调整 MySQL 全文搜索”](fulltext-fine-tuning.html "14.9.6 调整
    MySQL 全文搜索")。'
- en: '[`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html "28.4.17 The
    INFORMATION_SCHEMA INNODB_FT_DELETED Table"): Stores rows that are deleted from
    the `FULLTEXT` index for an `InnoDB` table. To avoid expensive index reorganization
    during DML operations for an `InnoDB` `FULLTEXT` index, the information about
    newly deleted words is stored separately, filtered out of search results when
    you do a text search, and removed from the main search index only when you issue
    an [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")
    statement for the `InnoDB` table.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html "28.4.17 INFORMATION_SCHEMA
    INNODB_FT_DELETED 表")：存储从 `InnoDB` 表的 `FULLTEXT` 索引中删除的行。为了避免在 `InnoDB` `FULLTEXT`
    索引的 DML 操作期间进行昂贵的索引重组，新删除的单词信息被单独存储，当进行文本搜索时会从搜索结果中过滤掉，并且仅当对 `InnoDB` 表发出 [`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE 语句") 语句时才从主搜索索引中��除。'
- en: '[`INNODB_FT_DEFAULT_STOPWORD`](information-schema-innodb-ft-default-stopword-table.html
    "28.4.16 The INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD Table"): Holds a list
    of [stopwords](glossary.html#glos_stopword "stopword") that are used by default
    when creating a `FULLTEXT` index on `InnoDB` tables.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_DEFAULT_STOPWORD`](information-schema-innodb-ft-default-stopword-table.html
    "28.4.16 INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD 表")：保存在创建 `InnoDB` 表的 `FULLTEXT`
    索引时默认使用的 [停用词](glossary.html#glos_stopword "停用词") 列表。'
- en: For information about the [`INNODB_FT_DEFAULT_STOPWORD`](information-schema-innodb-ft-default-stopword-table.html
    "28.4.16 The INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD Table") table, see
    [Section 14.9.4, “Full-Text Stopwords”](fulltext-stopwords.html "14.9.4 Full-Text
    Stopwords").
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关[`INNODB_FT_DEFAULT_STOPWORD`](information-schema-innodb-ft-default-stopword-table.html
    "28.4.16 INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD 表")表的信息，请参阅[Section 14.9.4,
    “全文停用词”](fulltext-stopwords.html "14.9.4 全文停用词")。
- en: '[`INNODB_FT_INDEX_TABLE`](information-schema-innodb-ft-index-table-table.html
    "28.4.19 The INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE Table"): Provides information
    about the inverted index used to process text searches against the `FULLTEXT`
    index of an `InnoDB` table.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_INDEX_TABLE`](information-schema-innodb-ft-index-table-table.html
    "28.4.19 INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE 表")：提供有关用于处理对`InnoDB`表的`FULLTEXT`索引进行文本搜索的倒排索引的信息。'
- en: '[`INNODB_FT_INDEX_CACHE`](information-schema-innodb-ft-index-cache-table.html
    "28.4.18 The INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE Table"): Provides token
    information about newly inserted rows in a `FULLTEXT` index. To avoid expensive
    index reorganization during DML operations, the information about newly indexed
    words is stored separately, and combined with the main search index only when
    [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement") is
    run, when the server is shut down, or when the cache size exceeds a limit defined
    by the [`innodb_ft_cache_size`](innodb-parameters.html#sysvar_innodb_ft_cache_size)
    or [`innodb_ft_total_cache_size`](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)
    system variable.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_INDEX_CACHE`](information-schema-innodb-ft-index-cache-table.html
    "28.4.18 INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE 表")：提供有关`FULLTEXT`索引中新插入行的标记信息。为避免在DML操作期间进行昂贵的索引重组，新索引单词的信息被单独存储，并仅在运行[`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE 语句")时，服务器关闭时，或者缓存大小超过由[`innodb_ft_cache_size`](innodb-parameters.html#sysvar_innodb_ft_cache_size)或[`innodb_ft_total_cache_size`](innodb-parameters.html#sysvar_innodb_ft_total_cache_size)系统变量定义的限制时，才与主搜索索引合并。'
- en: Note
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: With the exception of the [`INNODB_FT_DEFAULT_STOPWORD`](information-schema-innodb-ft-default-stopword-table.html
    "28.4.16 The INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD Table") table, these
    tables are empty initially. Before querying any of them, set the value of the
    [`innodb_ft_aux_table`](innodb-parameters.html#sysvar_innodb_ft_aux_table) system
    variable to the name (including the database name) of the table that contains
    the `FULLTEXT` index (for example, `test/articles`).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 除了[`INNODB_FT_DEFAULT_STOPWORD`](information-schema-innodb-ft-default-stopword-table.html
    "28.4.16 INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD 表")表外，这些表最初是空的。在查询任何这些表之前，将[`innodb_ft_aux_table`](innodb-parameters.html#sysvar_innodb_ft_aux_table)系统变量的值设置为包含`FULLTEXT`索引的表的名称（包括数据库名称）（例如，`test/articles`）。
- en: '**Example 17.5 InnoDB FULLTEXT Index INFORMATION_SCHEMA Tables**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 17.5 InnoDB FULLTEXT 索引 INFORMATION_SCHEMA 表**'
- en: This example uses a table with a `FULLTEXT` index to demonstrate the data contained
    in the `FULLTEXT` index `INFORMATION_SCHEMA` tables.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例使用具有`FULLTEXT`索引的表来演示`FULLTEXT`索引`INFORMATION_SCHEMA`表中包含的数据。
- en: 'Create a table with a `FULLTEXT` index and insert some data:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个具有`FULLTEXT`索引的表并插入一些数据：
- en: '[PRE1]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Set the [`innodb_ft_aux_table`](innodb-parameters.html#sysvar_innodb_ft_aux_table)
    variable to the name of the table with the `FULLTEXT` index. If this variable
    is not set, the `InnoDB` `FULLTEXT` `INFORMATION_SCHEMA` tables are empty, with
    the exception of [`INNODB_FT_DEFAULT_STOPWORD`](information-schema-innodb-ft-default-stopword-table.html
    "28.4.16 The INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD Table").
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将[`innodb_ft_aux_table`](innodb-parameters.html#sysvar_innodb_ft_aux_table)变量设置为具有`FULLTEXT`索引的表的名称。如果未设置此变量，则`InnoDB`
    `FULLTEXT` `INFORMATION_SCHEMA`表为空，除了[`INNODB_FT_DEFAULT_STOPWORD`](information-schema-innodb-ft-default-stopword-table.html
    "28.4.16 INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD 表")。
- en: '[PRE2]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Query the [`INNODB_FT_INDEX_CACHE`](information-schema-innodb-ft-index-cache-table.html
    "28.4.18 The INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE Table") table, which shows
    information about newly inserted rows in a `FULLTEXT` index. To avoid expensive
    index reorganization during DML operations, data for newly inserted rows remains
    in the `FULLTEXT` index cache until [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") is run (or until the server is shut down or cache limits are
    exceeded).
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询[`INNODB_FT_INDEX_CACHE`](information-schema-innodb-ft-index-cache-table.html
    "28.4.18 INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE 表")表，显示`FULLTEXT`索引中新插入行的信息。为避免在DML操作期间进行昂贵的索引重组，新插入行的数据仍保留在`FULLTEXT`索引缓存中，直到运行[`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE 语句")（或者直到服务器关闭或超过缓存限制）。
- en: '[PRE3]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Enable the [`innodb_optimize_fulltext_only`](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)
    system variable and run [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") on the table that contains the `FULLTEXT` index. This operation
    flushes the contents of the `FULLTEXT` index cache to the main `FULLTEXT` index.
    [`innodb_optimize_fulltext_only`](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)
    changes the way the [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") statement operates on `InnoDB` tables, and is intended to be
    enabled temporarily, during maintenance operations on `InnoDB` tables with `FULLTEXT`
    indexes.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用 [`innodb_optimize_fulltext_only`](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)
    系统变量，并在包含 `FULLTEXT` 索引的表上运行 [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE 语句")。此操作将 `FULLTEXT` 索引缓存的内容刷新到主 `FULLTEXT` 索引中。[`innodb_optimize_fulltext_only`](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)
    改变了 [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE 语句") 语句在 `InnoDB`
    表上的操作方式，并且旨在在具有 `FULLTEXT` 索引的 `InnoDB` 表上的维护操作期间临时启用。
- en: '[PRE4]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Query the [`INNODB_FT_INDEX_TABLE`](information-schema-innodb-ft-index-table-table.html
    "28.4.19 The INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE Table") table to view information
    about data in the main `FULLTEXT` index, including information about the data
    that was just flushed from the `FULLTEXT` index cache.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询 [`INNODB_FT_INDEX_TABLE`](information-schema-innodb-ft-index-table-table.html
    "28.4.19 INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE 表") 表，查看主 `FULLTEXT` 索引中的数据信息，包括刚刚从
    `FULLTEXT` 索引缓存中刷新的数据信息。
- en: '[PRE5]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The [`INNODB_FT_INDEX_CACHE`](information-schema-innodb-ft-index-cache-table.html
    "28.4.18 The INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE Table") table is now empty
    since the [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")
    operation flushed the `FULLTEXT` index cache.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_INDEX_CACHE`](information-schema-innodb-ft-index-cache-table.html
    "28.4.18 INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE 表") 表现在为空，因为 [`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE 语句") 操作刷新了 `FULLTEXT` 索引缓存。'
- en: '[PRE6]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Delete some records from the `test/articles` table.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `test/articles` 表中删除一些记录。
- en: '[PRE7]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Query the [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 The INFORMATION_SCHEMA INNODB_FT_DELETED Table") table. This table records
    rows that are deleted from the `FULLTEXT` index. To avoid expensive index reorganization
    during DML operations, information about newly deleted records is stored separately,
    filtered out of search results when you do a text search, and removed from the
    main search index when you run [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement").
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询 [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html "28.4.17 INFORMATION_SCHEMA
    INNODB_FT_DELETED 表") 表。该表记录从 `FULLTEXT` 索引中删除的行。为了避免在 DML 操作期间进行昂贵的索引重组，新删除记录的信息被单独存储，当进行文本搜索时从搜索结果中过滤掉，并在运行
    [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE 语句") 时从主搜索索引中删除。
- en: '[PRE8]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Run [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")
    to remove the deleted records.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE 语句") 来删除已删除的记录。
- en: '[PRE9]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html "28.4.17 The
    INFORMATION_SCHEMA INNODB_FT_DELETED Table") table should now be empty.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html "28.4.17 INFORMATION_SCHEMA
    INNODB_FT_DELETED 表") 表现在应该为空。'
- en: '[PRE10]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Query the [`INNODB_FT_CONFIG`](information-schema-innodb-ft-config-table.html
    "28.4.15 The INFORMATION_SCHEMA INNODB_FT_CONFIG Table") table. This table contains
    metadata about the `FULLTEXT` index and related processing:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询 [`INNODB_FT_CONFIG`](information-schema-innodb-ft-config-table.html "28.4.15 INFORMATION_SCHEMA
    INNODB_FT_CONFIG 表") 表。该表包含关于 `FULLTEXT` 索引和相关处理的元数据：
- en: '`optimize_checkpoint_limit`: The number of seconds after which an [`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement") run stops.'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`optimize_checkpoint_limit`: 多少秒后运行 [`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE 语句") 停止。'
- en: '`synced_doc_id`: The next `DOC_ID` to be issued.'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`synced_doc_id`: 下一个要发行的 `DOC_ID`。'
- en: '`stopword_table_name`: The *`database/table`* name for a user-defined stopword
    table. The `VALUE` column is empty if there is no user-defined stopword table.'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stopword_table_name`: 用户定义的停用词表的 *`database/table`* 名称。如果没有用户定义的停用词表，则 `VALUE`
    列为空。'
- en: '`use_stopword`: Indicates whether a stopword table is used, which is defined
    when the `FULLTEXT` index is created.'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use_stopword`: 指示是否使用停用词表，该表在创建 `FULLTEXT` 索引时定义。'
- en: '[PRE11]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Disable [`innodb_optimize_fulltext_only`](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only),
    since it is intended to be enabled only temporarily:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁用[`innodb_optimize_fulltext_only`](innodb-parameters.html#sysvar_innodb_optimize_fulltext_only)，因为它只打算暂时启用：
- en: '[PRE12]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
