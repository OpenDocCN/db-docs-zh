- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-multi-source-provision-replica.html](https://dev.mysql.com/doc/refman/8.0/en/replication-multi-source-provision-replica.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-multi-source-provision-replica.html](https://dev.mysql.com/doc/refman/8.0/en/replication-multi-source-provision-replica.html)
- en: 19.1.5.2 Provisioning a Multi-Source Replica for GTID-Based Replication
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.1.5.2 为基于GTID的复制提供多源副本
- en: If the sources in the multi-source replication topology have existing data,
    it can save time to provision the replica with the relevant data before starting
    replication. In a multi-source replication topology, cloning or copying of the
    data directory cannot be used to provision the replica with data from all of the
    sources, and you might also want to replicate only specific databases from each
    source. The best strategy for provisioning such a replica is therefore to use
    [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")
    to create an appropriate dump file on each source, then use the [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") client to import the dump file
    on the replica.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果多源复制拓扑中的源具有现有数据，可以在开始复制之前使用相关数据为副本提供数据以节省时间。在多源复制拓扑中，无法使用克隆或复制数据目录来为副本提供来自所有源的数据，您可能还想要仅从每个源复制特定数据库。因此，为此类副本提供数据的最佳策略是使用[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")在每个源上创建适当的转储文件，然后使用[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端在副本上导入转储文件。
- en: If you are using GTID-based replication, you need to pay attention to the `SET
    @@GLOBAL.gtid_purged` statement that [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program") places in the dump output. This statement transfers
    the GTIDs for the transactions executed on the source to the replica, and the
    replica requires this information. However, for any case more complex than provisioning
    one new, empty replica from one source, you need to check what effect the statement
    has in the version of MySQL used by the replica, and handle the statement accordingly.
    The following guidance summarizes suitable actions, but for more details, see
    the [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")
    documentation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用基于GTID的复制，请注意`SET @@GLOBAL.gtid_purged`语句，该语句由[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")放置在转储输出中。此语句将源上执行的事务的GTID传输到副本，副本需要这些信息。然而，对于比从一个源为一个新的空副本提供更复杂的情况，您需要检查该语句在副本使用的MySQL版本中的影响，并相应处理该语句。以下指导总结了适当的操作，但更多详情请参阅[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")文档。
- en: The behavior of the `SET @@GLOBAL.gtid_purged` statement written by [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program") is different in releases from MySQL
    8.0 compared to MySQL 5.6 and 5.7\. In MySQL 5.6 and 5.7, the statement replaces
    the value of [`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)
    on the replica, and also in those releases that value can only be changed when
    the replica's record of transactions with GTIDs (the [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    set) is empty. In a multi-source replication topology, you must therefore remove
    the `SET @@GLOBAL.gtid_purged` statement from the dump output before replaying
    the dump files, because you cannot apply a second or subsequent dump file including
    this statement. Also note that for MySQL 5.6 and 5.7, this limitation means all
    the dump files from the sources must be applied in a single operation on a replica
    with an empty [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    set. You can clear a replica's GTID execution history by issuing [`RESET MASTER`](reset-master.html
    "15.4.1.2 RESET MASTER Statement") on the replica, but if you have other, wanted
    transactions with GTIDs on the replica, choose an alternative method of provisioning
    from those described in [Section 19.1.3.5, “Using GTIDs for Failover and Scaleout”](replication-gtids-failover.html
    "19.1.3.5 Using GTIDs for Failover and Scaleout").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 由[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")编写的`SET
    @@GLOBAL.gtid_purged`语句在MySQL 8.0的版本中与MySQL 5.6和5.7中的行为不同。在MySQL 5.6和5.7中，该语句替换了副本上的[`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)的值，并且在这些版本中，只有在副本的具有GTID的事务记录（[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)集）为空时才能更改该值。在多源复制拓扑中，因此在重放转储文件之前必须从转储输出中删除`SET
    @@GLOBAL.gtid_purged`语句，因为不能应用包含此语句的第二个或后续转储文件。还要注意，在MySQL 5.6和5.7中，这个限制意味着必须在具有空的[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)集的副本上以单个操作应用所有源的转储文件。您可以通过在副本上发出[`RESET
    MASTER`](reset-master.html "15.4.1.2 RESET MASTER Statement")来清除副本的GTID执行历史，但如果在副本上有其他需要的带有GTID的事务，请选择从[Section 19.1.3.5,
    “Using GTIDs for Failover and Scaleout”](replication-gtids-failover.html "19.1.3.5 Using
    GTIDs for Failover and Scaleout")中描述的方法中选择一种替代方法进行配置。
- en: From MySQL 8.0, the `SET @@GLOBAL.gtid_purged` statement adds the GTID set from
    the dump file to the existing [`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)
    set on the replica. The statement can therefore potentially be left in the dump
    output when you replay the dump files on the replica, and the dump files can be
    replayed at different times. However, it is important to note that the value that
    is included by [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program") for the `SET @@GLOBAL.gtid_purged` statement includes the GTIDs of all
    transactions in the [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    set on the source, even those that changed suppressed parts of the database, or
    other databases on the server that were not included in a partial dump. If you
    replay a second or subsequent dump file on the replica that contains any of the
    same GTIDs (for example, another partial dump from the same source, or a dump
    from another source that has overlapping transactions), any `SET @@GLOBAL.gtid_purged`
    statement in the second dump file fails, and must therefore be removed from the
    dump output.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0开始，`SET @@GLOBAL.gtid_purged`语句将从转储文件中的GTID集添加到副本上现有的[`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)集中。因此，在副本上重放转储文件时，该语句可能会留在转储输出中，并且可以在不同时间重放转储文件。然而，重要的是要注意，[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")为`SET @@GLOBAL.gtid_purged`语句包含的值包括源上[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)集中所有事务的GTID，即使这些事务更改了数据库的被抑制部分，或者服务器上未包含在部分转储中的其他数据库。如果在副本上重放包含任何相同GTID的第二个或后续转储文件（例如，来自相同源的另一个部分转储，或者来自具有重叠事务的另一个源的转储），第二个转储文件中的任何`SET
    @@GLOBAL.gtid_purged`语句将失败，因此必须从转储输出中删除。
- en: For sources from MySQL 8.0.17, as an alternative to removing the `SET @@GLOBAL.gtid_purged`
    statement, you may set [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program")'s `--set-gtid-purged` option to `COMMENTED` to include the statement
    but commented out, so that it is not actioned when you load the dump file. If
    you are provisioning the replica with two partial dumps from the same source,
    and the GTID set in the second dump is the same as the first (so no new transactions
    have been executed on the source in between the dumps), you can set [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")'s `--set-gtid-purged` option to
    `OFF` when you output the second dump file, to omit the statement.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于来自MySQL 8.0.17的源，作为删除`SET @@GLOBAL.gtid_purged`语句的替代方案，您可以将[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — 数据库备份程序")的`--set-gtid-purged`选项设置为`COMMENTED`，以包含该语句但注释掉，这样在加载转储文件时不会执行该语句。如果您正在使用来自同一源的两个部分转储文件为副本提供数据，并且第二个转储文件中的GTID集合与第一个相同（因此在转储之间源上没有执行新事务），则可以在输出第二个转储文件时将[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — 数据库备份程序")的`--set-gtid-purged`选项设置为`OFF`，以省略该语句。
- en: In the following provisioning example, we assume that the `SET @@GLOBAL.gtid_purged`
    statement cannot be left in the dump output, and must be removed from the files
    and handled manually. We also assume that there are no wanted transactions with
    GTIDs on the replica before provisioning starts.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下配置示例中，我们假设`SET @@GLOBAL.gtid_purged`语句不能保留在转储输出中，并且必须从���件中删除并手动处理。我们还假设在开始配置之前，在副本上没有带有GTID的想要的事务。
- en: 'To create dump files for a database named `db1` on `source1` and a database
    named `db2` on `source2`, run [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program") for `source1` as follows:'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要为名为`source1`上的名为`db1`的数据库和名为`source2`上的名为`db2`的数据库创建转储文件，请按以下方式为`source1`运行[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — 数据库备份程序")：
- en: '[PRE0]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then run [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program") for `source2` as follows:'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后按以下方式为`source2`运行[**mysqldump**](mysqldump.html "6.5.4 mysqldump — 数据库备份程序")：
- en: '[PRE1]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Record the [`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)
    value that [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program") added to each of the dump files. For example, for dump files created
    on MySQL 5.6 or 5.7, you can extract the value like this:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记录[`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)值，该值是[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — 数据库备份程序")添加到每个转储文件中的。例如，对于在MySQL 5.6或5.7上创建的转储文件，可以像这样提取该值：
- en: '[PRE2]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'From MySQL 8.0, where the format has changed, you can extract the value like
    this:'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0开始，格式已更改，您可以像这样提取该值：
- en: '[PRE3]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The result in each case should be a GTID set, for example:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每种情况下的结果应该是一个GTID集合，例如：
- en: '[PRE4]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Remove the line from each dump file that contains the `SET @@GLOBAL.gtid_purged`
    statement. For example:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从每个转储文件中删除包含`SET @@GLOBAL.gtid_purged`语句的行。例如：
- en: '[PRE5]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Use the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    client to import each edited dump file into the replica. For example:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[**mysql**](mysql.html "6.5.1 mysql — MySQL命令行客户端")客户端将每个编辑过的转储文件导入到副本中。例如：
- en: '[PRE6]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'On the replica, issue [`RESET MASTER`](reset-master.html "15.4.1.2 RESET MASTER
    Statement") to clear the GTID execution history (assuming, as explained above,
    that all the dump files have been imported and that there are no wanted transactions
    with GTIDs on the replica). Then issue a `SET @@GLOBAL.gtid_purged` statement
    to set the [`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)
    value to the union of all the GTID sets from all the dump files, as you recorded
    in Step 2\. For example:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在副本上，发出[`RESET MASTER`](reset-master.html "15.4.1.2 RESET MASTER语句")以清除GTID执行历史记录（假设，如上所述，所有转储文件都已导入，并且在副本上没有带有GTID的想要的事务）。然后发出`SET
    @@GLOBAL.gtid_purged`语句，将[`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)值设置为所有转储文件中所有GTID集合的并集，就像在第2步中记录的那样。例如：
- en: '[PRE7]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If there are, or might be, overlapping transactions between the GTID sets in
    the dump files, you can use the stored functions described in [Section 19.1.3.8,
    “Stored Function Examples to Manipulate GTIDs”](replication-gtids-functions.html
    "19.1.3.8 Stored Function Examples to Manipulate GTIDs") to check this beforehand
    and to calculate the union of all the GTID sets.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在转储文件中的GTID集合之间存在或可能存在重叠的事务，则可以使用[Section 19.1.3.8, “操作GTID的存储函数示例”](replication-gtids-functions.html
    "19.1.3.8 操作GTID的存储函数示例")中描述的存储函数事先检查这一点，并计算所有GTID集合的并集。
