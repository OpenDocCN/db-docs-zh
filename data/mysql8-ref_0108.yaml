- en: 3.6 Preparing Your Installation for Upgrade
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.6 准备升级安装
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/upgrade-prerequisites.html](https://dev.mysql.com/doc/refman/8.0/en/upgrade-prerequisites.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/upgrade-prerequisites.html](https://dev.mysql.com/doc/refman/8.0/en/upgrade-prerequisites.html)
- en: Before upgrading to the latest MySQL 8.0 release, ensure the upgrade readiness
    of your current MySQL 5.7 or MySQL 8.0 server instance by performing the preliminary
    checks described below. The upgrade process may fail otherwise.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在升级到最新的MySQL 8.0版本之前，请通过执行以下描述的初步检查来确保您当前的MySQL 5.7或MySQL 8.0服务器实例的升级准备就绪。否则，升级过程可能会失败。
- en: Tip
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Consider using the [MySQL Shell upgrade checker utility](/doc/mysql-shell/8.0/en/mysql-shell-utilities-upgrade.html)
    that enables you to verify whether MySQL server instances are ready for upgrade.
    You can select a target MySQL Server release to which you plan to upgrade, ranging
    from the MySQL Server 8.0.11 up to the MySQL Server release number that matches
    the current MySQL Shell release number. The upgrade checker utility carries out
    the automated checks that are relevant for the specified target release, and advises
    you of further relevant checks that you should make manually. The upgrade checker
    works for all GA releases of MySQL 5.7, 8.0, and 8.3\. Installation instructions
    for MySQL Shell can be found [here](/doc/mysql-shell/8.0/en/mysql-shell-install.html).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑使用[MySQL Shell升级检查工具](/doc/mysql-shell/8.0/en/mysql-shell-utilities-upgrade.html)，它使您能够验证MySQL服务器实例是否准备好升级。您可以选择一个目标MySQL
    Server版本，从MySQL Server 8.0.11到与当前MySQL Shell版本号匹配的MySQL Server版本号。升级检查工具执行与指定目标版本相关的自动检查，并建议您进行进一步的手动检查。升级检查工具适用于MySQL
    5.7、8.0和8.3的所有GA版本。MySQL Shell的安装说明可以在[这里](/doc/mysql-shell/8.0/en/mysql-shell-install.html)找到。
- en: 'Preliminary checks:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 初步检查：
- en: 'The following issues must not be present:'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不能存在以下问题：
- en: There must be no tables that use obsolete data types or functions.
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不能有使用过时数据类型或函数的表。
- en: In-place upgrade to MySQL 8.0 is not supported if tables contain old temporal
    columns in pre-5.6.4 format ([`TIME`](time.html "13.2.3 The TIME Type"), [`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"), and [`TIMESTAMP`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") columns without support for
    fractional seconds precision). If your tables still use the old temporal column
    format, upgrade them using [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR
    TABLE Statement") before attempting an in-place upgrade to MySQL 8.0\. For more
    information, see [Server Changes](/doc/refman/5.7/en/upgrading-from-previous-series.html#upgrade-server-changes),
    in [MySQL 5.7 Reference Manual](/doc/refman/5.7/en/).
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果表中包含旧的时间列（[`TIME`](time.html "13.2.3 The TIME Type")、[`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")和[`TIMESTAMP`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")列不支持分数秒精度）的旧格式（在5.6.4之前），则不支持直接升级到MySQL
    8.0。如果您的表仍然使用旧的时间列格式，请在尝试直接升级到MySQL 8.0之前使用[`REPAIR TABLE`](repair-table.html
    "15.7.3.5 REPAIR TABLE Statement")进行升级。有关更多信息，请参阅[服务器更改](/doc/refman/5.7/en/upgrading-from-previous-series.html#upgrade-server-changes)，在[MySQL
    5.7参考手册](/doc/refman/5.7/en/)中。
- en: There must be no orphan `.frm` files.
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不能有孤立的`.frm`文件。
- en: Triggers must not have a missing or empty definer or an invalid creation context
    (indicated by the `character_set_client`, `collation_connection`, `Database Collation`
    attributes displayed by [`SHOW TRIGGERS`](show-triggers.html "15.7.7.40 SHOW TRIGGERS
    Statement") or the `INFORMATION_SCHEMA` [`TRIGGERS`](information-schema-triggers-table.html
    "28.3.45 The INFORMATION_SCHEMA TRIGGERS Table") table). Any such triggers must
    be dumped and restored to fix the issue.
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触发器不能有缺失或空的定义者，也不能有无效的创建上下文（由[`SHOW TRIGGERS`](show-triggers.html "15.7.7.40 SHOW
    TRIGGERS Statement")显示的`character_set_client`，`collation_connection`，`Database
    Collation`属性或`INFORMATION_SCHEMA` [`TRIGGERS`](information-schema-triggers-table.html
    "28.3.45 The INFORMATION_SCHEMA TRIGGERS Table")表）。任何此类触发器必须被导出和恢复以修复问题。
- en: 'To check for these issues, execute this command:'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要检查这些问题，请执行以下命令：
- en: '[PRE0]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If [**mysqlcheck**](mysqlcheck.html "6.5.3 mysqlcheck — A Table Maintenance
    Program") reports any errors, correct the issues.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果[**mysqlcheck**](mysqlcheck.html "6.5.3 mysqlcheck — A Table Maintenance Program")报告任何错误，请纠正这些问题。
- en: 'There must be no partitioned tables that use a storage engine that does not
    have native partitioning support. To identify such tables, execute this query:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不能有使用不具有本机分区支持的存储引擎的分区表。要识别这样的表，请执行以下查询：
- en: '[PRE1]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any table reported by the query must be altered to use `InnoDB` or be made
    nonpartitioned. To change a table storage engine to `InnoDB`, execute this statement:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查询报告的任何表必须被更改为使用`InnoDB`或变为非分区表。要将表存储引擎更改为`InnoDB`，请执行此语句：
- en: '[PRE2]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For information about converting `MyISAM` tables to `InnoDB`, see [Section 17.6.1.5,
    “Converting Tables from MyISAM to InnoDB”](converting-tables-to-innodb.html "17.6.1.5 Converting
    Tables from MyISAM to InnoDB").
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关将`MyISAM`表转换为`InnoDB`的信息，请参见[Section 17.6.1.5，“从MyISAM转换表到InnoDB”](converting-tables-to-innodb.html
    "17.6.1.5 Converting Tables from MyISAM to InnoDB")。
- en: 'To make a partitioned table nonpartitioned, execute this statement:'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使分区表变为非分区表，请执行此语句：
- en: '[PRE3]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Some keywords may be reserved in MySQL 8.0 that were not reserved previously.
    See [Section 11.3, “Keywords and Reserved Words”](keywords.html "11.3 Keywords
    and Reserved Words"). This can cause words previously used as identifiers to become
    illegal. To fix affected statements, use identifier quoting. See [Section 11.2,
    “Schema Object Names”](identifiers.html "11.2 Schema Object Names").
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在MySQL 8.0中可能保留了以前未保留的一些关键字。请参见[Section 11.3，“关键字和保留字”](keywords.html "11.3 Keywords
    and Reserved Words")。这可能导致以前用作标识符的单词变得非法。要修复受影响的语句，请使用标识符引用。请参见[Section 11.2，“模式对象名称”](identifiers.html
    "11.2 Schema Object Names")。
- en: 'There must be no tables in the MySQL 5.7 `mysql` system database that have
    the same name as a table used by the MySQL 8.0 data dictionary. To identify tables
    with those names, execute this query:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MySQL 5.7 `mysql`系统数据库中不能有与MySQL 8.0数据字典使用的表同名的表。要识别具有这些名称的表，请执行此查询：
- en: '[PRE4]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Any tables reported by the query must be dropped or renamed (use [`RENAME TABLE`](rename-table.html
    "15.1.36 RENAME TABLE Statement")). This may also entail changes to applications
    that use the affected tables.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查询报告的任何表必须被删除或重命名（使用[`RENAME TABLE`](rename-table.html "15.1.36 RENAME TABLE
    Statement")）。这可能还需要对使用受影响表的应用程序进行更改。
- en: 'There must be no tables that have foreign key constraint names longer than
    64 characters. Use this query to identify tables with constraint names that are
    too long:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不能有外键约束名超过64个字符的表。使用此查询标识约束名过长的表：
- en: '[PRE5]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For a table with a constraint name that exceeds 64 characters, drop the constraint
    and add it back with constraint name that does not exceed 64 characters (use [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")).
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于约束名超过64个字符的表，请删除约束并使用不超过64个字符的约束名重新添加它（使用[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement")）。
- en: There must be no obsolete SQL modes defined by [`sql_mode`](server-system-variables.html#sysvar_sql_mode)
    system variable. Attempting to use an obsolete SQL mode prevents MySQL 8.0 from
    starting. Applications that use obsolete SQL modes should be revised to avoid
    them. For information about SQL modes removed in MySQL 8.0, see [Server Changes](upgrading-from-previous-series.html#upgrade-server-changes
    "Server Changes").
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不能定义由[`sql_mode`](server-system-variables.html#sysvar_sql_mode)系统变量定义的过时SQL模式。尝试使用过时的SQL模式会阻止MySQL
    8.0启动。应该修改使用过时SQL模式的应用程序以避免它们。有关MySQL 8.0中删除的SQL模式的信息，请参见[服务器更改](upgrading-from-previous-series.html#upgrade-server-changes
    "Server Changes")。
- en: There must be no views with explicitly defined columns names that exceed 64
    characters (views with column names up to 255 characters were permitted in MySQL
    5.7). To avoid upgrade errors, such views should be altered before upgrading.
    Currently, the only method of identify views with column names that exceed 64
    characters is to inspect the view definition using [`SHOW CREATE VIEW`](show-create-view.html
    "15.7.7.13 SHOW CREATE VIEW Statement"). You can also inspect view definitions
    by querying the Information Schema [`VIEWS`](information-schema-views-table.html
    "28.3.48 The INFORMATION_SCHEMA VIEWS Table") table.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不能有显式定义列名超过64个字符的视图（MySQL 5.7允许具有长达255个字符的列名的视图）。为避免升级错误，应在升级之前修改此类视图。目前，识别列名超过64个字符的视图的唯一方法是使用[`SHOW
    CREATE VIEW`](show-create-view.html "15.7.7.13 SHOW CREATE VIEW Statement")检查视图定义。您还可以通过查询信息模式[`VIEWS`](information-schema-views-table.html
    "28.3.48 The INFORMATION_SCHEMA VIEWS Table")表来检查视图定义。
- en: There must be no tables or stored procedures with individual `ENUM` or `SET`
    column elements that exceed 255 characters or 1020 bytes in length. Prior to MySQL
    8.0, the maximum combined length of `ENUM` or `SET` column elements was 64K. In
    MySQL 8.0, the maximum character length of an individual `ENUM` or `SET` column
    element is 255 characters, and the maximum byte length is 1020 bytes. (The 1020
    byte limit supports multibyte character sets). Before upgrading to MySQL 8.0,
    modify any `ENUM` or `SET` column elements that exceed the new limits. Failing
    to do so causes the upgrade to fail with an error.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在个别`ENUM`或`SET`列元素中，字符长度超过255个字符或1020个字节的表格或存储过程是不允许的。在MySQL 8.0之前，`ENUM`或`SET`列元素的最大组合长度为64K。在MySQL
    8.0中，单个`ENUM`或`SET`列元素的最大字符长度为255个字符，最大字节长度为1020个字节（1020字节限制支持多字节字符集）。在升级到MySQL
    8.0之前，修改任何超出新限制的`ENUM`或`SET`列元素。如果不这样做，升级将因错误而失败。
- en: 'Before upgrading to MySQL 8.0.13 or higher, there must be no table partitions
    that reside in shared `InnoDB` tablespaces, which include the system tablespace
    and general tablespaces. Identify table partitions in shared tablespaces by querying
    `INFORMATION_SCHEMA`:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在升级到MySQL 8.0.13或更高版本之前，不能有驻留在共享`InnoDB`表空间中的表分区，其中包括系统表空间和通用表空间。通过查询`INFORMATION_SCHEMA`来识别共享表空间中的表分区：
- en: 'If upgrading from MySQL 5.7, run this query:'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果从MySQL 5.7升级，请运行此查询：
- en: '[PRE6]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If upgrading from an earlier MySQL 8.0 release, run this query:'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果从较早的MySQL 8.0版本升级，请运行此查询：
- en: '[PRE7]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Move table partitions from shared tablespaces to file-per-table tablespaces
    using [`ALTER TABLE ... REORGANIZE PARTITION`](alter-table.html "15.1.9 ALTER
    TABLE Statement"):'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用[`ALTER TABLE ... REORGANIZE PARTITION`](alter-table.html "15.1.9 ALTER TABLE
    Statement")将表分区从共享表空间移动到每个表的表空间：
- en: '[PRE8]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: There must be no queries and stored program definitions from MySQL 8.0.12 or
    lower that use `ASC` or `DESC` qualifiers for `GROUP BY` clauses. Otherwise, upgrading
    to MySQL 8.0.13 or higher may fail, as may replicating to MySQL 8.0.13 or higher
    replica servers. For additional details, see [SQL Changes](upgrading-from-previous-series.html#upgrade-sql-changes
    "SQL Changes").
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不能有来自MySQL 8.0.12或更低版本的查询和存储程序定义使用`ASC`或`DESC`修饰符用于`GROUP BY`子句。否则，升级到MySQL
    8.0.13或更高版本可能会失败，复制到MySQL 8.0.13或更高版本的复制服务器也可能失败。有关更多详细信息，请参见[SQL Changes](upgrading-from-previous-series.html#upgrade-sql-changes
    "SQL Changes")。
- en: 'Your MySQL 5.7 installation must not use features that are not supported by
    MySQL 8.0\. Any changes here are necessarily installation specific, but the following
    example illustrates the kind of thing to look for:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的MySQL 5.7安装不得使用MySQL 8.0不支持的功能。这里的任何更改都是特定于安装的，但以下示例说明了要查找的内容：
- en: Some server startup options and system variables have been removed in MySQL
    8.0\. See [Features Removed in MySQL 8.0](mysql-nutshell.html#mysql-nutshell-removals
    "Features Removed in MySQL 8.0"), and [Section 1.4, “Server and Status Variables
    and Options Added, Deprecated, or Removed in MySQL 8.0”](added-deprecated-removed.html
    "1.4 Server and Status Variables and Options Added, Deprecated, or Removed in
    MySQL 8.0"). If you use any of these, an upgrade requires configuration changes.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0中已删除了一些服务器启动选项和系统变量。请参阅[MySQL 8.0中删除的功能](mysql-nutshell.html#mysql-nutshell-removals
    "Features Removed in MySQL 8.0")，以及[第1.4节，“MySQL 8.0中添加、弃用或删除的服务器和状态变量和选项”](added-deprecated-removed.html
    "1.4 Server and Status Variables and Options Added, Deprecated, or Removed in
    MySQL 8.0")。如果您使用其中任何内容，升级需要进行配置更改。
- en: 'Example: Because the data dictionary provides information about database objects,
    the server no longer checks directory names in the data directory to find databases.
    Consequently, the `--ignore-db-dir` option is extraneous and has been removed.
    To handle this, remove any instances of `--ignore-db-dir` from your startup configuration.
    In addition, remove or move the named data directory subdirectories before upgrading
    to MySQL 8.0\. (Alternatively, let the 8.0 server add those directories to the
    data dictionary as databases, then remove each of those databases using [`DROP
    DATABASE`](drop-database.html "15.1.24 DROP DATABASE Statement").)'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如：由于数据字典提供有关数据库对象的信息，服务器不再检查数据目录中的目录名称以查找数据库。因此，`--ignore-db-dir`选项是多余的并已被移除。为了处理这个问题，在升级到MySQL
    8.0之前，从启动配置中删除任何`--ignore-db-dir`的实例。此外，在升级到MySQL 8.0之前，删除或移动命名数据目录的子目录。（或者，让8.0服务器将这些目录添加到数据字典作为数据库，然后使用[`DROP
    DATABASE`](drop-database.html "15.1.24 DROP DATABASE Statement")删除每个数据库。）
- en: 'If you intend to change the [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    setting to 1 at upgrade time, ensure that schema and table names are lowercase
    before upgrading. Otherwise, a failure could occur due to a schema or table name
    lettercase mismatch. You can use the following queries to check for schema and
    table names containing uppercase characters:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您打算在升级时将[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)设置为1，请确保在升级之前模式和表名称均为小写。否则，可能会由于模式或表名称大小写不匹配而导致失败。您可以使用以下查询检查包含大写字符的模式和表名称：
- en: '[PRE9]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As of MySQL 8.0.19, if [`lower_case_table_names=1`](server-system-variables.html#sysvar_lower_case_table_names),
    table and schema names are checked by the upgrade process to ensure that all characters
    are lowercase. If table or schema names are found to contain uppercase characters,
    the upgrade process fails with an error.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.19版本，如果[`lower_case_table_names=1`](server-system-variables.html#sysvar_lower_case_table_names)，升级过程将检查表和模式名称，确保所有字符均为小写。如果发现表或模式名称包含大写字符，则升级过程将因错误而失败。
- en: Note
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Changing the [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    setting at upgrade time is not recommended.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不建议在升级时更改[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)设置。
- en: If upgrade to MySQL 8.0 fails due to any of the issues outlined above, the server
    reverts all changes to the data directory. In this case, remove all redo log files
    and restart the MySQL 5.7 server on the existing data directory to address the
    errors. The redo log files (`ib_logfile*`) reside in the MySQL data directory
    by default. After the errors are fixed, perform a slow shutdown (by setting [`innodb_fast_shutdown=0`](innodb-parameters.html#sysvar_innodb_fast_shutdown))
    before attempting the upgrade again.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于上述任何问题导致MySQL 8.0升级失败，则服务器将撤销对数据目录的所有更改。在这种情况下，删除所有重做日志文件并在现有数据目录上重新启动MySQL
    5.7服务器以解决错误。重做日志文件（`ib_logfile*`）默认位于MySQL数据目录中。在错误修复后，在尝试再次升级之前执行慢关闭（通过设置[`innodb_fast_shutdown=0`](innodb-parameters.html#sysvar_innodb_fast_shutdown)）。
