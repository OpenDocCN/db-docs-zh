- en: 14.24.2 DECIMAL Data Type Characteristics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.24.2 DECIMAL 数据类型特性
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/precision-math-decimal-characteristics.html](https://dev.mysql.com/doc/refman/8.0/en/precision-math-decimal-characteristics.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/precision-math-decimal-characteristics.html](https://dev.mysql.com/doc/refman/8.0/en/precision-math-decimal-characteristics.html)
- en: 'This section discusses the characteristics of the [`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") data type (and its
    synonyms), with particular regard to the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论 [`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值） - DECIMAL, NUMERIC")
    数据类型（及其同义词）的特性，特别关注以下主题：
- en: Maximum number of digits
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大数字位数
- en: Storage format
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储格式
- en: Storage requirements
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储需求
- en: The nonstandard MySQL extension to the upper range of [`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") columns
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值） - DECIMAL, NUMERIC")
    列的非标准 MySQL 扩展的上限范围'
- en: 'The declaration syntax for a [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") column is `DECIMAL(*`M`*,*`D`*)`. The
    ranges of values for the arguments are as follows:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值） - DECIMAL, NUMERIC")
    列的声明语法为 `DECIMAL(*`M`*,*`D`*)`。参数的值范围如下：'
- en: '*`M`* is the maximum number of digits (the precision). It has a range of 1
    to 65.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*`M`* 是最大数字位数（精度）。它的范围是1到65。'
- en: '*`D`* is the number of digits to the right of the decimal point (the scale).
    It has a range of 0 to 30 and must be no larger than *`M`*.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*`D`* 是小数点右侧的数字位数（精度）。它的范围是0到30，且不得大于*`M`*。'
- en: If *`D`* is omitted, the default is 0\. If *`M`* is omitted, the default is
    10.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略*`D`*，默认值为0。如果省略*`M`*，默认值为10。
- en: The maximum value of 65 for *`M`* means that calculations on [`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") values are accurate
    up to 65 digits. This limit of 65 digits of precision also applies to exact-value
    numeric literals, so the maximum range of such literals differs from before. (There
    is also a limit on how long the text of [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") literals can be; see [Section 14.24.3,
    “Expression Handling”](precision-math-expressions.html "14.24.3 Expression Handling").)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*`M`* 的最大值为65，意味着对 [`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值） -
    DECIMAL, NUMERIC") 值的计算精度可达65位。这个65位精度的限制也适用于精确值数值文字，因此这些文字的最大范围与以前不同。（[`DECIMAL`](fixed-point-types.html
    "13.1.3 固定点类型（精确值） - DECIMAL, NUMERIC") 文字的文本长度也有限制；请参阅 [第14.24.3节，“表达式处理”](precision-math-expressions.html
    "14.24.3 表达式处理")。）'
- en: Values for [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types (Exact
    Value) - DECIMAL, NUMERIC") columns are stored using a binary format that packs
    nine decimal digits into 4 bytes. The storage requirements for the integer and
    fractional parts of each value are determined separately. Each multiple of nine
    digits requires 4 bytes, and any remaining digits left over require some fraction
    of 4 bytes. The storage required for remaining digits is given by the following
    table.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值） - DECIMAL, NUMERIC")
    列的值以二进制格式存储，将九个十进制数字打包成4字节。每个值的整数部分和小数部分的存储需求分别确定。每个九位数字的倍数需要4字节，剩余的数字需要4字节的一部分。剩余数字所需的存储空间由以下表格给出。'
- en: '| Leftover Digits | Number of Bytes |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 剩余数字 | 字节数 |'
- en: '| 0 | 0 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 0 |'
- en: '| 1–2 | 1 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 1–2 | 1 |'
- en: '| 3–4 | 2 |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 3–4 | 2 |'
- en: '| 5–6 | 3 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 5–6 | 3 |'
- en: '| 7–9 | 4 |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 7–9 | 4 |'
- en: For example, a `DECIMAL(18,9)` column has nine digits on either side of the
    decimal point, so the integer part and the fractional part each require 4 bytes.
    A `DECIMAL(20,6)` column has fourteen integer digits and six fractional digits.
    The integer digits require four bytes for nine of the digits and 3 bytes for the
    remaining five digits. The six fractional digits require 3 bytes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`DECIMAL(18,9)` 列有小数点两侧各有九位数字，因此整数部分和小数部分各需要4字节。`DECIMAL(20,6)` 列有十四位整数数字和六位小数数字。九位整数数字需要四字节，剩下的五位数字需要3字节。六位小数数字需要3字节。
- en: '[`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types (Exact Value)
    - DECIMAL, NUMERIC") columns do not store a leading `+` character or `-` character
    or leading `0` digits. If you insert `+0003.1` into a `DECIMAL(5,1)` column, it
    is stored as `3.1`. For negative numbers, a literal `-` character is not stored.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值） - DECIMAL, NUMERIC")
    列不存储前导的 `+` 字符或 `-` 字符或前导的 `0` 数字。如果你将 `+0003.1` 插入到 `DECIMAL(5,1)` 列中，它将被存储为
    `3.1`。对于负数，不会存储文字 `-` 字符。'
- en: '[`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types (Exact Value)
    - DECIMAL, NUMERIC") columns do not permit values larger than the range implied
    by the column definition. For example, a `DECIMAL(3,0)` column supports a range
    of `-999` to `999`. A `DECIMAL(*`M`*,*`D`*)` column permits up to *`M`* - *`D`*
    digits to the left of the decimal point.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值） - DECIMAL, NUMERIC")
    列不允许超出列定义所暗示的范围的值。例如，`DECIMAL(3,0)` 列支持 `-999` 到 `999` 的范围。`DECIMAL(*`M`*,*`D`*)`
    列允许小数点左边最多 *`M`* - *`D`* 位数字。'
- en: The SQL standard requires that the precision of `NUMERIC(*`M`*,*`D`*)` be *exactly*
    *`M`* digits. For `DECIMAL(*`M`*,*`D`*)`, the standard requires a precision of
    at least *`M`* digits but permits more. In MySQL, `DECIMAL(*`M`*,*`D`*)` and `NUMERIC(*`M`*,*`D`*)`
    are the same, and both have a precision of exactly *`M`* digits.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 标准要求 `NUMERIC(*`M`*,*`D`*)` 的精度 *必须* 恰好为 *`M`* 位数字。对于 `DECIMAL(*`M`*,*`D`*)`，标准要求至少
    *`M`* 位数字的精度，但允许更多。在 MySQL 中，`DECIMAL(*`M`*,*`D`*)` 和 `NUMERIC(*`M`*,*`D`*)` 是相同的，两者的精度都恰好为
    *`M`* 位数字。
- en: For a full explanation of the internal format of `DECIMAL` values, see the file
    `strings/decimal.c` in a MySQL source distribution. The format is explained (with
    an example) in the `decimal2bin()` function.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 `DECIMAL` 值的内部格式的详细解释，请参阅 MySQL 源代码分发中的 `strings/decimal.c` 文件。该格式在 `decimal2bin()`
    函数中进行了解释（附有示例）。
