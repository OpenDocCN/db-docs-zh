- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/crashing.html](https://dev.mysql.com/doc/refman/8.0/en/crashing.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/crashing.html](https://dev.mysql.com/doc/refman/8.0/en/crashing.html)
- en: B.3.3.3 What to Do If MySQL Keeps Crashing
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: B.3.3.3 MySQL持续崩溃时该怎么办
- en: Each MySQL version is tested on many platforms before it is released. This does
    not mean that there are no bugs in MySQL, but if there are bugs, they should be
    very few and can be hard to find. If you have a problem, it always helps if you
    try to find out exactly what crashes your system, because you have a much better
    chance of getting the problem fixed quickly.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每个MySQL版本在发布之前都会在许多平台上进行测试。这并不意味着MySQL没有错误，但如果有错误，它们应该很少，并且很难找到。如果您遇到问题，尝试找出究竟是什么导致系统崩溃，因为这样您就有更好的机会快速解决问题。
- en: First, you should try to find out whether the problem is that the [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") server dies or whether your problem has to
    do with your client. You can check how long your [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") server has been up by executing [**mysqladmin version**](mysqladmin.html
    "6.5.2 mysqladmin — A MySQL Server Administration Program"). If [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") has died and restarted, you may find the reason
    by looking in the server's error log. See [Section 7.4.2, “The Error Log”](error-log.html
    "7.4.2 The Error Log").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您应该尝试找出问题是[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")服务器崩溃了还是您的问题与客户端有关。您可以通过执行[**mysqladmin
    version**](mysqladmin.html "6.5.2 mysqladmin — A MySQL Server Administration Program")来检查您的[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")服务器已经运行了多长时间。如果[**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server")已经崩溃并重新启动，您可以通过查看服务器的错误日志找到原因。请参考[Section 7.4.2, “The Error
    Log”](error-log.html "7.4.2 The Error Log")。
- en: On some systems, you can find in the error log a stack trace of where [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") died. Note that the variable values written
    in the error log may not always be 100% correct.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些系统上，您可以在错误日志中找到[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")死机的堆栈跟踪。请注意，错误日志中写入的变量值可能并不总是100%正确。
- en: If you find that [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    fails at startup during `InnoDB` recovery, refer to [Section 17.21.2, “Troubleshooting
    Recovery Failures”](innodb-troubleshooting-recovery.html "17.21.2 Troubleshooting
    Recovery Failures").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在`InnoDB`恢复期间，[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")在启动时失败，请参考[Section 17.21.2,
    “Troubleshooting Recovery Failures”](innodb-troubleshooting-recovery.html "17.21.2 Troubleshooting
    Recovery Failures")。
- en: Many unexpected server exits are caused by corrupted data files or index files.
    MySQL updates the files on disk with the `write()` system call after every SQL
    statement and before the client is notified about the result. (This is not true
    if you are running with the [`delay_key_write`](server-system-variables.html#sysvar_delay_key_write)
    system variable enabled, in which case data files are written but not index files.)
    This means that data file contents are safe even if [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") crashes, because the operating system ensures that the unflushed
    data is written to disk. You can force MySQL to flush everything to disk after
    every SQL statement by starting [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL
    Server") with the [`--flush`](server-options.html#option_mysqld_flush) option.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 许多意外的服务器退出是由于损坏的数据文件或索引文件引起的。每个SQL语句执行后，MySQL都会使用`write()`系统调用更新磁盘上的文件，并在通知客户端结果之前执行此操作。（如果启用了[`delay_key_write`](server-system-variables.html#sysvar_delay_key_write)系统变量，则不适用此规则，此时只会写入数据文件而不写入索引文件。）这意味着即使[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")崩溃，数据文件内容也是安全的，因��操作系统会确保未刷新的数据被写入磁盘。您可以通过使用[`--flush`](server-options.html#option_mysqld_flush)选项启动[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")来强制MySQL在每个SQL语句后将所有内容刷新到磁盘。
- en: 'The preceding means that normally you should not get corrupted tables unless
    one of the following happens:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的意思是通常情况下，除非发生以下情况之一，否则您不应该遇到损坏的表：
- en: The MySQL server or the server host was killed in the middle of an update.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL服务器或服务器主机在更新过程中被终止。
- en: You have found a bug in [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    that caused it to die in the middle of an update.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您发现了一个导致[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")在更新过程中崩溃的错误。
- en: Some external program is manipulating data files or index files at the same
    time as [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") without locking
    the table properly.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些外部程序在没有正确锁定表的情况下同时操作数据文件或索引文件，导致[**mysqld**](mysqld.html "6.3.1 mysqld — The
    MySQL Server")崩溃。
- en: You are running many [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    servers using the same data directory on a system that does not support good file
    system locks (normally handled by the `lockd` lock manager), or you are running
    multiple servers with external locking disabled.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您正在运行许多使用相同数据目录的 [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL 服务器") 服务器，但系统不支持良好的文件系统锁（通常由
    `lockd` 锁管理器处理），或者您正在运行禁用外部锁定的多个服务器。
- en: You have a crashed data file or index file that contains very corrupt data that
    confused [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server").
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您有一个包含非常损坏数据的崩溃数据文件或索引文件，这些数据混淆了 [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL
    服务器")。
- en: You have found a bug in the data storage code. This isn't likely, but it is
    at least possible. In this case, you can try to change the storage engine to another
    engine by using [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    on a repaired copy of the table.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您在数据存储代码中发现了一个错误。这不太可能，但至少有可能。在这种情况下，您可以尝试通过在修复后的表的副本上使用 [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE 语句") 来将存储引擎更改为另一个引擎。
- en: 'Because it is very difficult to know why something is crashing, first try to
    check whether things that work for others result in an unexpected exit for you.
    Try the following things:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因为很难知道为什么会崩溃，首先尝试检查对其他人有效的事物是否导致您意外退出。尝试以下事项：
- en: Stop the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") server
    with [**mysqladmin shutdown**](mysqladmin.html "6.5.2 mysqladmin — A MySQL Server
    Administration Program"), run [**myisamchk --silent --force */*.MYI**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility") from the data directory
    to check all `MyISAM` tables, and restart [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server"). This ensures that you are running from a clean state. See
    [Chapter 7, *MySQL Server Administration*](server-administration.html "Chapter 7 MySQL
    Server Administration").
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [**mysqladmin shutdown**](mysqladmin.html "6.5.2 mysqladmin — MySQL 服务器管理程序")
    停止 [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL 服务器") 服务器，从数据目录运行 [**myisamchk
    --silent --force */*.MYI**](myisamchk.html "6.6.4 myisamchk — MyISAM 表维护实用程序")
    检查所有 `MyISAM` 表，并重新启动 [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL 服��器")。这确保您从干净状态运行。参见
    [第 7 章，“MySQL 服务器管理”](server-administration.html "第 7 章 MySQL 服务器管理")。
- en: Start [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") with the general
    query log enabled (see [Section 7.4.3, “The General Query Log”](query-log.html
    "7.4.3 The General Query Log")). Then try to determine from the information written
    to the log whether some specific query kills the server. About 95% of all bugs
    are related to a particular query. Normally, this is one of the last queries in
    the log file just before the server restarts. See [Section 7.4.3, “The General
    Query Log”](query-log.html "7.4.3 The General Query Log"). If you can repeatedly
    kill MySQL with a specific query, even when you have checked all tables just before
    issuing it, then you have isolated the bug and should submit a bug report for
    it. See [Section 1.5, “How to Report Bugs or Problems”](bug-reports.html "1.5 How
    to Report Bugs or Problems").
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动 [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL 服务器") 并启用常规查询日志（参见 [第 7.4.3
    节，“常规查询日志”](query-log.html "7.4.3 常规查询日志")）。然后尝试从写入日志的信息中确定是否有某个特定查询导致服务器崩溃。大约
    95% 的所有错误都与特定查询有关。通常，这是在服务器重新启动之前日志文件中的最后一个查询之一。参见 [第 7.4.3 节，“常规查询日志”](query-log.html
    "7.4.3 常规查询日志")。如果您可以重复使用特定查询使 MySQL 崩溃，即使在发出查询之前已检查了所有表，那么您已经隔离出错误，并应为其提交错误报告。参见
    [第 1.5 节，“如何报告错误或问题”](bug-reports.html "1.5 如何报告错误或问题")。
- en: Try to make a test case that we can use to repeat the problem. See [Section 7.9,
    “Debugging MySQL”](debugging-mysql.html "7.9 Debugging MySQL").
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试创建一个我们可以用来重复出现问题的测试用例。参见 [第 7.9 节，“调试 MySQL”](debugging-mysql.html "7.9 调试
    MySQL")。
- en: Try the `fork_big.pl` script. (It is located in the `tests` directory of source
    distributions.)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试运行 `fork_big.pl` 脚本。（它位于源分发的 `tests` 目录中。）
- en: Configuring MySQL for debugging makes it much easier to gather information about
    possible errors if something goes wrong. Reconfigure MySQL with the [`-DWITH_DEBUG=1`](source-configuration-options.html#option_cmake_with_debug)
    option to **CMake** and then recompile. See [Section 7.9, “Debugging MySQL”](debugging-mysql.html
    "7.9 Debugging MySQL").
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 MySQL 以进行调试，可以在出现问题时更轻松地收集可能的错误信息。重新使用 [`-DWITH_DEBUG=1`](source-configuration-options.html#option_cmake_with_debug)
    选项对 **CMake** 进行 MySQL 重新配置，然后重新编译。参见 [第 7.9 节，“调试 MySQL”](debugging-mysql.html
    "7.9 调试 MySQL")。
- en: Make sure that you have applied the latest patches for your operating system.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保已为您的操作系统应用了最新的补丁。
- en: Use the [`--skip-external-locking`](server-options.html#option_mysqld_external-locking)
    option to [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server"). On some
    systems, the `lockd` lock manager does not work properly; the [`--skip-external-locking`](server-options.html#option_mysqld_external-locking)
    option tells [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") not to
    use external locking. (This means that you cannot run two [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") servers on the same data directory and that
    you must be careful if you use [**myisamchk**](myisamchk.html "6.6.4 myisamchk
    — MyISAM Table-Maintenance Utility"). Nevertheless, it may be instructive to try
    the option as a test.)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`--skip-external-locking`](server-options.html#option_mysqld_external-locking)选项到**mysqld**。在某些系统上，`lockd`锁管理器无法正常工作；[`--skip-external-locking`](server-options.html#option_mysqld_external-locking)选项告诉**mysqld**不要使用外部锁定。（这意味着您不能在同一数据目录上运行两个**mysqld**服务器，并且如果使用[**myisamchk**](myisamchk.html
    "6.6.4 myisamchk — MyISAM表维护实用程序")，必须小心。尽管如此，作为测试尝试该选项可能是有益的。）
- en: If [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") appears to be
    running but not responding, try [**mysqladmin -u root processlist**](mysqladmin.html
    "6.5.2 mysqladmin — A MySQL Server Administration Program"). Sometimes [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") is not hung even though it seems unresponsive.
    The problem may be that all connections are in use, or there may be some internal
    lock problem. [**mysqladmin -u root processlist**](mysqladmin.html "6.5.2 mysqladmin
    — A MySQL Server Administration Program") usually is able to make a connection
    even in these cases, and can provide useful information about the current number
    of connections and their status.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果**mysqld**看起来正在运行但没有响应，请尝试[**mysqladmin -u root processlist**](mysqladmin.html
    "6.5.2 mysqladmin — 一个MySQL服务器管理程序")。有时候**mysqld**虽然看起来没有响应，但并没有挂起。问题可能是所有连接都在使用中，或者可能存在一些内部锁问题。在这些情况下，[**mysqladmin
    -u root processlist**](mysqladmin.html "6.5.2 mysqladmin — 一个MySQL服务器管理程序")通常能够建立连接，并提供有关当前连接数及其状态的有用信息。
- en: Run the command [**mysqladmin -i 5 status**](mysqladmin.html "6.5.2 mysqladmin
    — A MySQL Server Administration Program") or [**mysqladmin -i 5 -r status**](mysqladmin.html
    "6.5.2 mysqladmin — A MySQL Server Administration Program") in a separate window
    to produce statistics while running other queries.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在单独的窗口中运行命令[**mysqladmin -i 5 status**](mysqladmin.html "6.5.2 mysqladmin —
    一个MySQL服务器管理程序")或[**mysqladmin -i 5 -r status**](mysqladmin.html "6.5.2 mysqladmin
    — 一个MySQL服务器管理程序")以在运行其他查询时生成统计信息。
- en: 'Try the following:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试以下操作：
- en: Start [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") from **gdb**
    (or another debugger). See [Section 7.9, “Debugging MySQL”](debugging-mysql.html
    "7.9 Debugging MySQL").
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**gdb**（或其他调试器）启动**mysqld**。参见[第7.9节，“调试MySQL”](debugging-mysql.html "7.9 调试MySQL")。
- en: Run your test scripts.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行你的测试脚本。
- en: 'Print the backtrace and the local variables at the three lowest levels. In
    **gdb**, you can do this with the following commands when [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") has crashed inside **gdb**:'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印三个最低级别的回溯和本地变量。在**gdb**中，当**mysqld**在**gdb**内部崩溃时，可以使用以下命令执行此操作：
- en: '[PRE0]'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: With **gdb**, you can also examine which threads exist with `info threads` and
    switch to a specific thread with `thread *`N`*`, where *`N`* is the thread ID.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用**gdb**，你也可以通过`info threads`查看存在哪些线程，并通过`thread *`N`*`切换到特定线程，其中*`N`*是线程ID。
- en: Try to simulate your application with a Perl script to force MySQL to exit or
    misbehave.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试使用Perl脚本模拟你的应用程序，强制MySQL退出或表现异常。
- en: Send a normal bug report. See [Section 1.5, “How to Report Bugs or Problems”](bug-reports.html
    "1.5 How to Report Bugs or Problems"). Be even more detailed than usual. Because
    MySQL works for many people, the crash might result from something that exists
    only on your computer (for example, an error that is related to your particular
    system libraries).
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送一个普通的错误报告。参见[第1.5节，“如何报告错误或问题”](bug-reports.html "1.5 如何报告错误或问题")。比平常更详细。因为MySQL适用于许多人，崩溃可能是由于仅存在于您的计算机上的某些东西（例如，与您特定的系统库相关的错误）。
- en: If you have a problem with tables containing dynamic-length rows and you are
    using only [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types") columns
    (not [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types") or [`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types") columns), you can try to change all [`VARCHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types") to [`CHAR`](char.html "13.3.2 The CHAR and
    VARCHAR Types") with [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement").
    This forces MySQL to use fixed-size rows. Fixed-size rows take a little extra
    space, but are much more tolerant to corruption.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您在使用只包含[`VARCHAR`](char.html "13.3.2 CHAR和VARCHAR类型")列（而不是[`BLOB`](blob.html
    "13.3.4 BLOB和TEXT类型")或[`TEXT`](blob.html "13.3.4 BLOB和TEXT类型")列）的动态长度行的表时遇到问题，可以尝试将所有[`VARCHAR`](char.html
    "13.3.2 CHAR和VARCHAR类型")更改为[`CHAR`](char.html "13.3.2 CHAR和VARCHAR类型")，并使用[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE语句")。这将强制MySQL使用固定大小的行。固定大小的行会占用一些额外空间，但更容忍数据损坏。
- en: The current dynamic row code has been in use for several years with very few
    problems, but dynamic-length rows are by nature more prone to errors, so it may
    be a good idea to try this strategy to see whether it helps.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前的动态行代码已经使用了几年，几乎没有问题，但动态长度行本质上更容易出错，因此尝试这种策略看看是否有帮助可能是个好主意。
- en: Consider the possibility of hardware faults when diagnosing problems. Defective
    hardware can be the cause of data corruption. Pay particular attention to your
    memory and disk subsystems when troubleshooting hardware.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在诊断问题时，请考虑硬件故障的可能性。有缺陷的硬件可能是数据损坏的原因。在故障排除硬件时，特别注意内存和磁盘子系统。
