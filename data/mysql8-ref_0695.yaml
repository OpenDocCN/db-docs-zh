- en: 12.8.7 Using Collation in INFORMATION_SCHEMA Searches
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12.8.7 在INFORMATION_SCHEMA搜索中使用排序规则
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-collation-information-schema.html](https://dev.mysql.com/doc/refman/8.0/en/charset-collation-information-schema.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-collation-information-schema.html](https://dev.mysql.com/doc/refman/8.0/en/charset-collation-information-schema.html)
- en: String columns in `INFORMATION_SCHEMA` tables have a collation of `utf8mb3_general_ci`,
    which is case-insensitive. However, for values that correspond to objects that
    are represented in the file system, such as databases and tables, searches in
    `INFORMATION_SCHEMA` string columns can be case-sensitive or case-insensitive,
    depending on the characteristics of the underlying file system and the [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    system variable setting. For example, searches may be case-sensitive if the file
    system is case-sensitive. This section describes this behavior and how to modify
    it if necessary.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`INFORMATION_SCHEMA`表中的字符串列具有`utf8mb3_general_ci`排序规则，这是不区分大小写的。但是，对于与文件系统中表示的对象对应的值，例如数据库和表，在`INFORMATION_SCHEMA`字符串列中的搜索可以是区分大小写或不区分大小写，这取决于底层文件系统的特性和[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)系统变量设置。例如，如果文件系统区分大小写，则搜索可能是区分大小写的。本节描述了这种行为以及如何在必要时进行修改。'
- en: 'Suppose that a query searches the `SCHEMATA.SCHEMA_NAME` column for the `test`
    database. On Linux, file systems are case-sensitive, so comparisons of `SCHEMATA.SCHEMA_NAME`
    with `''test''` match, but comparisons with `''TEST''` do not:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一个查询在`SCHEMATA.SCHEMA_NAME`列中搜索`test`数据库。在Linux上，文件系统区分大小写，因此`SCHEMATA.SCHEMA_NAME`与`'test'`的比较匹配，但与`'TEST'`的比较不匹配：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: These results occur with the [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    system variable set to 0\. A [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    setting of 1 or 2 causes the second query to return the same (nonempty) result
    as the first query.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果发生在将[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)系统变量设置为0时。将[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)设置为1或2会导致第二个查询返回与第一个查询相同（非空）的结果。
- en: Note
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is prohibited to start the server with a [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    setting that is different from the setting used when the server was initialized.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 禁止使用与服务器初始化时使用的设置不同的[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)设置启动服务器。
- en: 'On Windows or macOS, file systems are not case-sensitive, so comparisons match
    both `''test''` and `''TEST''`:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows或macOS上，文件系统不区分大小写，因此比较匹配`'test'`和`'TEST'`：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The value of [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    makes no difference in this context.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，[`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)的值没有任何区别。
- en: The preceding behavior occurs because the `utf8mb3_general_ci` collation is
    not used for `INFORMATION_SCHEMA` queries when searching for values that correspond
    to objects represented in the file system.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的行为发生是因为在搜索与文件系统中表示的对象对应的值时，`utf8mb3_general_ci`排序规则不用于`INFORMATION_SCHEMA`查询。
- en: 'If the result of a string operation on an `INFORMATION_SCHEMA` column differs
    from expectations, a workaround is to use an explicit `COLLATE` clause to force
    a suitable collation (see [Section 12.8.1, “Using COLLATE in SQL Statements”](charset-collate.html
    "12.8.1 Using COLLATE in SQL Statements")). For example, to perform a case-insensitive
    search, use `COLLATE` with the `INFORMATION_SCHEMA` column name:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对`INFORMATION_SCHEMA`列的字符串操作的结果与预期不符，则可以使用显式的`COLLATE`子句来强制使用合适的排序规则（参见[第12.8.1节，“在SQL语句中使用COLLATE”](charset-collate.html
    "12.8.1 在SQL语句中使用COLLATE")）。例如，要执行不区分大小写的搜索，请在`INFORMATION_SCHEMA`列名后使用`COLLATE`：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can also use the [`UPPER()`](string-functions.html#function_upper) or [`LOWER()`](string-functions.html#function_lower)
    function:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用[`UPPER()`](string-functions.html#function_upper)或[`LOWER()`](string-functions.html#function_lower)函数：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Although a case-insensitive comparison can be performed even on platforms with
    case-sensitive file systems, as just shown, it is not necessarily always the right
    thing to do. On such platforms, it is possible to have multiple objects with names
    that differ only in lettercase. For example, tables named `city`, `CITY`, and
    `City` can all exist simultaneously. Consider whether a search should match all
    such names or just one and write queries accordingly. The first of the following
    comparisons (with `utf8mb3_bin`) is case-sensitive; the others are not:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管即使在具有区分大小写文件系统的平台上也可以执行不区分大小写的比较，如上所示，但这并不一定总是正确的做法。在这样的平台上，可能存在仅在大小写不同的名称的多个对象。例如，同时存在名为`city`、`CITY`和`City`的表。考虑搜索是否应匹配所有这些名称或仅匹配一个，并相应地编写查询。以下比较中的第一个（使用`utf8mb3_bin`）是区分大小写的；其他则不是：
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Searches in `INFORMATION_SCHEMA` string columns for values that refer to `INFORMATION_SCHEMA`
    itself do use the `utf8mb3_general_ci` collation because `INFORMATION_SCHEMA`
    is a “virtual” database not represented in the file system. For example, comparisons
    with `SCHEMATA.SCHEMA_NAME` match `''information_schema''` or `''INFORMATION_SCHEMA''`
    regardless of platform:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在`INFORMATION_SCHEMA`的字符串列中搜索引用`INFORMATION_SCHEMA`本身的值时，会使用`utf8mb3_general_ci`校对规则，因为`INFORMATION_SCHEMA`是一个在文件系统中没有实际表示的“虚拟”数据库。例如，与`SCHEMATA.SCHEMA_NAME`的比较会匹配`'information_schema'`或`'INFORMATION_SCHEMA'`，不受平台影响：
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
