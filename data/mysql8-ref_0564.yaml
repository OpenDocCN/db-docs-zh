- en: 10.3.13 Descending Indexes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10.3.13 降序索引
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/descending-indexes.html](https://dev.mysql.com/doc/refman/8.0/en/descending-indexes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/descending-indexes.html](https://dev.mysql.com/doc/refman/8.0/en/descending-indexes.html)
- en: 'MySQL supports descending indexes: `DESC` in an index definition is no longer
    ignored but causes storage of key values in descending order. Previously, indexes
    could be scanned in reverse order but at a performance penalty. A descending index
    can be scanned in forward order, which is more efficient. Descending indexes also
    make it possible for the optimizer to use multiple-column indexes when the most
    efficient scan order mixes ascending order for some columns and descending order
    for others.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持降序索引：在索引定义中的`DESC`不再被忽略，而是导致键值以降序存储。以前，索引可以以相反顺序扫描，但会导致性能损失。降序索引可以以正向顺序扫描，这更有效率。降序索引还使优化器能够在最有效的扫描顺序中混合使用多列索引，其中一些列按升序顺序排列，而其他列按降序顺序排列。
- en: 'Consider the following table definition, which contains two columns and four
    two-column index definitions for the various combinations of ascending and descending
    indexes on the columns:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下表定义，其中包含两列和四个两列索引定义，用于列的各种升序和降序索引组合：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The table definition results in four distinct indexes. The optimizer can perform
    a forward index scan for each of the `ORDER BY` clauses and need not use a `filesort`
    operation:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 表定义会产生四个不同的索引。优化器可以对每个`ORDER BY`子句执行正向索引扫描，而无需使用`filesort`操作：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Use of descending indexes is subject to these conditions:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用降序索引需满足以下条件：
- en: 'Descending indexes are supported only for the `InnoDB` storage engine, with
    these limitations:'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅支持`InnoDB`存储引擎的降序索引，具有以下限制：
- en: Change buffering is not supported for a secondary index if the index contains
    a descending index key column or if the primary key includes a descending index
    column.
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果索引包含降序索引键列或主键包含降序索引列，则辅助索引不支持更改缓冲。
- en: The `InnoDB` SQL parser does not use descending indexes. For `InnoDB` full-text
    search, this means that the index required on the `FTS_DOC_ID` column of the indexed
    table cannot be defined as a descending index. For more information, see [Section 17.6.2.4,
    “InnoDB Full-Text Indexes”](innodb-fulltext-index.html "17.6.2.4 InnoDB Full-Text
    Indexes").
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB` SQL解析器不使用降序索引。对于`InnoDB`全文搜索，这意味着索引表的`FTS_DOC_ID`列上所需的索引不能定义为降序索引。有关更多信息，请参阅[Section 17.6.2.4,
    “InnoDB Full-Text Indexes”](innodb-fulltext-index.html "17.6.2.4 InnoDB Full-Text
    Indexes")。'
- en: Descending indexes are supported for all data types for which ascending indexes
    are available.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持所有可用升序索引的数据类型的降序索引。
- en: Descending indexes are supported for ordinary (nongenerated) and generated columns
    (both `VIRTUAL` and `STORED`).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持普通（非生成的）和生成列（`VIRTUAL`和`STORED`）的降序索引。
- en: '`DISTINCT` can use any index containing matching columns, including descending
    key parts.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DISTINCT`可以使用包含匹配列的任何索引，包括降序键部分。'
- en: Indexes that have descending key parts are not used for [`MIN()`](aggregate-functions.html#function_min)/[`MAX()`](aggregate-functions.html#function_max)
    optimization of queries that invoke aggregate functions but do not have a `GROUP
    BY` clause.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有降序键部分的索引不会用于调用聚合函数但没有`GROUP BY`子句的查询的[`MIN()`](aggregate-functions.html#function_min)/[`MAX()`](aggregate-functions.html#function_max)优化。
- en: Descending indexes are supported for `BTREE` but not `HASH` indexes. Descending
    indexes are not supported for `FULLTEXT` or `SPATIAL` indexes.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持`BTREE`但不支持`HASH`索引的降序索引。不支持`FULLTEXT`或`SPATIAL`索引的降序索引。
- en: Explicitly specified `ASC` and `DESC` designators for `HASH`, `FULLTEXT`, and
    `SPATIAL` indexes results in an error.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 明确指定`HASH`、`FULLTEXT`和`SPATIAL`索引的`ASC`和`DESC`标识符会导致错误。
- en: 'You can see in the **`Extra`** column of the output of [`EXPLAIN`](explain.html
    "15.8.2 EXPLAIN Statement") that the optimizer is able to use a descending index,
    as shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")输出的**`Extra`**列中看到优化器能够使用降序索引，如下所示：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In `EXPLAIN FORMAT=TREE` output, use of a descending index is indicated by
    the addition of `(reverse)` following the name of the index, like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在`EXPLAIN FORMAT=TREE`输出中，使用降序索引会在索引名称后面添加`(reverse)`，如下所示：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: See also [EXPLAIN Extra Information](explain-output.html#explain-extra-information
    "EXPLAIN Extra Information").
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅[EXPLAIN Extra Information](explain-output.html#explain-extra-information
    "EXPLAIN Extra Information")。
