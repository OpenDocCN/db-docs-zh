- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/kill.html](https://dev.mysql.com/doc/refman/8.0/en/kill.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/kill.html](https://dev.mysql.com/doc/refman/8.0/en/kill.html)
- en: 15.7.8.4 KILL Statement
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.7.8.4 KILL Statement
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Each connection to [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    runs in a separate thread. You can kill a thread with the `KILL *`processlist_id`*`
    statement.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每个连接到[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")的运行在一个单独的线程中。您可以使用`KILL
    *`processlist_id`*`语句终止一个线程。
- en: Thread processlist identifiers can be determined from the `ID` column of the
    `INFORMATION_SCHEMA` [`PROCESSLIST`](information-schema-processlist-table.html
    "28.3.23 The INFORMATION_SCHEMA PROCESSLIST Table") table, the `Id` column of
    [`SHOW PROCESSLIST`](show-processlist.html "15.7.7.29 SHOW PROCESSLIST Statement")
    output, and the `PROCESSLIST_ID` column of the Performance Schema [`threads`](performance-schema-threads-table.html
    "29.12.21.8 The threads Table") table. The value for the current thread is returned
    by the [`CONNECTION_ID()`](information-functions.html#function_connection-id)
    function.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 线程进程列表标识符可以从`INFORMATION_SCHEMA` [`PROCESSLIST`](information-schema-processlist-table.html
    "28.3.23 The INFORMATION_SCHEMA PROCESSLIST Table")表的`ID`列，[`SHOW PROCESSLIST`](show-processlist.html
    "15.7.7.29 SHOW PROCESSLIST Statement")输出的`Id`列以及性能模式[`threads`](performance-schema-threads-table.html
    "29.12.21.8 The threads Table")表的`PROCESSLIST_ID`列中确定。当前线程的值由[`CONNECTION_ID()`](information-functions.html#function_connection-id)函数返回。
- en: '[`KILL`](kill.html "15.7.8.4 KILL Statement") permits an optional `CONNECTION`
    or `QUERY` modifier:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`KILL`](kill.html "15.7.8.4 KILL Statement")允许使用可选的`CONNECTION`或`QUERY`修饰符：'
- en: '[`KILL CONNECTION`](kill.html "15.7.8.4 KILL Statement") is the same as [`KILL`](kill.html
    "15.7.8.4 KILL Statement") with no modifier: It terminates the connection associated
    with the given *`processlist_id`*, after terminating any statement the connection
    is executing.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`KILL CONNECTION`](kill.html "15.7.8.4 KILL Statement")与没有修饰符的[`KILL`](kill.html
    "15.7.8.4 KILL Statement")相同：它终止与给定*`processlist_id`*相关联的连接，在终止连接正在执行的任何语句之后。'
- en: '[`KILL QUERY`](kill.html "15.7.8.4 KILL Statement") terminates the statement
    the connection is currently executing, but leaves the connection itself intact.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`KILL QUERY`](kill.html "15.7.8.4 KILL Statement")终止连接当前正在执行的语句，但保持连接本身不变。'
- en: 'The ability to see which threads are available to be killed depends on the
    [`PROCESS`](privileges-provided.html#priv_process) privilege:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 查看可终止的线程取决于[`PROCESS`](privileges-provided.html#priv_process)权限：
- en: Without [`PROCESS`](privileges-provided.html#priv_process), you can see only
    your own threads.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有[`PROCESS`](privileges-provided.html#priv_process)，您只能看到自己的线程。
- en: With [`PROCESS`](privileges-provided.html#priv_process), you can see all threads.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`PROCESS`](privileges-provided.html#priv_process)，您可以看到所有线程。
- en: 'The ability to kill threads and statements depends on the [`CONNECTION_ADMIN`](privileges-provided.html#priv_connection-admin)
    privilege and the deprecated [`SUPER`](privileges-provided.html#priv_super) privilege:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 终止线程和语句的能力取决于[`CONNECTION_ADMIN`](privileges-provided.html#priv_connection-admin)权限和已弃用的[`SUPER`](privileges-provided.html#priv_super)权限：
- en: Without [`CONNECTION_ADMIN`](privileges-provided.html#priv_connection-admin)
    or [`SUPER`](privileges-provided.html#priv_super), you can kill only your own
    threads and statements.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有[`CONNECTION_ADMIN`](privileges-provided.html#priv_connection-admin)或[`SUPER`](privileges-provided.html#priv_super)，您只能终止自己的线程和语句。
- en: With [`CONNECTION_ADMIN`](privileges-provided.html#priv_connection-admin) or
    [`SUPER`](privileges-provided.html#priv_super), you can kill all threads and statements,
    except that to affect a thread or statement that is executing with the [`SYSTEM_USER`](privileges-provided.html#priv_system-user)
    privilege, your own session must additionally have the [`SYSTEM_USER`](privileges-provided.html#priv_system-user)
    privilege.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`CONNECTION_ADMIN`](privileges-provided.html#priv_connection-admin)或[`SUPER`](privileges-provided.html#priv_super)，您可以终止所有线程和语句，但要影响正在使用[`SYSTEM_USER`](privileges-provided.html#priv_system-user)权限执行的线程或语句，您自己的会话还必须具有[`SYSTEM_USER`](privileges-provided.html#priv_system-user)权限。
- en: You can also use the [**mysqladmin processlist**](mysqladmin.html "6.5.2 mysqladmin
    — A MySQL Server Administration Program") and [**mysqladmin kill**](mysqladmin.html
    "6.5.2 mysqladmin — A MySQL Server Administration Program") commands to examine
    and kill threads.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用[**mysqladmin processlist**](mysqladmin.html "6.5.2 mysqladmin — A MySQL
    Server Administration Program")和[**mysqladmin kill**](mysqladmin.html "6.5.2 mysqladmin
    — A MySQL Server Administration Program")命令来检查和终止线程。
- en: 'When you use [`KILL`](kill.html "15.7.8.4 KILL Statement"), a thread-specific
    kill flag is set for the thread. In most cases, it might take some time for the
    thread to die because the kill flag is checked only at specific intervals:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用[`KILL`](kill.html "15.7.8.4 KILL Statement")时，会为线程设置特定于线程的 kill 标志。在大多数情况下，线程可能需要一些时间才能终止，因为
    kill 标志仅在特定间隔检查：
- en: During [`SELECT`](select.html "15.2.13 SELECT Statement") operations, for `ORDER
    BY` and `GROUP BY` loops, the flag is checked after reading a block of rows. If
    the kill flag is set, the statement is aborted.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`SELECT`](select.html "15.2.13 SELECT Statement")操作期间，对于`ORDER BY`和`GROUP
    BY`循环，每次读取一块行后都会检查标志。如果设置了 kill 标志，则会中止语句。
- en: '[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") operations
    that make a table copy check the kill flag periodically for each few copied rows
    read from the original table. If the kill flag was set, the statement is aborted
    and the temporary table is deleted.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行使表复制的[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")操作会定期检查
    kill 标志，以便从原始表中读取每几行复制的行。如果设置了 kill 标志，则会中止语句并删除临时表。
- en: The [`KILL`](kill.html "15.7.8.4 KILL Statement") statement returns without
    waiting for confirmation, but the kill flag check aborts the operation within
    a reasonably small amount of time. Aborting the operation to perform any necessary
    cleanup also takes some time.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`KILL`](kill.html "15.7.8.4 KILL Statement")语句会立即返回而不等待确认，但 kill 标志检查会在相当短的时间内中止操作。中止操作以执行任何必要的清理也需要一些时间。'
- en: During [`UPDATE`](update.html "15.2.17 UPDATE Statement") or [`DELETE`](delete.html
    "15.2.2 DELETE Statement") operations, the kill flag is checked after each block
    read and after each updated or deleted row. If the kill flag is set, the statement
    is aborted. If you are not using transactions, the changes are not rolled back.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`UPDATE`](update.html "15.2.17 UPDATE Statement")或[`DELETE`](delete.html "15.2.2 DELETE
    Statement")操作期间，每次读取块和每次更新或删除行后都会检查 kill 标志。如果设置了 kill 标志，则会中止语句。如果您没有使用事务，则更改不会回滚。
- en: '[`GET_LOCK()`](locking-functions.html#function_get-lock) aborts and returns
    `NULL`.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`GET_LOCK()`](locking-functions.html#function_get-lock)会中止并返回`NULL`。'
- en: 'If the thread is in the table lock handler (state: `Locked`), the table lock
    is quickly aborted.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果线程在表锁处理程序中（状态：`Locked`），则表锁会被快速中止。
- en: If the thread is waiting for free disk space in a write call, the write is aborted
    with a “disk full” error message.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果线程在写调用中等待空闲磁盘空间，则会用“磁盘已满”错误消息中止写操作。
- en: '[`EXPLAIN ANALYZE`](explain.html#explain-analyze "Obtaining Information with
    EXPLAIN ANALYZE") aborts and prints the first row of output. This works in MySQL
    8.0.20 and later.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`EXPLAIN ANALYZE`](explain.html#explain-analyze "使用 EXPLAIN ANALYZE 获取信息")会中止并打印输出的第一行。这适用于
    MySQL 8.0.20 及更高版本。'
- en: Warning
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Killing a [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR TABLE Statement")
    or [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")
    operation on a `MyISAM` table results in a table that is corrupted and unusable.
    Any reads or writes to such a table fail until you optimize or repair it again
    (without interruption).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在`MyISAM`表上终止[`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR TABLE Statement")或[`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")操作会导致表损坏且无法使用。在您再次优化或修复它之前（无中断），对这样的表的任何读取或写入都会失败。
