- en: 5.6.4 The Rows Holding the Group-wise Maximum of a Certain Column
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5.6.4 持有某一列分组最大值的行
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/example-maximum-column-group-row.html](https://dev.mysql.com/doc/refman/8.0/en/example-maximum-column-group-row.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/example-maximum-column-group-row.html](https://dev.mysql.com/doc/refman/8.0/en/example-maximum-column-group-row.html)
- en: '*Task: For each article, find the dealer or dealers with the most expensive
    price.*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*任务：对于每篇文章，找到价格最高的经销商或经销商。*'
- en: 'This problem can be solved with a subquery like this one:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题可以通过这样的子查询来解决：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding example uses a correlated subquery, which can be inefficient (see
    [Section 15.2.15.7, “Correlated Subqueries”](correlated-subqueries.html "15.2.15.7 Correlated
    Subqueries")). Other possibilities for solving the problem are to use an uncorrelated
    subquery in the `FROM` clause, a `LEFT JOIN`, or a common table expression with
    a window function.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的示例使用了相关子查询，这可能效率低下（参见 [Section 15.2.15.7, “Correlated Subqueries”](correlated-subqueries.html
    "15.2.15.7 Correlated Subqueries")）。解决问题的其他可能性包括在 `FROM` 子句中使用无关联子查询、`LEFT JOIN`
    或具有窗口函数的公共表达式。
- en: 'Uncorrelated subquery:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 无关联子查询：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`LEFT JOIN`:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`LEFT JOIN`：'
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `LEFT JOIN` works on the basis that when `s1.price` is at its maximum value,
    there is no `s2.price` with a greater value and thus the corresponding `s2.article`
    value is `NULL`. See [Section 15.2.13.2, “JOIN Clause”](join.html "15.2.13.2 JOIN
    Clause").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`LEFT JOIN` 的工作原理是，当 `s1.price` 达到最大值时，没有比它更大的 `s2.price`，因此对应的 `s2.article`
    值为 `NULL`。参见 [Section 15.2.13.2, “JOIN Clause”](join.html "15.2.13.2 JOIN Clause")。'
- en: 'Common table expression with window function:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 具有窗口函数的公共表达式：
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
