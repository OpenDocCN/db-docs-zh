- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-rules-channel-based-filters.html](https://dev.mysql.com/doc/refman/8.0/en/replication-rules-channel-based-filters.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-rules-channel-based-filters.html](https://dev.mysql.com/doc/refman/8.0/en/replication-rules-channel-based-filters.html)
- en: 19.2.5.4 Replication Channel Based Filters
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.2.5.4 复制通道基于过滤器
- en: This section explains how to work with replication filters when multiple replication
    channels exist, for example in a multi-source replication topology. Before MySQL
    8.0, all replication filters were global, so filters were applied to all replication
    channels. From MySQL 8.0, replication filters can be global or channel specific,
    enabling you to configure multi-source replicas with replication filters on specific
    replication channels. Channel specific replication filters are particularly useful
    in a multi-source replication topology when the same database or table is present
    on multiple sources, and the replica is only required to replicate it from one
    source.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了在存在多个复制通道时如何使用复制过滤器，例如在多源复制拓扑中。在 MySQL 8.0 之前，所有复制过滤器都是全局的，因此过滤器适用于所有复制通道。从
    MySQL 8.0 开始，复制过滤器可以是全局的或特定于通道的，使您能够在特定复制通道上配置具有复制过滤器的多源副本。特定于通道的复制过滤器在多源复制拓扑中特别有用，当相同数据库或表存在于多个源上时，并且只需要从一个源复制副本时。
- en: For instructions to set up replication channels, see [Section 19.1.5, “MySQL
    Multi-Source Replication”](replication-multi-source.html "19.1.5 MySQL Multi-Source
    Replication"), and for more information on how they work, see [Section 19.2.2,
    “Replication Channels”](replication-channels.html "19.2.2 Replication Channels").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有关设置复制通道的说明，请参见[第 19.1.5 节，“MySQL 多源复制”](replication-multi-source.html "19.1.5
    MySQL Multi-Source Replication")，有关其工作原理的更多信息，请参见[第 19.2.2 节，“复制通道”](replication-channels.html
    "19.2.2 Replication Channels")。
- en: Important
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 重要
- en: Each channel on a multi-source replica must replicate from a different source.
    You cannot set up multiple replication channels from a single replica to a single
    source, even if you use replication filters to select different data to replicate
    on each channel. This is because the server IDs of replicas must be unique in
    a replication topology. The source distinguishes replicas only by their server
    IDs, not by the names of the replication channels, so it cannot recognize different
    replication channels from the same replica.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 多源副本上的每个通道必须从不同源复制。即使您使用复制过滤器在每个通道上选择不同的数据进行复制，也不能从单个副本到单个源设置多个复制通道。这是因为副本的服务器
    ID 在复制拓扑中必须是唯一的。源仅通过副本的服务器 ID 来区分副本，而不是通过复制通道的名称，因此它无法识别来自同一副本的不同复制通道。
- en: Important
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 重要
- en: On a MySQL server instance that is configured for Group Replication, channel
    specific replication filters can be used on replication channels that are not
    directly involved with Group Replication, such as where a group member also acts
    as a replica to a source that is outside the group. They cannot be used on the
    `group_replication_applier` or `group_replication_recovery` channels. Filtering
    on these channels would make the group unable to reach agreement on a consistent
    state.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置为组复制的 MySQL 服务器实例上，可以在与组复制无直接关系的复制通道上使用特定于通道的复制过滤器，例如，其中一个组成员还充当来自组外部源的副本。它们不能用于`group_replication_applier`或`group_replication_recovery`通道。在这些通道上进行过滤会使组无法达成一致状态的协议。
- en: Important
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 重要
- en: For a multi-source replica in a diamond topology (where the replica replicates
    from two or more sources, which in turn replicate from a common source), when
    GTID-based replication is in use, ensure that any replication filters or other
    channel configuration are identical on all channels on the multi-source replica.
    With GTID-based replication, filters are applied only to the transaction data,
    and GTIDs are not filtered out. This happens so that a replica’s GTID set stays
    consistent with the source’s, meaning GTID auto-positioning can be used without
    re-acquiring filtered out transactions each time. In the case where the downstream
    replica is multi-source and receives the same transaction from multiple sources
    in a diamond topology, the downstream replica now has multiple versions of the
    transaction, and the result depends on which channel applies the transaction first.
    The second channel to attempt it skips the transaction using GTID auto-skip, because
    the transaction’s GTID was added to the [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    set by the first channel. With identical filtering on the channels, there is no
    problem because all versions of the transaction contain the same data, so the
    results are the same. However, with different filtering on the channels, the database
    can become inconsistent and replication can hang.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于钻石拓扑结构中的多源复制（其中复制品从两个或更多源复制，这些源源自一个共同的源），当使用基于 GTID 的复制时，请确保多源复制的所有通道上的任何复制过滤器或其他通道配置都是相同的。使用基于
    GTID 的复制时，过滤器仅应用于事务数据，而 GTID 不会被过滤掉。这样做是为了使复制品的 GTID 集与源的保持一致，这意味着可以使用 GTID 自动定位而无需每次重新获取被过滤掉的事务。在下游复制品是多源的情况下，并且在钻石拓扑结构中从多个源接收相同事务的情况下，下游复制品现在具有事务的多个版本，结果取决于哪个通道首先应用该事务。尝试的第二个通道使用
    GTID 自动跳过跳过事务，因为事务的 GTID 已被第一个通道添加到[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)集中。在通道上具有相同过滤器的情况下，没有问题，因为所有事务的版本都包含相同的数据，因此结果是相同的。然而，如果通道上的过滤器不同，数据库可能变得不一致，复制可能会停滞。
- en: Overview of Replication Filters and Channels
  id: totrans-10
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 复制过滤器和通道概述
- en: 'When multiple replication channels exist, for example in a multi-source replication
    topology, replication filters are applied as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当存在多个复制通道时，例如在多源复制拓扑中，复制过滤器应用如下：
- en: Any global replication filter specified is added to the global replication filters
    of the filter type (`do_db`, `do_ignore_table`, and so on).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何指定的全局复制过滤器都会添加到过滤器类型（`do_db`、`do_ignore_table`等）的全局复制过滤器中。
- en: Any channel specific replication filter adds the filter to the specified channel’s
    replication filters for the specified filter type.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何特定于通道的复制过滤器都会将过滤器添加到指定通道的指定过滤器类型的复制过滤器中。
- en: Each replication channel copies global replication filters to its channel specific
    replication filters if no channel specific replication filter of this type is
    configured.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未配置此类型的通道特定复制过滤器，则每个复制通道将全局复制过滤器复制到其特定于通道的复制过滤器中。
- en: Each channel uses its channel specific replication filters to filter the replication
    stream.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个通道使用其特定于通道的复制过滤器来过滤复制流。
- en: 'The syntax to create channel specific replication filters extends the existing
    SQL statements and command options. When a replication channel is not specified
    the global replication filter is configured to ensure backwards compatibility.
    The [`CHANGE REPLICATION FILTER`](change-replication-filter.html "15.4.2.2 CHANGE
    REPLICATION FILTER Statement") statement supports the `FOR CHANNEL` clause to
    configure channel specific filters online. The `--replicate-*` command options
    to configure filters can specify a replication channel using the form `--replicate-*`filter_type`*=*`channel_name`*:*`filter_details`*`.
    Suppose channels `channel_1` and `channel_2` exist before the server starts; in
    this case, starting the replica with the command line options [`--replicate-do-db=db1`](replication-options-replica.html#option_mysqld_replicate-do-db)
    [`--replicate-do-db=channel_1:db2`](replication-options-replica.html#option_mysqld_replicate-do-db)
    [`--replicate-do-db=db3`](replication-options-replica.html#option_mysqld_replicate-do-db)
    [`--replicate-ignore-db=db4`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    [`--replicate-ignore-db=channel_2:db5`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    [`--replicate-wild-do-table=channel_1:db6.t1%`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)
    would result in:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 创建频道特定复制过滤器的语法扩展了现有的SQL语句和命令选项。当未指定复制频道时，全局复制过滤器被配置以确保向后兼容性。[`CHANGE REPLICATION
    FILTER`](change-replication-filter.html "15.4.2.2 CHANGE REPLICATION FILTER Statement")语句支持`FOR
    CHANNEL`子句在线配置频道特定过滤器。使用`--replicate-*`命令选项配置过滤器可以指定复制频道，形式为`--replicate-*`filter_type`*=*`channel_name`*:*`filter_details`*`。假设在服务器启动之前存在`channel_1`和`channel_2`频道；在这种情况下，使用命令行选项[`--replicate-do-db=db1`](replication-options-replica.html#option_mysqld_replicate-do-db)
    [`--replicate-do-db=channel_1:db2`](replication-options-replica.html#option_mysqld_replicate-do-db)
    [`--replicate-do-db=db3`](replication-options-replica.html#option_mysqld_replicate-do-db)
    [`--replicate-ignore-db=db4`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    [`--replicate-ignore-db=channel_2:db5`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    [`--replicate-wild-do-table=channel_1:db6.t1%`](replication-options-replica.html#option_mysqld_replicate-wild-do-table)
    将导致：
- en: '*Global replication filters*: `do_db=db1,db3`; `ignore_db=db4`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*全局复制过滤器*: `do_db=db1,db3`; `ignore_db=db4`'
- en: '*Channel specific filters on channel_1*: `do_db=db2`; `ignore_db=db4`; `wild-do-table=db6.t1%`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*channel_1上的频道特定过滤器*: `do_db=db2`; `ignore_db=db4`; `wild-do-table=db6.t1%`'
- en: '*Channel specific filters on channel_2*: `do_db=db1,db3`; `ignore_db=db5`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*channel_2上的频道特定过滤器*: `do_db=db1,db3`; `ignore_db=db5`'
- en: 'These same rules could be applied at startup when included in the replica''s
    `my.cnf` file, like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制品的`my.cnf`文件中包含时，这些相同规则可以在启动时应用，如下所示：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To monitor the replication filters in such a setup use the [`replication_applier_global_filters`](performance-schema-replication-applier-global-filters-table.html
    "29.12.11.9 The replication_applier_global_filters Table") and [`replication_applier_filters`](performance-schema-replication-applier-filters-table.html
    "29.12.11.10 The replication_applier_filters Table") tables.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种设置中监视复制过滤器，请使用[`replication_applier_global_filters`](performance-schema-replication-applier-global-filters-table.html
    "29.12.11.9 The replication_applier_global_filters Table")和[`replication_applier_filters`](performance-schema-replication-applier-filters-table.html
    "29.12.11.10 The replication_applier_filters Table")表。
- en: Configuring Channel Specific Replication Filters at Startup
  id: totrans-23
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在启动时配置频道特定复制过滤器
- en: 'The replication filter related command options can take an optional *`channel`*
    followed by a colon, followed by the filter specification. The first colon is
    interpreted as a separator, subsequent colons are interpreted as literal colons.
    The following command options support channel specific replication filters using
    this format:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 与复制过滤器相关的命令选项可以在可选的*`channel`*后跟一个冒号，然后是过滤器规范。第一个冒号被解释为分隔符，后续的冒号被解释为字面冒号。以下命令选项支持使用此格式配置频道特定复制过滤器：
- en: '`--replicate-do-db=*`channel`*:*`database_id`*`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--replicate-do-db=*`channel`*:*`database_id`*`'
- en: '`--replicate-ignore-db=*`channel`*:*`database_id`*`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--replicate-ignore-db=*`channel`*:*`database_id`*`'
- en: '`--replicate-do-table=*`channel`*:*`table_id`*`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--replicate-do-table=*`channel`*:*`table_id`*`'
- en: '`--replicate-ignore-table=*`channel`*:*`table_id`*`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--replicate-ignore-table=*`channel`*:*`table_id`*`'
- en: '`--replicate-rewrite-db=*`channel`*:*`db1-db2`*`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--replicate-rewrite-db=*`channel`*:*`db1-db2`*`'
- en: '`--replicate-wild-do-table=*`channel`*:*`table`* *`pattern`*`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--replicate-wild-do-table=*`channel`*:*`table`* *`pattern`*`'
- en: '`--replicate-wild-ignore-table=*`channel`*:*`table`* *`pattern`*`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--replicate-wild-ignore-table=*`channel`*:*`table`* *`pattern`*`'
- en: All of the options just listed can be used in the replica's `my.cnf` file, as
    with most other MySQL server startup options, by omitting the two leading dashes.
    See [Overview of Replication Filters and Channels](replication-rules-channel-based-filters.html#replication-rules-channel-overview
    "Overview of Replication Filters and Channels"), for a brief example, as well
    as [Section 6.2.2.2, “Using Option Files”](option-files.html "6.2.2.2 Using Option
    Files").
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所有列出的选项都可以在副本的`my.cnf`文件中使用，与大多数其他MySQL服务器启动选项一样，省略前两个破折号。参见[Overview of Replication
    Filters and Channels](replication-rules-channel-based-filters.html#replication-rules-channel-overview)，以及[Section 6.2.2.2,
    “Using Option Files”](option-files.html "6.2.2.2 Using Option Files")中的简短示例。
- en: If you use a colon but do not specify a *`channel`* for the filter option, for
    example `--replicate-do-db=:*`database_id`*`, the option configures the replication
    filter for the default replication channel. The default replication channel is
    the replication channel which always exists once replication has been started,
    and differs from multi-source replication channels which you create manually.
    When neither the colon nor a *`channel`* is specified the option configures the
    global replication filters, for example `--replicate-do-db=*`database_id`*` configures
    the global [`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)
    filter.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用冒号但不为过滤选项指定*`channel`*，例如`--replicate-do-db=:*`database_id`*`，则该选项将为默认复制通道配置复制过滤器。默认复制通道是一旦启动复制就始终存在的复制通道，与手动创建的多源复制通道不同。当既不指定冒号也不指定*`channel`*时，该选项将配置全局复制过滤器，例如`--replicate-do-db=*`database_id`*`配置全局[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)过滤器。
- en: If you configure multiple `rewrite-db=*`from_name`*->*`to_name`*` options with
    the same *`from_name`* database, all filters are added together (put into the
    `rewrite_do` list) and the first one takes effect.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果配置了多个`rewrite-db=*`from_name`*->*`to_name`*`选项与相同的*`from_name`*数据库，所有过滤器将被添加在一起（放入`rewrite_do`列表中），第一个生效。
- en: The *`pattern`* used for the `--replicate-wild-*-table` options can include
    any characters allowed in identifiers as well as the wildcards `%` and `_`. These
    work the same way as when used with the [`LIKE`](string-comparison-functions.html#operator_like)
    operator; for example, `tbl%` matches any table name beginning with `tbl`, and
    `tbl_` matches any table name matching `tbl` plus one additional character.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 用于`--replicate-wild-*-table`选项的*`pattern`*可以包括标识符中允许的任何字符，以及通配符`%`和`_`。这些与[`LIKE`](string-comparison-functions.html#operator_like)操作符一起使用时的工作方式相同；例如，`tbl%`匹配任何以`tbl`开头的表名，而`tbl_`匹配与`tbl`匹配的表名加一个额外字符。
- en: Changing Channel Specific Replication Filters Online
  id: totrans-36
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 在线更改通道特定的复制过滤器
- en: 'In addition to the `--replicate-*` options, replication filters can be configured
    using the [`CHANGE REPLICATION FILTER`](change-replication-filter.html "15.4.2.2 CHANGE
    REPLICATION FILTER Statement") statement. This removes the need to restart the
    server, but the replication SQL thread must be stopped while making the change.
    To make this statement apply the filter to a specific channel, use the `FOR CHANNEL
    *`channel`*` clause. For example:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`--replicate-*`选项外，还可以使用[`CHANGE REPLICATION FILTER`](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement")语句配置复制过滤器。这样可以避免重新启动服务器，但在进行更改时必须停止复制SQL线程。要使此语句将过滤器应用于特定通道，请使用`FOR
    CHANNEL *`channel`*`子句。例如：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When a `FOR CHANNEL` clause is provided, the statement acts on the specified
    channel's replication filters. If multiple types of filters (`do_db`, `do_ignore_table`,
    `wild_do_table`, and so on) are specified, only the specified filter types are
    replaced by the statement. In a replication topology with multiple channels, for
    example on a multi-source replica, when no `FOR CHANNEL` clause is provided, the
    statement acts on the global replication filters and all channels’ replication
    filters, using a similar logic as the `FOR CHANNEL` case. For more information
    see [Section 15.4.2.2, “CHANGE REPLICATION FILTER Statement”](change-replication-filter.html
    "15.4.2.2 CHANGE REPLICATION FILTER Statement").
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当提供`FOR CHANNEL`子句时，语句将作用于指定通道的复制过滤器。如果指定了多种类型的过滤器（`do_db`、`do_ignore_table`、`wild_do_table`等），则只有指定的过滤器类型会被语句替换。例如，在具有多个通道的复制拓扑结构中，例如在多源复制中，如果没有提供`FOR
    CHANNEL`子句，则语句将作用于全局复制过滤器和所有通道的复制过滤器，使用与`FOR CHANNEL`情况类似的逻辑。更多信息请参见[Section 15.4.2.2,
    “CHANGE REPLICATION FILTER Statement”](change-replication-filter.html "15.4.2.2 CHANGE
    REPLICATION FILTER Statement")。
- en: Removing Channel Specific Replication Filters
  id: totrans-40
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 移除通道特定的复制过滤器
- en: 'When channel specific replication filters have been configured, you can remove
    the filter by issuing an empty filter type statement. For example to remove all
    `REPLICATE_REWRITE_DB` filters from a replication channel named `channel_1` issue:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当配置了通道特定的复制过滤器时，可以通过发出空的过滤器类型语句来移除过滤器。例如，要从名为`channel_1`的复制通道中移除所有`REPLICATE_REWRITE_DB`过滤器，请发出：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Any `REPLICATE_REWRITE_DB` filters previously configured, using either command
    options or [`CHANGE REPLICATION FILTER`](change-replication-filter.html "15.4.2.2 CHANGE
    REPLICATION FILTER Statement"), are removed.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 之前使用命令选项或[`CHANGE REPLICATION FILTER`](change-replication-filter.html "15.4.2.2 CHANGE
    REPLICATION FILTER Statement")配置的任何`REPLICATE_REWRITE_DB`过滤器都会被移除。
- en: The [`RESET REPLICA ALL`](reset-replica.html "15.4.2.4 RESET REPLICA Statement")
    statement removes channel specific replication filters that were set on channels
    deleted by the statement. When the deleted channel or channels are recreated,
    any global replication filters specified for the replica are copied to them, and
    no channel specific replication filters are applied.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`RESET REPLICA ALL`](reset-replica.html "15.4.2.4 RESET REPLICA Statement")
    语句会移除在被语句删除的通道上设置的通道特定的复制过滤器。当被删除的通道重新创建时，任何为副本指定的全局复制过滤器会被复制到它们，而不会应用任何通道特定的复制过滤器。'
