- en: 6.6.2 innochecksum — Offline InnoDB File Checksum Utility
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6.6.2 innochecksum — 离线 InnoDB 文件校验和实用程序
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innochecksum.html](https://dev.mysql.com/doc/refman/8.0/en/innochecksum.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innochecksum.html](https://dev.mysql.com/doc/refman/8.0/en/innochecksum.html)
- en: '[**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB File
    Checksum Utility") prints checksums for `InnoDB` files. This tool reads an `InnoDB`
    tablespace file, calculates the checksum for each page, compares the calculated
    checksum to the stored checksum, and reports mismatches, which indicate damaged
    pages. It was originally developed to speed up verifying the integrity of tablespace
    files after power outages but can also be used after file copies. Because checksum
    mismatches cause `InnoDB` to deliberately shut down a running server, it may be
    preferable to use this tool rather than waiting for an in-production server to
    encounter the damaged pages.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB File
    Checksum Utility") 会为`InnoDB`文件打印校验和。该工具读取一个`InnoDB`表空间文件，为每个页面计算校验和，比较计算的校验和与存储的校验和，报告不匹配，这表明有损坏的页面。最初开发此工具是为了加快在断电后验证表空间文件的完整性，但也可用于文件复制后。因为校验和不匹配会导致`InnoDB`有意关闭正在运行的服务器，所以使用此工具可能比等待生产服务器遇到损坏页面更可取。'
- en: '[**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB File
    Checksum Utility") cannot be used on tablespace files that the server already
    has open. For such files, you should use [`CHECK TABLE`](check-table.html "15.7.3.2 CHECK
    TABLE Statement") to check tables within the tablespace. Attempting to run [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") on a tablespace that
    the server already has open results in an Unable to lock file error.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB File
    Checksum Utility") 不能用于服务器已经打开的表空间文件。对于这样的文件，应该使用[`CHECK TABLE`](check-table.html
    "15.7.3.2 CHECK TABLE Statement") 来检查表空间中的表。尝试在服务器已经打开的表空间上运行 [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") 会导致无法锁定文件的错误。'
- en: If checksum mismatches are found, restore the tablespace from backup or start
    the server and attempt to use [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program") to make a backup of the tables within the tablespace.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发现校验和不匹配，��备份中恢复表空间或启动服务器并尝试使用 [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program") 对表空间中的表进行备份。
- en: 'Invoke [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB
    File Checksum Utility") like this:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB
    File Checksum Utility") 的方法如下：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: innochecksum Options
  id: totrans-7
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: innochecksum 选项
- en: '[**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB File
    Checksum Utility") supports the following options. For options that refer to page
    numbers, the numbers are zero-based.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB File
    Checksum Utility") 支持以下选项。对于涉及页码的选项，数字是从零开始的。'
- en: '[`--help`](innochecksum.html#option_innochecksum_help), `-?`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--help`](innochecksum.html#option_innochecksum_help), `-?`'
- en: '| Command-Line Format | `--help` |'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--help` |'
- en: '| Type | Boolean |'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `false` |'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `false` |'
- en: 'Displays command line help. Example usage:'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示命令行帮助。示例用法：
- en: '[PRE1]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[`--info`](innochecksum.html#option_innochecksum_info), `-I`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--info`](innochecksum.html#option_innochecksum_info), `-I`'
- en: '| Command-Line Format | `--info` |'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--info` |'
- en: '| Type | Boolean |'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `false` |'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `false` |'
- en: 'Synonym for [`--help`](innochecksum.html#option_innochecksum_help). Displays
    command line help. Example usage:'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`--help`](innochecksum.html#option_innochecksum_help) 的同义词。显示命令行帮助。示例用法：'
- en: '[PRE2]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[`--version`](innochecksum.html#option_innochecksum_version), `-V`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--version`](innochecksum.html#option_innochecksum_version), `-V`'
- en: '| Command-Line Format | `--version` |'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--version` |'
- en: '| Type | Boolean |'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `false` |'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `false` |'
- en: 'Displays version information. Example usage:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示版本信息。示例用法：
- en: '[PRE3]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[`--verbose`](innochecksum.html#option_innochecksum_verbose), `-v`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--verbose`](innochecksum.html#option_innochecksum_verbose), `-v`'
- en: '| Command-Line Format | `--verbose` |'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--verbose` |'
- en: '| Type | Boolean |'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `false` |'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `false` |'
- en: 'Verbose mode; prints a progress indicator to the log file every five seconds.
    In order for the progress indicator to be printed, the log file must be specified
    using the `--log option`. To turn on `verbose` mode, run:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 详细模式；每五秒向日志文件打印进度指示器。为了打印进度指示器，必须使用`--log`选项指定日志文件。要启用`详细`模式，请运行：
- en: '[PRE4]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To turn off verbose mode, run:'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要关闭详细模式，请运行：
- en: '[PRE5]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `--verbose` option and `--log` option can be specified at the same time.
    For example:'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`--verbose`选项和`--log`选项可以同时指定。例如：'
- en: '[PRE6]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To locate the progress indicator information in the log file, you can perform
    the following search:'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要在日志文件中查找进度指示信息，可以执行以下搜索：
- en: '[PRE7]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The progress indicator information in the log file appears similar to the following:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 日志文件中的进度指示信息如下所示：
- en: '[PRE8]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[`--count`](innochecksum.html#option_innochecksum_count), `-c`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--count`](innochecksum.html#option_innochecksum_count), `-c`'
- en: '| Command-Line Format | `--count` |'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--count` |'
- en: '| Type | Base name |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 基本名称 |'
- en: '| Default Value | `true` |'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `true` |'
- en: 'Print a count of the number of pages in the file and exit. Example usage:'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 打印文件中页面数的计数并退出。示例用法：
- en: '[PRE9]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[`--start-page=*`num`*`](innochecksum.html#option_innochecksum_start-page),
    `-s *`num`*`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--start-page=*`num`*`](innochecksum.html#option_innochecksum_start-page),
    `-s *`num`*`'
- en: '| Command-Line Format | `--start-page=#` |'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--start-page=#` |'
- en: '| Type | Numeric |'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 数值 |'
- en: '| Default Value | `0` |'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: 'Start at this page number. Example usage:'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从此页码开始。示例用法：
- en: '[PRE10]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'or:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或：
- en: '[PRE11]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[`--end-page=*`num`*`](innochecksum.html#option_innochecksum_end-page), `-e
    *`num`*`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--end-page=*`num`*`](innochecksum.html#option_innochecksum_end-page), `-e
    *`num`*`'
- en: '| Command-Line Format | `--end-page=#` |'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--end-page=#` |'
- en: '| Type | Numeric |'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 数值 |'
- en: '| Default Value | `0` |'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `18446744073709551615` |'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `18446744073709551615` |'
- en: 'End at this page number. Example usage:'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结束于此页码。示例用法：
- en: '[PRE12]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'or:'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或：
- en: '[PRE13]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[`--page=*`num`*`](innochecksum.html#option_innochecksum_page), `-p *`num`*`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--page=*`num`*`](innochecksum.html#option_innochecksum_page), `-p *`num`*`'
- en: '| Command-Line Format | `--page=#` |'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--page=#` |'
- en: '| Type | Integer |'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: 'Check only this page number. Example usage:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅检查此页码。示例用法：
- en: '[PRE14]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[`--strict-check`](innochecksum.html#option_innochecksum_strict-check), `-C`'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--strict-check`](innochecksum.html#option_innochecksum_strict-check), `-C`'
- en: '| Command-Line Format | `--strict-check=algorithm` |'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--strict-check=algorithm` |'
- en: '| Type | Enumeration |'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `crc32` |'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `crc32` |'
- en: '| Valid Values | `innodb``crc32``none` |'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `innodb``crc32``none` |'
- en: Specify a strict checksum algorithm. Options include `innodb`, `crc32`, and
    `none`.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定严格的校验算法。选项包括`innodb`、`crc32`和`none`。
- en: 'In this example, the `innodb` checksum algorithm is specified:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此示例中，指定了`innodb`校验算法：
- en: '[PRE15]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In this example, the `crc32` checksum algorithm is specified:'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此示例中，指定了`crc32`校验算法：
- en: '[PRE16]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following conditions apply:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下条件适用：
- en: If you do not specify the [`--strict-check`](innochecksum.html#option_innochecksum_strict-check)
    option, [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB
    File Checksum Utility") validates against `innodb`, `crc32` and `none`.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您没有指定[`--strict-check`](innochecksum.html#option_innochecksum_strict-check)选项，[**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — 离线InnoDB文件校验实用程序") 将校验`innodb`、`crc32`和`none`。
- en: If you specify the `none` option, only checksums generated by `none` are allowed.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果指定`none`选项，则只允许由`none`生成的校验。
- en: If you specify the `innodb` option, only checksums generated by `innodb` are
    allowed.
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果指定`innodb`选项，则只允许由`innodb`生成的校验。
- en: If you specify the `crc32` option, only checksums generated by `crc32` are allowed.
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果指定`crc32`选项，则只允许由`crc32`生成的校验。
- en: '[`--no-check`](innochecksum.html#option_innochecksum_no-check), `-n`'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--no-check`](innochecksum.html#option_innochecksum_no-check), `-n`'
- en: '| Command-Line Format | `--no-check` |'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--no-check` |'
- en: '| Type | Boolean |'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `false` |'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `false` |'
- en: Ignore the checksum verification when rewriting a checksum. This option may
    only be used with the [**innochecksum**](innochecksum.html "6.6.2 innochecksum
    — Offline InnoDB File Checksum Utility") [`--write`](innochecksum.html#option_innochecksum_write)
    option. If the [`--write`](innochecksum.html#option_innochecksum_write) option
    is not specified, [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline
    InnoDB File Checksum Utility") terminates.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重写校验时忽略校验。此选项只能与[**innochecksum**](innochecksum.html "6.6.2 innochecksum — 离线InnoDB文件校验实用程序")
    的[`--write`](innochecksum.html#option_innochecksum_write)选项一起使用。如果未指定[`--write`](innochecksum.html#option_innochecksum_write)选项，[**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — 离线InnoDB文件校验实用程序") 将终止。
- en: 'In this example, an `innodb` checksum is rewritten to replace an invalid checksum:'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此示例中，将`innodb`校验重写以替换无效校验：
- en: '[PRE17]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[`--allow-mismatches`](innochecksum.html#option_innochecksum_allow-mismatches),
    `-a`'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--allow-mismatches`](innochecksum.html#option_innochecksum_allow-mismatches),
    `-a`'
- en: '| Command-Line Format | `--allow-mismatches=#` |'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--allow-mismatches=#` |'
- en: '| Type | Integer |'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `18446744073709551615` |'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `18446744073709551615` |'
- en: The maximum number of checksum mismatches allowed before [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") terminates. The default
    setting is 0\. If `--allow-mismatches=`*`N`*, where `*`N`*>=0`, *`N`* mismatches
    are permitted and [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline
    InnoDB File Checksum Utility") terminates at `*`N`*+1`. When `--allow-mismatches`
    is set to 0, [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline
    InnoDB File Checksum Utility") terminates on the first checksum mismatch.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在[**innochecksum**](innochecksum.html "6.6.2 innochecksum — 离线InnoDB文件校验工具")终止之前允许的最大校验和不匹配次数。默认设置为0。如果`--allow-mismatches=`*`N`*，其中`*`N`*>=0，则允许*N*个不匹配，并且[**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — 离线InnoDB文件校验工具")在`*`N`*+1`时终止。当`--allow-mismatches`设置为0时，[**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — 离线InnoDB文件校验工具")在第一个校验和不匹配时终止。
- en: In this example, an existing `innodb` checksum is rewritten to set `--allow-mismatches`
    to 1.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此示例中，将现有的`innodb`校验和重写为将`--allow-mismatches`设置为1。
- en: '[PRE18]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: With `--allow-mismatches` set to 1, if there is a mismatch at page 600 and another
    at page 700 on a file with 1000 pages, the checksum is updated for pages 0-599
    and 601-699\. Because `--allow-mismatches` is set to 1, the checksum tolerates
    the first mismatch and terminates on the second mismatch, leaving page 600 and
    pages 700-999 unchanged.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当`--allow-mismatches`设置为1时，如果在具有1000个页面的文件中的第600页存在不匹配，然后在第700页存在另一个不匹配，校验和将更新为0-599页和601-699页。因为`--allow-mismatches`设置为1，校验和容忍第一个不匹配，并在第二个不匹配时终止，使第600页和第700-999页保持不变。
- en: '[`--write=*`name`*`](innochecksum.html#option_innochecksum_write), `-w *`num`*`'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--write=*`name`*`](innochecksum.html#option_innochecksum_write), `-w *`num`*`'
- en: '| Command-Line Format | `--write=algorithm` |'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--write=algorithm` |'
- en: '| Type | Enumeration |'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `crc32` |'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `crc32` |'
- en: '| Valid Values | `innodb``crc32``none` |'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `innodb``crc32``none` |'
- en: Rewrite a checksum. When rewriting an invalid checksum, the [`--no-check`](innochecksum.html#option_innochecksum_no-check)
    option must be used together with the `--write` option. The [`--no-check`](innochecksum.html#option_innochecksum_no-check)
    option tells [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline
    InnoDB File Checksum Utility") to ignore verification of the invalid checksum.
    You do not have to specify the [`--no-check`](innochecksum.html#option_innochecksum_no-check)
    option if the current checksum is valid.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重写校验和。在重写无效校验和时，必须将[`--no-check`](innochecksum.html#option_innochecksum_no-check)选项与`--write`选项一起使用。[`--no-check`](innochecksum.html#option_innochecksum_no-check)选项告诉[**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — 离���InnoDB文件校验工具")忽略无效校验和的验证。如果当前校验和有效，则不必指定[`--no-check`](innochecksum.html#option_innochecksum_no-check)选项。
- en: 'An algorithm must be specified when using the [`--write`](innochecksum.html#option_innochecksum_write)
    option. Possible values for the `--write` option are:'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用[`--write`](innochecksum.html#option_innochecksum_write)选项时必须指定算法。`--write`选项的可能值包括：
- en: '`innodb`: A checksum calculated in software, using the original algorithm from
    `InnoDB`.'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`innodb`: 使用来自`InnoDB`的原始算法在软件中计算的校验和。'
- en: '`crc32`: A checksum calculated using the `crc32` algorithm, possibly done with
    a hardware assist.'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crc32`: 使用`crc32`算法计算的校验和，可能使用硬件辅助完成。'
- en: '`none`: A constant number.'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`none`: 一个常数。'
- en: The `--write` option rewrites entire pages to disk. If the new checksum is identical
    to the existing checksum, the new checksum is not written to disk in order to
    minimize I/O.
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`--write`选项将整个页面重写到磁盘。如果新校验和与现有校验和相同，则为了最小化I/O，新校验和不会写入磁盘。'
- en: '[**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB File
    Checksum Utility") obtains an exclusive lock when the `--write` option is used.'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**innochecksum**](innochecksum.html "6.6.2 innochecksum — 离线InnoDB文件校验工具")在使用`--write`选项时获得独占锁。'
- en: 'In this example, a `crc32` checksum is written for `tab1.ibd`:'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此示例中，为`tab1.ibd`写入`crc32`校验和：
- en: '[PRE19]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'In this example, a `crc32` checksum is rewritten to replace an invalid `crc32`
    checksum:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此示例中，重写`crc32`校验和以替换无效的`crc32`校验和：
- en: '[PRE20]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[`--page-type-summary`](innochecksum.html#option_innochecksum_page-type-summary),
    `-S`'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--page-type-summary`](innochecksum.html#option_innochecksum_page-type-summary),
    `-S`'
- en: '| Command-Line Format | `--page-type-summary` |'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--page-type-summary` |'
- en: '| Type | Boolean |'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `false` |'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `false` |'
- en: 'Display a count of each page type in a tablespace. Example usage:'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在表空间中显示每种页面类型的计数。示例用法：
- en: '[PRE21]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Sample output for `--page-type-summary`:'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`--page-type-summary`的示例输出：'
- en: '[PRE22]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[`--page-type-dump`](innochecksum.html#option_innochecksum_page-type-dump),
    `-D`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--page-type-dump`](innochecksum.html#option_innochecksum_page-type-dump),
    `-D`'
- en: '| Command-Line Format | `--page-type-dump=name` |'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--page-type-dump=name` |'
- en: '| Type | String |'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `[none]` |'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `[无]` |'
- en: 'Dump the page type information for each page in a tablespace to `stderr` or
    `stdout`. Example usage:'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将表空间中每个页面的页面类型信息转储到`stderr`或`stdout`。示例用法：
- en: '[PRE23]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[`--log`](innochecksum.html#option_innochecksum_log), `-l`'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--log`](innochecksum.html#option_innochecksum_log), `-l`'
- en: '| Command-Line Format | `--log=path` |'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log=path` |'
- en: '| Type | File name |'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: '| Default Value | `[none]` |'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `[无]` |'
- en: 'Log output for the [**innochecksum**](innochecksum.html "6.6.2 innochecksum
    — Offline InnoDB File Checksum Utility") tool. A log file name must be provided.
    Log output contains checksum values for each tablespace page. For uncompressed
    tables, LSN values are also provided. The [`--log`](innochecksum.html#option_innochecksum_log)
    replaces the `--debug` option, which was available in earlier releases. Example
    usage:'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[innochecksum](innochecksum.html "6.6.2 innochecksum — 离线InnoDB文件校验实用程序")工具的日志输出。必须提供日志文件名。日志输出包含每个表空间页面的校验值。对于未压缩的表，还提供了LSN值。[`--log`](innochecksum.html#option_innochecksum_log)替换了早期版本中可用的`--debug`选项。示例用法：'
- en: '[PRE24]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'or:'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者：
- en: '[PRE25]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '`-` option.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-` 选项。'
- en: 'Specify the `-` option to read from standard input. If the `-` option is missing
    when “read from standard in” is expected, [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") prints [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") usage information
    indicating that the “-” option was omitted. Example usages:'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定`-`选项以从标准输入读取。如果在期望“从标准输入读取”时缺少`-`选项，则[innochecksum](innochecksum.html "6.6.2
    innochecksum — 离线InnoDB文件校验实用程序")会打印[innochecksum](innochecksum.html "6.6.2 innochecksum
    — 离线InnoDB文件校验实用程序")的使用信息，指示省略了“-”选项。示例用法：
- en: '[PRE26]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: In this example, [**innochecksum**](innochecksum.html "6.6.2 innochecksum —
    Offline InnoDB File Checksum Utility") writes the `crc32` checksum algorithm to
    `a.ibd` without changing the original `t1.ibd` file.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个例子中，[innochecksum](innochecksum.html "6.6.2 innochecksum — 离线InnoDB文件校验实用程序")将`crc32`校验算法写入`a.ibd`，而不改变原始的`t1.ibd`文件。
- en: '[PRE27]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Running innochecksum on Multiple User-defined Tablespace Files
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在多个用户定义的表空间文件上运行innochecksum
- en: The following examples demonstrate how to run [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") on multiple user-defined
    tablespace files (`.ibd` files).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示如何在多个用户定义的表空间文件（`.ibd`文件）上运行[innochecksum](innochecksum.html "6.6.2 innochecksum
    — 离线InnoDB文件校验实用程序")。
- en: 'Run [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB
    File Checksum Utility") for all tablespace (`.ibd`) files in the “test” database:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 运行[innochecksum](innochecksum.html "6.6.2 innochecksum — 离线InnoDB文件校验实用程序")来检查“test”数据库中所有表空间（`.ibd`）文件：
- en: '[PRE28]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Run [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB
    File Checksum Utility") for all tablespace files (`.ibd` files) that have a file
    name starting with “t”:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 运行[innochecksum](innochecksum.html "6.6.2 innochecksum — 离线InnoDB文件校验实用程序")来检查所有以“t”开头的表空间文件（`.ibd`文件）：
- en: '[PRE29]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Run [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline InnoDB
    File Checksum Utility") for all tablespace files (`.ibd` files) in the `data`
    directory:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 运行[innochecksum](innochecksum.html "6.6.2 innochecksum — 离线InnoDB文件校验实用程序")来检查`data`目录中的所有表空间文件（`.ibd`文件）：
- en: '[PRE30]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Running [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline
    InnoDB File Checksum Utility") on multiple user-defined tablespace files is not
    supported on Windows operating systems, as Windows shells such as **cmd.exe**
    do not support glob pattern expansion. On Windows systems, [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") must be run separately
    for each user-defined tablespace file. For example:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows操作系统上不支持在多个用户定义的表空间文件上运行[innochecksum](innochecksum.html "6.6.2 innochecksum
    — 离线InnoDB文件校验实用程序")，因为Windows shell（如**cmd.exe**）不支持通配符扩展。在Windows系统上，必须为每个用户定义的表空间文件单独运行[innochecksum](innochecksum.html
    "6.6.2 innochecksum — 离线InnoDB文件校验实用程序")。例如：
- en: '[PRE31]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Running innochecksum on Multiple System Tablespace Files
  id: totrans-157
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在多个系统表空间文件上运行innochecksum
- en: 'By default, there is only one `InnoDB` system tablespace file (`ibdata1`) but
    multiple files for the system tablespace can be defined using the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    option. In the following example, three files for the system tablespace are defined
    using the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    option: `ibdata1`, `ibdata2`, and `ibdata3`.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，只有一个 `InnoDB` 系统表空间文件（`ibdata1`），但可以使用 [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    选项定义系统表空间的多个文件。在以下示例中，使用 [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    选项定义了三个系统表空间文件：`ibdata1`、`ibdata2` 和 `ibdata3`。
- en: '[PRE32]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The three files (`ibdata1`, `ibdata2`, and `ibdata3`) form one logical system
    tablespace. To run [**innochecksum**](innochecksum.html "6.6.2 innochecksum —
    Offline InnoDB File Checksum Utility") on multiple files that form one logical
    system tablespace, [**innochecksum**](innochecksum.html "6.6.2 innochecksum —
    Offline InnoDB File Checksum Utility") requires the `-` option to read tablespace
    files in from standard input, which is equivalent to concatenating multiple files
    to create one single file. For the example provided above, the following [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") command would be
    used:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 三个文件（`ibdata1`、`ibdata2` 和 `ibdata3`）形成一个逻辑系统表空间。要对形成一个逻辑系统表空间的多个文件运行 [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — 离线 InnoDB 文件校验实用程序")，[**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — 离线 InnoDB 文件校验实用程序") 需要使用 `-` 选项从标准输入读取表空间文件，这相当于连接多个文件以创建一个单一文件。对于上面提供的示例，将使用以下
    [**innochecksum**](innochecksum.html "6.6.2 innochecksum — 离线 InnoDB 文件校验实用程序")
    命令：
- en: '[PRE33]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Refer to the [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline
    InnoDB File Checksum Utility") options information for more information about
    the “-” option.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 有关“-”选项的更多信息，请参考 [**innochecksum**](innochecksum.html "6.6.2 innochecksum —
    离线 InnoDB 文件校验实用程序") 选项信息。
- en: Note
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Running [**innochecksum**](innochecksum.html "6.6.2 innochecksum — Offline
    InnoDB File Checksum Utility") on multiple files in the same tablespace is not
    supported on Windows operating systems, as Windows shells such as **cmd.exe**
    do not support glob pattern expansion. On Windows systems, [**innochecksum**](innochecksum.html
    "6.6.2 innochecksum — Offline InnoDB File Checksum Utility") must be run separately
    for each system tablespace file. For example:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 操作系统上不支持在同一表空间中运行 [**innochecksum**](innochecksum.html "6.6.2 innochecksum
    — 离线 InnoDB 文件校验实用程序") 多个文件，因为 Windows shells（如 **cmd.exe**）不支持通配符模式扩展。在 Windows
    系统上，必须分别对每个系统表空间文件运行 [**innochecksum**](innochecksum.html "6.6.2 innochecksum
    — 离线 InnoDB 文件校验实用程序")。例如：
- en: '[PRE34]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
