- en: 15.2.19 VALUES Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.2.19 VALUES Statement
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/values.html](https://dev.mysql.com/doc/refman/8.0/en/values.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/values.html](https://dev.mysql.com/doc/refman/8.0/en/values.html)
- en: '[`VALUES`](values.html "15.2.19 VALUES Statement") is a DML statement introduced
    in MySQL 8.0.19 which returns a set of one or more rows as a table. In other words,
    it is a table value constructor which also functions as a standalone SQL statement.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`VALUES`](values.html "15.2.19 VALUES Statement")是MySQL 8.0.19中引入的DML语句，它将一组一个或多个行作为表返回。换句话说，它是一个表值构造函数，也可以作为独立的SQL语句。'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The [`VALUES`](values.html "15.2.19 VALUES Statement") statement consists of
    the `VALUES` keyword followed by a list of one or more row constructors, separated
    by commas. A row constructor consists of the `ROW()` row constructor clause with
    a value list of one or more scalar values enclosed in the parentheses. A value
    can be a literal of any MySQL data type or an expression that resolves to a scalar
    value.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`VALUES`](values.html "15.2.19 VALUES Statement")语句由`VALUES`关键字后跟一个或多个行构造函数列表组成，用逗号分隔。行构造函数由`ROW()`行构造函数子句组成，其值列表由一个或多个标量值包含在括号中。一个值可以是任何MySQL数据类型的文字值或解析为标量值的表达式。'
- en: '`ROW()` cannot be empty (but each of the supplied scalar values can be `NULL`).
    Each `ROW()` in the same [`VALUES`](values.html "15.2.19 VALUES Statement") statement
    must have the same number of values in its value list.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`ROW()`不能是空的（但提供的每个标量值可以是`NULL`）。在同一个[`VALUES`](values.html "15.2.19 VALUES
    Statement")语句中，每个`ROW()`在其值列表中必须具有相同数量的值。'
- en: The `DEFAULT` keyword is not supported by `VALUES` and causes a syntax error,
    except when it is used to supply values in an [`INSERT`](insert.html "15.2.7 INSERT
    Statement") statement.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`DEFAULT`关键字不受`VALUES`支持，并导致语法错误，除非它用于在[`INSERT`](insert.html "15.2.7 INSERT
    Statement")语句中提供值。'
- en: 'The output of [`VALUES`](values.html "15.2.19 VALUES Statement") is a table:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[`VALUES`](values.html "15.2.19 VALUES Statement")的输出是一个表：'
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The columns of the table output from [`VALUES`](values.html "15.2.19 VALUES
    Statement") have the implicitly named columns `column_0`, `column_1`, `column_2`,
    and so on, always beginning with `0`. This fact can be used to order the rows
    by column using an optional `ORDER BY` clause in the same way that this clause
    works with a [`SELECT`](select.html "15.2.13 SELECT Statement") statement, as
    shown here:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 从[`VALUES`](values.html "15.2.19 VALUES Statement")输出的表的列具有隐式命名的列`column_0`，`column_1`，`column_2`等，始终从`0`开始。这个事实可以用来使用可选的`ORDER
    BY`子句按列对行进行排序，就像这个子句在[`SELECT`](select.html "15.2.13 SELECT Statement")语句中的工作方式一样，如下所示：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In MySQL 8.0.21 and later, the [`VALUES`](values.html "15.2.19 VALUES Statement")
    statement also supports a `LIMIT` clause for limiting the number of rows in the
    output. (Previously, `LIMIT` was allowed but did nothing.)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.21及更高版本中，[`VALUES`](values.html "15.2.19 VALUES Statement")语句还支持`LIMIT`子句以限制输出中的行数。（以前，`LIMIT`是允许的，但不起作用。）
- en: 'The `VALUES` statement is permissive regarding data types of column values;
    you can mix types within the same column, as shown here:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`VALUES`语句在列值的数据类型方面是宽松的；您可以在同一列中混合类型，如下所示：'
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Important
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: '`VALUES` with one or more instances of `ROW()` acts as a table value constructor;
    although it can be used to supply values in an [`INSERT`](insert.html "15.2.7 INSERT
    Statement") or [`REPLACE`](replace.html "15.2.12 REPLACE Statement") statement,
    do not confuse it with the `VALUES` keyword that is also used for this purpose.
    You should also not confuse it with the [`VALUES()`](miscellaneous-functions.html#function_values)
    function that refers to column values in [`INSERT ... ON DUPLICATE KEY UPDATE`](insert-on-duplicate.html
    "15.2.7.2 INSERT ... ON DUPLICATE KEY UPDATE Statement").'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 具有一个或多个`ROW()`实例的`VALUES`充当表值构造函数；尽管它可以用于在[`INSERT`](insert.html "15.2.7 INSERT
    Statement")或[`REPLACE`](replace.html "15.2.12 REPLACE Statement")语句中提供值，但不要将其与也用于此目的的`VALUES`关键字混淆。您也不要将其与指代[`INSERT
    ... ON DUPLICATE KEY UPDATE`](insert-on-duplicate.html "15.2.7.2 INSERT ... ON
    DUPLICATE KEY UPDATE Statement")中列值的[`VALUES()`](miscellaneous-functions.html#function_values)函数混淆。
- en: You should also bear in mind that `ROW()` is a row value constructor (see [Section 15.2.15.5,
    “Row Subqueries”](row-subqueries.html "15.2.15.5 Row Subqueries")), whereas `VALUES
    ROW()` is a table value constructor; the two cannot be used interchangeably.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您还应该记住`ROW()`是一个行值构造函数（参见[Section 15.2.15.5, “Row Subqueries”](row-subqueries.html
    "15.2.15.5 Row Subqueries"))，而`VALUES ROW()`是一个表值构造函数；这两者不能互换使用。
- en: '[`VALUES`](values.html "15.2.19 VALUES Statement") can be used in many cases
    where you could employ [`SELECT`](select.html "15.2.13 SELECT Statement"), including
    those listed here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`VALUES`](values.html "15.2.19 VALUES Statement") 可以在许多情况下使用 [`SELECT`](select.html
    "15.2.13 SELECT Statement")，包括以下情况：'
- en: 'With [`UNION`](union.html "15.2.18 UNION Clause"), as shown here:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [`UNION`](union.html "15.2.18 UNION Clause")，如下所示：
- en: '[PRE4]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can union together constructed tables having more than one row, like this:'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以将多行构建的表联合在一起，就像这样：
- en: '[PRE5]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can also (and it is usually preferable to) omit [`UNION`](union.html "15.2.18 UNION
    Clause") altogether in such cases and use a single **`VALUES`** statement, like
    this:'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，您也可以（通常更可取地）完全省略 [`UNION`](union.html "15.2.18 UNION Clause") 并使用单个 **`VALUES`**
    语句，就像这样：
- en: '[PRE6]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`VALUES` can also be used in unions with [`SELECT`](select.html "15.2.13 SELECT
    Statement") statements, [`TABLE`](table.html "15.2.16 TABLE Statement") statements,
    or both.'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`VALUES` 也可以与 [`SELECT`](select.html "15.2.13 SELECT Statement") 语句、[`TABLE`](table.html
    "15.2.16 TABLE Statement") 语句或两者一起在联合中使用。'
- en: The constructed tables in the [`UNION`](union.html "15.2.18 UNION Clause") must
    contain the same number of columns, just as if you were using [`SELECT`](select.html
    "15.2.13 SELECT Statement"). See [Section 15.2.18, “UNION Clause”](union.html
    "15.2.18 UNION Clause"), for further examples.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`UNION`](union.html "15.2.18 UNION Clause") 中的构建表必须包含相同数量的列，就像您使用 [`SELECT`](select.html
    "15.2.13 SELECT Statement") 一样。有关更多示例，请参见 [Section 15.2.18, “UNION Clause”](union.html
    "15.2.18 UNION Clause")。'
- en: 'In MySQL 8.0.31 and later, you can use [`EXCEPT`](except.html "15.2.4 EXCEPT
    Clause") and [`INTERSECT`](intersect.html "15.2.8 INTERSECT Clause") with `VALUES`
    in much the same way as `UNION`, as shown here:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.31 及更高版本中，您可以像使用 `UNION` 一样使用 [`EXCEPT`](except.html "15.2.4 EXCEPT
    Clause") 和 [`INTERSECT`](intersect.html "15.2.8 INTERSECT Clause") 与 `VALUES`，如下所示：
- en: '[PRE7]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: See [Section 15.2.4, “EXCEPT Clause”](except.html "15.2.4 EXCEPT Clause"), and
    [Section 15.2.8, “INTERSECT Clause”](intersect.html "15.2.8 INTERSECT Clause"),
    for more information.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见 [Section 15.2.4, “EXCEPT Clause”](except.html "15.2.4 EXCEPT Clause")
    和 [Section 15.2.8, “INTERSECT Clause”](intersect.html "15.2.8 INTERSECT Clause")。
- en: In joins. See [Section 15.2.13.2, “JOIN Clause”](join.html "15.2.13.2 JOIN Clause"),
    for more information and examples.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在连接中。有关更多信息和示例，请参见 [Section 15.2.13.2, “JOIN Clause”](join.html "15.2.13.2 JOIN
    Clause")。
- en: In place of [`VALUES()`](miscellaneous-functions.html#function_values) in an
    [`INSERT`](insert.html "15.2.7 INSERT Statement") or [`REPLACE`](replace.html
    "15.2.12 REPLACE Statement") statement, in which case its semantics differ slightly
    from what is described here. See [Section 15.2.7, “INSERT Statement”](insert.html
    "15.2.7 INSERT Statement"), for details.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`INSERT`](insert.html "15.2.7 INSERT Statement") 或 [`REPLACE`](replace.html
    "15.2.12 REPLACE Statement") 语句中代替 [`VALUES()`](miscellaneous-functions.html#function_values)，在这种情况下，其语义与此处描述的略有不同。有关详细信息，请参见
    [Section 15.2.7, “INSERT Statement”](insert.html "15.2.7 INSERT Statement")。
- en: In place of the source table in [`CREATE TABLE ... SELECT`](create-table-select.html
    "15.1.20.4 CREATE TABLE ... SELECT Statement") and [`CREATE VIEW ... SELECT`](create-view.html
    "15.1.23 CREATE VIEW Statement"). See the descriptions of these statements for
    more information and examples.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [`CREATE TABLE ... SELECT`](create-table-select.html "15.1.20.4 CREATE TABLE
    ... SELECT Statement") 和 [`CREATE VIEW ... SELECT`](create-view.html "15.1.23 CREATE
    VIEW Statement") 中代替源表。有关更多信息和示例，请参见这些语句的描述。
