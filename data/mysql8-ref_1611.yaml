- en: 22.5.7 Monitoring X Plugin
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 22.5.7 监控X插件
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/x-plugin-system-monitoring.html](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-system-monitoring.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/x-plugin-system-monitoring.html](https://dev.mysql.com/doc/refman/8.0/en/x-plugin-system-monitoring.html)
- en: For general X Plugin monitoring, use the status variables that it exposes. See
    [Section 22.5.6.3, “X Plugin Status Variables”](x-plugin-status-variables.html
    "22.5.6.3 X Plugin Status Variables"). For information specifically about monitoring
    the effects of message compression, see [Monitoring Connection Compression for
    X Plugin](x-plugin-connection-compression.html#x-plugin-connection-compression-monitoring
    "Monitoring Connection Compression for X Plugin").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一般的X插件监控，请使用其公开的状态变量。参见[第22.5.6.3节，“X插件状态变量”](x-plugin-status-variables.html
    "22.5.6.3 X插件状态变量")。有关专门监视消息压缩效果的信息，请参见[X插件的连接压缩监控](x-plugin-connection-compression.html#x-plugin-connection-compression-monitoring
    "X插件的连接压缩监控")。
- en: Monitoring SQL Generated by X Plugin
  id: totrans-3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 监控X插件生成的SQL
- en: This section describes how to monitor the SQL statements which X Plugin generates
    when you run X DevAPI operations. When you execute a CRUD statement, it is translated
    into SQL and executed against the server. To be able to monitor the generated
    SQL, the Performance Schema tables must be enabled. The SQL is registered under
    the [`performance_schema.events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 The events_statements_current Table"), [`performance_schema.events_statements_history`](performance-schema-events-statements-history-table.html
    "29.12.6.2 The events_statements_history Table"), and [`performance_schema.events_statements_history_long`](performance-schema-events-statements-history-long-table.html
    "29.12.6.3 The events_statements_history_long Table") tables. The following example
    uses the `world_x` schema, imported as part of the quickstart tutorials in this
    section. We use MySQL Shell in Python mode, and the `\sql` command which enables
    you to issue SQL statements without changing to SQL mode. This is important, because
    if you instead try to switch to SQL mode, the procedure shows the result of this
    operation rather than the X DevAPI operation. The `\sql` command is used in the
    same way if you are using MySQL Shell in JavaScript mode.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何监视运行X DevAPI操作时X插件生成的SQL语句。当您执行CRUD语句时，它会被转换为SQL并针对服务器执行。要能够监视生成的SQL，必须启用Performance
    Schema表。SQL注册在[`performance_schema.events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 events_statements_current表")、[`performance_schema.events_statements_history`](performance-schema-events-statements-history-table.html
    "29.12.6.2 events_statements_history表")和[`performance_schema.events_statements_history_long`](performance-schema-events-statements-history-long-table.html
    "29.12.6.3 events_statements_history_long表")表下。以下示例使用了在本节快速入门教程中导入的`world_x`模式。我们在Python模式下使用MySQL
    Shell，并使用`\sql`命令，该命令使您能够发出SQL语句而无需切换到SQL模式。这很重要，因为如果您尝试切换到SQL模式，该过程将显示此操作的结果而不是X
    DevAPI操作。如果您使用JavaScript模式下的MySQL Shell，则`\sql`命令的使用方式相同。
- en: 'Check if the `events_statements_history` consumer is enabled. Issue:'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`events_statements_history`消费者是否已启用。问题：
- en: '[PRE0]'
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Check if all instruments report data to the consumer. Issue:'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查所有仪器是否向消费者报告数据。问题：
- en: '[PRE1]'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If this statement reports at least one row, you need to enable the instruments.
    See [Section 29.4, “Performance Schema Runtime Configuration”](performance-schema-runtime-configuration.html
    "29.4 Performance Schema Runtime Configuration").
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果此语句报告至少一行，则需要启用仪器。请参见[第29.4节，“Performance Schema运行时配置”](performance-schema-runtime-configuration.html
    "29.4 Performance Schema运行时配置")。
- en: 'Get the thread ID of the current connection. Issue:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取当前连接的线程ID。问题：
- en: '[PRE2]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Execute the X DevAPI CRUD operation for which you want to see the generated
    SQL. For example, issue:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行您想要查看生成的SQL的X DevAPI CRUD操作。例如，问题：
- en: '[PRE3]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You must not issue any further operations for the next step to show the correct
    result.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您必须不再发出任何操作，以便下一步显示正确的结果。
- en: 'Show the last SQL query made by this thread ID. Issue:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示由此线程ID执行的最后一个SQL查询。问题：
- en: '[PRE4]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The result shows the SQL generated by X Plugin based on the most recent statement,
    in this case the X DevAPI CRUD operation from the previous step.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结果显示了基于最近语句生成的X插件SQL，本例中为上一步的X DevAPI CRUD操作。
