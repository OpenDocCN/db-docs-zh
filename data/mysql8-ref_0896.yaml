- en: 15.1.10 ALTER TABLESPACE Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.1.10 修改表空间语句
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/alter-tablespace.html](https://dev.mysql.com/doc/refman/8.0/en/alter-tablespace.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/alter-tablespace.html](https://dev.mysql.com/doc/refman/8.0/en/alter-tablespace.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This statement is used with `NDB` and `InnoDB` tablespaces. It can be used to
    add a new data file to, or to drop a data file from an `NDB` tablespace. It can
    also be used to rename an NDB Cluster Disk Data tablespace, rename an `InnoDB`
    general tablespace, encrypt an `InnoDB` general tablespace, or mark an `InnoDB`
    undo tablespace as active or inactive.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句用于 `NDB` 和 `InnoDB` 表空间。它可用于向 `NDB` 表空间添加新数据文件，或从中删除数据文件。还可用于重命名 NDB 集群磁盘数据表空间、重命名
    `InnoDB` 通用表空间、加密 `InnoDB` 通用表空间，或将 `InnoDB` 撤销表空间标记为活动或非活动。
- en: The `UNDO` keyword, introduced in MySQL 8.0.14, is used with the `SET {ACTIVE
    | INACTIVE}` clause to mark an `InnoDB` undo tablespace as active or inactive.
    For more information, see [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html
    "17.6.3.4 Undo Tablespaces").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`UNDO` 关键字，引入于 MySQL 8.0.14 版本，与 `SET {ACTIVE | INACTIVE}` 子句一起用于将 `InnoDB`
    撤销表空间标记为活动或非活动。有关更多信息，请参阅 [第 17.6.3.4 节，“撤销表空间”](innodb-undo-tablespaces.html
    "17.6.3.4 Undo Tablespaces")。'
- en: The `ADD DATAFILE` variant enables you to specify an initial size for an `NDB`
    Disk Data tablespace using an `INITIAL_SIZE` clause, where *`size`* is measured
    in bytes; the default value is 134217728 (128 MB). You may optionally follow *`size`*
    with a one-letter abbreviation for an order of magnitude, similar to those used
    in `my.cnf`. Generally, this is one of the letters `M` (megabytes) or `G` (gigabytes).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`ADD DATAFILE` 变体允许您使用 `INITIAL_SIZE` 子句指定 `NDB` 磁盘数据表空间的初始大小，其中 *`size`* 以字节为单位；默认值为
    134217728（128 MB）。您可以选择性地在 *`size`* 后面跟上一个表示数量级的单个字母缩写，类似于 `my.cnf` 中使用的那些字母。通常，这些字母之一是
    `M`（兆字节）或 `G`（千兆字节）。'
- en: 'On 32-bit systems, the maximum supported value for `INITIAL_SIZE` is 4294967296
    (4 GB). (Bug #29186)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '在 32 位系统上，`INITIAL_SIZE` 的最大支持值为 4294967296（4 GB）。 (Bug #29186)'
- en: '`INITIAL_SIZE` is rounded, explicitly, as for [`CREATE TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement").'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`INITIAL_SIZE` 被明确地四舍五入，就像 [`CREATE TABLESPACE`](create-tablespace.html "15.1.21 CREATE
    TABLESPACE Statement") 中一样。'
- en: Once a data file has been created, its size cannot be changed; however, you
    can add more data files to an NDB tablespace using additional `ALTER TABLESPACE
    ... ADD DATAFILE` statements.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了数据文件，其大小就无法更改；但是，您可以使用额外的 `ALTER TABLESPACE ... ADD DATAFILE` 语句向 NDB 表空间添加更多数据文件。
- en: When `ALTER TABLESPACE ... ADD DATAFILE` is used with `ENGINE = NDB`, a data
    file is created on each Cluster data node, but only one row is generated in the
    Information Schema [`FILES`](information-schema-files-table.html "28.3.15 The
    INFORMATION_SCHEMA FILES Table") table. See the description of this table, as
    well as [Section 25.6.11.1, “NDB Cluster Disk Data Objects”](mysql-cluster-disk-data-objects.html
    "25.6.11.1 NDB Cluster Disk Data Objects"), for more information. `ADD DATAFILE`
    is not supported with `InnoDB` tablespaces.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `ALTER TABLESPACE ... ADD DATAFILE` 与 `ENGINE = NDB` 一起使用时，在每个集群数据节点上创建一个数据文件，但在信息模式
    [`FILES`](information-schema-files-table.html "28.3.15 The INFORMATION_SCHEMA
    FILES Table") 表中只生成一行。有关更多信息，请参阅此表的描述，以及 [第 25.6.11.1 节，“NDB 集群磁盘数据对象”](mysql-cluster-disk-data-objects.html
    "25.6.11.1 NDB Cluster Disk Data Objects")。`ADD DATAFILE` 不支持 `InnoDB` 表空间。
- en: Using `DROP DATAFILE` with [`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER
    TABLESPACE Statement") drops the data file '*`file_name`*' from an NDB tablespace.
    You cannot drop a data file from a tablespace which is in use by any table; in
    other words, the data file must be empty (no extents used). See [Section 25.6.11.1,
    “NDB Cluster Disk Data Objects”](mysql-cluster-disk-data-objects.html "25.6.11.1 NDB
    Cluster Disk Data Objects"). In addition, any data file to be dropped must previously
    have been added to the tablespace with [`CREATE TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement") or [`ALTER TABLESPACE`](alter-tablespace.html
    "15.1.10 ALTER TABLESPACE Statement"). `DROP DATAFILE` is not supported with `InnoDB`
    tablespaces.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `DROP DATAFILE` 与 [`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER
    TABLESPACE Statement") 一起，从 NDB 表空间中删除数据文件 '*`file_name`*'。您不能从任何表正在使用的表空间中删除数据文件；换句话说，数据文件必须为空（未使用任何范围）。请参阅
    [第 25.6.11.1 节，“NDB 集群磁盘数据对象”](mysql-cluster-disk-data-objects.html "25.6.11.1 NDB
    Cluster Disk Data Objects")。此外，要删除的任何数据文件必须先使用 [`CREATE TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement") 或 [`ALTER TABLESPACE`](alter-tablespace.html
    "15.1.10 ALTER TABLESPACE Statement") 添加到表空间中。`DROP DATAFILE` 不支持 `InnoDB` 表空间。
- en: '`WAIT` is parsed but otherwise ignored. It is intended for future expansion.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`WAIT`会被解析但会被忽略。这是为了未来的扩展。'
- en: The `ENGINE` clause, which specifies the storage engine used by the tablespace,
    is deprecated; expect it to be removed in a future release. The tablespace storage
    engine is known by the data dictionary, making the `ENGINE` clause obsolete. If
    the storage engine is specified, it must match the tablespace storage engine defined
    in the data dictionary. The only values for *`engine_name`* compatible with [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") tablespaces are `NDB` and `NDBCLUSTER`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`ENGINE`子句，用于指定表空间使用的存储引擎，已被弃用；预计在未来的版本中将被移除。表空间存储引擎由数据字典管理，使`ENGINE`子句过时。如果指定了存储引擎，它必须与数据字典中定义的表空间存储引擎匹配。与[`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0")表空间兼容的唯一值为`NDB`和`NDBCLUSTER`。'
- en: '`RENAME TO` operations are implicitly performed in [`autocommit`](server-system-variables.html#sysvar_autocommit)
    mode, regardless of the [`autocommit`](server-system-variables.html#sysvar_autocommit)
    setting.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`RENAME TO`操作会隐式在[`autocommit`](server-system-variables.html#sysvar_autocommit)模式下执行，不受[`autocommit`](server-system-variables.html#sysvar_autocommit)设置的影响。'
- en: A `RENAME TO` operation cannot be performed while [`LOCK TABLES`](lock-tables.html
    "15.3.6 LOCK TABLES and UNLOCK TABLES Statements") or [`FLUSH TABLES WITH READ
    LOCK`](flush.html "15.7.8.3 FLUSH Statement") is in effect for tables that reside
    in the tablespace.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当[`LOCK TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES Statements")或[`FLUSH
    TABLES WITH READ LOCK`](flush.html "15.7.8.3 FLUSH Statement")对位于表空间中的表生效时，无法执行`RENAME
    TO`操作。
- en: Exclusive [metadata locks](glossary.html#glos_metadata_lock "metadata lock")
    are taken on tables that reside in a general tablespace while the tablespace is
    renamed, which prevents concurrent DDL. Concurrent DML is supported.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在重命名表空间时，位于通用表空间中的表会获取独占的[元数据锁](glossary.html#glos_metadata_lock "metadata lock")，这会阻止并发的DDL。并发的DML是支持的。
- en: The [`CREATE TABLESPACE`](privileges-provided.html#priv_create-tablespace) privilege
    is required to rename an `InnoDB` general tablespace.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 重命名`InnoDB`通用表空间需要[`CREATE TABLESPACE`](privileges-provided.html#priv_create-tablespace)权限。
- en: The `AUTOEXTEND_SIZE` option defines the amount by which `InnoDB` extends the
    size of a tablespace when it becomes full. Introduced in MySQL 8.0.23\. The setting
    must be a multiple of 4MB. The default setting is 0, which causes the tablespace
    to be extended according to the implicit default behavior. For more information,
    see [Section 17.6.3.9, “Tablespace AUTOEXTEND_SIZE Configuration”](innodb-tablespace-autoextend-size.html
    "17.6.3.9 Tablespace AUTOEXTEND_SIZE Configuration").
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`AUTOEXTEND_SIZE`选项定义了当表空间满时`InnoDB`扩展表空间的量。在MySQL 8.0.23中引入。设置必须是4MB的倍数。默认设置为0，这会导致表空间根据隐式默认行为进行扩展。更多信息，请参见[Section 17.6.3.9,
    “Tablespace AUTOEXTEND_SIZE Configuration”](innodb-tablespace-autoextend-size.html
    "17.6.3.9 Tablespace AUTOEXTEND_SIZE Configuration")。'
- en: The `ENCRYPTION` clause enables or disables page-level data encryption for an
    `InnoDB` general tablespace or the `mysql` system tablespace. Encryption support
    for general tablespaces was introduced in MySQL 8.0.13\. Encryption support for
    the `mysql` system tablespace was introduced in MySQL 8.0.16.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`ENCRYPTION`子句用于为`InnoDB`通用表空间或`mysql`系统表空间启用或禁用页面级数据加密。通用表空间的加密支持在MySQL 8.0.13中引入。`mysql`系统表空间的加密支持在MySQL
    8.0.16中引入。'
- en: A keyring plugin must be installed and configured before encryption can be enabled.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在启用加密之前，必须安装和配置一个密钥环插件。
- en: As of MySQL 8.0.16, if the [`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)
    variable is enabled, the [`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)
    privilege is required to alter a general tablespace with an `ENCRYPTION` clause
    setting that differs from the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    setting.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.16开始，如果启用了[`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)变量，则需要[`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)权限才能更改具有与[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置不同的`ENCRYPTION`子句设置的通用表空间。
- en: Enabling encryption for a general tablespace fails if any table in the tablespace
    belongs to a schema defined with [`DEFAULT ENCRYPTION='N'`](create-database.html
    "15.1.12 CREATE DATABASE Statement"). Similarly, disabling encryption fails if
    any table in the general tablespace belongs to a schema defined with [`DEFAULT
    ENCRYPTION='Y'`](create-database.html "15.1.12 CREATE DATABASE Statement"). The
    [`DEFAULT ENCRYPTION`](create-database.html "15.1.12 CREATE DATABASE Statement")
    schema option was introduced in MySQL 8.0.16.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表空间中的任何表属于使用[`DEFAULT ENCRYPTION='N'`](create-database.html "15.1.12 CREATE
    DATABASE Statement")定义的模式，则无法为通用表空间启用加密。同样，如果通用表空间中的任何表属于使用[`DEFAULT ENCRYPTION='Y'`](create-database.html
    "15.1.12 CREATE DATABASE Statement")定义的模式，则无法禁用加密。[`DEFAULT ENCRYPTION`](create-database.html
    "15.1.12 CREATE DATABASE Statement")模式选项是在MySQL 8.0.16中引入的。
- en: If an [`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")
    statement executed on a general tablespace does not include an `ENCRYPTION` clause,
    the tablespace retains its current encryption status, regardless of the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    setting.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在通用表空间上执行的[`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE
    Statement")语句不包括`ENCRYPTION`子句，则表空间将保留其当前的加密状态，不受[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置的影响。
- en: When a general tablespace or the `mysql` system tablespace is encrypted, all
    tables residing in the tablespace are encrypted. Likewise, a table created in
    an encrypted tablespace is encrypted.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当通用表空间或`mysql`系统表空间被加密时，存储在表空间中的所有表都会被加密。同样，创建在加密表空间中的表也会被加密。
- en: The `INPLACE` algorithm is used when altering the `ENCRYPTION` attribute of
    a general tablespace or the `mysql` system tablespace. The `INPLACE` algorithm
    permits concurrent DML on tables that reside in the tablespace. Concurrent DDL
    is blocked.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当更改通用表空间或`mysql`系统表空间的`ENCRYPTION`属性时，将使用`INPLACE`算法。`INPLACE`算法允许在表空间中存在的表上进行并发DML。并发DDL将被阻止。
- en: For more information, see [Section 17.13, “InnoDB Data-at-Rest Encryption”](innodb-data-encryption.html
    "17.13 InnoDB Data-at-Rest Encryption").
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第17.13节，“InnoDB数据静态加密”](innodb-data-encryption.html "17.13 InnoDB
    Data-at-Rest Encryption")。
- en: The `ENGINE_ATTRIBUTE` option (available as of MySQL 8.0.21) is used to specify
    tablespace attributes for primary storage engines. The option is reserved for
    future use.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`ENGINE_ATTRIBUTE`选项（自MySQL 8.0.21起可用）用于指定主要存储引擎的表空间属性。该选项保留供将来使用。'
- en: Permitted values are a string literal containing a valid `JSON` document or
    an empty string (''). Invalid `JSON` is rejected.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 允许的值是包含有效`JSON`文档的字符串文字或空字符串（''）。无效的`JSON`将被拒绝。
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`ENGINE_ATTRIBUTE` values can be repeated without error. In this case, the
    last specified value is used.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`ENGINE_ATTRIBUTE`的值可以重复而不会出错。在这种情况下，将使用指定的最后一个值。'
- en: '`ENGINE_ATTRIBUTE` values are not checked by the server, nor are they cleared
    when the table''s storage engine is changed.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器不会检查`ENGINE_ATTRIBUTE`的值，也不会在更改表的存储引擎时清除这些值。
- en: It is not permitted to alter an individual element of a JSON attribute value.
    You can only add or replace an attribute.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 不允许更改JSON属性值的单个元素。您只能添加或替换属性。
