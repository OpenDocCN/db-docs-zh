- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption-key-rotation.html](https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption-key-rotation.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption-key-rotation.html](https://dev.mysql.com/doc/refman/8.0/en/replication-binlog-encryption-key-rotation.html)
- en: 19.3.2.3 Binary Log Master Key Rotation
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.3.2.3 二进制日志主密钥旋转
- en: When binary log encryption is enabled, you can rotate the binary log master
    key at any time while the server is running by issuing [`ALTER INSTANCE ROTATE
    BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key).
    When the binary log master key is rotated manually using this statement, the passwords
    for the new and subsequent files are encrypted using the new binary log master
    key, and also the file passwords for existing encrypted binary log files and relay
    log files are re-encrypted using the new binary log master key, so the encryption
    is renewed completely. You can rotate the binary log master key on a regular basis
    to comply with your organization's security policy, and also if you suspect that
    the current or any of the previous binary log master keys might have been compromised.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用二进制日志加密时，您可以在服务器运行时随时通过执行[`ALTER INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)来旋转二进制日志主密钥。当使用此语句手动旋转二进制日志主密钥时，新文件和随后的文件的密码将使用新的二进制日志主密钥加密，同时现有加密的二进制日志文件和中继日志文件的文件密码将使用新的二进制日志主密钥重新加密，因此加密完全更新。您可以定期旋转二进制日志主密钥以符合组织的安全策略，如果怀疑当前或任何以前的二进制日志主密钥可能已被泄露，也可以这样做。
- en: 'When you rotate the binary log master key manually, MySQL Server takes the
    following actions in sequence:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当您手动旋转二进制日志主密钥时，MySQL服务器按顺序执行以下操作：
- en: A new binary log encryption key is generated with the next available sequence
    number, stored on the keyring, and used as the new binary log master key.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成一个具有下一个可用序列号的新二进制日志加密密钥，存储在密钥环中，并用作新的二进制日志主密钥。
- en: The binary log and relay log files are rotated on all channels.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有通道上的二进制日志和中继日志文件都会被旋转。
- en: The new binary log master key is used to encrypt the file passwords for the
    new binary log and relay log files, and subsequent files until the key is changed
    again.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新的二进制日志主密钥用于加密新的二进制日志和中继日志文件的文件密码，以及直到再次更改密钥为止的随后文件。
- en: The file passwords for existing encrypted binary log files and relay log files
    on the server are re-encrypted in turn using the new binary log master key, starting
    with the most recent files. Any unencrypted files are skipped.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器上现有加密的二进制日志文件和中继日志文件的文件密码将依次使用新的二进制日志主密钥重新加密，从最近的文件开始。任何未加密的文件将被跳过。
- en: Binary log encryption keys that are no longer in use for any files after the
    re-encryption process are removed from the keyring.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在重新加密过程后不再用于任何文件的二进制日志加密密钥将从密钥环中删除。
- en: The [`BINLOG_ENCRYPTION_ADMIN`](privileges-provided.html#priv_binlog-encryption-admin)
    privilege is required to issue [`ALTER INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key),
    and the statement cannot be used if the [`binlog_encryption`](replication-options-binary-log.html#sysvar_binlog_encryption)
    system variable is set to `OFF`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 需要[`BINLOG_ENCRYPTION_ADMIN`](privileges-provided.html#priv_binlog-encryption-admin)权限才能执行[`ALTER
    INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)，如果[`binlog_encryption`](replication-options-binary-log.html#sysvar_binlog_encryption)系统变量设置为`OFF`，则无法使用该语句。
- en: As the final step of the binary log master key rotation process, all binary
    log encryption keys that no longer apply to any retained binary log files or relay
    log files are cleaned up from the keyring. If a retained binary log file or relay
    log file cannot be initialized for re-encryption, the relevant binary log encryption
    keys are not deleted in case the files can be recovered in the future. For example,
    this might be the case if a file listed in a binary log index file is currently
    unreadable, or if a channel fails to initialize. If the server UUID changes, for
    example because a backup created using MySQL Enterprise Backup is used to set
    up a new replica, issuing [`ALTER INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)
    on the new server does not delete any earlier binary log encryption keys that
    include the original server UUID.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 作为二进制日志主密钥轮换过程的最后一步，清理掉不再适用于任何保留的二进制日志文件或中继日志文件的所有二进制日志加密密钥。如果无法为保留的二进制日志文件或中继日志文件初始化重新加密，那么相关的二进制日志加密密钥不会被删除，以防将来可以恢复文件。例如，如果二进制日志索引文件中列出的文件当前无法读取，或者通道无法初始化，可能会出现这种情况。如果服务器
    UUID 更改，例如因为使用 MySQL Enterprise Backup 创建的备份用于设置新的副本，那么在新服务器上发出[`ALTER INSTANCE
    ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)不会删除包括原始服务器
    UUID 的任何早期二进制日志加密密钥。
- en: If any of the first four steps of the binary log master key rotation process
    cannot be completed correctly, an error message is issued explaining the situation
    and the consequences for the encryption status of the binary log files and relay
    log files. Files that were previously encrypted are always left in an encrypted
    state, but their file passwords might still be encrypted using an old binary log
    master key. If you see these errors, first retry the process by issuing [`ALTER
    INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)
    again. Then investigate the status of individual files to see what is blocking
    the process, especially if you suspect that the current or any of the previous
    binary log master keys might have been compromised.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果二进制日志主密钥轮换过程的前四个步骤中有任何一个无法正确完成，系统会发出错误消息，解释情况以及对二进制日志文件和中继日志文件的加密状态的影响。先前加密的文件始终保持在加密状态，但它们的文件密码可能仍然使用旧的二进制日志主密钥进行加密。如果您看到这些错误，请首先通过再次发出[`ALTER
    INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)来重试该过程。然后调查各个文件的状态，看看是什么阻碍了该过程，特别是如果您怀疑当前或任何以前的二进制日志主密钥可能已被泄露。
- en: If the final step of the binary log master key rotation process cannot be completed
    correctly, a warning message is issued explaining the situation. The warning message
    identifies whether the process could not clean up the auxiliary keys in the keyring
    for rotating the binary log master key, or could not clean up unused binary log
    encryption keys. You can choose to ignore the message as the keys are auxiliary
    keys or no longer in use, or you can issue [`ALTER INSTANCE ROTATE BINLOG MASTER
    KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key) again to retry
    the process.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果二进制日志主密钥轮换过程的最后一步无法正确完成，系统会发出警告消息，解释情况。警告消息会指出该过程无法清理用于轮换二进制日志主密钥的辅助密钥，或无法清理未使用的二进制日志加密密钥。您可以选择忽略该消息，因为这些密钥是辅助密钥或不再使用，或者您可以再次发出[`ALTER
    INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)来重试该过程。
- en: If the server stops and is restarted with binary log encryption still set to
    `ON` during the binary log master key rotation process, new binary log files and
    relay log files after the restart are encrypted using the new binary log master
    key. However, the re-encryption of existing files is not continued, so files that
    did not get re-encrypted before the server stopped are left encrypted using the
    previous binary log master key. To complete re-encryption and clean up unused
    binary log encryption keys, issue [`ALTER INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)
    again after the restart.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果服务器在二进制日志主密钥轮换过程中停止并重新启动，而二进制日志加密仍然设置为`ON`，则重新启动后的新二进制日志文件和中继日志文件将使用新的二进制日志主密钥进行加密。但是，现有文件的重新加密不会继续进行，因此在服务器停止之前未重新加密的文件将继续使用先前的二进制日志主密钥进行加密。要完成重新加密并清理未使用的二进制日志加密密钥，请在重新启动后再次发出[`ALTER
    INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)。
- en: '[`ALTER INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)
    actions are not written to the binary log and are not executed on replicas. Binary
    log master key rotation can therefore be carried out in replication environments
    including a mix of MySQL versions. To schedule regular rotation of the binary
    log master key on all applicable source and replica servers, you can enable the
    MySQL Event Scheduler on each server and issue the [`ALTER INSTANCE ROTATE BINLOG
    MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key) statement
    using a [`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement") statement.
    If you rotate the binary log master key because you suspect that the current or
    any of the previous binary log master keys might have been compromised, issue
    the statement on every applicable source and replica server. Issuing the statement
    on individual servers ensures that you can verify immediate compliance, even in
    the case of replicas that are lagging, belong to multiple replication topologies,
    or are not currently active in the replication topology but have binary log and
    relay log files.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ALTER INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)
    操作不会被写入二进制日志，也不会在副本上执行。因此，在包含多个 MySQL 版本的复制环境中可以执行二进制日志主密钥轮换。要在所有适用的源和副本服务器上定期轮换二进制日志主密钥，您可以在每个服务器上启用
    MySQL 事件调度程序，并使用 [`CREATE EVENT`](create-event.html "15.1.13 CREATE EVENT Statement")
    语句发出 [`ALTER INSTANCE ROTATE BINLOG MASTER KEY`](alter-instance.html#alter-instance-rotate-binlog-master-key)
    语句。如果因为怀疑当前或任何以前的二进制日志主密钥可能已被泄露而轮换二进制日志主密钥，则在每个适用的源和副本服务器上发出该语句。在各个服务器上发出该语句可确保您可以验证即时的合规性，即使在滞后的副本、属于多个复制拓扑或当前未在复制拓扑中活动但具有二进制日志和中继日志文件的情况下也是如此。'
- en: The [`binlog_rotate_encryption_master_key_at_startup`](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)
    system variable controls whether the binary log master key is automatically rotated
    when the server is restarted. If this system variable is set to `ON`, a new binary
    log encryption key is generated and used as the new binary log master key whenever
    the server is restarted. If it is set to `OFF`, which is the default, the existing
    binary log master key is used again after the restart. When the binary log master
    key is rotated at startup, the file passwords for the new binary log and relay
    log files are encrypted using the new key. The file passwords for the existing
    encrypted binary log files and relay log files are not re-encrypted, so they remain
    encrypted using the old key, which remains available on the keyring.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`binlog_rotate_encryption_master_key_at_startup`](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)
    系统变量控制服务器在重新启动时是否自动轮换二进制日志主密钥。如果此系统变量设置为 `ON`，则在服务器重新启动时会生成一个新的二进制日志加密密钥，并将其用作新的二进制日志主密钥。如果设置为
    `OFF`，即默认值，则在重新启动后再次使用现有的二进制日志主密钥。当在启动时轮换二进制日志主密钥时，新的二进制日志和中继日志文件的文件密码将使用新密钥加密。现有加密的二进制日志文件和中继日志文件的文件密码不会重新加密，因此它们仍然使用旧密钥加密，该旧密钥仍然可在密钥环中使用。'
