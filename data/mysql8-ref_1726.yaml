- en: 25.6.4 Summary of NDB Cluster Start Phases
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 25.6.4 NDB集群启动阶段摘要
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-start-phases.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-start-phases.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-start-phases.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-start-phases.html)
- en: This section provides a simplified outline of the steps involved when NDB Cluster
    data nodes are started. More complete information can be found in [NDB Cluster
    Start Phases](/doc/ndb-internals/en/ndb-internals-start-phases.html), in the *`NDB`
    Internals Guide*.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了NDB集群数据节点启动时涉及的步骤的简化概述。更完整的信息可以在[NDB集群启动阶段](/doc/ndb-internals/en/ndb-internals-start-phases.html)中找到，*`NDB`内部指南*中。
- en: These phases are the same as those reported in the output from the [`*`node_id`*
    STATUS`](mysql-cluster-mgm-client-commands.html#ndbclient-status) command in the
    management client (see [Section 25.6.1, “Commands in the NDB Cluster Management
    Client”](mysql-cluster-mgm-client-commands.html "25.6.1 Commands in the NDB Cluster
    Management Client")). These start phases are also reported in the `start_phase`
    column of the [`ndbinfo.nodes`](mysql-cluster-ndbinfo-nodes.html "25.6.16.47 The
    ndbinfo nodes Table") table.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这些阶段与管理客户端中[`*`node_id`* STATUS`](mysql-cluster-mgm-client-commands.html#ndbclient-status)命令输出中报告的相同（请参见[第25.6.1节，“NDB集群管理客户端中的命令”](mysql-cluster-mgm-client-commands.html
    "25.6.1 NDB集群管理客户端中的命令")）。这些启动阶段也在[`ndbinfo.nodes`](mysql-cluster-ndbinfo-nodes.html
    "25.6.16.47 ndbinfo nodes表")表的`start_phase`列中报告。
- en: '**Start types. ** There are several different startup types and modes, as shown
    in the following list:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**启动类型。** 有几种不同的启动类型和模式，如下列表所示：'
- en: '**Initial start. ** The cluster starts with a clean file system on all data
    nodes. This occurs either when the cluster started for the very first time, or
    when all data nodes are restarted using the [`--initial`](mysql-cluster-programs-ndbd.html#option_ndbd_initial)
    option.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**初始启动。** 集群在所有数据节点上都有一个干净的文件系统启动。这要么是当集群第一次启动时发生，要么是当所有数据节点使用[`--initial`](mysql-cluster-programs-ndbd.html#option_ndbd_initial)选项重新启动时发生。'
- en: Note
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Disk Data files are not removed when restarting a node using [`--initial`](mysql-cluster-programs-ndbd.html#option_ndbd_initial).
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用[`--initial`](mysql-cluster-programs-ndbd.html#option_ndbd_initial)重新启动节点时，磁盘数据文件不会被删除。
- en: '**System restart. ** The cluster starts and reads data stored in the data nodes.
    This occurs when the cluster has been shut down after having been in use, when
    it is desired for the cluster to resume operations from the point where it left
    off.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统重新启动。** 集群启动并读取存储在数据节点中的数据。当集群在使用后关闭后，希望集群从离开的地方恢复操作时发生。'
- en: '**Node restart. ** This is the online restart of a cluster node while the cluster
    itself is running.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点重新启动。** 这是在集群本身正在运行时对集群节点进行在线重新启动。'
- en: '**Initial node restart. ** This is the same as a node restart, except that
    the node is reinitialized and started with a clean file system.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**初始节点重新启动。** 这与节点重新启动相同，只是节点被重新初始化并以干净的文件系统启动。'
- en: '**Setup and initialization (phase -1). ** Prior to startup, each data node
    ([**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — The NDB Cluster Data
    Node Daemon") process) must be initialized. Initialization consists of the following
    steps:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**设置和初始化（阶段-1）。** 在启动之前，每个数据节点（[**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — NDB集群数据节点守护程序")进程）必须被初始化。初始化包括以下步骤：'
- en: Obtain a node ID
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取节点ID
- en: Fetch configuration data
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取配置数据
- en: Allocate ports to be used for inter-node communications
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为节点间通信分配端口
- en: Allocate memory according to settings obtained from the configuration file
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据配置文件中的设置分配内存
- en: When a data node or SQL node first connects to the management node, it reserves
    a cluster node ID. To make sure that no other node allocates the same node ID,
    this ID is retained until the node has managed to connect to the cluster and at
    least one [**ndbd**](mysql-cluster-programs-ndbd.html "25.5.1 ndbd — The NDB Cluster
    Data Node Daemon") reports that this node is connected. This retention of the
    node ID is guarded by the connection between the node in question and [**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — The NDB Cluster Management Server Daemon").
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据节点或SQL节点首次连接到管理节点时，它会保留一个集群节点ID。为了确保没有其他节点分配相同的节点ID，此ID将保留，直到节点成功连接到集群并至少一个[**ndbd**](mysql-cluster-programs-ndbd.html
    "25.5.1 ndbd — NDB集群数据节点守护程序")报告此节点已连接。此节点ID的保留由问题节点与[**ndb_mgmd**](mysql-cluster-programs-ndb-mgmd.html
    "25.5.4 ndb_mgmd — NDB集群管理服务器守护程序")之间的连接保护。
- en: 'After each data node has been initialized, the cluster startup process can
    proceed. The stages which the cluster goes through during this process are listed
    here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个数据节点初始化后，集群启动过程可以继续进行。集群在此过程中经历的阶段如下：
- en: '**Phase 0. ** The [`NDBFS`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-ndbfs.html)
    and [`NDBCNTR`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-ndbcntr.html)
    blocks start. Data node file systems are cleared on those data nodes that were
    started with [`--initial`](mysql-cluster-programs-ndbd.html#option_ndbd_initial)
    option.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 0 阶段。** [`NDBFS`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-ndbfs.html)
    和 [`NDBCNTR`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-ndbcntr.html)
    块启动。对于使用 [`--initial`](mysql-cluster-programs-ndbd.html#option_ndbd_initial) 选项启动的数据节点，这些数据节点的文件系统会被清除。'
- en: '**Phase 1. ** In this stage, all remaining [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") kernel blocks are started. NDB Cluster connections are set up,
    inter-block communications are established, and heartbeats are started. In the
    case of a node restart, API node connections are also checked.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 1 阶段。** 在此阶段，所有剩余的 [`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster
    8.0") 内核块启动。建立 NDB 集群连接，建立块间通信，并启动心跳。在节点重新启动的情况下，还会检查 API 节点连接。'
- en: Note
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: When one or more nodes hang in Phase 1 while the remaining node or nodes hang
    in Phase 2, this often indicates network problems. One possible cause of such
    issues is one or more cluster hosts having multiple network interfaces. Another
    common source of problems causing this condition is the blocking of TCP/IP ports
    needed for communications between cluster nodes. In the latter case, this is often
    due to a misconfigured firewall.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当一个或多个节点在第 1 阶段挂起，而其余节点在第 2 阶段挂起时，通常表示存在网络问题。造成此类问题的一个可能原因是一个或多个集群主机具有多个网络接口。导致此条件的问题的另一个常见来源是阻止集群节点之间通信所需的
    TCP/IP 端口。在后一种情况下，这通常是由于防火墙配置错误造成的。
- en: '**Phase 2. ** The [`NDBCNTR`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-ndbcntr.html)
    kernel block checks the states of all existing nodes. The master node is chosen,
    and the cluster schema file is initialized.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 2 阶段。** [`NDBCNTR`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-ndbcntr.html)
    内核块检查所有现有节点的状态。选择主节点，并初始化集群模式文件。'
- en: '**Phase 3. ** The [`DBLQH`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dblqh.html)
    and [`DBTC`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbtc.html) kernel
    blocks set up communications between them. The startup type is determined; if
    this is a restart, the [`DBDIH`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbdih.html)
    block obtains permission to perform the restart.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 3 阶段。** [`DBLQH`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dblqh.html)
    和 [`DBTC`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbtc.html) 内核块之间建立通信。确定启动类型；如果这是一个重新启动，[`DBDIH`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbdih.html)
    块获得执行重新启动的权限。'
- en: '**Phase 4. ** For an initial start or initial node restart, the redo log files
    are created. The number of these files is equal to [`NoOfFragmentLogFiles`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-nooffragmentlogfiles).'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 4 阶段。** 对于初始启动或初始节点重新启动，会创建重做日志文件。这些文件的数量等于 [`NoOfFragmentLogFiles`](mysql-cluster-ndbd-definition.html#ndbparam-ndbd-nooffragmentlogfiles)。'
- en: 'For a system restart:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于系统重新启动：
- en: Read schema or schemas.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取模式或模式。
- en: Read data from the local checkpoint.
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从本地检查点读取数据。
- en: Apply all redo information until the latest restorable global checkpoint has
    been reached.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用所有重做信息，直到达到最新可恢复的全局检查点。
- en: For a node restart, find the tail of the redo log.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于节点重新启动，找到重做日志的尾部。
- en: '**Phase 5. ** Most of the database-related portion of a data node start is
    performed during this phase. For an initial start or system restart, a local checkpoint
    is executed, followed by a global checkpoint. Periodic checks of memory usage
    begin during this phase, and any required node takeovers are performed.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 5 阶段。** 数据节点启动的大部分与数据库相关的工作在此阶段完成。对于初始启动或系统重新启动，会执行本地检查点，然后是全局检查点。在此阶段开始定期检查内存使用情况，并执行任何必要的节点接管。'
- en: '**Phase 6. ** In this phase, node groups are defined and set up.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 6 阶段。** 在此阶段，定义并设置节点组。'
- en: '**Phase 7. ** The arbitrator node is selected and begins to function. The next
    backup ID is set, as is the backup disk write speed. Nodes reaching this start
    phase are marked as `Started`. It is now possible for API nodes (including SQL
    nodes) to connect to the cluster.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 7 阶段。** 选择仲裁节点并开始运行。设置下一个备份 ID，以及备份磁盘写入速度。达到此启动阶段���节点被标记为`已启动`。现在 API
    节点（包括 SQL 节点）可以连接到集群。'
- en: '**Phase 8. ** If this is a system restart, all indexes are rebuilt (by [`DBDIH`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbdih.html)).'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 8 阶段。** 如果这是系统重新启动，所有索引都将被重建（由[`DBDIH`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-dbdih.html)）。'
- en: '**Phase 9. ** The node internal startup variables are reset.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 9 阶段。** 节点内部启动变量被重置。'
- en: '**Phase 100 (OBSOLETE). ** Formerly, it was at this point during a node restart
    or initial node restart that API nodes could connect to the node and begin to
    receive events. Currently, this phase is empty.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 100 阶段（已过时）。** 以前，在节点重新启动或初始节点重新启动期间，API 节点可以连接到节点并开始接收事件。目前，此阶段为空。'
- en: '**Phase 101. ** At this point in a node restart or initial node restart, event
    delivery is handed over to the node joining the cluster. The newly-joined node
    takes over responsibility for delivering its primary data to subscribers. This
    phase is also referred to as [`SUMA`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-suma.html)
    handover phase.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第 101 阶段。** 在节点重新启动或初始节点重新启动期间，事件传递被移交给加入集群的节点。新加入的节点负责将其主要数据传递给订阅者。这个阶段也被称为[`SUMA`](/doc/ndb-internals/en/ndb-internals-kernel-blocks-suma.html)移交阶段。'
- en: After this process is completed for an initial start or system restart, transaction
    handling is enabled. For a node restart or initial node restart, completion of
    the startup process means that the node may now act as a transaction coordinator.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 初始启动或系统重新启动完成后，事务处理被启用。对于节点重新启动或初始节点重新启动，启动过程的完成意味着节点现在可以充当事务协调器。
