- en: 14.4.3 Logical Operators
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.4.3 逻辑运算符
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html](https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html](https://dev.mysql.com/doc/refman/8.0/en/logical-operators.html)
- en: '**Table 14.5 Logical Operators**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 14.5 逻辑运算符**'
- en: '| Name | Description |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '| [`AND`, `&&`](logical-operators.html#operator_and) | Logical AND |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`AND`, `&&`](logical-operators.html#operator_and) | 逻辑 AND |'
- en: '| [`NOT`, `!`](logical-operators.html#operator_not) | Negates value |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`NOT`, `!`](logical-operators.html#operator_not) | 取反值 |'
- en: '| [`OR`, `&#124;&#124;`](logical-operators.html#operator_or) | Logical OR |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`OR`, `&#124;&#124;`](logical-operators.html#operator_or) | 逻辑 OR |'
- en: '| [`XOR`](logical-operators.html#operator_xor) | Logical XOR |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`XOR`](logical-operators.html#operator_xor) | 逻辑 XOR |'
- en: In SQL, all logical operators evaluate to `TRUE`, `FALSE`, or `NULL` (`UNKNOWN`).
    In MySQL, these are implemented as 1 (`TRUE`), 0 (`FALSE`), and `NULL`. Most of
    this is common to different SQL database servers, although some servers may return
    any nonzero value for `TRUE`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SQL 中，所有逻辑运算符的计算结果为`TRUE`、`FALSE`或`NULL`（`UNKNOWN`）。在 MySQL 中，这些分别实现为 1（`TRUE`）、0（`FALSE`）和`NULL`。大部分内容适用于不同的
    SQL 数据库服务器，尽管有些服务器可能会返回任何非零值作为`TRUE`。
- en: 'MySQL evaluates any nonzero, non-`NULL` value to `TRUE`. For example, the following
    statements all assess to `TRUE`:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 将任何非零、非`NULL`值计算为`TRUE`。例如，以下语句都评估为`TRUE`：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[`NOT`](logical-operators.html#operator_not), [`!`](logical-operators.html#operator_not)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`NOT`](logical-operators.html#operator_not), [`!`](logical-operators.html#operator_not)'
- en: Logical NOT. Evaluates to `1` if the operand is `0`, to `0` if the operand is
    nonzero, and `NOT NULL` returns `NULL`.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 逻辑 NOT。如果操作数为`0`，则计算结果为`1`，如果操作数为非零，则为`0`，`NOT NULL` 返回`NULL`。
- en: '[PRE1]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The last example produces `1` because the expression evaluates the same way
    as `(!1)+1`.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后一个示例产生`1`，因为该表达式的计算方式与`(!1)+1`相同。
- en: The [`!`](logical-operators.html#operator_not), operator is a nonstandard MySQL
    extension. As of MySQL 8.0.17, this operator is deprecated; expect it to be removed
    in a future version of MySQL. Applications should be adjusted to use the standard
    SQL [`NOT`](logical-operators.html#operator_not) operator.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`!`](logical-operators.html#operator_not) 运算符是 MySQL 的非标准扩展。从 MySQL 8.0.17
    开始，此运算符已被弃用；预计在未来的 MySQL 版本中将不再支持。应用程序应调整为使用标准 SQL [`NOT`](logical-operators.html#operator_not)
    运算符。'
- en: '[`AND`](logical-operators.html#operator_and), [`&&`](logical-operators.html#operator_and)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`AND`](logical-operators.html#operator_and), [`&&`](logical-operators.html#operator_and)'
- en: Logical AND. Evaluates to `1` if all operands are nonzero and not `NULL`, to
    `0` if one or more operands are `0`, otherwise `NULL` is returned.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 逻辑 AND。如果所有操作数均为非零且非`NULL`，则计算结果为`1`，如果一个或多个操作数为`0`，则结果为`0`，否则返回`NULL`。
- en: '[PRE2]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The [`&&`](logical-operators.html#operator_and), operator is a nonstandard MySQL
    extension. As of MySQL 8.0.17, this operator is deprecated; expect support for
    it to be removed in a future version of MySQL. Applications should be adjusted
    to use the standard SQL [`AND`](logical-operators.html#operator_and) operator.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`&&`](logical-operators.html#operator_and) 运算符是 MySQL 的非标准扩展。从 MySQL 8.0.17
    开始，此运算符已被弃用；预计在未来的 MySQL 版本中将不再支持。应用程序应调整为使用标准 SQL [`AND`](logical-operators.html#operator_and)
    运算符。'
- en: '[`OR`](logical-operators.html#operator_or), [`||`](logical-operators.html#operator_or)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`OR`](logical-operators.html#operator_or), [`||`](logical-operators.html#operator_or)'
- en: Logical OR. When both operands are non-`NULL`, the result is `1` if any operand
    is nonzero, and `0` otherwise. With a `NULL` operand, the result is `1` if the
    other operand is nonzero, and `NULL` otherwise. If both operands are `NULL`, the
    result is `NULL`.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 逻辑 OR。当两个操作数均为非`NULL`时，如果任一操作数为非零，则结果为`1`，否则为`0`。如果有一个操作数为`NULL`，则结果为`1`，如果另一个操作数为非零，则为`NULL`。如果两个操作数均为`NULL`，则结果为`NULL`。
- en: '[PRE3]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: If the [`PIPES_AS_CONCAT`](sql-mode.html#sqlmode_pipes_as_concat) SQL mode is
    enabled, [`||`](logical-operators.html#operator_or) signifies the SQL-standard
    string concatenation operator (like [`CONCAT()`](string-functions.html#function_concat)).
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了 [`PIPES_AS_CONCAT`](sql-mode.html#sqlmode_pipes_as_concat) SQL 模式，则 [`||`](logical-operators.html#operator_or)
    表示 SQL 标准的字符串连接运算符（类似于 [`CONCAT()`](string-functions.html#function_concat)）。
- en: 'The [`||`](logical-operators.html#operator_or), operator is a nonstandard MySQL
    extension. As of MySQL 8.0.17, this operator is deprecated; expect support for
    it to be removed in a future version of MySQL. Applications should be adjusted
    to use the standard SQL [`OR`](logical-operators.html#operator_or) operator. Exception:
    Deprecation does not apply if [`PIPES_AS_CONCAT`](sql-mode.html#sqlmode_pipes_as_concat)
    is enabled because, in that case, [`||`](logical-operators.html#operator_or) signifies
    string concatenation.'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`||`](logical-operators.html#operator_or) 运算符是 MySQL 的非标准扩展。从 MySQL 8.0.17
    开始，该运算符已被弃用；预计在未来的 MySQL 版本中将移除对其的支持。应用程序应调整为使用标准 SQL 的 [`OR`](logical-operators.html#operator_or)
    运算符。例外情况：如果启用了 [`PIPES_AS_CONCAT`](sql-mode.html#sqlmode_pipes_as_concat)，则不适用弃用规则，因为在这种情况下，[`||`](logical-operators.html#operator_or)
    表示字符串连接。'
- en: '[`XOR`](logical-operators.html#operator_xor)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`XOR`](logical-operators.html#operator_xor)'
- en: Logical XOR. Returns `NULL` if either operand is `NULL`. For non-`NULL` operands,
    evaluates to `1` if an odd number of operands is nonzero, otherwise `0` is returned.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 逻辑异或。如果任一操作数为 `NULL`，则返回 `NULL`。对于非 `NULL` 操作数，如果奇数个操作数为非零，则评估为 `1`，否则返回 `0`。
- en: '[PRE4]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`a XOR b` is mathematically equal to `(a AND (NOT b)) OR ((NOT a) and b)`.'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`a XOR b` 在数学上等同于 `(a AND (NOT b)) OR ((NOT a) and b)`。'
