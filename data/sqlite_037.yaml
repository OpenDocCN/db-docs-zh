- en: 1\. Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 概述
- en: 原文：[https://sqlite.com/carray.html](https://sqlite.com/carray.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/carray.html](https://sqlite.com/carray.html)
- en: Carray() is a [table-valued function](vtab.html#tabfunc2) with a single column
    (named "value") and zero or more rows. The "value" of each row in the carray()
    is taken from a C-language array supplied by the application via [parameter binding](c3ref/bind_blob.html).
    In this way, the carray() function provides a convenient mechanism to bind C-language
    arrays to SQL queries.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Carray() 是一个[表值函数](vtab.html#tabfunc2)，只有一列（名为 "value"），可以有零个或多个行。carray() 中每行的
    "value" 来自应用程序通过[参数绑定](c3ref/bind_blob.html)提供的 C 语言数组。这样，carray() 函数提供了一种便捷的机制来将
    C 语言数组绑定到 SQL 查询中。
- en: 2\. Availability
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 可用性
- en: The carray() function is not compiled into SQLite by default. It is available
    as a [loadable extension](loadext.html) in the [ext/misc/carray.c](https://www.sqlite.org/src/file/ext/misc/carray.c)
    source file.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: carray() 函数默认情况下未编译进 SQLite。它作为[可加载扩展](loadext.html)出现在 [ext/misc/carray.c](https://www.sqlite.org/src/file/ext/misc/carray.c)
    源文件中。
- en: The carray() function was first added to SQLite in version 3.14 (2016-08-08).
    The sqlite3_carray_bind() interface and the single-argument variant of carray()
    was added in SQLite version 3.34.0 (2020-12-01). The ability to bind an array
    of `struct iovec` objects that are interpreted as BLOBs was added in SQLite version
    3.41.0 (2023-02-21).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: carray() 函数首次出现在 SQLite 的 3.14 版本（2016-08-08）。sqlite3_carray_bind() 接口和 carray()
    的单参数变体是在 SQLite 3.34.0 版本（2020-12-01）中添加的。能够绑定作为 BLOB 解释的 `struct iovec` 对象数组的功能是在
    SQLite 3.41.0 版本（2023-02-21）中添加的。
- en: 3\. Details
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 详细信息
- en: The carray() function takes one, two, or three arguments.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: carray() 函数接受一、二或三个参数。
- en: 'For the two- and three-argument versions of carray(), the first argument is
    a pointer to an array. Since pointer values cannot be specified directly in SQL,
    the first argument must be a [parameter](lang_expr.html#varparam) that is bound
    to a pointer value using the [sqlite3_bind_pointer()](c3ref/bind_blob.html) interface
    using a pointer-type of "carray". The second argument is the number of elements
    in the array. The optional third argument is a string that determines the datatype
    of the elements in the C-language array. Allowed values for the third argument
    are:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 carray() 的两个或三个参数版本，第一个参数是一个指向数组的指针。由于 SQL 中无法直接指定指针值，第一个参数必须是一个使用 "sqlite3_bind_pointer()"
    接口绑定到指针值的[参数](lang_expr.html#varparam)，并使用 "carray" 类型的指针类型。第二个参数是数组中元素的数量。可选的第三个参数是确定
    C 语言数组元素数据类型的字符串。第三个参数的允许值为：
- en: '''int32'''
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '''int32'''
- en: '''int64'''
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '''int64'''
- en: '''double'''
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '''double'''
- en: '''char*'''
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '''char*'''
- en: '''struct iovec'''
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '''struct iovec'''
- en: The default datatype is 'int32'.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 默认数据类型为 'int32'。
- en: 'The ''struct iovec'' type used for BLOB data is a standard Posix data structure,
    normally declared using "`#include <sys/uio.h>`". The format is:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 用于 BLOB 数据的 'struct iovec' 类型是标准的 POSIX 数据结构，通常使用 "`#include <sys/uio.h>`" 声明。格式如下：
- en: '[PRE0]'
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 3.1\. Single-Argument CARRAY
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1\. 单参数 CARRAY
- en: 'The single-argument form of carray() requires a special C-language interface
    named "sqlite3_carray_bind()" in order to attach values:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: carray() 的单参数形式需要一个特殊的 C 语言接口名为 "sqlite3_carray_bind()"，用于附加值：
- en: '[PRE1]'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The mFlags parameter to sqlite3_carray_bind() must be one of:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: sqlite3_carray_bind() 的 mFlags 参数必须是以下之一：
- en: '[PRE2]'
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Higher order bits of the mFlags parameter must all be zero for now, though they
    may be used in future enhancements. The definitions for the constants that specify
    the datatype and a prototype for the sqlite3_carray_bind() function are both available
    in the auxiliary header file [ext/misc/carray.h](https://www.sqlite.org/src/file/ext/misc/carray.h).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 mFlags 参数的高阶位现在必须全部为零，尽管它们可能在将来的增强中使用。指定数据类型的常量定义和 sqlite3_carray_bind()
    函数的原型都在辅助头文件 [ext/misc/carray.h](https://www.sqlite.org/src/file/ext/misc/carray.h)
    中提供。
- en: 'The xDestroy argument to sqlite3_carray_bind() routine is a pointer to a function
    that frees the input array. SQLite will invoke this function after it has finished
    with the data. The xDestroy argument may optionally be one of the following constants
    defined in "sqlite3.h":'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: sqlite3_carray_bind() 函数的 xDestroy 参数是指向一个释放输入数组的函数的指针。SQLite 在完成数据处理后会调用此函数。xDestroy
    参数可以选择是在 "sqlite3.h" 中定义的以下常量之一：
- en: '[SQLITE_STATIC](c3ref/c_static.html) → This means that the application that
    invokes sqlite3_carray_bind() maintains ownership of the data array and that the
    application promises SQLite that it will not change or deallocate the data until
    after the prepared statement is finialized.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQLITE_STATIC](c3ref/c_static.html) → 这意味着调用sqlite3_carray_bind()的应用程序将保持对数据数组的所有权，并且应用程序承诺SQLite在准备好的语句被finalize之后才会修改或释放数据。'
- en: '[SQLITE_TRANSIENT](c3ref/c_static.html) → This special value instructs SQLite
    to make its own private copy of the data before the sqlite3_carray_bind() interface
    returns.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQLITE_TRANSIENT](c3ref/c_static.html) → 这个特殊值指示SQLite在sqlite3_carray_bind()接口返回之前，将数据做成它自己的私有拷贝。'
- en: 4\. Usage
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 使用方法
- en: The carray() function can be used in the FROM clause of a query. For example,
    to query two entries from the OBJ table using rowids taken from a C-language array
    at address $PTR.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 函数carray()可以在查询的FROM子句中使用。例如，使用从C语言数组地址$PTR取得的rowid查询OBJ表中的两个条目。
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This query gives the same result:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这个查询会得到相同的结果：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
