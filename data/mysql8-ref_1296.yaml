- en: 17.22 InnoDB Limits
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.22 InnoDB 限制
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-limits.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-limits.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-limits.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-limits.html)
- en: This section describes limits for `InnoDB` tables, indexes, tablespaces, and
    other aspects of the `InnoDB` storage engine.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了 `InnoDB` 表、索引、表空间以及 `InnoDB` 存储引擎的其他方面的限制。
- en: A table can contain a maximum of 1017 columns. Virtual generated columns are
    included in this limit.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一张表最多可以包含 1017 列。虚拟生成列也包括在此限制内。
- en: A table can contain a maximum of 64 [secondary indexes](glossary.html#glos_secondary_index
    "secondary index").
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一张表最多可以包含 64 个[次要索引](glossary.html#glos_secondary_index "secondary index")。
- en: The index key prefix length limit is 3072 bytes for `InnoDB` tables that use
    `[DYNAMIC](glossary.html#glos_dynamic_row_format "dynamic row format")` or `[COMPRESSED](glossary.html#glos_compressed_row_format
    "compressed row format")` row format.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于使用 `[DYNAMIC](glossary.html#glos_dynamic_row_format "dynamic row format")`
    或 `[COMPRESSED](glossary.html#glos_compressed_row_format "compressed row format")`
    行格式的 `InnoDB` 表，索引键前缀长度限制为 3072 字节。
- en: The index key prefix length limit is 767 bytes for `InnoDB` tables that use
    the `[REDUNDANT](glossary.html#glos_redundant_row_format "redundant row format")`
    or `[COMPACT](glossary.html#glos_compact_row_format "compact row format")` row
    format. For example, you might hit this limit with a [column prefix](glossary.html#glos_column_prefix
    "column prefix") index of more than 191 characters on a `TEXT` or `VARCHAR` column,
    assuming a `utf8mb4` character set and the maximum of 4 bytes for each character.
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于使用 `[REDUNDANT](glossary.html#glos_redundant_row_format "redundant row format")`
    或 `[COMPACT](glossary.html#glos_compact_row_format "compact row format")` 行格式的
    `InnoDB` 表，索引键前缀长度限制为 767 字节。例如，假设在 `TEXT` 或 `VARCHAR` 列上使用了超过 191 个字符的 [列前缀](glossary.html#glos_column_prefix
    "column prefix") 索引，在 `utf8mb4` 字符集和每个字符最大 4 个字节的情况下，可能会达到这个限制。
- en: Attempting to use an index key prefix length that exceeds the limit returns
    an error.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试使用超过限制的索引键前缀长度将返回错误。
- en: If you reduce the `InnoDB` [page size](glossary.html#glos_page_size "page size")
    to 8KB or 4KB by specifying the [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    option when creating the MySQL instance, the maximum length of the index key is
    lowered proportionally, based on the limit of 3072 bytes for a 16KB page size.
    That is, the maximum index key length is 1536 bytes when the page size is 8KB,
    and 768 bytes when the page size is 4KB.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果通过在创建 MySQL 实例时指定 [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    选项将 `InnoDB` [页大小](glossary.html#glos_page_size "page size") 降低为 8KB 或 4KB，那么基于
    16KB 页大小的 3072 字节限制，索引键的最大长度将按比例降低。也就是说，当页大小为 8KB 时，最大索引键长度为 1536 字节，当页大小为 4KB
    时，最大索引键长度为 768 字节。
- en: The limits that apply to index key prefixes also apply to full-column index
    keys.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 适用于索引键前缀的限制也适用于完整列索引键。
- en: A maximum of 16 columns is permitted for multicolumn indexes. Exceeding the
    limit returns an error.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最多允许为多列索引设置 16 列。超过限制将返回错误。
- en: '[PRE0]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The maximum row size, excluding any variable-length columns that are stored
    off-page, is slightly less than half of a page for 4KB, 8KB, 16KB, and 32KB page
    sizes. For example, the maximum row size for the default [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    of 16KB is about 8000 bytes. However, for an `InnoDB` page size of 64KB, the maximum
    row size is approximately 16000 bytes. [`LONGBLOB`](blob.html "13.3.4 The BLOB
    and TEXT Types") and [`LONGTEXT`](blob.html "13.3.4 The BLOB and TEXT Types")
    columns must be less than 4GB, and the total row size, including [`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types") and [`TEXT`](blob.html "13.3.4 The BLOB and
    TEXT Types") columns, must be less than 4GB.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行的最大大小，不包括存储在页外的任何可变长度列，对于 4KB、8KB、16KB 和 32KB 的页大小略小于半页。例如，默认的 [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    为 16KB 时，最大行大小约为 8000 字节。然而，对于 64KB 的 `InnoDB` 页大小，最大行大小约为 16000 字节。[`LONGBLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types") 和 [`LONGTEXT`](blob.html "13.3.4 The BLOB and
    TEXT Types") 列必须小于 4GB，包括 [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")
    和 [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types") 列在内的总行大小必须小于 4GB。
- en: If a row is less than half a page long, all of it is stored locally within the
    page. If it exceeds half a page, variable-length columns are chosen for external
    off-page storage until the row fits within half a page, as described in [Section 17.11.2,
    “File Space Management”](innodb-file-space.html "17.11.2 File Space Management").
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果一行长度小于半页，所有内容都存储在页面内。如果超过半页，变长列将选择外部离页存储，直到行适合半页为止，如[第17.11.2节，“文件空间管理”](innodb-file-space.html
    "17.11.2 文件空间管理")中所述。
- en: Although `InnoDB` supports row sizes larger than 65,535 bytes internally, MySQL
    itself imposes a row-size limit of 65,535 for the combined size of all columns.
    See [Section 10.4.7, “Limits on Table Column Count and Row Size”](column-count-limit.html
    "10.4.7 Limits on Table Column Count and Row Size").
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管`InnoDB`内部支持大于65535字节的行大小，但MySQL本身对所有列的组合大小施加了65535的行大小限制。请参见[第10.4.7节，“表列数和行大小限制”](column-count-limit.html
    "10.4.7 表列数和行大小限制")。
- en: On some older operating systems, files must be less than 2GB. This is not an
    `InnoDB` limitation. If you require a large system tablespace, configure it using
    several smaller data files rather than one large data file, or distribute table
    data across file-per-table and general tablespace data files.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在一些较旧的操作系统上，文件大小必须小于2GB。这不是`InnoDB`的限制。如果您需要一个大的系统表空间，请使用多个较小的数据文件进行配置，而不是一个大的数据文件，或者将表数据分布在每个表一个文件和通用表空间数据文件中。
- en: The combined maximum size for `InnoDB` log files is 512GB.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`日志文件的组合最大大小为512GB。'
- en: The minimum tablespace size is slightly larger than 10MB. The maximum tablespace
    size depends on the `InnoDB` page size.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小表空间大小略大于10MB。最大表空间大小取决于`InnoDB`页面大小。
- en: '**Table 17.31 InnoDB Maximum Tablespace Size**'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**表17.31 InnoDB最大表空间大小**'
- en: '| InnoDB Page Size | Maximum Tablespace Size |'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| InnoDB页面大小 | 最大表空间大小 |'
- en: '| 4KB | 16TB |'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 4KB | 16TB |'
- en: '| 8KB | 32TB |'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 8KB | 32TB |'
- en: '| 16KB | 64TB |'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 16KB | 64TB |'
- en: '| 32KB | 128TB |'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 32KB | 128TB |'
- en: '| 64KB | 256TB |'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 64KB | 256TB |'
- en: The maximum tablespace size is also the maximum size for a table.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最大表空间大小也是表的最大大小。
- en: An `InnoDB` instance supports up to 2^32 (4294967296) tablespaces, with a small
    number of those tablespaces reserved for undo and temporary tables.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`InnoDB`实例支持最多2^32（4294967296）个表空间，其中少数表空间保留用于撤销和临时表。
- en: Shared tablespaces support up to 2^32 (4294967296) tables.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享表空间支持最多2^32（4294967296）个表。
- en: The path of a tablespace file, including the file name, cannot exceed the `MAX_PATH`
    limit on Windows. Prior to Windows 10, the `MAX_PATH` limit is 260 characters.
    As of Windows 10, version 1607, `MAX_PATH` limitations are removed from common
    Win32 file and directory functions, but you must enable the new behavior.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表空间文件的路径，包括文件名，在Windows上不能超过`MAX_PATH`限制。在Windows 10之前，`MAX_PATH`限制为260个字符。从Windows
    10，版本1607开始，`MAX_PATH`限制已从常见的Win32文件和目录函数中移除，但您必须启用新的行为。
- en: For limits associated with concurrent read-write transactions, see [Section 17.6.6,
    “Undo Logs”](innodb-undo-logs.html "17.6.6 Undo Logs").
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关并发读写事务相关的限制，请参见[第17.6.6节，“撤销日志”](innodb-undo-logs.html "17.6.6 撤销日志")。
