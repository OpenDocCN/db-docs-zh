- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/update-optimization.html](https://dev.mysql.com/doc/refman/8.0/en/update-optimization.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/update-optimization.html](https://dev.mysql.com/doc/refman/8.0/en/update-optimization.html)
- en: 10.2.5.2 Optimizing UPDATE Statements
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.2.5.2 优化UPDATE语句
- en: An update statement is optimized like a [`SELECT`](select.html "15.2.13 SELECT
    Statement") query with the additional overhead of a write. The speed of the write
    depends on the amount of data being updated and the number of indexes that are
    updated. Indexes that are not changed do not get updated.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 更新语句被优化为像[`SELECT`](select.html "15.2.13 SELECT Statement")查询一样，但额外增加了写入的开销。写入的速度取决于被更新的数据量和被更新的索引数量。未更改的索引不会被更新。
- en: Another way to get fast updates is to delay updates and then do many updates
    in a row later. Performing multiple updates together is much quicker than doing
    one at a time if you lock the table.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种获得快速更新的方法是延迟更新，然后稍后连续进行多次更新。如果锁定表，一次性执行多次更新比逐个执行要快得多。
- en: For a `MyISAM` table that uses dynamic row format, updating a row to a longer
    total length may split the row. If you do this often, it is very important to
    use [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")
    occasionally. See [Section 15.7.3.4, “OPTIMIZE TABLE Statement”](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE Statement").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用动态行格式的`MyISAM`表，将行更新为更长的总长度可能会导致行拆分。如果经常这样做，偶尔使用[`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE Statement")非常重要。参见[Section 15.7.3.4, “OPTIMIZE TABLE
    Statement”](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")。
