- en: 29.1 Performance Schema Quick Start
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 29.1 性能模式快速入门
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-quick-start.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-quick-start.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-quick-start.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-quick-start.html)
- en: This section briefly introduces the Performance Schema with examples that show
    how to use it. For additional examples, see [Section 29.19, “Using the Performance
    Schema to Diagnose Problems”](performance-schema-examples.html "29.19 Using the
    Performance Schema to Diagnose Problems").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要介绍了性能模式，并提供了示例以展示如何使用它。有关更多示例，请参见[第29.19节“使用性能模式诊断问题”](performance-schema-examples.html
    "29.19 Using the Performance Schema to Diagnose Problems")。
- en: 'The Performance Schema is enabled by default. To enable or disable it explicitly,
    start the server with the [`performance_schema`](performance-schema-system-variables.html#sysvar_performance_schema)
    variable set to an appropriate value. For example, use these lines in the server
    `my.cnf` file:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式默认启用。要显式启用或禁用它，请使用将服务器启动时[`performance_schema`](performance-schema-system-variables.html#sysvar_performance_schema)变量设置为适当值。例如，在服务器的`my.cnf`文件中使用以下行：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When the server starts, it sees [`performance_schema`](performance-schema-system-variables.html#sysvar_performance_schema)
    and attempts to initialize the Performance Schema. To verify successful initialization,
    use this statement:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当服务器启动时，它会查看[`performance_schema`](performance-schema-system-variables.html#sysvar_performance_schema)并尝试初始化性能模式。要验证初始化是否成功，请使用以下语句：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A value of `ON` means that the Performance Schema initialized successfully and
    is ready for use. A value of `OFF` means that some error occurred. Check the server
    error log for information about what went wrong.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`ON`的值表示性能模式成功初始化并准备就绪。`OFF`的值表示发生了一些错误。请检查服务器错误日志以获取有关出现问题的信息。'
- en: 'The Performance Schema is implemented as a storage engine, so you can see it
    listed in the output from the Information Schema [`ENGINES`](information-schema-engines-table.html
    "28.3.13 The INFORMATION_SCHEMA ENGINES Table") table or the [`SHOW ENGINES`](show-engines.html
    "15.7.7.16 SHOW ENGINES Statement") statement:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式被实现为一个存储引擎，因此您可以在信息模式[`ENGINES`](information-schema-engines-table.html "28.3.13 The
    INFORMATION_SCHEMA ENGINES Table")表或[`SHOW ENGINES`](show-engines.html "15.7.7.16 SHOW
    ENGINES Statement")语句的输出中看到它：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The [`PERFORMANCE_SCHEMA`](performance-schema.html "Chapter 29 MySQL Performance
    Schema") storage engine operates on tables in the `performance_schema` database.
    You can make `performance_schema` the default database so that references to its
    tables need not be qualified with the database name:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PERFORMANCE_SCHEMA`](performance-schema.html "Chapter 29 MySQL Performance
    Schema")存储引擎在`performance_schema`数据库中操作表。您可以将`performance_schema`设置为默认数据库，这样对其表的引用就不需要用数据库名称限定：'
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Performance Schema tables are stored in the `performance_schema` database.
    Information about the structure of this database and its tables can be obtained,
    as for any other database, by selecting from the `INFORMATION_SCHEMA` database
    or by using [`SHOW`](show.html "15.7.7 SHOW Statements") statements. For example,
    use either of these statements to see what Performance Schema tables exist:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式表存储在`performance_schema`数据库中。关于该数据库及其表结构的信息可以像获取其他数据库信息一样，通过从`INFORMATION_SCHEMA`数据库中选择或使用[`SHOW`](show.html
    "15.7.7 SHOW Statements")语句。例如，使用以下语句之一查看存在哪些性能模式表：
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The number of Performance Schema tables increases over time as implementation
    of additional instrumentation proceeds.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 随着额外的仪器化实施的进行，性能模式表的数量会随时间增加。
- en: The name of the `performance_schema` database is lowercase, as are the names
    of tables within it. Queries should specify the names in lowercase.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`performance_schema`数据库的名称是小写的，其中的表名也是小写的。查询应该使用小写指定名称。'
- en: 'To see the structure of individual tables, use [`SHOW CREATE TABLE`](show-create-table.html
    "15.7.7.10 SHOW CREATE TABLE Statement"):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看单个表的结构，请使用[`SHOW CREATE TABLE`](show-create-table.html "15.7.7.10 SHOW CREATE
    TABLE Statement")：
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Table structure is also available by selecting from tables such as [`INFORMATION_SCHEMA.COLUMNS`](information-schema-columns-table.html
    "28.3.8 The INFORMATION_SCHEMA COLUMNS Table") or by using statements such as
    [`SHOW COLUMNS`](show-columns.html "15.7.7.5 SHOW COLUMNS Statement").
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 表结构也可以通过选择诸如[`INFORMATION_SCHEMA.COLUMNS`](information-schema-columns-table.html
    "28.3.8 The INFORMATION_SCHEMA COLUMNS Table")之类的表或使用诸如[`SHOW COLUMNS`](show-columns.html
    "15.7.7.5 SHOW COLUMNS Statement")之类的语句来获取。
- en: 'Tables in the `performance_schema` database can be grouped according to the
    type of information in them: Current events, event histories and summaries, object
    instances, and setup (configuration) information. The following examples illustrate
    a few uses for these tables. For detailed information about the tables in each
    group, see [Section 29.12, “Performance Schema Table Descriptions”](performance-schema-table-descriptions.html
    "29.12 Performance Schema Table Descriptions").'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`performance_schema`数据库中的表可以根据其信息类型进行分组：当前事件、事件历史和摘要、对象实例以及设置（配置）信息。以下示例说明了这些表的一些用途。有关每个组中表的详细信息，请参阅[第29.12节“性能模式表描述”](performance-schema-table-descriptions.html
    "29.12 性能模式表描述")。'
- en: 'Initially, not all instruments and consumers are enabled, so the performance
    schema does not collect all events. To turn all of these on and enable event timing,
    execute two statements (the row counts may differ depending on MySQL version):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，并非所有仪器和消费者都被启用，因此性能模式不会收集所有事件。要打开所有这些并启用事件计时，执行两个语句（行数可能因MySQL版本而异）：
- en: '[PRE6]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To see what the server is doing at the moment, examine the [`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 The events_waits_current Table") table. It contains one row per thread
    showing each thread''s most recent monitored event:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看服务器当前正在执行的操作，请查看[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 events_waits_current表")表。它包含每个线程的一行，显示每个线程的最近监视事件：
- en: '[PRE7]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This event indicates that thread 0 was waiting for 86,526 picoseconds to acquire
    a lock on `THR_LOCK::mutex`, a mutex in the `mysys` subsystem. The first few columns
    provide the following information:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此事件表示线程0正在等待86,526皮秒来获取`THR_LOCK::mutex`上的锁，这是`mysys`子系统中的一个互斥体。前几列提供以下信息：
- en: The ID columns indicate which thread the event comes from and the event number.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ID列指示事件来自哪个线程以及事件编号。
- en: '`EVENT_NAME` indicates what was instrumented and `SOURCE` indicates which source
    file contains the instrumented code.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EVENT_NAME`指示被检测的内容，`SOURCE`指示包含被检测代码的源文件。'
- en: The timer columns show when the event started and stopped and how long it took.
    If an event is still in progress, the `TIMER_END` and `TIMER_WAIT` values are
    `NULL`. Timer values are approximate and expressed in picoseconds. For information
    about timers and event time collection, see [Section 29.4.1, “Performance Schema
    Event Timing”](performance-schema-timing.html "29.4.1 Performance Schema Event
    Timing").
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计时器列显示事件开始和结束的时间以及持续时间。如果事件仍在进行中，则`TIMER_END`和`TIMER_WAIT`值为`NULL`。计时器值是近似值，以皮秒表示。有关计时器和事件时间收集的信息，请参阅[第29.4.1节“性能模式事件计时”](performance-schema-timing.html
    "29.4.1 性能模式事件计时")。
- en: 'The history tables contain the same kind of rows as the current-events table
    but have more rows and show what the server has been doing “recently” rather than
    “currently.” The [`events_waits_history`](performance-schema-events-waits-history-table.html
    "29.12.4.2 The events_waits_history Table") and [`events_waits_history_long`](performance-schema-events-waits-history-long-table.html
    "29.12.4.3 The events_waits_history_long Table") tables contain the most recent
    10 events per thread and most recent 10,000 events, respectively. For example,
    to see information for recent events produced by thread 13, do this:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 历史表包含与当前事件表相同类型的行，但具有更多行，并显示服务器“最近”而不是“当前”正在执行的操作。[`events_waits_history`](performance-schema-events-waits-history-table.html
    "29.12.4.2 events_waits_history表")和[`events_waits_history_long`](performance-schema-events-waits-history-long-table.html
    "29.12.4.3 events_waits_history_long表")表分别包含每个线程的最近10个事件和最近10,000个事件。例如，要查看线程13生成的最近事件的信息，请执行以下操作：
- en: '[PRE8]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: As new events are added to a history table, older events are discarded if the
    table is full.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当向历史表添加新事件时，如果表已满，则会丢弃旧事件。
- en: 'Summary tables provide aggregated information for all events over time. The
    tables in this group summarize event data in different ways. To see which instruments
    have been executed the most times or have taken the most wait time, sort the [`events_waits_summary_global_by_event_name`](performance-schema-wait-summary-tables.html
    "29.12.20.1 Wait Event Summary Tables") table on the `COUNT_STAR` or `SUM_TIMER_WAIT`
    column, which correspond to a `COUNT(*)` or `SUM(TIMER_WAIT)` value, respectively,
    calculated over all events:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要表提供了随时间汇总所有事件的信息。此组中的表以不同方式汇总事件数据。要查看哪些仪器执行次数最多或等待时间最长，请根据`COUNT_STAR`或`SUM_TIMER_WAIT`列对[`events_waits_summary_global_by_event_name`](performance-schema-wait-summary-tables.html
    "29.12.20.1 等待事件摘要表")表进行排序，这两列分别对应于所有事件计算的`COUNT(*)`或`SUM(TIMER_WAIT)`值：
- en: '[PRE9]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: These results show that the `THR_LOCK_malloc` mutex is “hot,” both in terms
    of how often it is used and amount of time that threads wait attempting to acquire
    it.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果显示`THR_LOCK_malloc`互斥锁“热门”，无论是使用频率还是线程等待尝试获取它的时间量。
- en: Note
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `THR_LOCK_malloc` mutex is used only in debug builds. In production builds
    it is not hot because it is nonexistent.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`THR_LOCK_malloc`互斥锁仅在调试构建中使用。在生产构建中，它不是热门，因为它不存在。'
- en: 'Instance tables document what types of objects are instrumented. An instrumented
    object, when used by the server, produces an event. These tables provide event
    names and explanatory notes or status information. For example, the [`file_instances`](performance-schema-file-instances-table.html
    "29.12.3.2 The file_instances Table") table lists instances of instruments for
    file I/O operations and their associated files:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 实例表记录了被仪器化的对象类型。当服务器使用被仪器化的对象时，会产生一个事件。这些表提供事件名称和解释说明或状态信息。例如，[`file_instances`](performance-schema-file-instances-table.html
    "29.12.3.2 file_instances表")表列出了文件I/O操作的仪器实例及其关联文件：
- en: '[PRE10]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Setup tables are used to configure and display monitoring characteristics.
    For example, [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table") lists the set of instruments for which
    events can be collected and shows which of them are enabled:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 设置表用于配置和显示监控特性。例如，[`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 setup_instruments表")列出了可以收集事件的一组仪器，并显示哪些已启用：
- en: '[PRE11]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: To understand how to interpret instrument names, see [Section 29.6, “Performance
    Schema Instrument Naming Conventions”](performance-schema-instrument-naming.html
    "29.6 Performance Schema Instrument Naming Conventions").
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何解释仪器名称，请参见[第29.6节，“性能模式仪器命名约定”](performance-schema-instrument-naming.html
    "29.6 性能模式仪器命名约定")。
- en: 'To control whether events are collected for an instrument, set its `ENABLED`
    value to `YES` or `NO`. For example:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制是否为仪器收集事件，请将其`ENABLED`值设置为`YES`或`NO`。例如：
- en: '[PRE12]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The Performance Schema uses collected events to update tables in the `performance_schema`
    database, which act as “consumers” of event information. The [`setup_consumers`](performance-schema-setup-consumers-table.html
    "29.12.2.2 The setup_consumers Table") table lists the available consumers and
    which are enabled:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式使用收集的事件来更新`performance_schema`数据库中的表，这些表充当事件信息的“消费者”。[`setup_consumers`](performance-schema-setup-consumers-table.html
    "29.12.2.2 setup_consumers表")表列出了可用的消费者以及哪些已启用：
- en: '[PRE13]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: To control whether the Performance Schema maintains a consumer as a destination
    for event information, set its `ENABLED` value.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制性能模式是否将消费者作为事件信息的目的地，请设置其`ENABLED`值。
- en: For more information about the setup tables and how to use them to control event
    collection, see [Section 29.4.2, “Performance Schema Event Filtering”](performance-schema-filtering.html
    "29.4.2 Performance Schema Event Filtering").
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关设置表及如何使用它们来控制事件收集的更多信息，请参见[第29.4.2节，“性能模式事件过滤”](performance-schema-filtering.html
    "29.4.2 性能模式事件过滤")。
- en: There are some miscellaneous tables that do not fall into any of the previous
    groups. For example, [`performance_timers`](performance-schema-performance-timers-table.html
    "29.12.21.6 The performance_timers Table") lists the available event timers and
    their characteristics. For information about timers, see [Section 29.4.1, “Performance
    Schema Event Timing”](performance-schema-timing.html "29.4.1 Performance Schema
    Event Timing").
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些杂项表不属于前述任何组。例如，[`performance_timers`](performance-schema-performance-timers-table.html
    "29.12.21.6 performance_timers表")列出了可用的事件计时器及其特性。有关计时器的信息，请参见[第29.4.1节，“性能模式事件计时”](performance-schema-timing.html
    "29.4.1 性能模式事件计时")。
