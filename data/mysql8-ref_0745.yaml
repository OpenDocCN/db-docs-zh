- en: 13.2.4 The YEAR Type
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.2.4 年份类型
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/year.html](https://dev.mysql.com/doc/refman/8.0/en/year.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/year.html](https://dev.mysql.com/doc/refman/8.0/en/year.html)
- en: The `YEAR` type is a 1-byte type used to represent year values. It can be declared
    as `YEAR` with an implicit display width of 4 characters, or equivalently as `YEAR(4)`
    with an explicit display width.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`YEAR`类型是用于表示年份值的1字节类型。它可以声明为带有4个字符的隐式显示宽度的`YEAR`，或者等效地声明为带有显式显示宽度的`YEAR(4)`。'
- en: Note
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: As of MySQL 8.0.19, the [`YEAR(4)`](year.html "13.2.4 The YEAR Type") data type
    with an explicit display width is deprecated and you should expect support for
    it to be removed in a future version of MySQL. Instead, use [`YEAR`](year.html
    "13.2.4 The YEAR Type") without a display width, which has the same meaning.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.19，带有显式显示宽度的[`YEAR(4)`](year.html "13.2.4 年份类型")数据类型已被弃用，您应该期望在未来的MySQL版本中删除对其的支持。取而代之的是，使用没有显示宽度的[`YEAR`](year.html
    "13.2.4 年份类型")，其含义相同。
- en: MySQL 8.0 does not support the 2-digit [`YEAR(2)`](year.html "13.2.4 The YEAR
    Type") data type permitted in older versions of MySQL. For instructions on converting
    to 4-digit [`YEAR`](year.html "13.2.4 The YEAR Type"), see [2-Digit YEAR(2) Limitations
    and Migrating to 4-Digit YEAR](/doc/refman/5.7/en/migrating-from-year2.html),
    in [MySQL 5.7 Reference Manual](/doc/refman/5.7/en/).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8.0不支持在旧版本MySQL中允许的2位[`YEAR(2)`](year.html "13.2.4 年份类型")数据类型。有关转换为4位[`YEAR`](year.html
    "13.2.4 年份类型")的说明，请参阅[2位YEAR(2)的限制和迁移到4位YEAR](/doc/refman/5.7/en/migrating-from-year2.html)，在[MySQL
    5.7参考手册](/doc/refman/5.7/en/)中。
- en: MySQL displays `YEAR` values in *`YYYY`* format, with a range of `1901` to `2155`,
    and `0000`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL以*`YYYY`*格式显示`YEAR`值，范围为`1901`到`2155`，以及`0000`。
- en: '`YEAR` accepts input values in a variety of formats:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`YEAR`接受各种格式的输入值：'
- en: As 4-digit strings in the range `'1901'` to `'2155'`.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为范围在`'1901'`到`'2155'`之间的4位数字字符串。
- en: As 4-digit numbers in the range `1901` to `2155`.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为范围在`1901`到`2155`之间的4位数字。
- en: As 1- or 2-digit strings in the range `'0'` to `'99'`. MySQL converts values
    in the ranges `'0'` to `'69'` and `'70'` to `'99'` to `YEAR` values in the ranges
    `2000` to `2069` and `1970` to `1999`.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为范围在`'0'`到`'99'`之间的1位或2位字符串。MySQL将范围在`'0'`到`'69'`和`'70'`到`'99'`之间的值转换为范围在`2000`到`2069`和`1970`到`1999`之间的`YEAR`值。
- en: As 1- or 2-digit numbers in the range `0` to `99`. MySQL converts values in
    the ranges `1` to `69` and `70` to `99` to `YEAR` values in the ranges `2001`
    to `2069` and `1970` to `1999`.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为范围在`0`到`99`之间的1位或2位数字。MySQL将范围在`1`到`69`和`70`到`99`之间的值转换为范围在`2001`到`2069`和`1970`到`1999`之间的`YEAR`值。
- en: The result of inserting a numeric `0` has a display value of `0000` and an internal
    value of `0000`. To insert zero and have it be interpreted as `2000`, specify
    it as a string `'0'` or `'00'`.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 插入数字`0`的结果显示值为`0000`，内部值为`0000`。要插入零并将其解释为`2000`，请将其指定为字符串`'0'`或`'00'`。
- en: As the result of functions that return a value that is acceptable in `YEAR`
    context, such as [`NOW()`](date-and-time-functions.html#function_now).
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为返回在`YEAR`上下文中可接受值的函数的结果，例如[`NOW()`](date-and-time-functions.html#function_now)。
- en: If strict SQL mode is not enabled, MySQL converts invalid `YEAR` values to `0000`.
    In strict SQL mode, attempting to insert an invalid `YEAR` value produces an error.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未启用严格的SQL模式，MySQL会将无效的`YEAR`值转换为`0000`。在严格的SQL模式下，尝试插入无效的`YEAR`值会产生错误。
- en: See also [Section 13.2.9, “2-Digit Years in Dates”](two-digit-years.html "13.2.9 2-Digit
    Years in Dates").
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅[第13.2.9节，“日期中的2位年份”](two-digit-years.html "13.2.9 日期中的2位年份")。
