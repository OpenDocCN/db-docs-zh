- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-features-repair-table.html](https://dev.mysql.com/doc/refman/8.0/en/replication-features-repair-table.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-features-repair-table.html](https://dev.mysql.com/doc/refman/8.0/en/replication-features-repair-table.html)
- en: 19.5.1.25 Replication and REPAIR TABLE
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.5.1.25 复制和修复表
- en: When used on a corrupted or otherwise damaged table, it is possible for the
    [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR TABLE Statement") statement
    to delete rows that cannot be recovered. However, any such modifications of table
    data performed by this statement are not replicated, which can cause source and
    replica to lose synchronization. For this reason, in the event that a table on
    the source becomes damaged and you use [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR
    TABLE Statement") to repair it, you should first stop replication (if it is still
    running) before using [`REPAIR TABLE`](repair-table.html "15.7.3.5 REPAIR TABLE
    Statement"), then afterward compare the source's and replica's copies of the table
    and be prepared to correct any discrepancies manually, before restarting replication.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当在一个损坏或其他受损的表上使用[`REPAIR TABLE`](repair-table.html "15.7.3.5 修复表语句")语句时，可能会删除无法恢复的行。然而，此语句执行的任何表数据修改都不会被复制，这可能导致源和副本失去同步。因此，在源上的表损坏并使用[`REPAIR
    TABLE`](repair-table.html "15.7.3.5 修复表语句")修复之前，应该先停止复制（如果仍在运行），然后比较源和副本的表副本，并准备好在重新启动复制之前手动纠正任何差异。
