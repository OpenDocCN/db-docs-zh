- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/engine-condition-pushdown-optimization.html](https://dev.mysql.com/doc/refman/8.0/en/engine-condition-pushdown-optimization.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/engine-condition-pushdown-optimization.html](https://dev.mysql.com/doc/refman/8.0/en/engine-condition-pushdown-optimization.html)
- en: 10.2.1.5 Engine Condition Pushdown Optimization
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.2.1.5 引擎条件下推优化
- en: This optimization improves the efficiency of direct comparisons between a nonindexed
    column and a constant. In such cases, the condition is “pushed down” to the storage
    engine for evaluation. This optimization can be used only by the [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这种优化提高了非索引列与常量之间直接比较的效率。在这种情况下，条件被“下推”到存储引擎进行评估。这种优化只能由[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")存储引擎使用。
- en: For NDB Cluster, this optimization can eliminate the need to send nonmatching
    rows over the network between the cluster's data nodes and the MySQL server that
    issued the query, and can speed up queries where it is used by a factor of 5 to
    10 times over cases where condition pushdown could be but is not used.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于NDB Cluster，这种优化可以消除在集群的数据节点和发出查询的MySQL服务器之间发送不匹配行的需要，并且可以加快使用的查询速度，速度提高了5到10倍，超过了可以但未使用条件下推的情况。
- en: 'Suppose that an NDB Cluster table is defined as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一个NDB Cluster表定义如下：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Engine condition pushdown can be used with queries such as the one shown here,
    which includes a comparison between a nonindexed column and a constant:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 引擎条件下推可以与如下所示的查询一起使用，其中包括非索引列与常量之间的比较：
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The use of engine condition pushdown can be seen in the output of [`EXPLAIN`](explain.html
    "15.8.2 EXPLAIN Statement"):'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 引擎条件下推的使用可以在[`EXPLAIN`](explain.html "15.8.2 EXPLAIN 语句")的输出中看到：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'However, engine condition pushdown *cannot* be used with the following query:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，引擎条件下推 *不能* 与以下查询一起使用：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Engine condition pushdown is not applicable here because an index exists on
    column `a`. (An index access method would be more efficient and so would be chosen
    in preference to condition pushdown.)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 引擎条件下推在这里不适用，因为列 `a` 上存在索引。（索引访问方法更有效，因此会选择索引访问方法而不是条件下推。）
- en: 'Engine condition pushdown may also be employed when an indexed column is compared
    with a constant using a `>` or `<` operator:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当索引列使用 `>` 或 `<` 运算符与常量进行比较时，也可以使用引擎条件下推：
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Other supported comparisons for engine condition pushdown include the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 引擎条件下推的其他支持比较包括以下内容：
- en: '`*`column`* [NOT] LIKE *`pattern`*`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`column`* [NOT] LIKE *`pattern`*`'
- en: '*`pattern`* must be a string literal containing the pattern to be matched;
    for syntax, see [Section 14.8.1, “String Comparison Functions and Operators”](string-comparison-functions.html
    "14.8.1 String Comparison Functions and Operators").'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`pattern`* 必须是包含要匹配的模式的字符串文字；有关语法，请参见[第14.8.1节，“字符串比较函数和运算符”](string-comparison-functions.html
    "14.8.1 字符串比较函数和运算符")。'
- en: '`*`column`* IS [NOT] NULL`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`column`* IS [NOT] NULL`'
- en: '`*`column`* IN (*`value_list`*)`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`column`* IN (*`value_list`*)`'
- en: Each item in the *`value_list`* must be a constant, literal value.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`value_list`* 中的每个项目必须是常量、文字值。'
- en: '`*`column`* BETWEEN *`constant1`* AND *`constant2`*`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`column`* BETWEEN *`constant1`* AND *`constant2`*`'
- en: '*`constant1`* and *`constant2`* must each be a constant, literal value.'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`constant1`* 和 *`constant2`* 必须是常量、文字值。'
- en: In all of the cases in the preceding list, it is possible for the condition
    to be converted into the form of one or more direct comparisons between a column
    and a constant.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在前述列表中的所有情况中，条件可以转换为一个或多个列与常量之间的直接比较形式。
- en: 'Engine condition pushdown is enabled by default. To disable it at server startup,
    set the [`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch)
    system variable''s [`engine_condition_pushdown`](switchable-optimizations.html#optflag_engine-condition-pushdown)
    flag to `off`. For example, in a `my.cnf` file, use these lines:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 引擎条件下推默认启用。要在服务器启动时禁用它，请将[`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch)系统变量的[`engine_condition_pushdown`](switchable-optimizations.html#optflag_engine-condition-pushdown)标志设置为
    `off`。例如，在 `my.cnf` 文件中，使用以下行：
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'At runtime, disable condition pushdown like this:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行时，像这样禁用条件下推：
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Limitations. ** Engine condition pushdown is subject to the following limitations:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**限制。** 引擎条件下推受以下限制：'
- en: Engine condition pushdown is supported only by the [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引擎条件下推仅受支持[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0")存储引擎。
- en: Prior to NDB 8.0.18, columns could be compared with constants or expressions
    which evaluate to constant values only. In NDB 8.0.18 and later, columns can be
    compared with one another as long as they are of exactly the same type, including
    the same signedness, length, character set, precision, and scale, where these
    are applicable.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在NDB 8.0.18之前，列只能与常量或计算为常量值的表达式进行比较。在NDB 8.0.18及更高版本中，只要它们具有完全相同的类型，包括相同的符号、长度、字符集、精度和比例，这些都适用，列就可以相互比较。
- en: Columns used in comparisons cannot be of any of the [`BLOB`](blob.html "13.3.4 The
    BLOB and TEXT Types") or [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types")
    types. This exclusion extends to [`JSON`](json.html "13.5 The JSON Data Type"),
    [`BIT`](bit-type.html "13.1.5 Bit-Value Type - BIT"), and [`ENUM`](enum.html "13.3.5 The
    ENUM Type") columns as well.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于比较的列不能是任何[`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")或[`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")类型。这个排除范围还包括[`JSON`](json.html "13.5 The JSON
    Data Type")、[`BIT`](bit-type.html "13.1.5 Bit-Value Type - BIT")和[`ENUM`](enum.html
    "13.3.5 The ENUM Type")列。
- en: A string value to be compared with a column must use the same collation as the
    column.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与列进行比较的字符串值必须使用与列相同的排序规则。
- en: Joins are not directly supported; conditions involving multiple tables are pushed
    separately where possible. Use extended [`EXPLAIN`](explain.html "15.8.2 EXPLAIN
    Statement") output to determine which conditions are actually pushed down. See
    [Section 10.8.3, “Extended EXPLAIN Output Format”](explain-extended.html "10.8.3 Extended
    EXPLAIN Output Format").
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持直接连接；尽可能将涉及多个表的条件分开推送。使用扩展的[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")输出来确定实际被推送的条件。参见[Section 10.8.3,
    “Extended EXPLAIN Output Format”](explain-extended.html "10.8.3 Extended EXPLAIN
    Output Format")。
- en: Previously, engine condition pushdown was limited to terms referring to column
    values from the same table to which the condition was being pushed. Beginning
    with NDB 8.0.16, column values from tables earlier in the query plan can also
    be referred to from pushed conditions. This reduces the number of rows which must
    be handled by the SQL node during join processing. Filtering can be also performed
    in parallel in the LDM threads, rather than in a single [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") process. This has the potential to improve
    performance of queries by a significant margin.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，引擎条件推送仅限于引用来自正在被推送条件的相同表的列值的术语。从NDB 8.0.16开始，还可以从查询计划中较早的表中引用推送条件的列值。这减少了SQL节点在连接处理期间必须处理的行数。过滤也可以在LDM线程中并行执行，而不是在单个[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")进程中。这有可能显着提高查询的性能。
- en: Beginning with NDB 8.0.20, an outer join using a scan can be pushed if there
    are no unpushable conditions on any table used in the same join nest, or on any
    table in join nests above it on which it depends. This is also true for a semijoin,
    provided the optimization strategy employed is `firstMatch` (see [Section 10.2.2.1,
    “Optimizing IN and EXISTS Subquery Predicates with Semijoin Transformations”](semijoins.html
    "10.2.2.1 Optimizing IN and EXISTS Subquery Predicates with Semijoin Transformations")).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从NDB 8.0.20开始，如果在相同连接嵌套中使用的任何表上没有无法推送的条件，或者在其上依赖的连接嵌套中没有无法推送的条件，则可以推送使用扫描的外连接。对于半连接也是如此，前提是所采用的优化策略是`firstMatch`（参见[Section 10.2.2.1,
    “Optimizing IN and EXISTS Subquery Predicates with Semijoin Transformations”](semijoins.html
    "10.2.2.1 Optimizing IN and EXISTS Subquery Predicates with Semijoin Transformations")）。
- en: 'Join algorithms cannot be combined with referring columns from previous tables
    in the following two situations:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下两种情况下，连接算法不能与引用先前表的列结合使用：
- en: When any of the referred previous tables are in a join buffer. In this case,
    each row retrieved from the scan-filtered table is matched against every row in
    the buffer. This means that there is no single specific row from which column
    values can be fetched from when generating the scan filter.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当任何被引用的先前表在连接缓冲区中时。在这种情况下，从扫描过滤表中检索的每一行都与缓冲区中的每一行匹配。这意味着在生成扫描过滤时无法从单个特定行中获取列值。
- en: When the column originates from a child operation in a pushed join. This is
    because rows referenced from ancestor operations in the join have not yet been
    retrieved when the scan filter is generated.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当列来自推送连接中的子操作时。这是因为在生成扫描过滤时，尚未检索到连接中祖先操作引用的行。
- en: 'Beginning with NDB 8.0.27, columns from ancestor tables in a join can be pushed
    down, provided that they meet the requirements listed previously. An example of
    such a query, using the table `t1` created previously, is shown here:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 从 NDB 8.0.27 开始，可以将连接中祖先表的列下推，前提是它们符合先前列出的要求。以下是一个使用先前创建的表 `t1` 的查询示例：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
