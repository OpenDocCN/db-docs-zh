- en: 8.6.5 MySQL Enterprise Encryption Component Function Descriptions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8.6.5 MySQL Enterprise Encryption 组件功能描述
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html](https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html](https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-functions.html)
- en: In releases from MySQL 8.0.30, MySQL Enterprise Encryption's functions are provided
    by the MySQL component `component_enterprise_encryption`. This reference describes
    those functions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.30 版本开始，MySQL Enterprise Encryption 的功能由 MySQL 组件 `component_enterprise_encryption`
    提供。本参考描述了这些功能。
- en: For information on upgrading to the new component functions provided by the
    MySQL component `component_enterprise_encryption`, and a list of the behavior
    differences between the legacy functions and the component functions, see [Upgrading
    MySQL Enterprise Encryption](enterprise-encryption-installation.html#enterprise-encryption-upgrading
    "Upgrading MySQL Enterprise Encryption").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有关升级到由 MySQL 组件 `component_enterprise_encryption` 提供的新组件功能以及传统功能与组件功能之间行为差异的列表，请参阅
    [升级 MySQL Enterprise Encryption](enterprise-encryption-installation.html#enterprise-encryption-upgrading
    "升级 MySQL Enterprise Encryption")。
- en: The reference for the legacy functions in releases before MySQL 8.0.30 based
    on the `openssl_udf` shared library is [Section 8.6.6, “MySQL Enterprise Encryption
    Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html "8.6.6 MySQL
    Enterprise Encryption Legacy Function Descriptions").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.30 之前基于 `openssl_udf` 共享库的传统功能的参考是 [第 8.6.6 节，“MySQL Enterprise
    Encryption 传统功能描述”](enterprise-encryption-functions-legacy.html "8.6.6 MySQL Enterprise
    Encryption 传统功能描述")。
- en: 'MySQL Enterprise Encryption functions have these general characteristics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL Enterprise Encryption 功能具有以下一般特性：
- en: For arguments of the wrong type or an incorrect number of arguments, each function
    returns an error.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于错误类型的参数或不正确数量的参数，每个函数都会返回错误。
- en: If the arguments are not suitable to permit a function to perform the requested
    operation, it returns `NULL` or 0 as appropriate. This occurs, for example, if
    a function does not support a specified algorithm, a key length is too short or
    long, or a string expected to be a key string in PEM format is not a valid key.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果参数不适合允许函数执行请求的操作，则返回适当的 `NULL` 或 0。例如，如果函数不支持指定的算法，密钥长度过短或过长，或者预期为 PEM 格式密钥字符串的字符串不是有效密钥。
- en: The underlying SSL library takes care of randomness initialization.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 底层 SSL 库负责随机性初始化。
- en: The component functions only support the RSA encryption algorithm.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 组件功能仅支持 RSA 加密算法。
- en: For additional examples and discussion, see [Section 8.6.3, “MySQL Enterprise
    Encryption Usage and Examples”](enterprise-encryption-usage.html "8.6.3 MySQL
    Enterprise Encryption Usage and Examples").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 更多示例和讨论，请参阅 [第 8.6.3 节，“MySQL Enterprise Encryption 使用和示例”](enterprise-encryption-usage.html
    "8.6.3 MySQL Enterprise Encryption 使用和示例")。
- en: '[`asymmetric_decrypt(*`algorithm`*, *`data_str`*, *`priv_key_str`*)`](enterprise-encryption-functions.html#function_asymmetric-decrypt)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`asymmetric_decrypt(*`algorithm`*, *`data_str`*, *`priv_key_str`*)`](enterprise-encryption-functions.html#function_asymmetric-decrypt)'
- en: Decrypts an encrypted string using the given algorithm and key string, and returns
    the resulting plaintext as a binary string. If decryption fails, the result is
    `NULL`.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用给定算法和密钥字符串解密加密字符串，并将结果明文作为二进制字符串返回。如果解密失败，则结果为 `NULL`。
- en: For the legacy version of this function in use before MySQL 8.0.29, see [Section 8.6.6,
    “MySQL Enterprise Encryption Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL Enterprise Encryption Legacy Function Descriptions").
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于在 MySQL 8.0.29 之前使用的此函数的传统版本，请参阅 [第 8.6.6 节，“MySQL Enterprise Encryption 传统功能描述”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL Enterprise Encryption 传统功能描述")。
- en: By default, the `component_enterprise_encryption` function assumes that encrypted
    text uses the RSAES-OAEP padding scheme. The function supports decryption for
    content encrypted by the legacy `openssl_udf` shared library functions if the
    system variable [`enterprise_encryption.rsa_support_legacy_padding`](server-system-variables.html#sysvar_enterprise_encryption.rsa_support_legacy_padding)
    is set to `ON` (the default is `OFF`). When `ON` is set, the function also supports
    the RSAES-PKCS1-v1_5 padding scheme, as used by the legacy `openssl_udf` shared
    library functions. When `OFF` is set, content encrypted by the legacy functions
    cannot be decrypted, and the function returns null output for such content.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，`component_enterprise_encryption` 函数假定加密文本使用 RSAES-OAEP 填充方案。如果系统变量 [`enterprise_encryption.rsa_support_legacy_padding`](server-system-variables.html#sysvar_enterprise_encryption.rsa_support_legacy_padding)
    设置为 `ON`（默认为 `OFF`），则该函数支持通过遗留的 `openssl_udf` 共享库函数加密的内容的解密。当设置为 `ON` 时，该函数还支持
    RSAES-PKCS1-v1_5 填充方案，这是遗留的 `openssl_udf` 共享库函数使用的填充方案。当设置为 `OFF` 时，无法解密由遗留函数加密的内容，对于这样的内容，函数返回空输出。
- en: '*`algorithm`* is the encryption algorithm used to create the key. The supported
    algorithm value is `''RSA''`.'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`algorithm`* 是用于创建密钥的加密算法。支持的算法值为 `''RSA''`。'
- en: '*`data_str`* is the encrypted string to decrypt, which was encrypted with [`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt).'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`data_str`* 是要解密的加密字符串，该字符串是使用 [`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt)
    加密的。'
- en: '*`priv_key_str`* is a valid PEM encoded RSA private key. For successful decryption,
    the key string must correspond to the public key string used with [`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt)
    to produce the encrypted string. The [`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt)
    component function only supports encryption using a public key, so decryption
    takes place with the corresponding private key.'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`priv_key_str`* 是一个有效的 PEM 编码的 RSA 私钥。为了成功解密，密钥字符串必须对应于与 [`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt)
    一起使用的公钥字符串，以产生加密字符串。[`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt)
    组件函数仅支持使用公钥进行加密，因此解密需要使用相应的私钥。'
- en: For a usage example, see the description of [`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt).
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关用法示例，请参阅 [`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt)
    的描述。
- en: '[`asymmetric_encrypt(*`algorithm`*, *`data_str`*, *`pub_key_str`*)`](enterprise-encryption-functions.html#function_asymmetric-encrypt)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`asymmetric_encrypt(*`algorithm`*, *`data_str`*, *`pub_key_str`*)`](enterprise-encryption-functions.html#function_asymmetric-encrypt)'
- en: Encrypts a string using the given algorithm and key string, and returns the
    resulting ciphertext as a binary string. If encryption fails, the result is `NULL`.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用给定的算法和密钥字符串加密字符串，并将结果密文作为二进制字符串返回。如果加密失败，则结果为 `NULL`。
- en: For the legacy version of this function in use before MySQL 8.0.29, see [Section 8.6.6,
    “MySQL Enterprise Encryption Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL Enterprise Encryption Legacy Function Descriptions").
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MySQL 8.0.29 之前使用的旧版本函数，请参阅 [Section 8.6.6, “MySQL Enterprise Encryption
    Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html "8.6.6 MySQL
    Enterprise Encryption Legacy Function Descriptions")。
- en: '*`algorithm`* is the encryption algorithm used to create the key. The supported
    algorithm value is `''RSA''`.'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`algorithm`* 是用于创建密钥的加密算法。支持的算法值为 `''RSA''`。'
- en: '*`data_str`* is the string to encrypt. The length of this string cannot be
    greater than the key string length in bytes, minus 42 (to account for the padding).'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`data_str`* 是要加密的字符串。此字符串的长度不能大于字节中的密钥字符串长度减去 42（用于填充）。'
- en: '*`pub_key_str`* is a valid PEM encoded RSA public key. The [`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt)
    component function only supports encryption using a public key.'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`pub_key_str`* 是一个有效的 PEM 编码的 RSA 公钥。[`asymmetric_encrypt()`](enterprise-encryption-functions.html#function_asymmetric-encrypt)
    组件函数仅支持使用公钥进行加密。'
- en: 'To recover the original unencrypted string, pass the encrypted string to [`asymmetric_decrypt()`](enterprise-encryption-functions.html#function_asymmetric-decrypt),
    along with the other part of the key pair used for encryption, as in the following
    example:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要恢复原始未加密字符串，请将加密字符串传递给 [`asymmetric_decrypt()`](enterprise-encryption-functions.html#function_asymmetric-decrypt)，以及用于加密的密钥对的另一部分，如下例所示：
- en: '[PRE0]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Suppose that:'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设：
- en: '[PRE1]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then these identity relationships hold:'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后这些身份关系成立：
- en: '[PRE2]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[`asymmetric_sign(*`algorithm`*, *`text`*, *`priv_key_str`*, *`digest_type`*)`](enterprise-encryption-functions.html#function_asymmetric-sign)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`asymmetric_sign(*`algorithm`*, *`text`*, *`priv_key_str`*, *`digest_type`*)`](enterprise-encryption-functions.html#function_asymmetric-sign)'
- en: Signs a digest string or data string using a private key, and returns the signature
    as a binary string. If signing fails, the result is `NULL`.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用私钥签署摘要字符串或数据字符串，并将签名作为二进制字符串返回。如果签名失败，则结果为 `NULL`。
- en: For the legacy version of this function in use before MySQL 8.0.29, see [Section 8.6.6,
    “MySQL Enterprise Encryption Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL Enterprise Encryption Legacy Function Descriptions").
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于在 MySQL 8.0.29 之前使用的此函数的旧版本，请参见 [第 8.6.6 节，“MySQL 企业加密遗留函数描述”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL 企业加密遗留函数描述")。
- en: '*`algorithm`* is the encryption algorithm used to create the key. The supported
    algorithm value is `''RSA''`.'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`algorithm`* 是用于创建密钥的加密算法。支持的算法值为 `''RSA''`。'
- en: '*`text`* is a data string or digest string. The function accepts digests but
    does not require them, as it is also capable of handling data strings of an arbitrary
    length. A digest string can be generated by calling [`create_digest()`](enterprise-encryption-functions.html#function_create-digest).'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`text`* 是数据字符串或摘要字符串。该函数接受摘要但不要求摘要，因为它还能处理任意长度的数据字符串。摘要字符串可以通过调用 [`create_digest()`](enterprise-encryption-functions.html#function_create-digest)
    生成。'
- en: '*`priv_key_str`* is the private key string to use for signing the digest string.
    It must be a valid PEM encoded RSA private key.'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`priv_key_str`* 是用于签署摘要字符串的私钥字符串。它必须是有效的 PEM 编码的 RSA 私钥。'
- en: '*`digest_type`* is the algorithm to be used to sign the data. The supported
    *`digest_type`* values are `''SHA224''`, `''SHA256''`, `''SHA384''`, and `''SHA512''`
    when OpenSSL 1.0.1 is in use. If OpenSSL 1.1.1 is in use, the additional *`digest_type`*
    values `''SHA3-224''`, `''SHA3-256''`, `''SHA3-384''`, and `''SHA3-512''` are
    available.'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`digest_type`* 是用于签署数据的算法。当使用 OpenSSL 1.0.1 时，支持的 *`digest_type`* 值为 `''SHA224''`、`''SHA256''`、`''SHA384''`
    和 `''SHA512''`。如果使用 OpenSSL 1.1.1，则还可用额外的 *`digest_type`* 值 `''SHA3-224''`、`''SHA3-256''`、`''SHA3-384''`
    和 `''SHA3-512''`。'
- en: For a usage example, see the description of [`asymmetric_verify()`](enterprise-encryption-functions.html#function_asymmetric-verify).
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关用法示例，请参阅 [`asymmetric_verify()`](enterprise-encryption-functions.html#function_asymmetric-verify)
    的描述。
- en: '[`asymmetric_verify(*`algorithm`*, *`text`*, *`sig_str`*, *`pub_key_str`*,
    *`digest_type`*)`](enterprise-encryption-functions.html#function_asymmetric-verify)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`asymmetric_verify(*`algorithm`*, *`text`*, *`sig_str`*, *`pub_key_str`*,
    *`digest_type`*)`](enterprise-encryption-functions.html#function_asymmetric-verify)'
- en: Verifies whether the signature string matches the digest string, and returns
    1 or 0 to indicate whether verification succeeded or failed. If verification fails,
    the result is `NULL`.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 验证签名字符串是否与摘要字符串匹配，并返回 1 或 0 表示验证成功或失败。如果验证失败，则结果为 `NULL`。
- en: For the legacy version of this function in use before MySQL 8.0.29, see [Section 8.6.6,
    “MySQL Enterprise Encryption Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL Enterprise Encryption Legacy Function Descriptions").
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于在 MySQL 8.0.29 之前使用的此函数的旧版本，请参见 [第 8.6.6 节，“MySQL 企业加密遗留函数描述”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL 企业加密遗留函数描述")。
- en: By default, the `component_enterprise_encryption` function assumes that signatures
    use the RSASSA-PSS signature scheme. The function supports verification for signatures
    produced by the legacy `openssl_udf` shared library functions if the system variable
    [`enterprise_encryption.rsa_support_legacy_padding`](server-system-variables.html#sysvar_enterprise_encryption.rsa_support_legacy_padding)
    is set to `ON` (the default is `OFF`). When `ON` is set, the function also supports
    the RSASSA-PKCS1-v1_5 signature scheme, as used by the legacy `openssl_udf` shared
    library functions. When `OFF` is set, signatures produced by the legacy functions
    cannot be verified, and the function returns null output for such content.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下，`component_enterprise_encryption` 函数假定签名使用 RSASSA-PSS 签名方案。如果系统变量 [`enterprise_encryption.rsa_support_legacy_padding`](server-system-variables.html#sysvar_enterprise_encryption.rsa_support_legacy_padding)
    设置为 `ON`（默认为 `OFF`），该函数支持验证由旧版 `openssl_udf` 共享库函数生成的签名。当设置为 `ON` 时，该函数还支持 RSASSA-PKCS1-v1_5
    签名方案，如旧版 `openssl_udf` 共享库函数所使用的。当设置为 `OFF` 时，无法验证由旧版函数生成的签名，并且对于这种内容，函数返回空输出。
- en: '*`algorithm`* is the encryption algorithm used to create the key. The supported
    algorithm value is `''RSA''`.'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`algorithm`* 是用于创建密钥的加密算法。支持的算法值为 `''RSA''`。'
- en: '*`text`* is a data string or digest string. The component function accepts
    digests but does not require them, as it is also capable of handling data strings
    of an arbitrary length. A digest string can be generated by calling [`create_digest()`](enterprise-encryption-functions.html#function_create-digest).'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`text`* 是数据字符串或摘要字符串。该组件函数接受摘要但不需要它们，因为它还能处理任意长度的数据字符串。可以通过调用 [`create_digest()`](enterprise-encryption-functions.html#function_create-digest)
    来生成摘要字符串。'
- en: '*`sig_str`* is the signature string to be verified. A signature string can
    be generated by calling [`asymmetric_sign()`](enterprise-encryption-functions.html#function_asymmetric-sign).'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`sig_str`* 是要验证的签名字符串。可以通过调用 [`asymmetric_sign()`](enterprise-encryption-functions.html#function_asymmetric-sign)
    来生成签名字符串。'
- en: '*`pub_key_str`* is the public key string of the signer. It corresponds to the
    private key passed to [`asymmetric_sign()`](enterprise-encryption-functions.html#function_asymmetric-sign)
    to generate the signature string. It must be a valid PEM encoded RSA public key.'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`pub_key_str`* 是签名者的公钥字符串。它对应于传递给 [`asymmetric_sign()`](enterprise-encryption-functions.html#function_asymmetric-sign)
    以生成签名字符串的私钥。它必须是有效的 PEM 编码的 RSA 公钥。'
- en: '*`digest_type`* is the algorithm that was used to sign the data. The supported
    *`digest_type`* values are `''SHA224''`, `''SHA256''`, `''SHA384''`, and `''SHA512''`
    when OpenSSL 1.0.1 is in use. If OpenSSL 1.1.1 is in use, the additional *`digest_type`*
    values `''SHA3-224''`, `''SHA3-256''`, `''SHA3-384''`, and `''SHA3-512''` are
    available.'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`digest_type`* 是用于签署数据的算法。在使用 OpenSSL 1.0.1 时，支持的 *`digest_type`* 值为 `''SHA224''`、`''SHA256''`、`''SHA384''`
    和 `''SHA512''`。如果使用 OpenSSL 1.1.1，则还可以使用额外的 *`digest_type`* 值 `''SHA3-224''`、`''SHA3-256''`、`''SHA3-384''`
    和 `''SHA3-512''`。'
- en: '[PRE3]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[`create_asymmetric_priv_key(*`algorithm`*, *`key_length`*)`](enterprise-encryption-functions.html#function_create-asymmetric-priv-key)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`create_asymmetric_priv_key(*`algorithm`*, *`key_length`*)`](enterprise-encryption-functions.html#function_create-asymmetric-priv-key)'
- en: 'Creates a private key using the given algorithm and key length, and returns
    the key as a binary string in PEM format. The key is in PKCS #8 format. If key
    generation fails, the result is `NULL`.'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '使用给定的算法和密钥长度创建私钥，并以 PEM 格式的二进制字符串形式返回密钥。密钥采用 PKCS #8 格式。如果密钥生成失败，则结果为 `NULL`。'
- en: For the legacy version of this function in use before MySQL 8.0.29, see [Section 8.6.6,
    “MySQL Enterprise Encryption Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL Enterprise Encryption Legacy Function Descriptions").
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MySQL 8.0.29 之前使用的旧版本此函数，请参阅 [Section 8.6.6, “MySQL Enterprise Encryption
    Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html "8.6.6 MySQL
    Enterprise Encryption Legacy Function Descriptions")。
- en: '*`algorithm`* is the encryption algorithm used to create the key. The supported
    algorithm value is `''RSA''`.'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`algorithm`* 是用于创建密钥的加密算法。支持的算法值为 `''RSA''`。'
- en: '*`key_length`* is the key length in bits. If you exceed the maximum allowed
    key length or specify less than the minimum, key generation fails and the result
    is null output. The minimum allowed key length in bits is 2048. The maximum allowed
    key length is the value of the [`enterprise_encryption.maximum_rsa_key_size`](server-system-variables.html#sysvar_enterprise_encryption.maximum_rsa_key_size)
    system variable, which defaults to 4096\. It has a maximum setting of 16384, which
    is the maximum key length allowed for the RSA algorithm. See [Section 8.6.2, “Configuring
    MySQL Enterprise Encryption”](enterprise-encryption-configuring.html "8.6.2 Configuring
    MySQL Enterprise Encryption").'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`key_length`* 是密钥长度（以位为单位）。如果超过最大允许的密钥长度或指定少于最小值，则密钥生成失败，结果为 null 输出。密钥长度的最小允许值为
    2048 位。最大允许的密钥长度是 [`enterprise_encryption.maximum_rsa_key_size`](server-system-variables.html#sysvar_enterprise_encryption.maximum_rsa_key_size)
    系统变量的值，默认为 4096。最大设置为 16384，这是 RSA 算法允许的最大密钥长度。请参阅 [Section 8.6.2, “Configuring
    MySQL Enterprise Encryption”](enterprise-encryption-configuring.html "8.6.2 Configuring
    MySQL Enterprise Encryption")。'
- en: Note
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Generating longer keys can consume significant CPU resources. Limiting the key
    length using the [`enterprise_encryption.maximum_rsa_key_size`](server-system-variables.html#sysvar_enterprise_encryption.maximum_rsa_key_size)
    system variable lets you provide adequate security for your requirements while
    balancing this with resource usage.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成更长的密钥可能会消耗大量 CPU 资源。使用 [`enterprise_encryption.maximum_rsa_key_size`](server-system-variables.html#sysvar_enterprise_encryption.maximum_rsa_key_size)
    系统变量限制密钥长度，可以在提供足够安全性的同时平衡资源使用。
- en: 'This example creates a 2048-bit RSA private key, then derives a public key
    from the private key:'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此示例创建一个 2048 位的 RSA 私钥，然后从私钥派生公钥：
- en: '[PRE4]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[`create_asymmetric_pub_key(*`algorithm`*, *`priv_key_str`*)`](enterprise-encryption-functions.html#function_create-asymmetric-pub-key)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`create_asymmetric_pub_key(*`algorithm`*, *`priv_key_str`*)`](enterprise-encryption-functions.html#function_create-asymmetric-pub-key)'
- en: 'Derives a public key from the given private key using the given algorithm,
    and returns the key as a binary string in PEM format. The key is in PKCS #8 format.
    If key derivation fails, the result is `NULL`.'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '使用给定算法从给定私钥派生公钥，并以 PEM 格式的二进制字符串返回该密钥。密钥采用 PKCS #8 格式。如果密钥派生失败，则结果为 `NULL`。'
- en: For the legacy version of this function in use before MySQL 8.0.29, see [Section 8.6.6,
    “MySQL Enterprise Encryption Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL Enterprise Encryption Legacy Function Descriptions").
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MySQL 8.0.29 之前使用的旧版函数，请参阅 [Section 8.6.6, “MySQL Enterprise Encryption Legacy
    Function Descriptions”](enterprise-encryption-functions-legacy.html "8.6.6 MySQL
    Enterprise Encryption Legacy Function Descriptions")。
- en: '*`algorithm`* is the encryption algorithm used to create the key. The supported
    algorithm value is `''RSA''`.'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`algorithm`* 是用于创建密钥的加密算法。支持的算法值为 `''RSA''`。'
- en: '*`priv_key_str`* is a valid PEM encoded RSA private key.'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`priv_key_str`* 是有效的 PEM 编码的 RSA 私钥。'
- en: For a usage example, see the description of [`create_asymmetric_priv_key()`](enterprise-encryption-functions.html#function_create-asymmetric-priv-key).
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关用法示例，请参阅 [`create_asymmetric_priv_key()`](enterprise-encryption-functions.html#function_create-asymmetric-priv-key)
    的描述。
- en: '[`create_digest(*`digest_type`*, *`str`*)`](enterprise-encryption-functions.html#function_create-digest)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`create_digest(*`digest_type`*, *`str`*)`](enterprise-encryption-functions.html#function_create-digest)'
- en: Creates a digest from the given string using the given digest type, and returns
    the digest as a binary string. If digest generation fails, the result is `NULL`.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用给定摘要类型从给定字符串创建摘要，并将摘要作为二进制字符串返回。如果摘要生成失败，则结果为 `NULL`。
- en: For the legacy version of this function in use before MySQL 8.0.29, see [Section 8.6.6,
    “MySQL Enterprise Encryption Legacy Function Descriptions”](enterprise-encryption-functions-legacy.html
    "8.6.6 MySQL Enterprise Encryption Legacy Function Descriptions").
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MySQL 8.0.29 之前使用的旧版函数，请参阅 [Section 8.6.6, “MySQL Enterprise Encryption Legacy
    Function Descriptions”](enterprise-encryption-functions-legacy.html "8.6.6 MySQL
    Enterprise Encryption Legacy Function Descriptions")。
- en: The resulting digest string is suitable for use with [`asymmetric_sign()`](enterprise-encryption-functions.html#function_asymmetric-sign)
    and [`asymmetric_verify()`](enterprise-encryption-functions.html#function_asymmetric-verify).
    The component versions of these functions accept digests but do not require them,
    as they are capable of handling data of an arbitrary length.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成的摘要字符串适用于与 [`asymmetric_sign()`](enterprise-encryption-functions.html#function_asymmetric-sign)
    和 [`asymmetric_verify()`](enterprise-encryption-functions.html#function_asymmetric-verify)
    一起使用。这些函数的组件版本接受摘要但不需要它们，因为它们能够处理任意长度的数据。
- en: '*`digest_type`* is the digest algorithm to be used to generate the digest string.
    The supported *`digest_type`* values are `''SHA224''`, `''SHA256''`, `''SHA384''`,
    and `''SHA512''` when OpenSSL 1.0.1 is in use. If OpenSSL 1.1.1 is in use, the
    additional *`digest_type`* values `''SHA3-224''`, `''SHA3-256''`, `''SHA3-384''`,
    and `''SHA3-512''` are available.'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`digest_type`* 是用于生成摘要字符串的摘要算法。当使用 OpenSSL 1.0.1 时，支持的 *`digest_type`* 值为
    `''SHA224''`、`''SHA256''`、`''SHA384''` 和 `''SHA512''`。如果使用 OpenSSL 1.1.1，则还可使用额外的
    *`digest_type`* 值 `''SHA3-224''`、`''SHA3-256''`、`''SHA3-384''` 和 `''SHA3-512''`。'
- en: '*`str`* is the non-null data string for which the digest is to be generated.'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`str`* 是要生成摘要的非空数据字符串。'
- en: '[PRE5]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
