- en: 10.4.6 Limits on Table Size
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10.4.6 表大小限制
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/table-size-limit.html](https://dev.mysql.com/doc/refman/8.0/en/table-size-limit.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/table-size-limit.html](https://dev.mysql.com/doc/refman/8.0/en/table-size-limit.html)
- en: The effective maximum table size for MySQL databases is usually determined by
    operating system constraints on file sizes, not by MySQL internal limits. For
    up-to-date information operating system file size limits, refer to the documentation
    specific to your operating system.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL数据库的有效最大表大小通常由操作系统对文件大小的限制确定，而不是由MySQL内部限制确定。有关操作系统文件大小限制的最新信息，请参考特定于您操作系统的文档。
- en: Windows users, please note that FAT and VFAT (FAT32) are *not* considered suitable
    for production use with MySQL. Use NTFS instead.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Windows用户请注意，FAT和VFAT（FAT32）*不*被认为适用于与MySQL一起生产使用。请改用NTFS。
- en: 'If you encounter a full-table error, there are several reasons why it might
    have occurred:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到整个表错误，可能有几个原因：
- en: The disk might be full.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘可能已满。
- en: You are using `InnoDB` tables and have run out of room in an `InnoDB` tablespace
    file. The maximum tablespace size is also the maximum size for a table. For tablespace
    size limits, see [Section 17.22, “InnoDB Limits”](innodb-limits.html "17.22 InnoDB
    Limits").
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您正在使用`InnoDB`表，并且在`InnoDB`表空间文件中已用完空间。表空间大小的最大值也是表的最大大小。有关表空间大小限制，请参阅[Section 17.22,
    “InnoDB Limits”](innodb-limits.html "17.22 InnoDB Limits")。
- en: Generally, partitioning of tables into multiple tablespace files is recommended
    for tables larger than 1TB in size.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常，对于大于1TB的表，建议将表分区到多个表空间文件中。
- en: You have hit an operating system file size limit. For example, you are using
    `MyISAM` tables on an operating system that supports files only up to 2GB in size
    and you have hit this limit for the data file or index file.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您已达到操作系统文件大小限制。例如，您正在使用`MyISAM`表，但操作系统仅支持最大为2GB的文件，并且您已达到数据文件或索引文件的限制。
- en: You are using a `MyISAM` table and the space required for the table exceeds
    what is permitted by the internal pointer size. `MyISAM` permits data and index
    files to grow up to 256TB by default, but this limit can be changed up to the
    maximum permissible size of 65,536TB (256⁷ − 1 bytes).
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您正在使用`MyISAM`表，表所需的空间超过了内部指针大小允许的范围。`MyISAM`默认允许数据和索引文件增长到256TB，但此限制可更改为最大允许的大小65,536TB（256⁷
    − 1字节）。
- en: If you need a `MyISAM` table that is larger than the default limit and your
    operating system supports large files, the [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") statement supports `AVG_ROW_LENGTH` and `MAX_ROWS`
    options. See [Section 15.1.20, “CREATE TABLE Statement”](create-table.html "15.1.20 CREATE
    TABLE Statement"). The server uses these options to determine how large a table
    to permit.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您需要一个大于默认限制的`MyISAM`表，并且您的操作系统支持大文件，[`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement")语句支持`AVG_ROW_LENGTH`和`MAX_ROWS`选项。请参阅[Section 15.1.20, “CREATE
    TABLE Statement”](create-table.html "15.1.20 CREATE TABLE Statement")。服务器使用这些选项来确定允许多大的表。
- en: If the pointer size is too small for an existing table, you can change the options
    with [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") to increase
    a table's maximum permissible size. See [Section 15.1.9, “ALTER TABLE Statement”](alter-table.html
    "15.1.9 ALTER TABLE Statement").
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果现有表的指针大小太小，您可以使用[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")更改选项以增加表的最大允许大小。请参阅[Section 15.1.9,
    “ALTER TABLE Statement”](alter-table.html "15.1.9 ALTER TABLE Statement")。
- en: '[PRE0]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You have to specify `AVG_ROW_LENGTH` only for tables with [`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types") or [`TEXT`](blob.html "13.3.4 The BLOB and TEXT
    Types") columns; in this case, MySQL cannot optimize the space required based
    only on the number of rows.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您只需为具有[`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types")或[`TEXT`](blob.html
    "13.3.4 The BLOB and TEXT Types")列的表指定`AVG_ROW_LENGTH`；在这种情况下，MySQL无法仅基于行数优化所需的空间。
- en: To change the default size limit for `MyISAM` tables, set the [`myisam_data_pointer_size`](server-system-variables.html#sysvar_myisam_data_pointer_size),
    which sets the number of bytes used for internal row pointers. The value is used
    to set the pointer size for new tables if you do not specify the `MAX_ROWS` option.
    The value of [`myisam_data_pointer_size`](server-system-variables.html#sysvar_myisam_data_pointer_size)
    can be from 2 to 7\. For example, for tables that use the dynamic storage format,
    a value of 4 permits tables up to 4GB; a value of 6 permits tables up to 256TB.
    Tables that use the fixed storage format have a larger maximum data length. For
    storage format characteristics, see [Section 18.2.3, “MyISAM Table Storage Formats”](myisam-table-formats.html
    "18.2.3 MyISAM Table Storage Formats").
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要更改`MyISAM`表的默认大小限制，请设置[`myisam_data_pointer_size`](server-system-variables.html#sysvar_myisam_data_pointer_size)，该变量设置内部行指针使用的字节数。如果您没有指定`MAX_ROWS`选项，该值将用于设置新表的指针大小。[`myisam_data_pointer_size`](server-system-variables.html#sysvar_myisam_data_pointer_size)的值可以从2到7。例如，对于使用动态存储格式的表，值为4允许表达到4GB；值为6允许表达到256TB。使用固定存储格式的表具有更大的最大数据长度。有关存储格式特性，请参见[第18.2.3节，“MyISAM表存储格式”](myisam-table-formats.html
    "18.2.3 MyISAM表存储格式")。
- en: 'You can check the maximum data and index sizes by using this statement:'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以使用以下语句检查最大数据和索引大小：
- en: '[PRE1]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You also can use [**myisamchk -dv /path/to/table-index-file**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility"). See [Section 15.7.7, “SHOW
    Statements”](show.html "15.7.7 SHOW Statements"), or [Section 6.6.4, “myisamchk
    — MyISAM Table-Maintenance Utility”](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility").
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还可以使用[**myisamchk -dv /path/to/table-index-file**](myisamchk.html "6.6.4 myisamchk
    — MyISAM表维护实用程序")。参见[第15.7.7节，“SHOW语句”](show.html "15.7.7 SHOW语句")，或[第6.6.4节，“myisamchk
    — MyISAM表维护实用程序”](myisamchk.html "6.6.4 myisamchk — MyISAM表维护实用程序")。
- en: 'Other ways to work around file-size limits for `MyISAM` tables are as follows:'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解决`MyISAM`表文件大小限制的其他方法如下：
- en: If your large table is read only, you can use [**myisampack**](myisampack.html
    "6.6.6 myisampack — Generate Compressed, Read-Only MyISAM Tables") to compress
    it. [**myisampack**](myisampack.html "6.6.6 myisampack — Generate Compressed,
    Read-Only MyISAM Tables") usually compresses a table by at least 50%, so you can
    have, in effect, much bigger tables. [**myisampack**](myisampack.html "6.6.6 myisampack
    — Generate Compressed, Read-Only MyISAM Tables") also can merge multiple tables
    into a single table. See [Section 6.6.6, “myisampack — Generate Compressed, Read-Only
    MyISAM Tables”](myisampack.html "6.6.6 myisampack — Generate Compressed, Read-Only
    MyISAM Tables").
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的大表是只读的，您可以使用[**myisampack**](myisampack.html "6.6.6 myisampack — 生成压缩的只读MyISAM表")进行压缩。[**myisampack**](myisampack.html
    "6.6.6 myisampack — 生成压缩的只读MyISAM表")通常将表压缩至少50%，因此您实际上可以拥有更大的表。[**myisampack**](myisampack.html
    "6.6.6 myisampack — 生成压缩的只读MyISAM表")还可以将多个表合并为单个表。参见[第6.6.6节，“myisampack — 生成压缩的只读MyISAM表”](myisampack.html
    "6.6.6 myisampack — 生成压缩的只读MyISAM表")。
- en: MySQL includes a `MERGE` library that enables you to handle a collection of
    `MyISAM` tables that have identical structure as a single `MERGE` table. See [Section 18.7,
    “The MERGE Storage Engine”](merge-storage-engine.html "18.7 The MERGE Storage
    Engine").
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL包含一个`MERGE`库，使您能够将具有相同结构的一组`MyISAM`表作为单个`MERGE`表处理。参见[第18.7节，“MERGE存储引擎”](merge-storage-engine.html
    "18.7 MERGE存储引擎")。
- en: You are using the `MEMORY` (`HEAP`) storage engine; in this case you need to
    increase the value of the [`max_heap_table_size`](server-system-variables.html#sysvar_max_heap_table_size)
    system variable. See [Section 7.1.8, “Server System Variables”](server-system-variables.html
    "7.1.8 Server System Variables").
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你正在使用`MEMORY`（`HEAP`）存储引擎；在这种情况下，您需要增加[`max_heap_table_size`](server-system-variables.html#sysvar_max_heap_table_size)系统变量的值。参见[第7.1.8节，“服务器系统变量”](server-system-variables.html
    "7.1.8 服务器系统变量")。
