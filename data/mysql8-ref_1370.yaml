- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html](https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html)
- en: 19.1.6.4 Binary Logging Options and Variables
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.1.6.4 二进制日志选项和变量
- en: '[Startup Options Used with Binary Logging](replication-options-binary-log.html#replication-optvars-binlog
    "Startup Options Used with Binary Logging")'
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[启动时与二进制日志一起使用的选项](replication-options-binary-log.html#replication-optvars-binlog
    "启动时与二进制日志一起使用的选项")'
- en: '[System Variables Used with Binary Logging](replication-options-binary-log.html#replication-sysvars-binlog
    "System Variables Used with Binary Logging")'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[与二进制日志一起使用的系统变量](replication-options-binary-log.html#replication-sysvars-binlog
    "与二进制日志一起使用的系统变量")'
- en: You can use the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")
    options and system variables that are described in this section to affect the
    operation of the binary log as well as to control which statements are written
    to the binary log. For additional information about the binary log, see [Section 7.4.4,
    “The Binary Log”](binary-log.html "7.4.4 The Binary Log"). For additional information
    about using MySQL server options and system variables, see [Section 7.1.7, “Server
    Command Options”](server-options.html "7.1.7 Server Command Options"), and [Section 7.1.8,
    “Server System Variables”](server-system-variables.html "7.1.8 Server System Variables").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用本节中描述的[**mysqld**](mysqld.html "6.3.1 mysqld — MySQL服务器")选项和系统变量来影响二进制日志的操作，以及控制写入二进制日志的语句。有关二进制日志的其他信息，请参见[第7.4.4节，“二进制日志”](binary-log.html
    "7.4.4 二进制日志")。有关使用MySQL服务器选项和系统变量的其他信息，请参见[第7.1.7节，“服务器命令选项”](server-options.html
    "7.1.7 服务器命令选项")和[第7.1.8节，“服务器系统变量”](server-system-variables.html "7.1.8 服务器系统变量")。
- en: Startup Options Used with Binary Logging
  id: totrans-5
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 启动时与二进制日志一起使用的选项
- en: The following list describes startup options for enabling and configuring the
    binary log. System variables used with binary logging are discussed later in this
    section.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了启用和配置二进制日志的启动选项。稍后在本节中讨论与二进制日志一起使用的系统变量。
- en: '[`--binlog-row-event-max-size=*`N`*`](replication-options-binary-log.html#option_mysqld_binlog-row-event-max-size)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--binlog-row-event-max-size=*`N`*`](replication-options-binary-log.html#option_mysqld_binlog-row-event-max-size)'
- en: '| Command-Line Format | `--binlog-row-event-max-size=#` |'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-row-event-max-size=#` |'
- en: '| System Variable (≥ 8.0.14) | `[binlog_row_event_max_size](replication-options-binary-log.html#sysvar_binlog_row_event_max_size)`
    |'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 (≥ 8.0.14) | `[binlog_row_event_max_size](replication-options-binary-log.html#sysvar_binlog_row_event_max_size)`
    |'
- en: '| Scope (≥ 8.0.14) | Global |'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 (≥ 8.0.14) | 全局 |'
- en: '| Dynamic (≥ 8.0.14) | No |'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 (≥ 8.0.14) | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies (≥ 8.0.14) | No |'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    (≥ 8.0.14) | 否 |'
- en: '| Type | Integer |'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `8192` |'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `8192` |'
- en: '| Minimum Value | `256` |'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `256` |'
- en: '| Maximum Value (64-bit platforms) | `18446744073709551615` |'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 (64位平台) | `18446744073709551615` |'
- en: '| Maximum Value (32-bit platforms) | `4294967295` |'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 (32位平台) | `4294967295` |'
- en: '| Unit | bytes |'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: When row-based binary logging is used, this setting is a soft limit on the maximum
    size of a row-based binary log event, in bytes. Where possible, rows stored in
    the binary log are grouped into events with a size not exceeding the value of
    this setting. If an event cannot be split, the maximum size can be exceeded. The
    value must be (or else gets rounded down to) a multiple of 256\. The default is
    8192 bytes.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用基于行的二进制日志记录时，此设置是行级二进制日志事件的最大大小软限制，以字节为单位。在可能的情况下，存储在二进制日志中的行被分组为大小不超过此设置值的事件。如果无法拆分事件，则最大大小可能会超过。该值必须是（否则会被四舍五入为）256的倍数。默认值为8192字节。
- en: '[`--log-bin[=*`base_name`*]`](replication-options-binary-log.html#option_mysqld_log-bin)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--log-bin[=*`base_name`*]`](replication-options-binary-log.html#option_mysqld_log-bin)'
- en: '| Command-Line Format | `--log-bin=file_name` |'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-bin=file_name` |'
- en: '| Type | File name |'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: Specifies the base name to use for binary log files. With binary logging enabled,
    the server logs all statements that change data to the binary log, which is used
    for backup and replication. The binary log is a sequence of files with a base
    name and numeric extension. The `--log-bin` option value is the base name for
    the log sequence. The server creates binary log files in sequence by adding a
    numeric suffix to the base name.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定用于二进制日志文件的基本名称。启用二进制日志记录后，服务器将所有更改数据的语句记录到二进制日志中，用于备份和复制。二进制日志是具有基本名称和数字扩展的文件序列。`--log-bin`选项值是日志序列的基本名称。服务器通过向基本名称添加数字后缀来按顺序创建二进制日志文件。
- en: If you do not supply the `--log-bin` option, MySQL uses `binlog` as the default
    base name for the binary log files. For compatibility with earlier releases, if
    you supply the `--log-bin` option with no string or with an empty string, the
    base name defaults to `*`host_name`*-bin`, using the name of the host machine.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果不提供`--log-bin`选项，MySQL 将使用`binlog`作为二进制日志文件的默认基本名称。为了与早期版本兼容，如果提供了`--log-bin`选项但没有字符串或为空字符串，则基本名称默认为`*`host_name`*-bin`，使用主机机器的名称。
- en: The default location for binary log files is the data directory. You can use
    the `--log-bin` option to specify an alternative location, by adding a leading
    absolute path name to the base name to specify a different directory. When the
    server reads an entry from the binary log index file, which tracks the binary
    log files that have been used, it checks whether the entry contains a relative
    path. If it does, the relative part of the path is replaced with the absolute
    path set using the `--log-bin` option. An absolute path recorded in the binary
    log index file remains unchanged; in such a case, the index file must be edited
    manually to enable a new path or paths to be used. The binary log file base name
    and any specified path are available as the [`log_bin_basename`](replication-options-binary-log.html#sysvar_log_bin_basename)
    system variable.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 二进制日志文件的默认位置是数据目录。您可以使用`--log-bin`选项指定另一个位置，通过在基本名称前添加一个绝对路径名来指定不同的目录。当服务器从跟踪已使用的二进制日志文件的二进制日志索引文件中读取条目时，它会检查条目是否包含相对路径。如果包含相对路径，则使用`--log-bin`选项设置的绝对路径将替换路径的相对部分。在二进制日志索引文件中记录的绝对路径保持不变；在这种情况下，必须手动编辑索引文件以启用新路径或路径的使用。二进制日志文件基本名称和任何指定的路径可作为[`log_bin_basename`](replication-options-binary-log.html#sysvar_log_bin_basename)系统变量使用。
- en: In earlier MySQL versions, binary logging was disabled by default, and was enabled
    if you specified the `--log-bin` option. From MySQL 8.0, binary logging is enabled
    by default, whether or not you specify the `--log-bin` option. The exception is
    if you use [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") to initialize
    the data directory manually by invoking it with the `--initialize` or `--initialize-insecure`
    option, when binary logging is disabled by default. It is possible to enable binary
    logging in this case by specifying the `--log-bin` option. When binary logging
    is enabled, the [`log_bin`](replication-options-binary-log.html#sysvar_log_bin)
    system variable, which shows the status of binary logging on the server, is set
    to ON.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在早期的 MySQL 版本中，默认情况下禁用了二进制日志记录，只有在指定了`--log-bin`选项时才会启用。从 MySQL 8.0 开始，默认情况下启用了二进制日志记录，无论您是否指定了`--log-bin`选项。唯一的例外是，如果您使用[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")手动初始化数据目录，通过使用`--initialize`或`--initialize-insecure`选项调用它时，默认情况下会禁用二进制日志记录。在这种情况下，可以通过指定`--log-bin`选项来启用二进制日志记录。当启用二进制日志记录时，显示服务器上二进制日志记录状态的[`log_bin`](replication-options-binary-log.html#sysvar_log_bin)系统变量将设置为
    ON。
- en: To disable binary logging, you can specify the [`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    or [`--disable-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    option at startup. If either of these options is specified and `--log-bin` is
    also specified, the option specified later takes precedence. When binary logging
    is disabled, the [`log_bin`](replication-options-binary-log.html#sysvar_log_bin)
    system variable is set to OFF.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要禁用二进制日志记录，您可以在启动时指定[`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)或[`--disable-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)选项。如果指定了其中任何一个选项，并且同时指定了`--log-bin`选项，则后面指定的选项优先。当禁用二进制日志记录时，[`log_bin`](replication-options-binary-log.html#sysvar_log_bin)系统变量将设置为
    OFF。
- en: When GTIDs are in use on the server, if you disable binary logging when restarting
    the server after an abnormal shutdown, some GTIDs are likely to be lost, causing
    replication to fail. In a normal shutdown, the set of GTIDs from the current binary
    log file is saved in the `mysql.gtid_executed` table. Following an abnormal shutdown
    where this did not happen, during recovery the GTIDs are added to the table from
    the binary log file, provided that binary logging is still enabled. If binary
    logging is disabled for the server restart, the server cannot access the binary
    log file to recover the GTIDs, so replication cannot be started. Binary logging
    can be disabled safely after a normal shutdown.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当服务器上使用GTIDs时，如果在异常关闭后重新启动服务器时禁用二进制日志记录，可能会丢失一些GTIDs，导致复制失败。在正常关闭时，当前二进制日志文件中的GTID集合将保存在`mysql.gtid_executed`表中。在未发生此情况的异常关闭后，在恢复过程中，GTIDs将从二进制日志文件中添加到表中，前提是二进制日志记录仍然启用。如果在服务器重新启动时禁用了二进制日志记录，则服务器无法访问二进制日志文件以恢复GTIDs，因此无法启动复制。在正常关闭后可以安全地禁用二进制日志记录。
- en: The [`--log-slave-updates`](replication-options-binary-log.html#sysvar_log_slave_updates)
    and [`--slave-preserve-commit-order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    options require binary logging. If you disable binary logging, either omit these
    options, or specify [`--log-slave-updates=OFF`](replication-options-binary-log.html#sysvar_log_slave_updates)
    and [`--skip-slave-preserve-commit-order`](replication-options-replica.html#sysvar_slave_preserve_commit_order).
    MySQL disables these options by default when [`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    or [`--disable-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    is specified. If you specify [`--log-slave-updates`](replication-options-binary-log.html#sysvar_log_slave_updates)
    or [`--slave-preserve-commit-order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    together with [`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    or [`--disable-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin),
    a warning or error message is issued.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`--log-slave-updates`](replication-options-binary-log.html#sysvar_log_slave_updates)和[`--slave-preserve-commit-order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)选项需要二进制日志记录。如果禁用二进制日志记录，则省略这些选项，或指定[`--log-slave-updates=OFF`](replication-options-binary-log.html#sysvar_log_slave_updates)和[`--skip-slave-preserve-commit-order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)。当指定[`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)或[`--disable-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)时，MySQL默认禁用这些选项。如果同时指定[`--log-slave-updates`](replication-options-binary-log.html#sysvar_log_slave_updates)或[`--slave-preserve-commit-order`](replication-options-replica.html#sysvar_slave_preserve_commit_order)和[`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)或[`--disable-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)，将发出警告或错误消息。'
- en: In MySQL 5.7, a server ID had to be specified when binary logging was enabled,
    or the server would not start. In MySQL 8.0, the [`server_id`](replication-options.html#sysvar_server_id)
    system variable is set to 1 by default. The server can now be started with this
    default server ID when binary logging is enabled, but an informational message
    is issued if you do not specify a server ID explicitly by setting the [`server_id`](replication-options.html#sysvar_server_id)
    system variable. For servers that are used in a replication topology, you must
    specify a unique nonzero server ID for each server.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 5.7中，启用二进制日志记录时必须指定服务器ID，否则服务器将无法启动。在MySQL 8.0中，默认情况下将[`server_id`](replication-options.html#sysvar_server_id)系统变量设置为1。当启用二进制日志记录时，现在可以使用此默认服务器ID启动服务器，但如果您没有通过设置[`server_id`](replication-options.html#sysvar_server_id)系统变量显式指定服务器ID，则会发出信息消息。对于用于复制拓扑的服务器，必须为每个服务器指定唯一的非零服务器ID。
- en: For information on the format and management of the binary log, see [Section 7.4.4,
    “The Binary Log”](binary-log.html "7.4.4 The Binary Log").
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关二进制日志的格式和管理信息，请参阅[第7.4.4节，“二进制日志”](binary-log.html "7.4.4 The Binary Log")。
- en: '[`--log-bin-index[=*`file_name`*]`](replication-options-binary-log.html#option_mysqld_log-bin-index)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--log-bin-index[=*`file_name`*]`](replication-options-binary-log.html#option_mysqld_log-bin-index)'
- en: '| Command-Line Format | `--log-bin-index=file_name` |'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-bin-index=file_name` |'
- en: '| System Variable | `[log_bin_index](replication-options-binary-log.html#sysvar_log_bin_index)`
    |'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_bin_index](replication-options-binary-log.html#sysvar_log_bin_index)`
    |'
- en: '| Scope | Global |'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | File name |'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: The name for the binary log index file, which contains the names of the binary
    log files. By default, it has the same location and base name as the value specified
    for the binary log files using the [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    option, plus the extension `.index`. If you do not specify [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin),
    the default binary log index file name is `binlog.index`. If you specify [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    option with no string or an empty string, the default binary log index file name
    is `*`host_name`*-bin.index`, using the name of the host machine.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 二进制日志索引文件的名称，其中包含二进制日志文件的名称。默认情况下，它具有与使用[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)选项指定的二进制日志文件相同的位置和基本名称，再加上扩展名`.index`。如果您没有指定[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)，默认的二进制日志索引文件名为`binlog.index`。如果您指定了不带字符串或空字符串的[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)选项，则默认的二进制日志索引文件名为`*`host_name`*-bin.index`，使用主机机器的名称。
- en: For information on the format and management of the binary log, see [Section 7.4.4,
    “The Binary Log”](binary-log.html "7.4.4 The Binary Log").
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关二进制日志的格式和管理信息，请参见[第 7.4.4 节，“二进制日志”](binary-log.html "7.4.4 The Binary Log")。
- en: '**Statement selection options. ** The options in the following list affect
    which statements are written to the binary log, and thus sent by a replication
    source server to its replicas. There are also options for replicas that control
    which statements received from the source should be executed or ignored. For details,
    see [Section 19.1.6.3, “Replica Server Options and Variables”](replication-options-replica.html
    "19.1.6.3 Replica Server Options and Variables").'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**语句选择选项。** 下面列表中的选项影响写入二进制日志的语句，从而由复制源服务器发送到其副本。还有一些用于副本的选项，控制应该执行或忽略来自源的语句。有关详细信息，请参见[第 19.1.6.3
    节，“副本服务器选项和变量”](replication-options-replica.html "19.1.6.3 Replica Server Options
    and Variables")。'
- en: '[`--binlog-do-db=*`db_name`*`](replication-options-binary-log.html#option_mysqld_binlog-do-db)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--binlog-do-db=*`db_name`*`](replication-options-binary-log.html#option_mysqld_binlog-do-db)'
- en: '| Command-Line Format | `--binlog-do-db=name` |'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-do-db=name` |'
- en: '| Type | String |'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: This option affects binary logging in a manner similar to the way that [`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)
    affects replication.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项对二进制日志记录的影响类似于[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)对复制的影响。
- en: The effects of this option depend on whether the statement-based or row-based
    logging format is in use, in the same way that the effects of [`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)
    depend on whether statement-based or row-based replication is in use. You should
    keep in mind that the format used to log a given statement may not necessarily
    be the same as that indicated by the value of [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format).
    For example, DDL statements such as [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") and [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    are always logged as statements, without regard to the logging format in effect,
    so the following statement-based rules for `--binlog-do-db` always apply in determining
    whether or not the statement is logged.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项的影响取决于是否使用基于语句或基于行的日志格式，就像[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)的影响取决于是否使用基于语句或基于行的复制一样。您应该记住，用于记录给定语句的格式可能不一定与[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)的值所指示的格式相同。例如，DDL语句如[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")和[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement")始终作为语句记录，而不考虑生效的日志格式，因此对于`--binlog-do-db`的以下基于语句的规则始终适用于确定语句是否被记录。
- en: '**Statement-based logging. ** Only those statements are written to the binary
    log where the default database (that is, the one selected by [`USE`](use.html
    "15.8.4 USE Statement")) is *`db_name`*. To specify more than one database, use
    this option multiple times, once for each database; however, doing so does *not*
    cause cross-database statements such as `UPDATE *`some_db.some_table`* SET foo=''bar''`
    to be logged while a different database (or no database) is selected.'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**基于语句的日志记录。** 只有那些默认数据库（即由[`USE`](use.html "15.8.4 USE Statement")选择的数据库）为*`db_name`*的语句才会被写入二进制日志。要指定多个数据库，请多次使用此选项，每个数据库使用一次；但是，这样做不会导致跨数据库语句（例如`UPDATE
    *`some_db.some_table`* SET foo=''bar''`）在选择不同数据库（或没有数据库）时被记录。'
- en: Warning
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: To specify multiple databases you *must* use multiple instances of this option.
    Because database names can contain commas, the list is treated as the name of
    a single database if you supply a comma-separated list.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要指定多个数据库，必须多次使用此选项。因为数据库名称可以包含逗号，如果提供逗号分隔的列表，则该列表被视为单个数据库的名称。
- en: 'An example of what does not work as you might expect when using statement-based
    logging: If the server is started with [`--binlog-do-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-do-db)
    and you issue the following statements, the [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statement is *not* logged:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用基于语句的日志记录时不像您期望的那样工作的示例：如果服务器使用[`--binlog-do-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-do-db)启动，并且您发出以下语句，则[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")语句不会被记录：
- en: '[PRE0]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The main reason for this “just check the default database” behavior is that
    it is difficult from the statement alone to know whether it should be replicated
    (for example, if you are using multiple-table [`DELETE`](delete.html "15.2.2 DELETE
    Statement") statements or multiple-table [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statements that act across multiple databases). It is also faster
    to check only the default database rather than all databases if there is no need.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这种“只需检查默认数据库”行为的主要原因是，仅凭语句本身很难知道是否应该复制（例如，如果您使用多表[`DELETE`](delete.html "15.2.2 DELETE
    Statement")语句或跨多个数据库操作的多表[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句）。如果没有必要，仅检查默认数据库而不是所有数据库会更快。
- en: 'Another case which may not be self-evident occurs when a given database is
    replicated even though it was not specified when setting the option. If the server
    is started with `--binlog-do-db=sales`, the following [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statement is logged even though `prices` was not included when setting
    `--binlog-do-db`:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一个可能不明显的情况是，即使在设置选项时没有指定，给定的数据库也被复制。如果服务器使用`--binlog-do-db=sales`启动，即使在设置`--binlog-do-db`时未包括`prices`，以下[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")语句也会被记录：
- en: '[PRE1]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Because `sales` is the default database when the [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statement is issued, the [`UPDATE`](update.html "15.2.17 UPDATE Statement")
    is logged.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为`sales`是发出[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句时的默认数据库，所以[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")被记录。
- en: '**Row-based logging. ** Logging is restricted to database *`db_name`*. Only
    changes to tables belonging to *`db_name`* are logged; the default database has
    no effect on this. Suppose that the server is started with [`--binlog-do-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-do-db)
    and row-based logging is in effect, and then the following statements are executed:'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**基于行的日志记录。** 记录仅限于数据库*`db_name`*。只有属于*`db_name`*的表的更改才会被记录；默认数据库对此没有影响。假设服务器使用[`--binlog-do-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-do-db)启动，并且基于行的日志记录生效，然后执行以下语句：'
- en: '[PRE2]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The changes to the `february` table in the `sales` database are logged in accordance
    with the [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement; this occurs
    whether or not the [`USE`](use.html "15.8.4 USE Statement") statement was issued.
    However, when using the row-based logging format and [`--binlog-do-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-do-db),
    changes made by the following [`UPDATE`](update.html "15.2.17 UPDATE Statement")
    are not logged:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`sales`数据库中`february`表的更改将根据[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句记录；无论是否发出了[`USE`](use.html
    "15.8.4 USE Statement")语句都会发生。然而，当使用基于行的日志记录格式和[`--binlog-do-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-do-db)时，以下[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")所做的更改不会被记录：'
- en: '[PRE3]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Even if the `USE prices` statement were changed to `USE sales`, the [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") statement's effects would still not be written to
    the binary log.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 即使`USE prices`语句被更改为`USE sales`，[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句的效果仍不会被写入二进制日志。
- en: 'Another important difference in [`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)
    handling for statement-based logging as opposed to the row-based logging occurs
    with regard to statements that refer to multiple databases. Suppose that the server
    is started with [`--binlog-do-db=db1`](replication-options-binary-log.html#option_mysqld_binlog-do-db),
    and the following statements are executed:'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在基于语句的日志记录和基于行的日志记录中，关于涉及多个数据库的语句的[`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)处理存在另一个重要区别。假设服务器是使用[`--binlog-do-db=db1`](replication-options-binary-log.html#option_mysqld_binlog-do-db)启动的，并且执行了以下语句：
- en: '[PRE4]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you are using statement-based logging, the updates to both tables are written
    to the binary log. However, when using the row-based format, only the changes
    to `table1` are logged; `table2` is in a different database, so it is not changed
    by the [`UPDATE`](update.html "15.2.17 UPDATE Statement"). Now suppose that, instead
    of the `USE db1` statement, a `USE db4` statement had been used:'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果使用基于语句的日志记录，两个表的更新都会被写入二进制日志。然而，当使用基于行的格式时，只有`table1`的更改被记录；`table2`位于不同的数据库中，因此不会受到[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")的影响。现在假设，而不是使用`USE db1`语句，而是使用了`USE db4`语句：
- en: '[PRE5]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this case, the [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement
    is not written to the binary log when using statement-based logging. However,
    when using row-based logging, the change to `table1` is logged, but not that to
    `table2`—in other words, only changes to tables in the database named by [`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)
    are logged, and the choice of default database has no effect on this behavior.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用基于语句的日志记录时，使用[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句时不会被写入二进制日志。然而，当使用基于行的日志记录时，`table1`的更改被记录，但`table2`的更改不会被记录——换句话说，只有在由[`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)指定的数据库中的表的更改才会被记录，并且默认数据库的选择对此行为没有影响。
- en: '[`--binlog-ignore-db=*`db_name`*`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--binlog-ignore-db=*`db_name`*`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)'
- en: '| Command-Line Format | `--binlog-ignore-db=name` |'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-ignore-db=name` |'
- en: '| Type | String |'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: This option affects binary logging in a manner similar to the way that [`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    affects replication.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个选项对二进制日志记录的影响类似于[`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)对复制的影响。
- en: The effects of this option depend on whether the statement-based or row-based
    logging format is in use, in the same way that the effects of [`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)
    depend on whether statement-based or row-based replication is in use. You should
    keep in mind that the format used to log a given statement may not necessarily
    be the same as that indicated by the value of [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format).
    For example, DDL statements such as [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") and [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    are always logged as statements, without regard to the logging format in effect,
    so the following statement-based rules for `--binlog-ignore-db` always apply in
    determining whether or not the statement is logged.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项的效果取决于是否使用基于语句或基于行的日志记录格式，就像[`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)的效果取决于是否使用基于语句或基于行的复制一样。您应该记住，用于记录给定语句的格式可能不一定与[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)的值所指示的格式相同。例如，DDL语句（如[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")和[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement")）始终作为语句记录，而不考虑生效的日志记录格式，因此对于`--binlog-ignore-db`的以下基于语句的规则始终适用于确定该语句是否被记录。
- en: '**Statement-based logging. ** Tells the server to not log any statement where
    the default database (that is, the one selected by [`USE`](use.html "15.8.4 USE
    Statement")) is *`db_name`*.'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**基于语句的日志记录。** 告诉服务器不记录默认数据库（即由[`USE`](use.html "15.8.4 USE Statement")选择的数据库）为*`db_name`*的任何语句。'
- en: 'When there is no default database, no `--binlog-ignore-db` options are applied,
    and such statements are always logged. (Bug #11829838, Bug #60188)'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '当没有默认数据库时，不会应用`--binlog-ignore-db`选项，并且这些语句始终被记录。 (Bug #11829838, Bug #60188)'
- en: '**Row-based format. ** Tells the server not to log updates to any tables in
    the database *`db_name`*. The current database has no effect.'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**基于行的格式。** 告诉服务器不要记录对数据库*`db_name`*中任何表的更新。当前数据库不起作用。'
- en: 'When using statement-based logging, the following example does not work as
    you might expect. Suppose that the server is started with [`--binlog-ignore-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)
    and you issue the following statements:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在使用基于语句的日志记录时，以下示例不会按您期望的方式工作。假设服务器是使用[`--binlog-ignore-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)启动的，并且您发出以下语句：
- en: '[PRE6]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement *is* logged
    in such a case because [`--binlog-ignore-db`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)
    applies only to the default database (determined by the [`USE`](use.html "15.8.4 USE
    Statement") statement). Because the `sales` database was specified explicitly
    in the statement, the statement has not been filtered. However, when using row-based
    logging, the [`UPDATE`](update.html "15.2.17 UPDATE Statement") statement's effects
    are *not* written to the binary log, which means that no changes to the `sales.january`
    table are logged; in this instance, [`--binlog-ignore-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)
    causes *all* changes made to tables in the source's copy of the `sales` database
    to be ignored for purposes of binary logging.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，[`UPDATE`](update.html "15.2.17 UPDATE Statement")语句会被记录，因为[`--binlog-ignore-db`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)仅适用于默认数据库（由[`USE`](use.html
    "15.8.4 USE Statement")语句确定）。由于`sales`数据库在语句中明确指定，因此该语句未被过滤。但是，在使用基于行的日志记录时，[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")语句的效果不会写入二进制日志，这意味着`sales.january`表的任何更改都不会被记录；在这种情况下，[`--binlog-ignore-db=sales`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)导致忽略对源数据库副本中`sales`数据库中表所做的所有更改以进行二进制日志记录。
- en: To specify more than one database to ignore, use this option multiple times,
    once for each database. Because database names can contain commas, the list is
    treated as the name of a single database if you supply a comma-separated list.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要忽略多个数据库，请多次使用此选项，每个数据库使用一次。因为数据库名称可以包含逗号，如果提供逗号分隔的列表，则该列表将被视为单个数据库的名称。
- en: You should not use this option if you are using cross-database updates and you
    do not want these updates to be logged.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您正在使用跨数据库更新并且不希望将这些更新记录下来，则不应使用此选项。
- en: '**Checksum options. ** MySQL supports reading and writing of binary log checksums.
    These are enabled using the two options listed here:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**校验和选项。** MySQL支持读取和写入二进制日志校验和。可以使用以下两个选项启用它们：'
- en: '[`--binlog-checksum={NONE|CRC32}`](replication-options-binary-log.html#option_mysqld_binlog-checksum)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--binlog-checksum={NONE|CRC32}`](replication-options-binary-log.html#option_mysqld_binlog-checksum)'
- en: '| Command-Line Format | `--binlog-checksum=type` |'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-checksum=type` |'
- en: '| Type | String |'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `CRC32` |'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `CRC32` |'
- en: '| Valid Values | `NONE``CRC32` |'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `NONE``CRC32` |'
- en: Enabling this option causes the source to write checksums for events written
    to the binary log. Set to `NONE` to disable, or the name of the algorithm to be
    used for generating checksums; currently, only CRC32 checksums are supported,
    and CRC32 is the default. You cannot change the setting for this option within
    a transaction.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此选项会导致源代码为写入二进制日志的事件生成校验和。设置为`NONE`以禁用，或者设置要用于生成校验和的算法的名称；目前仅支持CRC32校验和，CRC32是默认值。您不能在事务内更改此选项的设置。
- en: To control reading of checksums by the replica (from the relay log), use the
    [`--slave-sql-verify-checksum`](replication-options-replica.html#option_mysqld_slave-sql-verify-checksum)
    option.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制副本（从中继日志）读取校验和，请使用[`--slave-sql-verify-checksum`](replication-options-replica.html#option_mysqld_slave-sql-verify-checksum)选项。
- en: '**Testing and debugging options. ** The following binary log options are used
    in replication testing and debugging. They are not intended for use in normal
    operations.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**测试和调试选项。** 以下二进制日志选项用于复制测试和调试。它们不适用于正常操作。'
- en: '[`--max-binlog-dump-events=*`N`*`](replication-options-binary-log.html#option_mysqld_max-binlog-dump-events)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--max-binlog-dump-events=*`N`*`](replication-options-binary-log.html#option_mysqld_max-binlog-dump-events)'
- en: '| Command-Line Format | `--max-binlog-dump-events=#` |'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--max-binlog-dump-events=#` |'
- en: '| Type | Integer |'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: This option is used internally by the MySQL test suite for replication testing
    and debugging.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项仅在 MySQL 测试套件内部用于复制测试和调试。
- en: '[`--sporadic-binlog-dump-fail`](replication-options-binary-log.html#option_mysqld_sporadic-binlog-dump-fail)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--sporadic-binlog-dump-fail`](replication-options-binary-log.html#option_mysqld_sporadic-binlog-dump-fail)'
- en: '| Command-Line Format | `--sporadic-binlog-dump-fail[={OFF&#124;ON}]` |'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--sporadic-binlog-dump-fail[={OFF&#124;ON}]` |'
- en: '| Type | Boolean |'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔 |'
- en: '| Default Value | `OFF` |'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: This option is used internally by the MySQL test suite for replication testing
    and debugging.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此选项仅在 MySQL 测试套件内部用于复制测试和调试。
- en: System Variables Used with Binary Logging
  id: totrans-98
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 与二进制日志一起使用的系统变量
- en: The following list describes system variables for controlling binary logging.
    They can be set at server startup and some of them can be changed at runtime using
    [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment"). Server
    options used to control binary logging are listed earlier in this section.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了用于控制二进制日志记录的系统变量。它们可以在服务器启动时设置，并且其中一些可以使用 [`SET`](set-variable.html "15.7.6.1 SET
    Syntax for Variable Assignment") 在运行时更改。用于控制二进制日志记录的服务器选项在本节的前面列出。
- en: '[`binlog_cache_size`](replication-options-binary-log.html#sysvar_binlog_cache_size)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_cache_size`](replication-options-binary-log.html#sysvar_binlog_cache_size)'
- en: '| Command-Line Format | `--binlog-cache-size=#` |'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-cache-size=#` |'
- en: '| System Variable | `[binlog_cache_size](replication-options-binary-log.html#sysvar_binlog_cache_size)`
    |'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_cache_size](replication-options-binary-log.html#sysvar_binlog_cache_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `32768` |'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `32768` |'
- en: '| Minimum Value | `4096` |'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `4096` |'
- en: '| Maximum Value (64-bit platforms) | `18446744073709547520` |'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `18446744073709547520` |'
- en: '| Maximum Value (32-bit platforms) | `4294963200` |'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `4294963200` |'
- en: '| Unit | bytes |'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `4096` |'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `4096`
    |'
- en: The size of the memory buffer to hold changes to the binary log during a transaction.
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在事务期间保存对二进制日志的更改的内存缓冲区的大小。
- en: When binary logging is enabled on the server (with the [`log_bin`](replication-options-binary-log.html#sysvar_log_bin)
    system variable set to ON), a binary log cache is allocated for each client if
    the server supports any transactional storage engines. If the data for the transaction
    exceeds the space in the memory buffer, the excess data is stored in a temporary
    file. When binary log encryption is active on the server, the memory buffer is
    not encrypted, but (from MySQL 8.0.17) any temporary file used to hold the binary
    log cache is encrypted. After each transaction is committed, the binary log cache
    is reset by clearing the memory buffer and truncating the temporary file if used.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当服务器启用二进制日志记录（使用 [`log_bin`](replication-options-binary-log.html#sysvar_log_bin)
    系统变量设置为 ON）时，如果服务器支持任何事务性存储引擎，则为每个客户端分配一个二进制日志缓存。如果事务的数据超过内存缓冲区的空间，多余的数据将存储在临时文件中。当服务器上启用二进制日志加密时，内存缓冲区不加密，但（从
    MySQL 8.0.17 开始）用于保存二进制日志缓存的任何临时文件是加密的。在每个事务提交后，通过清除内存缓冲区并截断使用的临时文件来重置二进���日志缓存。
- en: If you often use large transactions, you can increase this cache size to get
    better performance by reducing or eliminating the need to write to temporary files.
    The [`Binlog_cache_use`](server-status-variables.html#statvar_Binlog_cache_use)
    and [`Binlog_cache_disk_use`](server-status-variables.html#statvar_Binlog_cache_disk_use)
    status variables can be useful for tuning the size of this variable. See [Section 7.4.4,
    “The Binary Log”](binary-log.html "7.4.4 The Binary Log").
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果经常使用大型事务，可以增加此缓存大小以获得更好的性能，从而减少或消除写入临时文件的需求。[`Binlog_cache_use`](server-status-variables.html#statvar_Binlog_cache_use)
    和 [`Binlog_cache_disk_use`](server-status-variables.html#statvar_Binlog_cache_disk_use)
    状态变量可用于调整此变量的大小。参见 [第 7.4.4 节，“二进制日志”](binary-log.html "7.4.4 The Binary Log")。
- en: '`binlog_cache_size` sets the size for the transaction cache only; the size
    of the statement cache is governed by the [`binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_binlog_stmt_cache_size)
    system variable.'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`binlog_cache_size` 仅设置事务缓存的大小；语句缓存的大小由 [`binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_binlog_stmt_cache_size)
    系统变量控制。'
- en: '[`binlog_checksum`](replication-options-binary-log.html#sysvar_binlog_checksum)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_checksum`](replication-options-binary-log.html#sysvar_binlog_checksum)'
- en: '| Command-Line Format | `--binlog-checksum=type` |'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-checksum=type` |'
- en: '| System Variable | `[binlog_checksum](replication-options-binary-log.html#sysvar_binlog_checksum)`
    |'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_checksum](replication-options-binary-log.html#sysvar_binlog_checksum)`
    |'
- en: '| Scope | Global |'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | String |'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 字符串 |'
- en: '| Default Value | `CRC32` |'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `CRC32` |'
- en: '| Valid Values | `NONE``CRC32` |'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `NONE``CRC32` |'
- en: When enabled, this variable causes the source to write a checksum for each event
    in the binary log. `binlog_checksum` supports the values `NONE` (which disables
    checksums) and `CRC32`. The default is `CRC32`. When `binlog_checksum` is disabled
    (value `NONE`), the server verifies that it is writing only complete events to
    the binary log by writing and checking the event length (rather than a checksum)
    for each event.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此变量会导致源为二进制日志中的每个事件编写校验和。`binlog_checksum`支持值`NONE`（禁用校验和）和`CRC32`。默认值为`CRC32`。当禁用`binlog_checksum`（值为`NONE`）时，服务器通过为每个事件编写和检查事件长度（而不是校验和）来验证仅将完整事件写入二进制日志。
- en: Setting this variable on the source to a value unrecognized by the replica causes
    the replica to set its own `binlog_checksum` value to `NONE`, and to stop replication
    with an error. If backward compatibility with older replicas is a concern, you
    may want to set the value explicitly to `NONE`.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在源上将此变量设置为副本不识别的值会导致副本将其自己的`binlog_checksum`值设置为`NONE`，并因错误而停止复制。如果与旧副本的向后兼容性是一个问题，您可能希望将值明确设置为`NONE`。
- en: Up to and including MySQL 8.0.20, Group Replication cannot make use of checksums
    and does not support their presence in the binary log, so you must set [`binlog_checksum=NONE`](replication-options-binary-log.html#sysvar_binlog_checksum)
    when configuring a server instance to become a group member. From MySQL 8.0.21,
    Group Replication supports checksums, so group members may use the default setting.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 直到MySQL 8.0.20，Group Replication无法使用校验和，也不支持二进制日志中的校验和，因此在配置服务器实例成为组成员时，必须设置[`binlog_checksum=NONE`](replication-options-binary-log.html#sysvar_binlog_checksum)。从MySQL
    8.0.21开始，Group Replication支持校验和，因此组成员可以使用默认设置。
- en: Changing the value of `binlog_checksum` causes the binary log to be rotated,
    because checksums must be written for an entire binary log file, and never for
    only part of one. You cannot change the value of `binlog_checksum` within a transaction.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改`binlog_checksum`的值会导致二进制日志被旋转，因为必须为整个二进制日志文件编写校验和，而不能仅为部分文件编写。您不能在事务内更改`binlog_checksum`的值。
- en: When binary log transaction compression is enabled using the [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    system variable, checksums are not written for individual events in a compressed
    transaction payload. Instead a checksum is written for the GTID event, and a checksum
    for the compressed `Transaction_payload_event`.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用[`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)系统变量启用二进制日志事务压缩时，不会为压缩的事务负载中的每个事件编写校验和。相反，为GTID事件编写校验和，并为压缩的`Transaction_payload_event`编写校验和。
- en: '[`binlog_direct_non_transactional_updates`](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_direct_non_transactional_updates`](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)'
- en: '| Command-Line Format | `--binlog-direct-non-transactional-updates[={OFF&#124;ON}]`
    |'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-direct-non-transactional-updates[={OFF&#124;ON}]` |'
- en: '| System Variable | `[binlog_direct_non_transactional_updates](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)`
    |'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_direct_non_transactional_updates](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Due to concurrency issues, a replica can become inconsistent when a transaction
    contains updates to both transactional and nontransactional tables. MySQL tries
    to preserve causality among these statements by writing nontransactional statements
    to the transaction cache, which is flushed upon commit. However, problems arise
    when modifications done to nontransactional tables on behalf of a transaction
    become immediately visible to other connections because these changes may not
    be written immediately into the binary log.
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于并发问题，当事务包含对事务表和非事务表的更新时，复制品可能会变得不一致。MySQL试图通过将非事务语句写入事务缓存来保留这些语句之间的因果关系，该缓存在提交时被刷新。然而，当代表事务对非事务表进行的修改立即对其他连接可见时，问题就会出现，因为这些更改可能不会立即���入二进制日志。
- en: The [`binlog_direct_non_transactional_updates`](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)
    variable offers one possible workaround to this issue. By default, this variable
    is disabled. Enabling [`binlog_direct_non_transactional_updates`](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)
    causes updates to nontransactional tables to be written directly to the binary
    log, rather than to the transaction cache.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`binlog_direct_non_transactional_updates`](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)变量提供了解决此问题的一种可能方法。默认情况下，此变量已禁用。启用[`binlog_direct_non_transactional_updates`](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)会导致对非事务表的更新直接写入二进制日志，而不是写入事务缓存。'
- en: As of MySQL 8.0.14, setting the session value of this system variable is a restricted
    operation. The session user must have privileges sufficient to set restricted
    session variables. See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.14版本，设置此系统变量的会话值是一项受限操作。会话用户必须具有足够权限来设置受限会话变量。请参阅[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: '*[`binlog_direct_non_transactional_updates`](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)
    works only for statements that are replicated using the statement-based binary
    logging format*; that is, it works only when the value of [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is `STATEMENT`, or when [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is `MIXED` and a given statement is being replicated using the statement-based
    format. This variable has no effect when the binary log format is `ROW`, or when
    [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format) is
    set to `MIXED` and a given statement is replicated using the row-based format.'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*[`binlog_direct_non_transactional_updates`](replication-options-binary-log.html#sysvar_binlog_direct_non_transactional_updates)仅适用于使用基于语句的二进制日志格式复制的语句*；也就是说，仅当[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)的值为`STATEMENT`时，或者当[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)为`MIXED`且给定语句正在使用基于语句的格式进行复制时才起作用。当二进制日志格式为`ROW`时，或者当[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)设置为`MIXED`且给定语句使用基于行的格式进行复制时，此变量不起作用。'
- en: Important
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: Before enabling this variable, you must make certain that there are no dependencies
    between transactional and nontransactional tables; an example of such a dependency
    would be the statement `INSERT INTO myisam_table SELECT * FROM innodb_table`.
    Otherwise, such statements are likely to cause the replica to diverge from the
    source.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在启用此变量之前，您必须确保事务表和非事务表之间没有依赖关系；这种依赖关系的一个示例是语句`INSERT INTO myisam_table SELECT
    * FROM innodb_table`。否则，这些语句很可能会导致复制品与源之间出现分歧。
- en: This variable has no effect when the binary log format is `ROW` or `MIXED`.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当二进制日志格式为`ROW`或`MIXED`时，此变量不起作用。
- en: '[`binlog_encryption`](replication-options-binary-log.html#sysvar_binlog_encryption)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_encryption`](replication-options-binary-log.html#sysvar_binlog_encryption)'
- en: '| Command-Line Format | `--binlog-encryption[={OFF&#124;ON}]` |'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-encryption[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.14 |'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.14 |'
- en: '| System Variable | `[binlog_encryption](replication-options-binary-log.html#sysvar_binlog_encryption)`
    |'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_encryption](replication-options-binary-log.html#sysvar_binlog_encryption)`
    |'
- en: '| Scope | Global |'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enables encryption for binary log files and relay log files on this server.
    `OFF` is the default. `ON` sets encryption on for binary log files and relay log
    files. Binary logging does not need to be enabled on the server to enable encryption,
    so you can encrypt the relay log files on a replica that has no binary log. To
    use encryption, a keyring plugin must be installed and configured to supply MySQL
    Server's keyring service. For instructions to do this, see [Section 8.4.4, “The
    MySQL Keyring”](keyring.html "8.4.4 The MySQL Keyring"). Any supported keyring
    plugin can be used to store binary log encryption keys.
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此服务器上二进制日志文件和中继日志文件的加密。`OFF`是默认设置。`ON`设置二进制日志文件和中继日志文件的加密。不需要在服务器上启用二进制日志记录以启用加密，因此可以在没有二进制日志的副本上加密中继日志文件。要使用加密，必须安装并配置一个密钥环插件以提供MySQL服务器的密钥环服务。有关如何执行此操作的说明，请参见[第8.4.4节，“MySQL密钥环”](keyring.html
    "8.4.4 MySQL密钥环")。任何受支持的密钥环插件都可以用于存储二进制日志加密密钥。
- en: When you first start the server with binary log encryption enabled, a new binary
    log encryption key is generated before the binary log and relay logs are initialized.
    This key is used to encrypt a file password for each binary log file (if the server
    has binary logging enabled) and relay log file (if the server has replication
    channels), and further keys generated from the file passwords are used to encrypt
    the data in the files. Relay log files are encrypted for all channels, including
    Group Replication applier channels and new channels that are created after encryption
    is activated. The binary log index file and relay log index file are never encrypted.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当首次启用二进制日志加密启动服务器时，在初始化二进制日志和中继日志之前会生成一个新的二进制日志加密密钥。此密钥用于为每个二进制日志文件（如果服务器启用了二进制日志记录）和中继日志文件（如果服务器有复制通道）加密一个文件密码，并且从文件密码生成的进一步密钥用于加密文件中的数据。中继日志文件为所有通道加密，包括组复制应用程序通道和在激活加密后创建的新通道。二进制日志索引文件和中继日志索引文件永远不会被加密。
- en: If you activate encryption while the server is running, a new binary log encryption
    key is generated at that time. The exception is if encryption was active previously
    on the server and was then disabled, in which case the binary log encryption key
    that was in use before is used again. The binary log file and relay log files
    are rotated immediately, and file passwords for the new files and all subsequent
    binary log files and relay log files are encrypted using this binary log encryption
    key. Existing binary log files and relay log files still present on the server
    are not automatically encrypted, but you can purge them if they are no longer
    needed.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在服务器运行时激活加密，那么此时会生成一个新的二进制日志加密密钥。例外情况是，如果以前在服务器上激活了加密，然后禁用了，那么之前使用的二进制日志加密密钥将再次被使用。二进制日志文件和中继日志文件立即进行轮换，并且新文件和所有后续二进制日志文件和中继日志文件的文件密码都使用此二进制日志加密密钥进行加密。仍然存在于服务器上的现有二进制日志文件和中继日志文件不会自动加密，但如果不再需要，可以将它们清除。
- en: If you deactivate encryption by changing the [`binlog_encryption`](replication-options-binary-log.html#sysvar_binlog_encryption)
    system variable to `OFF`, the binary log file and relay log files are rotated
    immediately and all subsequent logging is unencrypted. Previously encrypted files
    are not automatically decrypted, but the server is still able to read them. The
    `BINLOG_ENCRYPTION_ADMIN` privilege (or the deprecated [`SUPER`](privileges-provided.html#priv_super)
    privilege) is required to activate or deactivate encryption while the server is
    running. Group Replication applier channels are not included in the relay log
    rotation request, so unencrypted logging for these channels does not start until
    their logs are rotated in normal use.
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果通过将[`binlog_encryption`](replication-options-binary-log.html#sysvar_binlog_encryption)系统变量更改为`OFF`来停用加密，则二进制日志文件和中继日志文件将立即进行轮换，并且所有后续记录都将是未加密的。以前加密的文件不会自动解密，但服务器仍然能够读取它们。激活或停用加密时需要`BINLOG_ENCRYPTION_ADMIN`权限（或已弃用的[`SUPER`](privileges-provided.html#priv_super)权限）。组复制应用程序通道不包括在中继日志轮换请求中，因此在正常使用中，这些通道的未加密记录直到它们的日志轮换后才开始。
- en: For more information on binary log file and relay log file encryption, see [Section 19.3.2,
    “Encrypting Binary Log Files and Relay Log Files”](replication-binlog-encryption.html
    "19.3.2 Encrypting Binary Log Files and Relay Log Files").
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关二进制日志文件和中继日志文件加密的更多信息，请参见[第19.3.2节，“加密二进制日志文件和中继日志文件”](replication-binlog-encryption.html
    "19.3.2 加密二进制日志文件和中继日志文件")。
- en: '[`binlog_error_action`](replication-options-binary-log.html#sysvar_binlog_error_action)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_error_action`](replication-options-binary-log.html#sysvar_binlog_error_action)'
- en: '| Command-Line Format | `--binlog-error-action[=value]` |'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-error-action[=value]` |'
- en: '| System Variable | `[binlog_error_action](replication-options-binary-log.html#sysvar_binlog_error_action)`
    |'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_error_action](replication-options-binary-log.html#sysvar_binlog_error_action)`
    |'
- en: '| Scope | Global |'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `ABORT_SERVER` |'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ABORT_SERVER` |'
- en: '| Valid Values | `IGNORE_ERROR``ABORT_SERVER` |'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `IGNORE_ERROR``ABORT_SERVER` |'
- en: Controls what happens when the server encounters an error such as not being
    able to write to, flush or synchronize the binary log, which can cause the source's
    binary log to become inconsistent and replicas to lose synchronization.
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制服务器遇到无法写入、刷新或同步二进制日志等错误时会发生什么，这可能导致源二进制日志不一致，副本失去同步。
- en: This variable defaults to `ABORT_SERVER`, which makes the server halt logging
    and shut down whenever it encounters such an error with the binary log. On restart,
    recovery proceeds as in the case of an unexpected server halt (see [Section 19.4.2,
    “Handling an Unexpected Halt of a Replica”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 Handling an Unexpected Halt of a Replica")).
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量默认为`ABORT_SERVER`，当二进制日志遇到此类错误时，服务器会停止记录并关闭。在重新启动时，恢复的过程与意外服务器停止的情况相同（参见[第19.4.2节，“处理复制的意外停止”](replication-solutions-unexpected-replica-halt.html
    "19.4.2 处理复制的意外停止")）。
- en: When `binlog_error_action` is set to `IGNORE_ERROR`, if the server encounters
    such an error it continues the ongoing transaction, logs the error then halts
    logging, and continues performing updates. To resume binary logging [`log_bin`](replication-options-binary-log.html#sysvar_log_bin)
    must be enabled again, which requires a server restart. This setting provides
    backward compatibility with older versions of MySQL.
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当`binlog_error_action`设置为`IGNORE_ERROR`时，如果服务器遇到此类错误，它会继续进行当前事务，记录错误然后停止记录，并继续执行更新。要恢复二进制日志记录，必须重新启用[`log_bin`](replication-options-binary-log.html#sysvar_log_bin)，这需要重新启动服务器。此设置与MySQL的旧版本向后兼容。
- en: '[`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)'
- en: '| Command-Line Format | `--binlog-expire-logs-seconds=#` |'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-expire-logs-seconds=#` |'
- en: '| System Variable | `[binlog_expire_logs_seconds](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)`
    |'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_expire_logs_seconds](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)`
    |'
- en: '| Scope | Global |'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `2592000` |'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `2592000` |'
- en: '| Minimum Value | `0` |'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: '| Unit | seconds |'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 秒 |'
- en: Sets the binary log expiration period in seconds. After their expiration period
    ends, binary log files can be automatically removed. Possible removals happen
    at startup and when the binary log is flushed. Log flushing occurs as indicated
    in [Section 7.4, “MySQL Server Logs”](server-logs.html "7.4 MySQL Server Logs").
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置二进制日志过期时间（以秒为单位）。在过期后，二进制日志文件可以自动删除。可能的删除发生在启动时和二进制日志刷新时。日志刷新的发生如[第7.4节，“MySQL服务器日志”](server-logs.html
    "7.4 MySQL服务器日志")所示。
- en: The default binary log expiration period is 2592000 seconds, which equals 30
    days (30*24*60*60 seconds). The default applies if neither `binlog_expire_logs_seconds`
    nor the deprecated system variable [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    has a value set at startup. If a non-zero value for one of the variables `binlog_expire_logs_seconds`
    or `expire_logs_days` is set at startup, this value is used as the binary log
    expiration period. If a non-zero value for both of those variables is set at startup,
    the value for `binlog_expire_logs_seconds` is used as the binary log expiration
    period, and the value for `expire_logs_days` is ignored with a warning message.
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认的二进制日志过期时间为2592000秒，相当于30天（30*24*60*60秒）。如果在启动时既没有为`binlog_expire_logs_seconds`设置值，也没有为废弃的系统变量[`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)设置值，则使用默认值。如果在启动时为`binlog_expire_logs_seconds`或`expire_logs_days`中的一个变量设置了非零值，则该值将用作二进制日志的过期时间。如果在启动时为这两个变量都设置了非零值，则`binlog_expire_logs_seconds`的值将用作二进制日志的过期时间，而`expire_logs_days`的值将被忽略并显示警告消息。
- en: At runtime, you cannot set `binlog_expire_logs_seconds` or `expire_logs_days`
    to a non-zero value if the other is currently set to a non-zero value. Because
    the default value for `binlog_expire_logs_seconds` is non-zero, you must explicitly
    set `binlog_expire_logs_seconds` to zero before you can set or change the value
    of `expire_logs_days`.
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在运行时，如果另一个变量`binlog_expire_logs_seconds`或`expire_logs_days`当前已设置为非零值，则不能将`binlog_expire_logs_seconds`或`expire_logs_days`设置为非零值。由于`binlog_expire_logs_seconds`的默认值为非零，因此必须在设置或更改`expire_logs_days`的值之前明确将`binlog_expire_logs_seconds`设置为零。
- en: Beginning with MySQL 8.0.29, automatic purging of the binary log can be disabled
    by setting the [`binlog_expire_logs_auto_purge`](replication-options-binary-log.html#sysvar_binlog_expire_logs_auto_purge)
    system variable to `OFF`. This takes precedence over any setting for `binlog_expire_logs_seconds`.
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.29开始，可以通过将系统变量[`binlog_expire_logs_auto_purge`](replication-options-binary-log.html#sysvar_binlog_expire_logs_auto_purge)设置为`OFF`来禁用二进制日志的自动清理。这优先于`binlog_expire_logs_seconds`的任何设置。
- en: In MySQL 8.0.28 and earlier, to disable automatic purging of the binary log,
    specify a value of 0 explicitly for `binlog_expire_logs_seconds`, and do not specify
    a value for `expire_logs_days`. For compatibility with earlier releases, automatic
    purging is also disabled if you specify a value of 0 explicitly for `expire_logs_days`
    and do not specify a value for `binlog_expire_logs_seconds`. In that case, the
    default for `binlog_expire_logs_seconds` is not applied.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.28及更早版本中，要禁用二进制日志的自动清理，必须明确为`binlog_expire_logs_seconds`指定值为0，并且不为`expire_logs_days`指定值。为了与早期版本兼容，如果您明确为`expire_logs_days`指定值为0，并且不为`binlog_expire_logs_seconds`指定值，则也会禁用自动清理。在这种情况下，不会应用`binlog_expire_logs_seconds`的默认值。
- en: To remove binary log files manually, use the [`PURGE BINARY LOGS`](purge-binary-logs.html
    "15.4.1.1 PURGE BINARY LOGS Statement") statement. See [Section 15.4.1.1, “PURGE
    BINARY LOGS Statement”](purge-binary-logs.html "15.4.1.1 PURGE BINARY LOGS Statement").
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要手动删除二进制日志文件，请使用[`PURGE BINARY LOGS`](purge-binary-logs.html "15.4.1.1 PURGE
    BINARY LOGS Statement")语句。参见[Section 15.4.1.1, “PURGE BINARY LOGS Statement”](purge-binary-logs.html
    "15.4.1.1 PURGE BINARY LOGS Statement")。
- en: '[`binlog_expire_logs_auto_purge`](replication-options-binary-log.html#sysvar_binlog_expire_logs_auto_purge)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_expire_logs_auto_purge`](replication-options-binary-log.html#sysvar_binlog_expire_logs_auto_purge)'
- en: '| Command-Line Format | `--binlog-expire-logs-auto-purge={ON&#124;OFF}` |'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-expire-logs-auto-purge={ON&#124;OFF}` |'
- en: '| Introduced | 8.0.29 |'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.29 |'
- en: '| System Variable | `[binlog_expire_logs_auto_purge](replication-options-binary-log.html#sysvar_binlog_expire_logs_auto_purge)`
    |'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_expire_logs_auto_purge](replication-options-binary-log.html#sysvar_binlog_expire_logs_auto_purge)`
    |'
- en: '| Scope | Global |'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: Enables or disables automatic purging of binary log files. Setting this variable
    to `ON` (the default) enables automatic purging; setting it to `OFF` disables
    automatic purging. The interval to wait before purging is controlled by [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    and [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days).
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用或禁用二进制日志文件的自动清理。将此变量设置为`ON`（默认值）启用自动清理；将其设置为`OFF`禁用自动清理。等待清理的间隔由[`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)和[`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)控制。
- en: Note
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Even if `binlog_expire_logs_auto_purge` is `ON`, setting both `binlog_expire_logs_seconds`
    and `expire_logs_days` to `0` stops automatic purging from taking place.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 即使`binlog_expire_logs_auto_purge`为`ON`，将`binlog_expire_logs_seconds`和`expire_logs_days`都设置为`0`也会阻止自动清理操作的进行。
- en: This variable has no effect on [`PURGE BINARY LOGS`](purge-binary-logs.html
    "15.4.1.1 PURGE BINARY LOGS Statement").
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量对[`PURGE BINARY LOGS`](purge-binary-logs.html "15.4.1.1 PURGE BINARY LOGS语句")没有影响。
- en: '[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)'
- en: '| Command-Line Format | `--binlog-format=format` |'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-format=format` |'
- en: '| Deprecated | 8.0.34 |'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.34 |'
- en: '| System Variable | `[binlog_format](replication-options-binary-log.html#sysvar_binlog_format)`
    |'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_format](replication-options-binary-log.html#sysvar_binlog_format)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `ROW` |'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ROW` |'
- en: '| Valid Values | `MIXED``STATEMENT``ROW` |'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `MIXED``STATEMENT``ROW` |'
- en: This system variable sets the binary logging format, and can be any one of `STATEMENT`,
    `ROW`, or `MIXED`. (See [Section 19.2.1, “Replication Formats”](replication-formats.html
    "19.2.1 Replication Formats").) The setting takes effect when binary logging is
    enabled on the server, which is the case when the [`log_bin`](replication-options-binary-log.html#sysvar_log_bin)
    system variable is set to `ON`. In MySQL 8.0, binary logging is enabled by default,
    and by default uses the row-based format.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量设置了二进制日志记录格式，可以是`STATEMENT`、`ROW`或`MIXED`中的任何一种。（参见[第19.2.1节，“复制格式”](replication-formats.html
    "19.2.1 复制格式")。）当服务器启用二进制日志记录时，即[`log_bin`](replication-options-binary-log.html#sysvar_log_bin)系统变量设置为`ON`时，设置生效。在MySQL
    8.0中，默认情况下启用二进制日志记录，并且默认使用基于行的格式。
- en: Note
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '`binlog_format` is deprecated as of MySQL 8.0.34, and is subject to removal
    in a future version of MySQL. This implies that support for logging formats other
    than row-based is also subject to removal in a future release. Thus, only row-based
    logging should be employed for any new MySQL Replication setups.'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`binlog_format`在MySQL 8.0.34中已被弃用，并可能在将来的MySQL版本中被移除。这意味着除基于行的日志记录格式外的其他格式的支持也可能在将来的版本中被移除。因此，任何新的MySQL复制设置应仅使用基于行的日志记录。'
- en: '[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    can be set at startup or at runtime, except that under some conditions, changing
    this variable at runtime is not possible or causes replication to fail, as described
    later.'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)可以在启动时或运行时设置，但在某些情况下，在运行时更改此变量是不可能的，或会导致复制失败，如后文所述。'
- en: 'The default is `ROW`. *Exception*: In NDB Cluster, the default is `MIXED`;
    statement-based replication is not supported for NDB Cluster.'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为`ROW`。*例外*：在NDB Cluster中，默认值为`MIXED`；不支持基于语句的复制。
- en: Setting the session value of this system variable is a restricted operation.
    The session user must have privileges sufficient to set restricted session variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此系统变量的会话值是受限制的操作。会话用户必须具有足够权限来设置受限制的会话变量。请参见[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: The rules governing when changes to this variable take effect and how long the
    effect lasts are the same as for other MySQL server system variables. For more
    information, see [Section 15.7.6.1, “SET Syntax for Variable Assignment”](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment").
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改此变量生效的规则和效果持续时间与其他MySQL服务器系统变量相同。有关更多信息，请参见[第15.7.6.1节，“变量赋值的SET语法”](set-variable.html
    "15.7.6.1 变量赋值的SET语法")。
- en: When `MIXED` is specified, statement-based replication is used, except for cases
    where only row-based replication is guaranteed to lead to proper results. For
    example, this happens when statements contain loadable functions or the [`UUID()`](miscellaneous-functions.html#function_uuid)
    function.
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当指定`MIXED`时，将使用基于语句的复制，但有例外情况，即仅当仅有基于行的复制保证会产生正确结果时才会使用基于行的复制。例如，当语句包含可加载函数或[`UUID()`](miscellaneous-functions.html#function_uuid)函数时会发生这种情况。
- en: For details of how stored programs (stored procedures and functions, triggers,
    and events) are handled when each binary logging format is set, see [Section 27.7,
    “Stored Program Binary Logging”](stored-programs-logging.html "27.7 Stored Program
    Binary Logging").
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关在设置每个二进制日志格式时如何处理存储程序（存储过程和函数、触发器和事件）的详细信息，请参见[Section 27.7，“存储程序二进制日志记录”](stored-programs-logging.html
    "27.7 存储程序二进制日志记录")。
- en: 'There are exceptions when you cannot switch the replication format at runtime:'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在以下情况下无法在运行时切换复制格式：
- en: The replication format cannot be changed from within a stored function or a
    trigger.
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法从存储函数或触发器内部更改复制格式。
- en: If a session has open temporary tables, the replication format cannot be changed
    for the session (`SET @@SESSION.binlog_format`).
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果会话有打开的临时表，则无法为该会话更改复制格式（`SET @@SESSION.binlog_format`）。
- en: If any replication channel has open temporary tables, the replication format
    cannot be changed globally (`SET @@GLOBAL.binlog_format` or `SET @@PERSIST.binlog_format`).
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果任何复制通道有打开的临时表，则无法全局更改复制格式（`SET @@GLOBAL.binlog_format`或`SET @@PERSIST.binlog_format`）。
- en: If any replication channel applier thread is currently running, the replication
    format cannot be changed globally (`SET @@GLOBAL.binlog_format` or `SET @@PERSIST.binlog_format`).
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果任何复制通道应用程序线程当前正在运行，则无法全局更改复制格式（`SET @@GLOBAL.binlog_format`或`SET @@PERSIST.binlog_format`）。
- en: Trying to switch the replication format in any of these cases (or attempting
    to set the current replication format) results in an error. You can, however,
    use `PERSIST_ONLY` (`SET @@PERSIST_ONLY.binlog_format`) to change the replication
    format at any time, because this action does not modify the runtime global system
    variable value, and takes effect only after a server restart.
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在任何情况下尝试切换复制格式（或尝试设置当前复制格式）都会导致错误。但是，您可以随时使用`PERSIST_ONLY`（`SET @@PERSIST_ONLY.binlog_format`）来更改复制格式，因为此操作不会修改运行时全局系统变量的值，并且只在服务器重新启动后生效。
- en: Switching the replication format at runtime is not recommended when any temporary
    tables exist, because temporary tables are logged only when using statement-based
    replication, whereas with row-based replication and mixed replication, they are
    not logged.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当存在任何临时表时不建议在运行时切换复制格式，因为仅在使用基于语句的复制时才记录临时表，而在基于行的复制和混合复制中，它们不会被记录���
- en: Changing the logging format on a replication source server does not cause a
    replica to change its logging format to match. Switching the replication format
    while replication is ongoing can cause issues if a replica has binary logging
    enabled, and the change results in the replica using `STATEMENT` format logging
    while the source is using `ROW` or `MIXED` format logging. A replica is not able
    to convert binary log entries received in `ROW` logging format to `STATEMENT`
    format for use in its own binary log, so this situation can cause replication
    to fail. For more information, see [Section 7.4.4.2, “Setting The Binary Log Format”](binary-log-setting.html
    "7.4.4.2 Setting The Binary Log Format").
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在复制源服务器上更改日志格式不会导致副本更改其日志格式以匹配。在复制正在进行时切换复制格式可能会导致问题，如果副本启用了二进制日志记录，并且更改导致副本使用`STATEMENT`格式记录日志，而源使用`ROW`或`MIXED`格式记录日志。副本无法将以`ROW`记录格式接收的二进制日志条目转换为`STATEMENT`格式以在自己的二进制日志中使用，因此此情况可能导致复制失败。有关更多信息，请参见[Section 7.4.4.2，“设置二进制日志格式”](binary-log-setting.html
    "7.4.4.2 设置二进制日志格式")。
- en: 'The binary log format affects the behavior of the following server options:'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 二进制日志格式会影响以下服务器选项的行为：
- en: '[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)'
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-do-db`](replication-options-replica.html#option_mysqld_replicate-do-db)'
- en: '[`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)'
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--replicate-ignore-db`](replication-options-replica.html#option_mysqld_replicate-ignore-db)'
- en: '[`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)'
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--binlog-do-db`](replication-options-binary-log.html#option_mysqld_binlog-do-db)'
- en: '[`--binlog-ignore-db`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)'
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--binlog-ignore-db`](replication-options-binary-log.html#option_mysqld_binlog-ignore-db)'
- en: These effects are discussed in detail in the descriptions of the individual
    options.
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些效果在���个选项的描述中有详细讨论。
- en: '[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)'
- en: '| Command-Line Format | `--binlog-group-commit-sync-delay=#` |'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-group-commit-sync-delay=#` |'
- en: '| System Variable | `[binlog_group_commit_sync_delay](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)`
    |'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_group_commit_sync_delay](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)`
    |'
- en: '| Scope | Global |'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Integer |'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `1000000` |'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1000000` |'
- en: '| Unit | microseconds |'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 微秒 |'
- en: Controls how many microseconds the binary log commit waits before synchronizing
    the binary log file to disk. By default [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
    is set to 0, meaning that there is no delay. Setting [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
    to a microsecond delay enables more transactions to be synchronized together to
    disk at once, reducing the overall time to commit a group of transactions because
    the larger groups require fewer time units per group.
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制二进制日志提交在将二进制日志文件同步到磁盘之前等待多少微秒。默认情况下，[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)设置为0，意味着没有延迟。将[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)设置为微秒延迟可以使更多事务一起同步到磁盘，从而减少提交一组事务的总时间，因为较大的组需要更少的时间单位来完成。
- en: When [`sync_binlog=0`](replication-options-binary-log.html#sysvar_sync_binlog)
    or [`sync_binlog=1`](replication-options-binary-log.html#sysvar_sync_binlog) is
    set, the delay specified by [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
    is applied for every binary log commit group before synchronization (or in the
    case of [`sync_binlog=0`](replication-options-binary-log.html#sysvar_sync_binlog),
    before proceeding). When [`sync_binlog`](replication-options-binary-log.html#sysvar_sync_binlog)
    is set to a value *n* greater than 1, the delay is applied after every *n* binary
    log commit groups.
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当设置[`sync_binlog=0`](replication-options-binary-log.html#sysvar_sync_binlog)或[`sync_binlog=1`](replication-options-binary-log.html#sysvar_sync_binlog)时，[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)指定的延迟将应用于每个二进制日志提交组在同步之前（或在[`sync_binlog=0`](replication-options-binary-log.html#sysvar_sync_binlog)的情况下，在继续之前）。当将[`sync_binlog`](replication-options-binary-log.html#sysvar_sync_binlog)设置为大于1的值*n*时，延迟将应用于每*n*个二进制日志提交组之后。
- en: Setting [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
    can increase the number of parallel committing transactions on any server that
    has (or might have after a failover) a replica, and therefore can increase parallel
    execution on the replicas. To benefit from this effect, the replica servers must
    have [`replica_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_replica_parallel_type)
    (from MySQL 8.0.26) or [`slave_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_slave_parallel_type)
    set, and the effect is more significant when [`binlog_transaction_dependency_tracking=COMMIT_ORDER`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)
    is also set. It is important to take into account both the source's throughput
    and the replicas' throughput when you are tuning the setting for [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay).
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)可以增加任何具有（或在故障转移后可能具有）副本的服务器上并因此可以增加副本的并行执行的提交事务数量。要从这种效果中受益，副本服务器必须设置[`replica_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_replica_parallel_type)（从MySQL
    8.0.26开始）或[`slave_parallel_type=LOGICAL_CLOCK`](replication-options-replica.html#sysvar_slave_parallel_type)，并且当[`binlog_transaction_dependency_tracking=COMMIT_ORDER`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)也设置时效果更显著。在调整[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)的设置时，重要的是考虑源的吞吐量和副本的吞吐量。
- en: Setting [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
    can also reduce the number of `fsync()` calls to the binary log on any server
    (source or replica) that has a binary log.
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)也可以减少在任何具有二进制日志的服务器（源或副本）上对二进制日志执行`fsync()`调用的次数。
- en: Note that setting [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
    increases the latency of transactions on the server, which might affect client
    applications. Also, on highly concurrent workloads, it is possible for the delay
    to increase contention and therefore reduce throughput. Typically, the benefits
    of setting a delay outweigh the drawbacks, but tuning should always be carried
    out to determine the optimal setting.
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，设置[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)会增加服务器上事务的延迟，可能会影响客户端应用程序。此外，在高并发工作负载下，延迟可能增加争用，从而降低吞吐量。通常，设置延迟的好处超过了缺点，但应始终进行调整以确定最佳设置。
- en: '[`binlog_group_commit_sync_no_delay_count`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_group_commit_sync_no_delay_count`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)'
- en: '| Command-Line Format | `--binlog-group-commit-sync-no-delay-count=#` |'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-group-commit-sync-no-delay-count=#` |'
- en: '| System Variable | `[binlog_group_commit_sync_no_delay_count](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)`
    |'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_group_commit_sync_no_delay_count](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_no_delay_count)`
    |'
- en: '| Scope | Global |'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `100000` |'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `100000` |'
- en: The maximum number of transactions to wait for before aborting the current delay
    as specified by [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay).
    If [`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)
    is set to 0, then this option has no effect.
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在由[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)指定的当前延迟中放弃之前等待的最大事务数。如果[`binlog_group_commit_sync_delay`](replication-options-binary-log.html#sysvar_binlog_group_commit_sync_delay)设置为0，则此选项无效。
- en: '[`binlog_max_flush_queue_time`](replication-options-binary-log.html#sysvar_binlog_max_flush_queue_time)'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_max_flush_queue_time`](replication-options-binary-log.html#sysvar_binlog_max_flush_queue_time)'
- en: '| Command-Line Format | `--binlog-max-flush-queue-time=#` |'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-max-flush-queue-time=#` |'
- en: '| Deprecated | Yes |'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 是 |'
- en: '| System Variable | `[binlog_max_flush_queue_time](replication-options-binary-log.html#sysvar_binlog_max_flush_queue_time)`
    |'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_max_flush_queue_time](replication-options-binary-log.html#sysvar_binlog_max_flush_queue_time)`
    |'
- en: '| Scope | Global |'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设��提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `100000` |'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `100000` |'
- en: '| Unit | microseconds |'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 微秒 |'
- en: '`binlog_max_flush_queue_time` is deprecated, and is marked for eventual removal
    in a future MySQL release. Formerly, this system variable controlled the time
    in microseconds to continue reading transactions from the flush queue before proceeding
    with group commit. It no longer has any effect.'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`binlog_max_flush_queue_time`已被弃用，并标记为在未来的MySQL版本中最终移除。以前，此系统变量控制了继续从刷新队列中读取事务的时间（以微秒为单位），然后进行组提交。它不再起作用。'
- en: '[`binlog_order_commits`](replication-options-binary-log.html#sysvar_binlog_order_commits)'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_order_commits`](replication-options-binary-log.html#sysvar_binlog_order_commits)'
- en: '| Command-Line Format | `--binlog-order-commits[={OFF&#124;ON}]` |'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-order-commits[={OFF&#124;ON}]` |'
- en: '| System Variable | `[binlog_order_commits](replication-options-binary-log.html#sysvar_binlog_order_commits)`
    |'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_order_commits](replication-options-binary-log.html#sysvar_binlog_order_commits)`
    |'
- en: '| Scope | Global |'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: When this variable is enabled on a replication source server (which is the default),
    transaction commit instructions issued to storage engines are serialized on a
    single thread, so that transactions are always committed in the same order as
    they are written to the binary log. Disabling this variable permits transaction
    commit instructions to be issued using multiple threads. Used in combination with
    binary log group commit, this prevents the commit rate of a single transaction
    being a bottleneck to throughput, and might therefore produce a performance improvement.
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在复制源服务器上启用此变量（默认情况下）时，发给存储引擎的事务提交指令在单个线程上串行化，因此事务总是按照写入二进制日志的顺序提交。禁用此变量允许使用多个线程发出事务提交指令。与二进制日志组提交结合使用，这可以防止单个事务的提交速率成为吞吐量的瓶颈，并可能产生性能改进。
- en: Transactions are written to the binary log at the point when all the storage
    engines involved have confirmed that the transaction is prepared to commit. The
    binary log group commit logic then commits a group of transactions after their
    binary log write has taken place. When [`binlog_order_commits`](replication-options-binary-log.html#sysvar_binlog_order_commits)
    is disabled, because multiple threads are used for this process, transactions
    in a commit group might be committed in a different order from their order in
    the binary log. (Transactions from a single client always commit in chronological
    order.) In many cases this does not matter, as operations carried out in separate
    transactions should produce consistent results, and if that is not the case, a
    single transaction ought to be used instead.
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务在所有涉及的存储引擎确认事务准备提交时被写入二进制日志。然后二进制日志组提交逻辑在其写入二进制日志后提交一组事务。当禁用[`binlog_order_commits`](replication-options-binary-log.html#sysvar_binlog_order_commits)时，由于使用多个线程进行此过程，提交组中的事务可能按照不同于二进制日志中的顺序提交。（来自单个客户端的事务总是按照时间顺序提交。）在许多情况下，这并不重要，因为在单独事务中执行的操作应该产生一致的结果，如果不是这种情况，则应该使用单个事务。
- en: If you want to ensure that the transaction history on the source and on a multithreaded
    replica remains identical, set [`slave_preserve_commit_order=1`](replication-options-replica.html#sysvar_slave_preserve_commit_order)
    on the replica.
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您希望确保源端和多线程复制的事务历史保持一致，请在复制端设置[`slave_preserve_commit_order=1`](replication-options-replica.html#sysvar_slave_preserve_commit_order)。
- en: '[`binlog_rotate_encryption_master_key_at_startup`](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_rotate_encryption_master_key_at_startup`](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)'
- en: '| Command-Line Format | `--binlog-rotate-encryption-master-key-at-startup[={OFF&#124;ON}]`
    |'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-rotate-encryption-master-key-at-startup[={OFF&#124;ON}]`
    |'
- en: '| Introduced | 8.0.14 |'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.14 |'
- en: '| System Variable | `[binlog_rotate_encryption_master_key_at_startup](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)`
    |'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_rotate_encryption_master_key_at_startup](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)`
    |'
- en: '| Scope | Global |'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Boolean |'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Specifies whether or not the binary log master key is rotated at server startup.
    The binary log master key is the binary log encryption key that is used to encrypt
    file passwords for the binary log files and relay log files on the server. When
    a server is started for the first time with binary log encryption enabled ([`binlog_encryption=ON`](replication-options-binary-log.html#sysvar_binlog_encryption)),
    a new binary log encryption key is generated and used as the binary log master
    key. If the [`binlog_rotate_encryption_master_key_at_startup`](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)
    system variable is also set to `ON`, whenever the server is restarted, a further
    binary log encryption key is generated and used as the binary log master key for
    all subsequent binary log files and relay log files. If the [`binlog_rotate_encryption_master_key_at_startup`](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)
    system variable is set to `OFF`, which is the default, the existing binary log
    master key is used again after the server restarts. For more information on binary
    log encryption keys and the binary log master key, see [Section 19.3.2, “Encrypting
    Binary Log Files and Relay Log Files”](replication-binlog-encryption.html "19.3.2 Encrypting
    Binary Log Files and Relay Log Files").
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指定在服务器启动时是否会轮换二进制日志主密钥。二进制日志主密钥是用于加密服务器上的二进制日志文件和中继日志文件的文件密码的二进制日志加密密钥。当启用二进制日志加密（[`binlog_encryption=ON`](replication-options-binary-log.html#sysvar_binlog_encryption)）时，首次启动服务器时会生成一个新的二进制日志加密密钥，并用作二进制日志主密钥。如果
    [`binlog_rotate_encryption_master_key_at_startup`](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)
    系统变量也设置为 `ON`，每当服务器重新启动时，会生成一个进一步的二进制日志加密密钥，并用作所有后续二进制日志文件和中继日志文件的二进制日志主密钥。如果
    [`binlog_rotate_encryption_master_key_at_startup`](replication-options-binary-log.html#sysvar_binlog_rotate_encryption_master_key_at_startup)
    系统变量设置为 `OFF`，即默认情况下，服务器重新启动后会再次使用现有的二进制日志主密钥。有关二进制日志加密密钥和二进制日志主密钥的更多信息，请参见 [Section 19.3.2,
    “Encrypting Binary Log Files and Relay Log Files”](replication-binlog-encryption.html
    "19.3.2 Encrypting Binary Log Files and Relay Log Files")。
- en: '[`binlog_row_event_max_size`](replication-options-binary-log.html#sysvar_binlog_row_event_max_size)'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_row_event_max_size`](replication-options-binary-log.html#sysvar_binlog_row_event_max_size)'
- en: '| Command-Line Format | `--binlog-row-event-max-size=#` |'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-row-event-max-size=#` |'
- en: '| System Variable (≥ 8.0.14) | `[binlog_row_event_max_size](replication-options-binary-log.html#sysvar_binlog_row_event_max_size)`
    |'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 (≥ 8.0.14) | `[binlog_row_event_max_size](replication-options-binary-log.html#sysvar_binlog_row_event_max_size)`
    |'
- en: '| Scope (≥ 8.0.14) | Global |'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 (≥ 8.0.14) | 全局 |'
- en: '| Dynamic (≥ 8.0.14) | No |'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 (≥ 8.0.14) | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies (≥ 8.0.14) | No |'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 (≥ 8.0.14) | 否 |'
- en: '| Type | Integer |'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `8192` |'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `8192` |'
- en: '| Minimum Value | `256` |'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `256` |'
- en: '| Maximum Value (64-bit platforms) | `18446744073709551615` |'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 (64位平台) | `18446744073709551615` |'
- en: '| Maximum Value (32-bit platforms) | `4294967295` |'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 (32位平台) | `4294967295` |'
- en: '| Unit | bytes |'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: When row-based binary logging is used, this setting is a soft limit on the maximum
    size of a row-based binary log event, in bytes. Where possible, rows stored in
    the binary log are grouped into events with a size not exceeding the value of
    this setting. If an event cannot be split, the maximum size can be exceeded. The
    default is 8192 bytes.
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用基于行的二进制日志记录时，此设置是行基二进制日志事件的最大大小的软限制，以字节为单位。在可能的情况下，存储在二进制日志中的行被分组为大小不超过此设置值的事件。如果无法拆分事件，则最大大小可能会超过。默认值为
    8192 字节。
- en: This global system variable is read-only and can be set only at server startup.
    Its value can therefore only be modified by using the `PERSIST_ONLY` keyword or
    the `@@persist_only` qualifier with the [`SET`](set.html "13.3.6 The SET Type")
    statement.
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此全局系统变量是只读的，只能在服务器启动时设置。因此，其值只能通过在 [`SET`](set.html "13.3.6 The SET Type") 语句中使用
    `PERSIST_ONLY` 关键字或 `@@persist_only` 限定符来修改。
- en: '[`binlog_row_image`](replication-options-binary-log.html#sysvar_binlog_row_image)'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_row_image`](replication-options-binary-log.html#sysvar_binlog_row_image)'
- en: '| Command-Line Format | `--binlog-row-image=image_type` |'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-row-image=image_type` |'
- en: '| System Variable | `[binlog_row_image](replication-options-binary-log.html#sysvar_binlog_row_image)`
    |'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_row_image](replication-options-binary-log.html#sysvar_binlog_row_image)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `full` |'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `full` |'
- en: '| Valid Values | `full` (Log all columns)`minimal` (Log only changed columns,
    and columns needed to identify rows)`noblob` (Log all columns, except for unneeded
    BLOB and TEXT columns) |'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `full`（记录所有列）`minimal`（仅记录更改的列和用于识别行的列）`noblob`（记录所有列，除了不需要的 BLOB 和
    TEXT 列） |'
- en: For MySQL row-based replication, this variable determines how row images are
    written to the binary log.
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MySQL 基于行的复制，此变量确定如何将行图像写入二进制日志。
- en: Setting the session value of this system variable is a restricted operation.
    The session user must have privileges sufficient to set restricted session variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此系统变量的会话值是受限制的操作。会话用户必须具有足够权限来设置受限制的会话变量。请参阅 [第 7.1.9.1 节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: In MySQL row-based replication, each row change event contains two images, a
    “before” image whose columns are matched against when searching for the row to
    be updated, and an “after” image containing the changes. Normally, MySQL logs
    full rows (that is, all columns) for both the before and after images. However,
    it is not strictly necessary to include every column in both images, and we can
    often save disk, memory, and network usage by logging only those columns which
    are actually required.
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 基于行的复制中，每个行更改事件包含两个图像，一个“前”图像，其列与搜索要更新的行匹配，以及包含更改的“后”图像。通常，MySQL 记录完整行（即所有列）的前后图像。但是，并不严格要求在两个图像中都包含每一列，我们通常可以通过仅记录实际需要的列来节省磁盘、内存和网络使用。
- en: Note
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: When deleting a row, only the before image is logged, since there are no changed
    values to propagate following the deletion. When inserting a row, only the after
    image is logged, since there is no existing row to be matched. Only when updating
    a row are both the before and after images required, and both written to the binary
    log.
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 删除行时，仅记录前图像，因为删除后没有更改的值需要传播。插入行时，仅记录后图像，因为没有现有行需要匹配。仅在更新行时，才需要前后图像，并且两者都写入二进制日志。
- en: For the before image, it is necessary only that the minimum set of columns required
    to uniquely identify rows is logged. If the table containing the row has a primary
    key, then only the primary key column or columns are written to the binary log.
    Otherwise, if the table has a unique key all of whose columns are `NOT NULL`,
    then only the columns in the unique key need be logged. (If the table has neither
    a primary key nor a unique key without any `NULL` columns, then all columns must
    be used in the before image, and logged.) In the after image, it is necessary
    to log only the columns which have actually changed.
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于前图像，只需要记录一组最小列，以唯一标识行。如果包含行的表具有主键，则只会将主键列写入二进制日志。否则，如果表具有所有列均为 `NOT NULL`
    的唯一键，则只需要记录唯一键中的列。 （如果表既没有主键也没有不带任何 `NULL` 列的唯一键，则必须在前图像中使用并记录所有列。）对于后图像，只需要记录实际更改的列。
- en: 'You can cause the server to log full or minimal rows using the `binlog_row_image`
    system variable. This variable actually takes one of three possible values, as
    shown in the following list:'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以使用 `binlog_row_image` 系统变量使服务器记录完整或最小行。实际上，该变量可以取以下三个可能的值，如下列表所示：
- en: '`full`: Log all columns in both the before image and the after image.'
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full`：记录前图像和后图像中的所有列。'
- en: '`minimal`: Log only those columns in the before image that are required to
    identify the row to be changed; log only those columns in the after image where
    a value was specified by the SQL statement, or generated by auto-increment.'
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`minimal`：仅记录前图像中用于识别要更改的行的列；仅记录 SQL 语句指定的值或由自增生成的后图像中的列。'
- en: '`noblob`: Log all columns (same as `full`), except for [`BLOB`](blob.html "13.3.4 The
    BLOB and TEXT Types") and [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types")
    columns that are not required to identify rows, or that have not changed.'
  id: totrans-328
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`noblob`：记录所有列（与 `full` 相同），但不记录不需要识别行或未更改的 [`BLOB`](blob.html "13.3.4 BLOB
    和 TEXT 类型") 和 [`TEXT`](blob.html "13.3.4 BLOB 和 TEXT 类型") 列。'
- en: Note
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: This variable is not supported by NDB Cluster; setting it has no effect on the
    logging of [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") tables.
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: NDB Cluster不支持此变量；设置它不会影响对[`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0")表的日志记录。
- en: The default value is `full`.
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为`full`。
- en: 'When using `minimal` or `noblob`, deletes and updates are guaranteed to work
    correctly for a given table if and only if the following conditions are true for
    both the source and destination tables:'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用`minimal`或`noblob`时，仅当源表和目标表均满足以下条件时，删除和更新才能正确工作：
- en: All columns must be present and in the same order; each column must use the
    same data type as its counterpart in the other table.
  id: totrans-333
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有列必须存在且顺序相同；每列必须使用与另一表中对应列相同的数据类型。
- en: The tables must have identical primary key definitions.
  id: totrans-334
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表必须具有相同的主键定义。
- en: (In other words, the tables must be identical with the possible exception of
    indexes that are not part of the tables' primary keys.)
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （换句话说，表必须相同，可能除了不是表主键的索引之外。）
- en: If these conditions are not met, it is possible that the primary key column
    values in the destination table may prove insufficient to provide a unique match
    for a delete or update. In this event, no warning or error is issued; the source
    and replica silently diverge, thus breaking consistency.
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果不满足这些条件，则可能目标表中的主键列值不足以为删除或更新提供唯一匹配。在这种情况下，不会发出警告或错误；源表和副本会默默地发生分歧，从而破坏一致性。
- en: Setting this variable has no effect when the binary logging format is `STATEMENT`.
    When [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is `MIXED`, the setting for `binlog_row_image` is applied to changes that are
    logged using row-based format, but this setting has no effect on changes logged
    as statements.
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当二进制日志格式为`STATEMENT`时，设置此变量不起作用。当[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)为`MIXED`时，`binlog_row_image`的设置将应用于使用基于行格式记录的更改，但此设置对作为语句记录的更改没有影响。
- en: Setting `binlog_row_image` on either the global or session level does not cause
    an implicit commit; this means that this variable can be changed while a transaction
    is in progress without affecting the transaction.
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在全局或会话级别设置`binlog_row_image`不会导致隐式提交；这意味着可以在事务进行中��改此变量而不影响事务。
- en: '[`binlog_row_metadata`](replication-options-binary-log.html#sysvar_binlog_row_metadata)'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_row_metadata`](replication-options-binary-log.html#sysvar_binlog_row_metadata)'
- en: '| Command-Line Format | `--binlog-row-metadata=metadata_type` |'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-row-metadata=metadata_type` |'
- en: '| System Variable | `[binlog_row_metadata](replication-options-binary-log.html#sysvar_binlog_row_metadata)`
    |'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_row_metadata](replication-options-binary-log.html#sysvar_binlog_row_metadata)`
    |'
- en: '| Scope | Global |'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `MINIMAL` |'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `MINIMAL` |'
- en: '| Valid Values | `FULL` (All metadata is included)`MINIMAL` (Limit included
    metadata) |'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `FULL`（包括所有元数据）`MINIMAL`（限制包含的元数据） |'
- en: Configures the amount of table metadata added to the binary log when using row-based
    logging. When set to `MINIMAL`, the default, only metadata related to `SIGNED`
    flags, column character set and geometry types are logged. When set to `FULL`
    complete metadata for tables is logged, such as column name, [`ENUM`](enum.html
    "13.3.5 The ENUM Type") or `SET` string values, `PRIMARY KEY` information, and
    so on.
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置在使用基于行的日志记录时向二进制日志添加的表元数据的数量。当设置为`MINIMAL`时，默认情况下，只记录与`SIGNED`标志、列字符集和几何类型相关的元数据。当设置为`FULL`时，将记录完整的表元数据，例如列名、[`ENUM`](enum.html
    "13.3.5 The ENUM Type")或`SET`字符串值、`PRIMARY KEY`信息等。
- en: 'The extended metadata serves the following purposes:'
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 扩展元数据具有以下目的：
- en: Replicas use the metadata to transfer data when its table structure is different
    from the source's.
  id: totrans-350
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 副本使用元数据在其表结构与源表不同的情况下传输数据。
- en: External software can use the metadata to decode row events and store the data
    into external databases, such as a data warehouse.
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部软件可以使用元数据解码行事件并将数据存储到外部数据库，例如数据仓库。
- en: '[`binlog_row_value_options`](replication-options-binary-log.html#sysvar_binlog_row_value_options)'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_row_value_options`](replication-options-binary-log.html#sysvar_binlog_row_value_options)'
- en: '| Command-Line Format | `--binlog-row-value-options=#` |'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-row-value-options=#` |'
- en: '| System Variable | `[binlog_row_value_options](replication-options-binary-log.html#sysvar_binlog_row_value_options)`
    |'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_row_value_options](replication-options-binary-log.html#sysvar_binlog_row_value_options)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Set |'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 设置 |'
- en: '| Default Value |  |'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 |  |'
- en: '| Valid Values | `PARTIAL_JSON` |'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `PARTIAL_JSON` |'
- en: When set to `PARTIAL_JSON`, this enables use of a space-efficient binary log
    format for updates that modify only a small portion of a JSON document, which
    causes row-based replication to write only the modified parts of the JSON document
    to the after-image for the update in the binary log, rather than writing the full
    document (see [Partial Updates of JSON Values](json.html#json-partial-updates
    "Partial Updates of JSON Values")). This works for an [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statement which modifies a JSON column using any sequence of [`JSON_SET()`](json-modification-functions.html#function_json-set),
    [`JSON_REPLACE()`](json-modification-functions.html#function_json-replace), and
    [`JSON_REMOVE()`](json-modification-functions.html#function_json-remove). If the
    server is unable to generate a partial update, the full document is used instead.
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当设置为`PARTIAL_JSON`时，这将启用一种节省空间的二进制日志格式，用于修改JSON文档中仅有小部分内容的更新，这会导致基于行的复制仅将JSON文档的修改部分写入二进制日志中的更新后图像，而不是写入完整文档（参见[JSON值的部分更新](json.html#json-partial-updates
    "JSON值的部分更新")）。这适用于使用任何[`JSON_SET()`](json-modification-functions.html#function_json-set)、[`JSON_REPLACE()`](json-modification-functions.html#function_json-replace)和[`JSON_REMOVE()`](json-modification-functions.html#function_json-remove)序列修改JSON列的[`UPDATE`](update.html
    "15.2.17 UPDATE语句")语句。如果服务器无法生成部分更新，则使用完整文档。
- en: The default value is an empty string, which disables use of the format. To unset
    `binlog_row_value_options` and revert to writing the full JSON document, set its
    value to the empty string.
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值是一个空字符串，这会禁用该格式的使用。要取消`binlog_row_value_options`并恢复写入完整JSON文档，将其值设置为空字符串。
- en: Setting the session value of this system variable is a restricted operation.
    The session user must have privileges sufficient to set restricted session variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此系统变量的会话值是一项受限制的操作。会话用户必须具有足够权限来设置受限制的会话变量。请参阅[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: '`binlog_row_value_options=PARTIAL_JSON` takes effect only when binary logging
    is enabled and [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is set to `ROW` or `MIXED`. Statement-based replication *always* logs only the
    modified parts of the JSON document, regardless of any value set for `binlog_row_value_options`.
    To maximize the amount of space saved, use [`binlog_row_image=NOBLOB`](replication-options-binary-log.html#sysvar_binlog_row_image)
    or `binlog_row_image=MINIMAL` together with this option. `binlog_row_image=FULL`
    saves less space than either of these, since the full JSON document is stored
    in the before-image, and the partial update is stored only in the after-image.'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`binlog_row_value_options=PARTIAL_JSON`仅在启用二进制日志记录且[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)设置为`ROW`或`MIXED`时生效。基于语句的复制*始终*仅记录JSON文档的修改部分，而不管为`binlog_row_value_options`设置了任何值。为了最大化节省的空间量，请与此选项一起使用[`binlog_row_image=NOBLOB`](replication-options-binary-log.html#sysvar_binlog_row_image)或`binlog_row_image=MINIMAL`。`binlog_row_image=FULL`保存的空间比这两者少，因为完整的JSON文档存储在前图像中，而部分更新仅存储在后图像中。'
- en: '[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility for Processing
    Binary Log Files") output includes partial JSON updates in the form of events
    encoded as base-64 strings using [`BINLOG`](binlog.html "15.7.8.1 BINLOG Statement")
    statements. If the [`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)
    option is specified, [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility
    for Processing Binary Log Files") displays the partial JSON updates as readable
    JSON using pseudo-SQL statements.'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — 用于处理二进制日志文件的实用程序")输出包括以使用[`BINLOG`](binlog.html
    "15.7.8.1 BINLOG语句")语句编码为base-64字符串的事件形式的部分JSON更新。如果指定了[`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)选项，[**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — 用于处理二进制日志文件的实用程序")将以可读的JSON形式使用伪SQL语句显示部分JSON更新。'
- en: MySQL Replication generates an error if a modification cannot be applied to
    the JSON document on the replica. This includes a failure to find the path. Be
    aware that, even with this and other safety checks, if a JSON document on a replica
    has diverged from that on the source and a partial update is applied, it remains
    theoretically possible to produce a valid but unexpected JSON document on the
    replica.
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL复制在副本上无法应用修改到JSON文档时会生成错误。这包括找不到路径的情况。请注意，即使有此类和其他安全检查，如果副本上的JSON文档与源上的不同，并且应用了部分更新，仍然存在在副本上生成有效但意外的JSON文档的理论可能性。
- en: '`binlog_rows_query_log_events`'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`binlog_rows_query_log_events`'
- en: '| Command-Line Format | `--binlog-rows-query-log-events[={OFF&#124;ON}]` |'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-rows-query-log-events[={OFF&#124;ON}]` |'
- en: '| System Variable | `[binlog_rows_query_log_events](replication-options-binary-log.html#sysvar_binlog_rows_query_log_events)`
    |'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_rows_query_log_events](replication-options-binary-log.html#sysvar_binlog_rows_query_log_events)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: This system variable affects row-based logging only. When enabled, it causes
    the server to write informational log events such as row query log events into
    its binary log. This information can be used for debugging and related purposes,
    such as obtaining the original query issued on the source when it cannot be reconstructed
    from the row updates.
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量仅影响基于行的日志记录。启用时，会导致服务器将信息性日志事件（如行查询日志事件）写入其二进制日志中。此信息可用于调试和相关目的，例如在无法从行更新中重建时获取源上发出的原始查询。
- en: Setting the session value of this system variable is a restricted operation.
    The session user must have privileges sufficient to set restricted session variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此系统变量的会话值是受限制的操作。会话用户必须具有足够权限来设置受限制的会话变量。请参阅[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: These informational events are normally ignored by MySQL programs reading the
    binary log and so cause no issues when replicating or restoring from backup. To
    view them, increase the verbosity level by using mysqlbinlog's [`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)
    option twice, either as `-vv` or `--verbose --verbose`.
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些信息事件通常被MySQL程序忽略，读取二进制日志时不会引起任何问题，因此在复制或从备份中恢复时也不会有问题。要查看它们，请通过使用mysqlbinlog的[`--verbose`](mysqlbinlog.html#option_mysqlbinlog_verbose)选项两次增加详细程度，可以是`-vv`或`--verbose
    --verbose`。
- en: '[`binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_binlog_stmt_cache_size)'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_binlog_stmt_cache_size)
    |'
- en: '| Command-Line Format | `--binlog-stmt-cache-size=#` |'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-stmt-cache-size=#` |'
- en: '| System Variable | `[binlog_stmt_cache_size](replication-options-binary-log.html#sysvar_binlog_stmt_cache_size)`
    |'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_stmt_cache_size](replication-options-binary-log.html#sysvar_binlog_stmt_cache_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `32768` |'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `32768` |'
- en: '| Minimum Value | `4096` |'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `4096` |'
- en: '| Maximum Value (64-bit platforms) | `18446744073709547520` |'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `18446744073709547520` |'
- en: '| Maximum Value (32-bit platforms) | `4294963200` |'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `4294963200` |'
- en: '| Unit | bytes |'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `4096` |'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `4096`
    |'
- en: The size of the memory buffer for the binary log to hold nontransactional statements
    issued during a transaction.
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于二进制日志的内存缓冲区大小，用于保存在事务期间发出的非事务性语句。
- en: When binary logging is enabled on the server (with the [`log_bin`](replication-options-binary-log.html#sysvar_log_bin)
    system variable set to ON), separate binary log transaction and statement caches
    are allocated for each client if the server supports any transactional storage
    engines. If the data for the nontransactional statements used in the transaction
    exceeds the space in the memory buffer, the excess data is stored in a temporary
    file. When binary log encryption is active on the server, the memory buffer is
    not encrypted, but (from MySQL 8.0.17) any temporary file used to hold the binary
    log cache is encrypted. After each transaction is committed, the binary log statement
    cache is reset by clearing the memory buffer and truncating the temporary file
    if used.
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当服务器上启用了二进制日志记录（使用[`log_bin`](replication-options-binary-log.html#sysvar_log_bin)系统变量设置为ON），如果服务器支持任何事务存储引擎，则为每个客户端分配单独的二进制日志事务和语句缓存。如果事务中使用的非事务性语句的数据超过内存缓冲区中的空间，则多余的数据将存储在临时文件中。当服务器上激活二进制日志加密时，内存缓冲区不加密，但（从MySQL
    8.0.17开始）用于保存二进制日志缓存的任何临时文件是加密的。在每个事务提交后，通过清除内存缓冲区并截断使用的临时文件来重置二进制日志语句缓存。
- en: If you often use large nontransactional statements during transactions, you
    can increase this cache size to get better performance by reducing or eliminating
    the need to write to temporary files. The [`Binlog_stmt_cache_use`](server-status-variables.html#statvar_Binlog_stmt_cache_use)
    and [`Binlog_stmt_cache_disk_use`](server-status-variables.html#statvar_Binlog_stmt_cache_disk_use)
    status variables can be useful for tuning the size of this variable. See [Section 7.4.4,
    “The Binary Log”](binary-log.html "7.4.4 The Binary Log").
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您在事务中经常使用大型非事务性语句，可以增加此缓存大小以通过减少或消除写入临时文件的需求来获得更好的性能。[`Binlog_stmt_cache_use`](server-status-variables.html#statvar_Binlog_stmt_cache_use)和[`Binlog_stmt_cache_disk_use`](server-status-variables.html#statvar_Binlog_stmt_cache_disk_use)状态变量可用于调整此变量的大小。请参阅[第7.4.4节，“二进制日志”](binary-log.html
    "7.4.4 二进制日志")。
- en: The [`binlog_cache_size`](replication-options-binary-log.html#sysvar_binlog_cache_size)
    system variable sets the size for the transaction cache.
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`binlog_cache_size`](replication-options-binary-log.html#sysvar_binlog_cache_size)系统变量设置事务缓存的大小。'
- en: '[`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)'
- en: '| Command-Line Format | `--binlog-transaction-compression[={OFF&#124;ON}]`
    |'
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-transaction-compression[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.20 |'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.20 |'
- en: '| System Variable | `[binlog_transaction_compression](replication-options-binary-log.html#sysvar_binlog_transaction_compression)`
    |'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_transaction_compression](replication-options-binary-log.html#sysvar_binlog_transaction_compression)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: Enables compression for transactions that are written to binary log files on
    this server. `OFF` is the default. Use the [`binlog_transaction_compression_level_zstd`](replication-options-binary-log.html#sysvar_binlog_transaction_compression_level_zstd)
    system variable to set the level for the zstd algorithm that is used for compression.
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用对在此服务器上写入二进制日志文件的事务的压缩。`OFF`是默认设置。使用[`binlog_transaction_compression_level_zstd`](replication-options-binary-log.html#sysvar_binlog_transaction_compression_level_zstd)系统变量设置用于压缩的zstd算法级别。
- en: When binary log transaction compression is enabled, transaction payloads are
    compressed and then written to the binary log file as a single event (`Transaction_payload_event`).
    Compressed transaction payloads remain in a compressed state while they are sent
    in the replication stream to replicas, other Group Replication group members,
    or clients such as [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility
    for Processing Binary Log Files"), and are written to the relay log still in their
    compressed state. Binary log transaction compression therefore saves storage space
    both on the originator of the transaction and on the recipient (and for their
    backups), and saves network bandwidth when the transactions are sent between server
    instances.
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用二进制日志事务压缩后，事务负载将被压缩，然后作为单个事件(`Transaction_payload_event`)写入二进制日志文件。压缩的事务负载在发送到副本、其他Group
    Replication组成员或诸如[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — 用于处理二进制日志文件的实用程序")等客户端时仍保持压缩状态，并且在中继日志中仍以压缩状态写入。因此，二进制日志事务压缩既节省了事务发起者和接收者（以及它们的备份）的存储空间，又在服务器实例之间发送事务时节省了网络带宽。
- en: For `binlog_transaction_compression=ON` to have a direct effect, binary logging
    must be enabled on the server. When a MySQL server instance has no binary log,
    if it is at a release from MySQL 8.0.20, it can receive, handle, and display compressed
    transaction payloads regardless of its value for [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression).
    Compressed transaction payloads received by such server instances are written
    in their compressed state to the relay log, so they benefit indirectly from compression
    carried out by other servers in the replication topology.
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使`binlog_transaction_compression=ON`直接生效，必须在服务器上启用二进制日志记录。当MySQL服务器实例没有二进制日志时，如果它是从MySQL
    8.0.20版本开始的，它可以接收、处理和显示压缩的事务负载，而不管其对[`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)的值如何。这些服务器实例接收的压缩事务负载以压缩状态写入中继日志，因此它们间接受益于复制拓扑中其他服务器执行的压缩。
- en: This system variable cannot be changed within the context of a transaction.
    Setting the session value of this system variable is a restricted operation. The
    session user must have privileges sufficient to set restricted session variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量在事务上下文中无法更改。设置此系统变量的会话值是受限操作。会话用户必须具有足够权限来设置受限会话变量。请参见[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: For more information on binary log transaction compression, including details
    of what events are and are not compressed, and changes in behavior when transaction
    compression is in use, see [Section 7.4.4.5, “Binary Log Transaction Compression”](binary-log-transaction-compression.html
    "7.4.4.5 Binary Log Transaction Compression").
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关二进制日志事务压缩的更多信息，包括哪些事件被压缩，哪些事件不被压缩，以及在使用事务压缩时行为的变化，请参见[第7.4.4.5节，“二进制日志事务压缩”](binary-log-transaction-compression.html
    "7.4.4.5 二进制日志事务压缩")。
- en: '*Prior to NDB 8.0.31*: Setting this variable when the server is running has
    no effect on logging of transactions on [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") tables. Binary log transaction compression can be enabled for
    `NDB` tables by starting MySQL with [`--binlog-transaction-compression=ON`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    on the command line or in an option file but cannot be enabled or disabled while
    the server is running.'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*在NDB 8.0.31之前*：在服务器运行时设置此变量对[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster
    8.0")表的事务日志记录没有影响。可以通过在命令行或选项文件中启动MySQL时使用[`--binlog-transaction-compression=ON`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)来为`NDB`表启用二进制日志事务压缩，但不能在服务器运行时启用或禁用。'
- en: '*In NDB 8.0.31 and later*: You can use the [`ndb_log_transaction_compression`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression)
    system variable to enable this feature for `NDB`. In addition, setting `--binlog-transaction-compression=ON`
    on the command line or in a `my.cnf` file causes `ndb_log_transaction_compression`
    to be enabled on server startup. See the description of the variable for further
    information.'
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*在 NDB 8.0.31 及更高版本中*：您可以使用[`ndb_log_transaction_compression`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression)系统变量来为`NDB`启用此功能。此外，在命令行或`my.cnf`文件中设置`--binlog-transaction-compression=ON`会导致在服务器启动时启用`ndb_log_transaction_compression`。有关该变量的详细信息，请参阅变量的描述。'
- en: '[`binlog_transaction_compression_level_zstd`](replication-options-binary-log.html#sysvar_binlog_transaction_compression_level_zstd)'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_transaction_compression_level_zstd`](replication-options-binary-log.html#sysvar_binlog_transaction_compression_level_zstd)'
- en: '| Command-Line Format | `--binlog-transaction-compression-level-zstd=#` |'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-transaction-compression-level-zstd=#` |'
- en: '| Introduced | 8.0.20 |'
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入 | 8.0.20 |'
- en: '| System Variable | `[binlog_transaction_compression_level_zstd](replication-options-binary-log.html#sysvar_binlog_transaction_compression_level_zstd)`
    |'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_transaction_compression_level_zstd](replication-options-binary-log.html#sysvar_binlog_transaction_compression_level_zstd)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `3` |'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `3` |'
- en: '| Minimum Value | `1` |'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `22` |'
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `22` |'
- en: Sets the compression level for binary log transaction compression on this server,
    which is enabled by the [`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)
    system variable. The value is an integer that determines the compression effort,
    from 1 (the lowest effort) to 22 (the highest effort). If you do not specify this
    system variable, the compression level is set to 3.
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此服务器上的二进制日志事务压缩级别，该功能由[`binlog_transaction_compression`](replication-options-binary-log.html#sysvar_binlog_transaction_compression)系统变量启用。该值是一个整数，确定压缩工作量，从
    1（最低工作量）到 22（最高工作量）。如果不指定此系统变量，则压缩级别设置为 3。
- en: As the compression level increases, the data compression ratio increases, which
    reduces the storage space and network bandwidth required for the transaction payload.
    However, the effort required for data compression also increases, taking time
    and CPU and memory resources on the originating server. Increases in the compression
    effort do not have a linear relationship to increases in the data compression
    ratio.
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随着压缩级别的增加，数据压缩比例增加，从而减少了事务负载所需的存储空间和网络带宽。然而，数据压缩所需的工作量也会增加，消耗源服务器上的时间、CPU 和内存资源。压缩工作量的增加与数据压缩比例的增加之间并没有线性关系。
- en: This system variable cannot be changed within the context of a transaction.
    Setting the session value of this system variable is a restricted operation. The
    session user must have privileges sufficient to set restricted session variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量不能在事务上下文中更改。设置此系统变量的会话值是一项受限制的操作。会话用户必须具有足够权限来设置受限制的会话变量。请参阅[第 7.1.9.1
    节，“系统变量权限”](system-variable-privileges.html "7.1.9.1 系统变量权限")。
- en: This variable has no effect on logging of transactions on [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") tables; in NDB Cluster 8.0.31 and later, you
    can use [`ndb_log_transaction_compression_level_zstd`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression_level_zstd)
    instead.
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量对[`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0")表的事务日志记录没有影响；在
    NDB Cluster 8.0.31 及更高版本中，您可以改用[`ndb_log_transaction_compression_level_zstd`](mysql-cluster-options-variables.html#sysvar_ndb_log_transaction_compression_level_zstd)。
- en: '[`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)'
- en: '| Command-Line Format | `--binlog-transaction-dependency-tracking=value` |'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-transaction-dependency-tracking=value` |'
- en: '| Deprecated | 8.0.35 |'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.35 |'
- en: '| System Variable | `[binlog_transaction_dependency_tracking](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)`
    |'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_transaction_dependency_tracking](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)`
    |'
- en: '| Scope | Global |'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `COMMIT_ORDER` |'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `COMMIT_ORDER` |'
- en: '| Valid Values | `COMMIT_ORDER``WRITESET``WRITESET_SESSION` |'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `COMMIT_ORDER``WRITESET``WRITESET_SESSION` |'
- en: For a replication source server that has multithreaded replicas (replicas on
    which [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is is greater than 0), `binlog_transaction_dependency_tracking` specifies how
    the source [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") generates
    the dependency information that it writes in the binary log to help replicas determine
    which transactions can be executed in parallel.
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于具有多线程副本的复制源服务器（副本上的[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)大于0），`binlog_transaction_dependency_tracking`指定源[**mysqld**](mysqld.html
    "6.3.1 mysqld — MySQL服务器")生成的依赖信息的方式，该信息写入二进制日志以帮助副本确定哪些事务可以并行执行。
- en: 'The dependency information written by the replication source is represented
    using logical timestamps. (Thus, setting this variable requires that [`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)
    or [`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)
    already be set to `LOGICAL_CLOCK`.) There are two logical timestamps, listed here,
    for each transaction:'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 复制源写入的依赖信息使用逻辑时间戳表示。（因此，设置此变量要求[`replica_parallel_type`](replication-options-replica.html#sysvar_replica_parallel_type)或[`slave_parallel_type`](replication-options-replica.html#sysvar_slave_parallel_type)已设置为`LOGICAL_CLOCK`。）每个事务有两个逻辑时间戳，如下所示：
- en: '`sequence_number`: This is 1 for the first transaction in a given binary log,
    2 for the second transaction, and so on. The numbering restarts with 1 in each
    binary log file.'
  id: totrans-438
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sequence_number`：对于给定二进制日志中的第一个事务，此值为1，对于第二个事务为2，依此类推。每个二进制日志文件中的编号重新从1开始。'
- en: '`last_committed`: This refers to the `sequence_number` of the most recently
    committed transaction found to conflict with the current transaction. This value
    is always less than `sequence_number`.'
  id: totrans-439
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`last_committed`：这指的是与当前事务发生冲突的最近提交事务的`sequence_number`。此值始终小于`sequence_number`。'
- en: '`binlog_transaction_dependency_tracking` controls the choice of scheme used
    to compute these logical timestamps. Available choices are listed here:'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`binlog_transaction_dependency_tracking`控制用于计算这些逻辑时间戳的方案的选择。可用选择如下：'
- en: '`COMMIT_ORDER`: Two transactions are considered to be independent if the commit-time
    window of the first transaction overlaps with the commit-time window of the second
    transaction. This the default.'
  id: totrans-441
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`COMMIT_ORDER`：如果第一个事务的提交时间窗口与第二个事务的提交时间窗口重叠，则认为两个事务是独立的。这是默认值。'
- en: The commit-time window begins immediately following the execution of the last
    statement of the transaction, and ends immediately after the storage engine commit
    ends. Since transactions hold all row locks between these two points in time,
    we know that they cannot update the same rows.
  id: totrans-442
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提交时间窗口从事务的最后一条语句执行后立即开始，并在存储引擎提交结束后立即结束。由于事务在这两个时间点之间持有所有行锁，我们知道它们不会更新相同的行。
- en: '`WRITESET`: Logical timestamps are computed based on `COMMIT_ORDER` in combination
    with a second scheme based on write sets for the transaction. Each row in the
    transaction adds a set of one or more hashes to the transaction''s write set,
    one of each unique key in the row. (If there are no unique, nonnullable keys,
    a hash of the row is used.) This includes both deleted and inserted rows; for
    updated rows, both the old and the new row are also included.'
  id: totrans-443
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WRITESET`：逻辑时间戳基于`COMMIT_ORDER`与基于事务的写入集的第二方案的组合计算。事务中的每一行都向事务的写入集添加一个或多个哈希集，每个唯一键在行中都有一个。
    （如果没有唯一的非空键，则使用行的哈希。）这包括已删除和已插入的行；对于更新的行，旧行和新行也包括在内。'
- en: Two transactions are considered conflicting if their write sets overlap—that
    is, if there is some number (hash) that occurs in the write sets of both transactions.
    In addition, due to the way the write sets are computed, there are periodic serialization
    points, such that the write set computation process regards every transaction
    after a serialization point as conflicting with every transaction before the serialization
    point. Serialization points affect only dependencies computed by the `WRITESET`
    algorithm; transactions on opposite sides of the serialization point may have
    overlapping commit-time windows, and so can be parallelized on replica in spite
    of this. Serialization points occur for DDL statements, for transactions updating
    a table having a foreign key, and for transactions where the session value of
    [`transaction_write_set_extraction`](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)
    is not the same as the global value. A serialization point is also imposed if
    the transactions committed since the previous serialization point have generated
    a total of at least [`binlog_transaction_dependency_history_size`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_history_size)
    unique hashes.
  id: totrans-444
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果两个事务的写入集重叠，即两个事务的写入集中存在相同的某个数字（哈希），则认为这两个事务存在冲突。此外，由于写入集的计算方式，存在周期性的序列化点，使得写入集计算过程将序列化点之后的每个事务视为与序列化点之前的每个事务存在冲突。序列化点仅影响`WRITESET`算法计算的依赖关系；序列化点两侧的事务可能具有重叠的提交时间窗口，因此尽管如此，在副本上可以并行化。DDL语句、更新具有外键的表的事务以及会话值与全局值不同的[`transaction_write_set_extraction`](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)的事务会触发序列化点。如果自上一个序列化点以来提交的事务生成了至少[`binlog_transaction_dependency_history_size`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_history_size)个唯一哈希，则还会强制执行序列化点。
- en: For multithreaded replicas to work with NDB Cluster replication (supported in
    NDB 8.0.33 and later), this variable must be set to `WRITESET` on the source.
    See [Section 25.7.11, “NDB Cluster Replication Using the Multithreaded Applier”](mysql-cluster-replication-mta.html
    "25.7.11 NDB Cluster Replication Using the Multithreaded Applier"), for more information.
  id: totrans-445
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了使多线程复制与NDB集群复制一起工作（NDB 8.0.33及更高版本支持），源端必须将此变量设置为`WRITESET`。有关更多信息，请参见[第25.7.11节，“使用多线程应用程序的NDB集群复制”](mysql-cluster-replication-mta.html
    "25.7.11 NDB Cluster Replication Using the Multithreaded Applier")。
- en: '`WRITESET_SESSION`: Two transactions are considered dependent if either of
    the following statements is true:'
  id: totrans-446
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WRITESET_SESSION`: 如果以下任一语句为真，则认为两个事务存在依赖关系：'
- en: The transactions are dependent according to `WRITESET`.
  id: totrans-447
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事务根据`WRITESET`存在依赖关系。
- en: The transactions were committed in the same user session.
  id: totrans-448
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事务在同一用户会话中提交。
- en: In `WRITESET` or `WRITESET_SESSION` mode, the source uses `COMMIT_ORDER` to
    generate dependency information for transactions that have empty or partial write
    sets, transactions that update tables without primary or unique keys, and transactions
    that update parent tables in a foreign key relationship.
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在`WRITESET`或`WRITESET_SESSION`模式下，源端使用`COMMIT_ORDER`为具有空或部分写入集的事务、更新没有主键或唯一键的表的事务以及更新外键关系中的父表的事务生成依赖信息。
- en: To set `binlog_transaction_dependency_tracking` to `WRITESET` or `WRITESET_SESSION`,
    [`transaction_write_set_extraction`](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)
    must be set to a value other than `OFF`; the default value (`XXHASH64`) is sufficient
    for this. `transaction_write_set_extraction` cannot be changed whenever the value
    of `binlog_transaction_dependency_tracking` is `WRITESET` or `WRITESET_SESSION`.
    Any change in the value does not take effect for replicated transactions until
    after the replica has been stopped and restarted with [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") and [`START REPLICA`](start-replica.html "15.4.2.6 START
    REPLICA Statement").
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要将`binlog_transaction_dependency_tracking`设置为`WRITESET`或`WRITESET_SESSION`，必须将[`transaction_write_set_extraction`](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)设置为`OFF`之外的值；默认值（`XXHASH64`）已足够。只要`binlog_transaction_dependency_tracking`的值为`WRITESET`或`WRITESET_SESSION`，就无法更改`transaction_write_set_extraction`。对于复制事务，任何值的更改在副本停止并使用[`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA Statement")和[`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA Statement")重新启动后才会生效。
- en: The number of row hashes to be kept and checked for the latest transaction to
    have changed a given row is determined by the value of [`binlog_transaction_dependency_history_size`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_history_size).
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保留并检查最新事务更改给定行的行哈希数由[`binlog_transaction_dependency_history_size`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_history_size)的值确定。
- en: Group Replication carries out its own parallelization after certification when
    applying transactions from the relay log, independently of any value set for `binlog_transaction_dependency_tracking`,
    but this variable does affect how transactions are written to the binary logs
    on Group Replication members. The dependency information in those logs is used
    to assist the process of state transfer from a donor's binary log for distributed
    recovery, which takes place whenever a member joins or rejoins the group. For
    that process, setting `binlog_transaction_dependency_tracking` to `WRITESET` can
    improve performance for a group member, depending on the group's workload.
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在从中继日志应用事务时，组复制在认证后执行自己的并行化，独立于为`binlog_transaction_dependency_tracking`设置的任何值，但是该变量确实影响事务如何写入组复制成员的二进制日志。这些日志中的依赖信息用于协助从捐赠者的二进制日志进行状态传输的过程，该过程在成员加入或重新加入组时发生。对于该过程，将`binlog_transaction_dependency_tracking`设置为`WRITESET`可以根据组的工作负载提高组成员的性能。
- en: '[`binlog_transaction_dependency_history_size`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_history_size)'
  id: totrans-453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`binlog_transaction_dependency_history_size`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_history_size)'
- en: '| Command-Line Format | `--binlog-transaction-dependency-history-size=#` |'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--binlog-transaction-dependency-history-size=#` |'
- en: '| System Variable | `[binlog_transaction_dependency_history_size](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_history_size)`
    |'
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[binlog_transaction_dependency_history_size](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_history_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Integer |'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `25000` |'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `25000` |'
- en: '| Minimum Value | `1` |'
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `1` |'
- en: '| Maximum Value | `1000000` |'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1000000` |'
- en: Sets an upper limit on the number of row hashes which are kept in memory and
    used for looking up the transaction that last modified a given row. Once this
    number of hashes has been reached, the history is purged.
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置在内存中保留并用于查找最后修改给定行的事务的行哈希数的上限。一旦达到这个哈希数，历史记录将被清除。
- en: '[`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)'
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)'
- en: '| Command-Line Format | `--expire-logs-days=#` |'
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--expire-logs-days=#` |'
- en: '| Deprecated | Yes |'
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 是 |'
- en: '| System Variable | `[expire_logs_days](replication-options-binary-log.html#sysvar_expire_logs_days)`
    |'
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[expire_logs_days](replication-options-binary-log.html#sysvar_expire_logs_days)`
    |'
- en: '| Scope | Global |'
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | 否 |'
- en: '| Type | Integer |'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `0` |'
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `0` |'
- en: '| Minimum Value | `0` |'
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `99` |'
  id: totrans-474
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `99` |'
- en: '| Unit | days |'
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 天 |'
- en: Specifies the number of days before automatic removal of binary log files. [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    is deprecated, and you should expect it to be removed in a future release. Instead,
    use [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds),
    which sets the binary log expiration period in seconds. If you do not set a value
    for either system variable, the default expiration period is 30 days. Possible
    removals happen at startup and when the binary log is flushed. Log flushing occurs
    as indicated in [Section 7.4, “MySQL Server Logs”](server-logs.html "7.4 MySQL
    Server Logs").
  id: totrans-476
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '指定自动删除二进制日志文件之前的天数。[`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)已弃用，您应该期望在将来的版本中将其删除。相反，请使用[`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)，它以秒为单位设置二进制日志过期期限。如果您没有为任何系统变量设置值，则默认的过期期限为30天。可能的删除发生在启动时和二进制日志刷新时。如[第7.4节，“MySQL服务器日志”](server-logs.html
    "7.4 MySQL Server Logs")中所示，日志刷新发生。 '
- en: Any non-zero value that you specify at startup for [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    is ignored if [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    is also specified, and the value of [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    is used instead as the binary log expiration period. A warning message is issued
    in this situation. A non-zero startup value for [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    is only applied as the binary log expiration period if [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    is not specified or is specified as 0.
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在启动时为 [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    指定了任何非零值，并且同时指定了 [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)，则忽略该值，并使用
    [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    作为二进制日志过期期限。在这种情况下会发出警告消息。只有在未指定或指定为 0 时，启动时为 [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    指定的非零值才会作为二进制日志过期期限。
- en: At runtime, you cannot set [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    or [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    to a non-zero value if the other is currently set to a non-zero value. Because
    the default value for [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    is non-zero, you must explicitly set [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    to zero before you can set or change the value of [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days).
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在运行时，如果另一个值已经被设置为非零值，你不能将 [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    或 [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    设置为非零值。因为 [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    的默认值为非零，所以你必须在设置或更改 [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    的值之前，显式将 [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    设置为零。
- en: To disable automatic purging of the binary log, specify a value of 0 explicitly
    for [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds),
    and do not specify a value for [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days).
    For compatibility with earlier releases, automatic purging is also disabled if
    you specify a value of 0 explicitly for [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    and do not specify a value for [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds).
    In that case, the default for [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    is not applied.
  id: totrans-479
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要禁用二进制日志的自动清理，请明确为 [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    指定值为 0，并且不为 [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    指定值。为了与早期版本兼容，如果明确为 [`expire_logs_days`](replication-options-binary-log.html#sysvar_expire_logs_days)
    指定值为 0，并且不为 [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    指定值，则自动清理也会被禁用。在这种情况下，不会应用 [`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)
    的默认值。
- en: To remove binary log files manually, use the [`PURGE BINARY LOGS`](purge-binary-logs.html
    "15.4.1.1 PURGE BINARY LOGS Statement") statement. See [Section 15.4.1.1, “PURGE
    BINARY LOGS Statement”](purge-binary-logs.html "15.4.1.1 PURGE BINARY LOGS Statement").
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要手动删除二进制日志文件，请使用 [`PURGE BINARY LOGS`](purge-binary-logs.html "15.4.1.1 PURGE
    BINARY LOGS 语句") 语句。参见 [Section 15.4.1.1, “PURGE BINARY LOGS 语句”](purge-binary-logs.html
    "15.4.1.1 PURGE BINARY LOGS 语句")。
- en: '[`log_bin`](replication-options-binary-log.html#sysvar_log_bin)'
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_bin`](replication-options-binary-log.html#sysvar_log_bin)'
- en: '| System Variable | `[log_bin](replication-options-binary-log.html#sysvar_log_bin)`
    |'
  id: totrans-482
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_bin](replication-options-binary-log.html#sysvar_log_bin)` |'
- en: '| Scope | Global |'
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 是否动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: Shows the status of binary logging on the server, either enabled (`ON`) or disabled
    (`OFF`). With binary logging enabled, the server logs all statements that change
    data to the binary log, which is used for backup and replication. `ON` means that
    the binary log is available, `OFF` means that it is not in use. The [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    option can be used to specify a base name and location for the binary log.
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示服务器上二进制日志记录的状态，可以是启用（`ON`）或禁用（`OFF`）。启用二进制日志记录后，服务器会记录所有更改数据的语句到二进制日志中，用于备份和复制。`ON`表示二进制日志可用，`OFF`表示未使用。可以使用[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)选项指定二进制日志的基本名称和位置。
- en: In earlier MySQL versions, binary logging was disabled by default, and was enabled
    if you specified the `--log-bin` option. From MySQL 8.0, binary logging is enabled
    by default, with the `log_bin` system variable set to `ON`, whether or not you
    specify the `--log-bin` option. The exception is if you use [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server") to initialize the data directory manually by
    invoking it with the `--initialize` or `--initialize-insecure` option, when binary
    logging is disabled by default. It is possible to enable binary logging in this
    case by specifying the `--log-bin` option.
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在早期的MySQL版本中，默认情况下禁用了二进制日志记录，只有在指定`--log-bin`选项时才启用。从MySQL 8.0开始，默认情况下启用了二进制日志记录，无论是否指定了`--log-bin`选项，`log_bin`系统变量都设置为`ON`。唯一的例外是，如果您使用[**mysqld**](mysqld.html
    "6.3.1 mysqld — MySQL服务器")手动初始化数据目录，通过使用`--initialize`或`--initialize-insecure`选项，此时默认情况下禁用了二进制日志记录。在这种情况下，可以通过指定`--log-bin`选项来启用二进制日志记录。
- en: If the [`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    or [`--disable-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    option is specified at startup, binary logging is disabled, with the `log_bin`
    system variable set to `OFF`. If either of these options is specified and `--log-bin`
    is also specified, the option specified later takes precedence.
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在启动时指定了[`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)或[`--disable-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)选项，则禁用二进制日志记录，`log_bin`系统变量设置为`OFF`。如果同时指定了其中任何一个选项和`--log-bin`选项，则后面指定的选项优先。
- en: For information on the format and management of the binary log, see [Section 7.4.4,
    “The Binary Log”](binary-log.html "7.4.4 The Binary Log").
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关二进制日志的格式和管理信息，请参阅[第7.4.4节，“二进制日志”](binary-log.html "7.4.4 二进制日志")。
- en: '[`log_bin_basename`](replication-options-binary-log.html#sysvar_log_bin_basename)'
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_bin_basename`](replication-options-binary-log.html#sysvar_log_bin_basename)'
- en: '| System Variable | `[log_bin_basename](replication-options-binary-log.html#sysvar_log_bin_basename)`
    |'
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_bin_basename](replication-options-binary-log.html#sysvar_log_bin_basename)`
    |'
- en: '| Scope | Global |'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-494
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | File name |'
  id: totrans-496
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: Holds the base name and path for the binary log files, which can be set with
    the [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin) server
    option. The maximum variable length is 256\. In MySQL 8.0, if the `--log-bin`
    option is not supplied, the default base name is `binlog`. For compatibility with
    MySQL 5.7, if the `--log-bin` option is supplied with no string or with an empty
    string, the default base name is `*`host_name`*-bin`, using the name of the host
    machine. The default location is the data directory.
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储二进制日志文件的基本名称和路径，可以使用[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)服务器选项进行设置。变量的最大长度为256。在MySQL
    8.0中，如果未提供`--log-bin`选项，则默认基本名称为`binlog`。为了与MySQL 5.7兼容，如果提供了`--log-bin`选项但没有字符串或为空字符串，则默认基本名称为`*`host_name`*-bin`，使用主机机器的名称。默认位置是数据目录。
- en: '[`log_bin_index`](replication-options-binary-log.html#sysvar_log_bin_index)'
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_bin_index`](replication-options-binary-log.html#sysvar_log_bin_index)'
- en: '| Command-Line Format | `--log-bin-index=file_name` |'
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-bin-index=file_name` |'
- en: '| System Variable | `[log_bin_index](replication-options-binary-log.html#sysvar_log_bin_index)`
    |'
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_bin_index](replication-options-binary-log.html#sysvar_log_bin_index)`
    |'
- en: '| Scope | Global |'
  id: totrans-501
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-502
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-503
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | File name |'
  id: totrans-504
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 文件名 |'
- en: Holds the base name and path for the binary log index file, which can be set
    with the [`--log-bin-index`](replication-options-binary-log.html#option_mysqld_log-bin-index)
    server option. The maximum variable length is 256.
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保存二进制日志索引文件的基本名称和路径，可以使用 [`--log-bin-index`](replication-options-binary-log.html#option_mysqld_log-bin-index)
    服务器选项进行设置。变量长度最大为 256。
- en: '[`log_bin_trust_function_creators`](replication-options-binary-log.html#sysvar_log_bin_trust_function_creators)'
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_bin_trust_function_creators`](replication-options-binary-log.html#sysvar_log_bin_trust_function_creators)'
- en: '| Command-Line Format | `--log-bin-trust-function-creators[={OFF&#124;ON}]`
    |'
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-bin-trust-function-creators[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.34 |'
  id: totrans-508
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.34 |'
- en: '| System Variable | `[log_bin_trust_function_creators](replication-options-binary-log.html#sysvar_log_bin_trust_function_creators)`
    |'
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_bin_trust_function_creators](replication-options-binary-log.html#sysvar_log_bin_trust_function_creators)`
    |'
- en: '| Scope | Global |'
  id: totrans-510
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-514
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: This variable applies when binary logging is enabled. It controls whether stored
    function creators can be trusted not to create stored functions that may cause
    unsafe events to be written to the binary log. If set to 0 (the default), users
    are not permitted to create or alter stored functions unless they have the [`SUPER`](privileges-provided.html#priv_super)
    privilege in addition to the [`CREATE ROUTINE`](privileges-provided.html#priv_create-routine)
    or [`ALTER ROUTINE`](privileges-provided.html#priv_alter-routine) privilege. A
    setting of 0 also enforces the restriction that a function must be declared with
    the `DETERMINISTIC` characteristic, or with the `READS SQL DATA` or `NO SQL` characteristic.
    If the variable is set to 1, MySQL does not enforce these restrictions on stored
    function creation. This variable also applies to trigger creation. See [Section 27.7,
    “Stored Program Binary Logging”](stored-programs-logging.html "27.7 Stored Program
    Binary Logging").
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量在启用二进制日志记录时应用。它控制存储函数创建者是否可信，不会创建可能导致不安全事件写入二进制日志的存储函数。如果设置为 0（默认值），除了具有
    [`SUPER`](privileges-provided.html#priv_super) 权限外，用户不允许创建或更改存储函数，还必须具有 [`CREATE
    ROUTINE`](privileges-provided.html#priv_create-routine) 或 [`ALTER ROUTINE`](privileges-provided.html#priv_alter-routine)
    权限。设置为 0 还强制要求函数必须声明具有 `DETERMINISTIC` 特性，或具有 `READS SQL DATA` 或 `NO SQL` 特性。如果将变量设置为
    1，则 MySQL 不会强制执行这些限制以创建存储函数。此变量还适用于触发器创建。请参阅 [第 27.7 节，“存储程序二进制日志记录”](stored-programs-logging.html
    "27.7 存储程序二进制日志记录")。
- en: '[`log_bin_use_v1_row_events`](replication-options-binary-log.html#sysvar_log_bin_use_v1_row_events)'
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_bin_use_v1_row_events`](replication-options-binary-log.html#sysvar_log_bin_use_v1_row_events)'
- en: '| Command-Line Format | `--log-bin-use-v1-row-events[={OFF&#124;ON}]` |'
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-bin-use-v1-row-events[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.18 |'
  id: totrans-518
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.18 |'
- en: '| System Variable | `[log_bin_use_v1_row_events](replication-options-binary-log.html#sysvar_log_bin_use_v1_row_events)`
    |'
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_bin_use_v1_row_events](replication-options-binary-log.html#sysvar_log_bin_use_v1_row_events)`
    |'
- en: '| Scope | Global |'
  id: totrans-520
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-524
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: This read-only system variable is deprecated. Setting the system variable to
    `ON` at server startup enabled row-based replication with replicas running MySQL
    Server 5.5 and earlier by writing the binary log using Version 1 binary log row
    events, instead of Version 2 binary log row events which are the default as of
    MySQL 5.6.
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此只读系统变量已弃用。在服务器启动时将系统变量设置为`ON`，通过使用 Version 1 二进制日志行事件而不是 MySQL 5.6 默认的 Version
    2 二进制日志行事件，启用了与运行 MySQL Server 5.5 及更早版本的副本机器进行基于行的复制。
- en: '[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)'
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)'
- en: '| Command-Line Format | `--log-replica-updates[={OFF&#124;ON}]` |'
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-replica-updates[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-528
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入 | 8.0.26 |'
- en: '| System Variable | `[log_replica_updates](replication-options-binary-log.html#sysvar_log_replica_updates)`
    |'
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_replica_updates](replication-options-binary-log.html#sysvar_log_replica_updates)`
    |'
- en: '| Scope | Global |'
  id: totrans-530
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-532
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-533
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: From MySQL 8.0.26, use [`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    in place of [`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates).
  id: totrans-535
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 开始，使用[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    替代从该版本开始弃用的[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)。在
    MySQL 8.0.26 之前的版本中，请使用[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)。
- en: '[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    specifies whether updates received by a replica server from a replication source
    server should be logged to the replica''s own binary log.'
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    指定了复制服务器从复制源服务器接收的更新是否应记录到复制服务器自己的二进制日志中。'
- en: Enabling this variable causes the replica to write the updates that are received
    from a source and performed by the replication SQL thread to the replica's own
    binary log. Binary logging, which is controlled by the [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    option and is enabled by default, must also be enabled on the replica for updates
    to be logged. See [Section 19.1.6, “Replication and Binary Logging Options and
    Variables”](replication-options.html "19.1.6 Replication and Binary Logging Options
    and Variables"). [`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    is enabled by default, unless you specify [`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    to disable binary logging, in which case MySQL also disables replica update logging
    by default. If you need to disable replica update logging when binary logging
    is enabled, specify [`--log-replica-updates=OFF`](replication-options-binary-log.html#sysvar_log_replica_updates)
    at replica server startup.
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此变量会导致复制服务器将从源接收并由复制 SQL 线程执行的更新写入复制服务器自己的二进制日志中。二进制日志记录由[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)选项控制，默认情况下启用，复制服务器上也必须启用二进制日志记录才能记录更新。请参阅[第
    19.1.6 节，“复制和二进制日志选项和变量”](replication-options.html "19.1.6 Replication and Binary
    Logging Options and Variables")。[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    默认启用，除非您指定[`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)来禁用二进制日志记录，此时
    MySQL 也会默认禁用复制更新记录。如果需要在启用二进制日志时禁用复制更新记录，请在复制服务器启动时指定[`--log-replica-updates=OFF`](replication-options-binary-log.html#sysvar_log_replica_updates)。
- en: 'Enabling [`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    enables replication servers to be chained. For example, you might want to set
    up replication servers using this arrangement:'
  id: totrans-538
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    可以实现复制服务器的链式连接。例如，您可能希望使用以下安排设置复制服务器：
- en: '[PRE7]'
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, `A` serves as the source for the replica `B`, and `B` serves as the source
    for the replica `C`. For this to work, `B` must be both a source *and* a replica.
    With binary logging enabled and [`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    enabled, which are the default settings, updates received from `A` are logged
    by `B` to its binary log, and can therefore be passed on to `C`.
  id: totrans-540
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，`A` 作为复制服务器 `B` 的源，`B` 作为复制服务器 `C` 的源。为使此工作正常，`B` 必须同时是源和复制服务器。启用二进制日志记录和[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)启用，这些是默认设置，从
    `A` 接收的更新由 `B` 记录到其二进制日志中，因此可以传递给 `C`。
- en: '[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)'
  id: totrans-541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)'
- en: '| Command-Line Format | `--log-slave-updates[={OFF&#124;ON}]` |'
  id: totrans-542
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-slave-updates[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.26 |'
- en: '| System Variable | `[log_slave_updates](replication-options-binary-log.html#sysvar_log_slave_updates)`
    |'
  id: totrans-544
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_slave_updates](replication-options-binary-log.html#sysvar_log_slave_updates)`
    |'
- en: '| Scope | Global |'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | No |'
  id: totrans-546
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 否 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") 提示适用 | 否 |'
- en: '| Type | Boolean |'
  id: totrans-548
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: From MySQL 8.0.26, [`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)
    is deprecated and the alias [`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)
    should be used instead. In releases before MySQL 8.0.26, use [`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates).
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)已被弃用，应改用别名[`log_replica_updates`](replication-options-binary-log.html#sysvar_log_replica_updates)。在MySQL
    8.0.26之前的版本中，请使用[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)。
- en: '[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)
    specifies whether updates received by a replica server from a replication source
    server should be logged to the replica''s own binary log.'
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)指定是否应将复制服务器从复制源服务器接收的更新记录到副本自己的二进制日志中。'
- en: Enabling this variable causes the replica to write the updates that are received
    from a source and performed by the replication SQL thread to the replica's own
    binary log. Binary logging, which is controlled by the [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    option and is enabled by default, must also be enabled on the replica for updates
    to be logged. See [Section 19.1.6, “Replication and Binary Logging Options and
    Variables”](replication-options.html "19.1.6 Replication and Binary Logging Options
    and Variables"). [`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)
    is enabled by default, unless you specify [`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    to disable binary logging, in which case MySQL also disables replica update logging
    by default. If you need to disable replica update logging when binary logging
    is enabled, specify [`--log-slave-updates=OFF`](replication-options-binary-log.html#sysvar_log_slave_updates)
    at replica server startup.
  id: totrans-552
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用此变量会导致副本将从源接收并由复制SQL线程执行的更新写入副本自己的二进制日志中。必须还在副本上启用二进制日志记录，该记录由[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)选项控制，并且默认情况下已启用，才能记录更新。请参阅[第19.1.6节，“复制和二进制日志选项和变量”](replication-options.html
    "19.1.6 复制和二进制日志选项和变量")。默认情况下启用[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)，除非您指定[`--skip-log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)来禁用二进制日志记录，此时MySQL也默认禁用副本更新记录。如果需要在启用二进制日志时禁用副本更新记录，请在副本服务器启动时指定[`--log-slave-updates=OFF`](replication-options-binary-log.html#sysvar_log_slave_updates)。
- en: 'Enabling [`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)
    enables replication servers to be chained. For example, you might want to set
    up replication servers using this arrangement:'
  id: totrans-553
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)可以使复制服务器链接在一起。例如，您可能希望使用以下安排设置复制服务器：
- en: '[PRE8]'
  id: totrans-554
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, `A` serves as the source for the replica `B`, and `B` serves as the source
    for the replica `C`. For this to work, `B` must be both a source *and* a replica.
    With binary logging enabled and [`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)
    enabled, which are the default settings, updates received from `A` are logged
    by `B` to its binary log, and can therefore be passed on to `C`.
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，`A`作为副本`B`的源，`B`作为副本`C`的源。为了使其工作，`B`必须同时是源*和*副本。启用二进制日志记录和[`log_slave_updates`](replication-options-binary-log.html#sysvar_log_slave_updates)启用，这些是默认设置，从`A`接收的更新由`B`记录到其二进制日志中，因此可以传递给`C`。
- en: '[`log_statements_unsafe_for_binlog`](replication-options-binary-log.html#sysvar_log_statements_unsafe_for_binlog)'
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`log_statements_unsafe_for_binlog`](replication-options-binary-log.html#sysvar_log_statements_unsafe_for_binlog)'
- en: '| Command-Line Format | `--log-statements-unsafe-for-binlog[={OFF&#124;ON}]`
    |'
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--log-statements-unsafe-for-binlog[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.34 |'
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 弃用 | 8.0.34 |'
- en: '| System Variable | `[log_statements_unsafe_for_binlog](replication-options-binary-log.html#sysvar_log_statements_unsafe_for_binlog)`
    |'
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[log_statements_unsafe_for_binlog](replication-options-binary-log.html#sysvar_log_statements_unsafe_for_binlog)`
    |'
- en: '| Scope | Global |'
  id: totrans-560
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-561
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-562
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-564
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: If error 1592 is encountered, controls whether the generated warnings are added
    to the error log or not.
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果遇到错误 1592，控制生成的警告是否添加到错误日志中。
- en: '[`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)'
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)'
- en: '| Command-Line Format | `--master-verify-checksum[={OFF&#124;ON}]` |'
  id: totrans-567
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--master-verify-checksum[={OFF&#124;ON}]` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[master_verify_checksum](replication-options-binary-log.html#sysvar_master_verify_checksum)`
    |'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[master_verify_checksum](replication-options-binary-log.html#sysvar_master_verify_checksum)`
    |'
- en: '| Scope | Global |'
  id: totrans-570
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-572
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-574
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, [`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)
    is deprecated and the alias [`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)
    should be used instead. In releases before MySQL 8.0.26, use [`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum).
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.26 版本开始，[`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)
    已被弃用，应改用别名 [`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)。在
    MySQL 8.0.26 版本之前的发布版本中，请使用 [`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)。
- en: Enabling [`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)
    causes the source to verify events read from the binary log by examining checksums,
    and to stop with an error in the event of a mismatch. [`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)
    is disabled by default; in this case, the source uses the event length from the
    binary log to verify events, so that only complete events are read from the binary
    log.
  id: totrans-576
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用 [`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)
    会导致源通过检查校验和来验证从二进制日志中读取的事件，并在不匹配时停止并显示错误。[`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)
    默认情况下是禁用的；在这种情况下，源使用二进制日志中的事件长度来验证事件，因此只有完整的事件才会从二进制日志中读取。
- en: '[`max_binlog_cache_size`](replication-options-binary-log.html#sysvar_max_binlog_cache_size)'
  id: totrans-577
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`max_binlog_cache_size`](replication-options-binary-log.html#sysvar_max_binlog_cache_size)'
- en: '| Command-Line Format | `--max-binlog-cache-size=#` |'
  id: totrans-578
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--max-binlog-cache-size=#` |'
- en: '| System Variable | `[max_binlog_cache_size](replication-options-binary-log.html#sysvar_max_binlog_cache_size)`
    |'
  id: totrans-579
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[max_binlog_cache_size](replication-options-binary-log.html#sysvar_max_binlog_cache_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-580
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-581
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-583
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value (64-bit platforms) | `18446744073709547520` |'
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（64位平台） | `18446744073709547520` |'
- en: '| Default Value (32-bit platforms) | `4294967295` |'
  id: totrans-585
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值（32位平台） | `4294967295` |'
- en: '| Minimum Value | `4096` |'
  id: totrans-586
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `4096` |'
- en: '| Maximum Value (64-bit platforms) | `18446744073709547520` |'
  id: totrans-587
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（64位平台） | `18446744073709547520` |'
- en: '| Maximum Value (32-bit platforms) | `4294967295` |'
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值（32位平台） | `4294967295` |'
- en: '| Unit | bytes |'
  id: totrans-589
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `4096` |'
  id: totrans-590
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `4096`
    |'
- en: If a transaction requires more than this many bytes, the server generates a
    Multi-statement transaction required more than 'max_binlog_cache_size' bytes of
    storage error. When [`gtid_mode`](replication-options-gtids.html#sysvar_gtid_mode)
    is not `ON`, the maximum recommended value is 4GB, due to the fact that, in this
    case, MySQL cannot work with binary log positions greater than 4GB; when `gtid_mode`
    is `ON`, this limitation does not apply, and the server can work with binary log
    positions of arbitrary size.
  id: totrans-591
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果一个事务需要的字节数超过这个值，服务器会生成一个“多语句事务需要超过 'max_binlog_cache_size' 字节的存储空间”错误。当 [`gtid_mode`](replication-options-gtids.html#sysvar_gtid_mode)
    不是 `ON` 时，最大推荐值为 4GB，因为在这种情况下，MySQL 无法处理大于 4GB 的二进制日志位置；当 `gtid_mode` 是 `ON` 时，这个限制不适用，服务器可以处理任意大小的二进制日志位置。
- en: 'If, because [`gtid_mode`](replication-options-gtids.html#sysvar_gtid_mode)
    is not `ON`, or for some other reason, you need to guarantee that the binary log
    does not exceed a given size *`maxsize`*, you should set this variable according
    to the formula shown here:'
  id: totrans-592
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果由于 [`gtid_mode`](replication-options-gtids.html#sysvar_gtid_mode) 不是 `ON`，或出于其他原因，您需要保证二进制日志不超过给定大小
    *`maxsize`*，则应根据此处显示的公式设置此变量：
- en: '[PRE9]'
  id: totrans-593
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This calculation takes into account the following conditions:'
  id: totrans-594
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个计算考虑了以下条件：
- en: The server writes to the binary log as long as the size before it begins to
    write is less than [`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size).
  id: totrans-595
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只要在开始写入之前的大小小于[`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)，服务器就会写入二进制日志。
- en: The server does not write single transactions, but rather groups of transactions.
    The maximum possible number of transactions in a group is equal to [`max_connections`](server-system-variables.html#sysvar_max_connections).
  id: totrans-596
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器不会写入单个事务，而是一组事务。一组中可能的最大事务数等于[`max_connections`](server-system-variables.html#sysvar_max_connections)。
- en: The server writes data that is not included in the cache. This includes a 4-byte
    checksum for each event; while this adds less than 20% to the transaction size,
    this amount is non-negible. In addition, the server writes a `Gtid_log_event`
    for each transaction; each of these events can add another 1 KB to what is written
    to the binary log.
  id: totrans-597
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器会写入未包含在缓存中的数据。这包括每个事件的4字节校验和；虽然这只会增加不到事务大小的20%，但这个量是不可忽略的。此外，服务器会为每个事务写入一个`Gtid_log_event`；每个事件可能会使写入二进制日志的内容增加另外1
    KB。
- en: '`max_binlog_cache_size` sets the size for the transaction cache only; the upper
    limit for the statement cache is governed by the [`max_binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_max_binlog_stmt_cache_size)
    system variable.'
  id: totrans-598
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`max_binlog_cache_size`仅设置事务缓存的大小；语句缓存的上限由[`max_binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_max_binlog_stmt_cache_size)系统变量控制。'
- en: The visibility to sessions of `max_binlog_cache_size` matches that of the [`binlog_cache_size`](replication-options-binary-log.html#sysvar_binlog_cache_size)
    system variable; in other words, changing its value affects only new sessions
    that are started after the value is changed.
  id: totrans-599
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`max_binlog_cache_size`对会话的可见性与[`binlog_cache_size`](replication-options-binary-log.html#sysvar_binlog_cache_size)系统变量的可见性相匹配；换句话说，改变其值只会影响在值更改后启动的新会话。'
- en: '[`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)'
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)'
- en: '| Command-Line Format | `--max-binlog-size=#` |'
  id: totrans-601
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--max-binlog-size=#` |'
- en: '| System Variable | `[max_binlog_size](replication-options-binary-log.html#sysvar_max_binlog_size)`
    |'
  id: totrans-602
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[max_binlog_size](replication-options-binary-log.html#sysvar_max_binlog_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-603
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-604
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-605
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-606
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1073741824` |'
  id: totrans-607
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1073741824` |'
- en: '| Minimum Value | `4096` |'
  id: totrans-608
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `4096` |'
- en: '| Maximum Value | `1073741824` |'
  id: totrans-609
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `1073741824` |'
- en: '| Unit | bytes |'
  id: totrans-610
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `4096` |'
  id: totrans-611
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `4096`
    |'
- en: If a write to the binary log causes the current log file size to exceed the
    value of this variable, the server rotates the binary logs (closes the current
    file and opens the next one). The minimum value is 4096 bytes. The maximum and
    default value is 1GB. Encrypted binary log files have an additional 512-byte header,
    which is included in [`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size).
  id: totrans-612
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果写入二进制日志导致当前日志文件大小超过此变量的值，则服务器会旋转二进制日志（关闭当前文件并打开下一个文件）。最小值为4096字节。最大和默认值为1GB。加密的二进制日志文件有额外的512字节头部，包含在[`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)中。
- en: A transaction is written in one chunk to the binary log, so it is never split
    between several binary logs. Therefore, if you have big transactions, you might
    see binary log files larger than [`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size).
  id: totrans-613
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事务被一次性写入二进制日志，因此永远不会在多个二进制日志之间分割。因此，如果你有大事务，你可能会看到比[`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)更大的二进制日志文件。
- en: If [`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)
    is 0, the value of [`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)
    applies to relay logs as well.
  id: totrans-614
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果[`max_relay_log_size`](replication-options-replica.html#sysvar_max_relay_log_size)为0，则[`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)的值也适用于中继日志。
- en: With GTIDs in use on the server, when [`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)
    is reached, if the system table `mysql.gtid_executed` cannot be accessed to write
    the GTIDs from the current binary log file, the binary log cannot be rotated.
    In this situation, the server responds according to its [`binlog_error_action`](replication-options-binary-log.html#sysvar_binlog_error_action)
    setting. If `IGNORE_ERROR` is set, an error is logged on the server and binary
    logging is halted, or if `ABORT_SERVER` is set, the server shuts down.
  id: totrans-615
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在服务器上使用GTIDs时，当达到[`max_binlog_size`](replication-options-binary-log.html#sysvar_max_binlog_size)时，如果无法访问系统表`mysql.gtid_executed`以写入当前二进制日志文件中的GTIDs，则无法旋转二进制日志。在这种情况下，服务器根据其[`binlog_error_action`](replication-options-binary-log.html#sysvar_binlog_error_action)设置做出响应。如果设置为`IGNORE_ERROR`，服务器上会记录错误并停止二进制日志记录，或者如果设置为`ABORT_SERVER`，服务器将关闭。
- en: '[`max_binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_max_binlog_stmt_cache_size)'
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`max_binlog_stmt_cache_size`](replication-options-binary-log.html#sysvar_max_binlog_stmt_cache_size)'
- en: '| Command-Line Format | `--max-binlog-stmt-cache-size=#` |'
  id: totrans-617
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--max-binlog-stmt-cache-size=#` |'
- en: '| System Variable | `[max_binlog_stmt_cache_size](replication-options-binary-log.html#sysvar_max_binlog_stmt_cache_size)`
    |'
  id: totrans-618
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[max_binlog_stmt_cache_size](replication-options-binary-log.html#sysvar_max_binlog_stmt_cache_size)`
    |'
- en: '| Scope | Global |'
  id: totrans-619
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-620
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-621
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-622
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `18446744073709547520` |'
  id: totrans-623
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `18446744073709547520` |'
- en: '| Minimum Value | `4096` |'
  id: totrans-624
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `4096` |'
- en: '| Maximum Value | `18446744073709547520` |'
  id: totrans-625
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `18446744073709547520` |'
- en: '| Unit | bytes |'
  id: totrans-626
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 单位 | 字节 |'
- en: '| [Block Size](server-system-variables.html#system-variables-block-size "Note")
    | `4096` |'
  id: totrans-627
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [块大小](server-system-variables.html#system-variables-block-size "注意") | `4096`
    |'
- en: If nontransactional statements within a transaction require more than this many
    bytes of memory, the server generates an error. The minimum value is 4096\. The
    maximum and default values are 4GB on 32-bit platforms and 16EB (exabytes) on
    64-bit platforms.
  id: totrans-628
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果事务中的非事务性语句需要的内存超过这么多字节，服务器将生成错误。最小值为4096。32位平台上的最大和默认值为4GB，在64位平台上为16EB（艾字节）。
- en: '`max_binlog_stmt_cache_size` sets the size for the statement cache only; the
    upper limit for the transaction cache is governed exclusively by the [`max_binlog_cache_size`](replication-options-binary-log.html#sysvar_max_binlog_cache_size)
    system variable.'
  id: totrans-629
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`max_binlog_stmt_cache_size`仅设置语句缓存的大小；事务缓存的上限完全由[`max_binlog_cache_size`](replication-options-binary-log.html#sysvar_max_binlog_cache_size)系统变量控制。'
- en: '[`original_commit_timestamp`](replication-options-binary-log.html#sysvar_original_commit_timestamp)'
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`original_commit_timestamp`](replication-options-binary-log.html#sysvar_original_commit_timestamp)'
- en: '| System Variable | `[original_commit_timestamp](replication-options-binary-log.html#sysvar_original_commit_timestamp)`
    |'
  id: totrans-631
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[original_commit_timestamp](replication-options-binary-log.html#sysvar_original_commit_timestamp)`
    |'
- en: '| Scope | Session |'
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 范围 | 会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-633
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法") 提示适用
    | 否 |'
- en: '| Type | Numeric |'
  id: totrans-635
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 数值 |'
- en: For internal use by replication. When re-executing a transaction on a replica,
    this is set to the time when the transaction was committed on the original source,
    measured in microseconds since the epoch. This allows the original commit timestamp
    to be propagated throughout a replication topology.
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于复制的内部使用。在副本上重新执行事务时，此值设置为事务在原始源上提交时的时间，以自纪元以来的微秒为单位。这允许原始提交时间戳在整个复制拓扑中传播。
- en: Setting the session value of this system variable is a restricted operation.
    The session user must have either the [`REPLICATION_APPLIER`](privileges-provided.html#priv_replication-applier)
    privilege (see [Section 19.3.3, “Replication Privilege Checks”](replication-privilege-checks.html
    "19.3.3 Replication Privilege Checks")), or privileges sufficient to set restricted
    session variables (see [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges")). However, note that the variable is not
    intended for users to set; it is set automatically by the replication infrastructure.
  id: totrans-637
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此系统变量的会话值是受限操作。会话用户必须具有[`REPLICATION_APPLIER`](privileges-provided.html#priv_replication-applier)权限（参见[第19.3.3节，“复制权限检查”](replication-privilege-checks.html
    "19.3.3 复制权限检查")），或具有足够权限设置受限会话变量（参见[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")）。但是，请注意，该变量不是供用户设置的；它是由复制基础设施自动设置的。
- en: '[`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)'
  id: totrans-638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)'
- en: '| Command-Line Format | `--source-verify-checksum[={OFF&#124;ON}]` |'
  id: totrans-639
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--source-verify-checksum[={OFF&#124;ON}]` |'
- en: '| Introduced | 8.0.26 |'
  id: totrans-640
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 引入版本 | 8.0.26 |'
- en: '| System Variable | `[source_verify_checksum](replication-options-binary-log.html#sysvar_source_verify_checksum)`
    |'
  id: totrans-641
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[source_verify_checksum](replication-options-binary-log.html#sysvar_source_verify_checksum)`
    |'
- en: '| Scope | Global |'
  id: totrans-642
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-643
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-644
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-645
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `OFF` |'
  id: totrans-646
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `OFF` |'
- en: From MySQL 8.0.26, use [`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)
    in place of [`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum),
    which is deprecated from that release. In releases before MySQL 8.0.26, use [`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum).
  id: totrans-647
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.26开始，使用[`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)代替从该版本开始已弃用的[`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)。在MySQL
    8.0.26之前的版本中，请使用[`master_verify_checksum`](replication-options-binary-log.html#sysvar_master_verify_checksum)。
- en: Enabling [`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)
    causes the source to verify events read from the binary log by examining checksums,
    and to stop with an error in the event of a mismatch. [`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)
    is disabled by default; in this case, the source uses the event length from the
    binary log to verify events, so that only complete events are read from the binary
    log.
  id: totrans-648
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用[`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)会导致源通过检查校验和来验证从二进制日志中读取的事件，并在不匹配时停止并显示错误。[`source_verify_checksum`](replication-options-binary-log.html#sysvar_source_verify_checksum)默认情况下是禁用的；在这种情况下，源使用二进制日志中的事件长度来验证事件，因此只有完整的事件才会从二进制日志中读取。
- en: '[`sql_log_bin`](replication-options-binary-log.html#sysvar_sql_log_bin)'
  id: totrans-649
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sql_log_bin`](replication-options-binary-log.html#sysvar_sql_log_bin)'
- en: '| System Variable | `[sql_log_bin](replication-options-binary-log.html#sysvar_sql_log_bin)`
    |'
  id: totrans-650
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[sql_log_bin](replication-options-binary-log.html#sysvar_sql_log_bin)`
    |'
- en: '| Scope | Session |'
  id: totrans-651
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-652
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-653
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Boolean |'
  id: totrans-654
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 布尔值 |'
- en: '| Default Value | `ON` |'
  id: totrans-655
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `ON` |'
- en: This variable controls whether logging to the binary log is enabled for the
    current session (assuming that the binary log itself is enabled). The default
    value is `ON`. To disable or enable binary logging for the current session, set
    the session [`sql_log_bin`](replication-options-binary-log.html#sysvar_sql_log_bin)
    variable to `OFF` or `ON`.
  id: totrans-656
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此变量控制当前会话是否启用对二进制日志的记录（假设二进制日志本身已启用）。默认值为`ON`。要为当前会话禁用或启用二进制日志记录，请将会话[`sql_log_bin`](replication-options-binary-log.html#sysvar_sql_log_bin)变量设置为`OFF`或`ON`。
- en: Set this variable to `OFF` for a session to temporarily disable binary logging
    while making changes to the source you do not want replicated to the replica.
  id: totrans-657
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将此变量设置为`OFF`，以便在对源进行更改时暂时禁用二进制日志记录，这些更改不希望被复制到副本中。
- en: Setting the session value of this system variable is a restricted operation.
    The session user must have privileges sufficient to set restricted session variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-658
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置此系统变量的会话值是受限制的操作。会话用户必须具有足够权限来设置受限制的会话变量。请参阅[第 7.1.9.1 节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: It is not possible to set the session value of [`sql_log_bin`](replication-options-binary-log.html#sysvar_sql_log_bin)
    within a transaction or subquery.
  id: totrans-659
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不可能在事务或子查询中设置[`sql_log_bin`](replication-options-binary-log.html#sysvar_sql_log_bin)的会话值。
- en: '*Setting this variable to `OFF` prevents GTIDs from being assigned to transactions
    in the binary log*. If you are using GTIDs for replication, this means that even
    when binary logging is later enabled again, the GTIDs written into the log from
    this point do not account for any transactions that occurred in the meantime,
    so in effect those transactions are lost.'
  id: totrans-660
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*将此变量设置为 `OFF` 可防止将 GTID 分配给二进制日志中的事务。* 如果您正在使用 GTID 进行复制，这意味着即使稍后重新启用二进制日志记录，从此时开始写入日志的
    GTID 也不会考虑期间发生的任何事务，因此实际上这些事务会丢失。'
- en: '[`sync_binlog`](replication-options-binary-log.html#sysvar_sync_binlog)'
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_binlog`](replication-options-binary-log.html#sysvar_sync_binlog)'
- en: '| Command-Line Format | `--sync-binlog=#` |'
  id: totrans-662
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--sync-binlog=#` |'
- en: '| System Variable | `[sync_binlog](replication-options-binary-log.html#sysvar_sync_binlog)`
    |'
  id: totrans-663
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[sync_binlog](replication-options-binary-log.html#sysvar_sync_binlog)`
    |'
- en: '| Scope | Global |'
  id: totrans-664
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用范围 | 全局 |'
- en: '| Dynamic | Yes |'
  id: totrans-665
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-666
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "变量设置提示语法")提示适用
    | 否 |'
- en: '| Type | Integer |'
  id: totrans-667
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 整数 |'
- en: '| Default Value | `1` |'
  id: totrans-668
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `1` |'
- en: '| Minimum Value | `0` |'
  id: totrans-669
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最小值 | `0` |'
- en: '| Maximum Value | `4294967295` |'
  id: totrans-670
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 最大值 | `4294967295` |'
- en: Controls how often the MySQL server synchronizes the binary log to disk.
  id: totrans-671
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制 MySQL 服务器将二进制日志同步到磁盘的频率。
- en: '[`sync_binlog=0`](replication-options-binary-log.html#sysvar_sync_binlog):
    Disables synchronization of the binary log to disk by the MySQL server. Instead,
    the MySQL server relies on the operating system to flush the binary log to disk
    from time to time as it does for any other file. This setting provides the best
    performance, but in the event of a power failure or operating system crash, it
    is possible that the server has committed transactions that have not been synchronized
    to the binary log.'
  id: totrans-672
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_binlog=0`](replication-options-binary-log.html#sysvar_sync_binlog)：禁用
    MySQL 服务器将二进制日志同步到磁盘。相反，MySQL 服务器依赖操作系统定期刷新二进制日志到磁盘，就像对任何其他文件一样。这个设置提供了最佳性能，但在断电或操作系统崩溃的情况下，可能会出现服务器已提交但尚未同步到二进制日志的事务。'
- en: '[`sync_binlog=1`](replication-options-binary-log.html#sysvar_sync_binlog):
    Enables synchronization of the binary log to disk before transactions are committed.
    This is the safest setting but can have a negative impact on performance due to
    the increased number of disk writes. In the event of a power failure or operating
    system crash, transactions that are missing from the binary log are only in a
    prepared state. This permits the automatic recovery routine to roll back the transactions,
    which guarantees that no transaction is lost from the binary log.'
  id: totrans-673
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_binlog=1`](replication-options-binary-log.html#sysvar_sync_binlog)：在提交事务之前将二进制日志同步到磁盘。这是最安全的设置，但由于增加了磁盘写入次数，可能会对性能产生负面影响。在断电或操作系统崩溃的情况下，二进制日志中缺失的事务仅处于准备状态。这允许自动恢复程序回滚事务，确保没有事务丢失在二进制日志中。'
- en: '[`sync_binlog=*`N`*`](replication-options-binary-log.html#sysvar_sync_binlog),
    where *`N`* is a value other than 0 or 1: The binary log is synchronized to disk
    after `N` binary log commit groups have been collected. In the event of a power
    failure or operating system crash, it is possible that the server has committed
    transactions that have not been flushed to the binary log. This setting can have
    a negative impact on performance due to the increased number of disk writes. A
    higher value improves performance, but with an increased risk of data loss.'
  id: totrans-674
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_binlog=*`N`*`](replication-options-binary-log.html#sysvar_sync_binlog)，其中
    *`N`* 是除 0 或 1 之外的值：在收集了 `N` 个二进制日志提交组后，将二进制日志同步到磁盘。在断电或操作系统崩溃的情况下，可能会出现服务器已提交但尚未刷新到二进制日志的事务。这个设置可能会对性能产生负面影响，因为增加了磁盘写入次数。较高的值可以提高性能，但增加了数据丢失的风险。'
- en: 'For the greatest possible durability and consistency in a replication setup
    that uses `InnoDB` with transactions, use these settings:'
  id: totrans-675
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于使用`InnoDB`和事务的复制设置，为了获得最大的耐久性和一致性，请使用以下设置：
- en: '[`sync_binlog=1`](replication-options-binary-log.html#sysvar_sync_binlog).'
  id: totrans-676
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`sync_binlog=1`](replication-options-binary-log.html#sysvar_sync_binlog)。'
- en: '[`innodb_flush_log_at_trx_commit=1`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit).'
  id: totrans-677
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`innodb_flush_log_at_trx_commit=1`](innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)。'
- en: Caution
  id: totrans-678
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Many operating systems and some disk hardware fool the flush-to-disk operation.
    They may tell [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") that
    the flush has taken place, even though it has not. In this case, the durability
    of transactions is not guaranteed even with the recommended settings, and in the
    worst case, a power outage can corrupt `InnoDB` data. Using a battery-backed disk
    cache in the SCSI disk controller or in the disk itself speeds up file flushes,
    and makes the operation safer. You can also try to disable the caching of disk
    writes in hardware caches.
  id: totrans-679
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 许多操作系统和一些磁盘硬件会欺骗刷新到磁盘的操作。它们可能告诉[**mysqld**](mysqld.html "6.3.1 mysqld — The
    MySQL Server")刷新已经完成，即使实际上并没有。在这种情况下，即使使用推荐的设置，事务的耐久性也无法得到保证，最坏的情况下，停电可能会损坏`InnoDB`数据。在SCSI磁盘控制器或磁盘本身中使用带电池后备的磁盘缓存可以加快文件刷新速度，并使操作更安全。您还可以尝试禁用硬件缓存中的磁盘写入缓存。
- en: '[`transaction_write_set_extraction`](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)'
  id: totrans-680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`transaction_write_set_extraction`](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)'
- en: '| Command-Line Format | `--transaction-write-set-extraction[=value]` |'
  id: totrans-681
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 命令行格式 | `--transaction-write-set-extraction[=value]` |'
- en: '| Deprecated | 8.0.26 |'
  id: totrans-682
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 已弃用 | 8.0.26 |'
- en: '| System Variable | `[transaction_write_set_extraction](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)`
    |'
  id: totrans-683
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 系统变量 | `[transaction_write_set_extraction](replication-options-binary-log.html#sysvar_transaction_write_set_extraction)`
    |'
- en: '| Scope | Global, Session |'
  id: totrans-684
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 作用域 | 全局，会话 |'
- en: '| Dynamic | Yes |'
  id: totrans-685
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 动态 | 是 |'
- en: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax") Hint Applies | No |'
  id: totrans-686
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`SET_VAR`](optimizer-hints.html#optimizer-hints-set-var "Variable-Setting
    Hint Syntax")提示适用 | 否 |'
- en: '| Type | Enumeration |'
  id: totrans-687
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 类型 | 枚举 |'
- en: '| Default Value | `XXHASH64` |'
  id: totrans-688
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 默认值 | `XXHASH64` |'
- en: '| Valid Values | `OFF``MURMUR32``XXHASH64` |'
  id: totrans-689
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 有效值 | `OFF``MURMUR32``XXHASH64` |'
- en: This system variable specifies the algorithm used to hash the writes extracted
    during a transaction. The default is `XXHASH64`. `OFF` means that write sets are
    not collected.
  id: totrans-690
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此系统变量指定在事务期间提取的写入哈希的算法。默认值为`XXHASH64`。`OFF`表示不收集写入集。
- en: '`transaction_write_set_extraction` is deprecated as of MySQL 8.0.26; expect
    it to be removed in a future MySQL release.'
  id: totrans-691
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`transaction_write_set_extraction`在MySQL 8.0.26中已弃用；预计将在未来的MySQL版本中删除。'
- en: The `XXHASH64` setting is required for Group Replication, where the process
    of extracting the writes from a transaction is used for conflict detection and
    certification on all group members (see [Section 20.3.1, “Group Replication Requirements”](group-replication-requirements.html
    "20.3.1 Group Replication Requirements")). For a replication source server that
    has multithreaded replicas (replicas on which [`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)
    or [`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)
    is set to a value greater than 0), where [`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)
    is set to `WRITESET` or `WRITESET_SESSION`, `transaction_write_set_extraction`
    must not be `OFF`. While the current value of [`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)
    is `WRITESET` or `WRITESET_SESSION`, you cannot change the value of `transaction_write_set_extraction`.
  id: totrans-692
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`XXHASH64`设置是Group Replication所必需的，用于从事务中提取写入以用于所有组成员的冲突检测和认证过程（参见[Section 20.3.1,
    “Group Replication Requirements”](group-replication-requirements.html "20.3.1 Group
    Replication Requirements")）。对于具有多线程副本的复制源服务器（在这些副本上，[`replica_parallel_workers`](replication-options-replica.html#sysvar_replica_parallel_workers)或[`slave_parallel_workers`](replication-options-replica.html#sysvar_slave_parallel_workers)设置为大于0的值），其中[`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)设置为`WRITESET`或`WRITESET_SESSION`，`transaction_write_set_extraction`不能为`OFF`。当前[`binlog_transaction_dependency_tracking`](replication-options-binary-log.html#sysvar_binlog_transaction_dependency_tracking)的值为`WRITESET`或`WRITESET_SESSION`时，不能更改`transaction_write_set_extraction`的值。'
- en: As of MySQL 8.0.14, setting the session value of this system variable is a restricted
    operation; the session user must have privileges sufficient to set restricted
    session variables (see [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges")). [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    must be set to `ROW` to change the value of `transaction_write_set_extraction`.
    If you change the value, the new value does not take effect on replicated transactions
    until after the replica has been stopped and restarted with [`STOP REPLICA`](stop-replica.html
    "15.4.2.8 STOP REPLICA Statement") and [`START REPLICA`](start-replica.html "15.4.2.6 START
    REPLICA Statement").
  id: totrans-693
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.14版本，设置此系统变量的会话值是一项受限制的操作；会话用户必须具有足够的特权来设置受限制的会话变量（参见[第7.1.9.1节，“系统变量特权”](system-variable-privileges.html
    "7.1.9.1 系统变量特权")）。[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)必须设置为`ROW`才能更改`transaction_write_set_extraction`的值。如果更改了该值，则新值在复制事务上不会立即生效，直到副本使用[`STOP
    REPLICA`](stop-replica.html "15.4.2.8 STOP REPLICA语句")和[`START REPLICA`](start-replica.html
    "15.4.2.6 START REPLICA语句")停止并重新启动后才会生效。
