- en: 14.9.2 Boolean Full-Text Searches
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.9.2 布尔全文搜索
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/fulltext-boolean.html](https://dev.mysql.com/doc/refman/8.0/en/fulltext-boolean.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/fulltext-boolean.html](https://dev.mysql.com/doc/refman/8.0/en/fulltext-boolean.html)
- en: 'MySQL can perform boolean full-text searches using the `IN BOOLEAN MODE` modifier.
    With this modifier, certain characters have special meaning at the beginning or
    end of words in the search string. In the following query, the `+` and `-` operators
    indicate that a word must be present or absent, respectively, for a match to occur.
    Thus, the query retrieves all the rows that contain the word “MySQL” but that
    do *not* contain the word “YourSQL”:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL可以使用`IN BOOLEAN MODE`修饰符执行布尔全文搜索。使用此修饰符，搜索字符串中的某些字符在单词开头或结尾具有特殊含义。在以下查询中，`+`和`-`运算符表示单词必须存在或不存在，才能进行匹配。因此，该查询检索包含单词“MySQL”但*不包含*单词“YourSQL”的所有行：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In implementing this feature, MySQL uses what is sometimes referred to as implied
    Boolean logic, in which
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现此功能时，MySQL使用所谓的隐含布尔逻辑，其中
- en: '`+` stands for `AND`'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+`代表`AND`'
- en: '`-` stands for `NOT`'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-`代表`NOT`'
- en: '[*no operator*] implies `OR`'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*无运算符*]表示`OR`'
- en: 'Boolean full-text searches have these characteristics:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔全文搜索具有以下特点：
- en: They do not automatically sort rows in order of decreasing relevance.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们不会自动按相关性降序对行进行排序。
- en: '`InnoDB` tables require a `FULLTEXT` index on all columns of the [`MATCH()`](fulltext-search.html#function_match)
    expression to perform boolean queries. Boolean queries against a `MyISAM` search
    index can work even without a `FULLTEXT` index, although a search executed in
    this fashion would be quite slow.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`表在执行布尔查询时需要在[`MATCH()`](fulltext-search.html#function_match)表达式的所有列上创建`FULLTEXT`索引。对`MyISAM`搜索索引执行布尔查询即使没有`FULLTEXT`索引也可以工作，尽管以这种方式执行的搜索速度会非常慢。'
- en: The minimum and maximum word length full-text parameters apply to `FULLTEXT`
    indexes created using the built-in `FULLTEXT` parser and MeCab parser plugin.
    [`innodb_ft_min_token_size`](innodb-parameters.html#sysvar_innodb_ft_min_token_size)
    and [`innodb_ft_max_token_size`](innodb-parameters.html#sysvar_innodb_ft_max_token_size)
    are used for `InnoDB` search indexes. [`ft_min_word_len`](server-system-variables.html#sysvar_ft_min_word_len)
    and [`ft_max_word_len`](server-system-variables.html#sysvar_ft_max_word_len) are
    used for `MyISAM` search indexes.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小和最大单词长度全文参数适用于使用内置`FULLTEXT`解析器和MeCab解析器插件创建的`FULLTEXT`索引。[`innodb_ft_min_token_size`](innodb-parameters.html#sysvar_innodb_ft_min_token_size)和[`innodb_ft_max_token_size`](innodb-parameters.html#sysvar_innodb_ft_max_token_size)用于`InnoDB`搜索索引。[`ft_min_word_len`](server-system-variables.html#sysvar_ft_min_word_len)和[`ft_max_word_len`](server-system-variables.html#sysvar_ft_max_word_len)用于`MyISAM`搜索索引。
- en: Minimum and maximum word length full-text parameters do not apply to `FULLTEXT`
    indexes created using the ngram parser. ngram token size is defined by the [`ngram_token_size`](server-system-variables.html#sysvar_ngram_token_size)
    option.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最小和最大单词长度全文参数不适用于使用ngram解析器创建的`FULLTEXT`索引。 ngram标记大小由[`ngram_token_size`](server-system-variables.html#sysvar_ngram_token_size)选项定义。
- en: The stopword list applies, controlled by [`innodb_ft_enable_stopword`](innodb-parameters.html#sysvar_innodb_ft_enable_stopword),
    [`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table),
    and [`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)
    for `InnoDB` search indexes, and [`ft_stopword_file`](server-system-variables.html#sysvar_ft_stopword_file)
    for `MyISAM` ones.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停用词列表适用于`InnoDB`搜索索引，由[`innodb_ft_enable_stopword`](innodb-parameters.html#sysvar_innodb_ft_enable_stopword)、[`innodb_ft_server_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_server_stopword_table)和[`innodb_ft_user_stopword_table`](innodb-parameters.html#sysvar_innodb_ft_user_stopword_table)控制，以及`MyISAM`索引由[`ft_stopword_file`](server-system-variables.html#sysvar_ft_stopword_file)控制。
- en: '`InnoDB` full-text search does not support the use of multiple operators on
    a single search word, as in this example: `''++apple''`. Use of multiple operators
    on a single search word returns a syntax error to standard out. MyISAM full-text
    search successfully processes the same search, ignoring all operators except for
    the operator immediately adjacent to the search word.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`全文搜索不支持在单个搜索词上使用多个运算符，例如：`''++apple''`。在单个搜索词上使用多个运算符会返回一个语法错误到标准输出。MyISAM全文搜索成功处理相同的搜索，忽略除了紧邻搜索词的运算符之外的所有运算符。'
- en: '`InnoDB` full-text search only supports leading plus or minus signs. For example,
    `InnoDB` supports `''+apple''` but does not support `''apple+''`. Specifying a
    trailing plus or minus sign causes `InnoDB` to report a syntax error.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`全文搜索仅支持前导加号或减号。例如，`InnoDB`支持`''+apple''`，但不支持`''apple+''`。指定尾随加号或减号会导致`InnoDB`报告语法错误。'
- en: '`InnoDB` full-text search does not support the use of a leading plus sign with
    wildcard (`''+*''`), a plus and minus sign combination (`''+-''`), or leading
    a plus and minus sign combination (`''+-apple''`). These invalid queries return
    a syntax error.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`全文搜索不支持在通配符（`''+*''`）、加减号组合（`''+-''`）或前导加减号组合（`''+-apple''`）中使用前导加号。这些无效查询会返回语法错误。'
- en: '`InnoDB` full-text search does not support the use of the `@` symbol in boolean
    full-text searches. The `@` symbol is reserved for use by the `@distance` proximity
    search operator.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`全文搜索不支持在布尔全文搜索中使用`@`符号。`@`符号保留供`@distance`接近搜索运算符使用。'
- en: They do not use the 50% threshold that applies to `MyISAM` search indexes.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们不使用适用于`MyISAM`搜索索引的50%阈值。
- en: 'The boolean full-text search capability supports the following operators:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔全文搜索功能支持以下运算符：
- en: '`+`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+`'
- en: A leading or trailing plus sign indicates that this word *must* be present in
    each row that is returned. `InnoDB` only supports leading plus signs.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前导或尾随加号表示该单词*必须*出现在返回的每一行中。`InnoDB`仅支持前导加号。
- en: '`-`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-`'
- en: A leading or trailing minus sign indicates that this word must *not* be present
    in any of the rows that are returned. `InnoDB` only supports leading minus signs.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前导或尾随减号表示这个词必须*不*出现在返回的任何行中。`InnoDB`仅支持前导减号。
- en: 'Note: The `-` operator acts only to exclude rows that are otherwise matched
    by other search terms. Thus, a boolean-mode search that contains only terms preceded
    by `-` returns an empty result. It does not return “all rows except those containing
    any of the excluded terms.”'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意：`-`运算符仅用于排除其他搜索项匹配的行。因此，仅包含由`-`前导的术语的布尔模式搜索会返回空结果。它不会返回“除了包含任何被排除术语的行之外的所有行”。
- en: (no operator)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （无运算符）
- en: By default (when neither `+` nor `-` is specified), the word is optional, but
    the rows that contain it are rated higher. This mimics the behavior of [`MATCH()
    AGAINST()`](fulltext-search.html#function_match) without the `IN BOOLEAN MODE`
    modifier.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认情况下（未指定`+`或`-`时），该单词是可选的，但包含它的行会被评分更高。这模仿了[`MATCH() AGAINST()`](fulltext-search.html#function_match)在没有`IN
    BOOLEAN MODE`修饰符的情况下的行为。
- en: '`@*`distance`*`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@*`distance`*`'
- en: This operator works on `InnoDB` tables only. It tests whether two or more words
    all start within a specified distance from each other, measured in words. Specify
    the search words within a double-quoted string immediately before the `@*`distance`*`
    operator, for example, `MATCH(col1) AGAINST('"word1 word2 word3" @8' IN BOOLEAN
    MODE)`
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此运算符仅适用于`InnoDB`表。它测试两个或更多单词是否都在指定距离内开始，距离以单词为单位测量。在`@*`distance`*`运算符之前的双引号字符串中指定搜索词，例如，`MATCH(col1)
    AGAINST('"word1 word2 word3" @8' IN BOOLEAN MODE)`
- en: '`> <`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`> <`'
- en: These two operators are used to change a word's contribution to the relevance
    value that is assigned to a row. The `>` operator increases the contribution and
    the `<` operator decreases it. See the example following this list.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这两个运算符用于改变单词对分配给行的相关性值的贡献。`>`运算符增加贡献，`<`运算符减少贡献。请参见此列表后面的示例。
- en: '`( )`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`( )`'
- en: Parentheses group words into subexpressions. Parenthesized groups can be nested.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 括号将单词分组为子表达式。括号组可以嵌套。
- en: '`~`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`~`'
- en: A leading tilde acts as a negation operator, causing the word's contribution
    to the row's relevance to be negative. This is useful for marking “noise” words.
    A row containing such a word is rated lower than others, but is not excluded altogether,
    as it would be with the `-` operator.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前导波浪号充当否定运算符，导致单词对行的相关性的贡献为负值。这对标记“噪音”词很有用。包含这样一个词的行评分低于其他行，但不会完全被排除，就像使用`-`运算符一样。
- en: '`*`'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`'
- en: The asterisk serves as the truncation (or wildcard) operator. Unlike the other
    operators, it is *appended* to the word to be affected. Words match if they begin
    with the word preceding the `*` operator.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 星号用作截断（或通配符）运算符。与其他运算符不同，它*附加*到要受影响的单词之后。如果单词以`*`运算符之前的单词开头，则匹配。
- en: If a word is specified with the truncation operator, it is not stripped from
    a boolean query, even if it is too short or a stopword. Whether a word is too
    short is determined from the [`innodb_ft_min_token_size`](innodb-parameters.html#sysvar_innodb_ft_min_token_size)
    setting for `InnoDB` tables, or [`ft_min_word_len`](server-system-variables.html#sysvar_ft_min_word_len)
    for `MyISAM` tables. These options are not applicable to `FULLTEXT` indexes that
    use the ngram parser.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果使用截断运算符指定了一个单词，则即使它太短或是停用词，也不会从布尔查询中删除。一个单词是否太短是根据`InnoDB`表的[`innodb_ft_min_token_size`](innodb-parameters.html#sysvar_innodb_ft_min_token_size)设置，或`MyISAM`表的[`ft_min_word_len`](server-system-variables.html#sysvar_ft_min_word_len)来确定的。这些选项不适用于使用ngram解析器的`FULLTEXT`索引。
- en: The wildcarded word is considered as a prefix that must be present at the start
    of one or more words. If the minimum word length is 4, a search for `'+*`word`*
    +the*'` could return fewer rows than a search for `'+*`word`* +the'`, because
    the second query ignores the too-short search term `the`.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通配符单词被视为必须出现在一个或多个单词的开头的前缀。如果最小单词长度为4，搜索`'+*`word`* +the*'`可能返回的行比搜索`'+*`word`*
    +the'`更少，因为第二个查询忽略了太短的搜索词`the`。
- en: '`"`'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"`'
- en: 'A phrase that is enclosed within double quote (`"`) characters matches only
    rows that contain the phrase *literally, as it was typed*. The full-text engine
    splits the phrase into words and performs a search in the `FULLTEXT` index for
    the words. Nonword characters need not be matched exactly: Phrase searching requires
    only that matches contain exactly the same words as the phrase and in the same
    order. For example, `"test phrase"` matches `"test, phrase"`.'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用双引号(`"`)括起来的短语仅匹配包含该短语的行*文字，就像输入的那样*。全文引擎将短语拆分为单词，并在`FULLTEXT`索引中搜索这些单词。非单词字符不需要完全匹配：短语搜索只要求匹配包含与短语完全相同的单词且顺序相同的内容。例如，`"test
    phrase"`匹配`"test, phrase"`。
- en: 'If the phrase contains no words that are in the index, the result is empty.
    The words might not be in the index because of a combination of factors: if they
    do not exist in the text, are stopwords, or are shorter than the minimum length
    of indexed words.'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果短语不包含索引中的任何单词，则结果为空。这些单词可能不在索引中，因为存在多种因素的组合：如果它们不存在于文本中，是停用词，或者比索引单词的最小长度更短。
- en: 'The following examples demonstrate some search strings that use boolean full-text
    operators:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了一些使用布尔全文搜索运算符的搜索字符串：
- en: '`''apple banana''`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''apple banana''`'
- en: Find rows that contain at least one of the two words.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查找包含两个词中至少一个的行。
- en: '`''+apple +juice''`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''+apple +juice''`'
- en: Find rows that contain both words.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查找同时包含两个单词的行。
- en: '`''+apple macintosh''`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''+apple macintosh''`'
- en: Find rows that contain the word “apple”, but rank rows higher if they also contain
    “macintosh”.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查找包含单词“apple”的行，但如果它们还包含“macintosh”，则将其排名提高。
- en: '`''+apple -macintosh''`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''+apple -macintosh''`'
- en: Find rows that contain the word “apple” but not “macintosh”.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查找包含单词“apple”但不包含“macintosh”的行。
- en: '`''+apple ~macintosh''`'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''+apple ~macintosh''`'
- en: Find rows that contain the word “apple”, but if the row also contains the word
    “macintosh”, rate it lower than if row does not. This is “softer” than a search
    for `'+apple -macintosh'`, for which the presence of “macintosh” causes the row
    not to be returned at all.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查找包含单词“apple”的行，但如果该行还包含单词“macintosh”，则将其评级低于不包含该词的行。这比搜索`'+apple -macintosh'`“更柔和”，因为“macintosh”的存在会导致该行根本不返回。
- en: '`''+apple +(>turnover <strudel)''`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''+apple +(>turnover <strudel)''`'
- en: Find rows that contain the words “apple” and “turnover”, or “apple” and “strudel”
    (in any order), but rank “apple turnover” higher than “apple strudel”.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查找包含单词“apple”和“turnover”，或“apple”和“strudel”（顺序不限），但将“apple turnover”排名高于“apple
    strudel”。
- en: '`''apple*''`'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''apple*''`'
- en: Find rows that contain words such as “apple”, “apples”, “applesauce”, or “applet”.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查找包含诸如“apple”、“apples”、“applesauce”或“applet”等单词的行。
- en: '`''"some words"''`'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''"some words"''`'
- en: Find rows that contain the exact phrase “some words” (for example, rows that
    contain “some words of wisdom” but not “some noise words”). Note that the `"`
    characters that enclose the phrase are operator characters that delimit the phrase.
    They are not the quotation marks that enclose the search string itself.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查找包含确切短语“some words”的行（例如，包含“some words of wisdom”但不包含“some noise words”的行）。请注意，包围短语的`"`字符是界定短语的操作符字符。它们不是包围搜索字符串本身的引号。
- en: Relevancy Rankings for InnoDB Boolean Mode Search
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: InnoDB布尔模式搜索的相关性排名
- en: '[`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine")
    full-text search is modeled on the [Sphinx](http://sphinxsearch.com/) full-text
    search engine, and the algorithms used are based on [BM25](http://en.wikipedia.org/wiki/Okapi_BM25)
    and [TF-IDF](http://en.wikipedia.org/wiki/TF-IDF) ranking algorithms. For these
    reasons, relevancy rankings for `InnoDB` boolean full-text search may differ from
    [`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM Storage Engine") relevancy
    rankings.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[`InnoDB`](innodb-storage-engine.html "第17章 InnoDB存储引擎")全文搜索是基于[Sphinx](http://sphinxsearch.com/)全文搜索引擎建模的，所使用的算法基于[BM25](http://en.wikipedia.org/wiki/Okapi_BM25)和[TF-IDF](http://en.wikipedia.org/wiki/TF-IDF)排名算法。因此，`InnoDB`布尔全文搜索的相关性排名可能与[`MyISAM`](myisam-storage-engine.html
    "第18.2章 MyISAM存储引擎")的相关性排名不同。'
- en: '`InnoDB` uses a variation of the “term frequency-inverse document frequency”
    (`TF-IDF`) weighting system to rank a document''s relevance for a given full-text
    search query. The `TF-IDF` weighting is based on how frequently a word appears
    in a document, offset by how frequently the word appears in all documents in the
    collection. In other words, the more frequently a word appears in a document,
    and the less frequently the word appears in the document collection, the higher
    the document is ranked.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`使用“词项频率-逆文档频率”（`TF-IDF`）加权系统的变体来为给定的全文搜索查询对文档的相关性进行排名。`TF-IDF`加权是基于一个词在文档中出现的频率，减去该词在整个文档集合中出现的频率。换句话说，一个词在文档中出现的频率越高，而在文档集合中出现的频率越低，文档的排名就越高。'
- en: How Relevancy Ranking is Calculated
  id: totrans-63
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 如何计算相关性排名
- en: The term frequency (`TF`) value is the number of times that a word appears in
    a document. The inverse document frequency (`IDF`) value of a word is calculated
    using the following formula, where `total_records` is the number of records in
    the collection, and `matching_records` is the number of records that the search
    term appears in.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 词项频率（`TF`）值是一个词在文档中出现的次数。一个词的逆文档频率（`IDF`）值是使用以下公式计算的，其中`total_records`是集合中的记录数，`matching_records`是搜索词出现在的记录数。
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'When a document contains a word multiple times, the IDF value is multiplied
    by the TF value:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个文档包含多次出现的单词时，IDF值将乘以TF值：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Using the `TF` and `IDF` values, the relevancy ranking for a document is calculated
    using this formula:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`TF`和`IDF`值，文档的相关性排名是使用以下公式计算的：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The formula is demonstrated in the following examples.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 公式在以下示例中进行演示。
- en: Relevancy Ranking for a Single Word Search
  id: totrans-71
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 单词搜索的相关性排名
- en: This example demonstrates the relevancy ranking calculation for a single-word
    search.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例演示了单词搜索的相关性排名计算。
- en: '[PRE4]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'There are 8 records in total, with 3 that match the “database” search term.
    The first record (`id 6`) contains the search term 6 times and has a relevancy
    ranking of `1.0886961221694946`. This ranking value is calculated using a `TF`
    value of 6 (the “database” search term appears 6 times in record `id 6`) and an
    `IDF` value of 0.42596873216370745, which is calculated as follows (where 8 is
    the total number of records and 3 is the number of records that the search term
    appears in):'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有8条记录，其中有3条匹配“database”搜索词。第一条记录（`id 6`）包含搜索词6次，相关性排名为`1.0886961221694946`。此排名值是使用TF值为6（“database”搜索词在记录`id
    6`中出现6次）和IDF值为0.42596873216370745计算的，计算如下（其中8是总记录数，3是搜索词出现在的记录数）：
- en: '[PRE5]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `TF` and `IDF` values are then entered into the ranking formula:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将`TF`和`IDF`值输入到排名公式中：
- en: '[PRE6]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Performing the calculation in the MySQL command-line client returns a ranking
    value of 1.088696164686938.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL命令行客户端中进行计算返回一个排名值为1.088696164686938。
- en: '[PRE7]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You may notice a slight difference in the ranking values returned by the `SELECT
    ... MATCH ... AGAINST` statement and the MySQL command-line client (`1.0886961221694946`
    versus `1.088696164686938`). The difference is due to how the casts between integers
    and floats/doubles are performed internally by `InnoDB` (along with related precision
    and rounding decisions), and how they are performed elsewhere, such as in the
    MySQL command-line client or other types of calculators.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '您可能会注意到`SELECT ... MATCH ... AGAINST`语句返回的排名值与MySQL命令行客户端返回的排名值之间存在轻微差异（`1.0886961221694946`与`1.088696164686938`）。这种差异是由于`InnoDB`内部执行整数和浮点数/双精度数之间的转换（以及相关的精度和舍入决策），以及在其他地方执行这些转换的方式，比如在MySQL命令行客户端或其他类型的计算器中。 '
- en: Relevancy Ranking for a Multiple Word Search
  id: totrans-82
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 多词搜索的相关性排名
- en: This example demonstrates the relevancy ranking calculation for a multiple-word
    full-text search based on the `articles` table and data used in the previous example.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例演示了基于`articles`表和前面示例中使用的数据进行多词全文搜索的相关性排名计算。
- en: 'If you search on more than one word, the relevancy ranking value is a sum of
    the relevancy ranking value for each word, as shown in this formula:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您搜索超过一个词，相关性排名值是每个词的相关性排名值的总和，如下所示：
- en: '[PRE8]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Performing a search on two terms (''mysql tutorial'') returns the following
    results:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对两个术语（'mysql教程'）进行搜索返回以下结果：
- en: '[PRE9]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the first record (`id 8`), ''mysql'' appears once and ''tutorial'' appears
    twice. There are six matching records for ''mysql'' and two matching records for
    ''tutorial''. The MySQL command-line client returns the expected ranking value
    when inserting these values into the ranking formula for a multiple word search:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一条记录（`id 8`）中，'mysql'出现一次，'tutorial'出现两次。有六条匹配记录为'mysql'，两条匹配记录为'tutorial'。当将这些值插入到多词搜索的排名公式中时，MySQL命令行客户端返回了预期的排名值：
- en: '[PRE10]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The slight difference in the ranking values returned by the `SELECT ... MATCH
    ... AGAINST` statement and the MySQL command-line client is explained in the preceding
    example.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`SELECT ... MATCH ... AGAINST`语句和MySQL命令行客户端返回的排名值之间的轻微差异在前面的示例中有解释。'
