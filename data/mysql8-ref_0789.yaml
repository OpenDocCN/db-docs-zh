- en: 14.1 Built-In Function and Operator Reference
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.1 内置函数和运算符参考
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html](https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html](https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html)
- en: The following table lists each built-in (native) function and operator and provides
    a short description of each one. For a table listing functions that are loadable
    at runtime, see [Section 14.2, “Loadable Function Reference”](loadable-function-reference.html
    "14.2 Loadable Function Reference").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了每个内置（原生）函数和运算符，并提供了每个的简短描述。有关在运行时可加载的函数列表，请参见[第14.2节，“可加载函数参考”](loadable-function-reference.html
    "14.2 可加载函数参考")。
- en: '**Table 14.1 Built-In Functions and Operators**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**表格 14.1 内置函数和运算符**'
- en: '| Name | Description | Introduced | Deprecated |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: 名称 | 描述 | 引入 | 废弃 |
- en: '| [`&`](bit-functions.html#operator_bitwise-and) | Bitwise AND |  |  |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`&`](bit-functions.html#operator_bitwise-and) | 按位与 |  |  |'
- en: '| [`>`](comparison-operators.html#operator_greater-than) | Greater than operator
    |  |  |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`>`](comparison-operators.html#operator_greater-than) | 大于运算符 |  |  |'
- en: '| [`>>`](bit-functions.html#operator_right-shift) | Right shift |  |  |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`>>`](bit-functions.html#operator_right-shift) | 右移 |  |  |'
- en: '| [`>=`](comparison-operators.html#operator_greater-than-or-equal) | Greater
    than or equal operator |  |  |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`>=`](comparison-operators.html#operator_greater-than-or-equal) | 大于或等于运算符
    |  |  |'
- en: '| [`<`](comparison-operators.html#operator_less-than) | Less than operator
    |  |  |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`<`](comparison-operators.html#operator_less-than) | 小于运算符 |  |  |'
- en: '| [`<>`, `!=`](comparison-operators.html#operator_not-equal) | Not equal operator
    |  |  |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`<>`, `!=`](comparison-operators.html#operator_not-equal) | 不等于运算符 |  |  |'
- en: '| [`<<`](bit-functions.html#operator_left-shift) | Left shift |  |  |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`<<`](bit-functions.html#operator_left-shift) | 左移 |  |  |'
- en: '| [`<=`](comparison-operators.html#operator_less-than-or-equal) | Less than
    or equal operator |  |  |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`<=`](comparison-operators.html#operator_less-than-or-equal) | 小于或等于运算符
    |  |  |'
- en: '| [`<=>`](comparison-operators.html#operator_equal-to) | NULL-safe equal to
    operator |  |  |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`<=>`](comparison-operators.html#operator_equal-to) | NULL 安全等于运算符 |  |  |'
- en: '| [`%`, `MOD`](arithmetic-functions.html#operator_mod) | Modulo operator |  |  |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`%`, `MOD`](arithmetic-functions.html#operator_mod) | 取模运算符 |  |  |'
- en: '| [`*`](arithmetic-functions.html#operator_times) | Multiplication operator
    |  |  |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`*`](arithmetic-functions.html#operator_times) | 乘法运算符 |  |  |'
- en: '| [`+`](arithmetic-functions.html#operator_plus) | Addition operator |  |  |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`+`](arithmetic-functions.html#operator_plus) | 加法运算符 |  |  |'
- en: '| [`-`](arithmetic-functions.html#operator_minus) | Minus operator |  |  |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`-`](arithmetic-functions.html#operator_minus) | 减法运算符 |  |  |'
- en: '| [`-`](arithmetic-functions.html#operator_unary-minus) | Change the sign of
    the argument |  |  |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`-`](arithmetic-functions.html#operator_unary-minus) | 改变参数的符号 |  |  |'
- en: '| [`->`](json-search-functions.html#operator_json-column-path) | Return value
    from JSON column after evaluating path; equivalent to JSON_EXTRACT(). |  |  |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`->`](json-search-functions.html#operator_json-column-path) | 在评估路径后从 JSON
    列返回值；相当于 JSON_EXTRACT()。 |  |  |'
- en: '| [`->>`](json-search-functions.html#operator_json-inline-path) | Return value
    from JSON column after evaluating path and unquoting the result; equivalent to
    JSON_UNQUOTE(JSON_EXTRACT()). |  |  |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`->>`](json-search-functions.html#operator_json-inline-path) | 在评估路径并取消引用结果后从
    JSON 列返回值；相当于 JSON_UNQUOTE(JSON_EXTRACT())。 |  |  |'
- en: '| [`/`](arithmetic-functions.html#operator_divide) | Division operator |  |  |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`/`](arithmetic-functions.html#operator_divide) | 除法运算符 |  |  |'
- en: '| [`:=`](assignment-operators.html#operator_assign-value) | Assign a value
    |  |  |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`:=`](assignment-operators.html#operator_assign-value) | 赋值 |  |  |'
- en: '| [`=`](assignment-operators.html#operator_assign-equal) | Assign a value (as
    part of a [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement, or as part of the `SET` clause in an [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statement) |  |  |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`=`](assignment-operators.html#operator_assign-equal) | 赋值（作为 [`SET`](set-variable.html
    "15.7.6.1 变量赋值的 SET 语法") 语句的一部分，或作为 [`UPDATE`](update.html "15.2.17 UPDATE 语句")
    语句中 `SET` 子句的一部分） |  |  |'
- en: '| [`=`](comparison-operators.html#operator_equal) | Equal operator |  |  |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`=`](comparison-operators.html#operator_equal) | 等于运算符 |  |  |'
- en: '| [`^`](bit-functions.html#operator_bitwise-xor) | Bitwise XOR |  |  |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`^`](bit-functions.html#operator_bitwise-xor) | 按位异或 |  |  |'
- en: '| [`ABS()`](mathematical-functions.html#function_abs) | Return the absolute
    value |  |  |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`ABS()`](mathematical-functions.html#function_abs) | 返回绝对值 |  |  |'
- en: '| [`ACOS()`](mathematical-functions.html#function_acos) | Return the arc cosine
    |  |  |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`ACOS()`](mathematical-functions.html#function_acos) | 返回反余弦 |  |  |'
- en: '| [`ADDDATE()`](date-and-time-functions.html#function_adddate) | Add time values
    (intervals) to a date value |  |  |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`ADDDATE()`](date-and-time-functions.html#function_adddate) | 将时间值（间隔）添加到日期值中
    |  |  |'
- en: '| [`ADDTIME()`](date-and-time-functions.html#function_addtime) | Add time |  |  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`ADDTIME()`](date-and-time-functions.html#function_addtime) | 添加时间 |  |  |'
- en: '| [`AES_DECRYPT()`](encryption-functions.html#function_aes-decrypt) | Decrypt
    using AES |  |  |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`AES_DECRYPT()`](encryption-functions.html#function_aes-decrypt) | 使用AES解密
    |  |  |'
- en: '| [`AES_ENCRYPT()`](encryption-functions.html#function_aes-encrypt) | Encrypt
    using AES |  |  |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`AES_ENCRYPT()`](encryption-functions.html#function_aes-encrypt) | 使用AES加密
    |  |  |'
- en: '| [`AND`, `&&`](logical-operators.html#operator_and) | Logical AND |  |  |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`AND`, `&&`](logical-operators.html#operator_and) | 逻辑与 |  |  |'
- en: '| [`ANY_VALUE()`](miscellaneous-functions.html#function_any-value) | Suppress
    ONLY_FULL_GROUP_BY value rejection |  |  |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`ANY_VALUE()`](miscellaneous-functions.html#function_any-value) | 抑制ONLY_FULL_GROUP_BY值拒绝
    |  |  |'
- en: '| [`ASCII()`](string-functions.html#function_ascii) | Return numeric value
    of left-most character |  |  |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`ASCII()`](string-functions.html#function_ascii) | 返回最左字符的数字值 |  |  |'
- en: '| [`ASIN()`](mathematical-functions.html#function_asin) | Return the arc sine
    |  |  |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`ASIN()`](mathematical-functions.html#function_asin) | 返回反正弦 |  |  |'
- en: '| [`asynchronous_connection_failover_add_managed()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-add-managed)
    | Add group member source server configuration information to a replication channel
    source list | 8.0.23 |  |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`asynchronous_connection_failover_add_managed()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-add-managed)
    | 将组成员源服务器配置信息添加到复制通道源列表 | 8.0.23 |  |'
- en: '| [`asynchronous_connection_failover_add_source()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-add-source)
    | Add source server configuration information server to a replication channel
    source list | 8.0.22 |  |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`asynchronous_connection_failover_add_source()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-add-source)
    | 将源服务器配置信息添加到复制通道源列表 | 8.0.22 |  |'
- en: '| [`asynchronous_connection_failover_delete_managed()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-delete-managed)
    | Remove a managed group from a replication channel source list | 8.0.23 |  |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`asynchronous_connection_failover_delete_managed()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-delete-managed)
    | 从复制通道源列表中删除受管组 | 8.0.23 |  |'
- en: '| [`asynchronous_connection_failover_delete_source()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-delete-source)
    | Remove a source server from a replication channel source list | 8.0.22 |  |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`asynchronous_connection_failover_delete_source()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-delete-source)
    | 从复制通道源列表中删除源服务器 | 8.0.22 |  |'
- en: '| [`asynchronous_connection_failover_reset()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-reset)
    | Remove all settings relating to group replication asynchronous failover | 8.0.27
    |  |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`asynchronous_connection_failover_reset()`](replication-functions-async-failover.html#function_asynchronous-connection-failover-reset)
    | 删除与组复制异步故障转移相关的所有设置 | 8.0.27 |  |'
- en: '| [`ATAN()`](mathematical-functions.html#function_atan) | Return the arc tangent
    |  |  |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`ATAN()`](mathematical-functions.html#function_atan) | 返回反正切 |  |  |'
- en: '| [`ATAN2()`, `ATAN()`](mathematical-functions.html#function_atan2) | Return
    the arc tangent of the two arguments |  |  |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`ATAN2()`, `ATAN()`](mathematical-functions.html#function_atan2) | 返回两个参数的反正切
    |  |  |'
- en: '| [`AVG()`](aggregate-functions.html#function_avg) | Return the average value
    of the argument |  |  |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`AVG()`](aggregate-functions.html#function_avg) | 返回参数的平均值 |  |  |'
- en: '| [`BENCHMARK()`](information-functions.html#function_benchmark) | Repeatedly
    execute an expression |  |  |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`BENCHMARK()`](information-functions.html#function_benchmark) | 反复执行表达式
    |  |  |'
- en: '| [`BETWEEN ... AND ...`](comparison-operators.html#operator_between) | Whether
    a value is within a range of values |  |  |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`BETWEEN ... AND ...`](comparison-operators.html#operator_between) | 值是否在一系列值范围内
    |  |  |'
- en: '| [`BIN()`](string-functions.html#function_bin) | Return a string containing
    binary representation of a number |  |  |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`BIN()`](string-functions.html#function_bin) | 返回包含数字的二进制表示的字符串 |  |  |'
- en: '| [`BIN_TO_UUID()`](miscellaneous-functions.html#function_bin-to-uuid) | Convert
    binary UUID to string |  |  |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`BIN_TO_UUID()`](miscellaneous-functions.html#function_bin-to-uuid) | 将二进制UUID转换为字符串
    |  |  |'
- en: '| [`BINARY`](cast-functions.html#operator_binary) | Cast a string to a binary
    string |  | 8.0.27 |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`BINARY`](cast-functions.html#operator_binary) | 将字符串转换为二进制字符串 |  | 8.0.27
    |'
- en: '| [`BIT_AND()`](aggregate-functions.html#function_bit-and) | Return bitwise
    AND |  |  |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`BIT_AND()`](aggregate-functions.html#function_bit-and) | 返回按位与 |  |  |'
- en: '| [`BIT_COUNT()`](bit-functions.html#function_bit-count) | Return the number
    of bits that are set |  |  |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`BIT_COUNT()`](bit-functions.html#function_bit-count) | 返回设置的位数 |  |  |'
- en: '| [`BIT_LENGTH()`](string-functions.html#function_bit-length) | Return length
    of argument in bits |  |  |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`BIT_LENGTH()`](string-functions.html#function_bit-length) | 返回参数的位长度 |  |  |'
- en: '| [`BIT_OR()`](aggregate-functions.html#function_bit-or) | Return bitwise OR
    |  |  |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`BIT_OR()`](aggregate-functions.html#function_bit-or) | 返回按位或 |  |  |'
- en: '| [`BIT_XOR()`](aggregate-functions.html#function_bit-xor) | Return bitwise
    XOR |  |  |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`BIT_XOR()`](aggregate-functions.html#function_bit-xor) | 返回按位异或 |  |  |'
- en: '| [`CAN_ACCESS_COLUMN()`](internal-functions.html#function_can-access-column)
    | Internal use only |  |  |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`CAN_ACCESS_COLUMN()`](internal-functions.html#function_can-access-column)
    | 仅供内部使用 |  |  |'
- en: '| [`CAN_ACCESS_DATABASE()`](internal-functions.html#function_can-access-database)
    | Internal use only |  |  |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`CAN_ACCESS_DATABASE()`](internal-functions.html#function_can-access-database)
    | 仅供内部使用 |  |  |'
- en: '| [`CAN_ACCESS_TABLE()`](internal-functions.html#function_can-access-table)
    | Internal use only |  |  |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`CAN_ACCESS_TABLE()`](internal-functions.html#function_can-access-table)
    | 仅供内部使用 |  |  |'
- en: '| [`CAN_ACCESS_USER()`](internal-functions.html#function_can-access-user) |
    Internal use only | 8.0.22 |  |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`CAN_ACCESS_USER()`](internal-functions.html#function_can-access-user) |
    仅供内部使用 | 8.0.22 |  |'
- en: '| [`CAN_ACCESS_VIEW()`](internal-functions.html#function_can-access-view) |
    Internal use only |  |  |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`CAN_ACCESS_VIEW()`](internal-functions.html#function_can-access-view) |
    仅供内部使用 |  |  |'
- en: '| [`CASE`](flow-control-functions.html#operator_case) | Case operator |  |  |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`CASE`](flow-control-functions.html#operator_case) | Case 运算符 |  |  |'
- en: '| [`CAST()`](cast-functions.html#function_cast) | Cast a value as a certain
    type |  |  |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`CAST()`](cast-functions.html#function_cast) | 将值转换为特定类型 |  |  |'
- en: '| [`CEIL()`](mathematical-functions.html#function_ceil) | Return the smallest
    integer value not less than the argument |  |  |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`CEIL()`](mathematical-functions.html#function_ceil) | 返回不小于参数的最小整数值 |  |  |'
- en: '| [`CEILING()`](mathematical-functions.html#function_ceiling) | Return the
    smallest integer value not less than the argument |  |  |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`CEILING()`](mathematical-functions.html#function_ceiling) | 返回不小于参数的最小整数值
    |  |  |'
- en: '| [`CHAR()`](string-functions.html#function_char) | Return the character for
    each integer passed |  |  |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`CHAR()`](string-functions.html#function_char) | 返回每个传递的整数的字符 |  |  |'
- en: '| [`CHAR_LENGTH()`](string-functions.html#function_char-length) | Return number
    of characters in argument |  |  |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`CHAR_LENGTH()`](string-functions.html#function_char-length) | 返回参数中的字符数
    |  |  |'
- en: '| [`CHARACTER_LENGTH()`](string-functions.html#function_character-length) |
    Synonym for CHAR_LENGTH() |  |  |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`CHARACTER_LENGTH()`](string-functions.html#function_character-length) |
    CHAR_LENGTH()的同义词 |  |  |'
- en: '| [`CHARSET()`](information-functions.html#function_charset) | Return the character
    set of the argument |  |  |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`CHARSET()`](information-functions.html#function_charset) | 返回参数的字符集 |  |  |'
- en: '| [`COALESCE()`](comparison-operators.html#function_coalesce) | Return the
    first non-NULL argument |  |  |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`COALESCE()`](comparison-operators.html#function_coalesce) | 返回第一个非NULL参数
    |  |  |'
- en: '| [`COERCIBILITY()`](information-functions.html#function_coercibility) | Return
    the collation coercibility value of the string argument |  |  |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`COERCIBILITY()`](information-functions.html#function_coercibility) | 返回字符串参数的排序强制性值
    |  |  |'
- en: '| [`COLLATION()`](information-functions.html#function_collation) | Return the
    collation of the string argument |  |  |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`COLLATION()`](information-functions.html#function_collation) | 返回字符串参数的排序规则
    |  |  |'
- en: '| [`COMPRESS()`](encryption-functions.html#function_compress) | Return result
    as a binary string |  |  |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`COMPRESS()`](encryption-functions.html#function_compress) | 返回结果作为二进制字符串
    |  |  |'
- en: '| [`CONCAT()`](string-functions.html#function_concat) | Return concatenated
    string |  |  |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`CONCAT()`](string-functions.html#function_concat) | 返回连接的字符串 |  |  |'
- en: '| [`CONCAT_WS()`](string-functions.html#function_concat-ws) | Return concatenate
    with separator |  |  |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`CONCAT_WS()`](string-functions.html#function_concat-ws) | 返回带有分隔符的连接 |  |  |'
- en: '| [`CONNECTION_ID()`](information-functions.html#function_connection-id) |
    Return the connection ID (thread ID) for the connection |  |  |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`CONNECTION_ID()`](information-functions.html#function_connection-id) |
    返回连接的连接ID（线程ID） |  |  |'
- en: '| [`CONV()`](mathematical-functions.html#function_conv) | Convert numbers between
    different number bases |  |  |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`CONV()`](mathematical-functions.html#function_conv) | 在不同进制之间转换数字 |  |  |'
- en: '| [`CONVERT()`](cast-functions.html#function_convert) | Cast a value as a certain
    type |  |  |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`CONVERT()`](cast-functions.html#function_convert) | 将值转换为特定类型 |  |  |'
- en: '| [`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz) | Convert
    from one time zone to another |  |  |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz) | 从一个时区转换到另一个时区
    |  |  |'
- en: '| [`COS()`](mathematical-functions.html#function_cos) | Return the cosine |  |  |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`COS()`](mathematical-functions.html#function_cos) | 返回余弦值 |  |  |'
- en: '| [`COT()`](mathematical-functions.html#function_cot) | Return the cotangent
    |  |  |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`COT()`](mathematical-functions.html#function_cot) | 返回余切 |  |  |'
- en: '| [`COUNT()`](aggregate-functions.html#function_count) | Return a count of
    the number of rows returned |  |  |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`COUNT()`](aggregate-functions.html#function_count) | 返回返回的行数计数 |  |  |'
- en: '| [`COUNT(DISTINCT)`](aggregate-functions.html#function_count-distinct) | Return
    the count of a number of different values |  |  |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`COUNT(DISTINCT)`](aggregate-functions.html#function_count-distinct) | 返回不同值的计数
    |  |  |'
- en: '| [`CRC32()`](mathematical-functions.html#function_crc32) | Compute a cyclic
    redundancy check value |  |  |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`CRC32()`](mathematical-functions.html#function_crc32) | 计算循环冗余校验值 |  |  |'
- en: '| [`CUME_DIST()`](window-function-descriptions.html#function_cume-dist) | Cumulative
    distribution value |  |  |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`CUME_DIST()`](window-function-descriptions.html#function_cume-dist) | 累积分布值
    |  |  |'
- en: '| [`CURDATE()`](date-and-time-functions.html#function_curdate) | Return the
    current date |  |  |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`CURDATE()`](date-and-time-functions.html#function_curdate) | 返回当前日期 |  |  |'
- en: '| [`CURRENT_DATE()`, `CURRENT_DATE`](date-and-time-functions.html#function_current-date)
    | Synonyms for CURDATE() |  |  |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_DATE()`, `CURRENT_DATE`](date-and-time-functions.html#function_current-date)
    | CURDATE()的同义词 |  |  |'
- en: '| [`CURRENT_ROLE()`](information-functions.html#function_current-role) | Return
    the current active roles |  |  |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_ROLE()`](information-functions.html#function_current-role) | 返回当前活动角色
    |  |  |'
- en: '| [`CURRENT_TIME()`, `CURRENT_TIME`](date-and-time-functions.html#function_current-time)
    | Synonyms for CURTIME() |  |  |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_TIME()`, `CURRENT_TIME`](date-and-time-functions.html#function_current-time)
    | CURTIME()的同义词 |  |  |'
- en: '| [`CURRENT_TIMESTAMP()`, `CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    | Synonyms for NOW() |  |  |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_TIMESTAMP()`, `CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    | NOW()的同义词 |  |  |'
- en: '| [`CURRENT_USER()`, `CURRENT_USER`](information-functions.html#function_current-user)
    | The authenticated user name and host name |  |  |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_USER()`, `CURRENT_USER`](information-functions.html#function_current-user)
    | 认证用户名称和主机名 |  |  |'
- en: '| [`CURTIME()`](date-and-time-functions.html#function_curtime) | Return the
    current time |  |  |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`CURTIME()`](date-and-time-functions.html#function_curtime) | 返回当前时间 |  |  |'
- en: '| [`DATABASE()`](information-functions.html#function_database) | Return the
    default (current) database name |  |  |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`DATABASE()`](information-functions.html#function_database) | 返回默认（当前）数据库名称
    |  |  |'
- en: '| [`DATE()`](date-and-time-functions.html#function_date) | Extract the date
    part of a date or datetime expression |  |  |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`DATE()`](date-and-time-functions.html#function_date) | 提取日期或日期时间表达式的日期部分
    |  |  |'
- en: '| [`DATE_ADD()`](date-and-time-functions.html#function_date-add) | Add time
    values (intervals) to a date value |  |  |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`DATE_ADD()`](date-and-time-functions.html#function_date-add) | 将时间值（间隔）添加到日期值
    |  |  |'
- en: '| [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format) | Format
    date as specified |  |  |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format) | 格式化指定的日期
    |  |  |'
- en: '| [`DATE_SUB()`](date-and-time-functions.html#function_date-sub) | Subtract
    a time value (interval) from a date |  |  |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`DATE_SUB()`](date-and-time-functions.html#function_date-sub) | 从日期中减去时间值（间隔）
    |  |  |'
- en: '| [`DATEDIFF()`](date-and-time-functions.html#function_datediff) | Subtract
    two dates |  |  |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`DATEDIFF()`](date-and-time-functions.html#function_datediff) | 减去两个日期 |  |  |'
- en: '| [`DAY()`](date-and-time-functions.html#function_day) | Synonym for DAYOFMONTH()
    |  |  |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`DAY()`](date-and-time-functions.html#function_day) | DAYOFMONTH()的同义词 |  |  |'
- en: '| [`DAYNAME()`](date-and-time-functions.html#function_dayname) | Return the
    name of the weekday |  |  |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`DAYNAME()`](date-and-time-functions.html#function_dayname) | 返回星期几的名称 |  |  |'
- en: '| [`DAYOFMONTH()`](date-and-time-functions.html#function_dayofmonth) | Return
    the day of the month (0-31) |  |  |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`DAYOFMONTH()`](date-and-time-functions.html#function_dayofmonth) | 返回月份的日期（0-31）
    |  |  |'
- en: '| [`DAYOFWEEK()`](date-and-time-functions.html#function_dayofweek) | Return
    the weekday index of the argument |  |  |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`DAYOFWEEK()`](date-and-time-functions.html#function_dayofweek) | 返回参数的星期索引
    |  |  |'
- en: '| [`DAYOFYEAR()`](date-and-time-functions.html#function_dayofyear) | Return
    the day of the year (1-366) |  |  |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`DAYOFYEAR()`](date-and-time-functions.html#function_dayofyear) | 返回年份的日期（1-366）
    |  |  |'
- en: '| [`DEFAULT()`](miscellaneous-functions.html#function_default) | Return the
    default value for a table column |  |  |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`DEFAULT()`](miscellaneous-functions.html#function_default) | 返回表列的默认值 |  |  |'
- en: '| [`DEGREES()`](mathematical-functions.html#function_degrees) | Convert radians
    to degrees |  |  |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`DEGREES()`](mathematical-functions.html#function_degrees) | 将弧度转换为度数 |  |  |'
- en: '| [`DENSE_RANK()`](window-function-descriptions.html#function_dense-rank) |
    Rank of current row within its partition, without gaps |  |  |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`DENSE_RANK()`](window-function-descriptions.html#function_dense-rank) |
    在其分区内当前行的排名，无间隔 |  |  |'
- en: '| [`DIV`](arithmetic-functions.html#operator_div) | Integer division |  |  |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`DIV`](arithmetic-functions.html#operator_div) | 整数除法 |  |  |'
- en: '| [`ELT()`](string-functions.html#function_elt) | Return string at index number
    |  |  |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`ELT()`](string-functions.html#function_elt) | 返回索引号处的字符串 |  |  |'
- en: '| [`EXP()`](mathematical-functions.html#function_exp) | Raise to the power
    of |  |  |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`EXP()`](mathematical-functions.html#function_exp) | 求幂 |  |  |'
- en: '| [`EXPORT_SET()`](string-functions.html#function_export-set) | Return a string
    such that for every bit set in the value bits, you get an on string and for every
    unset bit, you get an off string |  |  |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`EXPORT_SET()`](string-functions.html#function_export-set) | 返回一个字符串，对于值位中的每个位设置，您会得到一个打开字符串，对于每个未设置的位，您会得到一个关闭字符串
    |  |  |'
- en: '| [`EXTRACT()`](date-and-time-functions.html#function_extract) | Extract part
    of a date |  |  |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`EXTRACT()`](date-and-time-functions.html#function_extract) | 提取日期的部分 |  |  |'
- en: '| [`ExtractValue()`](xml-functions.html#function_extractvalue) | Extract a
    value from an XML string using XPath notation |  |  |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`ExtractValue()`](xml-functions.html#function_extractvalue) | 使用XPath表示法从XML字符串中提取值
    |  |  |'
- en: '| [`FIELD()`](string-functions.html#function_field) | Index (position) of first
    argument in subsequent arguments |  |  |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`FIELD()`](string-functions.html#function_field) | 第一个参数在后续参数中的索引（位置） |  |  |'
- en: '| [`FIND_IN_SET()`](string-functions.html#function_find-in-set) | Index (position)
    of first argument within second argument |  |  |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`FIND_IN_SET()`](string-functions.html#function_find-in-set) | 第一个参数在第二个参数中的索引（位置）
    |  |  |'
- en: '| [`FIRST_VALUE()`](window-function-descriptions.html#function_first-value)
    | Value of argument from first row of window frame |  |  |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`FIRST_VALUE()`](window-function-descriptions.html#function_first-value)
    | 窗口帧的第一行中的参数值 |  |  |'
- en: '| [`FLOOR()`](mathematical-functions.html#function_floor) | Return the largest
    integer value not greater than the argument |  |  |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`FLOOR()`](mathematical-functions.html#function_floor) | 返回不大于参数的最大整数值 |  |  |'
- en: '| [`FORMAT()`](string-functions.html#function_format) | Return a number formatted
    to specified number of decimal places |  |  |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`FORMAT()`](string-functions.html#function_format) | 返回格式化为指定小数位数的数字 |  |  |'
- en: '| [`FORMAT_BYTES()`](performance-schema-functions.html#function_format-bytes)
    | Convert byte count to value with units | 8.0.16 |  |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`FORMAT_BYTES()`](performance-schema-functions.html#function_format-bytes)
    | 将字节计数转换为带单位的值 | 8.0.16 |  |'
- en: '| [`FORMAT_PICO_TIME()`](performance-schema-functions.html#function_format-pico-time)
    | Convert time in picoseconds to value with units | 8.0.16 |  |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`FORMAT_PICO_TIME()`](performance-schema-functions.html#function_format-pico-time)
    | 将皮秒时间转换为带单位的值 | 8.0.16 |  |'
- en: '| [`FOUND_ROWS()`](information-functions.html#function_found-rows) | For a
    SELECT with a LIMIT clause, the number of rows that would be returned were there
    no LIMIT clause |  |  |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`FOUND_ROWS()`](information-functions.html#function_found-rows) | 对于带有LIMIT子句的SELECT语句，如果没有LIMIT子句，将返回的行数
    |  |  |'
- en: '| [`FROM_BASE64()`](string-functions.html#function_from-base64) | Decode base64
    encoded string and return result |  |  |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`FROM_BASE64()`](string-functions.html#function_from-base64) | 解��base64编码的字符串并返回结果
    |  |  |'
- en: '| [`FROM_DAYS()`](date-and-time-functions.html#function_from-days) | Convert
    a day number to a date |  |  |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`FROM_DAYS()`](date-and-time-functions.html#function_from-days) | 将天数转换为日期
    |  |  |'
- en: '| [`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)
    | Format Unix timestamp as a date |  |  |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)
    | 将Unix时间戳格式化为日期 |  |  |'
- en: '| [`GeomCollection()`](gis-mysql-specific-functions.html#function_geomcollection)
    | Construct geometry collection from geometries |  |  |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`GeomCollection()`](gis-mysql-specific-functions.html#function_geomcollection)
    | 从几何体构造几何集合 |  |  |'
- en: '| [`GeometryCollection()`](gis-mysql-specific-functions.html#function_geometrycollection)
    | Construct geometry collection from geometries |  |  |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`GeometryCollection()`](gis-mysql-specific-functions.html#function_geometrycollection)
    | 从几何体构造几何集合 |  |  |'
- en: '| [`GET_DD_COLUMN_PRIVILEGES()`](internal-functions.html#function_get-dd-column-privileges)
    | Internal use only |  |  |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`GET_DD_COLUMN_PRIVILEGES()`](internal-functions.html#function_get-dd-column-privileges)
    | 仅供内部使用 |  |  |'
- en: '| [`GET_DD_CREATE_OPTIONS()`](internal-functions.html#function_get-dd-create-options)
    | Internal use only |  |  |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`GET_DD_CREATE_OPTIONS()`](internal-functions.html#function_get-dd-create-options)
    | 仅供内部使用 |  |  |'
- en: '| [`GET_DD_INDEX_SUB_PART_LENGTH()`](internal-functions.html#function_get-dd-index-sub-part-length)
    | Internal use only |  |  |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`GET_DD_INDEX_SUB_PART_LENGTH()`](internal-functions.html#function_get-dd-index-sub-part-length)
    | 仅供内部使用 |  |  |'
- en: '| [`GET_FORMAT()`](date-and-time-functions.html#function_get-format) | Return
    a date format string |  |  |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| [`GET_FORMAT()`](date-and-time-functions.html#function_get-format) | 返回日期格式字符串
    |  |  |'
- en: '| [`GET_LOCK()`](locking-functions.html#function_get-lock) | Get a named lock
    |  |  |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`GET_LOCK()`](locking-functions.html#function_get-lock) | 获取命名锁 |  |  |'
- en: '| [`GREATEST()`](comparison-operators.html#function_greatest) | Return the
    largest argument |  |  |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`GREATEST()`](comparison-operators.html#function_greatest) | 返回最大的参数 |  |  |'
- en: '| [`GROUP_CONCAT()`](aggregate-functions.html#function_group-concat) | Return
    a concatenated string |  |  |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`GROUP_CONCAT()`](aggregate-functions.html#function_group-concat) | 返回连接的字符串
    |  |  |'
- en: '| [`group_replication_disable_member_action()`](group-replication-functions-for-member-actions.html#function_group-replication-disable-member-action)
    | Disable member action for event specified | 8.0.26 |  |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_disable_member_action()`](group-replication-functions-for-member-actions.html#function_group-replication-disable-member-action)
    | 为指定事件禁用成员操作 | 8.0.26 |  |'
- en: '| [`group_replication_enable_member_action()`](group-replication-functions-for-member-actions.html#function_group-replication-enable-member-action)
    | Enable member action for event specified | 8.0.26 |  |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_enable_member_action()`](group-replication-functions-for-member-actions.html#function_group-replication-enable-member-action)
    | 为指定事件启用成员操作 | 8.0.26 |  |'
- en: '| [`group_replication_get_communication_protocol()`](group-replication-functions-for-communication-protocol.html#function_group-replication-get-communication-protocol)
    | Get version of group replication communication protocol currently in use | 8.0.16
    |  |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_get_communication_protocol()`](group-replication-functions-for-communication-protocol.html#function_group-replication-get-communication-protocol)
    | 获取当前正在使用的组复制通信协议的版本 | 8.0.16 |  |'
- en: '| [`group_replication_get_write_concurrency()`](group-replication-functions-for-maximum-consensus.html#function_group-replication-get-write-concurrency)
    | Get maximum number of consensus instances currently set for group | 8.0.13 |  |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_get_write_concurrency()`](group-replication-functions-for-maximum-consensus.html#function_group-replication-get-write-concurrency)
    | 获取当前为组设置的最大一致性实例数 | 8.0.13 |  |'
- en: '| [`group_replication_reset_member_actions()`](group-replication-functions-for-member-actions.html#function_group-replication-reset-member-actions)
    | Reset all member actions to defaults and configuration version number to 1 |
    8.0.26 |  |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_reset_member_actions()`](group-replication-functions-for-member-actions.html#function_group-replication-reset-member-actions)
    | 将所有成员操作重置为默认值，并将配置版本号重置为1 | 8.0.26 |  |'
- en: '| [`group_replication_set_as_primary()`](group-replication-functions-for-new-primary.html#function_group-replication-set-as-primary)
    | Make a specific group member the primary | 8.0.29 |  |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_set_as_primary()`](group-replication-functions-for-new-primary.html#function_group-replication-set-as-primary)
    | 将特定组成员设为主节点 | 8.0.29 |  |'
- en: '| [`group_replication_set_communication_protocol()`](group-replication-functions-for-communication-protocol.html#function_group-replication-set-communication-protocol)
    | Set version for group replication communication protocol to use | 8.0.16 |  |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_set_communication_protocol()`](group-replication-functions-for-communication-protocol.html#function_group-replication-set-communication-protocol)
    | 设置组复制通信协议要使用的版本 | 8.0.16 |  |'
- en: '| [`group_replication_set_write_concurrency()`](group-replication-functions-for-maximum-consensus.html#function_group-replication-set-write-concurrency)
    | Set maximum number of consensus instances that can be executed in parallel |
    8.0.13 |  |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_set_write_concurrency()`](group-replication-functions-for-maximum-consensus.html#function_group-replication-set-write-concurrency)
    | 设置可以并行执行的最大一致性实例数 | 8.0.13 |  |'
- en: '| [`group_replication_switch_to_multi_primary_mode()`](group-replication-functions-for-mode.html#function_group-replication-switch-to-multi-primary-mode)
    | Changes the mode of a group running in single-primary mode to multi-primary
    mode | 8.0.13 |  |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_switch_to_multi_primary_mode()`](group-replication-functions-for-mode.html#function_group-replication-switch-to-multi-primary-mode)
    | 将运���在单主模式下的组的模式更改为多主模式 | 8.0.13 |  |'
- en: '| [`group_replication_switch_to_single_primary_mode()`](group-replication-functions-for-mode.html#function_group-replication-switch-to-single-primary-mode)
    | Changes the mode of a group running in multi-primary mode to single-primary
    mode | 8.0.13 |  |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [`group_replication_switch_to_single_primary_mode()`](group-replication-functions-for-mode.html#function_group-replication-switch-to-single-primary-mode)
    | 将运行在多主模式下的组的模式更改为单主模式 | 8.0.13 |  |'
- en: '| [`GROUPING()`](miscellaneous-functions.html#function_grouping) | Distinguish
    super-aggregate ROLLUP rows from regular rows |  |  |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`GROUPING()`](miscellaneous-functions.html#function_grouping) | 区分超级聚合ROLLUP行和常规行
    |  |  |'
- en: '| [`GTID_SUBSET()`](gtid-functions.html#function_gtid-subset) | Return true
    if all GTIDs in subset are also in set; otherwise false. |  |  |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [`GTID_SUBSET()`](gtid-functions.html#function_gtid-subset) | 如果子集中的所有GTID也在集合中，则返回true；否则返回false。
    |  |  |'
- en: '| [`GTID_SUBTRACT()`](gtid-functions.html#function_gtid-subtract) | Return
    all GTIDs in set that are not in subset. |  |  |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [`GTID_SUBTRACT()`](gtid-functions.html#function_gtid-subtract) | 返回集合中不在子集中的所有GTID。
    |  |  |'
- en: '| [`HEX()`](string-functions.html#function_hex) | Hexadecimal representation
    of decimal or string value |  |  |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [`HEX()`](string-functions.html#function_hex) | 十六进制表示的十进制或字符串值 |  |  |'
- en: '| [`HOUR()`](date-and-time-functions.html#function_hour) | Extract the hour
    |  |  |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [`HOUR()`](date-and-time-functions.html#function_hour) | 提取小时 |  |  |'
- en: '| [`ICU_VERSION()`](information-functions.html#function_icu-version) | ICU
    library version |  |  |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`ICU_VERSION()`](information-functions.html#function_icu-version) | ICU库版本
    |  |  |'
- en: '| [`IF()`](flow-control-functions.html#function_if) | If/else construct |  |  |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [`IF()`](flow-control-functions.html#function_if) | 如果/否则结构 |  |  |'
- en: '| [`IFNULL()`](flow-control-functions.html#function_ifnull) | Null if/else
    construct |  |  |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`IFNULL()`](flow-control-functions.html#function_ifnull) | 如果/否则结构中的空值 |  |  |'
- en: '| [`IN()`](comparison-operators.html#operator_in) | Whether a value is within
    a set of values |  |  |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`IN()`](comparison-operators.html#operator_in) | 值是否在一组值内 |  |  |'
- en: '| [`INET_ATON()`](miscellaneous-functions.html#function_inet-aton) | Return
    the numeric value of an IP address |  |  |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`INET_ATON()`](miscellaneous-functions.html#function_inet-aton) | 返回IP地址的数值
    |  |  |'
- en: '| [`INET_NTOA()`](miscellaneous-functions.html#function_inet-ntoa) | Return
    the IP address from a numeric value |  |  |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [`INET_NTOA()`](miscellaneous-functions.html#function_inet-ntoa) | 从数值返回IP地址
    |  |  |'
- en: '| [`INET6_ATON()`](miscellaneous-functions.html#function_inet6-aton) | Return
    the numeric value of an IPv6 address |  |  |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`INET6_ATON()`](miscellaneous-functions.html#function_inet6-aton) | 返回IPv6地址的数值
    |  |  |'
- en: '| [`INET6_NTOA()`](miscellaneous-functions.html#function_inet6-ntoa) | Return
    the IPv6 address from a numeric value |  |  |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`INET6_NTOA()`](miscellaneous-functions.html#function_inet6-ntoa) | 从数值返回IPv6地址
    |  |  |'
- en: '| [`INSERT()`](string-functions.html#function_insert) | Insert substring at
    specified position up to specified number of characters |  |  |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [`INSERT()`](string-functions.html#function_insert) | 在指定位置插入子字符串，最多指定字符数
    |  |  |'
- en: '| [`INSTR()`](string-functions.html#function_instr) | Return the index of the
    first occurrence of substring |  |  |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [`INSTR()`](string-functions.html#function_instr) | 返回子字符串第一次出现的索引 |  |  |'
- en: '| [`INTERNAL_AUTO_INCREMENT()`](internal-functions.html#function_internal-auto-increment)
    | Internal use only |  |  |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_AUTO_INCREMENT()`](internal-functions.html#function_internal-auto-increment)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_AVG_ROW_LENGTH()`](internal-functions.html#function_internal-avg-row-length)
    | Internal use only |  |  |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_AVG_ROW_LENGTH()`](internal-functions.html#function_internal-avg-row-length)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_CHECK_TIME()`](internal-functions.html#function_internal-check-time)
    | Internal use only |  |  |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_CHECK_TIME()`](internal-functions.html#function_internal-check-time)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_CHECKSUM()`](internal-functions.html#function_internal-checksum)
    | Internal use only |  |  |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_CHECKSUM()`](internal-functions.html#function_internal-checksum)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_DATA_FREE()`](internal-functions.html#function_internal-data-free)
    | Internal use only |  |  |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_DATA_FREE()`](internal-functions.html#function_internal-data-free)
    | ��供内部使用 |  |  |'
- en: '| [`INTERNAL_DATA_LENGTH()`](internal-functions.html#function_internal-data-length)
    | Internal use only |  |  |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_DATA_LENGTH()`](internal-functions.html#function_internal-data-length)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_DD_CHAR_LENGTH()`](internal-functions.html#function_internal-dd-char-length)
    | Internal use only |  |  |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_DD_CHAR_LENGTH()`](internal-functions.html#function_internal-dd-char-length)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_GET_COMMENT_OR_ERROR()`](internal-functions.html#function_internal-get-comment-or-error)
    | Internal use only |  |  |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_GET_COMMENT_OR_ERROR()`](internal-functions.html#function_internal-get-comment-or-error)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_GET_ENABLED_ROLE_JSON()`](internal-functions.html#function_internal-get-enabled-role-json)
    | Internal use only | 8.0.19 |  |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_GET_ENABLED_ROLE_JSON()`](internal-functions.html#function_internal-get-enabled-role-json)
    | 仅供内部使用 | 8.0.19 |  |'
- en: '| [`INTERNAL_GET_HOSTNAME()`](internal-functions.html#function_internal-get-hostname)
    | Internal use only | 8.0.19 |  |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_GET_HOSTNAME()`](internal-functions.html#function_internal-get-hostname)
    | 仅供内部使用 | 8.0.19 |  |'
- en: '| [`INTERNAL_GET_USERNAME()`](internal-functions.html#function_internal-get-username)
    | Internal use only | 8.0.19 |  |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_GET_USERNAME()`](internal-functions.html#function_internal-get-username)
    | 仅供内部使用 | 8.0.19 |  |'
- en: '| [`INTERNAL_GET_VIEW_WARNING_OR_ERROR()`](internal-functions.html#function_internal-get-view-warning-or-error)
    | Internal use only |  |  |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_GET_VIEW_WARNING_OR_ERROR()`](internal-functions.html#function_internal-get-view-warning-or-error)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_INDEX_COLUMN_CARDINALITY()`](internal-functions.html#function_internal-index-column-cardinality)
    | Internal use only |  |  |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_INDEX_COLUMN_CARDINALITY()`](internal-functions.html#function_internal-index-column-cardinality)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_INDEX_LENGTH()`](internal-functions.html#function_internal-index-length)
    | Internal use only |  |  |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_INDEX_LENGTH()`](internal-functions.html#function_internal-index-length)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_IS_ENABLED_ROLE()`](internal-functions.html#function_internal-is-enabled-role)
    | Internal use only | 8.0.19 |  |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_IS_ENABLED_ROLE()`](internal-functions.html#function_internal-is-enabled-role)
    | 仅供内部使用 | 8.0.19 |  |'
- en: '| [`INTERNAL_IS_MANDATORY_ROLE()`](internal-functions.html#function_internal-is-mandatory-role)
    | Internal use only | 8.0.19 |  |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_IS_MANDATORY_ROLE()`](internal-functions.html#function_internal-is-mandatory-role)
    | 仅供内部使用 | 8.0.19 |  |'
- en: '| [`INTERNAL_KEYS_DISABLED()`](internal-functions.html#function_internal-keys-disabled)
    | Internal use only |  |  |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_KEYS_DISABLED()`](internal-functions.html#function_internal-keys-disabled)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_MAX_DATA_LENGTH()`](internal-functions.html#function_internal-max-data-length)
    | Internal use only |  |  |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_MAX_DATA_LENGTH()`](internal-functions.html#function_internal-max-data-length)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_TABLE_ROWS()`](internal-functions.html#function_internal-table-rows)
    | Internal use only |  |  |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_TABLE_ROWS()`](internal-functions.html#function_internal-table-rows)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERNAL_UPDATE_TIME()`](internal-functions.html#function_internal-update-time)
    | Internal use only |  |  |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERNAL_UPDATE_TIME()`](internal-functions.html#function_internal-update-time)
    | 仅供内部使用 |  |  |'
- en: '| [`INTERVAL()`](comparison-operators.html#function_interval) | Return the
    index of the argument that is less than the first argument |  |  |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| [`INTERVAL()`](comparison-operators.html#function_interval) | 返回小于第一个参数的参数的索引
    |  |  |'
- en: '| [`IS`](comparison-operators.html#operator_is) | Test a value against a boolean
    |  |  |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| [`IS`](comparison-operators.html#operator_is) | 测试一个值是否为布尔值 |  |  |'
- en: '| [`IS_FREE_LOCK()`](locking-functions.html#function_is-free-lock) | Whether
    the named lock is free |  |  |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| [`IS_FREE_LOCK()`](locking-functions.html#function_is-free-lock) | 检查指定的锁是否空闲
    |  |  |'
- en: '| [`IS_IPV4()`](miscellaneous-functions.html#function_is-ipv4) | Whether argument
    is an IPv4 address |  |  |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| [`IS_IPV4()`](miscellaneous-functions.html#function_is-ipv4) | 参数是否为 IPv4
    地址 |  |  |'
- en: '| [`IS_IPV4_COMPAT()`](miscellaneous-functions.html#function_is-ipv4-compat)
    | Whether argument is an IPv4-compatible address |  |  |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| [`IS_IPV4_COMPAT()`](miscellaneous-functions.html#function_is-ipv4-compat)
    | 参数是否为 IPv4 兼容地址 |  |  |'
- en: '| [`IS_IPV4_MAPPED()`](miscellaneous-functions.html#function_is-ipv4-mapped)
    | Whether argument is an IPv4-mapped address |  |  |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [`IS_IPV4_MAPPED()`](miscellaneous-functions.html#function_is-ipv4-mapped)
    | 参数是否为 IPv4 映射地址 |  |  |'
- en: '| [`IS_IPV6()`](miscellaneous-functions.html#function_is-ipv6) | Whether argument
    is an IPv6 address |  |  |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`IS_IPV6()`](miscellaneous-functions.html#function_is-ipv6) | 参数是否为 IPv6
    地址 |  |  |'
- en: '| [`IS NOT`](comparison-operators.html#operator_is-not) | Test a value against
    a boolean |  |  |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`IS NOT`](comparison-operators.html#operator_is-not) | 测试一个值是否为布尔值 |  |  |'
- en: '| [`IS NOT NULL`](comparison-operators.html#operator_is-not-null) | NOT NULL
    value test |  |  |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| [`IS NOT NULL`](comparison-operators.html#operator_is-not-null) | 非 NULL
    值测试 |  |  |'
- en: '| [`IS NULL`](comparison-operators.html#operator_is-null) | NULL value test
    |  |  |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`IS NULL`](comparison-operators.html#operator_is-null) | NULL 值测试 |  |  |'
- en: '| [`IS_USED_LOCK()`](locking-functions.html#function_is-used-lock) | Whether
    the named lock is in use; return connection identifier if true |  |  |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`IS_USED_LOCK()`](locking-functions.html#function_is-used-lock) | 检查指定的锁是否正在使用；如果是，则返回连接标识符
    |  |  |'
- en: '| [`IS_UUID()`](miscellaneous-functions.html#function_is-uuid) | Whether argument
    is a valid UUID |  |  |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [`IS_UUID()`](miscellaneous-functions.html#function_is-uuid) | 参数是否为有效的 UUID
    |  |  |'
- en: '| [`ISNULL()`](comparison-operators.html#function_isnull) | Test whether the
    argument is NULL |  |  |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`ISNULL()`](comparison-operators.html#function_isnull) | 测试参数是否为 NULL |  |  |'
- en: '| [`JSON_ARRAY()`](json-creation-functions.html#function_json-array) | Create
    JSON array |  |  |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_ARRAY()`](json-creation-functions.html#function_json-array) | 创建 JSON
    数组 |  |  |'
- en: '| [`JSON_ARRAY_APPEND()`](json-modification-functions.html#function_json-array-append)
    | Append data to JSON document |  |  |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_ARRAY_APPEND()`](json-modification-functions.html#function_json-array-append)
    | 向 JSON 文档追加数据 |  |  |'
- en: '| [`JSON_ARRAY_INSERT()`](json-modification-functions.html#function_json-array-insert)
    | Insert into JSON array |  |  |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_ARRAY_INSERT()`](json-modification-functions.html#function_json-array-insert)
    | 插入到 JSON 数组中 |  |  |'
- en: '| [`JSON_ARRAYAGG()`](aggregate-functions.html#function_json-arrayagg) | Return
    result set as a single JSON array |  |  |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_ARRAYAGG()`](aggregate-functions.html#function_json-arrayagg) | 将结果集作为单个
    JSON 数组返回 |  |  |'
- en: '| [`JSON_CONTAINS()`](json-search-functions.html#function_json-contains) |
    Whether JSON document contains specific object at path |  |  |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_CONTAINS()`](json-search-functions.html#function_json-contains) |
    JSON 文档是否包含特定路径处的对象 |  |  |'
- en: '| [`JSON_CONTAINS_PATH()`](json-search-functions.html#function_json-contains-path)
    | Whether JSON document contains any data at path |  |  |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_CONTAINS_PATH()`](json-search-functions.html#function_json-contains-path)
    | JSON 文档是否在路径处包含任何数据 |  |  |'
- en: '| [`JSON_DEPTH()`](json-attribute-functions.html#function_json-depth) | Maximum
    depth of JSON document |  |  |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_DEPTH()`](json-attribute-functions.html#function_json-depth) | JSON文档的最大深度
    |  |  |'
- en: '| [`JSON_EXTRACT()`](json-search-functions.html#function_json-extract) | Return
    data from JSON document |  |  |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_EXTRACT()`](json-search-functions.html#function_json-extract) | 从JSON文档中返回数据
    |  |  |'
- en: '| [`JSON_INSERT()`](json-modification-functions.html#function_json-insert)
    | Insert data into JSON document |  |  |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_INSERT()`](json-modification-functions.html#function_json-insert)
    | 将数据插入JSON文档 |  |  |'
- en: '| [`JSON_KEYS()`](json-search-functions.html#function_json-keys) | Array of
    keys from JSON document |  |  |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_KEYS()`](json-search-functions.html#function_json-keys) | JSON文档中的键数组
    |  |  |'
- en: '| [`JSON_LENGTH()`](json-attribute-functions.html#function_json-length) | Number
    of elements in JSON document |  |  |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_LENGTH()`](json-attribute-functions.html#function_json-length) | JSON文档中的元素数量
    |  |  |'
- en: '| [`JSON_MERGE()`](json-modification-functions.html#function_json-merge) |
    Merge JSON documents, preserving duplicate keys. Deprecated synonym for JSON_MERGE_PRESERVE()
    |  | Yes |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_MERGE()`](json-modification-functions.html#function_json-merge) |
    合并JSON文档，保留重复的键。已弃用的JSON_MERGE_PRESERVE()的同义词 |  | 是 |'
- en: '| [`JSON_MERGE_PATCH()`](json-modification-functions.html#function_json-merge-patch)
    | Merge JSON documents, replacing values of duplicate keys |  |  |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_MERGE_PATCH()`](json-modification-functions.html#function_json-merge-patch)
    | 合并JSON文档，替换重复键的值 |  |  |'
- en: '| [`JSON_MERGE_PRESERVE()`](json-modification-functions.html#function_json-merge-preserve)
    | Merge JSON documents, preserving duplicate keys |  |  |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_MERGE_PRESERVE()`](json-modification-functions.html#function_json-merge-preserve)
    | 合并JSON文档，保留重复的键 |  |  |'
- en: '| [`JSON_OBJECT()`](json-creation-functions.html#function_json-object) | Create
    JSON object |  |  |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_OBJECT()`](json-creation-functions.html#function_json-object) | 创建JSON对象
    |  |  |'
- en: '| [`JSON_OBJECTAGG()`](aggregate-functions.html#function_json-objectagg) |
    Return result set as a single JSON object |  |  |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_OBJECTAGG()`](aggregate-functions.html#function_json-objectagg) |
    将结果集作为单个JSON对象返回 |  |  |'
- en: '| [`JSON_OVERLAPS()`](json-search-functions.html#function_json-overlaps) |
    Compares two JSON documents, returns TRUE (1) if these have any key-value pairs
    or array elements in common, otherwise FALSE (0) | 8.0.17 |  |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_OVERLAPS()`](json-search-functions.html#function_json-overlaps) |
    比较两个JSON文档，如果它们有任何公共键值对或数组元素，则返回TRUE（1），否则返回FALSE（0） | 8.0.17 |  |'
- en: '| [`JSON_PRETTY()`](json-utility-functions.html#function_json-pretty) | Print
    a JSON document in human-readable format |  |  |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_PRETTY()`](json-utility-functions.html#function_json-pretty) | 以人类可读的格式打印JSON文档
    |  |  |'
- en: '| [`JSON_QUOTE()`](json-creation-functions.html#function_json-quote) | Quote
    JSON document |  |  |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_QUOTE()`](json-creation-functions.html#function_json-quote) | 引用JSON文档
    |  |  |'
- en: '| [`JSON_REMOVE()`](json-modification-functions.html#function_json-remove)
    | Remove data from JSON document |  |  |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_REMOVE()`](json-modification-functions.html#function_json-remove)
    | 从JSON文档中删除数据 |  |  |'
- en: '| [`JSON_REPLACE()`](json-modification-functions.html#function_json-replace)
    | Replace values in JSON document |  |  |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_REPLACE()`](json-modification-functions.html#function_json-replace)
    | 替换JSON文档中的值 |  |  |'
- en: '| [`JSON_SCHEMA_VALID()`](json-validation-functions.html#function_json-schema-valid)
    | Validate JSON document against JSON schema; returns TRUE/1 if document validates
    against schema, or FALSE/0 if it does not | 8.0.17 |  |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_SCHEMA_VALID()`](json-validation-functions.html#function_json-schema-valid)
    | 针对JSON模式验证JSON文档；如果文档符合模式，则返回TRUE/1，否则返回FALSE/0 | 8.0.17 |  |'
- en: '| [`JSON_SCHEMA_VALIDATION_REPORT()`](json-validation-functions.html#function_json-schema-validation-report)
    | Validate JSON document against JSON schema; returns report in JSON format on
    outcome on validation including success or failure and reasons for failure | 8.0.17
    |  |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_SCHEMA_VALIDATION_REPORT()`](json-validation-functions.html#function_json-schema-validation-report)
    | 针对JSON模式验证JSON文档；返回JSON格式的验证结果报告，包括成功或失败以及失败原因 | 8.0.17 |  |'
- en: '| [`JSON_SEARCH()`](json-search-functions.html#function_json-search) | Path
    to value within JSON document |  |  |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_SEARCH()`](json-search-functions.html#function_json-search) | JSON文档中值的路径
    |  |  |'
- en: '| [`JSON_SET()`](json-modification-functions.html#function_json-set) | Insert
    data into JSON document |  |  |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_SET()`](json-modification-functions.html#function_json-set) | 将数据插入JSON文档
    |  |  |'
- en: '| [`JSON_STORAGE_FREE()`](json-utility-functions.html#function_json-storage-free)
    | Freed space within binary representation of JSON column value following partial
    update |  |  |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_STORAGE_FREE()`](json-utility-functions.html#function_json-storage-free)
    | 部分更新后JSON列值的二进制表示中释放的空间 |  |  |'
- en: '| [`JSON_STORAGE_SIZE()`](json-utility-functions.html#function_json-storage-size)
    | Space used for storage of binary representation of a JSON document |  |  |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_STORAGE_SIZE()`](json-utility-functions.html#function_json-storage-size)
    | 用于存储 JSON 文档的二进制表示的空间 |  |  |'
- en: '| [`JSON_TABLE()`](json-table-functions.html#function_json-table) | Return
    data from a JSON expression as a relational table |  |  |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_TABLE()`](json-table-functions.html#function_json-table) | 将 JSON
    表达式的数据作为关系表返回 |  |  |'
- en: '| [`JSON_TYPE()`](json-attribute-functions.html#function_json-type) | Type
    of JSON value |  |  |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_TYPE()`](json-attribute-functions.html#function_json-type) | JSON
    值的类型 |  |  |'
- en: '| [`JSON_UNQUOTE()`](json-modification-functions.html#function_json-unquote)
    | Unquote JSON value |  |  |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_UNQUOTE()`](json-modification-functions.html#function_json-unquote)
    | 取消 JSON 值的引号 |  |  |'
- en: '| [`JSON_VALID()`](json-attribute-functions.html#function_json-valid) | Whether
    JSON value is valid |  |  |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_VALID()`](json-attribute-functions.html#function_json-valid) | JSON
    值是否有效 |  |  |'
- en: '| [`JSON_VALUE()`](json-search-functions.html#function_json-value) | Extract
    value from JSON document at location pointed to by path provided; return this
    value as VARCHAR(512) or specified type | 8.0.21 |  |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| [`JSON_VALUE()`](json-search-functions.html#function_json-value) | 从 JSON
    文档中提取路径指向的值；将该值作为 VARCHAR(512) 或指定类型返回 | 8.0.21 |  |'
- en: '| [`LAG()`](window-function-descriptions.html#function_lag) | Value of argument
    from row lagging current row within partition |  |  |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [`LAG()`](window-function-descriptions.html#function_lag) | 分区内当前行后退行的参数值
    |  |  |'
- en: '| [`LAST_DAY`](date-and-time-functions.html#function_last-day) | Return the
    last day of the month for the argument |  |  |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| [`LAST_DAY`](date-and-time-functions.html#function_last-day) | 返回参数所在月份的最后一天
    |  |  |'
- en: '| [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    | Value of the AUTOINCREMENT column for the last INSERT |  |  |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    | 最后一次 INSERT 的 AUTOINCREMENT 列的值 |  |  |'
- en: '| [`LAST_VALUE()`](window-function-descriptions.html#function_last-value) |
    Value of argument from last row of window frame |  |  |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| [`LAST_VALUE()`](window-function-descriptions.html#function_last-value) |
    窗口帧中最后一行的参数值 |  |  |'
- en: '| [`LCASE()`](string-functions.html#function_lcase) | Synonym for LOWER() |  |  |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| [`LCASE()`](string-functions.html#function_lcase) | LOWER() 的同义词 |  |  |'
- en: '| [`LEAD()`](window-function-descriptions.html#function_lead) | Value of argument
    from row leading current row within partition |  |  |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [`LEAD()`](window-function-descriptions.html#function_lead) | 分区内当前行前导行的参数值
    |  |  |'
- en: '| [`LEAST()`](comparison-operators.html#function_least) | Return the smallest
    argument |  |  |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [`LEAST()`](comparison-operators.html#function_least) | 返回最小的参数 |  |  |'
- en: '| [`LEFT()`](string-functions.html#function_left) | Return the leftmost number
    of characters as specified |  |  |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| [`LEFT()`](string-functions.html#function_left) | 返回指定数量的最左侧字符 |  |  |'
- en: '| [`LENGTH()`](string-functions.html#function_length) | Return the length of
    a string in bytes |  |  |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| [`LENGTH()`](string-functions.html#function_length) | 返回字符串的字节长度 |  |  |'
- en: '| [`LIKE`](string-comparison-functions.html#operator_like) | Simple pattern
    matching |  |  |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| [`LIKE`](string-comparison-functions.html#operator_like) | 简单的模式匹配 |  |  |'
- en: '| [`LineString()`](gis-mysql-specific-functions.html#function_linestring) |
    Construct LineString from Point values |  |  |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| [`LineString()`](gis-mysql-specific-functions.html#function_linestring) |
    从 Point 值构造 LineString |  |  |'
- en: '| [`LN()`](mathematical-functions.html#function_ln) | Return the natural logarithm
    of the argument |  |  |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| [`LN()`](mathematical-functions.html#function_ln) | 返回参数的自然对数 |  |  |'
- en: '| [`LOAD_FILE()`](string-functions.html#function_load-file) | Load the named
    file |  |  |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| [`LOAD_FILE()`](string-functions.html#function_load-file) | 加载指定文件 |  |  |'
- en: '| [`LOCALTIME()`, `LOCALTIME`](date-and-time-functions.html#function_localtime)
    | Synonym for NOW() |  |  |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| [`LOCALTIME()`, `LOCALTIME`](date-and-time-functions.html#function_localtime)
    | NOW() 的同义词 |  |  |'
- en: '| [`LOCALTIMESTAMP`, `LOCALTIMESTAMP()`](date-and-time-functions.html#function_localtimestamp)
    | Synonym for NOW() |  |  |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| [`LOCALTIMESTAMP`, `LOCALTIMESTAMP()`](date-and-time-functions.html#function_localtimestamp)
    | NOW() 的同义词 |  |  |'
- en: '| [`LOCATE()`](string-functions.html#function_locate) | Return the position
    of the first occurrence of substring |  |  |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| [`LOCATE()`](string-functions.html#function_locate) | 返回子字符串第一次出现的位置 |  |  |'
- en: '| [`LOG()`](mathematical-functions.html#function_log) | Return the natural
    logarithm of the first argument |  |  |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| [`LOG()`](mathematical-functions.html#function_log) | 返回第一个参数的自然对数 |  |  |'
- en: '| [`LOG10()`](mathematical-functions.html#function_log10) | Return the base-10
    logarithm of the argument |  |  |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| [`LOG10()`](mathematical-functions.html#function_log10) | 返回参数的以 10 为底的对数
    |  |  |'
- en: '| [`LOG2()`](mathematical-functions.html#function_log2) | Return the base-2
    logarithm of the argument |  |  |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| [`LOG2()`](mathematical-functions.html#function_log2) | 返回参数的以 2 为底的对数 |  |  |'
- en: '| [`LOWER()`](string-functions.html#function_lower) | Return the argument in
    lowercase |  |  |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| [`LOWER()`](string-functions.html#function_lower) | 返回小写参数 |  |  |'
- en: '| [`LPAD()`](string-functions.html#function_lpad) | Return the string argument,
    left-padded with the specified string |  |  |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| [`LPAD()`](string-functions.html#function_lpad) | 返回左侧填充了指定字符串的字符串参数 |  |  |'
- en: '| [`LTRIM()`](string-functions.html#function_ltrim) | Remove leading spaces
    |  |  |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| [`LTRIM()`](string-functions.html#function_ltrim) | 移除前导空格 |  |  |'
- en: '| [`MAKE_SET()`](string-functions.html#function_make-set) | Return a set of
    comma-separated strings that have the corresponding bit in bits set |  |  |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| [`MAKE_SET()`](string-functions.html#function_make-set) | 返回一组逗号分隔的字符串，其中对应位在位中设置
    |  |  |'
- en: '| [`MAKEDATE()`](date-and-time-functions.html#function_makedate) | Create a
    date from the year and day of year |  |  |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| [`MAKEDATE()`](date-and-time-functions.html#function_makedate) | 从年份和一年中的天数创建日期
    |  |  |'
- en: '| [`MAKETIME()`](date-and-time-functions.html#function_maketime) | Create time
    from hour, minute, second |  |  |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| [`MAKETIME()`](date-and-time-functions.html#function_maketime) | 从小时、分钟、秒创建时间
    |  |  |'
- en: '| [`MASTER_POS_WAIT()`](replication-functions-synchronization.html#function_master-pos-wait)
    | Block until the replica has read and applied all updates up to the specified
    position |  | 8.0.26 |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| [`MASTER_POS_WAIT()`](replication-functions-synchronization.html#function_master-pos-wait)
    | 阻塞，直到副本读取并应用到指定位置的所有更新 |  | 8.0.26 |'
- en: '| [`MATCH()`](fulltext-search.html#function_match) | Perform full-text search
    |  |  |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| [`MATCH()`](fulltext-search.html#function_match) | 执行全文搜索 |  |  |'
- en: '| [`MAX()`](aggregate-functions.html#function_max) | Return the maximum value
    |  |  |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| [`MAX()`](aggregate-functions.html#function_max) | 返回最大值 |  |  |'
- en: '| [`MBRContains()`](spatial-relation-functions-mbr.html#function_mbrcontains)
    | Whether MBR of one geometry contains MBR of another |  |  |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| [`MBRContains()`](spatial-relation-functions-mbr.html#function_mbrcontains)
    | 一个几何图形的 MBR 是否包含另一个几何图形的 MBR |  |  |'
- en: '| [`MBRCoveredBy()`](spatial-relation-functions-mbr.html#function_mbrcoveredby)
    | Whether one MBR is covered by another |  |  |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| [`MBRCoveredBy()`](spatial-relation-functions-mbr.html#function_mbrcoveredby)
    | 一个 MBR 是否被另一个覆盖 |  |  |'
- en: '| [`MBRCovers()`](spatial-relation-functions-mbr.html#function_mbrcovers) |
    Whether one MBR covers another |  |  |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| [`MBRCovers()`](spatial-relation-functions-mbr.html#function_mbrcovers) |
    一个 MBR 是否覆盖另一个 |  |  |'
- en: '| [`MBRDisjoint()`](spatial-relation-functions-mbr.html#function_mbrdisjoint)
    | Whether MBRs of two geometries are disjoint |  |  |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| [`MBRDisjoint()`](spatial-relation-functions-mbr.html#function_mbrdisjoint)
    | 两个几何图形的 MBR 是否不相交 |  |  |'
- en: '| [`MBREquals()`](spatial-relation-functions-mbr.html#function_mbrequals) |
    Whether MBRs of two geometries are equal |  |  |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| [`MBREquals()`](spatial-relation-functions-mbr.html#function_mbrequals) |
    两个几何图形的 MBR 是否相等 |  |  |'
- en: '| [`MBRIntersects()`](spatial-relation-functions-mbr.html#function_mbrintersects)
    | Whether MBRs of two geometries intersect |  |  |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| [`MBRIntersects()`](spatial-relation-functions-mbr.html#function_mbrintersects)
    | 两个几何图形的 MBR 是否相交 |  |  |'
- en: '| [`MBROverlaps()`](spatial-relation-functions-mbr.html#function_mbroverlaps)
    | Whether MBRs of two geometries overlap |  |  |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| [`MBROverlaps()`](spatial-relation-functions-mbr.html#function_mbroverlaps)
    | 两个几何图形的 MBR 是否重叠 |  |  |'
- en: '| [`MBRTouches()`](spatial-relation-functions-mbr.html#function_mbrtouches)
    | Whether MBRs of two geometries touch |  |  |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| [`MBRTouches()`](spatial-relation-functions-mbr.html#function_mbrtouches)
    | 两个几何图形的 MBR 是否相接触 |  |  |'
- en: '| [`MBRWithin()`](spatial-relation-functions-mbr.html#function_mbrwithin) |
    Whether MBR of one geometry is within MBR of another |  |  |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| [`MBRWithin()`](spatial-relation-functions-mbr.html#function_mbrwithin) |
    一个几何图形的 MBR 是否在另一个几何图形的 MBR 内部 |  |  |'
- en: '| [`MD5()`](encryption-functions.html#function_md5) | Calculate MD5 checksum
    |  |  |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| [`MD5()`](encryption-functions.html#function_md5) | 计算 MD5 校验和 |  |  |'
- en: '| [`MEMBER OF()`](json-search-functions.html#operator_member-of) | Returns
    true (1) if first operand matches any element of JSON array passed as second operand,
    otherwise returns false (0) | 8.0.17 |  |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| [`MEMBER OF()`](json-search-functions.html#operator_member-of) | 如果第一个操作数与作为第二个操作数传递的
    JSON 数组中的任何元素匹配，则返回 true（1），否则返回 false（0） | 8.0.17 |  |'
- en: '| [`MICROSECOND()`](date-and-time-functions.html#function_microsecond) | Return
    the microseconds from argument |  |  |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| [`MICROSECOND()`](date-and-time-functions.html#function_microsecond) | 从参数返回微秒
    |  |  |'
- en: '| [`MID()`](string-functions.html#function_mid) | Return a substring starting
    from the specified position |  |  |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| [`MID()`](string-functions.html#function_mid) | 从指定位置开始返回子字符串 |  |  |'
- en: '| [`MIN()`](aggregate-functions.html#function_min) | Return the minimum value
    |  |  |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| [`MIN()`](aggregate-functions.html#function_min) | 返回最小值 |  |  |'
- en: '| [`MINUTE()`](date-and-time-functions.html#function_minute) | Return the minute
    from the argument |  |  |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| [`MINUTE()`](date-and-time-functions.html#function_minute) | 从参数返回分钟 |  |  |'
- en: '| [`MOD()`](mathematical-functions.html#function_mod) | Return the remainder
    |  |  |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| [`MOD()`](mathematical-functions.html#function_mod) | 返回余数 |  |  |'
- en: '| [`MONTH()`](date-and-time-functions.html#function_month) | Return the month
    from the date passed |  |  |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| [`MONTH()`](date-and-time-functions.html#function_month) | 返回传递日期的月份 |  |  |'
- en: '| [`MONTHNAME()`](date-and-time-functions.html#function_monthname) | Return
    the name of the month |  |  |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| [`MONTHNAME()`](date-and-time-functions.html#function_monthname) | 返回月份的名称
    |  |  |'
- en: '| [`MultiLineString()`](gis-mysql-specific-functions.html#function_multilinestring)
    | Contruct MultiLineString from LineString values |  |  |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiLineString()`](gis-mysql-specific-functions.html#function_multilinestring)
    | 从 LineString 值构造多线 |  |  |'
- en: '| [`MultiPoint()`](gis-mysql-specific-functions.html#function_multipoint) |
    Construct MultiPoint from Point values |  |  |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiPoint()`](gis-mysql-specific-functions.html#function_multipoint) |
    从点值构造多点 |  |  |'
- en: '| [`MultiPolygon()`](gis-mysql-specific-functions.html#function_multipolygon)
    | Construct MultiPolygon from Polygon values |  |  |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| [`MultiPolygon()`](gis-mysql-specific-functions.html#function_multipolygon)
    | 从多边形值构造多边形 |  |  |'
- en: '| [`NAME_CONST()`](miscellaneous-functions.html#function_name-const) | Cause
    the column to have the given name |  |  |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| [`NAME_CONST()`](miscellaneous-functions.html#function_name-const) | 使列具有给定名称
    |  |  |'
- en: '| [`NOT`, `!`](logical-operators.html#operator_not) | Negates value |  |  |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| [`NOT`, `!`](logical-operators.html#operator_not) | 反转值 |  |  |'
- en: '| [`NOT BETWEEN ... AND ...`](comparison-operators.html#operator_not-between)
    | Whether a value is not within a range of values |  |  |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| [`NOT BETWEEN ... AND ...`](comparison-operators.html#operator_not-between)
    | 值是否不在一组值的范围内 |  |  |'
- en: '| [`NOT IN()`](comparison-operators.html#operator_not-in) | Whether a value
    is not within a set of values |  |  |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| [`NOT IN()`](comparison-operators.html#operator_not-in) | 值是否不在一组值内 |  |  |'
- en: '| [`NOT LIKE`](string-comparison-functions.html#operator_not-like) | Negation
    of simple pattern matching |  |  |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| [`NOT LIKE`](string-comparison-functions.html#operator_not-like) | 简单模式匹配的否定
    |  |  |'
- en: '| [`NOT REGEXP`](regexp.html#operator_not-regexp) | Negation of REGEXP |  |  |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| [`NOT REGEXP`](regexp.html#operator_not-regexp) | REGEXP 的否定 |  |  |'
- en: '| [`NOW()`](date-and-time-functions.html#function_now) | Return the current
    date and time |  |  |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| [`NOW()`](date-and-time-functions.html#function_now) | 返回当前日期和时间 |  |  |'
- en: '| [`NTH_VALUE()`](window-function-descriptions.html#function_nth-value) | Value
    of argument from N-th row of window frame |  |  |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| [`NTH_VALUE()`](window-function-descriptions.html#function_nth-value) | 窗口帧的第
    N 行参数值 |  |  |'
- en: '| [`NTILE()`](window-function-descriptions.html#function_ntile) | Bucket number
    of current row within its partition. |  |  |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| [`NTILE()`](window-function-descriptions.html#function_ntile) | 当前行在其分区内的桶号
    |  |  |'
- en: '| [`NULLIF()`](flow-control-functions.html#function_nullif) | Return NULL if
    expr1 = expr2 |  |  |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| [`NULLIF()`](flow-control-functions.html#function_nullif) | 如果 expr1 = expr2
    则返回 NULL |  |  |'
- en: '| [`OCT()`](string-functions.html#function_oct) | Return a string containing
    octal representation of a number |  |  |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| [`OCT()`](string-functions.html#function_oct) | 返回包含数字的八进制表示的字符串 |  |  |'
- en: '| [`OCTET_LENGTH()`](string-functions.html#function_octet-length) | Synonym
    for LENGTH() |  |  |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| [`OCTET_LENGTH()`](string-functions.html#function_octet-length) | LENGTH()
    的同义词 |  |  |'
- en: '| [`OR`, `&#124;&#124;`](logical-operators.html#operator_or) | Logical OR |  |  |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| [`OR`, `&#124;&#124;`](logical-operators.html#operator_or) | 逻辑或 |  |  |'
- en: '| [`ORD()`](string-functions.html#function_ord) | Return character code for
    leftmost character of the argument |  |  |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| [`ORD()`](string-functions.html#function_ord) | 返回参数的最左字符的字符代码 |  |  |'
- en: '| [`PERCENT_RANK()`](window-function-descriptions.html#function_percent-rank)
    | Percentage rank value |  |  |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| [`PERCENT_RANK()`](window-function-descriptions.html#function_percent-rank)
    | 百分比排名值 |  |  |'
- en: '| [`PERIOD_ADD()`](date-and-time-functions.html#function_period-add) | Add
    a period to a year-month |  |  |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| [`PERIOD_ADD()`](date-and-time-functions.html#function_period-add) | 将一个周期添加到年-月
    |  |  |'
- en: '| [`PERIOD_DIFF()`](date-and-time-functions.html#function_period-diff) | Return
    the number of months between periods |  |  |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| [`PERIOD_DIFF()`](date-and-time-functions.html#function_period-diff) | 返回两个周期之间的月数
    |  |  |'
- en: '| [`PI()`](mathematical-functions.html#function_pi) | Return the value of pi
    |  |  |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| [`PI()`](mathematical-functions.html#function_pi) | 返回圆周率的值 |  |  |'
- en: '| [`Point()`](gis-mysql-specific-functions.html#function_point) | Construct
    Point from coordinates |  |  |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| [`Point()`](gis-mysql-specific-functions.html#function_point) | 从坐标构造点 |  |  |'
- en: '| [`Polygon()`](gis-mysql-specific-functions.html#function_polygon) | Construct
    Polygon from LineString arguments |  |  |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| [`Polygon()`](gis-mysql-specific-functions.html#function_polygon) | 从 LineString
    参数构造多边形 |  |  |'
- en: '| [`POSITION()`](string-functions.html#function_position) | Synonym for LOCATE()
    |  |  |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| [`POSITION()`](string-functions.html#function_position) | LOCATE() 的同义词 |  |  |'
- en: '| [`POW()`](mathematical-functions.html#function_pow) | Return the argument
    raised to the specified power |  |  |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| [`POW()`](mathematical-functions.html#function_pow) | 返回参数的指定幂次方 |  |  |'
- en: '| [`POWER()`](mathematical-functions.html#function_power) | Return the argument
    raised to the specified power |  |  |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| [`POWER()`](mathematical-functions.html#function_power) | 返回参数的指定幂次方 |  |  |'
- en: '| [`PS_CURRENT_THREAD_ID()`](performance-schema-functions.html#function_ps-current-thread-id)
    | Performance Schema thread ID for current thread | 8.0.16 |  |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| [`PS_CURRENT_THREAD_ID()`](performance-schema-functions.html#function_ps-current-thread-id)
    | 当前线程的性能模式线程ID | 8.0.16 |  |'
- en: '| [`PS_THREAD_ID()`](performance-schema-functions.html#function_ps-thread-id)
    | Performance Schema thread ID for given thread | 8.0.16 |  |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| [`PS_THREAD_ID()`](performance-schema-functions.html#function_ps-thread-id)
    | 给定线程的性能模式线程ID | 8.0.16 |  |'
- en: '| [`QUARTER()`](date-and-time-functions.html#function_quarter) | Return the
    quarter from a date argument |  |  |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| [`QUARTER()`](date-and-time-functions.html#function_quarter) | 返回日期参数的季度
    |  |  |'
- en: '| [`QUOTE()`](string-functions.html#function_quote) | Escape the argument for
    use in an SQL statement |  |  |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| [`QUOTE()`](string-functions.html#function_quote) | 为在SQL语句中使用而转义参数 |  |  |'
- en: '| [`RADIANS()`](mathematical-functions.html#function_radians) | Return argument
    converted to radians |  |  |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| [`RADIANS()`](mathematical-functions.html#function_radians) | 将参数转换为弧度 |  |  |'
- en: '| [`RAND()`](mathematical-functions.html#function_rand) | Return a random floating-point
    value |  |  |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| [`RAND()`](mathematical-functions.html#function_rand) | 返回一个随机浮点值 |  |  |'
- en: '| [`RANDOM_BYTES()`](encryption-functions.html#function_random-bytes) | Return
    a random byte vector |  |  |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| [`RANDOM_BYTES()`](encryption-functions.html#function_random-bytes) | 返回一个随机字节向量
    |  |  |'
- en: '| [`RANK()`](window-function-descriptions.html#function_rank) | Rank of current
    row within its partition, with gaps |  |  |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| [`RANK()`](window-function-descriptions.html#function_rank) | 当前行在其分区内的排名，带有间隔
    |  |  |'
- en: '| [`REGEXP`](regexp.html#operator_regexp) | Whether string matches regular
    expression |  |  |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| [`REGEXP`](regexp.html#operator_regexp) | 字符串是否匹配正则表达式 |  |  |'
- en: '| [`REGEXP_INSTR()`](regexp.html#function_regexp-instr) | Starting index of
    substring matching regular expression |  |  |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| [`REGEXP_INSTR()`](regexp.html#function_regexp-instr) | 匹配正则表达式的子字符串的起始索引
    |  |  |'
- en: '| [`REGEXP_LIKE()`](regexp.html#function_regexp-like) | Whether string matches
    regular expression |  |  |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| [`REGEXP_LIKE()`](regexp.html#function_regexp-like) | 字符串是否匹配正则表达式 |  |  |'
- en: '| [`REGEXP_REPLACE()`](regexp.html#function_regexp-replace) | Replace substrings
    matching regular expression |  |  |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| [`REGEXP_REPLACE()`](regexp.html#function_regexp-replace) | 替换匹配正则表达式的子字符串
    |  |  |'
- en: '| [`REGEXP_SUBSTR()`](regexp.html#function_regexp-substr) | Return substring
    matching regular expression |  |  |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| [`REGEXP_SUBSTR()`](regexp.html#function_regexp-substr) | 返回匹配正则表达式的子字符串
    |  |  |'
- en: '| [`RELEASE_ALL_LOCKS()`](locking-functions.html#function_release-all-locks)
    | Release all current named locks |  |  |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| [`RELEASE_ALL_LOCKS()`](locking-functions.html#function_release-all-locks)
    | 释放所有当前命名的锁 |  |  |'
- en: '| [`RELEASE_LOCK()`](locking-functions.html#function_release-lock) | Release
    the named lock |  |  |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| [`RELEASE_LOCK()`](locking-functions.html#function_release-lock) | 释放命名的锁
    |  |  |'
- en: '| [`REPEAT()`](string-functions.html#function_repeat) | Repeat a string the
    specified number of times |  |  |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '| [`REPEAT()`](string-functions.html#function_repeat) | 将字符串重复指定次数 |  |  |'
- en: '| [`REPLACE()`](string-functions.html#function_replace) | Replace occurrences
    of a specified string |  |  |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| [`REPLACE()`](string-functions.html#function_replace) | 替换指定字符串的出现次数 |  |  |'
- en: '| [`REVERSE()`](string-functions.html#function_reverse) | Reverse the characters
    in a string |  |  |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '| [`REVERSE()`](string-functions.html#function_reverse) | 反转字符串中的字符 |  |  |'
- en: '| [`RIGHT()`](string-functions.html#function_right) | Return the specified
    rightmost number of characters |  |  |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| [`RIGHT()`](string-functions.html#function_right) | 返回指定右侧字符数 |  |  |'
- en: '| [`RLIKE`](regexp.html#operator_regexp) | Whether string matches regular expression
    |  |  |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| [`RLIKE`](regexp.html#operator_regexp) | 字符串是否匹配正则表达式 |  |  |'
- en: '| [`ROLES_GRAPHML()`](information-functions.html#function_roles-graphml) |
    Return a GraphML document representing memory role subgraphs |  |  |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '| [`ROLES_GRAPHML()`](information-functions.html#function_roles-graphml) |
    返回表示内存角色子图的GraphML文档 |  |  |'
- en: '| [`ROUND()`](mathematical-functions.html#function_round) | Round the argument
    |  |  |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| [`ROUND()`](mathematical-functions.html#function_round) | 四舍五入参数 |  |  |'
- en: '| [`ROW_COUNT()`](information-functions.html#function_row-count) | The number
    of rows updated |  |  |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '| [`ROW_COUNT()`](information-functions.html#function_row-count) | 更新的行数 |  |  |'
- en: '| [`ROW_NUMBER()`](window-function-descriptions.html#function_row-number) |
    Number of current row within its partition |  |  |'
  id: totrans-315
  prefs: []
  type: TYPE_TB
  zh: '| [`ROW_NUMBER()`](window-function-descriptions.html#function_row-number) |
    当前行在其分区内的编号 |  |  |'
- en: '| [`RPAD()`](string-functions.html#function_rpad) | Append string the specified
    number of times |  |  |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| [`RPAD()`](string-functions.html#function_rpad) | 将字符串重复指定次数 |  |  |'
- en: '| [`RTRIM()`](string-functions.html#function_rtrim) | Remove trailing spaces
    |  |  |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| [`RTRIM()`](string-functions.html#function_rtrim) | 移除字符串末尾的空格 |  |  |'
- en: '| [`SCHEMA()`](information-functions.html#function_schema) | Synonym for DATABASE()
    |  |  |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| [`SCHEMA()`](information-functions.html#function_schema) | DATABASE()的同义词
    |  |  |'
- en: '| [`SEC_TO_TIME()`](date-and-time-functions.html#function_sec-to-time) | Converts
    seconds to ''hh:mm:ss'' format |  |  |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| [`SEC_TO_TIME()`](date-and-time-functions.html#function_sec-to-time) | 将秒数转换为''hh:mm:ss''格式
    |  |  |'
- en: '| [`SECOND()`](date-and-time-functions.html#function_second) | Return the second
    (0-59) |  |  |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| [`SECOND()`](date-and-time-functions.html#function_second) | 返回秒数 (0-59)
    |  |  |'
- en: '| [`SESSION_USER()`](information-functions.html#function_session-user) | Synonym
    for USER() |  |  |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| [`SESSION_USER()`](information-functions.html#function_session-user) | USER()的同义词
    |  |  |'
- en: '| [`SHA1()`, `SHA()`](encryption-functions.html#function_sha1) | Calculate
    an SHA-1 160-bit checksum |  |  |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '| [`SHA1()`, `SHA()`](encryption-functions.html#function_sha1) | 计算SHA-1 160位校验和
    |  |  |'
- en: '| [`SHA2()`](encryption-functions.html#function_sha2) | Calculate an SHA-2
    checksum |  |  |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| [`SHA2()`](encryption-functions.html#function_sha2) | 计算SHA-2校验和 |  |  |'
- en: '| [`SIGN()`](mathematical-functions.html#function_sign) | Return the sign of
    the argument |  |  |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| [`SIGN()`](mathematical-functions.html#function_sign) | 返回参数的符号 |  |  |'
- en: '| [`SIN()`](mathematical-functions.html#function_sin) | Return the sine of
    the argument |  |  |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| [`SIN()`](mathematical-functions.html#function_sin) | 返回参数的正弦值 |  |  |'
- en: '| [`SLEEP()`](miscellaneous-functions.html#function_sleep) | Sleep for a number
    of seconds |  |  |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| [`SLEEP()`](miscellaneous-functions.html#function_sleep) | 休眠指定秒数 |  |  |'
- en: '| [`SOUNDEX()`](string-functions.html#function_soundex) | Return a soundex
    string |  |  |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| [`SOUNDEX()`](string-functions.html#function_soundex) | 返回一个soundex字符串 |  |  |'
- en: '| [`SOUNDS LIKE`](string-functions.html#operator_sounds-like) | Compare sounds
    |  |  |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| [`SOUNDS LIKE`](string-functions.html#operator_sounds-like) | 比较音频 |  |  |'
- en: '| [`SOURCE_POS_WAIT()`](replication-functions-synchronization.html#function_source-pos-wait)
    | Block until the replica has read and applied all updates up to the specified
    position | 8.0.26 |  |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| [`SOURCE_POS_WAIT()`](replication-functions-synchronization.html#function_source-pos-wait)
    | 阻塞直到复制品读取并应用到指定位置的所有更新 | 8.0.26 |  |'
- en: '| [`SPACE()`](string-functions.html#function_space) | Return a string of the
    specified number of spaces |  |  |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| [`SPACE()`](string-functions.html#function_space) | 返回指定数量的空格字符串 |  |  |'
- en: '| [`SQRT()`](mathematical-functions.html#function_sqrt) | Return the square
    root of the argument |  |  |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| [`SQRT()`](mathematical-functions.html#function_sqrt) | 返回参数的平方根 |  |  |'
- en: '| [`ST_Area()`](gis-polygon-property-functions.html#function_st-area) | Return
    Polygon or MultiPolygon area |  |  |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Area()`](gis-polygon-property-functions.html#function_st-area) | 返回多边形或多重多边形的面积
    |  |  |'
- en: '| [`ST_AsBinary()`, `ST_AsWKB()`](gis-format-conversion-functions.html#function_st-asbinary)
    | Convert from internal geometry format to WKB |  |  |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_AsBinary()`, `ST_AsWKB()`](gis-format-conversion-functions.html#function_st-asbinary)
    | 从内部几何格式转换为WKB |  |  |'
- en: '| [`ST_AsGeoJSON()`](spatial-geojson-functions.html#function_st-asgeojson)
    | Generate GeoJSON object from geometry |  |  |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_AsGeoJSON()`](spatial-geojson-functions.html#function_st-asgeojson)
    | 从几何体生成GeoJSON对象 |  |  |'
- en: '| [`ST_AsText()`, `ST_AsWKT()`](gis-format-conversion-functions.html#function_st-astext)
    | Convert from internal geometry format to WKT |  |  |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_AsText()`, `ST_AsWKT()`](gis-format-conversion-functions.html#function_st-astext)
    | 从内部几何格式转换为WKT |  |  |'
- en: '| [`ST_Buffer()`](spatial-operator-functions.html#function_st-buffer) | Return
    geometry of points within given distance from geometry |  |  |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Buffer()`](spatial-operator-functions.html#function_st-buffer) | 返回距离给定几何体一定距离内的点的几何体
    |  |  |'
- en: '| [`ST_Buffer_Strategy()`](spatial-operator-functions.html#function_st-buffer-strategy)
    | Produce strategy option for ST_Buffer() |  |  |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Buffer_Strategy()`](spatial-operator-functions.html#function_st-buffer-strategy)
    | 为ST_Buffer()生成策略选项 |  |  |'
- en: '| [`ST_Centroid()`](gis-polygon-property-functions.html#function_st-centroid)
    | Return centroid as a point |  |  |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Centroid()`](gis-polygon-property-functions.html#function_st-centroid)
    | 返回几何体的质心点 |  |  |'
- en: '| [`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect) |
    Aggregate spatial values into collection | 8.0.24 |  |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Collect()`](spatial-aggregate-functions.html#function_st-collect) |
    将空间值聚合为集合 | 8.0.24 |  |'
- en: '| [`ST_Contains()`](spatial-relation-functions-object-shapes.html#function_st-contains)
    | Whether one geometry contains another |  |  |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Contains()`](spatial-relation-functions-object-shapes.html#function_st-contains)
    | 判断一个几何体是否包含另一个 |  |  |'
- en: '| [`ST_ConvexHull()`](spatial-operator-functions.html#function_st-convexhull)
    | Return convex hull of geometry |  |  |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_ConvexHull()`](spatial-operator-functions.html#function_st-convexhull)
    | 返回几何体的凸包 |  |  |'
- en: '| [`ST_Crosses()`](spatial-relation-functions-object-shapes.html#function_st-crosses)
    | Whether one geometry crosses another |  |  |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Crosses()`](spatial-relation-functions-object-shapes.html#function_st-crosses)
    | 一个几何体是否穿过另一个 |  |  |'
- en: '| [`ST_Difference()`](spatial-operator-functions.html#function_st-difference)
    | Return point set difference of two geometries |  |  |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Difference()`](spatial-operator-functions.html#function_st-difference)
    | 两个几何体的点集差 |  |  |'
- en: '| [`ST_Dimension()`](gis-general-property-functions.html#function_st-dimension)
    | Dimension of geometry |  |  |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Dimension()`](gis-general-property-functions.html#function_st-dimension)
    | 几何体的维度 |  |  |'
- en: '| [`ST_Disjoint()`](spatial-relation-functions-object-shapes.html#function_st-disjoint)
    | Whether one geometry is disjoint from another |  |  |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Disjoint()`](spatial-relation-functions-object-shapes.html#function_st-disjoint)
    | 一个几何体是否与另一个不相交 |  |  |'
- en: '| [`ST_Distance()`](spatial-relation-functions-object-shapes.html#function_st-distance)
    | The distance of one geometry from another |  |  |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Distance()`](spatial-relation-functions-object-shapes.html#function_st-distance)
    | 一个几何体到另一个几何体的距离 |  |  |'
- en: '| [`ST_Distance_Sphere()`](spatial-convenience-functions.html#function_st-distance-sphere)
    | Minimum distance on earth between two geometries |  |  |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Distance_Sphere()`](spatial-convenience-functions.html#function_st-distance-sphere)
    | 两个几何体在地球上的最小距离 |  |  |'
- en: '| [`ST_EndPoint()`](gis-linestring-property-functions.html#function_st-endpoint)
    | End Point of LineString |  |  |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_EndPoint()`](gis-linestring-property-functions.html#function_st-endpoint)
    | 线串的终点 |  |  |'
- en: '| [`ST_Envelope()`](gis-general-property-functions.html#function_st-envelope)
    | Return MBR of geometry |  |  |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Envelope()`](gis-general-property-functions.html#function_st-envelope)
    | 返回几何体的最小边界矩形 |  |  |'
- en: '| [`ST_Equals()`](spatial-relation-functions-object-shapes.html#function_st-equals)
    | Whether one geometry is equal to another |  |  |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Equals()`](spatial-relation-functions-object-shapes.html#function_st-equals)
    | 一个几何体是否等于另一个 |  |  |'
- en: '| [`ST_ExteriorRing()`](gis-polygon-property-functions.html#function_st-exteriorring)
    | Return exterior ring of Polygon |  |  |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_ExteriorRing()`](gis-polygon-property-functions.html#function_st-exteriorring)
    | 返回多边形的外环 |  |  |'
- en: '| [`ST_FrechetDistance()`](spatial-relation-functions-object-shapes.html#function_st-frechetdistance)
    | The discrete Fréchet distance of one geometry from another | 8.0.23 |  |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_FrechetDistance()`](spatial-relation-functions-object-shapes.html#function_st-frechetdistance)
    | 一个几何体到另一个几何体的离散 Fréchet 距离 | 8.0.23 |  |'
- en: '| [`ST_GeoHash()`](spatial-geohash-functions.html#function_st-geohash) | Produce
    a geohash value |  |  |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_GeoHash()`](spatial-geohash-functions.html#function_st-geohash) | 生成地理哈希值
    |  |  |'
- en: '| [`ST_GeomCollFromText()`, `ST_GeometryCollectionFromText()`, `ST_GeomCollFromTxt()`](gis-wkt-functions.html#function_st-geomcollfromtext)
    | Return geometry collection from WKT |  |  |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_GeomCollFromText()`, `ST_GeometryCollectionFromText()`, `ST_GeomCollFromTxt()`](gis-wkt-functions.html#function_st-geomcollfromtext)
    | 从 WKT 返回几何集合 |  |  |'
- en: '| [`ST_GeomCollFromWKB()`, `ST_GeometryCollectionFromWKB()`](gis-wkb-functions.html#function_st-geomcollfromwkb)
    | Return geometry collection from WKB |  |  |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_GeomCollFromWKB()`, `ST_GeometryCollectionFromWKB()`](gis-wkb-functions.html#function_st-geomcollfromwkb)
    | 从 WKB 返回几何集合 |  |  |'
- en: '| [`ST_GeometryN()`](gis-geometrycollection-property-functions.html#function_st-geometryn)
    | Return N-th geometry from geometry collection |  |  |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_GeometryN()`](gis-geometrycollection-property-functions.html#function_st-geometryn)
    | 从几何集合中返回第 N 个几何体 |  |  |'
- en: '| [`ST_GeometryType()`](gis-general-property-functions.html#function_st-geometrytype)
    | Return name of geometry type |  |  |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_GeometryType()`](gis-general-property-functions.html#function_st-geometrytype)
    | 返回几何类型的名称 |  |  |'
- en: '| [`ST_GeomFromGeoJSON()`](spatial-geojson-functions.html#function_st-geomfromgeojson)
    | Generate geometry from GeoJSON object |  |  |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_GeomFromGeoJSON()`](spatial-geojson-functions.html#function_st-geomfromgeojson)
    | 从 GeoJSON 对象生成几何体 |  |  |'
- en: '| [`ST_GeomFromText()`, `ST_GeometryFromText()`](gis-wkt-functions.html#function_st-geomfromtext)
    | Return geometry from WKT |  |  |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_GeomFromText()`, `ST_GeometryFromText()`](gis-wkt-functions.html#function_st-geomfromtext)
    | 从 WKT 返回几何体 |  |  |'
- en: '| [`ST_GeomFromWKB()`, `ST_GeometryFromWKB()`](gis-wkb-functions.html#function_st-geomfromwkb)
    | Return geometry from WKB |  |  |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_GeomFromWKB()`, `ST_GeometryFromWKB()`](gis-wkb-functions.html#function_st-geomfromwkb)
    | 从 WKB 返回几何体 |  |  |'
- en: '| [`ST_HausdorffDistance()`](spatial-relation-functions-object-shapes.html#function_st-hausdorffdistance)
    | The discrete Hausdorff distance of one geometry from another | 8.0.23 |  |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_HausdorffDistance()`](spatial-relation-functions-object-shapes.html#function_st-hausdorffdistance)
    | 一个几何体到另一个几何体的离散豪斯多夫距离 | 8.0.23 |  |'
- en: '| [`ST_InteriorRingN()`](gis-polygon-property-functions.html#function_st-interiorringn)
    | Return N-th interior ring of Polygon |  |  |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_InteriorRingN()`](gis-polygon-property-functions.html#function_st-interiorringn)
    | 返回多边形的第 N 个内环 |  |  |'
- en: '| [`ST_Intersection()`](spatial-operator-functions.html#function_st-intersection)
    | Return point set intersection of two geometries |  |  |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Intersection()`](spatial-operator-functions.html#function_st-intersection)
    | 返回两个几何体的点集交集 |  |  |'
- en: '| [`ST_Intersects()`](spatial-relation-functions-object-shapes.html#function_st-intersects)
    | Whether one geometry intersects another |  |  |'
  id: totrans-364
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Intersects()`](spatial-relation-functions-object-shapes.html#function_st-intersects)
    | 判断一个几何体是否与另一个相交 |  |  |'
- en: '| [`ST_IsClosed()`](gis-linestring-property-functions.html#function_st-isclosed)
    | Whether a geometry is closed and simple |  |  |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_IsClosed()`](gis-linestring-property-functions.html#function_st-isclosed)
    | 判断几何体是否封闭且简单 |  |  |'
- en: '| [`ST_IsEmpty()`](gis-general-property-functions.html#function_st-isempty)
    | Whether a geometry is empty |  |  |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_IsEmpty()`](gis-general-property-functions.html#function_st-isempty)
    | 判断几何体是否为空 |  |  |'
- en: '| [`ST_IsSimple()`](gis-general-property-functions.html#function_st-issimple)
    | Whether a geometry is simple |  |  |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_IsSimple()`](gis-general-property-functions.html#function_st-issimple)
    | 判断几何体是否简单 |  |  |'
- en: '| [`ST_IsValid()`](spatial-convenience-functions.html#function_st-isvalid)
    | Whether a geometry is valid |  |  |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_IsValid()`](spatial-convenience-functions.html#function_st-isvalid)
    | 判断几何体是否有效 |  |  |'
- en: '| [`ST_LatFromGeoHash()`](spatial-geohash-functions.html#function_st-latfromgeohash)
    | Return latitude from geohash value |  |  |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_LatFromGeoHash()`](spatial-geohash-functions.html#function_st-latfromgeohash)
    | 从 geohash 值返回纬度 |  |  |'
- en: '| [`ST_Latitude()`](gis-point-property-functions.html#function_st-latitude)
    | Return latitude of Point | 8.0.12 |  |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Latitude()`](gis-point-property-functions.html#function_st-latitude)
    | 返回 Point 的纬度 | 8.0.12 |  |'
- en: '| [`ST_Length()`](gis-linestring-property-functions.html#function_st-length)
    | Return length of LineString |  |  |'
  id: totrans-371
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Length()`](gis-linestring-property-functions.html#function_st-length)
    | 返回 LineString 的长度 |  |  |'
- en: '| [`ST_LineFromText()`, `ST_LineStringFromText()`](gis-wkt-functions.html#function_st-linefromtext)
    | Construct LineString from WKT |  |  |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_LineFromText()`, `ST_LineStringFromText()`](gis-wkt-functions.html#function_st-linefromtext)
    | 从 WKT 构建 LineString |  |  |'
- en: '| [`ST_LineFromWKB()`, `ST_LineStringFromWKB()`](gis-wkb-functions.html#function_st-linefromwkb)
    | Construct LineString from WKB |  |  |'
  id: totrans-373
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_LineFromWKB()`, `ST_LineStringFromWKB()`](gis-wkb-functions.html#function_st-linefromwkb)
    | 从 WKB 构建 LineString |  |  |'
- en: '| [`ST_LineInterpolatePoint()`](spatial-operator-functions.html#function_st-lineinterpolatepoint)
    | The point a given percentage along a LineString | 8.0.24 |  |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_LineInterpolatePoint()`](spatial-operator-functions.html#function_st-lineinterpolatepoint)
    | 沿着 LineString 给定百分比的点 | 8.0.24 |  |'
- en: '| [`ST_LineInterpolatePoints()`](spatial-operator-functions.html#function_st-lineinterpolatepoints)
    | The points a given percentage along a LineString | 8.0.24 |  |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_LineInterpolatePoints()`](spatial-operator-functions.html#function_st-lineinterpolatepoints)
    | 沿着 LineString 给定百分比的点 | 8.0.24 |  |'
- en: '| [`ST_LongFromGeoHash()`](spatial-geohash-functions.html#function_st-longfromgeohash)
    | Return longitude from geohash value |  |  |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_LongFromGeoHash()`](spatial-geohash-functions.html#function_st-longfromgeohash)
    | 从 geohash 值返回经度 |  |  |'
- en: '| [`ST_Longitude()`](gis-point-property-functions.html#function_st-longitude)
    | Return longitude of Point | 8.0.12 |  |'
  id: totrans-377
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Longitude()`](gis-point-property-functions.html#function_st-longitude)
    | 返回 Point 的经度 | 8.0.12 |  |'
- en: '| [`ST_MakeEnvelope()`](spatial-convenience-functions.html#function_st-makeenvelope)
    | Rectangle around two points |  |  |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_MakeEnvelope()`](spatial-convenience-functions.html#function_st-makeenvelope)
    | 两点围成的矩形 |  |  |'
- en: '| [`ST_MLineFromText()`, `ST_MultiLineStringFromText()`](gis-wkt-functions.html#function_st-mlinefromtext)
    | Construct MultiLineString from WKT |  |  |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_MLineFromText()`, `ST_MultiLineStringFromText()`](gis-wkt-functions.html#function_st-mlinefromtext)
    | 从 WKT 构建 MultiLineString |  |  |'
- en: '| [`ST_MLineFromWKB()`, `ST_MultiLineStringFromWKB()`](gis-wkb-functions.html#function_st-mlinefromwkb)
    | Construct MultiLineString from WKB |  |  |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_MLineFromWKB()`, `ST_MultiLineStringFromWKB()`](gis-wkb-functions.html#function_st-mlinefromwkb)
    | 从 WKB 构建 MultiLineString |  |  |'
- en: '| [`ST_MPointFromText()`, `ST_MultiPointFromText()`](gis-wkt-functions.html#function_st-mpointfromtext)
    | Construct MultiPoint from WKT |  |  |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_MPointFromText()`, `ST_MultiPointFromText()`](gis-wkt-functions.html#function_st-mpointfromtext)
    | 从 WKT 构建 MultiPoint |  |  |'
- en: '| [`ST_MPointFromWKB()`, `ST_MultiPointFromWKB()`](gis-wkb-functions.html#function_st-mpointfromwkb)
    | Construct MultiPoint from WKB |  |  |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_MPointFromWKB()`, `ST_MultiPointFromWKB()`](gis-wkb-functions.html#function_st-mpointfromwkb)
    | 从 WKB 构建 MultiPoint |  |  |'
- en: '| [`ST_MPolyFromText()`, `ST_MultiPolygonFromText()`](gis-wkt-functions.html#function_st-mpolyfromtext)
    | Construct MultiPolygon from WKT |  |  |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_MPolyFromText()`, `ST_MultiPolygonFromText()`](gis-wkt-functions.html#function_st-mpolyfromtext)
    | 从 WKT 构建 MultiPolygon |  |  |'
- en: '| [`ST_MPolyFromWKB()`, `ST_MultiPolygonFromWKB()`](gis-wkb-functions.html#function_st-mpolyfromwkb)
    | Construct MultiPolygon from WKB |  |  |'
  id: totrans-384
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_MPolyFromWKB()`, `ST_MultiPolygonFromWKB()`](gis-wkb-functions.html#function_st-mpolyfromwkb)
    | 从 WKB 构建 MultiPolygon |  |  |'
- en: '| [`ST_NumGeometries()`](gis-geometrycollection-property-functions.html#function_st-numgeometries)
    | Return number of geometries in geometry collection |  |  |'
  id: totrans-385
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_NumGeometries()`](gis-geometrycollection-property-functions.html#function_st-numgeometries)
    | 返回几何集合中的几何图形数量 |  |  |'
- en: '| [`ST_NumInteriorRing()`, `ST_NumInteriorRings()`](gis-polygon-property-functions.html#function_st-numinteriorrings)
    | Return number of interior rings in Polygon |  |  |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_NumInteriorRing()`, `ST_NumInteriorRings()`](gis-polygon-property-functions.html#function_st-numinteriorrings)
    | 返回多边形中的内部环数量 |  |  |'
- en: '| [`ST_NumPoints()`](gis-linestring-property-functions.html#function_st-numpoints)
    | Return number of points in LineString |  |  |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_NumPoints()`](gis-linestring-property-functions.html#function_st-numpoints)
    | 返回线串中的点数 |  |  |'
- en: '| [`ST_Overlaps()`](spatial-relation-functions-object-shapes.html#function_st-overlaps)
    | Whether one geometry overlaps another |  |  |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Overlaps()`](spatial-relation-functions-object-shapes.html#function_st-overlaps)
    | 一个几何图形是否与另一个重叠 |  |  |'
- en: '| [`ST_PointAtDistance()`](spatial-operator-functions.html#function_st-pointatdistance)
    | The point a given distance along a LineString | 8.0.24 |  |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_PointAtDistance()`](spatial-operator-functions.html#function_st-pointatdistance)
    | 沿着线串给定距离的点 | 8.0.24 |  |'
- en: '| [`ST_PointFromGeoHash()`](spatial-geohash-functions.html#function_st-pointfromgeohash)
    | Convert geohash value to POINT value |  |  |'
  id: totrans-390
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_PointFromGeoHash()`](spatial-geohash-functions.html#function_st-pointfromgeohash)
    | 将 geohash 值转换为 POINT 值 |  |  |'
- en: '| [`ST_PointFromText()`](gis-wkt-functions.html#function_st-pointfromtext)
    | Construct Point from WKT |  |  |'
  id: totrans-391
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_PointFromText()`](gis-wkt-functions.html#function_st-pointfromtext)
    | 从 WKT 构造点 |  |  |'
- en: '| [`ST_PointFromWKB()`](gis-wkb-functions.html#function_st-pointfromwkb) |
    Construct Point from WKB |  |  |'
  id: totrans-392
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_PointFromWKB()`](gis-wkb-functions.html#function_st-pointfromwkb) |
    从 WKB 构造点 |  |  |'
- en: '| [`ST_PointN()`](gis-linestring-property-functions.html#function_st-pointn)
    | Return N-th point from LineString |  |  |'
  id: totrans-393
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_PointN()`](gis-linestring-property-functions.html#function_st-pointn)
    | 返回线串中第 N 个点 |  |  |'
- en: '| [`ST_PolyFromText()`, `ST_PolygonFromText()`](gis-wkt-functions.html#function_st-polyfromtext)
    | Construct Polygon from WKT |  |  |'
  id: totrans-394
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_PolyFromText()`, `ST_PolygonFromText()`](gis-wkt-functions.html#function_st-polyfromtext)
    | 从 WKT 构造多边形 |  |  |'
- en: '| [`ST_PolyFromWKB()`, `ST_PolygonFromWKB()`](gis-wkb-functions.html#function_st-polyfromwkb)
    | Construct Polygon from WKB |  |  |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_PolyFromWKB()`, `ST_PolygonFromWKB()`](gis-wkb-functions.html#function_st-polyfromwkb)
    | 从 WKB 构造多边形 |  |  |'
- en: '| [`ST_Simplify()`](spatial-convenience-functions.html#function_st-simplify)
    | Return simplified geometry |  |  |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Simplify()`](spatial-convenience-functions.html#function_st-simplify)
    | 返回简化后的几何图形 |  |  |'
- en: '| [`ST_SRID()`](gis-general-property-functions.html#function_st-srid) | Return
    spatial reference system ID for geometry |  |  |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_SRID()`](gis-general-property-functions.html#function_st-srid) | 返回几何图形的空间参考系统
    ID |  |  |'
- en: '| [`ST_StartPoint()`](gis-linestring-property-functions.html#function_st-startpoint)
    | Start Point of LineString |  |  |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_StartPoint()`](gis-linestring-property-functions.html#function_st-startpoint)
    | 线串的起始点 |  |  |'
- en: '| [`ST_SwapXY()`](gis-format-conversion-functions.html#function_st-swapxy)
    | Return argument with X/Y coordinates swapped |  |  |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_SwapXY()`](gis-format-conversion-functions.html#function_st-swapxy)
    | 返回 X/Y 坐标交换的参数 |  |  |'
- en: '| [`ST_SymDifference()`](spatial-operator-functions.html#function_st-symdifference)
    | Return point set symmetric difference of two geometries |  |  |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_SymDifference()`](spatial-operator-functions.html#function_st-symdifference)
    | 返回两个几何图形的点集对称差 |  |  |'
- en: '| [`ST_Touches()`](spatial-relation-functions-object-shapes.html#function_st-touches)
    | Whether one geometry touches another |  |  |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Touches()`](spatial-relation-functions-object-shapes.html#function_st-touches)
    | 一个几何图形是否与另一个相接触 |  |  |'
- en: '| [`ST_Transform()`](spatial-operator-functions.html#function_st-transform)
    | Transform coordinates of geometry | 8.0.13 |  |'
  id: totrans-402
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Transform()`](spatial-operator-functions.html#function_st-transform)
    | 转换几何图形的坐标 | 8.0.13 |  |'
- en: '| [`ST_Union()`](spatial-operator-functions.html#function_st-union) | Return
    point set union of two geometries |  |  |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Union()`](spatial-operator-functions.html#function_st-union) | 返回两个几何图形的点集并集
    |  |  |'
- en: '| [`ST_Validate()`](spatial-convenience-functions.html#function_st-validate)
    | Return validated geometry |  |  |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Validate()`](spatial-convenience-functions.html#function_st-validate)
    | 返回经过验证的几何图形 |  |  |'
- en: '| [`ST_Within()`](spatial-relation-functions-object-shapes.html#function_st-within)
    | Whether one geometry is within another |  |  |'
  id: totrans-405
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Within()`](spatial-relation-functions-object-shapes.html#function_st-within)
    | 一个几何图形是否在另一个内部 |  |  |'
- en: '| [`ST_X()`](gis-point-property-functions.html#function_st-x) | Return X coordinate
    of Point |  |  |'
  id: totrans-406
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_X()`](gis-point-property-functions.html#function_st-x) | 返回点的 X 坐标 |  |  |'
- en: '| [`ST_Y()`](gis-point-property-functions.html#function_st-y) | Return Y coordinate
    of Point |  |  |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '| [`ST_Y()`](gis-point-property-functions.html#function_st-y) | 返回点的 Y 坐标 |  |  |'
- en: '| [`STATEMENT_DIGEST()`](encryption-functions.html#function_statement-digest)
    | Compute statement digest hash value |  |  |'
  id: totrans-408
  prefs: []
  type: TYPE_TB
  zh: '| [`STATEMENT_DIGEST()`](encryption-functions.html#function_statement-digest)
    | 计算语句摘要哈希值 |  |  |'
- en: '| [`STATEMENT_DIGEST_TEXT()`](encryption-functions.html#function_statement-digest-text)
    | Compute normalized statement digest |  |  |'
  id: totrans-409
  prefs: []
  type: TYPE_TB
  zh: '| [`STATEMENT_DIGEST_TEXT()`](encryption-functions.html#function_statement-digest-text)
    | 计算规范化语句摘要 |  |  |'
- en: '| [`STD()`](aggregate-functions.html#function_std) | Return the population
    standard deviation |  |  |'
  id: totrans-410
  prefs: []
  type: TYPE_TB
  zh: '| [`STD()`](aggregate-functions.html#function_std) | 返回总体标准偏差 |  |  |'
- en: '| [`STDDEV()`](aggregate-functions.html#function_stddev) | Return the population
    standard deviation |  |  |'
  id: totrans-411
  prefs: []
  type: TYPE_TB
  zh: '| [`STDDEV()`](aggregate-functions.html#function_stddev) | 返回总体标准偏差 |  |  |'
- en: '| [`STDDEV_POP()`](aggregate-functions.html#function_stddev-pop) | Return the
    population standard deviation |  |  |'
  id: totrans-412
  prefs: []
  type: TYPE_TB
  zh: '| [`STDDEV_POP()`](aggregate-functions.html#function_stddev-pop) | 返回总体标准偏差
    |  |  |'
- en: '| [`STDDEV_SAMP()`](aggregate-functions.html#function_stddev-samp) | Return
    the sample standard deviation |  |  |'
  id: totrans-413
  prefs: []
  type: TYPE_TB
  zh: '| [`STDDEV_SAMP()`](aggregate-functions.html#function_stddev-samp) | 返回样本标准偏差
    |  |  |'
- en: '| [`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date) | Convert
    a string to a date |  |  |'
  id: totrans-414
  prefs: []
  type: TYPE_TB
  zh: '| [`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date) | 将字符串转换为日期
    |  |  |'
- en: '| [`STRCMP()`](string-comparison-functions.html#function_strcmp) | Compare
    two strings |  |  |'
  id: totrans-415
  prefs: []
  type: TYPE_TB
  zh: '| [`STRCMP()`](string-comparison-functions.html#function_strcmp) | 比较两个字符串
    |  |  |'
- en: '| [`SUBDATE()`](date-and-time-functions.html#function_subdate) | Synonym for
    DATE_SUB() when invoked with three arguments |  |  |'
  id: totrans-416
  prefs: []
  type: TYPE_TB
  zh: '| [`SUBDATE()`](date-and-time-functions.html#function_subdate) | 在使用三个参数调用时，DATE_SUB()的同义词
    |  |  |'
- en: '| [`SUBSTR()`](string-functions.html#function_substr) | Return the substring
    as specified |  |  |'
  id: totrans-417
  prefs: []
  type: TYPE_TB
  zh: '| [`SUBSTR()`](string-functions.html#function_substr) | 返回指定的子字符串 |  |  |'
- en: '| [`SUBSTRING()`](string-functions.html#function_substring) | Return the substring
    as specified |  |  |'
  id: totrans-418
  prefs: []
  type: TYPE_TB
  zh: '| [`SUBSTRING()`](string-functions.html#function_substring) | 返���指定的子字符串 |  |  |'
- en: '| [`SUBSTRING_INDEX()`](string-functions.html#function_substring-index) | Return
    a substring from a string before the specified number of occurrences of the delimiter
    |  |  |'
  id: totrans-419
  prefs: []
  type: TYPE_TB
  zh: '| [`SUBSTRING_INDEX()`](string-functions.html#function_substring-index) | 返回指定分隔符出现次数之前的字符串子串
    |  |  |'
- en: '| [`SUBTIME()`](date-and-time-functions.html#function_subtime) | Subtract times
    |  |  |'
  id: totrans-420
  prefs: []
  type: TYPE_TB
  zh: '| [`SUBTIME()`](date-and-time-functions.html#function_subtime) | 减去时间 |  |  |'
- en: '| [`SUM()`](aggregate-functions.html#function_sum) | Return the sum |  |  |'
  id: totrans-421
  prefs: []
  type: TYPE_TB
  zh: '| [`SUM()`](aggregate-functions.html#function_sum) | 返回总和 |  |  |'
- en: '| [`SYSDATE()`](date-and-time-functions.html#function_sysdate) | Return the
    time at which the function executes |  |  |'
  id: totrans-422
  prefs: []
  type: TYPE_TB
  zh: '| [`SYSDATE()`](date-and-time-functions.html#function_sysdate) | 返回函数执行时的时间
    |  |  |'
- en: '| [`SYSTEM_USER()`](information-functions.html#function_system-user) | Synonym
    for USER() |  |  |'
  id: totrans-423
  prefs: []
  type: TYPE_TB
  zh: '| [`SYSTEM_USER()`](information-functions.html#function_system-user) | USER()的同义词
    |  |  |'
- en: '| [`TAN()`](mathematical-functions.html#function_tan) | Return the tangent
    of the argument |  |  |'
  id: totrans-424
  prefs: []
  type: TYPE_TB
  zh: '| [`TAN()`](mathematical-functions.html#function_tan) | 返回参数的正切 |  |  |'
- en: '| [`TIME()`](date-and-time-functions.html#function_time) | Extract the time
    portion of the expression passed |  |  |'
  id: totrans-425
  prefs: []
  type: TYPE_TB
  zh: '| [`TIME()`](date-and-time-functions.html#function_time) | 提取传递表达式的时间部分 |  |  |'
- en: '| [`TIME_FORMAT()`](date-and-time-functions.html#function_time-format) | Format
    as time |  |  |'
  id: totrans-426
  prefs: []
  type: TYPE_TB
  zh: '| [`TIME_FORMAT()`](date-and-time-functions.html#function_time-format) | 格式化为时间
    |  |  |'
- en: '| [`TIME_TO_SEC()`](date-and-time-functions.html#function_time-to-sec) | Return
    the argument converted to seconds |  |  |'
  id: totrans-427
  prefs: []
  type: TYPE_TB
  zh: '| [`TIME_TO_SEC()`](date-and-time-functions.html#function_time-to-sec) | 返回转换为秒的参数
    |  |  |'
- en: '| [`TIMEDIFF()`](date-and-time-functions.html#function_timediff) | Subtract
    time |  |  |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| [`TIMEDIFF()`](date-and-time-functions.html#function_timediff) | 减去时间 |  |  |'
- en: '| [`TIMESTAMP()`](date-and-time-functions.html#function_timestamp) | With a
    single argument, this function returns the date or datetime expression; with two
    arguments, the sum of the arguments |  |  |'
  id: totrans-429
  prefs: []
  type: TYPE_TB
  zh: '| [`TIMESTAMP()`](date-and-time-functions.html#function_timestamp) | 使用单个参数，此函数返回日期或日期时间表达式；使用两个参数，返回参数的总和
    |  |  |'
- en: '| [`TIMESTAMPADD()`](date-and-time-functions.html#function_timestampadd) |
    Add an interval to a datetime expression |  |  |'
  id: totrans-430
  prefs: []
  type: TYPE_TB
  zh: '| [`TIMESTAMPADD()`](date-and-time-functions.html#function_timestampadd) |
    将间隔添加到日期时间表达式 |  |  |'
- en: '| [`TIMESTAMPDIFF()`](date-and-time-functions.html#function_timestampdiff)
    | Return the difference of two datetime expressions, using the units specified
    |  |  |'
  id: totrans-431
  prefs: []
  type: TYPE_TB
  zh: '| [`TIMESTAMPDIFF()`](date-and-time-functions.html#function_timestampdiff)
    | 返回两个日期时间表达式的差异，使用指定的单位 |  |  |'
- en: '| [`TO_BASE64()`](string-functions.html#function_to-base64) | Return the argument
    converted to a base-64 string |  |  |'
  id: totrans-432
  prefs: []
  type: TYPE_TB
  zh: '| [`TO_BASE64()`](string-functions.html#function_to-base64) | 返回转换为base-64字符串的参数
    |  |  |'
- en: '| [`TO_DAYS()`](date-and-time-functions.html#function_to-days) | Return the
    date argument converted to days |  |  |'
  id: totrans-433
  prefs: []
  type: TYPE_TB
  zh: '| [`TO_DAYS()`](date-and-time-functions.html#function_to-days) | 返回转换为天数的日期参数
    |  |  |'
- en: '| [`TO_SECONDS()`](date-and-time-functions.html#function_to-seconds) | Return
    the date or datetime argument converted to seconds since Year 0 |  |  |'
  id: totrans-434
  prefs: []
  type: TYPE_TB
  zh: '| [`TO_SECONDS()`](date-and-time-functions.html#function_to-seconds) | 返回自公元0年以来的秒数转换为日期或日期时间参数
    |  |  |'
- en: '| [`TRIM()`](string-functions.html#function_trim) | Remove leading and trailing
    spaces |  |  |'
  id: totrans-435
  prefs: []
  type: TYPE_TB
  zh: '| [`TRIM()`](string-functions.html#function_trim) | 移除前导和尾随空格 |  |  |'
- en: '| [`TRUNCATE()`](mathematical-functions.html#function_truncate) | Truncate
    to specified number of decimal places |  |  |'
  id: totrans-436
  prefs: []
  type: TYPE_TB
  zh: '| [`TRUNCATE()`](mathematical-functions.html#function_truncate) | 截断到指定的小数位数
    |  |  |'
- en: '| [`UCASE()`](string-functions.html#function_ucase) | Synonym for UPPER() |  |  |'
  id: totrans-437
  prefs: []
  type: TYPE_TB
  zh: '| [`UCASE()`](string-functions.html#function_ucase) | UPPER()的同义词 |  |  |'
- en: '| [`UNCOMPRESS()`](encryption-functions.html#function_uncompress) | Uncompress
    a string compressed |  |  |'
  id: totrans-438
  prefs: []
  type: TYPE_TB
  zh: '| [`UNCOMPRESS()`](encryption-functions.html#function_uncompress) | 解压缩压缩的字符串
    |  |  |'
- en: '| [`UNCOMPRESSED_LENGTH()`](encryption-functions.html#function_uncompressed-length)
    | Return the length of a string before compression |  |  |'
  id: totrans-439
  prefs: []
  type: TYPE_TB
  zh: '| [`UNCOMPRESSED_LENGTH()`](encryption-functions.html#function_uncompressed-length)
    | 返回压缩前字符串的长度 |  |  |'
- en: '| [`UNHEX()`](string-functions.html#function_unhex) | Return a string containing
    hex representation of a number |  |  |'
  id: totrans-440
  prefs: []
  type: TYPE_TB
  zh: '| [`UNHEX()`](string-functions.html#function_unhex) | 返回包含数字的十六进制表示的字符串 |  |  |'
- en: '| [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    | Return a Unix timestamp |  |  |'
  id: totrans-441
  prefs: []
  type: TYPE_TB
  zh: '| [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    | 返回Unix时间戳 |  |  |'
- en: '| [`UpdateXML()`](xml-functions.html#function_updatexml) | Return replaced
    XML fragment |  |  |'
  id: totrans-442
  prefs: []
  type: TYPE_TB
  zh: '| [`UpdateXML()`](xml-functions.html#function_updatexml) | 返回替换的XML片段 |  |  |'
- en: '| [`UPPER()`](string-functions.html#function_upper) | Convert to uppercase
    |  |  |'
  id: totrans-443
  prefs: []
  type: TYPE_TB
  zh: '| [`UPPER()`](string-functions.html#function_upper) | 转换为大写 |  |  |'
- en: '| [`USER()`](information-functions.html#function_user) | The user name and
    host name provided by the client |  |  |'
  id: totrans-444
  prefs: []
  type: TYPE_TB
  zh: '| [`USER()`](information-functions.html#function_user) | 客户端提供的用户名和主机名 |  |  |'
- en: '| [`UTC_DATE()`](date-and-time-functions.html#function_utc-date) | Return the
    current UTC date |  |  |'
  id: totrans-445
  prefs: []
  type: TYPE_TB
  zh: '| [`UTC_DATE()`](date-and-time-functions.html#function_utc-date) | 返回当前的UTC日期
    |  |  |'
- en: '| [`UTC_TIME()`](date-and-time-functions.html#function_utc-time) | Return the
    current UTC time |  |  |'
  id: totrans-446
  prefs: []
  type: TYPE_TB
  zh: '| [`UTC_TIME()`](date-and-time-functions.html#function_utc-time) | 返回当前的UTC时间
    |  |  |'
- en: '| [`UTC_TIMESTAMP()`](date-and-time-functions.html#function_utc-timestamp)
    | Return the current UTC date and time |  |  |'
  id: totrans-447
  prefs: []
  type: TYPE_TB
  zh: '| [`UTC_TIMESTAMP()`](date-and-time-functions.html#function_utc-timestamp)
    | 返回当前的UTC日期和时间 |  |  |'
- en: '| [`UUID()`](miscellaneous-functions.html#function_uuid) | Return a Universal
    Unique Identifier (UUID) |  |  |'
  id: totrans-448
  prefs: []
  type: TYPE_TB
  zh: '| [`UUID()`](miscellaneous-functions.html#function_uuid) | 返回通用唯一标识符（UUID）
    |  |  |'
- en: '| [`UUID_SHORT()`](miscellaneous-functions.html#function_uuid-short) | Return
    an integer-valued universal identifier |  |  |'
  id: totrans-449
  prefs: []
  type: TYPE_TB
  zh: '| [`UUID_SHORT()`](miscellaneous-functions.html#function_uuid-short) | 返回整数值通用标识符
    |  |  |'
- en: '| [`UUID_TO_BIN()`](miscellaneous-functions.html#function_uuid-to-bin) | Convert
    string UUID to binary |  |  |'
  id: totrans-450
  prefs: []
  type: TYPE_TB
  zh: '| [`UUID_TO_BIN()`](miscellaneous-functions.html#function_uuid-to-bin) | 将字符串UUID转换为二进制
    |  |  |'
- en: '| [`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)
    | Determine strength of password |  |  |'
  id: totrans-451
  prefs: []
  type: TYPE_TB
  zh: '| [`VALIDATE_PASSWORD_STRENGTH()`](encryption-functions.html#function_validate-password-strength)
    | 确定密码强度 |  |  |'
- en: '| [`VALUES()`](miscellaneous-functions.html#function_values) | Define the values
    to be used during an INSERT |  |  |'
  id: totrans-452
  prefs: []
  type: TYPE_TB
  zh: '| [`VALUES()`](miscellaneous-functions.html#function_values) | 定义在INSERT期间要使用的值
    |  |  |'
- en: '| [`VAR_POP()`](aggregate-functions.html#function_var-pop) | Return the population
    standard variance |  |  |'
  id: totrans-453
  prefs: []
  type: TYPE_TB
  zh: '| [`VAR_POP()`](aggregate-functions.html#function_var-pop) | 返回总体标准方差 |  |  |'
- en: '| [`VAR_SAMP()`](aggregate-functions.html#function_var-samp) | Return the sample
    variance |  |  |'
  id: totrans-454
  prefs: []
  type: TYPE_TB
  zh: '| [`VAR_SAMP()`](aggregate-functions.html#function_var-samp) | 返回样本方差 |  |  |'
- en: '| [`VARIANCE()`](aggregate-functions.html#function_variance) | Return the population
    standard variance |  |  |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| [`VARIANCE()`](aggregate-functions.html#function_variance) | 返回总体标准方差 |  |  |'
- en: '| [`VERSION()`](information-functions.html#function_version) | Return a string
    that indicates the MySQL server version |  |  |'
  id: totrans-456
  prefs: []
  type: TYPE_TB
  zh: '| [`VERSION()`](information-functions.html#function_version) | 返回指示MySQL服务器版本的字符串
    |  |  |'
- en: '| [`WAIT_FOR_EXECUTED_GTID_SET()`](gtid-functions.html#function_wait-for-executed-gtid-set)
    | Wait until the given GTIDs have executed on the replica. |  |  |'
  id: totrans-457
  prefs: []
  type: TYPE_TB
  zh: '| [`WAIT_FOR_EXECUTED_GTID_SET()`](gtid-functions.html#function_wait-for-executed-gtid-set)
    | 等待副本上执行给定的GTIDs。 |  |  |'
- en: '| [`WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS()`](gtid-functions.html#function_wait-until-sql-thread-after-gtids)
    | Use `WAIT_FOR_EXECUTED_GTID_SET()`. |  | 8.0.18 |'
  id: totrans-458
  prefs: []
  type: TYPE_TB
  zh: '| [`WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS()`](gtid-functions.html#function_wait-until-sql-thread-after-gtids)
    | 使用 `WAIT_FOR_EXECUTED_GTID_SET()`。 |  | 8.0.18 |'
- en: '| [`WEEK()`](date-and-time-functions.html#function_week) | Return the week
    number |  |  |'
  id: totrans-459
  prefs: []
  type: TYPE_TB
  zh: '| [`WEEK()`](date-and-time-functions.html#function_week) | 返回周数 |  |  |'
- en: '| [`WEEKDAY()`](date-and-time-functions.html#function_weekday) | Return the
    weekday index |  |  |'
  id: totrans-460
  prefs: []
  type: TYPE_TB
  zh: '| [`WEEKDAY()`](date-and-time-functions.html#function_weekday) | 返回星期索引 |  |  |'
- en: '| [`WEEKOFYEAR()`](date-and-time-functions.html#function_weekofyear) | Return
    the calendar week of the date (1-53) |  |  |'
  id: totrans-461
  prefs: []
  type: TYPE_TB
  zh: '| [`WEEKOFYEAR()`](date-and-time-functions.html#function_weekofyear) | 返回日期的日历周数（1-53）
    |  |  |'
- en: '| [`WEIGHT_STRING()`](string-functions.html#function_weight-string) | Return
    the weight string for a string |  |  |'
  id: totrans-462
  prefs: []
  type: TYPE_TB
  zh: '| [`WEIGHT_STRING()`](string-functions.html#function_weight-string) | 返回字符串的权重字符串
    |  |  |'
- en: '| [`XOR`](logical-operators.html#operator_xor) | Logical XOR |  |  |'
  id: totrans-463
  prefs: []
  type: TYPE_TB
  zh: '| [`XOR`](logical-operators.html#operator_xor) | 逻辑异或 |  |  |'
- en: '| [`YEAR()`](date-and-time-functions.html#function_year) | Return the year
    |  |  |'
  id: totrans-464
  prefs: []
  type: TYPE_TB
  zh: '| [`YEAR()`](date-and-time-functions.html#function_year) | 返回年份 |  |  |'
- en: '| [`YEARWEEK()`](date-and-time-functions.html#function_yearweek) | Return the
    year and week |  |  |'
  id: totrans-465
  prefs: []
  type: TYPE_TB
  zh: '| [`YEARWEEK()`](date-and-time-functions.html#function_yearweek) | 返回年份和周数
    |  |  |'
- en: '| [`&#124;`](bit-functions.html#operator_bitwise-or) | Bitwise OR |  |  |'
  id: totrans-466
  prefs: []
  type: TYPE_TB
  zh: '| [`&#124;`](bit-functions.html#operator_bitwise-or) | 按位或 |  |  |'
- en: '| [`~`](bit-functions.html#operator_bitwise-invert) | Bitwise inversion |  |  |'
  id: totrans-467
  prefs: []
  type: TYPE_TB
  zh: '| [`~`](bit-functions.html#operator_bitwise-invert) | 按位取反 |  |  |'
- en: '| Name | Description | Introduced | Deprecated |'
  id: totrans-468
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 | 引入版本 | 废弃版本 |'
