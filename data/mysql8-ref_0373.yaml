- en: 8.2.13 When Privilege Changes Take Effect
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8.2.13 权限更改何时生效
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/privilege-changes.html](https://dev.mysql.com/doc/refman/8.0/en/privilege-changes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/privilege-changes.html](https://dev.mysql.com/doc/refman/8.0/en/privilege-changes.html)
- en: If the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") server is
    started without the [`--skip-grant-tables`](server-options.html#option_mysqld_skip-grant-tables)
    option, it reads all grant table contents into memory during its startup sequence.
    The in-memory tables become effective for access control at that point.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")服务器在没有[`--skip-grant-tables`](server-options.html#option_mysqld_skip-grant-tables)选项的情况下启动，它在启动序列期间将所有授权表内容读入内存。在那一点上，内存中的表对访问控制生效。
- en: If you modify the grant tables indirectly using an account-management statement,
    the server notices these changes and loads the grant tables into memory again
    immediately. Account-management statements are described in [Section 15.7.1, “Account
    Management Statements”](account-management-statements.html "15.7.1 Account Management
    Statements"). Examples include [`GRANT`](grant.html "15.7.1.6 GRANT Statement"),
    [`REVOKE`](revoke.html "15.7.1.8 REVOKE Statement"), [`SET PASSWORD`](set-password.html
    "15.7.1.10 SET PASSWORD Statement"), and [`RENAME USER`](rename-user.html "15.7.1.7 RENAME
    USER Statement").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您间接修改授权表，使用帐户管理语句，服务器会立即注意到这些更改并重新加载授权表到内存中。帐户管理语句在[第15.7.1节“帐户管理语句”](account-management-statements.html
    "15.7.1 Account Management Statements")中描述。例如包括[`GRANT`](grant.html "15.7.1.6 GRANT
    Statement")、[`REVOKE`](revoke.html "15.7.1.8 REVOKE Statement")、[`SET PASSWORD`](set-password.html
    "15.7.1.10 SET PASSWORD Statement")和[`RENAME USER`](rename-user.html "15.7.1.7 RENAME
    USER Statement")。
- en: If you modify the grant tables directly using statements such as [`INSERT`](insert.html
    "15.2.7 INSERT Statement"), [`UPDATE`](update.html "15.2.17 UPDATE Statement"),
    or [`DELETE`](delete.html "15.2.2 DELETE Statement") (which is not recommended),
    the changes have no effect on privilege checking until you either tell the server
    to reload the tables or restart it. Thus, if you change the grant tables directly
    but forget to reload them, the changes have *no effect* until you restart the
    server. This may leave you wondering why your changes seem to make no difference!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您直接修改授权表，使用诸如[`INSERT`](insert.html "15.2.7 INSERT Statement")、[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")或[`DELETE`](delete.html "15.2.2 DELETE Statement")等语句（不建议这样做），则在告知服务器重新加载表或重新启动之前，更改不会影响权限检查。因此，如果您直接更改授权表但忘记重新加载它们，更改将*不会生效*，直到重新启动服务器。这可能会让您想知道为什么您的更改似乎没有任何影响！
- en: To tell the server to reload the grant tables, perform a flush-privileges operation.
    This can be done by issuing a [`FLUSH PRIVILEGES`](flush.html#flush-privileges)
    statement or by executing a [**mysqladmin flush-privileges**](mysqladmin.html
    "6.5.2 mysqladmin — A MySQL Server Administration Program") or [**mysqladmin reload**](mysqladmin.html
    "6.5.2 mysqladmin — A MySQL Server Administration Program") command.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要告知服务器重新加载授权表，请执行刷新权限操作。这可以通过发出[`FLUSH PRIVILEGES`](flush.html#flush-privileges)语句或执行[**mysqladmin
    flush-privileges**](mysqladmin.html "6.5.2 mysqladmin — A MySQL Server Administration
    Program")或[**mysqladmin reload**](mysqladmin.html "6.5.2 mysqladmin — A MySQL
    Server Administration Program")命令来完成。
- en: 'A grant table reload affects privileges for each existing client session as
    follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 重新加载授权表会影响每个现有客户端会话的权限：
- en: Table and column privilege changes take effect with the client's next request.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表和列权限更改将在客户端的下一个请求中生效。
- en: Database privilege changes take effect the next time the client executes a `USE
    *`db_name`*` statement.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库权限更改将在客户端执行`USE *`db_name`*`语句的下一次生效。
- en: Note
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Client applications may cache the database name; thus, this effect may not be
    visible to them without actually changing to a different database.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 客户端应用程序可能会缓存数据库名称；因此，这种效果可能对它们不可见，除非实际更改为不同的数据库。
- en: Static global privileges and passwords are unaffected for a connected client.
    These changes take effect only in sessions for subsequent connections. Changes
    to dynamic global privileges apply immediately. For information about the differences
    between static and dynamic privileges, see [Static Versus Dynamic Privileges](privileges-provided.html#static-dynamic-privileges
    "Static Versus Dynamic Privileges").)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态全局权限和密码对已连接的客户端不受影响。这些更改仅在后续连接的会话中生效。动态全局权限的更改立即生效。有关静态和动态权限之间的区别，请参阅[静态与动态权限](privileges-provided.html#static-dynamic-privileges
    "Static Versus Dynamic Privileges")。
- en: Changes to the set of active roles within a session take effect immediately,
    for that session only. The [`SET ROLE`](set-role.html "15.7.1.11 SET ROLE Statement")
    statement performs session role activation and deactivation (see [Section 15.7.1.11,
    “SET ROLE Statement”](set-role.html "15.7.1.11 SET ROLE Statement")).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 会话中活动角色集的更改立即生效，仅对该会话有效。[`SET ROLE`](set-role.html "15.7.1.11 SET ROLE Statement")语句执行会话角色的激活和停用（参见[第15.7.1.11节，“SET
    ROLE Statement”](set-role.html "15.7.1.11 SET ROLE Statement")）。
- en: If the server is started with the [`--skip-grant-tables`](server-options.html#option_mysqld_skip-grant-tables)
    option, it does not read the grant tables or implement any access control. Any
    user can connect and perform any operation, *which is insecure.* To cause a server
    thus started to read the tables and enable access checking, flush the privileges.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果服务器使用[`--skip-grant-tables`](server-options.html#option_mysqld_skip-grant-tables)选项启动，则不会读取授权表或实施任何访问控制。任何用户都可以连接并执行任何操作，*这是不安全的*。要使这样启动的服务器读取表并启用访问检查，请刷新权限。
