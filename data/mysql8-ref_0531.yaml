- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/distinct-optimization.html](https://dev.mysql.com/doc/refman/8.0/en/distinct-optimization.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/distinct-optimization.html](https://dev.mysql.com/doc/refman/8.0/en/distinct-optimization.html)
- en: 10.2.1.18 DISTINCT Optimization
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.2.1.18 **DISTINCT** 优化
- en: '`DISTINCT` combined with `ORDER BY` needs a temporary table in many cases.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`DISTINCT` 与 `ORDER BY` 结合在许多情况下需要一个临时表。'
- en: Because `DISTINCT` may use `GROUP BY`, learn how MySQL works with columns in
    `ORDER BY` or `HAVING` clauses that are not part of the selected columns. See
    [Section 14.19.3, “MySQL Handling of GROUP BY”](group-by-handling.html "14.19.3 MySQL
    Handling of GROUP BY").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 `DISTINCT` 可能使用 `GROUP BY`，了解 MySQL 如何处理 `ORDER BY` 或 `HAVING` 子句中不属于所选列的列。请参见
    [Section 14.19.3, “MySQL Handling of GROUP BY”](group-by-handling.html "14.19.3 MySQL
    Handling of GROUP BY")。
- en: 'In most cases, a `DISTINCT` clause can be considered as a special case of `GROUP
    BY`. For example, the following two queries are equivalent:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，`DISTINCT` 子句可以被视为 `GROUP BY` 的特例。例如，以下两个查询是等效的：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Due to this equivalence, the optimizations applicable to `GROUP BY` queries
    can be also applied to queries with a `DISTINCT` clause. Thus, for more details
    on the optimization possibilities for `DISTINCT` queries, see [Section 10.2.1.17,
    “GROUP BY Optimization”](group-by-optimization.html "10.2.1.17 GROUP BY Optimization").
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这种等价性，适用于 `GROUP BY` 查询的优化也可以应用于带有 `DISTINCT` 子句的查询。因此，有关 `DISTINCT` 查询的优化可能性的更多详细信息，请参见
    [Section 10.2.1.17, “GROUP BY Optimization”](group-by-optimization.html "10.2.1.17 GROUP
    BY Optimization")。
- en: When combining `LIMIT *`row_count`*` with `DISTINCT`, MySQL stops as soon as
    it finds *`row_count`* unique rows.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当将 `LIMIT *`row_count`*` 与 `DISTINCT` 结合时，MySQL 会在找到 *`row_count`* 个唯一行后停止。
- en: 'If you do not use columns from all tables named in a query, MySQL stops scanning
    any unused tables as soon as it finds the first match. In the following case,
    assuming that `t1` is used before `t2` (which you can check with [`EXPLAIN`](explain.html
    "15.8.2 EXPLAIN Statement")), MySQL stops reading from `t2` (for any particular
    row in `t1`) when it finds the first row in `t2`:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在查询中没有使用所有表中的列，MySQL 会在找到第一个匹配项后停止扫描任何未使用的表。在以下情况下，假设 `t1` 在 `t2` 之前被使用（您可以通过
    [`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement") 进行检查），MySQL 在找到 `t2` 的第一行后（对于
    `t1` 中的任何特定行）停止从 `t2` 中读取：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
