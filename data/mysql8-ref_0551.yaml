- en: 10.3 Optimization and Indexes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10.3 优化和索引
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/optimization-indexes.html](https://dev.mysql.com/doc/refman/8.0/en/optimization-indexes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/optimization-indexes.html](https://dev.mysql.com/doc/refman/8.0/en/optimization-indexes.html)
- en: '[10.3.1 How MySQL Uses Indexes](mysql-indexes.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.1 MySQL 如何使用索引](mysql-indexes.html)'
- en: '[10.3.2 Primary Key Optimization](primary-key-optimization.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.2 主键优化](primary-key-optimization.html)'
- en: '[10.3.3 SPATIAL Index Optimization](spatial-index-optimization.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.3 空间索引优化](spatial-index-optimization.html)'
- en: '[10.3.4 Foreign Key Optimization](foreign-key-optimization.html)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.4 外键优化](foreign-key-optimization.html)'
- en: '[10.3.5 Column Indexes](column-indexes.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.5 列索引](column-indexes.html)'
- en: '[10.3.6 Multiple-Column Indexes](multiple-column-indexes.html)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.6 多列索引](multiple-column-indexes.html)'
- en: '[10.3.7 Verifying Index Usage](verifying-index-usage.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.7 验证索引使用](verifying-index-usage.html)'
- en: '[10.3.8 InnoDB and MyISAM Index Statistics Collection](index-statistics.html)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.8 InnoDB 和 MyISAM 索引统计收集](index-statistics.html)'
- en: '[10.3.9 Comparison of B-Tree and Hash Indexes](index-btree-hash.html)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.9 B-Tree 和 Hash 索引的比较](index-btree-hash.html)'
- en: '[10.3.10 Use of Index Extensions](index-extensions.html)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.10 索引扩展的使用](index-extensions.html)'
- en: '[10.3.11 Optimizer Use of Generated Column Indexes](generated-column-index-optimizations.html)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.11 优化器使用生成列索引](generated-column-index-optimizations.html)'
- en: '[10.3.12 Invisible Indexes](invisible-indexes.html)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.12 隐藏索引](invisible-indexes.html)'
- en: '[10.3.13 Descending Indexes](descending-indexes.html)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.13 降序索引](descending-indexes.html)'
- en: '[10.3.14 Indexed Lookups from TIMESTAMP Columns](timestamp-lookups.html)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.3.14 从时间戳列进行索引查找](timestamp-lookups.html)'
- en: The best way to improve the performance of [`SELECT`](select.html "15.2.13 SELECT
    Statement") operations is to create indexes on one or more of the columns that
    are tested in the query. The index entries act like pointers to the table rows,
    allowing the query to quickly determine which rows match a condition in the `WHERE`
    clause, and retrieve the other column values for those rows. All MySQL data types
    can be indexed.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 提高 [`SELECT`](select.html "15.2.13 SELECT 语句") 操作性能的最佳方法是在查询中测试的一个或多个列上创建索引。索引条目就像指向表行的指针，允许查询快速确定哪些行符合
    `WHERE` 子句中的条件，并检索这些行的其他列值。所有 MySQL 数据类型都可以被索引。
- en: Although it can be tempting to create an indexes for every possible column used
    in a query, unnecessary indexes waste space and waste time for MySQL to determine
    which indexes to use. Indexes also add to the cost of inserts, updates, and deletes
    because each index must be updated. You must find the right balance to achieve
    fast queries using the optimal set of indexes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管为查询中使用的每个可能的列创建索引可能很诱人，但不必要的索引会浪费空间，也会浪费 MySQL 确定要使用哪些索引的时间。索引还会增加插入、更新和删除的成本，因为每个索引都必须更新。您必须找到正确的平衡，以使用最佳的索引集实现快速查询。
