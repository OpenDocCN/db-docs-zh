- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/scalar-subqueries.html](https://dev.mysql.com/doc/refman/8.0/en/scalar-subqueries.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/scalar-subqueries.html](https://dev.mysql.com/doc/refman/8.0/en/scalar-subqueries.html)
- en: 15.2.15.1 The Subquery as Scalar Operand
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.2.15.1 标量操作数的子查询
- en: 'In its simplest form, a subquery is a scalar subquery that returns a single
    value. A scalar subquery is a simple operand, and you can use it almost anywhere
    a single column value or literal is legal, and you can expect it to have those
    characteristics that all operands have: a data type, a length, an indication that
    it can be `NULL`, and so on. For example:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在其最简单的形式中，子查询是返回单个值的标量子查询。标量子查询是一个简单的操作数，你几乎可以在任何地方使用它，只要单列值或字面值是合法的，并且你可以期望它具有所有操作数具有的特征：数据类型、长度、可以为`NULL`的指示等。例如：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The subquery in this [`SELECT`](select.html "15.2.13 SELECT Statement") returns
    a single value (`'abcde'`) that has a data type of [`CHAR`](char.html "13.3.2 The
    CHAR and VARCHAR Types"), a length of 5, a character set and collation equal to
    the defaults in effect at [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement") time, and an indication that the value in the column can be `NULL`.
    Nullability of the value selected by a scalar subquery is not copied because if
    the subquery result is empty, the result is `NULL`. For the subquery just shown,
    if `t1` were empty, the result would be `NULL` even though `s2` is `NOT NULL`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个[`SELECT`](select.html "15.2.13 SELECT Statement")中的子查询返回一个单一值（`'abcde'`），其数据类型为[`CHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types")，长度为5，字符集和排序规则等于[`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement")时生效的默认值，并指示列中的值可以为`NULL`。标量子查询选择的值的可空性不会被复制，因为如果子查询结果为空，结果就是`NULL`。对于刚刚显示的子查询，如果`t1`为空，结果将是`NULL`，即使`s2`是`NOT
    NULL`。
- en: There are a few contexts in which a scalar subquery cannot be used. If a statement
    permits only a literal value, you cannot use a subquery. For example, `LIMIT`
    requires literal integer arguments, and [`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement") requires a literal string file name. You cannot use subqueries
    to supply these values.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在一些情况下，标量子查询无法使用。如果语句只允许使用字面值，你就不能使用子查询。例如，`LIMIT`需要字面整数参数，而[`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement")需要字面字符串文件名。你不能使用子查询来提供这些值。
- en: When you see examples in the following sections that contain the rather spartan
    construct `(SELECT column1 FROM t1)`, imagine that your own code contains much
    more diverse and complex constructions.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在以下部分看到包含相当简陋结构`(SELECT column1 FROM t1)`的示例时，请想象你自己的代码包含更加多样化和复杂的结构。
- en: 'Suppose that we make two tables:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们创建了两个表：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then perform a [`SELECT`](select.html "15.2.13 SELECT Statement"):'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然后执行一个[`SELECT`](select.html "15.2.13 SELECT Statement")：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The result is `2` because there is a row in `t2` containing a column `s1` that
    has a value of `2`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是`2`，因为`t2`中有一行包含一个值为`2`的列`s1`。
- en: 'In MySQL 8.0.19 and later, the preceding query can also be written like this,
    using [`TABLE`](table.html "15.2.16 TABLE Statement"):'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.19及更高版本中，前面的查询也可以这样写，使用[`TABLE`](table.html "15.2.16 TABLE Statement")：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'A scalar subquery can be part of an expression, but remember the parentheses,
    even if the subquery is an operand that provides an argument for a function. For
    example:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 标量子查询可以是表达式的一部分，但记住括号，即使子查询是为函数提供参数的操作数。例如：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The same result can be obtained in MySQL 8.0.19 and later using `SELECT UPPER((TABLE
    t1)) FROM t2`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.19及更高版本中，可以使用`SELECT UPPER((TABLE t1)) FROM t2`获得相同的结果。
