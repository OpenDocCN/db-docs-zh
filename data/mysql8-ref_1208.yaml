- en: 17.8.4 Configuring Thread Concurrency for InnoDB
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.8.4 为InnoDB配置线程并发性
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-thread_concurrency.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-thread_concurrency.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-thread_concurrency.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-performance-thread_concurrency.html)
- en: '`InnoDB` uses operating system [threads](glossary.html#glos_thread "thread")
    to process requests from user transactions. (Transactions may issue many requests
    to `InnoDB` before they commit or roll back.) On modern operating systems and
    servers with multi-core processors, where context switching is efficient, most
    workloads run well without any limit on the number of concurrent threads.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`使用操作系统[线程](glossary.html#glos_thread "thread")来处理来自用户事务的请求。（事务在提交或回滚之前可能向`InnoDB`发出许多请求。）在具有多核处理器的现代操作系统和服务器上，其中上下文切换效率高，大多数工作负载在没有对并发线程数量设置任何限制的情况下运行良好。'
- en: In situations where it is helpful to minimize context switching between threads,
    `InnoDB` can use a number of techniques to limit the number of concurrently executing
    operating system threads (and thus the number of requests that are processed at
    any one time). When `InnoDB` receives a new request from a user session, if the
    number of threads concurrently executing is at a pre-defined limit, the new request
    sleeps for a short time before it tries again. Threads waiting for locks are not
    counted in the number of concurrently executing threads.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在需要最小化线程之间上下文切换的情况下，`InnoDB`可以使用多种技术来限制同时执行的操作系统线程数量（因此同时处理的请求数量）。当`InnoDB`从用户会话接收到一个新请求时，如果同时执行的线程数量达到预定义的限制，新请求会在再次尝试之前短暂休眠一段时间。等待锁的线程不计入同时执行的线程数量。
- en: You can limit the number of concurrent threads by setting the configuration
    parameter [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency).
    Once the number of executing threads reaches this limit, additional threads sleep
    for a number of microseconds, set by the configuration parameter [`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay),
    before being placed into the queue.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过设置配置参数[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)来限制并发线程的数量。一旦执行线程数量达到此限制，额外的线程会在被放入队列之前休眠一段由配置参数[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)设置的微秒数。
- en: You can set the configuration option [`innodb_adaptive_max_sleep_delay`](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)
    to the highest value you would allow for [`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay),
    and `InnoDB` automatically adjusts [`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)
    up or down depending on the current thread-scheduling activity. This dynamic adjustment
    helps the thread scheduling mechanism to work smoothly during times when the system
    is lightly loaded and when it is operating near full capacity.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将配置选项[`innodb_adaptive_max_sleep_delay`](innodb-parameters.html#sysvar_innodb_adaptive_max_sleep_delay)设置为您允许的最高值，以及`InnoDB`会根据当前线程调度活动自动调整[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)的值。这种动态调整有助于在线程调度机制在系统轻载时和在接近满负荷运行时平稳工作。
- en: The default value for [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    and the implied default limit on the number of concurrent threads has been changed
    in various releases of MySQL and `InnoDB`. The default value of [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    is `0`, so that by default there is no limit on the number of concurrently executing
    threads.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在各个MySQL和`InnoDB`的发布版本中，[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)的默认值和隐含的并发线程数量限制已经发生了变化。[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)的默认值为`0`，因此默认情况下没有对同时执行的线程数量设置限制。
- en: '`InnoDB` causes threads to sleep only when the number of concurrent threads
    is limited. When there is no limit on the number of threads, all contend equally
    to be scheduled. That is, if [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    is `0`, the value of [`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)
    is ignored.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`只有在并发线程数量有限时才会使线程进入睡眠状态。当线程数量没有限制时，所有线程都会平等竞争调度。也就是说，如果[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)为`0`，则[`innodb_thread_sleep_delay`](innodb-parameters.html#sysvar_innodb_thread_sleep_delay)的值会被忽略。'
- en: When there is a limit on the number of threads (when [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    is > 0), `InnoDB` reduces context switching overhead by permitting multiple requests
    made during the execution of a *single SQL statement* to enter `InnoDB` without
    observing the limit set by [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency).
    Since an SQL statement (such as a join) may comprise multiple row operations within
    `InnoDB`, `InnoDB` assigns a specified number of “tickets” that allow a thread
    to be scheduled repeatedly with minimal overhead.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当线程数量有限时（当[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    > 0时），`InnoDB`通过允许在执行*单个SQL语句*期间发出的多个请求进入`InnoDB`来减少上下文切换开销，而无需遵守[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)设置的限制。由于一个SQL语句（如连接）可能包含`InnoDB`内的多个行操作，`InnoDB`会分配一定数量的“票据”，允许线程以最小的开销重复调度。
- en: When a new SQL statement starts, a thread has no tickets, and it must observe
    [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency).
    Once the thread is entitled to enter `InnoDB`, it is assigned a number of tickets
    that it can use for subsequently entering `InnoDB` to perform row operations.
    If the tickets run out, the thread is evicted, and [`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)
    is observed again which may place the thread back into the first-in/first-out
    queue of waiting threads. When the thread is once again entitled to enter `InnoDB`,
    tickets are assigned again. The number of tickets assigned is specified by the
    global option [`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets),
    which is 5000 by default. A thread that is waiting for a lock is given one ticket
    once the lock becomes available.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个新的SQL语句开始执行时，线程没有任何票据，必须遵守[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)。一旦线程有资格进入`InnoDB`，它将被分配一定数量的票据，用于随后进入`InnoDB`执行行操作。如果票据用完，线程将被驱逐，并且会再次观察[`innodb_thread_concurrency`](innodb-parameters.html#sysvar_innodb_thread_concurrency)，这可能会将线程重新放入等待线程的先进先出队列中。当线程再次有资格进入`InnoDB`时，将再次分配票据。分配的票据数量由全局选项[`innodb_concurrency_tickets`](innodb-parameters.html#sysvar_innodb_concurrency_tickets)指定，默认值为5000。等待锁的线程在锁可用时会获得一个票据。
- en: The correct values of these variables depend on your environment and workload.
    Try a range of different values to determine what value works for your applications.
    Before limiting the number of concurrently executing threads, review configuration
    options that may improve the performance of `InnoDB` on multi-core and multi-processor
    computers, such as [`innodb_adaptive_hash_index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些变量的正确值取决于您的环境和工作负载。尝试一系列不同的值，以确定哪个值适用于您的应用程序。在限制并发执行线程数量之前，请查看可能改善多核和多处理器计算机上`InnoDB`性能的配置选项，例如[`innodb_adaptive_hash_index`](innodb-parameters.html#sysvar_innodb_adaptive_hash_index)。
- en: For general performance information about MySQL thread handling, see [Section 7.1.12.1,
    “Connection Interfaces”](connection-interfaces.html "7.1.12.1 Connection Interfaces").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 关于MySQL线程处理的一般性性能信息，请参见[第7.1.12.1节，“连接接口”](connection-interfaces.html "7.1.12.1 连接接口")。
