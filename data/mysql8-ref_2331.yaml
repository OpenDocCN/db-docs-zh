- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/problems-with-float.html](https://dev.mysql.com/doc/refman/8.0/en/problems-with-float.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/problems-with-float.html](https://dev.mysql.com/doc/refman/8.0/en/problems-with-float.html)
- en: B.3.4.8 Problems with Floating-Point Values
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: B.3.4.8 浮点值的问题
- en: Floating-point numbers sometimes cause confusion because they are approximate
    and not stored as exact values. A floating-point value as written in an SQL statement
    may not be the same as the value represented internally. Attempts to treat floating-point
    values as exact in comparisons may lead to problems. They are also subject to
    platform or implementation dependencies. The [`FLOAT`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE") and [`DOUBLE`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE") data types
    are subject to these issues. For [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") columns, MySQL performs operations with
    a precision of 65 decimal digits, which should solve most common inaccuracy problems.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点数有时会引起混淆，因为它们是近似值，而不是存储为精确值。在SQL语句中写入的浮点值可能与内部表示的值不同。试图在比较中将浮点值视为精确值可能会导致问题。它们还受平台或实现依赖性的影响。[`FLOAT`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE")和[`DOUBLE`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE")数据类型受到这些问题的影响。对于[`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC")列，MySQL执行具有65位小数位数的精度的操作，这应该解决大多数常见的不准确问题。
- en: The following example uses [`DOUBLE`](floating-point-types.html "13.1.4 Floating-Point
    Types (Approximate Value) - FLOAT, DOUBLE") to demonstrate how calculations that
    are done using floating-point operations are subject to floating-point error.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例使用[`DOUBLE`](floating-point-types.html "13.1.4 Floating-Point Types (Approximate
    Value) - FLOAT, DOUBLE")演示使用浮点运算进行的计算受浮点误差影响。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The result is correct. Although the first five records look like they should
    not satisfy the comparison (the values of `a` and `b` do not appear to be different),
    they may do so because the difference between the numbers shows up around the
    tenth decimal or so, depending on factors such as computer architecture or the
    compiler version or optimization level. For example, different CPUs may evaluate
    floating-point numbers differently.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是正确的。尽管前五条记录看起来不应满足比较条件（`a`和`b`的值似乎没有不同），但它们可能会满足，因为数字之间的差异大约在第十位小数左右，具体取决于诸如计算机架构、编译器版本或优化级别等因素。例如，不同的CPU可能以不同方式评估浮点数。
- en: If columns `d1` and `d2` had been defined as [`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") rather than [`DOUBLE`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE"), the result
    of the [`SELECT`](select.html "15.2.13 SELECT Statement") query would have contained
    only one row—the last one shown above.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列`d1`和`d2`被定义为[`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types
    (Exact Value) - DECIMAL, NUMERIC")而不是[`DOUBLE`](floating-point-types.html "13.1.4 Floating-Point
    Types (Approximate Value) - FLOAT, DOUBLE")，那么[`SELECT`](select.html "15.2.13 SELECT
    Statement")查询的结果将只包含最后一个上面显示的行。
- en: 'The correct way to do floating-point number comparison is to first decide on
    an acceptable tolerance for differences between the numbers and then do the comparison
    against the tolerance value. For example, if we agree that floating-point numbers
    should be regarded the same if they are same within a precision of one in ten
    thousand (0.0001), the comparison should be written to find differences larger
    than the tolerance value:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点数比较的正确方法是首先确定两个数字之间的可接受容差，然后根据容差值进行比较。例如，如果我们认为浮点数在万分之一（0.0001）的精度内相同，则比较应该写成查找大于容差值的差异：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Conversely, to get rows where the numbers are the same, the test should find
    differences within the tolerance value:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，要获取数字相同的行，测试应该在容差值内找到差异：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Floating-point values are subject to platform or implementation dependencies.
    Suppose that you execute the following statements:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点值受平台或实现依赖性的影响。假设您执行以下语句：
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: On some platforms, the `SELECT` statement returns `inf` and `-inf`. On others,
    it returns `0` and `-0`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些平台上，`SELECT`语句返回`inf`和`-inf`。在其他平台上，它返回`0`和`-0`。
- en: An implication of the preceding issues is that if you attempt to create a replica
    by dumping table contents with [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program") on the source and reloading the dump file into the
    replica, tables containing floating-point columns might differ between the two
    hosts.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 前述问题的一个含义是，如果您尝试通过使用[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program")在源端转储表内容并将转储文件重新加载到副本中来创建副本，那么包含浮点列的表可能会在两个主机之间有所不同。
