- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-auto-positioning.html](https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-auto-positioning.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-auto-positioning.html](https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-auto-positioning.html)
- en: 19.1.3.3 GTID Auto-Positioning
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.1.3.3 GTID 自动定位
- en: GTIDs replace the file-offset pairs previously required to determine points
    for starting, stopping, or resuming the flow of data between source and replica.
    When GTIDs are in use, all the information that the replica needs for synchronizing
    with the source is obtained directly from the replication data stream.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: GTID 取代了以前需要确定源和副本之间数据流开始、停止或恢复点的文件偏移对。当使用 GTID 时，副本与源同步所需的所有信息都直接从复制数据流中获取。
- en: To start a replica using GTID-based replication, you need to enable the `SOURCE_AUTO_POSITION`
    | `MASTER_AUTO_POSITION` option in the [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") statement (from MySQL 8.0.23)
    or [`CHANGE MASTER TO`](change-master-to.html "15.4.2.1 CHANGE MASTER TO Statement")
    statement (before MySQL 8.0.23). The alternative `SOURCE_LOG_FILE` | `MASTER_LOG_FILE`
    and `SOURCE_LOG_POS` | `MASTER_LOG_POS` options specify the name of the log file
    and the starting position within the file, but with GTIDs the replica does not
    need this nonlocal data.. For full instructions to configure and start sources
    and replicas using GTID-based replication, see [Section 19.1.3.4, “Setting Up
    Replication Using GTIDs”](replication-gtids-howto.html "19.1.3.4 Setting Up Replication
    Using GTIDs").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用基于 GTID 的复制启动副本，需要在 [`CHANGE REPLICATION SOURCE TO`](change-replication-source-to.html
    "15.4.2.3 CHANGE REPLICATION SOURCE TO Statement") 语句（从 MySQL 8.0.23 开始）或 [`CHANGE
    MASTER TO`](change-master-to.html "15.4.2.1 CHANGE MASTER TO Statement") 语句（MySQL
    8.0.23 之前）中启用 `SOURCE_AUTO_POSITION` | `MASTER_AUTO_POSITION` 选项。另外的 `SOURCE_LOG_FILE`
    | `MASTER_LOG_FILE` 和 `SOURCE_LOG_POS` | `MASTER_LOG_POS` 选项指定了日志文件的名称和文件内的起始位置，但是使用
    GTID 时，副本不需要这些非本地数据。有关使用基于 GTID 的复制配置和启动源和副本的完整说明，请参见 [Section 19.1.3.4, “Setting
    Up Replication Using GTIDs”](replication-gtids-howto.html "19.1.3.4 Setting Up
    Replication Using GTIDs")。
- en: The `SOURCE_AUTO_POSITION` | `MASTER_AUTO_POSITION` option is disabled by default.
    If multi-source replication is enabled on the replica, you need to set the option
    for each applicable replication channel. Disabling the `SOURCE_AUTO_POSITION`
    | `MASTER_AUTO_POSITION` option again causes the replica to revert to position-based
    replication; this means that, when `GTID_ONLY=ON`, some positions may be marked
    as invalid, in which case you must also specify both `SOURCE_LOG_FILE` | `MASTER_LOG_FILE`
    and `SOURCE_LOG_POS` | `MASTER_LOG_POS` when disabling `SOURCE_AUTO_POSITION`
    | `MASTER_AUTO_POSITION`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`SOURCE_AUTO_POSITION` | `MASTER_AUTO_POSITION` 选项默认情况下是禁用的。如果在副本上启用了多源复制，则需要为每个适用的复制通道设置该选项。再次禁用
    `SOURCE_AUTO_POSITION` | `MASTER_AUTO_POSITION` 选项会导致副本恢复到基于位置的复制；这意味着当 `GTID_ONLY=ON`
    时，某些位置可能被标记为无效，在这种情况下，当禁用 `SOURCE_AUTO_POSITION` | `MASTER_AUTO_POSITION` 时，还必须同时指定
    `SOURCE_LOG_FILE` | `MASTER_LOG_FILE` 和 `SOURCE_LOG_POS` | `MASTER_LOG_POS`。'
- en: When a replica has GTIDs enabled ([`GTID_MODE=ON`](replication-options-gtids.html#sysvar_gtid_mode),
    `ON_PERMISSIVE,` or `OFF_PERMISSIVE` ) and the `MASTER_AUTO_POSITION` option enabled,
    auto-positioning is activated for connection to the source. The source must have
    [`GTID_MODE=ON`](replication-options-gtids.html#sysvar_gtid_mode) set in order
    for the connection to succeed. In the initial handshake, the replica sends a GTID
    set containing the transactions that it has already received, committed, or both.
    This GTID set is equal to the union of the set of GTIDs in the [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    system variable (`@@GLOBAL.gtid_executed`), and the set of GTIDs recorded in the
    Performance Schema [`replication_connection_status`](performance-schema-replication-connection-status-table.html
    "29.12.11.2 The replication_connection_status Table") table as received transactions
    (the result of the statement `SELECT RECEIVED_TRANSACTION_SET FROM PERFORMANCE_SCHEMA.replication_connection_status`).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当副本启用了GTIDs（[`GTID_MODE=ON`](replication-options-gtids.html#sysvar_gtid_mode)，`ON_PERMISSIVE`或`OFF_PERMISSIVE`）并启用了`MASTER_AUTO_POSITION`选项时，自动定位将被激活以连接到源端。源端必须设置[`GTID_MODE=ON`](replication-options-gtids.html#sysvar_gtid_mode)才能成功连接。在初始握手中，副本发送一个包含其已经接收、提交或两者都有的交易的GTID集合。这个GTID集合等于[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)系统变量（`@@GLOBAL.gtid_executed`）中的GTID集合和性能模式中记录的GTID集合的并集，性能模式中的GTID集合是作为已接收交易记录的（执行`SELECT
    RECEIVED_TRANSACTION_SET FROM PERFORMANCE_SCHEMA.replication_connection_status`语句的结果）。
- en: The source responds by sending all transactions recorded in its binary log whose
    GTID is not included in the GTID set sent by the replica. To do this, the source
    first identifies the appropriate binary log file to begin working with, by checking
    the `Previous_gtids_log_event` in the header of each of its binary log files,
    starting with the most recent. When the source finds the first `Previous_gtids_log_event`
    which contains no transactions that the replica is missing, it begins with that
    binary log file. This method is efficient and only takes a significant amount
    of time if the replica is behind the source by a large number of binary log files.
    The source then reads the transactions in that binary log file and subsequent
    files up to the current one, sending the transactions with GTIDs that the replica
    is missing, and skipping the transactions that were in the GTID set sent by the
    replica. The elapsed time until the replica receives the first missing transaction
    depends on its offset in the binary log file. This exchange ensures that the source
    only sends the transactions with a GTID that the replica has not already received
    or committed. If the replica receives transactions from more than one source,
    as in the case of a diamond topology, the auto-skip function ensures that the
    transactions are not applied twice.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 源端通过发送其二进制日志中记录的所有交易来响应，这些交易的GTID不包含在副本发送的GTID集合中。为此，源端首先通过检查其二进制日志文件的头部中的`Previous_gtids_log_event`来确定要开始处理的适当二进制日志文件，从最近的文件开始检查。当源端找到第一个不包含副本缺失交易的`Previous_gtids_log_event`时，它就从那个二进制日志文件开始。这种方法是高效的，只有在副本落后源端很多个二进制日志文件时才会花费大量时间。然后，源端读取该二进制日志文件和后续文件中的交易，直到当前文件，发送副本缺失的带有GTID的交易，并跳过副本发送的GTID集合中的交易。副本接收到第一个缺失交易的经过时间取决于其在二进制日志文件中的偏移量。这种交换确保源端只发送副本尚未接收或提交的带有GTID的交易。如果副本从多个源接收交易，如钻石拓扑结构的情况下，自动跳过功能确保交易不会被应用两次。
- en: If any of the transactions that should be sent by the source have been purged
    from the source's binary log, or added to the set of GTIDs in the [`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)
    system variable by another method, the source sends the error [`ER_MASTER_HAS_PURGED_REQUIRED_GTIDS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_master_has_purged_required_gtids)
    to the replica, and replication does not start. The GTIDs of the missing purged
    transactions are identified and listed in the source's error log in the warning
    message [`ER_FOUND_MISSING_GTIDS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_found_missing_gtids).
    The replica cannot recover automatically from this error because parts of the
    transaction history that are needed to catch up with the source have been purged.
    Attempting to reconnect without the `MASTER_AUTO_POSITION` option enabled only
    results in the loss of the purged transactions on the replica. The correct approach
    to recover from this situation is for the replica to replicate the missing transactions
    listed in the [`ER_FOUND_MISSING_GTIDS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_found_missing_gtids)
    message from another source, or for the replica to be replaced by a new replica
    created from a more recent backup. Consider revising the binary log expiration
    period ([`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds))
    on the source to ensure that the situation does not occur again.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果应该由源发送的任何事务已经从源的二进制日志中清除，或者通过其他方法添加到[`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)系统变量的GTID集合中，源会向副本发送错误[`ER_MASTER_HAS_PURGED_REQUIRED_GTIDS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_master_has_purged_required_gtids)，并且复制不会启动。缺失的已清除事务的GTID将在源的错误日志中被识别并列在警告消息[`ER_FOUND_MISSING_GTIDS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_found_missing_gtids)中。副本无法自动从此错误中恢复，因为需要追赶源的事务历史的部分已被清除。尝试重新连接而没有启用`MASTER_AUTO_POSITION`选项只会导致副本上的已清除事务的丢失。从这种情况中恢复的正确方法是让副本从另一个源复制[`ER_FOUND_MISSING_GTIDS`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_found_missing_gtids)消息中列出的缺失事务，或者让副本被一个从更近期备份创建的新副本所取代。考虑修改源上的二进制日志过期时间（[`binlog_expire_logs_seconds`](replication-options-binary-log.html#sysvar_binlog_expire_logs_seconds)）以确保不再发生这种情况。
- en: If during the exchange of transactions it is found that the replica has received
    or committed transactions with the source's UUID in the GTID, but the source itself
    does not have a record of them, the source sends the error [`ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_slave_has_more_gtids_than_master)
    to the replica and replication does not start. This situation can occur if a source
    that does not have [`sync_binlog=1`](replication-options-binary-log.html#sysvar_sync_binlog)
    set experiences a power failure or operating system crash, and loses committed
    transactions that have not yet been synchronized to the binary log file, but have
    been received by the replica. The source and replica can diverge if any clients
    commit transactions on the source after it is restarted, which can lead to the
    situation where the source and replica are using the same GTID for different transactions.
    The correct approach to recover from this situation is to check manually whether
    the source and replica have diverged. If the same GTID is now in use for different
    transactions, you either need to perform manual conflict resolution for individual
    transactions as required, or remove either the source or the replica from the
    replication topology. If the issue is only missing transactions on the source,
    you can make the source into a replica instead, allow it to catch up with the
    other servers in the replication topology, and then make it a source again if
    needed.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在交换事务过程中发现复制品已经收到或提交了具有源GTID中UUID的事务，但源本身没有记录它们，源会向复制品发送错误[`ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_slave_has_more_gtids_than_master)，复制不会开始。如果源没有设置[`sync_binlog=1`](replication-options-binary-log.html#sysvar_sync_binlog)并遇到断电或操作系统崩溃，且丢失了尚未同步到二进制日志文件的已提交事务，但已被复制品接收，那么就会出现这种情况。如果在源重新启动后有任何客户端提交事务，可能导致源和复制品使用相同的GTID进行不同的事务，源和复制品可能会发散。从这种情况中恢复的正确方法是手动检查源和复制品是否发散。如果现在对不同事务使用相同的GTID，则需要根据需要对单个事务执行手动冲突解决，或者从复制拓扑中删除源或复制品。如果问题仅在源上缺少事务，则可以将源变为复制品，使其赶上复制拓扑中的其他服务器，然后根据需要再次将其变为源。
- en: For a multi-source replica in a diamond topology (where the replica replicates
    from two or more sources, which in turn replicate from a common source), when
    GTID-based replication is in use, ensure that any replication filters or other
    channel configuration are identical on all channels on the multi-source replica.
    With GTID-based replication, filters are applied only to the transaction data,
    and GTIDs are not filtered out. This happens so that a replica’s GTID set stays
    consistent with the source’s, meaning GTID auto-positioning can be used without
    re-acquiring filtered out transactions each time. In the case where the downstream
    replica is multi-source and receives the same transaction from multiple sources
    in a diamond topology, the downstream replica now has multiple versions of the
    transaction, and the result depends on which channel applies the transaction first.
    The second channel to attempt it skips the transaction using GTID auto-skip, because
    the transaction’s GTID was added to the [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    set by the first channel. With identical filtering on the channels, there is no
    problem because all versions of the transaction contain the same data, so the
    results are the same. However, with different filtering on the channels, the database
    can become inconsistent and replication can hang.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于钻石拓扑结构中的多源复制（其中复制品从两个或更多源复制，这些源又从一个共同源复制），当使用基于GTID的复制时，请确保多源复制上的所有通道上的任何复制过滤器或其他通道配置都是相同的。使用基于GTID的复制时，过滤器仅应用于事务数据，而GTID不会被过滤掉。这是为了使复制品的GTID集与源保持一致，这意味着可以使用GTID自动定位而无需每次重新获取被过滤的事务。在下游复制品是多源的情况下，并且在钻石拓扑结构中从多个源接收相同事务的情况下，下游复制品现在具有事务的多个版本，结果取决于哪个通道首先应用该事务。尝试的第二个通道通过使用GTID自动跳过来跳过该事务，因为该事务的GTID已被第一个通道添加到[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)集中。在通道上具有相同过滤器的情况下，没有问题，因为所有事务的所有版本都包含相同的数据，因此结果是相同的。然而，在通道上具有不同过滤器的情况下，数据库可能变得不一致，复制可能会挂起。
