- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-system-tablespace.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-system-tablespace.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-system-tablespace.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-system-tablespace.html)
- en: 17.6.3.1 The System Tablespace
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 17.6.3.1 系统表空间
- en: The system tablespace is the storage area for the change buffer. It may also
    contain table and index data if tables are created in the system tablespace rather
    than file-per-table or general tablespaces. In previous MySQL versions, the system
    tablespace contained the `InnoDB` data dictionary. In MySQL 8.0, `InnoDB` stores
    metadata in the MySQL data dictionary. See [Chapter 16, *MySQL Data Dictionary*](data-dictionary.html
    "Chapter 16 MySQL Data Dictionary"). In previous MySQL releases, the system tablespace
    also contained the doublewrite buffer storage area. This storage area resides
    in separate doublewrite files as of MySQL 8.0.20\. See [Section 17.6.4, “Doublewrite
    Buffer”](innodb-doublewrite-buffer.html "17.6.4 Doublewrite Buffer").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 系统表空间是更改缓冲区的存储区域。如果表是在系统表空间而不是文件表或通用表空间中创建的，则还可能包含表和索引数据。在以前的 MySQL 版本中，系统表空间包含`InnoDB`数据字典。在
    MySQL 8.0 中，`InnoDB`将元数据存储在 MySQL 数据字典中。请参见[第 16 章 *MySQL 数据字典*](data-dictionary.html
    "第 16 章 MySQL 数据字典")。在以前的 MySQL 版本中，系统表空间还包含双写缓冲区存储区域。从 MySQL 8.0.20 开始，此存储区域位于单独的双写文件中。请参见[第
    17.6.4 节，“双写缓冲区”](innodb-doublewrite-buffer.html "17.6.4 双写缓冲区")。
- en: The system tablespace can have one or more data files. By default, a single
    system tablespace data file, named `ibdata1`, is created in the data directory.
    The size and number of system tablespace data files is defined by the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    startup option. For configuration information, see [System Tablespace Data File
    Configuration](innodb-init-startup-configuration.html#innodb-startup-data-file-configuration
    "System Tablespace Data File Configuration").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 系统表空间可以有一个或多个数据文件。默认情况下，在数据目录中创建一个名为`ibdata1`的系统表空间数据文件。系统表空间数据文件的大小和数量由[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)启动选项定义。有关配置信息，请参见[系统表空间数据文件配置](innodb-init-startup-configuration.html#innodb-startup-data-file-configuration
    "系统表空间数据文件配置")。
- en: 'Additional information about the system tablespace is provided under the following
    topics in the section:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有关系统表空间的其他信息在本节的以下主题下提供：
- en: '[Resizing the System Tablespace](innodb-system-tablespace.html#innodb-resize-system-tablespace
    "Resizing the System Tablespace")'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[调整系统表空间大小](innodb-system-tablespace.html#innodb-resize-system-tablespace "调整系统表空间大小")'
- en: '[Using Raw Disk Partitions for the System Tablespace](innodb-system-tablespace.html#innodb-raw-devices
    "Using Raw Disk Partitions for the System Tablespace")'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用原始磁盘分区作为系统表空间](innodb-system-tablespace.html#innodb-raw-devices "使用原始磁盘分区作为系统表空间")'
- en: Resizing the System Tablespace
  id: totrans-7
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 调整系统表空间大小
- en: This section describes how to increase or decrease the size of the system tablespace.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何增加或减少系统表空间的大小。
- en: Increasing the Size of the System Tablespace
  id: totrans-9
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 增加系统表空间大小
- en: 'The easiest way to increase the size of the system tablespace is to configure
    it to be auto-extending. To do so, specify the `autoextend` attribute for the
    last data file in the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting, and restart the server. For example:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 增加系统表空间大小的最简单方法是将其配置为自动扩展。为此，请在[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)设置中为最后一个数据文件指定`autoextend`属性，并重新启动服务器。例如：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When the `autoextend` attribute is specified, the data file automatically increases
    in size by 8MB increments as space is required. The [`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)
    variable controls the increment size.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定`autoextend`属性时，数据文件会根据需要自动以 8MB 递增的大小增加。[`innodb_autoextend_increment`](innodb-parameters.html#sysvar_innodb_autoextend_increment)变量控制增量大小。
- en: 'You can also increase system tablespace size by adding another data file. To
    do so:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过添加另一个数据文件来增加系统表空间大小。要这样做：
- en: Stop the MySQL server.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止 MySQL 服务器。
- en: If the last data file in the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting is defined with the `autoextend` attribute, remove it, and modify the
    size attribute to reflect the current data file size. To determine the appropriate
    data file size to specify, check your file system for the file size, and round
    that value down to the closest MB value, where a MB is equal to 1024 x 1024 bytes.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在 [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    设置中的最后一个数据文件定义了 `autoextend` 属性，请将其删除，并修改大小属性以反映当前数据文件大小。要确定要指定的适当数据文件大小，请检查文件系统的文件大小，并将该值向下舍入到最接近的
    MB 值，其中 1 MB 等于 1024 x 1024 字节。
- en: Append a new data file to the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting, optionally specifying the `autoextend` attribute. The `autoextend` attribute
    can be specified only for the last data file in the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个新的数据文件追加到 [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    设置中，可选择指定 `autoextend` 属性。`autoextend` 属性只能针对 [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    设置中的最后一个数据文件指定。
- en: Start the MySQL server.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 MySQL 服务器。
- en: 'For example, this tablespace has one auto-extending data file:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这个表空间有一个自动扩展的数据文件：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Suppose that the data file has grown to 988MB over time. This is the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting after modifying the size attribute to reflect the current data file size,
    and after specifying a new 50MB auto-extending data file:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 假设随着时间的推移，数据文件已经增长到 988MB。这是在修改大小属性以反映当前数据文件大小，并指定一个新的 50MB 自动扩展数据文件后的 [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    设置：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When adding a new data file, do not specify an existing file name. `InnoDB`
    creates and initializes the new data file when you start the server.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当添加新的数据文件时，请不要指定现有的文件名。`InnoDB` 在启动服务器时会创建并初始化新的数据文件。
- en: Note
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You cannot increase the size of an existing system tablespace data file by
    changing its size attribute. For example, changing the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting from `ibdata1:10M:autoextend` to `ibdata1:12M:autoextend` produces the
    following error when starting the server:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 不能通过更改其大小属性来增加现有系统表空间数据文件的大小。例如，将 [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    设置从 `ibdata1:10M:autoextend` 更改为 `ibdata1:12M:autoextend` 在启动服务器时会产生以下错误：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The error indicates that the existing data file size (expressed in `InnoDB`
    pages) is different from the data file size specified in the configuration file.
    If you encounter this error, restore the previous [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting, and refer to the system tablespace resizing instructions.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 错误表明现有数据文件大小（以 `InnoDB` 页表示）与配置文件中指定的数据文件大小不同。如果遇到此错误，请恢复先前的 [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    设置，并参考系统表空间调整大小的说明。
- en: Decreasing the Size of the InnoDB System Tablespace
  id: totrans-27
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 减小 InnoDB 系统表空间的大小
- en: Decreasing the size of an existing system tablespace is not supported. The only
    option to achieve a smaller system tablespace is to restore your data from a backup
    to a new MySQL instance created with the desired system tablespace size configuration.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 不支持减小现有系统表空间的大小。实现较小系统表空间的唯一选项是从备份中恢复数据到一个新的 MySQL 实例，该实例创建时具有所需的系统表空间大小配置。
- en: For information about creating backups, see [Section 17.18.1, “InnoDB Backup”](innodb-backup.html
    "17.18.1 InnoDB Backup").
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有关创建备份的信息，请参见 [第 17.18.1 节，“InnoDB 备份”](innodb-backup.html "17.18.1 InnoDB 备份")。
- en: For information about configuring data files for a new system tablespace. See
    [System Tablespace Data File Configuration](innodb-init-startup-configuration.html#innodb-startup-data-file-configuration
    "System Tablespace Data File Configuration").
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有关为新系统表空间配置数据文件的信息，请参见 [系统表空间数据文件配置](innodb-init-startup-configuration.html#innodb-startup-data-file-configuration
    "系统表空间数据文件配置")。
- en: To avoid a large system tablespace, consider using file-per-table tablespaces
    or general tablespaces for your data. File-per-table tablespaces are the default
    tablespace type and are used implicitly when creating an `InnoDB` table. Unlike
    the system tablespace, file-per-table tablespaces return disk space to the operating
    system when they are truncated or dropped. For more information, see [Section 17.6.3.2,
    “File-Per-Table Tablespaces”](innodb-file-per-table-tablespaces.html "17.6.3.2 File-Per-Table
    Tablespaces"). General tablespaces are multi-table tablespaces that can also be
    used as an alternative to the system tablespace. See [Section 17.6.3.3, “General
    Tablespaces”](general-tablespaces.html "17.6.3.3 General Tablespaces").
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为避免大型系统表空间，考虑使用每表表空间或通用表空间存储您的数据。每表表空间是默认的表空间类型，在创建`InnoDB`表时隐式使用。与系统表空间不同，每表表空间在被截断或删除时将磁盘空间返回给操作系统。有关更多信息，请参见[第17.6.3.2节，“每表表空间”](innodb-file-per-table-tablespaces.html
    "17.6.3.2 File-Per-Table Tablespaces")。通用表空间是多表表空间，也可以用作系统表空间的替代方案。请参见[第17.6.3.3节，“通用表空间”](general-tablespaces.html
    "17.6.3.3 General Tablespaces")。
- en: Using Raw Disk Partitions for the System Tablespace
  id: totrans-32
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 使用原始磁盘分区作为系统表空间
- en: Raw disk partitions can be used as system tablespace data files. This technique
    enables nonbuffered I/O on Windows and some Linux and Unix systems without file
    system overhead. Perform tests with and without raw partitions to verify whether
    they improve performance on your system.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 原始磁盘分区可以用作系统表空间数据文件。这种技术可以在Windows和一些Linux和Unix系统上进行非缓冲I/O，而无需文件系统开销。在您的系统上执行有和没有原始分区的测试，以验证它们是否提高了性能。
- en: When using a raw disk partition, ensure that the user ID that runs the MySQL
    server has read and write privileges for that partition. For example, if running
    the server as the `mysql` user, the partition must be readable and writeable by
    `mysql`. If running the server with the [`--memlock`](server-options.html#option_mysqld_memlock)
    option, the server must be run as `root`, so the partition must be readable and
    writeable by `root`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用原始磁盘分区时，请确保运行MySQL服务器的用户ID对该分区具有读写权限。例如，如果将服务器作为`mysql`用户运行，则分区必须可读可写。如果使用[`--memlock`](server-options.html#option_mysqld_memlock)选项运行服务器，则服务器必须以`root`身份运行，因此分区必须可读可写。
- en: The procedures described below involve option file modification. For additional
    information, see [Section 6.2.2.2, “Using Option Files”](option-files.html "6.2.2.2 Using
    Option Files").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下面描述的过程涉及选项文件的修改。有关更多信息，请参见[第6.2.2.2节，“使用选项文件”](option-files.html "6.2.2.2 Using
    Option Files")。
- en: Allocating a Raw Disk Partition on Linux and Unix Systems
  id: totrans-36
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 在Linux和Unix系统上分配原始磁盘分区
- en: When creating a new data file, specify the keyword `newraw` immediately after
    the data file size for the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    option. The partition must be at least as large as the size that you specify.
    Note that 1MB in `InnoDB` is 1024 × 1024 bytes, whereas 1MB in disk specifications
    usually means 1,000,000 bytes.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建新数据文件时，在[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)选项的数据文件大小后立即指定关键字`newraw`。分区的大小必须至少与您指定的大小相同。请注意，在`InnoDB`中，1MB是1024
    × 1024字节，而在磁盘规范中，1MB通常表示1,000,000字节。
- en: '[PRE4]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Restart the server. `InnoDB` notices the `newraw` keyword and initializes the
    new partition. However, do not create or change any `InnoDB` tables yet. Otherwise,
    when you next restart the server, `InnoDB` reinitializes the partition and your
    changes are lost. (As a safety measure `InnoDB` prevents users from modifying
    data when any partition with `newraw` is specified.)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动服务器。`InnoDB`注意到`newraw`关键字并初始化新分区。但是，不要创建或更改任何`InnoDB`表。否则，下次重新启动服务器时，`InnoDB`会重新初始化分区，您的更改将丢失。（作为安全措施，当指定任何带有`newraw`的分区时，`InnoDB`会阻止用户修改数据。）
- en: 'After `InnoDB` has initialized the new partition, stop the server, change `newraw`
    in the data file specification to `raw`:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`InnoDB`初始化新分区后，停止服务器，将数据文件规范中的`newraw`更改为`raw`：
- en: '[PRE5]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Restart the server. `InnoDB` now permits changes to be made.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动服务器。`InnoDB`现在允许进行更改。
- en: Allocating a Raw Disk Partition on Windows
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 在Windows上分配原始磁盘分区
- en: On Windows systems, the same steps and accompanying guidelines described for
    Linux and Unix systems apply except that the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    setting differs slightly on Windows.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows系统上，适用于Linux和Unix系统的相同步骤和相关指南适用，只是在Windows上[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)设置略有不同。
- en: 'When creating a new data file, specify the keyword `newraw` immediately after
    the data file size for the [`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)
    option:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建新数据文件时，在[`innodb_data_file_path`](innodb-parameters.html#sysvar_innodb_data_file_path)选项后立即指定关键字`newraw`：
- en: '[PRE6]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `//./` corresponds to the Windows syntax of `\\.\` for accessing physical
    drives. In the example above, `D:` is the drive letter of the partition.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`//./`对应于Windows访问物理驱动器的语法`\\.\`。在上面的示例中，`D:`是分区的驱动器号。'
- en: Restart the server. `InnoDB` notices the `newraw` keyword and initializes the
    new partition.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动服务器。`InnoDB`注意到`newraw`关键字并初始化新分区。
- en: 'After `InnoDB` has initialized the new partition, stop the server, change `newraw`
    in the data file specification to `raw`:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`InnoDB`初始化新分区后，停止服务器，将数据文件规范中的`newraw`更改为`raw`：
- en: '[PRE7]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Restart the server. `InnoDB` now permits changes to be made.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动服务器。`InnoDB`现在允许进行更改。
