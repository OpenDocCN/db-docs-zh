- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/set-variable.html](https://dev.mysql.com/doc/refman/8.0/en/set-variable.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/set-variable.html](https://dev.mysql.com/doc/refman/8.0/en/set-variable.html)
- en: 15.7.6.1 SET Syntax for Variable Assignment
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.7.6.1 SET变量赋值语法
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment") syntax
    for variable assignment enables you to assign values to different types of variables
    that affect the operation of the server or clients:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SET`](set-variable.html "15.7.6.1 SET变量赋值语法")语法用于分配值给不同类型的变量，影响服务器或客户端的操作：'
- en: User-defined variables. See [Section 11.4, “User-Defined Variables”](user-variables.html
    "11.4 User-Defined Variables").
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户定义的变量。参见[第11.4节，“用户定义的变量”](user-variables.html "11.4 用户定义的变量")。
- en: Stored procedure and function parameters, and stored program local variables.
    See [Section 15.6.4, “Variables in Stored Programs”](stored-program-variables.html
    "15.6.4 Variables in Stored Programs").
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储过程和函数参数，以及存储程序局部变量。参见[第15.6.4节，“存储程序中的变量”](stored-program-variables.html "15.6.4
    存储程序中的变量")。
- en: System variables. See [Section 7.1.8, “Server System Variables”](server-system-variables.html
    "7.1.8 Server System Variables"). System variables also can be set at server startup,
    as described in [Section 7.1.9, “Using System Variables”](using-system-variables.html
    "7.1.9 Using System Variables").
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统变量。参见[第7.1.8节，“服务器系统变量”](server-system-variables.html "7.1.8 服务器系统变量")。系统变量也可以在服务器启动时设置，如[第7.1.9节，“使用系统变量”](using-system-variables.html
    "7.1.9 使用系统变量")所述。
- en: A [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment") statement
    that assigns variable values is not written to the binary log, so in replication
    scenarios it affects only the host on which you execute it. To affect all replication
    hosts, execute the statement on each host.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`SET`](set-variable.html "15.7.6.1 SET变量赋值语法")语句分配变量值不会写入二进制日志，因此在复制场景中仅影响执行该语句的主机。要影响所有复制主机，请在每个主机上执行该语句。
- en: The following sections describe [`SET`](set-variable.html "15.7.6.1 SET Syntax
    for Variable Assignment") syntax for setting variables. They use the [`=`](assignment-operators.html#operator_assign-equal)
    assignment operator, but the [`:=`](assignment-operators.html#operator_assign-value)
    assignment operator is also permitted for this purpose.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节描述了用于设置变量的[`SET`](set-variable.html "15.7.6.1 SET变量赋值语法")语法。它们使用[`=`](assignment-operators.html#operator_assign-equal)赋值运算符，但[`:=`](assignment-operators.html#operator_assign-value)赋值运算符也可用于此目的。
- en: '[User-Defined Variable Assignment](set-variable.html#set-variable-user-variables
    "User-Defined Variable Assignment")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用户定义的变量赋值](set-variable.html#set-variable-user-variables "用户定义的变量赋值")'
- en: '[Parameter and Local Variable Assignment](set-variable.html#set-variable-parameters-local-variables
    "Parameter and Local Variable Assignment")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[参数和局部变量赋值](set-variable.html#set-variable-parameters-local-variables "参数和局部变量赋值")'
- en: '[System Variable Assignment](set-variable.html#set-variable-system-variables
    "System Variable Assignment")'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[系统变量赋值](set-variable.html#set-variable-system-variables "系统变量赋值")'
- en: '[SET Error Handling](set-variable.html#set-variable-error-handling "SET Error
    Handling")'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SET错误处理](set-variable.html#set-variable-error-handling "SET错误处理")'
- en: '[Multiple Variable Assignment](set-variable.html#set-variable-multiple-assignments
    "Multiple Variable Assignment")'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[多变量赋值](set-variable.html#set-variable-multiple-assignments "多变量赋值")'
- en: '[System Variable References in Expressions](set-variable.html#variable-references-in-expressions
    "System Variable References in Expressions")'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[表达式中的系统变量引用](set-variable.html#variable-references-in-expressions "表达式中的系统变量引用")'
- en: User-Defined Variable Assignment
  id: totrans-15
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 用户定义的变量赋值
- en: User-defined variables are created locally within a session and exist only within
    the context of that session; see [Section 11.4, “User-Defined Variables”](user-variables.html
    "11.4 User-Defined Variables").
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 用户定义的变量在会话内部局部创建，仅在该会话的上下文中存在；参见[第11.4节，“用户定义的变量”](user-variables.html "11.4
    用户定义的变量")。
- en: 'A user-defined variable is written as `@*`var_name`*` and is assigned an expression
    value as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 用户定义的变量写作`@*`var_name`*`，并按以下方式分配表达式值：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Examples:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '示例:'
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As demonstrated by those statements, *`expr`* can range from simple (a literal
    value) to more complex (the value returned by a scalar subquery).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 正如这些语句所示，*`expr`*可以从简单（字面值）到更复杂（标量子查询返回的值）。
- en: The Performance Schema [`user_variables_by_thread`](performance-schema-user-variable-tables.html
    "29.12.10 Performance Schema User-Defined Variable Tables") table contains information
    about user-defined variables. See [Section 29.12.10, “Performance Schema User-Defined
    Variable Tables”](performance-schema-user-variable-tables.html "29.12.10 Performance
    Schema User-Defined Variable Tables").
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Performance Schema [`user_variables_by_thread`](performance-schema-user-variable-tables.html
    "29.12.10 Performance Schema User-Defined Variable Tables") 表包含有关用户定义变量的信息。请参阅[Section 29.12.10,
    “Performance Schema User-Defined Variable Tables”](performance-schema-user-variable-tables.html
    "29.12.10 Performance Schema User-Defined Variable Tables")。
- en: Parameter and Local Variable Assignment
  id: totrans-23
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 参数和局部变量赋值
- en: '[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment") applies
    to parameters and local variables in the context of the stored object within which
    they are defined. The following procedure uses the `increment` procedure parameter
    and `counter` local variable:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment") 适用于存储对象内部定义的参数和局部变量。以下过程使用了`increment`过程参数和`counter`局部变量：'
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: System Variable Assignment
  id: totrans-26
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 系统变量赋值
- en: The MySQL server maintains system variables that configure its operation. A
    system variable can have a global value that affects server operation as a whole,
    a session value that affects the current session, or both. Many system variables
    are dynamic and can be changed at runtime using the [`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment") statement to affect operation of
    the current server instance. [`SET`](set-variable.html "15.7.6.1 SET Syntax for
    Variable Assignment") can also be used to persist certain system variables to
    the `mysqld-auto.cnf` file in the data directory, to affect server operation for
    subsequent startups.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL服务器维护配置其操作的系统变量。系统变量可以具有影响整个服务器操作的全局值，影响当前会话的会话值，或两者都有。许多系统变量是动态的，可以使用[`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment")语句在运行时更改，以影响当前服务器实例的操作。[`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment")还可以用于将某些系统变量持久化到数据目录中的`mysqld-auto.cnf`文件中，以影响后续启动的服务器操作。
- en: If a `SET` statement is issued for a sensitive system variable, the query is
    rewritten to replace the value with “`<redacted>`” before it is logged to the
    general log and audit log. This takes place even if secure storage through a keyring
    component is not available on the server instance.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对敏感系统变量发出`SET`语句，则在将其记录到一般日志和审计日志之前，查询将被重写以用“`<redacted>`”替换值。即使在服务器实例上没有通过密钥环组件进行安全存储，这也会发生。
- en: If you change a session system variable, the value remains in effect within
    your session until you change the variable to a different value or the session
    ends. The change has no effect on other sessions.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更改会话系统变量，则该值在您的会话中保持有效，直到您将变量更改为不同的值或会话结束。更改对其他会话没有影响。
- en: If you change a global system variable, the value is remembered and used to
    initialize the session value for new sessions until you change the variable to
    a different value or the server exits. The change is visible to any client that
    accesses the global value. However, the change affects the corresponding session
    value only for clients that connect after the change. The global variable change
    does not affect the session value for any current client sessions (not even the
    session within which the global value change occurs).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更改全局系统变量，则该值将被记住，并用于初始化新会话的会话值，直到您将变量更改为不同的值或服务器退出。更改对访问全局值的任何客户端都是可见的。但是，更改仅影响在更改后连接的客户端的相应会话值。全局变量更改不会影响任何当前客户端会话的会话值（甚至不会影响进行全局值更改的会话）。
- en: To make a global system variable setting permanent so that it applies across
    server restarts, you can persist it to the `mysqld-auto.cnf` file in the data
    directory. It is also possible to make persistent configuration changes by manually
    modifying a `my.cnf` option file, but that is more cumbersome, and an error in
    a manually entered setting might not be discovered until much later. [`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment") statements that persist system
    variables are more convenient and avoid the possibility of malformed settings
    because settings with syntax errors do not succeed and do not change server configuration.
    For more information about persisting system variables and the `mysqld-auto.cnf`
    file, see [Section 7.1.9.3, “Persisted System Variables”](persisted-system-variables.html
    "7.1.9.3 Persisted System Variables").
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要使全局系统变量设置永久生效，以便在服务器重新启动时应用，您可以将其持久化到数据目录中的`mysqld-auto.cnf`文件中。也可以通过手动修改`my.cnf`选项文件来进行持久化配置更改，但这样做更加繁琐，手动输入设置中的错误可能要等到很久之后才能发现。持久化系统变量的[`SET`](set-variable.html
    "15.7.6.1 变量赋值的SET语法")语句更加方便，避免了设置语法错误的可能性，因为具有语法错误的设置不会成功，也不会更改服务器配置。有关持久化系统变量和`mysqld-auto.cnf`文件的更多信息，请参见[第7.1.9.3节，“持久化系统变量”](persisted-system-variables.html
    "7.1.9.3 持久化系统变量")。
- en: Note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Setting or persisting a global system variable value always requires special
    privileges. Setting a session system variable value normally requires no special
    privileges and can be done by any user, although there are exceptions. For more
    information, see [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 设置或持久化全局系统变量值始终需要特殊权限。通常设置会话系统变量值不需要特殊权限，任何用户都可以执行，尽管也有例外情况。有关更多信息，请参见[第7.1.9.1节，“系统变量权限”](system-variable-privileges.html
    "7.1.9.1 系统变量权限")。
- en: 'The following discussion describes the syntax options for setting and persisting
    system variables:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下讨论描述了设置和持久化系统变量的语法选项：
- en: 'To assign a value to a global system variable, precede the variable name by
    the `GLOBAL` keyword or the `@@GLOBAL.` qualifier:'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要为全局系统变量分配一个值，请在变量名称之前加上`GLOBAL`关键字或`@@GLOBAL.`修饰符：
- en: '[PRE4]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To assign a value to a session system variable, precede the variable name by
    the `SESSION` or `LOCAL` keyword, by the `@@SESSION.`, `@@LOCAL.`, or `@@` qualifier,
    or by no keyword or no modifier at all:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要为会话系统变量分配一个值，请在变量名称之前加上`SESSION`或`LOCAL`关键字，或者使用`@@SESSION.`、`@@LOCAL.`或`@@`修饰符，或者根本不使用关键字或修饰符：
- en: '[PRE5]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: A client can change its own session variables, but not those of any other client.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 客户端可以更改自己的会话变量，但不能更改任何其他客户端的变量。
- en: 'To persist a global system variable to the `mysqld-auto.cnf` option file in
    the data directory, precede the variable name by the `PERSIST` keyword or the
    `@@PERSIST.` qualifier:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将全局系统变量持久化到数据目录中的`mysqld-auto.cnf`选项文件中，请在变量名称之前加上`PERSIST`关键字或`@@PERSIST.`修饰符：
- en: '[PRE6]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    syntax enables you to make configuration changes at runtime that also persist
    across server restarts. Like [`SET GLOBAL`](set-variable.html "15.7.6.1 SET Syntax
    for Variable Assignment"), [`SET PERSIST`](set-variable.html "15.7.6.1 SET Syntax
    for Variable Assignment") sets the global variable runtime value, but also writes
    the variable setting to the `mysqld-auto.cnf` file (replacing any existing variable
    setting if there is one).
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")语法允许您在运行时进行配置更改，这些更改也会在服务器重新启动时保留。与[`SET
    GLOBAL`](set-variable.html "15.7.6.1 变量赋值的SET语法")类似，[`SET PERSIST`](set-variable.html
    "15.7.6.1 变量赋值的SET语法")设置全局变量的运行时值，并将变量设置写入`mysqld-auto.cnf`文件（如果存在任何现有变量设置，则会替换）。
- en: 'To persist a global system variable to the `mysqld-auto.cnf` file without setting
    the global variable runtime value, precede the variable name by the `PERSIST_ONLY`
    keyword or the `@@PERSIST_ONLY.` qualifier:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将全局系统变量持久化到`mysqld-auto.cnf`文件中，而不设置全局变量的运行时值，请在变量名称之前加上`PERSIST_ONLY`关键字或`@@PERSIST_ONLY.`修饰符：
- en: '[PRE7]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Like `PERSIST`, `PERSIST_ONLY` writes the variable setting to `mysqld-auto.cnf`.
    However, unlike `PERSIST`, `PERSIST_ONLY` does not modify the global variable
    runtime value. This makes `PERSIST_ONLY` suitable for configuring read-only system
    variables that can be set only at server startup.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与`PERSIST`类似，`PERSIST_ONLY`将变量设置写入`mysqld-auto.cnf`。但是，与`PERSIST`不同，`PERSIST_ONLY`不会修改全局变量的运行时值。这使得`PERSIST_ONLY`适用于配置只能在服务器启动时设置的只读系统变量。
- en: 'To set a global system variable value to the compiled-in MySQL default value
    or a session system variable to the current corresponding global value, set the
    variable to the value `DEFAULT`. For example, the following two statements are
    identical in setting the session value of [`max_join_size`](server-system-variables.html#sysvar_max_join_size)
    to the current global value:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要将全局系统变量值设置为编译时 MySQL 默认值或会话系统变量设置为当前对应的全局值，将变量设置为值 `DEFAULT`。例如，以下两个语句在将 [`max_join_size`](server-system-variables.html#sysvar_max_join_size)
    的会话值设置为当前全局值时是相同的：
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Using [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    to persist a global system variable to a value of `DEFAULT` or to its literal
    default value assigns the variable its default value and adds a setting for the
    variable to `mysqld-auto.cnf`. To remove the variable from the file, use [`RESET
    PERSIST`](reset-persist.html "15.7.8.7 RESET PERSIST Statement").
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [`SET`](set-variable.html "15.7.6.1 变量赋值的 SET 语法") 来将全局系统变量持久化为 `DEFAULT`
    值或其字面默认值，会将变量赋予其默认值并在 `mysqld-auto.cnf` 中添加变量的设置。要从文件中移除变量，使用 [`RESET PERSIST`](reset-persist.html
    "15.7.8.7 RESET PERSIST 语句")。
- en: Some system variables cannot be persisted or are persist-restricted. See [Section 7.1.9.4,
    “Nonpersistible and Persist-Restricted System Variables”](nonpersistible-system-variables.html
    "7.1.9.4 Nonpersistible and Persist-Restricted System Variables").
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一些系统变量无法持久化或者受到持久化限制。参见[第7.1.9.4节，“不可持久化和受限制持久化的系统变量”](nonpersistible-system-variables.html
    "7.1.9.4 不可持久化和受限制持久化的系统变量")。
- en: 'A system variable implemented by a plugin can be persisted if the plugin is
    installed when the [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable
    Assignment") statement is executed. Assignment of the persisted plugin variable
    takes effect for subsequent server restarts if the plugin is still installed.
    If the plugin is no longer installed, the plugin variable no longer exists when
    the server reads the `mysqld-auto.cnf` file. In this case, the server writes a
    warning to the error log and continues:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插件在执行 [`SET`](set-variable.html "15.7.6.1 变量赋值的 SET 语法") 语句时已安装，则插件实现的系统变量可以持久化。如果插件仍然安装，则持久化插件变量的赋值会在后续服务器重启时生效。如果插件不再安装，则当服务器读取
    `mysqld-auto.cnf` 文件时，插件变量将不再存在。在这种情况下，服务器会向错误日志写入警告并继续：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To display system variable names and values:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示系统变量名称和值：
- en: Use the [`SHOW VARIABLES`](show-variables.html "15.7.7.41 SHOW VARIABLES Statement")
    statement; see [Section 15.7.7.41, “SHOW VARIABLES Statement”](show-variables.html
    "15.7.7.41 SHOW VARIABLES Statement").
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [`SHOW VARIABLES`](show-variables.html "15.7.7.41 SHOW VARIABLES 语句") 语句；参见[第15.7.7.41节，“SHOW
    VARIABLES 语句”](show-variables.html "15.7.7.41 SHOW VARIABLES 语句")。
- en: Several Performance Schema tables provide system variable information. See [Section 29.12.14,
    “Performance Schema System Variable Tables”](performance-schema-system-variable-tables.html
    "29.12.14 Performance Schema System Variable Tables").
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几个 Performance Schema 表提供系统变量信息。参见[第29.12.14节，“Performance Schema System Variable
    Tables”](performance-schema-system-variable-tables.html "29.12.14 Performance
    Schema System Variable Tables")。
- en: The Performance Schema [`variables_info`](performance-schema-variables-info-table.html
    "29.12.14.2 Performance Schema variables_info Table") table contains information
    showing when and by which user each system variable was most recently set. See
    [Section 29.12.14.2, “Performance Schema variables_info Table”](performance-schema-variables-info-table.html
    "29.12.14.2 Performance Schema variables_info Table").
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Performance Schema [`variables_info`](performance-schema-variables-info-table.html
    "29.12.14.2 Performance Schema variables_info Table") 表包含了显示每个系统变量最近由哪个用户何时设置的信息。参见[第29.12.14.2节，“Performance
    Schema variables_info Table”](performance-schema-variables-info-table.html "29.12.14.2 Performance
    Schema variables_info Table")。
- en: The Performance Schema [`persisted_variables`](performance-schema-persisted-variables-table.html
    "29.12.14.1 Performance Schema persisted_variables Table") table provides an SQL
    interface to the `mysqld-auto.cnf` file, enabling its contents to be inspected
    at runtime using [`SELECT`](select.html "15.2.13 SELECT Statement") statements.
    See [Section 29.12.14.1, “Performance Schema persisted_variables Table”](performance-schema-persisted-variables-table.html
    "29.12.14.1 Performance Schema persisted_variables Table").
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Performance Schema [`persisted_variables`](performance-schema-persisted-variables-table.html
    "29.12.14.1 Performance Schema persisted_variables Table") 表提供了一个 SQL 接口来访问 `mysqld-auto.cnf`
    文件，使得可以在运行时使用 [`SELECT`](select.html "15.2.13 SELECT Statement") 语句检查其内容。参见[第29.12.14.1节，“Performance
    Schema persisted_variables Table”](performance-schema-persisted-variables-table.html
    "29.12.14.1 Performance Schema persisted_variables Table")。
- en: SET Error Handling
  id: totrans-57
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 设置错误处理
- en: If any variable assignment in a [`SET`](set-variable.html "15.7.6.1 SET Syntax
    for Variable Assignment") statement fails, the entire statement fails and no variables
    are changed, nor is the `mysqld-auto.cnf` file changed.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句中的任何变量赋值失败，则整个语句失败，变量不会更改，`mysqld-auto.cnf`文件也不会更改。
- en: '[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment") produces
    an error under the circumstances described here. Most of the examples show [`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment") statements that use keyword syntax
    (for example, `GLOBAL` or `SESSION`), but the principles are also true for statements
    that use the corresponding modifiers (for example, `@@GLOBAL.` or `@@SESSION.`).'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")在这里描述的情况下会产生错误。大多数示例显示使用关键字语法的[`SET`](set-variable.html
    "15.7.6.1 变量赋值的SET语法")语句（例如，`GLOBAL`或`SESSION`），但这些原则也适用于使用相应修饰符的语句（例如，`@@GLOBAL.`或`@@SESSION.`）。'
- en: 'Use of [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    (any variant) to set a read-only variable:'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")（任何变体）设置只读变量：
- en: '[PRE10]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Use of `GLOBAL`, `PERSIST`, or `PERSIST_ONLY` to set a variable that has only
    a session value:'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`GLOBAL`、`PERSIST`或`PERSIST_ONLY`设置仅具有会话值的变量：
- en: '[PRE11]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Use of `SESSION` to set a variable that has only a global value:'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`SESSION`设置仅具有全局值的变量：
- en: '[PRE12]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Omission of `GLOBAL`, `PERSIST`, or `PERSIST_ONLY` to set a variable that has
    only a global value:'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 省略`GLOBAL`、`PERSIST`或`PERSIST_ONLY`以设置仅具有全局值的变量：
- en: '[PRE13]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Use of `PERSIST` or `PERSIST_ONLY` to set a variable that cannot be persisted:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`PERSIST`或`PERSIST_ONLY`设置无法持久化的变量：
- en: '[PRE14]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `@@GLOBAL.`, `@@PERSIST.`, `@@PERSIST_ONLY.`, `@@SESSION.`, and `@@` modifiers
    apply only to system variables. An error occurs for attempts to apply them to
    user-defined variables, stored procedure or function parameters, or stored program
    local variables.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@@GLOBAL.`、`@@PERSIST.`、`@@PERSIST_ONLY.`、`@@SESSION.`和`@@`修饰符仅适用于系统变量。尝试将它们应用于用户定义的变量、存储过程或函数参数或存储程序本地变量会导致错误。'
- en: Not all system variables can be set to `DEFAULT`. In such cases, assigning `DEFAULT`
    results in an error.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并非所有系统变量都可以设置为`DEFAULT`。在这种情况下，分配`DEFAULT`会导致错误。
- en: An error occurs for attempts to assign `DEFAULT` to user-defined variables,
    stored procedure or function parameters, or stored program local variables.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试将`DEFAULT`分配给用户定义的变量、存储过程或函数参数或存储程序本地变量会导致错误。
- en: Multiple Variable Assignment
  id: totrans-73
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 多变量赋值
- en: 'A [`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    statement can contain multiple variable assignments, separated by commas. This
    statement assigns values to a user-defined variable and a system variable:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`SET`](set-variable.html "15.7.6.1 变量赋值的SET语法")语句可以包含多个变量赋值，用逗号分隔。此语句将值分配给用户定义的变量和系统变量：
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If you set multiple system variables in a single statement, the most recent
    `GLOBAL`, `PERSIST`, `PERSIST_ONLY`, or `SESSION` keyword in the statement is
    used for following assignments that have no keyword specified.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在单个语句中设置多个系统变量，则该语句中最近的`GLOBAL`、`PERSIST`、`PERSIST_ONLY`或`SESSION`关键字用于后续未指定关键字的赋值。
- en: 'Examples of multiple-variable assignment:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量赋值的示例：
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `@@GLOBAL.`, `@@PERSIST.`, `@@PERSIST_ONLY.`, `@@SESSION.`, and `@@` modifiers
    apply only to the immediately following system variable, not any remaining system
    variables. This statement sets the [`sort_buffer_size`](server-system-variables.html#sysvar_sort_buffer_size)
    global value to 50000 and the session value to 1000000:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`@@GLOBAL.`、`@@PERSIST.`、`@@PERSIST_ONLY.`、`@@SESSION.`和`@@`修饰符仅适用于紧接着的系统变量，而不适用于任何剩余的系统变量。此语句将[`sort_buffer_size`](server-system-variables.html#sysvar_sort_buffer_size)全局值设置为50000，会话值设置为1000000：'
- en: '[PRE17]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: System Variable References in Expressions
  id: totrans-81
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 表达式中的系统变量引用
- en: 'To refer to the value of a system variable in expressions, use one of the `@@`-modifiers
    (except `@@PERSIST.` and `@@PERSIST_ONLY.`, which are not permitted in expressions).
    For example, you can retrieve system variable values in a [`SELECT`](select.html
    "15.2.13 SELECT Statement") statement like this:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要在表达式中引用系统变量的值，请使用`@@`修饰符之一（除了在表达式中不允许使用`@@PERSIST.`和`@@PERSIST_ONLY.`）。例如，您可以在[`SELECT`](select.html
    "15.2.13 SELECT语句")语句中像这样检索系统变量的值：
- en: '[PRE18]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A reference to a system variable in an expression as `@@*`var_name`*` (with
    `@@` rather than `@@GLOBAL.` or `@@SESSION.`) returns the session value if it
    exists and the global value otherwise. This differs from `SET @@*`var_name`* =
    *`expr`*`, which always refers to the session value.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在表达式中引用系统变量作为`@@*`var_name`*`（使用`@@`而不是`@@GLOBAL.`或`@@SESSION.`）如果存在会返回会话值，否则返回全局值。这与`SET
    @@*`var_name`* = *`expr`*`不同，后者始终引用会话值。
