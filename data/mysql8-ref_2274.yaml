- en: 'A.1 MySQL 8.0 FAQ: General'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A.1 MySQL 8.0 FAQ：通用问题
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-general.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-general.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-general.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-general.html)
- en: A.1.1\. [Which version of MySQL is production-ready (GA)?](faqs-general.html#faq-mysql-version-ga)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.1\. [哪个版本的 MySQL 是生产就绪（GA）的？](faqs-general.html#faq-mysql-version-ga)
- en: A.1.2\. [Why did MySQL version numbering skip versions 6 and 7 and go straight
    to 8.0?](faqs-general.html#faq-mysql-why-8.0)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.2\. [为什么 MySQL 版本号跳过了 6 和 7 版直接到 8.0 版？](faqs-general.html#faq-mysql-why-8.0)
- en: A.1.3\. [Can MySQL 8.0 do subqueries?](faqs-general.html#faq-mysql-do-subqueries)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.3\. [MySQL 8.0 能做子查询吗？](faqs-general.html#faq-mysql-do-subqueries)
- en: A.1.4\. [Can MySQL 8.0 perform multiple-table inserts, updates, and deletes?](faqs-general.html#faq-mysql-do-multiple-iud)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.4\. [MySQL 8.0 能执行多表插入、更新和删除吗？](faqs-general.html#faq-mysql-do-multiple-iud)
- en: A.1.5\. [Does MySQL 8.0 have Sequences?](faqs-general.html#faq-mysql-have-sequences)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.5\. [MySQL 8.0 有序列吗？](faqs-general.html#faq-mysql-have-sequences)
- en: A.1.6\. [Does MySQL 8.0 have a NOW() function with fractions of seconds?](faqs-general.html#faq-mysql-have-now-fractions)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.6\. [MySQL 8.0 有带秒的 NOW() 函数吗？](faqs-general.html#faq-mysql-have-now-fractions)
- en: A.1.7\. [Does MySQL 8.0 work with multi-core processors?](faqs-general.html#faq-mysql-support-multi-core)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.7\. [MySQL 8.0 能与多核处理器一起工作吗？](faqs-general.html#faq-mysql-support-multi-core)
- en: A.1.8\. [Why do I see multiple processes for mysqld?](faqs-general.html#faq-mysql-why-multiple-processes)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.8\. [为什么我看到 mysqld 有多个进程？](faqs-general.html#faq-mysql-why-multiple-processes)
- en: A.1.9\. [Can MySQL 8.0 perform ACID transactions?](faqs-general.html#faq-mysql-have-acid-transactions)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: A.1.9\. [MySQL 8.0 能执行 ACID 事务吗？](faqs-general.html#faq-mysql-have-acid-transactions)
- en: '| **A.1.1.** | Which version of MySQL is production-ready (GA)? |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.1.** | 哪个版本的 MySQL 是生产就绪（GA）的？ |'
- en: '|  | MySQL 8.3 and 8.0 are actively supported for production use.MySQL 8.1
    was the first Innovation release, which was released for production use on 18
    July 2023\. The Innovation release track begins with 8.1.0 and will likely continue
    incrementing the minor version as 8.2.0 and 8.3.0 until 8.4.0 begins a new LTS
    series. Innovation releases contain new features and bug fixes.MySQL 8.0 achieved
    General Availability (GA) status with MySQL 8.0.11, which was released for production
    use on 19 April 2018. It became a bugfix series as of MySQL 8.0.34 with the introduction
    of the Innovation release track.MySQL 5.7 achieved General Availability (GA) status
    with MySQL 5.7.9, which was released for production use on 21 October 2015. Active
    development for MySQL 5.7 ended on 25 October 2023 with the MySQL 5.7.44 release.MySQL
    5.6 achieved General Availability (GA) status with MySQL 5.6.10, which was released
    for production use on 5 February 2013\. Active development for MySQL 5.6 has ended.MySQL
    5.5 achieved General Availability (GA) status with MySQL 5.5.8, which was released
    for production use on 3 December 2010. Active development for MySQL 5.5 has ended.MySQL
    5.1 achieved General Availability (GA) status with MySQL 5.1.30, which was released
    for production use on 14 November 2008\. Active development for MySQL 5.1 has
    ended.MySQL 5.0 achieved General Availability (GA) status with MySQL 5.0.15, which
    was released for production use on 19 October 2005\. Active development for MySQL
    5.0 has ended. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL 8.3 和 8.0 目前都在积极支持生产使用。MySQL 8.1 是第一个创新版本，于 2023 年 7 月 18 日发布，供生产使用。创新版本轨道从
    8.1.0 开始，可能会继续增加次要版本，如 8.2.0 和 8.3.0，直到 8.4.0 开始一个新的 LTS 系列。创新版本包含新功能和错误修复。MySQL
    8.0 在 2018 年 4 月 19 日发布的 MySQL 8.0.11 版本中获得了通用可用性（GA）状态。随着创新版本轨道的引入，MySQL 8.0.34
    成为了一个 bug 修复系列。MySQL 5.7 在 2015 年 10 月 21 日发布的 MySQL 5.7.9 版本中获得了通用可用性（GA）状态。MySQL
    5.7 的活跃开发于 2023 年 10 月 25 日以 MySQL 5.7.44 版本结束。MySQL 5.6 在 2013 年 2 月 5 日发布的 MySQL
    5.6.10 版本中获得了通用可用性（GA）状态。MySQL 5.6 的活跃开发已经结束。MySQL 5.5 在 2010 年 12 月 3 日发布的 MySQL
    5.5.8 版本中获得了通用可用性（GA）状态。MySQL 5.5 的活跃开发已经结束。MySQL 5.1 在 2008 年 11 月 14 日发布的 MySQL
    5.1.30 版本中获得了通用可用性（GA）状态。MySQL 5.1 的活跃开发已经结束。MySQL 5.0 在 2005 年 10 月 19 日发布的 MySQL
    5.0.15 版本中获得了通用可用性（GA）状态。MySQL 5.0 的活跃开发已经结束。 |'
- en: '| **A.1.2.** | Why did MySQL version numbering skip versions 6 and 7 and go
    straight to 8.0? |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.2.** | 为什么 MySQL 版本号跳过了 6 和 7 版直接到 8.0 版？ |'
- en: '|  | Due to the many new and important features we were introducing in this
    MySQL version, we decided to start a fresh new series. As the series numbers 6
    and 7 had actually been used before by MySQL, we went to 8.0. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '|  | 由于我们在这个 MySQL 版本中引入了许多新的重要功能，我们决定开始一个全新的系列。由于 MySQL 实际上曾经使用过系列号 6 和 7，我们选择了
    8.0 版本。'
- en: '| **A.1.3.** | Can MySQL 8.0 do subqueries? |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.3.** | MySQL 8.0可以执行子查询吗？ |'
- en: '|  | Yes. See [Section 15.2.15, “Subqueries”](subqueries.html "15.2.15 Subqueries").
    |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。参见[第15.2.15节，“子查询”](subqueries.html "15.2.15 Subqueries")。 |'
- en: '| **A.1.4.** | Can MySQL 8.0 perform multiple-table inserts, updates, and deletes?
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.4.** | MySQL 8.0能执行多表插入、更新和删除吗？ |'
- en: '|  | Yes. For the syntax required to perform multiple-table updates, see [Section 15.2.17,
    “UPDATE Statement”](update.html "15.2.17 UPDATE Statement"); for that required
    to perform multiple-table deletes, see [Section 15.2.2, “DELETE Statement”](delete.html
    "15.2.2 DELETE Statement").A multiple-table insert can be accomplished using a
    trigger whose `FOR EACH ROW` clause contains multiple [`INSERT`](insert.html "15.2.7 INSERT
    Statement") statements within a `BEGIN ... END` block. See [Section 27.3, “Using
    Triggers”](triggers.html "27.3 Using Triggers"). |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。有关执行多表更新所需的语法，请参见[第15.2.17节，“UPDATE语句”](update.html "15.2.17 UPDATE
    Statement")；执行多表删除所需的语法，请参见[第15.2.2节，“DELETE语句”](delete.html "15.2.2 DELETE Statement")。可以通过使用`FOR
    EACH ROW`子句包含多个[`INSERT`](insert.html "15.2.7 INSERT Statement")语句的触发器来实现多表插入，在`BEGIN
    ... END`块中。请参见[第27.3节，“使用触发器”](triggers.html "27.3 Using Triggers")。'
- en: '| **A.1.5.** | Does MySQL 8.0 have Sequences? |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.5.** | MySQL 8.0有序列吗？ |'
- en: '|  | No. However, MySQL has an `AUTO_INCREMENT` system, which in MySQL 8.0
    can also handle inserts in a multi-source replication setup. With the [`auto_increment_increment`](replication-options-source.html#sysvar_auto_increment_increment)
    and [`auto_increment_offset`](replication-options-source.html#sysvar_auto_increment_offset)
    system variables, you can set each server to generate auto-increment values that
    don''t conflict with other servers. The [`auto_increment_increment`](replication-options-source.html#sysvar_auto_increment_increment)
    value should be greater than the number of servers, and each server should have
    a unique offset. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '|  | 不。但是，MySQL有一个`AUTO_INCREMENT`系统，在MySQL 8.0中也可以处理多源复制设置中的插入。通过[`auto_increment_increment`](replication-options-source.html#sysvar_auto_increment_increment)和[`auto_increment_offset`](replication-options-source.html#sysvar_auto_increment_offset)系统变量，您可以设置每个服务器生成不与其他服务器冲突的自增值。[`auto_increment_increment`](replication-options-source.html#sysvar_auto_increment_increment)值应大于服务器数量，并且每个服务器应具有唯一的偏移量。
    |'
- en: '| **A.1.6.** | Does MySQL 8.0 have a [`NOW()`](date-and-time-functions.html#function_now)
    function with fractions of seconds? |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.6.** | MySQL 8.0是否具有带有秒的[`NOW()`](date-and-time-functions.html#function_now)函数？
    |'
- en: '|  | Yes, see [Section 13.2.6, “Fractional Seconds in Time Values”](fractional-seconds.html
    "13.2.6 Fractional Seconds in Time Values"). |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的，参见[第13.2.6节，“时间值中的小数秒”](fractional-seconds.html "13.2.6 Fractional
    Seconds in Time Values")。 |'
- en: '| **A.1.7.** | Does MySQL 8.0 work with multi-core processors? |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.7.** | MySQL 8.0是否与多核处理器兼容？ |'
- en: '|  | Yes. MySQL is fully multithreaded, and makes use of all CPUs made available
    to it. Not all CPUs may be available; modern operating systems should be able
    to utilize all underlying CPUs, but also make it possible to restrict a process
    to a specific CPU or sets of CPUs.On Windows, there is currently a limit to the
    number of (logical) processors that [**mysqld**](mysqld.html "6.3.1 mysqld — The
    MySQL Server") can use: a single processor group, which is limited to a maximum
    of 64 logical processors.Use of multiple cores may be seen in these ways:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 是的。MySQL是完全多线程的，并利用所有可用的CPU。并非所有CPU都可能可用；现代操作系统应该能够利用所有底层CPU，但也可以限制进程仅在特定CPU或CPU组上运行。在Windows上，目前有一个限制，即[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")可以使用的（逻辑）处理器数量有限：一个处理器组，最多限制为64个逻辑处理器。多核的使用可能体现在以下几种方式中：'
- en: A single core is usually used to service the commands issued from one session.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常使用单个核心来处理从一个会话发出的命令。
- en: A few background threads make limited use of extra cores; for example, to keep
    background I/O tasks moving.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些后台线程有限地利用额外的核心；例如，用于保持后台I/O任务的运行。
- en: If the database is I/O-bound (indicated by CPU consumption less than capacity),
    adding more CPUs is futile. If the database is partitioned into an I/O-bound part
    and a CPU-bond part, adding CPUs may still be useful.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果数据库受I/O限制（由CPU消耗少于容量表示），增加更多的CPU是徒劳的。如果数据库被分为I/O受限部分和CPU受限部分，增加CPU可能仍然有用。
- en: '|'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **A.1.8.** | Why do I see multiple processes for [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")? |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.8.** | 为什么我看到[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")有多个进程？
    |'
- en: '|  | [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") is a single-process
    program, not a multi-process program, and does not fork or launch other processes.
    However, [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") is multithreaded
    and some process-reporting system utilities display separate entries for each
    thread of multithreaded processes, which may lead to the appearance of multiple
    [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") processes when in
    fact there is only one. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '|  | [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL 服务器") 是一个单进程程序，不是一个多进程程序，也不会分叉或启动其他进程。然而，[**mysqld**](mysqld.html
    "6.3.1 mysqld — MySQL 服务器") 是多线程的，一些进程报告系统工具会为多线程进程的每个线程显示单独的条目，这可能导致在实际上只有一个
    [**mysqld**](mysqld.html "6.3.1 mysqld — MySQL 服务器") 进程的情况下出现多个 [**mysqld**](mysqld.html
    "6.3.1 mysqld — MySQL 服务器") 进程的外观。 |'
- en: '| **A.1.9.** | Can MySQL 8.0 perform ACID transactions? |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| **A.1.9.** | MySQL 8.0 能执行 ACID 事务吗？ |'
- en: '|  | Yes. All current MySQL versions support transactions. The `InnoDB` storage
    engine offers full ACID transactions with row-level locking, multi-versioning,
    nonlocking repeatable reads, and all four SQL standard isolation levels.The [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine supports the [`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)
    transaction isolation level only. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。所有当前的 MySQL 版本都支持事务。`InnoDB` 存储引擎提供了具有行级锁定、多版本控制、非锁定可重复读取和所有四个 SQL
    标准隔离级别的完整 ACID 事务。[`NDB`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0") 存储引擎仅支持
    [`READ COMMITTED`](innodb-transaction-isolation-levels.html#isolevel_read-committed)
    事务隔离级别。 |'
