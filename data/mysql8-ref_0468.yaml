- en: 8.6.2 Configuring MySQL Enterprise Encryption
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8.6.2 配置 MySQL 企业加密
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-configuring.html](https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-configuring.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-configuring.html](https://dev.mysql.com/doc/refman/8.0/en/enterprise-encryption-configuring.html)
- en: MySQL Enterprise Encryption lets you limit keys to a length that provides adequate
    security for your requirements while balancing this with resource usage. You can
    also configure the functions provided by the `component_enterprise_encryption`
    component from MySQL 8.0.30, to support decryption and verification for content
    produced by the legacy `openssl_udf` shared library functions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 企业加密允许您限制密钥的长度，以满足您的安全要求，同时平衡资源使用。您还可以配置 MySQL 8.0.30 提供的`component_enterprise_encryption`组件的函数，以支持解密和验证由遗留`openssl_udf`共享库函数生成的内容。
- en: Decryption Support By Component Functions For Legacy Functions
  id: totrans-3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 组件函数对遗留函数的解密支持
- en: By default, the functions provided by the `component_enterprise_encryption`
    component from MySQL 8.0.30 do not decrypt encrypted text, or verify signatures,
    that were produced by the legacy functions provided in earlier releases by the
    `openssl_udf` shared library. The component functions assume that encrypted text
    uses the RSAES-OAEP padding scheme, and signatures use the RSASSA-PSS signature
    scheme. However, encrypted text produced by the legacy functions uses the RSAES-PKCS1-v1_5
    padding scheme, and signatures produced by the legacy functions use the RSASSA-PKCS1-v1_5
    signature scheme.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，MySQL 8.0.30 提供的`component_enterprise_encryption`组件的函数不会解密由早期版本中`openssl_udf`共享库提供的遗留函数生成的加密文本，或验证签名。组件函数假定加密文本使用
    RSAES-OAEP 填充方案，签名使用 RSASSA-PSS 签名方案。然而，遗留函数生成的加密文本使用 RSAES-PKCS1-v1_5 填充方案，遗留函数生成的签名使用
    RSASSA-PKCS1-v1_5 签名方案。
- en: If you want the component functions to support content produced by the legacy
    functions before MySQL 8.0.30, set the component’s system variable [`enterprise_encryption.rsa_support_legacy_padding`](server-system-variables.html#sysvar_enterprise_encryption.rsa_support_legacy_padding)
    to `ON`. The system variable is available when the component is installed. When
    you set it to `ON`, the component functions first attempt to decrypt or verify
    content assuming it has their normal schemes. If that does not work, they also
    attempt to decrypt or verify the content assuming it has the schemes used by the
    legacy functions. This behavior is not the default because it increases the time
    taken to process content that cannot be decrypted or verified at all. If you are
    not handling content produced by the legacy functions, leave the system variable
    to default to `OFF`.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望组件函数支持 MySQL 8.0.30 之前的遗留函数生成的内容，请将组件的系统变量[`enterprise_encryption.rsa_support_legacy_padding`](server-system-variables.html#sysvar_enterprise_encryption.rsa_support_legacy_padding)设置为`ON`。该系统变量在安装组件时可用。当您将其设置为`ON`时，组件函数首先尝试解密或验证内容，假设其具有其正常方案。如果这种方式不起作用，它们还会尝试解密或验证内容，假设其具有遗留函数使用的方案。这种行为不是默认设置，因为它会增加处理无法解密或验证的内容所需的时间。如果您不处理由遗留函数生成的内容，请将系统变量保持默认设置为`OFF`。
- en: Key Length Limits
  id: totrans-6
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 密钥长度限制
- en: The amount of CPU resources required by MySQL Enterprise Encryption's key generation
    functions increases as the key length increases. For some installations, this
    might result in unacceptable CPU usage if applications frequently generate excessively
    long keys.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 随着密钥长度的增加，MySQL 企业加密的密钥生成函数所需的 CPU 资源量也会增加。对于一些安装来说，如果应用程序频繁生成过长的密钥，这可能导致不可接受的
    CPU 使用率。
- en: OpenSSL specifies a minimum key length of 1024 bits for all keys. OpenSSL also
    specifies a maximum key length of 16384 bits for RSA keys, 10000 bits for DSA
    keys, and 10000 bits for DH keys.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSSL 指定所有密钥的最小长度为 1024 位。OpenSSL 还指定 RSA 密钥的最大长度为 16384 位，DSA 密钥为 10000 位，DH
    密钥为 10000 位。
- en: From MySQL 8.0.30, the functions provided by the `component_enterprise_encryption`
    component have a higher minimum key length of 2048 bits for RSA keys, which is
    in line with current best practice for minimum key lengths. The component's system
    variable [`enterprise_encryption.maximum_rsa_key_size`](server-system-variables.html#sysvar_enterprise_encryption.maximum_rsa_key_size)
    specifies the maximum key size, and it defaults to 4096 bits. You can change this
    to allow keys up to the maximum length allowed by OpenSSL, 16384 bits.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 从 MySQL 8.0.30 开始，`component_enterprise_encryption` 组件提供的函数对于 RSA 密钥有更高的最小长度要求，为
    2048 位，这符合当前最佳实践的最小密钥长度。组件的系统变量 [`enterprise_encryption.maximum_rsa_key_size`](server-system-variables.html#sysvar_enterprise_encryption.maximum_rsa_key_size)
    指定了最大密钥长度，默认为 4096 位。您可以更改此值以允许 OpenSSL 允许的最大长度，即 16384 位。
- en: 'For releases before MySQL 8.0.30, the legacy functions provided by the `openssl_udf`
    shared library default to OpenSSL''s minimum and maximum limits. If the maximum
    values are too high, you can specify a lower maximum key length using the following
    system variables:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 MySQL 8.0.30 之前的版本，`openssl_udf` 共享库提供的传统函数默认使用 OpenSSL 的最小和最大限制。如果最大值过高，您可以使用以下系统变量指定较低的最大密钥长度：
- en: '`MYSQL_OPENSSL_UDF_DSA_BITS_THRESHOLD`: Maximum DSA key length in bits for
    `create_asymmetric_priv_key()`. The minimum and maximum values for this variable
    are 1024 and 10000.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MYSQL_OPENSSL_UDF_DSA_BITS_THRESHOLD`：`create_asymmetric_priv_key()` 的最大 DSA
    密钥长度（以位为单位）。此变量的最小值和最大值分别为 1024 和 10000。'
- en: '`MYSQL_OPENSSL_UDF_RSA_BITS_THRESHOLD`: Maximum RSA key length in bits for
    `create_asymmetric_priv_key()`. The minimum and maximum values for this variable
    are 1024 and 16384.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MYSQL_OPENSSL_UDF_RSA_BITS_THRESHOLD`：`create_asymmetric_priv_key()` 的最大 RSA
    密钥长度（以位为单位）。此变量的最小值和最大值分别为 1024 和 16384。'
- en: '`MYSQL_OPENSSL_UDF_DH_BITS_THRESHOLD`: Maximum key length in bits for `create_dh_parameters()`.
    The minimum and maximum values for this variable are 1024 and 10000.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MYSQL_OPENSSL_UDF_DH_BITS_THRESHOLD`：`create_dh_parameters()` 的最大密钥长度（以位为单位）。此变量的最小值和最大值分别为
    1024 和 10000。'
- en: 'To use any of these environment variables, set them in the environment of the
    process that starts the server. If set, their values take precedence over the
    maximum key lengths imposed by OpenSSL. For example, to set a maximum key length
    of 4096 bits for DSA and RSA keys for `create_asymmetric_priv_key()`, set these
    variables:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这些环境变量中的任何一个，请在启动服务器的进程的环境中设置它们。如果设置了这些变量，它们的值将优先于 OpenSSL 强制的最大密钥长度。例如，要为
    `create_asymmetric_priv_key()` 的 DSA 和 RSA 密钥设置最大密钥长度为 4096 位，请设置这些变量：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The example uses Bourne shell syntax. The syntax for other shells may differ.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例使用 Bourne shell 语法。其他 shell 的语法可能有所不同。
