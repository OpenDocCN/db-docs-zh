- en: 10.9.2 Switchable Optimizations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10.9.2 可切换的优化
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/switchable-optimizations.html](https://dev.mysql.com/doc/refman/8.0/en/switchable-optimizations.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/switchable-optimizations.html](https://dev.mysql.com/doc/refman/8.0/en/switchable-optimizations.html)
- en: The [`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch)
    system variable enables control over optimizer behavior. Its value is a set of
    flags, each of which has a value of `on` or `off` to indicate whether the corresponding
    optimizer behavior is enabled or disabled. This variable has global and session
    values and can be changed at runtime. The global default can be set at server
    startup.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch)系统变量可控制优化器行为。其值是一组标志，每个标志的值为`on`或`off`，表示相应的优化器行为是否启用或禁用。此变量具有全局和会话值，并且可以在运行时更改。全局默认值可以在服务器启动时设置。'
- en: 'To see the current set of optimizer flags, select the variable value:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看当前设置的优化器标志集，请选择变量值：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To change the value of [`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch),
    assign a value consisting of a comma-separated list of one or more commands:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改[`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch)的值，请分配一个由一个或多个命令的逗号分隔列表组成的值：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Each *`command`* value should have one of the forms shown in the following table.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 每个*`command`*值应具有以下表中所示的形式之一。
- en: '| Command Syntax | Meaning |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 命令语法 | 含义 |'
- en: '| `default` | Reset every optimization to its default value |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `default` | 将每个优化重置为其默认值 |'
- en: '| `*`opt_name`*=default` | Set the named optimization to its default value
    |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `*`opt_name`*=default` | 将指定的优化设置为其默认值 |'
- en: '| `*`opt_name`*=off` | Disable the named optimization |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `*`opt_name`*=off` | 禁用指定的优化 |'
- en: '| `*`opt_name`*=on` | Enable the named optimization |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `*`opt_name`*=on` | 启用指定的优化 |'
- en: The order of the commands in the value does not matter, although the `default`
    command is executed first if present. Setting an *`opt_name`* flag to `default`
    sets it to whichever of `on` or `off` is its default value. Specifying any given
    *`opt_name`* more than once in the value is not permitted and causes an error.
    Any errors in the value cause the assignment to fail with an error, leaving the
    value of [`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch)
    unchanged.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 命令值的顺序无关紧要，尽管如果存在`default`命令，则首先执行该命令。将*`opt_name`*标志设置为`default`会将其设置为`on`或`off`中的默认值。在值中多次指定任何给定的*`opt_name`*是不允许的，并会导致错误。值中的任何错误都会导致分配失败并显示错误，使[`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch)的值保持不变。
- en: 'The following list describes the permissible *`opt_name`* flag names, grouped
    by optimization strategy:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了按优化策略分组的允许的*`opt_name`*标志名称：
- en: Batched Key Access Flags
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批量键访问标志
- en: '[`batched_key_access`](switchable-optimizations.html#optflag_batched-key-access)
    (default `off`)'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`batched_key_access`](switchable-optimizations.html#optflag_batched-key-access)（默认为`off`）'
- en: Controls use of BKA join algorithm.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制使用BKA连接算法。
- en: For [`batched_key_access`](switchable-optimizations.html#optflag_batched-key-access)
    to have any effect when set to `on`, the [`mrr`](switchable-optimizations.html#optflag_mrr)
    flag must also be `on`. Currently, the cost estimation for MRR is too pessimistic.
    Hence, it is also necessary for [`mrr_cost_based`](switchable-optimizations.html#optflag_mrr-cost-based)
    to be `off` for BKA to be used.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当设置为`on`时，[`batched_key_access`](switchable-optimizations.html#optflag_batched-key-access)要产生任何效果，[`mrr`](switchable-optimizations.html#optflag_mrr)标志也必须为`on`。目前，对于MRR的成本估算过于悲观。因此，还需要将[`mrr_cost_based`](switchable-optimizations.html#optflag_mrr-cost-based)设置为`off`才能使用BKA。
- en: For more information, see [Section 10.2.1.12, “Block Nested-Loop and Batched
    Key Access Joins”](bnl-bka-optimization.html "10.2.1.12 Block Nested-Loop and
    Batched Key Access Joins").
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息，请参见[第10.2.1.12节，“块嵌套循环和批量键访问连接”](bnl-bka-optimization.html "10.2.1.12 块嵌套循环和批量键访问连接")。
- en: Block Nested-Loop Flags
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 块嵌套循环标志
- en: '[`block_nested_loop`](switchable-optimizations.html#optflag_block-nested-loop)
    (default `on`)'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`block_nested_loop`](switchable-optimizations.html#optflag_block-nested-loop)（默认为`on`）'
- en: Controls use of BNL join algorithm. In MySQL 8.0.18 and later, this also controls
    use of hash joins, as do the [`BNL`](optimizer-hints.html#optimizer-hints-table-level
    "Table-Level Optimizer Hints") and [`NO_BNL`](optimizer-hints.html#optimizer-hints-table-level
    "Table-Level Optimizer Hints") optimizer hints. In MySQL 8.0.20 and later, block
    nested loop support is removed from the MySQL server, and this flag controls the
    use of hash joins only, as do the referenced optimizer hints.
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制使用 BNL 连接算法。在 MySQL 8.0.18 及更高版本中，这也控制使用哈希连接，就像[`BNL`](optimizer-hints.html#optimizer-hints-table-level
    "表级优化提示")和[`NO_BNL`](optimizer-hints.html#optimizer-hints-table-level "表级优化提示")优化提示一样。在
    MySQL 8.0.20 及更高版本中，MySQL 服务器中移除了块嵌套循环支持，此标志仅控制使用哈希连接，就像引用的优化提示一样。
- en: For more information, see [Section 10.2.1.12, “Block Nested-Loop and Batched
    Key Access Joins”](bnl-bka-optimization.html "10.2.1.12 Block Nested-Loop and
    Batched Key Access Joins").
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 10.2.1.12，“块嵌套循环和批量键访问连接”](bnl-bka-optimization.html "10.2.1.12 块嵌套循环和批量键访问连接")。
- en: Condition Filtering Flags
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条件过滤标志
- en: '[`condition_fanout_filter`](switchable-optimizations.html#optflag_condition-fanout-filter)
    (default `on`)'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`condition_fanout_filter`](switchable-optimizations.html#optflag_condition-fanout-filter)（默认`on`）'
- en: Controls use of condition filtering.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制条件过滤的使用。
- en: For more information, see [Section 10.2.1.13, “Condition Filtering”](condition-filtering.html
    "10.2.1.13 Condition Filtering").
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 10.2.1.13，“条件过滤”](condition-filtering.html "10.2.1.13 条件过滤")。
- en: Derived Condition Pushdown Flags
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 派生条件下推标志
- en: '[`derived_condition_pushdown`](switchable-optimizations.html#optflag_derived-condition-pushdown)
    (default `on`)'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`derived_condition_pushdown`](switchable-optimizations.html#optflag_derived-condition-pushdown)（默认`on`）'
- en: Controls derived condition pushdown.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制派生条件下推。
- en: For more information, see [Section 10.2.2.5, “Derived Condition Pushdown Optimization”](derived-condition-pushdown-optimization.html
    "10.2.2.5 Derived Condition Pushdown Optimization")
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 10.2.2.5，“派生条件下推优化”](derived-condition-pushdown-optimization.html
    "10.2.2.5 派生条件下推优化")
- en: Derived Table Merging Flags
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 派生表合并标志
- en: '[`derived_merge`](switchable-optimizations.html#optflag_derived-merge) (default
    `on`)'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`derived_merge`](switchable-optimizations.html#optflag_derived-merge)（默认`on`）'
- en: Controls merging of derived tables and views into outer query block.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制将派生表和视图合并到外部查询块中。
- en: The [`derived_merge`](switchable-optimizations.html#optflag_derived-merge) flag
    controls whether the optimizer attempts to merge derived tables, view references,
    and common table expressions into the outer query block, assuming that no other
    rule prevents merging; for example, an `ALGORITHM` directive for a view takes
    precedence over the [`derived_merge`](switchable-optimizations.html#optflag_derived-merge)
    setting. By default, the flag is `on` to enable merging.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`derived_merge`](switchable-optimizations.html#optflag_derived-merge)标志控制优化器是否尝试将派生表、视图引用和公共表达式合并到外部查询块中，假设没有其他规则阻止合并；例如，视图的`ALGORITHM`指令优先于[`derived_merge`](switchable-optimizations.html#optflag_derived-merge)设置。默认情况下，该标志为`on`以启用合并。'
- en: For more information, see [Section 10.2.2.4, “Optimizing Derived Tables, View
    References, and Common Table Expressions with Merging or Materialization”](derived-table-optimization.html
    "10.2.2.4 Optimizing Derived Tables, View References, and Common Table Expressions
    with Merging or Materialization").
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 10.2.2.4，“优化派生表、视图引用和公共表达式的合并或材料化”](derived-table-optimization.html
    "10.2.2.4 优化派生表、视图引用和公共表达式的合并或材料化")。
- en: Engine Condition Pushdown Flags
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引擎条件下推标志
- en: '[`engine_condition_pushdown`](switchable-optimizations.html#optflag_engine-condition-pushdown)
    (default `on`)'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`engine_condition_pushdown`](switchable-optimizations.html#optflag_engine-condition-pushdown)（默认`on`）'
- en: Controls engine condition pushdown.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制引擎条件下推。
- en: For more information, see [Section 10.2.1.5, “Engine Condition Pushdown Optimization”](engine-condition-pushdown-optimization.html
    "10.2.1.5 Engine Condition Pushdown Optimization").
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 10.2.1.5，“引擎条件下推优化”](engine-condition-pushdown-optimization.html
    "10.2.1.5 引擎条件下推优化")。
- en: Hash Join Flags
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希连接标志
- en: '[`hash_join`](switchable-optimizations.html#optflag_hash-join) (default `on`)'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`hash_join`](switchable-optimizations.html#optflag_hash-join)（默认`on`）'
- en: Controls hash joins in MySQL 8.0.18 only, and has no effect in any subsequent
    version. In MySQL 8.0.19 and later, to control hash join usage, use the [`block_nested_loop`](switchable-optimizations.html#optflag_block-nested-loop)
    flag, instead.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅在 MySQL 8.0.18 中控制哈希连接，对任何后续版本均无效。在 MySQL 8.0.19 及更高版本中，要控制哈希连接的使用，请使用[`block_nested_loop`](switchable-optimizations.html#optflag_block-nested-loop)标志。
- en: For more information, see [Section 10.2.1.4, “Hash Join Optimization”](hash-joins.html
    "10.2.1.4 Hash Join Optimization").
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第 10.2.1.4 节，“哈希连接优化”](hash-joins.html "10.2.1.4 哈希连接优化")。
- en: Index Condition Pushdown Flags
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引条件下推标志
- en: '[`index_condition_pushdown`](switchable-optimizations.html#optflag_index-condition-pushdown)
    (default `on`)'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`index_condition_pushdown`](switchable-optimizations.html#optflag_index-condition-pushdown)（默认为`on`）'
- en: Controls index condition pushdown.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制索引条件下推。
- en: For more information, see [Section 10.2.1.6, “Index Condition Pushdown Optimization”](index-condition-pushdown-optimization.html
    "10.2.1.6 Index Condition Pushdown Optimization").
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第 10.2.1.6 节，“索引条件下推优化”](index-condition-pushdown-optimization.html
    "10.2.1.6 索引条件下推优化")��
- en: Index Extensions Flags
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引扩展标志
- en: '[`use_index_extensions`](switchable-optimizations.html#optflag_use-index-extensions)
    (default `on`)'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`use_index_extensions`](switchable-optimizations.html#optflag_use-index-extensions)（默认为`on`）'
- en: Controls use of index extensions.
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制使用索引扩展。
- en: For more information, see [Section 10.3.10, “Use of Index Extensions”](index-extensions.html
    "10.3.10 Use of Index Extensions").
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第 10.3.10 节，“使用索引扩展”](index-extensions.html "10.3.10 使用索引扩展")。
- en: Index Merge Flags
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引合并标志
- en: '[`index_merge`](switchable-optimizations.html#optflag_index-merge) (default
    `on`)'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`index_merge`](switchable-optimizations.html#optflag_index-merge)（默认为`on`）'
- en: Controls all Index Merge optimizations.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制所有索引合并优化。
- en: '[`index_merge_intersection`](switchable-optimizations.html#optflag_index-merge-intersection)
    (default `on`)'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`index_merge_intersection`](switchable-optimizations.html#optflag_index-merge-intersection)（默认为`on`）'
- en: Controls the Index Merge Intersection Access optimization.
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制索引合并交集访问优化。
- en: '[`index_merge_sort_union`](switchable-optimizations.html#optflag_index-merge-sort-union)
    (default `on`)'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`index_merge_sort_union`](switchable-optimizations.html#optflag_index-merge-sort-union)（默认为`on`）'
- en: Controls the Index Merge Sort-Union Access optimization.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制索引合并排序-联合访问优化。
- en: '[`index_merge_union`](switchable-optimizations.html#optflag_index-merge-union)
    (default `on`)'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`index_merge_union`](switchable-optimizations.html#optflag_index-merge-union)（默认为`on`）'
- en: Controls the Index Merge Union Access optimization.
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制索引合并联合访问优化。
- en: For more information, see [Section 10.2.1.3, “Index Merge Optimization”](index-merge-optimization.html
    "10.2.1.3 Index Merge Optimization").
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第 10.2.1.3 节，“索引合并优化”](index-merge-optimization.html "10.2.1.3 索引合并优化")。
- en: Index Visibility Flags
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引可见性标志
- en: '[`use_invisible_indexes`](switchable-optimizations.html#optflag_use-invisible-indexes)
    (default `off`)'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`use_invisible_indexes`](switchable-optimizations.html#optflag_use-invisible-indexes)（默认为`off`）'
- en: Controls use of invisible indexes.
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制使用不可见索引。
- en: For more information, see [Section 10.3.12, “Invisible Indexes”](invisible-indexes.html
    "10.3.12 Invisible Indexes").
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第 10.3.12 节，“不可见索引”](invisible-indexes.html "10.3.12 不可见索引")。
- en: Limit Optimization Flags
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制优化标志
- en: '[`prefer_ordering_index`](switchable-optimizations.html#optflag_prefer-ordering-index)
    (default `on`)'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`prefer_ordering_index`](switchable-optimizations.html#optflag_prefer-ordering-index)（默认为`on`）'
- en: Controls whether, in the case of a query having an `ORDER BY` or `GROUP BY`
    with a `LIMIT` clause, the optimizer tries to use an ordered index instead of
    an unordered index, a filesort, or some other optimization. This optimization
    is performed by default whenever the optimizer determines that using it would
    allow for faster execution of the query.
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制是否在查询具有带有`ORDER BY`或`GROUP BY`和`LIMIT`子句的情况下，优化器尝试使用有序索引而不是无序索引、文件排序或其他一些优化。只要优化器确定使用它可以加快查询的执行速度，此优化就会默认执行。
- en: Because the algorithm that makes this determination cannot handle every conceivable
    case (due in part to the assumption that the distribution of data is always more
    or less uniform), there are cases in which this optimization may not be desirable.
    Prior to MySQL 8.0.21, it was not possible to disable this optimization, but in
    MySQL 8.0.21 and later, while it remains the default behavior, it can be disabled
    by setting the [`prefer_ordering_index`](switchable-optimizations.html#optflag_prefer-ordering-index)
    flag to `off`.
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于进行此决定的算法无法处理每种可能的情况（部分原因是假设数据分布总是或多或少均匀的），因此存在这种优化可能不可取的情况。在 MySQL 8.0.21
    之前，不可能禁用此优化，但在 MySQL 8.0.21 及更高版本中，虽然它仍然是默认行为，但可以通过将[`prefer_ordering_index`](switchable-optimizations.html#optflag_prefer-ordering-index)标志设置为`off`来禁用它。
- en: For more information and examples, see [Section 10.2.1.19, “LIMIT Query Optimization”](limit-optimization.html
    "10.2.1.19 LIMIT Query Optimization").
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关更多信息和示例，请参见[第 10.2.1.19 节，“LIMIT 查询优化”](limit-optimization.html "10.2.1.19
    LIMIT 查询优化")。
- en: Multi-Range Read Flags
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多范围读取标志
- en: '[`mrr`](switchable-optimizations.html#optflag_mrr) (default `on`)'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`mrr`](switchable-optimizations.html#optflag_mrr)（默认`on`）'
- en: Controls the Multi-Range Read strategy.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制多范围读取策略。
- en: '[`mrr_cost_based`](switchable-optimizations.html#optflag_mrr-cost-based) (default
    `on`)'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`mrr_cost_based`](switchable-optimizations.html#optflag_mrr-cost-based)（默认`on`）'
- en: Controls use of cost-based MRR if [`mrr=on`](switchable-optimizations.html#optflag_mrr).
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果[`mrr=on`](switchable-optimizations.html#optflag_mrr)，则控制基于成本的MRR的使用。
- en: For more information, see [Section 10.2.1.11, “Multi-Range Read Optimization”](mrr-optimization.html
    "10.2.1.11 Multi-Range Read Optimization").
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第 10.2.1.11节，“多范围读取优化”](mrr-optimization.html "10.2.1.11 多范围读取优化")。
- en: Semijoin Flags
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 半连接标志
- en: '[`duplicateweedout`](switchable-optimizations.html#optflag_duplicateweedout)
    (default `on`)'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`duplicateweedout`](switchable-optimizations.html#optflag_duplicateweedout)（默认`on`）'
- en: Controls the semijoin Duplicate Weedout strategy.
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制半连接Duplicate Weedout策略。
- en: '[`firstmatch`](switchable-optimizations.html#optflag_firstmatch) (default `on`)'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`firstmatch`](switchable-optimizations.html#optflag_firstmatch)（默认`on`）'
- en: Controls the semijoin FirstMatch strategy.
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制半连接FirstMatch策略。
- en: '[`loosescan`](switchable-optimizations.html#optflag_loosescan) (default `on`)'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`loosescan`](switchable-optimizations.html#optflag_loosescan)（默认`on`）'
- en: Controls the semijoin LooseScan strategy (not to be confused with Loose Index
    Scan for `GROUP BY`).
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制半连接松散扫描策略（不要与`GROUP BY`的松散索引扫描混淆）。
- en: '[`semijoin`](switchable-optimizations.html#optflag_semijoin) (default `on`)'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`semijoin`](switchable-optimizations.html#optflag_semijoin)（默认`on`）'
- en: Controls all semijoin strategies.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制所有半连接策略。
- en: In MySQL 8.0.17 and later, this also applies to the antijoin optimization.
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.17及更高版本中，这也适用于反连接优化。
- en: The [`semijoin`](switchable-optimizations.html#optflag_semijoin), [`firstmatch`](switchable-optimizations.html#optflag_firstmatch),
    [`loosescan`](switchable-optimizations.html#optflag_loosescan), and [`duplicateweedout`](switchable-optimizations.html#optflag_duplicateweedout)
    flags enable control over semijoin strategies. The [`semijoin`](switchable-optimizations.html#optflag_semijoin)
    flag controls whether semijoins are used. If it is set to `on`, the [`firstmatch`](switchable-optimizations.html#optflag_firstmatch)
    and [`loosescan`](switchable-optimizations.html#optflag_loosescan) flags enable
    finer control over the permitted semijoin strategies.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`semijoin`](switchable-optimizations.html#optflag_semijoin)、[`firstmatch`](switchable-optimizations.html#optflag_firstmatch)、[`loosescan`](switchable-optimizations.html#optflag_loosescan)和[`duplicateweedout`](switchable-optimizations.html#optflag_duplicateweedout)标志可控制半连接策略。[`semijoin`](switchable-optimizations.html#optflag_semijoin)标志控制是否使用半连接。如果设置为`on`，则[`firstmatch`](switchable-optimizations.html#optflag_firstmatch)和[`loosescan`](switchable-optimizations.html#optflag_loosescan)标志可更精细地控制允许的半连接策略。'
- en: If the [`duplicateweedout`](switchable-optimizations.html#optflag_duplicateweedout)
    semijoin strategy is disabled, it is not used unless all other applicable strategies
    are also disabled.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果禁用了[`duplicateweedout`](switchable-optimizations.html#optflag_duplicateweedout)半连接策略，则除非所有其他适用策略也被禁用，否则不会使用。
- en: If [`semijoin`](switchable-optimizations.html#optflag_semijoin) and [`materialization`](switchable-optimizations.html#optflag_materialization)
    are both `on`, semijoins also use materialization where applicable. These flags
    are `on` by default.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果[`semijoin`](switchable-optimizations.html#optflag_semijoin)和[`materialization`](switchable-optimizations.html#optflag_materialization)都为`on`，则半连接也在适用的情况下使用材料化。这些标志默认为`on`。
- en: For more information, see [Section 10.2.2.1, “Optimizing IN and EXISTS Subquery
    Predicates with Semijoin Transformations”](semijoins.html "10.2.2.1 Optimizing
    IN and EXISTS Subquery Predicates with Semijoin Transformations").
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[第 10.2.2.1节，“使用半连接转换优化IN和EXISTS子查询谓词”](semijoins.html "10.2.2.1 使用半连接转换优化IN和EXISTS子查询谓词")。
- en: Skip Scan Flags
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳过扫描标志
- en: '[`skip_scan`](switchable-optimizations.html#optflag_skip-scan) (default `on`)'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`skip_scan`](switchable-optimizations.html#optflag_skip-scan)（默认`on`）'
- en: Controls use of Skip Scan access method.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制跳过扫描访问方法的使用。
- en: For more information, see [Skip Scan Range Access Method](range-optimization.html#range-access-skip-scan
    "Skip Scan Range Access Method").
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[跳过扫描范围访问方法](range-optimization.html#range-access-skip-scan "跳过扫描范围访问方法")。
- en: Subquery Materialization Flags
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子查询材料化标志
- en: '[`materialization`](switchable-optimizations.html#optflag_materialization)
    (default `on`)'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`materialization`](switchable-optimizations.html#optflag_materialization)（默认`on`）'
- en: Controls materialization (including semijoin materialization).
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制材料化（包括半连接材料化）。
- en: '[`subquery_materialization_cost_based`](switchable-optimizations.html#optflag_subquery-materialization-cost-based)
    (default `on`)'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`subquery_materialization_cost_based`](switchable-optimizations.html#optflag_subquery-materialization-cost-based)（默认`on`）'
- en: Use cost-based materialization choice.
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用基于成本的物化选择。
- en: The [`materialization`](switchable-optimizations.html#optflag_materialization)
    flag controls whether subquery materialization is used. If [`semijoin`](switchable-optimizations.html#optflag_semijoin)
    and [`materialization`](switchable-optimizations.html#optflag_materialization)
    are both `on`, semijoins also use materialization where applicable. These flags
    are `on` by default.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`materialization`](switchable-optimizations.html#optflag_materialization)标志控制是否使用子查询物化。如果[`semijoin`](switchable-optimizations.html#optflag_semijoin)和[`materialization`](switchable-optimizations.html#optflag_materialization)都为`on`，半连接也在适用的情况下使用物化。这些标志默认为`on`。'
- en: The [`subquery_materialization_cost_based`](switchable-optimizations.html#optflag_subquery-materialization-cost-based)
    flag enables control over the choice between subquery materialization and `IN`-to-`EXISTS`
    subquery transformation. If the flag is `on` (the default), the optimizer performs
    a cost-based choice between subquery materialization and `IN`-to-`EXISTS` subquery
    transformation if either method could be used. If the flag is `off`, the optimizer
    chooses subquery materialization over `IN`-to-`EXISTS` subquery transformation.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`subquery_materialization_cost_based`](switchable-optimizations.html#optflag_subquery-materialization-cost-based)标志允许控制子查询物化和`IN`到`EXISTS`子查询转换之间的选择。如果标志为`on`（默认值），优化器在子查询物化和`IN`到`EXISTS`子查询转换之间执行基于成本的选择，如果可以使用任一方法。如果标志为`off`，优化器选择子查询物化而不是`IN`到`EXISTS`子查询转换。'
- en: For more information, see [Section 10.2.2, “Optimizing Subqueries, Derived Tables,
    View References, and Common Table Expressions”](subquery-optimization.html "10.2.2 Optimizing
    Subqueries, Derived Tables, View References, and Common Table Expressions").
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更多信息，请参见[Section 10.2.2, “Optimizing Subqueries, Derived Tables, View References,
    and Common Table Expressions”](subquery-optimization.html "10.2.2 Optimizing Subqueries,
    Derived Tables, View References, and Common Table Expressions")。
- en: Subquery Transformation Flags
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子查询转换标志
- en: '[`subquery_to_derived`](switchable-optimizations.html#optflag_subquery-to-derived)
    (default `off`)'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`subquery_to_derived`](switchable-optimizations.html#optflag_subquery-to-derived)（默认为`off`）'
- en: 'Beginning with MySQL 8.0.21, the optimizer is able in many cases to transform
    a scalar subquery in a `SELECT`, `WHERE`, `JOIN`, or `HAVING` clause into a left
    outer joins on a derived table. (Depending on the nullability of the derived table,
    this can sometimes be simplified further to an inner join.) This can be done for
    a subquery which meets the following conditions:'
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.21开始，优化器在许多情况下能够将`SELECT`、`WHERE`、`JOIN`或`HAVING`子句中的标量子查询转换为派生表上的左外连接。（根据派生表的可空性，有时可以进一步简化为内连接。）这可以用于满足以下条件的子查询：
- en: The subquery does not make use of any nondeterministic functions, such as [`RAND()`](mathematical-functions.html#function_rand).
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子查询不使用任何非确定性函数，如[`RAND()`](mathematical-functions.html#function_rand)。
- en: The subquery is not an `ANY` or `ALL` subquery which can be rewritten to use
    [`MIN()`](aggregate-functions.html#function_min) or [`MAX()`](aggregate-functions.html#function_max).
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子查询不是可以重写为[`MIN()`](aggregate-functions.html#function_min)或[`MAX()`](aggregate-functions.html#function_max)的`ANY`或`ALL`子查询。
- en: The parent query does not set a user variable, since rewriting it may affect
    the order of execution, which could lead to unexpected results if the variable
    is accessed more than once in the same query.
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 父查询不设置用户变量，因为重写它可能会影响执行顺序，如果变量在同一查询中被访问多次，可能会导致意外结果。
- en: The subquery should not be correlated, that is, it should not reference a column
    from a table in the outer query, or contain an aggregate that is evaluated in
    the outer query.
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子查询不应该是相关的，也就是说，它不应该引用外部查询中的列，或包含在外部查询中评估的聚合。
- en: Prior to MySQL 8.0.22, the subquery could not contain a `GROUP BY` clause.
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.22之前，子查询不能包含`GROUP BY`子句。
- en: This optimization can also be applied to a table subquery which is the argument
    to `IN`, `NOT IN`, `EXISTS`, or `NOT EXISTS`, that does not contain a `GROUP BY`.
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这种优化也可以应用于作为`IN`、`NOT IN`、`EXISTS`或`NOT EXISTS`参数的表子查询，不包含`GROUP BY`。
- en: The default value for this flag is `off`, since, in most cases, enabling this
    optimization does not produce any noticeable improvement in performance (and in
    many cases can even make queries run more slowly), but you can enable the optimization
    by setting the [`subquery_to_derived`](switchable-optimizations.html#optflag_subquery-to-derived)
    flag to `on`. It is primarily intended for use in testing.
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该标志的默认值为`off`，因为在大多数情况下，启用此优化并不会产生明显的性能改进（在许多情况下甚至可能使查询运行更慢），但您可以通过将[`subquery_to_derived`](switchable-optimizations.html#optflag_subquery-to-derived)标志设置为`on`来启用该优化。它主要用于测试。
- en: 'Example, using a scalar subquery:'
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例，使用标量子查询：
- en: '[PRE2]'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As can be seen from executing [`SHOW WARNINGS`](show-warnings.html "15.7.7.42 SHOW
    WARNINGS Statement") immediately following the second [`EXPLAIN`](explain.html
    "15.8.2 EXPLAIN Statement") statement, with the optimization enabled, the query
    `SELECT * FROM t1 WHERE t1.a > (SELECT COUNT(a) FROM t2)` is rewritten in a form
    similar to what is shown here:'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从第二个[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")语句后立即执行[`SHOW WARNINGS`](show-warnings.html
    "15.7.7.42 SHOW WARNINGS Statement")可以看出，在启用优化的情况下，查询`SELECT * FROM t1 WHERE t1.a
    > (SELECT COUNT(a) FROM t2)`被重写成类似于这里显示的形式：
- en: '[PRE3]'
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Example, using a query with `IN (*`subquery`*)`:'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例，使用带有`IN (*`子查询`*)`的查询：
- en: '[PRE4]'
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Checking and simplifying the result of [`SHOW WARNINGS`](show-warnings.html
    "15.7.7.42 SHOW WARNINGS Statement") after executing [`EXPLAIN`](explain.html
    "15.8.2 EXPLAIN Statement") on this query shows that, when the [`subquery_to_derived`](switchable-optimizations.html#optflag_subquery-to-derived)
    flag enabled, `SELECT * FROM t1 WHERE t1.b < 0 OR t1.a IN (SELECT t2.a + 1 FROM
    t2)` is rewritten in a form similar to what is shown here:'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这个查询上执行[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")后，检查并简化[`SHOW WARNINGS`](show-warnings.html
    "15.7.7.42 SHOW WARNINGS Statement")的结果显示，当启用[`subquery_to_derived`](switchable-optimizations.html#optflag_subquery-to-derived)标志时，`SELECT
    * FROM t1 WHERE t1.b < 0 OR t1.a IN (SELECT t2.a + 1 FROM t2)`被重写成类似于这里显示的形式：
- en: '[PRE5]'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Example, using a query with `EXISTS (*`subquery`*)` and the same tables and
    data as in the previous example:'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例，使用带有`EXISTS (*`子查询`*)`的查询，并与前一个示例中相同的表和数据：
- en: '[PRE6]'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If we execute [`SHOW WARNINGS`](show-warnings.html "15.7.7.42 SHOW WARNINGS
    Statement") after running [`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")
    on the query `SELECT * FROM t1 WHERE t1.b < 0 OR EXISTS(SELECT * FROM t2 WHERE
    t2.a = t1.a + 1)` when [`subquery_to_derived`](switchable-optimizations.html#optflag_subquery-to-derived)
    has been enabled, and simplify the second row of the result, we see that it has
    been rewritten in a form which resembles this:'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们在[`subquery_to_derived`](switchable-optimizations.html#optflag_subquery-to-derived)已启用的情况下，在查询`SELECT
    * FROM t1 WHERE t1.b < 0 OR EXISTS(SELECT * FROM t2 WHERE t2.a = t1.a + 1)`上运行[`EXPLAIN`](explain.html
    "15.8.2 EXPLAIN Statement")后执行[`SHOW WARNINGS`](show-warnings.html "15.7.7.42 SHOW
    WARNINGS Statement")并简化结果的第二行，我们会看到它被重写成类似于这里显示的形式：
- en: '[PRE7]'
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: For more information, see [Section 10.2.2.4, “Optimizing Derived Tables, View
    References, and Common Table Expressions with Merging or Materialization”](derived-table-optimization.html
    "10.2.2.4 Optimizing Derived Tables, View References, and Common Table Expressions
    with Merging or Materialization"), as well as [Section 10.2.1.19, “LIMIT Query
    Optimization”](limit-optimization.html "10.2.1.19 LIMIT Query Optimization"),
    and [Section 10.2.2.1, “Optimizing IN and EXISTS Subquery Predicates with Semijoin
    Transformations”](semijoins.html "10.2.2.1 Optimizing IN and EXISTS Subquery Predicates
    with Semijoin Transformations").
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参阅[Section 10.2.2.4, “Optimizing Derived Tables, View References, and
    Common Table Expressions with Merging or Materialization”](derived-table-optimization.html
    "10.2.2.4 Optimizing Derived Tables, View References, and Common Table Expressions
    with Merging or Materialization")，以及[Section 10.2.1.19, “LIMIT Query Optimization”](limit-optimization.html
    "10.2.1.19 LIMIT Query Optimization")，和[Section 10.2.2.1, “Optimizing IN and EXISTS
    Subquery Predicates with Semijoin Transformations”](semijoins.html "10.2.2.1 Optimizing
    IN and EXISTS Subquery Predicates with Semijoin Transformations")。
- en: 'When you assign a value to [`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch),
    flags that are not mentioned keep their current values. This makes it possible
    to enable or disable specific optimizer behaviors in a single statement without
    affecting other behaviors. The statement does not depend on what other optimizer
    flags exist and what their values are. Suppose that all Index Merge optimizations
    are enabled:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当您为[`optimizer_switch`](server-system-variables.html#sysvar_optimizer_switch)分配一个值时，未提及的标志保持其当前值。这使得可以在单个语句中启用或禁用特定的优化器行为，而不影响其他行为。该语句不依赖于其他优化器标志的存在及其值是什么。假设所有索引合并优化都已启用：
- en: '[PRE8]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If the server is using the Index Merge Union or Index Merge Sort-Union access
    methods for certain queries and you want to check whether the optimizer can perform
    better without them, set the variable value like this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果服务器对某些查询使用了索引合并联合或索引合并排序-联合访问方法，并且您想检查优化器在没有它们的情况下是否可以表现更好，请像这样设置变量值：
- en: '[PRE9]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
