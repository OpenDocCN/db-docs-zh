- en: 11.2.4 Mapping of Identifiers to File Names
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11.2.4 标识符到文件名的映射
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/identifier-mapping.html](https://dev.mysql.com/doc/refman/8.0/en/identifier-mapping.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/identifier-mapping.html](https://dev.mysql.com/doc/refman/8.0/en/identifier-mapping.html)
- en: There is a correspondence between database and table identifiers and names in
    the file system. For the basic structure, MySQL represents each database as a
    directory in the data directory, and depending upon the storage engine, each table
    may be represented by one or more files in the appropriate database directory.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库和表标识符与文件系统中的名称之间存在对应关系。对于基本结构，MySQL将每个数据库表示为数据目录中的一个目录，根据存储引擎的不同，每个表可能由适当数据库目录中的一个或多个文件表示。
- en: For the data and index files, the exact representation on disk is storage engine
    specific. These files may be stored in the database directory, or the information
    may be stored in a separate file. `InnoDB` data is stored in the InnoDB data files.
    If you are using tablespaces with `InnoDB`, then the specific tablespace files
    you create are used instead.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据和索引文件，在磁盘上的确切表示是特定于存储引擎的。这些文件可以存储在���据库目录中，或者���息可以存储在单独的文件中。`InnoDB` 数据存储在
    InnoDB 数据文件中。如果您正在使用 `InnoDB` 的表空间，则将使用您创建的特定表空间文件。
- en: 'Any character is legal in database or table identifiers except ASCII NUL (`X''00''`).
    MySQL encodes any characters that are problematic in the corresponding file system
    objects when it creates database directories or table files:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 除 ASCII NUL (`X'00'`) 外，数据库或表标识符中的任何字符都是合法的。当 MySQL 创建数据库目录或表文件时，会对任何在相应文件系统对象中有问题的字符进行编码：
- en: Basic Latin letters (`a..zA..Z`), digits (`0..9`) and underscore (`_`) are encoded
    as is. Consequently, their case sensitivity directly depends on file system features.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本拉丁字母（`a..zA..Z`）、数字（`0..9`）和下划线（`_`）按原样编码。因此，它们的大小写敏感性直接取决于文件系统特性。
- en: All other national letters from alphabets that have uppercase/lowercase mapping
    are encoded as shown in the following table. Values in the Code Range column are
    UCS-2 values.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有其他具有大写/小写映射的字母表的国家字母都按照以下表格中所示的方式进行编码。代码范围列中的值是 UCS-2 值。
- en: '| Code Range | Pattern | Number | Used | Unused | Blocks |'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Code Range | Pattern | Number | Used | Unused | Blocks |'
- en: '| 00C0..017F | [@][0..4][g..z] | 5*20= 100 | 97 | 3 | Latin-1 Supplement +
    Latin Extended-A |'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 00C0..017F | [@][0..4][g..z] | 5*20= 100 | 97 | 3 | 拉丁-1 补充 + 拉丁扩展-A |'
- en: '| 0370..03FF | [@][5..9][g..z] | 5*20= 100 | 88 | 12 | Greek and Coptic |'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 0370..03FF | [@][5..9][g..z] | 5*20= 100 | 88 | 12 | 希腊语和科普特语 |'
- en: '| 0400..052F | [@][g..z][0..6] | 20*7= 140 | 137 | 3 | Cyrillic + Cyrillic
    Supplement |'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 0400..052F | [@][g..z][0..6] | 20*7= 140 | 137 | 3 | 西里尔字母 + 西里尔字母补充 |'
- en: '| 0530..058F | [@][g..z][7..8] | 20*2= 40 | 38 | 2 | Armenian |'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 0530..058F | [@][g..z][7..8] | 20*2= 40 | 38 | 2 | 亚美尼亚语 |'
- en: '| 2160..217F | [@][g..z][9] | 20*1= 20 | 16 | 4 | Number Forms |'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 2160..217F | [@][g..z][9] | 20*1= 20 | 16 | 4 | 数字形式 |'
- en: '| 0180..02AF | [@][g..z][a..k] | 20*11=220 | 203 | 17 | Latin Extended-B +
    IPA Extensions |'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 0180..02AF | [@][g..z][a..k] | 20*11=220 | 203 | 17 | 拉丁扩展-B + 国际音标扩展 |'
- en: '| 1E00..1EFF | [@][g..z][l..r] | 20*7= 140 | 136 | 4 | Latin Extended Additional
    |'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1E00..1EFF | [@][g..z][l..r] | 20*7= 140 | 136 | 4 | 拉丁语扩展附加 |'
- en: '| 1F00..1FFF | [@][g..z][s..z] | 20*8= 160 | 144 | 16 | Greek Extended |'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1F00..1FFF | [@][g..z][s..z] | 20*8= 160 | 144 | 16 | 希腊语扩展 |'
- en: '| .... .... | [@][a..f][g..z] | 6*20= 120 | 0 | 120 | RESERVED |'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| .... .... | [@][a..f][g..z] | 6*20= 120 | 0 | 120 | 保留 |'
- en: '| 24B6..24E9 | [@][@][a..z] | 26 | 26 | 0 | Enclosed Alphanumerics |'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 24B6..24E9 | [@][@][a..z] | 26 | 26 | 0 | 封闭字母数字 |'
- en: '| FF21..FF5A | [@][a..z][@] | 26 | 26 | 0 | Halfwidth and Fullwidth forms |'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| FF21..FF5A | [@][a..z][@] | 26 | 26 | 0 | 半角和全角形式 |'
- en: '| Code Range | Pattern | Number | Used | Unused | Blocks |'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| Code Range | Pattern | Number | Used | Unused | Blocks |'
- en: 'One of the bytes in the sequence encodes lettercase. For example: `LATIN CAPITAL
    LETTER A WITH GRAVE` is encoded as `@0G`, whereas `LATIN SMALL LETTER A WITH GRAVE`
    is encoded as `@0g`. Here the third byte (`G` or `g`) indicates lettercase. (On
    a case-insensitive file system, both letters are treated as the same.)'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 序列中的一个字节编码了大小写。例如：`LATIN CAPITAL LETTER A WITH GRAVE` 被编码为 `@0G`，而 `LATIN SMALL
    LETTER A WITH GRAVE` 被编码为 `@0g`。这里的第三个字节（`G` 或 `g`）表示大小写。（在不区分大小写的文件系统中，这两个字母被视为相同。）
- en: For some blocks, such as Cyrillic, the second byte determines lettercase. For
    other blocks, such as Latin1 Supplement, the third byte determines lettercase.
    If two bytes in the sequence are letters (as in Greek Extended), the leftmost
    letter character stands for lettercase. All other letter bytes must be in lowercase.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于某些块，如西里尔字母，第二个字节确定大小写。对于其他块，如 Latin1 补充，第三个字节确定大小写。如果序列中的两个字节是字母（如希腊扩展中），最左边的字母字符代表大小写。所有其他字母字节必须是小写。
- en: 'All nonletter characters except underscore (`_`), as well as letters from alphabets
    that do not have uppercase/lowercase mapping (such as Hebrew) are encoded using
    hexadecimal representation using lowercase letters for hexadecimal digits `a..f`:'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了下划线（`_`）之外的所有非字母字符，以及没有大写/小写映射的字母（如希伯来语）都使用十六进制表示法编码，使用小写字母表示十六进制数字`a..f`：
- en: '[PRE0]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The hexadecimal values correspond to character values in the `ucs2` double-byte
    character set.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 十六进制值对应于`ucs2`双字节字符集中的字符值。
- en: On Windows, some names such as `nul`, `prn`, and `aux` are encoded by appending
    `@@@` to the name when the server creates the corresponding file or directory.
    This occurs on all platforms for portability of the corresponding database object
    between platforms.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，一些名称，如`nul`、`prn`和`aux`，在服务器创建相应的文件或目录时，通过在名称后附加`@@@`进行编码。这在所有平台上都会发生，以便在平台之间移植相应的数据库对象。
- en: 'The following names are reserved and appended with `@@@` if used in schema
    or table names:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下名称是保留名称，如果在模式或表名中使用，则附加`@@@`：
- en: CON
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CON
- en: PRN
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PRN
- en: AUX
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AUX
- en: NUL
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NUL
- en: COM1 through COM9
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: COM1 到 COM9
- en: LPT1 through LPT9
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LPT1 到 LPT9
- en: CLOCK$ is also a member of this group of reserved names, but is not appended
    with `@@@`, but `@0024` instead. That is, if CLOCK$ is used as a schema or table
    name, it is written to the file system as `CLOCK@0024`. The same is true for any
    use of $ (dollar sign) in a schema or table name; it is replaced with `@0024`
    on the filesystem.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: CLOCK$ 也是这组保留名称的成员之一，但不是附加`@@@`，而是用`@0024`代替。也就是说，如果将 CLOCK$ 用作模式或表名，它将被写入文件系统为`CLOCK@0024`。对于模式或表名中任何使用
    $（美元符号）的情况也是如此；在文件系统中，它将被替换为`@0024`。
- en: Note
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: These names are also written to [`INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table") in their appended forms,
    but are written to [`TABLES`](information-schema-tables-table.html "28.3.38 The
    INFORMATION_SCHEMA TABLES Table") in their unappended form, as entered by the
    user.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这些名称也以它们的附加形式写入[`INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 INFORMATION_SCHEMA INNODB_TABLES 表")，但以用户输入的未附加形式写入[`TABLES`](information-schema-tables-table.html
    "28.3.38 INFORMATION_SCHEMA TABLES 表")。
