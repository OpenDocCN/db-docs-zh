- en: 13.1.7 Out-of-Range and Overflow Handling
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.1.7 超出范围和溢出处理
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/out-of-range-and-overflow.html](https://dev.mysql.com/doc/refman/8.0/en/out-of-range-and-overflow.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/out-of-range-and-overflow.html](https://dev.mysql.com/doc/refman/8.0/en/out-of-range-and-overflow.html)
- en: 'When MySQL stores a value in a numeric column that is outside the permissible
    range of the column data type, the result depends on the SQL mode in effect at
    the time:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当 MySQL 将一个值存储在数值列中，该值超出了列数据类型的允许范围时，结果取决于当时生效的 SQL 模式：
- en: If strict SQL mode is enabled, MySQL rejects the out-of-range value with an
    error, and the insert fails, in accordance with the SQL standard.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果启用了严格的 SQL 模式，MySQL 将拒绝超出范围的值并显示错误，插入操作将失败，符合 SQL 标准。
- en: If no restrictive modes are enabled, MySQL clips the value to the appropriate
    endpoint of the column data type range and stores the resulting value instead.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未启用任何限制模式，MySQL 会将值截断到列数据类型范围的适当端点，并存储结果值。
- en: When an out-of-range value is assigned to an integer column, MySQL stores the
    value representing the corresponding endpoint of the column data type range.
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当将超出范围的值分配给整数列时，MySQL 会存储代表列数据类型范围相应端点的值。
- en: When a floating-point or fixed-point column is assigned a value that exceeds
    the range implied by the specified (or default) precision and scale, MySQL stores
    the value representing the corresponding endpoint of that range.
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当浮点或定点列被分配一个超出指定（或默认）精度和标度所暗示范围的值时，MySQL 会存储代表该范围端点的值。
- en: 'Suppose that a table `t1` has this definition:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 假设表 `t1` 定义如下：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'With strict SQL mode enabled, an out of range error occurs:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用严格的 SQL 模式时，会发生超出范围的错误：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'With strict SQL mode not enabled, clipping with warnings occurs:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当未启用严格的 SQL 模式时，会发生截断并伴有警告：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When strict SQL mode is not enabled, column-assignment conversions that occur
    due to clipping are reported as warnings for [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement"), [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA
    Statement"), [`UPDATE`](update.html "15.2.17 UPDATE Statement"), and multiple-row
    [`INSERT`](insert.html "15.2.7 INSERT Statement") statements. In strict mode,
    these statements fail, and some or all the values are not inserted or changed,
    depending on whether the table is a transactional table and other factors. For
    details, see [Section 7.1.11, “Server SQL Modes”](sql-mode.html "7.1.11 Server
    SQL Modes").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当未启用严格的 SQL 模式时，由于截断而发生的列赋值转换会作为警告报告给[`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement")、[`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement")、[`UPDATE`](update.html
    "15.2.17 UPDATE Statement") 和多行[`INSERT`](insert.html "15.2.7 INSERT Statement")
    语句。在严格模式下，这些语句将失败，并且根据表是否为事务表和其他因素，某些或全部值将不会被插入或更改。有关详细信息，请参见[第 7.1.11 节，“服务器
    SQL 模式”](sql-mode.html "7.1.11 Server SQL Modes")。
- en: 'Overflow during numeric expression evaluation results in an error. For example,
    the largest signed [`BIGINT`](integer-types.html "13.1.2 Integer Types (Exact
    Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT") value is 9223372036854775807,
    so the following expression produces an error:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在数值表达式评估过程中发生溢出会导致错误。例如，最大的有符号[`BIGINT`](integer-types.html "13.1.2 Integer
    Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT") 值为
    9223372036854775807，因此以下表达式会产生错误：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To enable the operation to succeed in this case, convert the value to unsigned;
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要使此操作在此情况下成功，将值转换为无符号；
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Whether overflow occurs depends on the range of the operands, so another way
    to handle the preceding expression is to use exact-value arithmetic because [`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") values have a larger
    range than integers:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 溢出是否发生取决于操作数的范围，因此处理前述表达式的另一种方法是使用精确值算术，因为[`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") 值的范围比整数大：
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Subtraction between integer values, where one is of type `UNSIGNED`, produces
    an unsigned result by default. If the result would otherwise have been negative,
    an error results:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 两个整数值相减，其中一个为`UNSIGNED`类型，默认会产生无符号结果。如果结果本应为负数，则会产生错误：
- en: '[PRE6]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If the [`NO_UNSIGNED_SUBTRACTION`](sql-mode.html#sqlmode_no_unsigned_subtraction)
    SQL mode is enabled, the result is negative:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了[`NO_UNSIGNED_SUBTRACTION`](sql-mode.html#sqlmode_no_unsigned_subtraction)
    SQL 模式，则结果为负数：
- en: '[PRE7]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If the result of such an operation is used to update an `UNSIGNED` integer column,
    the result is clipped to the maximum value for the column type, or clipped to
    0 if [`NO_UNSIGNED_SUBTRACTION`](sql-mode.html#sqlmode_no_unsigned_subtraction)
    is enabled. If strict SQL mode is enabled, an error occurs and the column remains
    unchanged.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这样的操作结果用于更新一个`UNSIGNED`整数列，结果将被截断为列类型的最大值，或者如果启用了[`NO_UNSIGNED_SUBTRACTION`](sql-mode.html#sqlmode_no_unsigned_subtraction)，则被截断为0。如果启用了严格的SQL模式，将会发生错误并且列保持不变。
