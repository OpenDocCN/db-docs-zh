- en: 15.6.4 Variables in Stored Programs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.6.4 存储程序中的变量
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/stored-program-variables.html](https://dev.mysql.com/doc/refman/8.0/en/stored-program-variables.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/stored-program-variables.html](https://dev.mysql.com/doc/refman/8.0/en/stored-program-variables.html)
- en: '[15.6.4.1 Local Variable DECLARE Statement](declare-local-variable.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[15.6.4.1 Local Variable DECLARE Statement](declare-local-variable.html)'
- en: '[15.6.4.2 Local Variable Scope and Resolution](local-variable-scope.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[15.6.4.2 本地变量作用域和解析](local-variable-scope.html)'
- en: System variables and user-defined variables can be used in stored programs,
    just as they can be used outside stored-program context. In addition, stored programs
    can use `DECLARE` to define local variables, and stored routines (procedures and
    functions) can be declared to take parameters that communicate values between
    the routine and its caller.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 系统变量和用户定义变量可以在存储程序中使用，就像在存储程序上下文之外使用一样。此外，存储程序可以使用`DECLARE`来定义本地变量，并且存储例程（过程和函数）可以声明接受参数，以在例程和其调用者之间传递值。
- en: To declare local variables, use the [`DECLARE`](declare-local-variable.html
    "15.6.4.1 Local Variable DECLARE Statement") statement, as described in [Section 15.6.4.1,
    “Local Variable DECLARE Statement”](declare-local-variable.html "15.6.4.1 Local
    Variable DECLARE Statement").
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要声明本地变量，请使用[`DECLARE`](declare-local-variable.html "15.6.4.1 Local Variable
    DECLARE Statement")语句，如[Section 15.6.4.1, “Local Variable DECLARE Statement”](declare-local-variable.html
    "15.6.4.1 Local Variable DECLARE Statement")中所述。
- en: Variables can be set directly with the [`SET`](set-variable.html "15.7.6.1 SET
    Syntax for Variable Assignment") statement. See [Section 15.7.6.1, “SET Syntax
    for Variable Assignment”](set-variable.html "15.7.6.1 SET Syntax for Variable
    Assignment").
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量可以直接使用[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")语句进行设置。参见[Section 15.7.6.1,
    “SET Syntax for Variable Assignment”](set-variable.html "15.7.6.1 SET Syntax for
    Variable Assignment")。
- en: Results from queries can be retrieved into local variables using [`SELECT ...
    INTO *`var_list`*`](select-into.html "15.2.13.1 SELECT ... INTO Statement") or
    by opening a cursor and using [`FETCH ... INTO *`var_list`*`](fetch.html "15.6.6.3 Cursor
    FETCH Statement"). See [Section 15.2.13.1, “SELECT ... INTO Statement”](select-into.html
    "15.2.13.1 SELECT ... INTO Statement"), and [Section 15.6.6, “Cursors”](cursors.html
    "15.6.6 Cursors").
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询结果可以使用[`SELECT ... INTO *`var_list`*`](select-into.html "15.2.13.1 SELECT
    ... INTO Statement")将其检索到本地变量中，或者通过打开游标并使用[`FETCH ... INTO *`var_list`*`](fetch.html
    "15.6.6.3 Cursor FETCH Statement")来实现。参见[Section 15.2.13.1, “SELECT ... INTO Statement”](select-into.html
    "15.2.13.1 SELECT ... INTO Statement")，以及[Section 15.6.6, “Cursors”](cursors.html
    "15.6.6 Cursors")。
- en: For information about the scope of local variables and how MySQL resolves ambiguous
    names, see [Section 15.6.4.2, “Local Variable Scope and Resolution”](local-variable-scope.html
    "15.6.4.2 Local Variable Scope and Resolution").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有关本地变量的作用域以及MySQL如何解析模糊名称的信息，请参见[Section 15.6.4.2, “Local Variable Scope and
    Resolution”](local-variable-scope.html "15.6.4.2 Local Variable Scope and Resolution")。
- en: It is not permitted to assign the value `DEFAULT` to stored procedure or function
    parameters or stored program local variables (for example with a `SET *`var_name`*
    = DEFAULT` statement). In MySQL 8.0, this results in a syntax error.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 不允许将值`DEFAULT`分配给存储过程或函数参数或存储程序本地变量（例如使用`SET *`var_name`* = DEFAULT`语句）。在MySQL
    8.0中，这将导致语法错误。
