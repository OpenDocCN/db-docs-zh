- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-analyze-table-complexity.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-analyze-table-complexity.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-analyze-table-complexity.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-analyze-table-complexity.html)
- en: 17.8.10.3 Estimating ANALYZE TABLE Complexity for InnoDB Tables
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 17.8.10.3 估计InnoDB表的ANALYZE TABLE复杂性
- en: '[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement") complexity
    for `InnoDB` tables is dependent on:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")复杂性对`InnoDB`表取决于：'
- en: The number of pages sampled, as defined by [`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages).
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 采样的页面数，由[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)定义。
- en: The number of indexed columns in a table
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表中索引列的数量
- en: The number of partitions. If a table has no partitions, the number of partitions
    is considered to be 1.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分区的数量。如果表没有分区，则分区的数量被视为1。
- en: 'Using these parameters, an approximate formula for estimating [`ANALYZE TABLE`](analyze-table.html
    "15.7.3.1 ANALYZE TABLE Statement") complexity would be:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些参数，估计[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")复杂性的近似公式将是：
- en: The value of [`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    * number of indexed columns in a table * the number of partitions
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)的值
    * 表中索引列的数量 * 表中分区的数量'
- en: Typically, the greater the resulting value, the greater the execution time for
    [`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，结果值越大，执行[`ANALYZE TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement")所需的时间越长。
- en: Note
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)
    defines the number of pages sampled at a global level. To set the number of pages
    sampled for an individual table, use the `STATS_SAMPLE_PAGES` option with [`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") or [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement"). For more information, see [Section 17.8.10.1,
    “Configuring Persistent Optimizer Statistics Parameters”](innodb-persistent-stats.html
    "17.8.10.1 Configuring Persistent Optimizer Statistics Parameters").'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)定义了在全局级别采样的页面数。要为单个表设置采样页面数，请在[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")或[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement")中使用`STATS_SAMPLE_PAGES`选项。更多信息，请参见[第17.8.10.1节，“配置持久性优化器统计参数”](innodb-persistent-stats.html
    "17.8.10.1 Configuring Persistent Optimizer Statistics Parameters")。'
- en: If [`innodb_stats_persistent=OFF`](innodb-parameters.html#sysvar_innodb_stats_persistent),
    the number of pages sampled is defined by [`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages).
    See [Section 17.8.10.2, “Configuring Non-Persistent Optimizer Statistics Parameters”](innodb-statistics-estimation.html
    "17.8.10.2 Configuring Non-Persistent Optimizer Statistics Parameters") for additional
    information.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`innodb_stats_persistent=OFF`](innodb-parameters.html#sysvar_innodb_stats_persistent)，则采样的页面数由[`innodb_stats_transient_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_transient_sample_pages)定义。有关更多信息，请参见[第17.8.10.2节，“配置非持久性优化器统计参数”](innodb-statistics-estimation.html
    "17.8.10.2 Configuring Non-Persistent Optimizer Statistics Parameters")。
- en: For a more in-depth approach to estimating `ANALYZE TABLE` complexity, consider
    the following example.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要更深入地估计`ANALYZE TABLE`复杂性，请考虑以下示例。
- en: 'In [Big O notation](http://en.wikipedia.org/wiki/Big_O_notation), [`ANALYZE
    TABLE`](analyze-table.html "15.7.3.1 ANALYZE TABLE Statement") complexity is described
    as:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在[大O符号](http://en.wikipedia.org/wiki/Big_O_notation)中，[`ANALYZE TABLE`](analyze-table.html
    "15.7.3.1 ANALYZE TABLE Statement")的复杂性描述为：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'where:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: '`n_sample` is the number of pages sampled (defined by [`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages))'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_sample`是采样的页面数（由[`innodb_stats_persistent_sample_pages`](innodb-parameters.html#sysvar_innodb_stats_persistent_sample_pages)定义）'
- en: '`n_cols_in_uniq_i` is total number of all columns in all unique indexes (not
    counting the primary key columns)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_cols_in_uniq_i`是所有唯一索引中所有列的总数（不包括主键列）'
- en: '`n_cols_in_non_uniq_i` is the total number of all columns in all nonunique
    indexes'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_cols_in_non_uniq_i`是所有非唯一索引中所有列的总数'
- en: '`n_cols_in_pk` is the number of columns in the primary key (if a primary key
    is not defined, `InnoDB` creates a single column primary key internally)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_cols_in_pk`是主键中的列数（如果未定义主键，则`InnoDB`在内部创建单列主键）'
- en: '`n_non_uniq_i` is the number of nonunique indexes in the table'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_non_uniq_i`是表中非唯一索引的数量'
- en: '`n_part` is the number of partitions. If no partitions are defined, the table
    is considered to be a single partition.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_part`是分区的数量。如果未定义分区，则认为表是单个分区。'
- en: 'Now, consider the following table (table `t`), which has a primary key (2 columns),
    a unique index (2 columns), and two nonunique indexes (two columns each):'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，考虑以下表（表`t`），它具有主键（2列），唯一索引（2列）和两个非唯一索引（每个两列）：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For the column and index data required by the algorithm described above, query
    the `mysql.innodb_index_stats` persistent index statistics table for table `t`.
    The `n_diff_pfx%` statistics show the columns that are counted for each index.
    For example, columns `a` and `b` are counted for the primary key index. For the
    nonunique indexes, the primary key columns (a,b) are counted in addition to the
    user defined columns.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于上述算法所需的列和索引数据，请查询表`t`的`mysql.innodb_index_stats`持久性索引统计表。`n_diff_pfx%`统计数据显示了为每个索引计算的列。例如，主键索引计算了列`a`和`b`。对于非唯一索引，除了用户定义的列外，还计算了主键列（a，b）。
- en: Note
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For additional information about the `InnoDB` persistent statistics tables,
    see [Section 17.8.10.1, “Configuring Persistent Optimizer Statistics Parameters”](innodb-persistent-stats.html
    "17.8.10.1 Configuring Persistent Optimizer Statistics Parameters")
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`InnoDB`持久性统计表的其他信息，请参见[第17.8.10.1节，“配置持久性优化器统计参数”](innodb-persistent-stats.html
    "17.8.10.1 配置持久性优化器统计参数")
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Based on the index statistics data shown above and the table definition, the
    following values can be determined:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述索引统计数据和表定义，可以确定以下值：
- en: '`n_cols_in_uniq_i`, the total number of all columns in all unique indexes not
    counting the primary key columns, is 2 (`c` and `d`)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_cols_in_uniq_i`，所有唯一索引中所有列的总数，不包括主键列，为2（`c`和`d`）'
- en: '`n_cols_in_non_uniq_i`, the total number of all columns in all nonunique indexes,
    is 4 (`e`, `f`, `g` and `h`)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_cols_in_non_uniq_i`，所有非唯一索引中所有列的总数为4（`e`，`f`，`g`和`h`）'
- en: '`n_cols_in_pk`, the number of columns in the primary key, is 2 (`a` and `b`)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_cols_in_pk`，主键中的列数为2（`a`和`b`）'
- en: '`n_non_uniq_i`, the number of nonunique indexes in the table, is 2 (`i2nonuniq`
    and `i3nonuniq`))'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_non_uniq_i`，表中非唯一索引的数量为2（`i2nonuniq`和`i3nonuniq`）'
- en: '`n_part`, the number of partitions, is 1.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`n_part`，分区的数量为1。'
- en: You can now calculate `innodb_stats_persistent_sample_pages` * (2 + 4 + 2 *
    (1 + 2)) * 1 to determine the number of leaf pages that are scanned. With `innodb_stats_persistent_sample_pages`
    set to the default value of `20`, and with a default page size of 16 `KiB` ([`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)=16384),
    you can then estimate that 20 * 12 * 16384 `bytes` are read for table `t`, or
    about 4 `MiB`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以计算`innodb_stats_persistent_sample_pages` *（2 + 4 + 2 *（1 + 2））* 1来确定扫描的叶页数。假设`innodb_stats_persistent_sample_pages`设置为默认值`20`，默认页面大小为16
    `KiB`（[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)=16384），则可以估计对表`t`读取了20
    * 12 * 16384 `bytes`，约为4 `MiB`。
- en: Note
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: All 4 `MiB` may not be read from disk, as some leaf pages may already be cached
    in the buffer pool.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 可能并非从磁盘读取全部4 `MiB`，因为一些叶页可能已经缓存在缓冲池中。
