- en: 17.12.7 Online DDL Failure Conditions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.12.7 在线DDL失败条件
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-failure-conditions.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-failure-conditions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-failure-conditions.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-failure-conditions.html)
- en: 'The failure of an online DDL operation is typically due to one of the following
    conditions:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在线DDL操作失败通常是由以下条件之一导致的：
- en: An `ALGORITHM` clause specifies an algorithm that is not compatible with the
    particular type of DDL operation or storage engine.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`ALGORITHM`子句指定了一个与特定类型的DDL操作或存储引擎不兼容的算法。
- en: A `LOCK` clause specifies a low degree of locking (`SHARED` or `NONE`) that
    is not compatible with the particular type of DDL operation.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`LOCK`子句指定了一个低程度的锁定（`SHARED`或`NONE`），这与特定类型的DDL操作不兼容。
- en: A timeout occurs while waiting for an [exclusive lock](glossary.html#glos_exclusive_lock
    "exclusive lock") on the table, which may be needed briefly during the initial
    and final phases of the DDL operation.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在等待对表的[独占锁](glossary.html#glos_exclusive_lock "exclusive lock")时发生超时，这可能在DDL操作的初始和最终阶段短暂需要。
- en: The [`tmpdir`](server-system-variables.html#sysvar_tmpdir) or [`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)
    file system runs out of disk space, while MySQL writes temporary sort files on
    disk during index creation. For more information, see [Section 17.12.3, “Online
    DDL Space Requirements”](innodb-online-ddl-space-requirements.html "17.12.3 Online
    DDL Space Requirements").
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当MySQL在索引创建过程中在磁盘上写入临时排序文件时，[`tmpdir`](server-system-variables.html#sysvar_tmpdir)或[`innodb_tmpdir`](innodb-parameters.html#sysvar_innodb_tmpdir)文件系统的磁盘空间不足。有关更多信息，请参见[第17.12.3节，“在线DDL空间要求”](innodb-online-ddl-space-requirements.html
    "17.12.3 Online DDL Space Requirements")。
- en: The operation takes a long time and concurrent DML modifies the table so much
    that the size of the temporary online log exceeds the value of the [`innodb_online_alter_log_max_size`](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)
    configuration option. This condition causes a `DB_ONLINE_LOG_TOO_BIG` error.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该操作需要很长时间，同时并发的DML修改了表，使得临时在线日志的大小超过了[`innodb_online_alter_log_max_size`](innodb-parameters.html#sysvar_innodb_online_alter_log_max_size)配置选项的值。这种情况会导致`DB_ONLINE_LOG_TOO_BIG`错误。
- en: Concurrent DML makes changes to the table that are allowed with the original
    table definition, but not with the new one. The operation only fails at the very
    end, when MySQL tries to apply all the changes from concurrent DML statements.
    For example, you might insert duplicate values into a column while a unique index
    is being created, or you might insert `NULL` values into a column while creating
    a [primary key](glossary.html#glos_primary_key "primary key") index on that column.
    The changes made by the concurrent DML take precedence, and the [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") operation is effectively [rolled back](glossary.html#glos_rollback
    "rollback").
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并发的DML对表进行了更改，这些更改在原始表定义中是允许的，但在新表定义中不允许。该操作仅在最后阶段失败，当MySQL尝试应用所有并发DML语句的更改时。例如，您可能在创建唯一索引时插入重复值，或者在创建[主键](glossary.html#glos_primary_key
    "primary key")索引时插入`NULL`值。并发DML所做的更改优先级更高，并且[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement")操作实际上被[回滚](glossary.html#glos_rollback "rollback")。
