- en: 14.7 Date and Time Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.7 日期和时间函数
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html](https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html](https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html)
- en: This section describes the functions that can be used to manipulate temporal
    values. See [Section 13.2, “Date and Time Data Types”](date-and-time-types.html
    "13.2 Date and Time Data Types"), for a description of the range of values each
    date and time type has and the valid formats in which values may be specified.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了用于操作时间值的函数。有关每种日期和时间类型的值范围以及可以指定值的有效格式的描述，请参见[第13.2节，“日期和时间数据类型”](date-and-time-types.html
    "13.2 日期和时间数据类型")。
- en: '**Table 14.11 Date and Time Functions**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**表格 14.11 日期和时间函数**'
- en: '| Name | Description |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: '| [`ADDDATE()`](date-and-time-functions.html#function_adddate) | Add time values
    (intervals) to a date value |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`ADDDATE()`](date-and-time-functions.html#function_adddate) | 将时间值（间隔）添加到日期值
    |'
- en: '| [`ADDTIME()`](date-and-time-functions.html#function_addtime) | Add time |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`ADDTIME()`](date-and-time-functions.html#function_addtime) | 添加时间 |'
- en: '| [`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz) | Convert
    from one time zone to another |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz) | 将一个时区转换为另一个时区
    |'
- en: '| [`CURDATE()`](date-and-time-functions.html#function_curdate) | Return the
    current date |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`CURDATE()`](date-and-time-functions.html#function_curdate) | 返回当前日期 |'
- en: '| [`CURRENT_DATE()`, `CURRENT_DATE`](date-and-time-functions.html#function_current-date)
    | Synonyms for CURDATE() |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_DATE()`, `CURRENT_DATE`](date-and-time-functions.html#function_current-date)
    | CURDATE()的同义词 |'
- en: '| [`CURRENT_TIME()`, `CURRENT_TIME`](date-and-time-functions.html#function_current-time)
    | Synonyms for CURTIME() |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_TIME()`, `CURRENT_TIME`](date-and-time-functions.html#function_current-time)
    | CURTIME()的同义词 |'
- en: '| [`CURRENT_TIMESTAMP()`, `CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    | Synonyms for NOW() |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`CURRENT_TIMESTAMP()`, `CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    | NOW()的同义词 |'
- en: '| [`CURTIME()`](date-and-time-functions.html#function_curtime) | Return the
    current time |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`CURTIME()`](date-and-time-functions.html#function_curtime) | 返回当前时间 |'
- en: '| [`DATE()`](date-and-time-functions.html#function_date) | Extract the date
    part of a date or datetime expression |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`DATE()`](date-and-time-functions.html#function_date) | 提取日期或日期时间表达式的日期部分
    |'
- en: '| [`DATE_ADD()`](date-and-time-functions.html#function_date-add) | Add time
    values (intervals) to a date value |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`DATE_ADD()`](date-and-time-functions.html#function_date-add) | 将时间值（间隔）添加到日期值
    |'
- en: '| [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format) | Format
    date as specified |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format) | 格式化指定的日期
    |'
- en: '| [`DATE_SUB()`](date-and-time-functions.html#function_date-sub) | Subtract
    a time value (interval) from a date |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`DATE_SUB()`](date-and-time-functions.html#function_date-sub) | 从日期中减去一个时间值（间隔）
    |'
- en: '| [`DATEDIFF()`](date-and-time-functions.html#function_datediff) | Subtract
    two dates |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`DATEDIFF()`](date-and-time-functions.html#function_datediff) | 计算两个日期之间的差值
    |'
- en: '| [`DAY()`](date-and-time-functions.html#function_day) | Synonym for DAYOFMONTH()
    |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`DAY()`](date-and-time-functions.html#function_day) | DAYOFMONTH()的同义词 |'
- en: '| [`DAYNAME()`](date-and-time-functions.html#function_dayname) | Return the
    name of the weekday |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`DAYNAME()`](date-and-time-functions.html#function_dayname) | 返回星期几的名称 |'
- en: '| [`DAYOFMONTH()`](date-and-time-functions.html#function_dayofmonth) | Return
    the day of the month (0-31) |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`DAYOFMONTH()`](date-and-time-functions.html#function_dayofmonth) | 返回月份中的日期（0-31）
    |'
- en: '| [`DAYOFWEEK()`](date-and-time-functions.html#function_dayofweek) | Return
    the weekday index of the argument |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`DAYOFWEEK()`](date-and-time-functions.html#function_dayofweek) | 返回参数的星期索引
    |'
- en: '| [`DAYOFYEAR()`](date-and-time-functions.html#function_dayofyear) | Return
    the day of the year (1-366) |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`DAYOFYEAR()`](date-and-time-functions.html#function_dayofyear) | 返回一年中的日期（1-366）
    |'
- en: '| [`EXTRACT()`](date-and-time-functions.html#function_extract) | Extract part
    of a date |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`EXTRACT()`](date-and-time-functions.html#function_extract) | 提取日期的部分 |'
- en: '| [`FROM_DAYS()`](date-and-time-functions.html#function_from-days) | Convert
    a day number to a date |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`FROM_DAYS()`](date-and-time-functions.html#function_from-days) | 将天数转换为日期
    |'
- en: '| [`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)
    | Format Unix timestamp as a date |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)
    | 将Unix时间戳格式化为日期 |'
- en: '| [`GET_FORMAT()`](date-and-time-functions.html#function_get-format) | Return
    a date format string |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`GET_FORMAT()`](date-and-time-functions.html#function_get-format) | 返回日期格式字符串
    |'
- en: '| [`HOUR()`](date-and-time-functions.html#function_hour) | Extract the hour
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`HOUR()`](date-and-time-functions.html#function_hour) | 提取小时 |'
- en: '| [`LAST_DAY`](date-and-time-functions.html#function_last-day) | Return the
    last day of the month for the argument |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`LAST_DAY`](date-and-time-functions.html#function_last-day) | 返回参数月份的最后一天
    |'
- en: '| [`LOCALTIME()`, `LOCALTIME`](date-and-time-functions.html#function_localtime)
    | Synonym for NOW() |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`LOCALTIME()`, `LOCALTIME`](date-and-time-functions.html#function_localtime)
    | NOW()的同义词 |'
- en: '| [`LOCALTIMESTAMP`, `LOCALTIMESTAMP()`](date-and-time-functions.html#function_localtimestamp)
    | Synonym for NOW() |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`LOCALTIMESTAMP`, `LOCALTIMESTAMP()`](date-and-time-functions.html#function_localtimestamp)
    | NOW()的同义词 |'
- en: '| [`MAKEDATE()`](date-and-time-functions.html#function_makedate) | Create a
    date from the year and day of year |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`MAKEDATE()`](date-and-time-functions.html#function_makedate) | 从年份和一年中的天数创建日期
    |'
- en: '| [`MAKETIME()`](date-and-time-functions.html#function_maketime) | Create time
    from hour, minute, second |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`MAKETIME()`](date-and-time-functions.html#function_maketime) | 从小时、分钟、秒创建时间
    |'
- en: '| [`MICROSECOND()`](date-and-time-functions.html#function_microsecond) | Return
    the microseconds from argument |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`MICROSECOND()`](date-and-time-functions.html#function_microsecond) | 返回参数的微秒
    |'
- en: '| [`MINUTE()`](date-and-time-functions.html#function_minute) | Return the minute
    from the argument |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`MINUTE()`](date-and-time-functions.html#function_minute) | 返回参数的分钟 |'
- en: '| [`MONTH()`](date-and-time-functions.html#function_month) | Return the month
    from the date passed |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`MONTH()`](date-and-time-functions.html#function_month) | 返回传递日期的月份 |'
- en: '| [`MONTHNAME()`](date-and-time-functions.html#function_monthname) | Return
    the name of the month |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`MONTHNAME()`](date-and-time-functions.html#function_monthname) | 返回月份的名称
    |'
- en: '| [`NOW()`](date-and-time-functions.html#function_now) | Return the current
    date and time |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`NOW()`](date-and-time-functions.html#function_now) | 返回当前日期和时间 |'
- en: '| [`PERIOD_ADD()`](date-and-time-functions.html#function_period-add) | Add
    a period to a year-month |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`PERIOD_ADD()`](date-and-time-functions.html#function_period-add) | 向年-月添加一个周期
    |'
- en: '| [`PERIOD_DIFF()`](date-and-time-functions.html#function_period-diff) | Return
    the number of months between periods |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`PERIOD_DIFF()`](date-and-time-functions.html#function_period-diff) | 返回两个周期之间的月数
    |'
- en: '| [`QUARTER()`](date-and-time-functions.html#function_quarter) | Return the
    quarter from a date argument |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`QUARTER()`](date-and-time-functions.html#function_quarter) | 返回日期参数的季度
    |'
- en: '| [`SEC_TO_TIME()`](date-and-time-functions.html#function_sec-to-time) | Converts
    seconds to ''hh:mm:ss'' format |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`SEC_TO_TIME()`](date-and-time-functions.html#function_sec-to-time) | 将秒转换为''hh:mm:ss''格式
    |'
- en: '| [`SECOND()`](date-and-time-functions.html#function_second) | Return the second
    (0-59) |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`SECOND()`](date-and-time-functions.html#function_second) | 返回秒数（0-59） |'
- en: '| [`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date) | Convert
    a string to a date |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date) | 将字符串转换为日期
    |'
- en: '| [`SUBDATE()`](date-and-time-functions.html#function_subdate) | Synonym for
    DATE_SUB() when invoked with three arguments |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`SUBDATE()`](date-and-time-functions.html#function_subdate) | 在使用三个参数调用时是DATE_SUB()的同义词
    |'
- en: '| [`SUBTIME()`](date-and-time-functions.html#function_subtime) | Subtract times
    |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`SUBTIME()`](date-and-time-functions.html#function_subtime) | 时间相减 |'
- en: '| [`SYSDATE()`](date-and-time-functions.html#function_sysdate) | Return the
    time at which the function executes |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`SYSDATE()`](date-and-time-functions.html#function_sysdate) | 返回函数执行时的时间
    |'
- en: '| [`TIME()`](date-and-time-functions.html#function_time) | Extract the time
    portion of the expression passed |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`TIME()`](date-and-time-functions.html#function_time) | 提取传递表达式的时间部分 |'
- en: '| [`TIME_FORMAT()`](date-and-time-functions.html#function_time-format) | Format
    as time |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`TIME_FORMAT()`](date-and-time-functions.html#function_time-format) | 格式化为时间
    |'
- en: '| [`TIME_TO_SEC()`](date-and-time-functions.html#function_time-to-sec) | Return
    the argument converted to seconds |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`TIME_TO_SEC()`](date-and-time-functions.html#function_time-to-sec) | 返回转换为秒的参数
    |'
- en: '| [`TIMEDIFF()`](date-and-time-functions.html#function_timediff) | Subtract
    time |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`TIMEDIFF()`](date-and-time-functions.html#function_timediff) | 时间相减 |'
- en: '| [`TIMESTAMP()`](date-and-time-functions.html#function_timestamp) | With a
    single argument, this function returns the date or datetime expression; with two
    arguments, the sum of the arguments |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`TIMESTAMP()`](date-and-time-functions.html#function_timestamp) | 使用单个参数，此函数返回日期或日期时间表达式；使用两个参数，返回参数的总和
    |'
- en: '| [`TIMESTAMPADD()`](date-and-time-functions.html#function_timestampadd) |
    Add an interval to a datetime expression |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`TIMESTAMPADD()`](date-and-time-functions.html#function_timestampadd) |
    向日期时间表达式添加一个间隔 |'
- en: '| [`TIMESTAMPDIFF()`](date-and-time-functions.html#function_timestampdiff)
    | Return the difference of two datetime expressions, using the units specified
    |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`TIMESTAMPDIFF()`](date-and-time-functions.html#function_timestampdiff)
    | 返回两个日期时间表达式的差异，使用指定的单位 |'
- en: '| [`TO_DAYS()`](date-and-time-functions.html#function_to-days) | Return the
    date argument converted to days |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`TO_DAYS()`](date-and-time-functions.html#function_to-days) | 返回转换为天数的日期参数
    |'
- en: '| [`TO_SECONDS()`](date-and-time-functions.html#function_to-seconds) | Return
    the date or datetime argument converted to seconds since Year 0 |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`TO_SECONDS()`](date-and-time-functions.html#function_to-seconds) | 返回自公元0年以来的秒数
    |'
- en: '| [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    | Return a Unix timestamp |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    | 返回 Unix 时间戳 |'
- en: '| [`UTC_DATE()`](date-and-time-functions.html#function_utc-date) | Return the
    current UTC date |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`UTC_DATE()`](date-and-time-functions.html#function_utc-date) | 返回当前的 UTC
    日期 |'
- en: '| [`UTC_TIME()`](date-and-time-functions.html#function_utc-time) | Return the
    current UTC time |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`UTC_TIME()`](date-and-time-functions.html#function_utc-time) | 返回当前的 UTC
    时间 |'
- en: '| [`UTC_TIMESTAMP()`](date-and-time-functions.html#function_utc-timestamp)
    | Return the current UTC date and time |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`UTC_TIMESTAMP()`](date-and-time-functions.html#function_utc-timestamp)
    | 返回当前的 UTC 日期和时间 |'
- en: '| [`WEEK()`](date-and-time-functions.html#function_week) | Return the week
    number |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`WEEK()`](date-and-time-functions.html#function_week) | 返回周数 |'
- en: '| [`WEEKDAY()`](date-and-time-functions.html#function_weekday) | Return the
    weekday index |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`WEEKDAY()`](date-and-time-functions.html#function_weekday) | 返回工作日索引 |'
- en: '| [`WEEKOFYEAR()`](date-and-time-functions.html#function_weekofyear) | Return
    the calendar week of the date (1-53) |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`WEEKOFYEAR()`](date-and-time-functions.html#function_weekofyear) | 返回日期的日历周（1-53）
    |'
- en: '| [`YEAR()`](date-and-time-functions.html#function_year) | Return the year
    |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`YEAR()`](date-and-time-functions.html#function_year) | 返回年份 |'
- en: '| [`YEARWEEK()`](date-and-time-functions.html#function_yearweek) | Return the
    year and week |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`YEARWEEK()`](date-and-time-functions.html#function_yearweek) | 返回年份和周数
    |'
- en: '| Name | Description |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 |'
- en: 'Here is an example that uses date functions. The following query selects all
    rows with a *`date_col`* value from within the last 30 days:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个使用日期函数的示例。以下查询选择所有*`date_col`*值在过去30天内的行：
- en: '[PRE0]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The query also selects rows with dates that lie in the future.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 查询还选择未来日期的行。
- en: Functions that expect date values usually accept datetime values and ignore
    the time part. Functions that expect time values usually accept datetime values
    and ignore the date part.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 函数通常接受日期值，但会忽略时间部分。通常接受时间值的函数会接受日期时间值并忽略日期部分。
- en: Functions that return the current date or time each are evaluated only once
    per query at the start of query execution. This means that multiple references
    to a function such as [`NOW()`](date-and-time-functions.html#function_now) within
    a single query always produce the same result. (For our purposes, a single query
    also includes a call to a stored program (stored routine, trigger, or event) and
    all subprograms called by that program.) This principle also applies to [`CURDATE()`](date-and-time-functions.html#function_curdate),
    [`CURTIME()`](date-and-time-functions.html#function_curtime), [`UTC_DATE()`](date-and-time-functions.html#function_utc-date),
    [`UTC_TIME()`](date-and-time-functions.html#function_utc-time), [`UTC_TIMESTAMP()`](date-and-time-functions.html#function_utc-timestamp),
    and to any of their synonyms.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 返回当前日期或时间的函数在每次查询执行开始时仅计算一次。这意味着在单个查询中多次引用诸如[`NOW()`](date-and-time-functions.html#function_now)的函数总是产生相同的结果。（对于我们的目的，单个查询还包括对存储程序（存储过程、触发器或事件）的调用以及该程序调用的所有子程序。）这个原则也适用于[`CURDATE()`](date-and-time-functions.html#function_curdate)、[`CURTIME()`](date-and-time-functions.html#function_curtime)、[`UTC_DATE()`](date-and-time-functions.html#function_utc-date)、[`UTC_TIME()`](date-and-time-functions.html#function_utc-time)、[`UTC_TIMESTAMP()`](date-and-time-functions.html#function_utc-timestamp)以及它们的任何同义词。
- en: The [`CURRENT_TIMESTAMP()`](date-and-time-functions.html#function_current-timestamp),
    [`CURRENT_TIME()`](date-and-time-functions.html#function_current-time), [`CURRENT_DATE()`](date-and-time-functions.html#function_current-date),
    and [`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime) functions
    return values in the current session time zone, which is available as the session
    value of the [`time_zone`](server-system-variables.html#sysvar_time_zone) system
    variable. In addition, [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    assumes that its argument is a datetime value in the session time zone. See [Section 7.1.15,
    “MySQL Server Time Zone Support”](time-zone-support.html "7.1.15 MySQL Server
    Time Zone Support").
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CURRENT_TIMESTAMP()`](date-and-time-functions.html#function_current-timestamp),
    [`CURRENT_TIME()`](date-and-time-functions.html#function_current-time), [`CURRENT_DATE()`](date-and-time-functions.html#function_current-date)和[`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)函数返回当前会话时区的值，该时区作为[`time_zone`](server-system-variables.html#sysvar_time_zone)系统变量的会话值可用。此外，[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)假定其参数是会话时区中的日期时间值。参见[Section 7.1.15,
    “MySQL Server Time Zone Support”](time-zone-support.html "7.1.15 MySQL Server
    Time Zone Support")。'
- en: 'Some date functions can be used with “zero” dates or incomplete dates such
    as `''2001-11-00''`, whereas others cannot. Functions that extract parts of dates
    typically work with incomplete dates and thus can return 0 when you might otherwise
    expect a nonzero value. For example:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一些日期函数可以与“零”日期或不完整日期一起使用，例如`'2001-11-00'`，而其他函数则不能。通常用于提取日期部分的函数可以处理不完整日期，因此在其他情况下可能会返回0而不是非零值。例如：
- en: '[PRE1]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Other functions expect complete dates and return `NULL` for incomplete dates.
    These include functions that perform date arithmetic or that map parts of dates
    to names. For example:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 其他函数期望完整日期并对不完整日期返回`NULL`。这些函数包括执行日期运算或将日期部分映射到名称的函数。例如：
- en: '[PRE2]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Several functions are strict when passed a [`DATE()`](date-and-time-functions.html#function_date)
    function value as their argument and reject incomplete dates with a day part of
    zero: [`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz), [`DATE_ADD()`](date-and-time-functions.html#function_date-add),
    [`DATE_SUB()`](date-and-time-functions.html#function_date-sub), [`DAYOFYEAR()`](date-and-time-functions.html#function_dayofyear),
    [`TIMESTAMPDIFF()`](date-and-time-functions.html#function_timestampdiff), [`TO_DAYS()`](date-and-time-functions.html#function_to-days),
    [`TO_SECONDS()`](date-and-time-functions.html#function_to-seconds), [`WEEK()`](date-and-time-functions.html#function_week),
    [`WEEKDAY()`](date-and-time-functions.html#function_weekday), [`WEEKOFYEAR()`](date-and-time-functions.html#function_weekofyear),
    [`YEARWEEK()`](date-and-time-functions.html#function_yearweek).'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当传递[`DATE()`](date-and-time-functions.html#function_date)函数值作为参数时，一些函数是严格的，并拒绝具有零天部分的不完整日期：[`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz),
    [`DATE_ADD()`](date-and-time-functions.html#function_date-add), [`DATE_SUB()`](date-and-time-functions.html#function_date-sub),
    [`DAYOFYEAR()`](date-and-time-functions.html#function_dayofyear), [`TIMESTAMPDIFF()`](date-and-time-functions.html#function_timestampdiff),
    [`TO_DAYS()`](date-and-time-functions.html#function_to-days), [`TO_SECONDS()`](date-and-time-functions.html#function_to-seconds),
    [`WEEK()`](date-and-time-functions.html#function_week), [`WEEKDAY()`](date-and-time-functions.html#function_weekday),
    [`WEEKOFYEAR()`](date-and-time-functions.html#function_weekofyear), [`YEARWEEK()`](date-and-time-functions.html#function_yearweek).
- en: Fractional seconds for `TIME`, `DATETIME`, and `TIMESTAMP` values are supported,
    with up to microsecond precision. Functions that take temporal arguments accept
    values with fractional seconds. Return values from temporal functions include
    fractional seconds as appropriate.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 支持`TIME`、`DATETIME`和`TIMESTAMP`值的分数秒，精度可达微秒。接受时间参数的函数接受具有分数秒的值。从时间函数返回的值包括适当的分数秒。
- en: '[`ADDDATE(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_adddate),
    [`ADDDATE(*`date`*,*`days`*)`](date-and-time-functions.html#function_adddate)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ADDDATE(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_adddate),
    [`ADDDATE(*`date`*,*`days`*)`](date-and-time-functions.html#function_adddate)'
- en: When invoked with the `INTERVAL` form of the second argument, [`ADDDATE()`](date-and-time-functions.html#function_adddate)
    is a synonym for [`DATE_ADD()`](date-and-time-functions.html#function_date-add).
    The related function [`SUBDATE()`](date-and-time-functions.html#function_subdate)
    is a synonym for [`DATE_SUB()`](date-and-time-functions.html#function_date-sub).
    For information on the `INTERVAL` *`unit`* argument, see [Temporal Intervals](expressions.html#temporal-intervals
    "Temporal Intervals").
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当以第二个参数的`INTERVAL`形式调用时，[`ADDDATE()`](date-and-time-functions.html#function_adddate)是[`DATE_ADD()`](date-and-time-functions.html#function_date-add)的同义词。相关函数[`SUBDATE()`](date-and-time-functions.html#function_subdate)是[`DATE_SUB()`](date-and-time-functions.html#function_date-sub)的同义词。有关`INTERVAL`
    *`unit`*参数的信息，请参见[时间间隔](expressions.html#temporal-intervals "Temporal Intervals")。
- en: '[PRE3]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: When invoked with the *`days`* form of the second argument, MySQL treats it
    as an integer number of days to be added to *`expr`*.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当以第二个参数的*`days`*形式调用时，MySQL将其视为要添加到*`expr`*的整数天数。
- en: '[PRE4]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This function returns `NULL` if *`date`* or *`days`* is `NULL`.
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`date`*或*`days`*为`NULL`，此函数返回`NULL`。
- en: '[`ADDTIME(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_addtime)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ADDTIME(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_addtime)'
- en: '[`ADDTIME()`](date-and-time-functions.html#function_addtime) adds *`expr2`*
    to *`expr1`* and returns the result. *`expr1`* is a time or datetime expression,
    and *`expr2`* is a time expression. Returns `NULL` if *`expr1`*or *`expr2`* is
    `NULL`.'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`ADDTIME()`](date-and-time-functions.html#function_addtime)将*`expr2`*添加到*`expr1`*并返回结果。*`expr1`*是时间或日期时间表达式，*`expr2`*是时间表达式。如果*`expr1`*或*`expr2`*为`NULL`，则返回`NULL`。'
- en: 'Beginning with MySQL 8.0.28, the return type of this function and of the [`SUBTIME()`](date-and-time-functions.html#function_subtime)
    function is determined as follows:'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.28开始，此函数和[`SUBTIME()`](date-and-time-functions.html#function_subtime)函数的返回类型如下确定：
- en: If the first argument is a dynamic parameter (such as in a prepared statement),
    the return type is `TIME`.
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果第一个参数是动态参数（例如在准备好的语句中），返回类型为`TIME`。
- en: Otherwise, the resolved type of the function is derived from the resolved type
    of the first argument.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，函数的解析类型源自第一个参数的解析类型。
- en: '[PRE5]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[`CONVERT_TZ(*`dt`*,*`from_tz`*,*`to_tz`*)`](date-and-time-functions.html#function_convert-tz)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CONVERT_TZ(*`dt`*,*`from_tz`*,*`to_tz`*)`](date-and-time-functions.html#function_convert-tz)'
- en: '[`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz) converts
    a datetime value *`dt`* from the time zone given by *`from_tz`* to the time zone
    given by *`to_tz`* and returns the resulting value. Time zones are specified as
    described in [Section 7.1.15, “MySQL Server Time Zone Support”](time-zone-support.html
    "7.1.15 MySQL Server Time Zone Support"). This function returns `NULL` if any
    of the arguments are invalid, or if any of them are `NULL`.'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CONVERT_TZ()`](date-and-time-functions.html#function_convert-tz)将给定时区*`from_tz`*的日期时间值*`dt`*转换为给定时区*`to_tz`*的值并返回结果。时区的指定方式如[第7.1.15节“MySQL服务器时区支持”](time-zone-support.html
    "7.1.15 MySQL Server Time Zone Support")中所述。如果任何参数无效或任何参数为`NULL`，此函数返回`NULL`。'
- en: On 32-bit platforms, the supported range of values for this function is the
    same as for the [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types") type (see [Section 13.2.1, “Date and Time Data Type Syntax”](date-and-time-type-syntax.html
    "13.2.1 Date and Time Data Type Syntax"), for range information). On 64-bit platforms,
    beginning with MySQL 8.0.28, the maximum supported value is `'3001-01-18 23:59:59.999999'`
    UTC.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在32位平台上，此函数的支持值范围与[`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and
    TIMESTAMP Types")类型相同（有关范围信息，请参见[第13.2.1节“日期和时间数据类型语法”](date-and-time-type-syntax.html
    "13.2.1 Date and Time Data Type Syntax")）。在64位平台上，从MySQL 8.0.28开始，最大支持值为`'3001-01-18
    23:59:59.999999'` UTC。
- en: Regardless of platform or MySQL version, if the value falls out of the supported
    range when converted from *`from_tz`* to UTC, no conversion occurs.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论平台或MySQL版本如何，如果从*`from_tz`*转换为UTC时的值超出支持范围，则不进行转换。
- en: '[PRE6]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To use named time zones such as `'MET'` or `'Europe/Amsterdam'`, the time zone
    tables must be properly set up. For instructions, see [Section 7.1.15, “MySQL
    Server Time Zone Support”](time-zone-support.html "7.1.15 MySQL Server Time Zone
    Support").
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使用诸如`'MET'`或`'Europe/Amsterdam'`之类的命名时区，必须正确设置时区表。有关说明，请参见[第7.1.15节“MySQL服务器时区支持”](time-zone-support.html
    "7.1.15 MySQL Server Time Zone Support")。
- en: '[`CURDATE()`](date-and-time-functions.html#function_curdate)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CURDATE()`](date-and-time-functions.html#function_curdate)'
- en: Returns the current date as a value in `'*`YYYY-MM-DD`*'` or *`YYYYMMDD`* format,
    depending on whether the function is used in string or numeric context.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回当前日期作为值，格式为`'*`YYYY-MM-DD`*'`或*`YYYYMMDD`*，取决于函数在字符串或数字上下文中的使用方式。
- en: '[PRE7]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[`CURRENT_DATE`](date-and-time-functions.html#function_current-date), [`CURRENT_DATE()`](date-and-time-functions.html#function_current-date)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CURRENT_DATE`](date-and-time-functions.html#function_current-date), [`CURRENT_DATE()`](date-and-time-functions.html#function_current-date)'
- en: '[`CURRENT_DATE`](date-and-time-functions.html#function_current-date) and [`CURRENT_DATE()`](date-and-time-functions.html#function_current-date)
    are synonyms for [`CURDATE()`](date-and-time-functions.html#function_curdate).'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CURRENT_DATE`](date-and-time-functions.html#function_current-date)和[`CURRENT_DATE()`](date-and-time-functions.html#function_current-date)是[`CURDATE()`](date-and-time-functions.html#function_curdate)的同义词。'
- en: '[`CURRENT_TIME`](date-and-time-functions.html#function_current-time), [`CURRENT_TIME([*`fsp`*])`](date-and-time-functions.html#function_current-time)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CURRENT_TIME`](date-and-time-functions.html#function_current-time), [`CURRENT_TIME([*`fsp`*])`](date-and-time-functions.html#function_current-time)'
- en: '[`CURRENT_TIME`](date-and-time-functions.html#function_current-time) and [`CURRENT_TIME()`](date-and-time-functions.html#function_current-time)
    are synonyms for [`CURTIME()`](date-and-time-functions.html#function_curtime).'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CURRENT_TIME`](date-and-time-functions.html#function_current-time)和[`CURRENT_TIME()`](date-and-time-functions.html#function_current-time)是[`CURTIME()`](date-and-time-functions.html#function_curtime)的同义词。'
- en: '[`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp),
    [`CURRENT_TIMESTAMP([*`fsp`*])`](date-and-time-functions.html#function_current-timestamp)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp),
    [`CURRENT_TIMESTAMP([*`fsp`*])`](date-and-time-functions.html#function_current-timestamp)'
- en: '[`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)
    and [`CURRENT_TIMESTAMP()`](date-and-time-functions.html#function_current-timestamp)
    are synonyms for [`NOW()`](date-and-time-functions.html#function_now).'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CURRENT_TIMESTAMP`](date-and-time-functions.html#function_current-timestamp)和[`CURRENT_TIMESTAMP()`](date-and-time-functions.html#function_current-timestamp)是[`NOW()`](date-and-time-functions.html#function_now)的同义词。'
- en: '[`CURTIME([*`fsp`*])`](date-and-time-functions.html#function_curtime)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CURTIME([*`fsp`*])`](date-and-time-functions.html#function_curtime)'
- en: Returns the current time as a value in *`'hh:mm:ss'`* or *`hhmmss`* format,
    depending on whether the function is used in string or numeric context. The value
    is expressed in the session time zone.
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回当前时间作为值，格式为*`'hh:mm:ss'`*或*`hhmmss`*，取决于函数在字符串或数字上下文中的使用方式。该值以会话时区表示。
- en: If the *`fsp`* argument is given to specify a fractional seconds precision from
    0 to 6, the return value includes a fractional seconds part of that many digits.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果给定*`fsp`*参数以指定从0到6的小数秒精度，则返回值包括相应数量的小数秒部分。
- en: '[PRE8]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[`DATE(*`expr`*)`](date-and-time-functions.html#function_date)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DATE(*`expr`*)`](date-and-time-functions.html#function_date)'
- en: Extracts the date part of the date or datetime expression *`expr`*. Returns
    `NULL` if *`expr`* is `NULL`.
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提取日期或日期时间表达式*`expr`*的日期部分。如果*`expr`*为`NULL`，则返回`NULL`。
- en: '[PRE9]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[`DATEDIFF(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_datediff)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DATEDIFF(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_datediff)'
- en: '[`DATEDIFF()`](date-and-time-functions.html#function_datediff) returns *`expr1`*
    − *`expr2`* expressed as a value in days from one date to the other. *`expr1`*
    and *`expr2`* are date or date-and-time expressions. Only the date parts of the
    values are used in the calculation.'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`DATEDIFF()`](date-and-time-functions.html#function_datediff) 返回*`expr1`*和*`expr2`*之间相差的天数值，以天数表示从一个日期到另一个日期。*`expr1`*和*`expr2`*是日期或日期时间表达式。计算中仅使用值的日期部分。'
- en: '[PRE10]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This function returns `NULL` if *`expr1`* or *`expr2`* is `NULL`.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`expr1`*或*`expr2`*为`NULL`，此函数返回`NULL`。
- en: '[`DATE_ADD(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_date-add),
    [`DATE_SUB(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_date-sub)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DATE_ADD(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_date-add),
    [`DATE_SUB(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_date-sub)'
- en: These functions perform date arithmetic. The *`date`* argument specifies the
    starting date or datetime value. *`expr`* is an expression specifying the interval
    value to be added or subtracted from the starting date. *`expr`* is evaluated
    as a string; it may start with a `-` for negative intervals. *`unit`* is a keyword
    indicating the units in which the expression should be interpreted.
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些函数执行日期算术运算。*`date`*参数指定起始日期或日期时间值。*`expr`*是指定要从起始日期中添加或减去的间隔值的表达式。*`expr`*被评估为字符串；它可以以`-`开头表示负间隔。*`unit`*是指示应解释表达式的单位的关键字。
- en: For more information about temporal interval syntax, including a full list of
    *`unit`* specifiers, the expected form of the *`expr`* argument for each *`unit`*
    value, and rules for operand interpretation in temporal arithmetic, see [Temporal
    Intervals](expressions.html#temporal-intervals "Temporal Intervals").
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关时间间隔语法的更多信息，包括完整的*`unit`*指定符列表，每个*`unit`*值的*`expr`*参数的预期形式，以及在时间算术中操作数解释的规则，请参阅[时间间隔](expressions.html#temporal-intervals
    "时间间隔")。
- en: 'The return value depends on the arguments:'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回值取决于参数：
- en: If *`date`* is `NULL`, the function returns `NULL`.
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果*`date`*为`NULL`，函数将返回`NULL`。
- en: '[`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") if
    the *`date`* argument is a [`DATE`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types") value and your calculations involve only `YEAR`, `MONTH`,
    and `DAY` parts (that is, no time parts).'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果*`date`*参数是[`DATE`](datetime.html "13.2.2 日期、DATETIME 和 TIMESTAMP 类型")值，并且您的计算仅涉及`YEAR`、`MONTH`和`DAY`部分（即没有时间部分），则返回[`DATE`](datetime.html
    "13.2.2 日期、DATETIME 和 TIMESTAMP 类型")。
- en: (*MySQL 8.0.28 and later*:) [`TIME`](time.html "13.2.3 The TIME Type") if the
    *`date`* argument is a `TIME` value and the calculations involve only `HOURS`,
    `MINUTES`, and `SECONDS` parts (that is, no date parts).
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: （*MySQL 8.0.28 及更高版本*：）如果*`date`*参数是`TIME`值，并且计算仅涉及`HOURS`、`MINUTES`和`SECONDS`部分（即没有日期部分），则返回[`TIME`](time.html
    "13.2.3 时间类型")。
- en: '[`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    if the first argument is a [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types") (or [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types")) value, or if the first argument is a [`DATE`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") and the *`unit`* value uses
    `HOURS`, `MINUTES`, or `SECONDS`, or if the first argument is of type [`TIME`](time.html
    "13.2.3 The TIME Type") and the *`unit`* value uses `YEAR`, `MONTH`, or `DAY`.'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果第一个参数是[`DATETIME`](datetime.html "13.2.2 日期、DATETIME 和 TIMESTAMP 类型")（或[`TIMESTAMP`](datetime.html
    "13.2.2 日期、DATETIME 和 TIMESTAMP 类型")）值，或者第一个参数是[`DATE`](datetime.html "13.2.2 日期、DATETIME
    和 TIMESTAMP 类型")且*`unit`*值使用`HOURS`、`MINUTES`或`SECONDS`，或者第一个参数是[`TIME`](time.html
    "13.2.3 时间类型")且*`unit`*值使用`YEAR`、`MONTH`或`DAY`，则返回[`DATETIME`](datetime.html "13.2.2 日期、DATETIME
    和 TIMESTAMP 类型")。
- en: (*MySQL 8.0.28 and later*:) If the first argument is a dynamic parameter (for
    example, of a prepared statement), its resolved type is `DATE` if the second argument
    is an interval that contains some combination of `YEAR`, `MONTH`, or `DAY` values
    only; otherwise, its type is `DATETIME`.
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: （*MySQL 8.0.28 及更高版本*：）如果第一个参数是动态参数（例如，准备语句的参数），且第二个参数是仅包含`YEAR`、`MONTH`或`DAY`值组合的间隔，则其解析类型为`DATE`；否则，其类型为`DATETIME`。
- en: String otherwise (type [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR Types")).
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则为字符串（类型[`VARCHAR`](char.html "13.3.2 CHAR 和 VARCHAR 类型")）。
- en: Note
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'In MySQL 8.0.22 through 8.0.27, when used in prepared statements, these functions
    returned `DATETIME` values regardless of argument types. (Bug #103781)'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '在MySQL 8.0.22至8.0.27中，在准备语句中使用时，这些函数无论参数类型如何都返回`DATETIME`值。（Bug #103781）'
- en: To ensure that the result is [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types"), you can use [`CAST()`](cast-functions.html#function_cast)
    to convert the first argument to [`DATETIME`](datetime.html "13.2.2 The DATE,
    DATETIME, and TIMESTAMP Types").
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了确保结果是[`DATETIME`](datetime.html "13.2.2 日期、DATETIME 和 TIMESTAMP 类型")，您可以使用[`CAST()`](cast-functions.html#function_cast)将第一个参数转换为[`DATETIME`](datetime.html
    "13.2.2 日期、DATETIME 和 TIMESTAMP 类型")。
- en: '[PRE11]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'When adding a `MONTH` interval to a `DATE` or `DATETIME` value, and the resulting
    date includes a day that does not exist in the given month, the day is adjusted
    to the last day of the month, as shown here:'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当向`DATE`或`DATETIME`值添加`MONTH`间隔时，并且结果日期包含给定月份中不存在的日期时，日期将调整为该月的最后一天，如下所示：
- en: '[PRE12]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[`DATE_FORMAT(*`date`*,*`format`*)`](date-and-time-functions.html#function_date-format)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DATE_FORMAT(*`date`*,*`format`*)`](date-and-time-functions.html#function_date-format)'
- en: Formats the *`date`* value according to the *`format`* string. If either argument
    is `NULL`, the function returns `NULL`.
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据*`format`*字符串格式化*`date`*值。如果任一参数为`NULL`，函数将返回`NULL`。
- en: 'The specifiers shown in the following table may be used in the *`format`* string.
    The `%` character is required before format specifier characters. The specifiers
    apply to other functions as well: [`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date),
    [`TIME_FORMAT()`](date-and-time-functions.html#function_time-format), [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp).'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下表中显示的指示符可用于 *`format`* 字符串。在格式指示符字符之前需要 `%` 字符。这些指示符也适用于其他函数：[`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date),
    [`TIME_FORMAT()`](date-and-time-functions.html#function_time-format), [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)。
- en: '| Specifier | Description |'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 指示符 | 描述 |'
- en: '| `%a` | Abbreviated weekday name (`Sun`..`Sat`) |'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%a` | 缩写星期名称 (`Sun`..`Sat`) |'
- en: '| `%b` | Abbreviated month name (`Jan`..`Dec`) |'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%b` | 缩写月份名称 (`Jan`..`Dec`) |'
- en: '| `%c` | Month, numeric (`0`..`12`) |'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%c` | 月份，数字 (`0`..`12`) |'
- en: '| `%D` | Day of the month with English suffix (`0th`, `1st`, `2nd`, `3rd`,
    …) |'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%D` | 带有英文后缀的日期 (`0th`, `1st`, `2nd`, `3rd`, …) |'
- en: '| `%d` | Day of the month, numeric (`00`..`31`) |'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%d` | 日期，数字 (`00`..`31`) |'
- en: '| `%e` | Day of the month, numeric (`0`..`31`) |'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%e` | 日期，数字 (`0`..`31`) |'
- en: '| `%f` | Microseconds (`000000`..`999999`) |'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%f` | 微秒 (`000000`..`999999`) |'
- en: '| `%H` | Hour (`00`..`23`) |'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%H` | 小时 (`00`..`23`) |'
- en: '| `%h` | Hour (`01`..`12`) |'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%h` | 小时 (`01`..`12`) |'
- en: '| `%I` | Hour (`01`..`12`) |'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%I` | 小时 (`01`..`12`) |'
- en: '| `%i` | Minutes, numeric (`00`..`59`) |'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%i` | 分钟，数字 (`00`..`59`) |'
- en: '| `%j` | Day of year (`001`..`366`) |'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%j` | 一年中的日期 (`001`..`366`) |'
- en: '| `%k` | Hour (`0`..`23`) |'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%k` | 小时 (`0`..`23`) |'
- en: '| `%l` | Hour (`1`..`12`) |'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%l` | 小时 (`1`..`12`) |'
- en: '| `%M` | Month name (`January`..`December`) |'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%M` | 月份名称 (`January`..`December`) |'
- en: '| `%m` | Month, numeric (`00`..`12`) |'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%m` | 月份，数字 (`00`..`12`) |'
- en: '| `%p` | `AM` or `PM` |'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%p` | `AM` 或 `PM` |'
- en: '| `%r` | Time, 12-hour (*`hh:mm:ss`* followed by `AM` or `PM`) |'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%r` | 时间，12小时制 (*`hh:mm:ss`* 后跟 `AM` 或 `PM`) |'
- en: '| `%S` | Seconds (`00`..`59`) |'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%S` | 秒数 (`00`..`59`) |'
- en: '| `%s` | Seconds (`00`..`59`) |'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%s` | 秒数 (`00`..`59`) |'
- en: '| `%T` | Time, 24-hour (*`hh:mm:ss`*) |'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%T` | 时间，24小时制 (*`hh:mm:ss`*) |'
- en: '| `%U` | Week (`00`..`53`), where Sunday is the first day of the week; [`WEEK()`](date-and-time-functions.html#function_week)
    mode 0 |'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%U` | 周数 (`00`..`53`), 星期日为一周的第一天; [`WEEK()`](date-and-time-functions.html#function_week)
    模式 0 |'
- en: '| `%u` | Week (`00`..`53`), where Monday is the first day of the week; [`WEEK()`](date-and-time-functions.html#function_week)
    mode 1 |'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%u` | 周数 (`00`..`53`), 星期一为一周的第一天; [`WEEK()`](date-and-time-functions.html#function_week)
    模式 1 |'
- en: '| `%V` | Week (`01`..`53`), where Sunday is the first day of the week; [`WEEK()`](date-and-time-functions.html#function_week)
    mode 2; used with `%X` |'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%V` | 周数 (`01`..`53`), 星期日为一周的第一天; [`WEEK()`](date-and-time-functions.html#function_week)
    模式 2; 与 `%X` 一起使用 |'
- en: '| `%v` | Week (`01`..`53`), where Monday is the first day of the week; [`WEEK()`](date-and-time-functions.html#function_week)
    mode 3; used with `%x` |'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%v` | 周数 (`01`..`53`), 星期一为一周的第一天; [`WEEK()`](date-and-time-functions.html#function_week)
    模式 3; 与 `%x` 一起使用 |'
- en: '| `%W` | Weekday name (`Sunday`..`Saturday`) |'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%W` | 星期名称 (`Sunday`..`Saturday`) |'
- en: '| `%w` | Day of the week (`0`=Sunday..`6`=Saturday) |'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%w` | 星期几 (`0`=星期日..`6`=星期六) |'
- en: '| `%X` | Year for the week where Sunday is the first day of the week, numeric,
    four digits; used with `%V` |'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%X` | 一周的年份，星期日为一周的第一天，数字，四位数; 与 `%V` 一起使用 |'
- en: '| `%x` | Year for the week, where Monday is the first day of the week, numeric,
    four digits; used with `%v` |'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%x` | 一周的年份，星期一为一周的第一天，数字，四位数; 与 `%v` 一起使用 |'
- en: '| `%Y` | Year, numeric, four digits |'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%Y` | 年份，数字，四位数 |'
- en: '| `%y` | Year, numeric (two digits) |'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%y` | 年份，数字 (两位数) |'
- en: '| `%%` | A literal `%` character |'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%%` | 一个字面上的 `%` 字符 |'
- en: '| `%*`x`*` | *`x`*, for any “*`x`*” not listed above |'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `%*`x`*` | *`x`*，对于上面未列出的任何“*`x`*” |'
- en: '| Specifier | Description |'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 指示符 | 描述 |'
- en: Ranges for the month and day specifiers begin with zero due to the fact that
    MySQL permits the storing of incomplete dates such as `'2014-00-00'`.
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 月份和日期指示符的范围从零开始，因为 MySQL 允许存储不完整的日期，如 `'2014-00-00'`。
- en: The language used for day and month names and abbreviations is controlled by
    the value of the [`lc_time_names`](server-system-variables.html#sysvar_lc_time_names)
    system variable ([Section 12.16, “MySQL Server Locale Support”](locale-support.html
    "12.16 MySQL Server Locale Support")).
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于日期和月份名称和缩写的语言由 [`lc_time_names`](server-system-variables.html#sysvar_lc_time_names)
    系统变量的值控制（[第 12.16 节，“MySQL 服务器区域设置支持”](locale-support.html "12.16 MySQL Server
    Locale Support")）。
- en: For the `%U`, `%u`, `%V`, and `%v` specifiers, see the description of the [`WEEK()`](date-and-time-functions.html#function_week)
    function for information about the mode values. The mode affects how week numbering
    occurs.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于`%U`、`%u`、`%V`和`%v`格式说明符，请参阅[`WEEK()`](date-and-time-functions.html#function_week)函数的描述，了解有关模式值的信息。模式影响周编号的方式。
- en: '[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format) returns
    a string with a character set and collation given by [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    and [`collation_connection`](server-system-variables.html#sysvar_collation_connection)
    so that it can return month and weekday names containing non-ASCII characters.'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)返回一个字符串，其中包含由[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)和[`collation_connection`](server-system-variables.html#sysvar_collation_connection)给定的字符集和校对规则，以便返回包含非ASCII字符的月份和星期几名称。'
- en: '[PRE13]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[`DATE_SUB(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_date-sub)'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DATE_SUB(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_date-sub)'
- en: See the description for [`DATE_ADD()`](date-and-time-functions.html#function_date-add).
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看[`DATE_ADD()`](date-and-time-functions.html#function_date-add)的描述。
- en: '[`DAY(*`date`*)`](date-and-time-functions.html#function_day)'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DAY(*`date`*)`](date-and-time-functions.html#function_day)'
- en: '[`DAY()`](date-and-time-functions.html#function_day) is a synonym for [`DAYOFMONTH()`](date-and-time-functions.html#function_dayofmonth).'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`DAY()`](date-and-time-functions.html#function_day)是[`DAYOFMONTH()`](date-and-time-functions.html#function_dayofmonth)的同义词。'
- en: '[`DAYNAME(*`date`*)`](date-and-time-functions.html#function_dayname)'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DAYNAME(*`date`*)`](date-and-time-functions.html#function_dayname)'
- en: Returns the name of the weekday for *`date`*. The language used for the name
    is controlled by the value of the [`lc_time_names`](server-system-variables.html#sysvar_lc_time_names)
    system variable (see [Section 12.16, “MySQL Server Locale Support”](locale-support.html
    "12.16 MySQL Server Locale Support")). Returns `NULL` if *`date`* is `NULL`.
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`date`*的星期几名称。名称所使用的语言由[`lc_time_names`](server-system-variables.html#sysvar_lc_time_names)系统变量的值控制（参见[第12.16节，“MySQL服务器区域设置支持”](locale-support.html
    "12.16 MySQL Server Locale Support")）。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE14]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[`DAYOFMONTH(*`date`*)`](date-and-time-functions.html#function_dayofmonth)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DAYOFMONTH(*`date`*)`](date-and-time-functions.html#function_dayofmonth)'
- en: Returns the day of the month for *`date`*, in the range `1` to `31`, or `0`
    for dates such as `'0000-00-00'` or `'2008-00-00'` that have a zero day part.
    Returns `NULL` if *`date`* is `NULL`.
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`date`*的月份中的日期，范围为`1`到`31`，对于日期如`'0000-00-00'`或`'2008-00-00'`等具有零日期部分的日期，返回`0`。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE15]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[`DAYOFWEEK(*`date`*)`](date-and-time-functions.html#function_dayofweek)'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DAYOFWEEK(*`date`*)`](date-and-time-functions.html#function_dayofweek)'
- en: Returns the weekday index for *`date`* (`1` = Sunday, `2` = Monday, …, `7` =
    Saturday). These index values correspond to the ODBC standard. Returns `NULL`
    if *`date`* is `NULL`.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`date`*的星期索引（`1` = 星期日，`2` = 星期一，...，`7` = 星期六）。这些索引值对应于ODBC标准。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE16]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[`DAYOFYEAR(*`date`*)`](date-and-time-functions.html#function_dayofyear)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DAYOFYEAR(*`date`*)`](date-and-time-functions.html#function_dayofyear)'
- en: Returns the day of the year for *`date`*, in the range `1` to `366`. Returns
    `NULL` if *`date`* is `NULL`.
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`date`*的一年中的日期，范围为`1`到`366`。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE17]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[`EXTRACT(*`unit`* FROM *`date`*)`](date-and-time-functions.html#function_extract)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`EXTRACT(*`unit`* FROM *`date`*)`](date-and-time-functions.html#function_extract)'
- en: The [`EXTRACT()`](date-and-time-functions.html#function_extract) function uses
    the same kinds of *`unit`* specifiers as [`DATE_ADD()`](date-and-time-functions.html#function_date-add)
    or [`DATE_SUB()`](date-and-time-functions.html#function_date-sub), but extracts
    parts from the date rather than performing date arithmetic. For information on
    the *`unit`* argument, see [Temporal Intervals](expressions.html#temporal-intervals
    "Temporal Intervals"). Returns `NULL` if *`date`* is `NULL`.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`EXTRACT()`](date-and-time-functions.html#function_extract)函数使用与[`DATE_ADD()`](date-and-time-functions.html#function_date-add)或[`DATE_SUB()`](date-and-time-functions.html#function_date-sub)相同类型的*`unit`*说明符，但是从日期中提取部分而不是执行日期算���。有关*`unit`*参数的信息，请参阅[时间间隔](expressions.html#temporal-intervals
    "Temporal Intervals")。如果*`date`*为`NULL`，则返回`NULL`。'
- en: '[PRE18]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[`FROM_DAYS(*`N`*)`](date-and-time-functions.html#function_from-days)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`FROM_DAYS(*`N`*)`](date-and-time-functions.html#function_from-days)'
- en: Given a day number *`N`*, returns a [`DATE`](datetime.html "13.2.2 The DATE,
    DATETIME, and TIMESTAMP Types") value. Returns `NULL` if *`N`* is `NULL`.
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给定一个日期数*`N`*，返回一个[`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types")值。如果*`N`*为`NULL`，则返回`NULL`。
- en: '[PRE19]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Use [`FROM_DAYS()`](date-and-time-functions.html#function_from-days) with caution
    on old dates. It is not intended for use with values that precede the advent of
    the Gregorian calendar (1582). See [Section 13.2.7, “What Calendar Is Used By
    MySQL?”](mysql-calendar.html "13.2.7 What Calendar Is Used By MySQL?").
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 谨慎使用[`FROM_DAYS()`](date-and-time-functions.html#function_from-days)处理旧日期。它不适用于格里高利历（1582年之前）之前的值。请参阅[第13.2.7节，“MySQL使用的日历是什么？”](mysql-calendar.html
    "13.2.7 MySQL使用的日历是什么？")。
- en: '[`FROM_UNIXTIME(*`unix_timestamp`*[,*`format`*])`](date-and-time-functions.html#function_from-unixtime)'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`FROM_UNIXTIME(*`unix_timestamp`*[,*`format`*])`](date-and-time-functions.html#function_from-unixtime)'
- en: Returns a representation of *`unix_timestamp`* as a datetime or character string
    value. The value returned is expressed using the session time zone. (Clients can
    set the session time zone as described in [Section 7.1.15, “MySQL Server Time
    Zone Support”](time-zone-support.html "7.1.15 MySQL Server Time Zone Support").)
    *`unix_timestamp`* is an internal timestamp value representing seconds since `'1970-01-01
    00:00:00'` UTC, such as produced by the [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    function.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 *`unix_timestamp`* 表示为日期时间或字符字符串值。返回的值使用会话时区表示。（客户端可以设置会话时区，如[第7.1.15节，“MySQL服务器时区支持”](time-zone-support.html
    "7.1.15 MySQL服务器时区支持")中所述。）*`unix_timestamp`* 是一个内部时间戳值，表示自 `'1970-01-01 00:00:00'`
    UTC 以来的秒数，例如[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)函数生成的值。
- en: If *`format`* is omitted, this function returns a [`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") value.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果省略 *`format`*，此函数将返回一个[`DATETIME`](datetime.html "13.2.2 DATE、DATETIME 和 TIMESTAMP
    类型")值。
- en: If *`unix_timestamp`* or *`format`* is `NULL`, this function returns `NULL`.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 *`unix_timestamp`* 或 *`format`* 为 `NULL`，此函数将返回 `NULL`。
- en: If *`unix_timestamp`* is an integer, the fractional seconds precision of the
    `DATETIME` is zero. When *`unix_timestamp`* is a decimal value, the fractional
    seconds precision of the `DATETIME` is the same as the precision of the decimal
    value, up to a maximum of 6\. When *`unix_timestamp`* is a floating point number,
    the fractional seconds precision of the datetime is 6.
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 *`unix_timestamp`* 是整数，则 `DATETIME` 的小数秒精度为零。当 *`unix_timestamp`* 是十进制值时，`DATETIME`
    的小数秒精度与十进制值的精度相同，最多为6。当 *`unix_timestamp`* 是浮点数时，日期时间的小数秒精度为6。
- en: On 32-bit platforms, the maximum useful value for *`unix_timestamp`* is 2147483647.999999,
    which returns `'2038-01-19 03:14:07.999999'` UTC. On 64-bit platforms running
    MySQL 8.0.28 or later, the effective maximum is 32536771199.999999, which returns
    `'3001-01-18 23:59:59.999999'` UTC. Regardless of platform or version, a greater
    value for *`unix_timestamp`* than the effective maximum returns `0`.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在32位平台上，*`unix_timestamp`* 的最大有用值为2147483647.999999，返回 `'2038-01-19 03:14:07.999999'`
    UTC。在运行MySQL 8.0.28或更高版本的64位平台上，有效最大值为32536771199.999999，返回 `'3001-01-18 23:59:59.999999'`
    UTC。无论平台或版本如何，*`unix_timestamp`* 的值大于有效最大值都将返回 `0`。
- en: '*`format`* is used to format the result in the same way as the format string
    used for the [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)
    function. If *`format`* is supplied, the value returned is a [`VARCHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types").'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`format`* 用于以与[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)函数使用的格式字符串相同的方式格式化结果。如果提供了
    *`format`*，则返回的值是一个[`VARCHAR`](char.html "13.3.2 CHAR 和 VARCHAR 类型")。'
- en: '[PRE20]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Note
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: If you use [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    and [`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime) to
    convert between values in a non-UTC time zone and Unix timestamp values, the conversion
    is lossy because the mapping is not one-to-one in both directions. For details,
    see the description of the [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    function.
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您使用[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)和[`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)在非UTC时区和Unix时间戳值之间进行转换，转换是有损的，因为映射在两个方向上不是一对一的。有关详细信息，请参阅[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)函数的描述。
- en: '[`GET_FORMAT({DATE|TIME|DATETIME}, {''EUR''|''USA''|''JIS''|''ISO''|''INTERNAL''})`](date-and-time-functions.html#function_get-format)'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`GET_FORMAT({DATE|TIME|DATETIME}, {''EUR''|''USA''|''JIS''|''ISO''|''INTERNAL''})`](date-and-time-functions.html#function_get-format)'
- en: Returns a format string. This function is useful in combination with the [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)
    and the [`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date) functions.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回一个格式字符串。此函数与[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)和[`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date)函数结合使用时很有用。
- en: If *`format`* is `NULL`, this function returns `NULL`.
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`format`*为`NULL`，则此函数返回`NULL`。
- en: The possible values for the first and second arguments result in several possible
    format strings (for the specifiers used, see the table in the [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)
    function description). ISO format refers to ISO 9075, not ISO 8601.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一个和第二个参数的可能值会导致多个可能的格式字符串（有关使用的占位符，请参见[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)函数描述中的表格）。ISO格式指的是ISO
    9075，而不是ISO 8601。
- en: '| Function Call | Result |'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 函数调用 | 结果 |'
- en: '| [`GET_FORMAT(DATE,''USA'')`](date-and-time-functions.html#function_get-format)
    | `''%m.%d.%Y''` |'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATE,''USA'')`](date-and-time-functions.html#function_get-format)
    | `''%m.%d.%Y''` |'
- en: '| [`GET_FORMAT(DATE,''JIS'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d''` |'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATE,''JIS'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d''` |'
- en: '| [`GET_FORMAT(DATE,''ISO'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d''` |'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATE,''ISO'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d''` |'
- en: '| [`GET_FORMAT(DATE,''EUR'')`](date-and-time-functions.html#function_get-format)
    | `''%d.%m.%Y''` |'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATE,''EUR'')`](date-and-time-functions.html#function_get-format)
    | `''%d.%m.%Y''` |'
- en: '| [`GET_FORMAT(DATE,''INTERNAL'')`](date-and-time-functions.html#function_get-format)
    | `''%Y%m%d''` |'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATE,''INTERNAL'')`](date-and-time-functions.html#function_get-format)
    | `''%Y%m%d''` |'
- en: '| [`GET_FORMAT(DATETIME,''USA'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d %H.%i.%s''` |'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATETIME,''USA'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d %H.%i.%s''` |'
- en: '| [`GET_FORMAT(DATETIME,''JIS'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d %H:%i:%s''` |'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATETIME,''JIS'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d %H:%i:%s''` |'
- en: '| [`GET_FORMAT(DATETIME,''ISO'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d %H:%i:%s''` |'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATETIME,''ISO'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d %H:%i:%s''` |'
- en: '| [`GET_FORMAT(DATETIME,''EUR'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d %H.%i.%s''` |'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATETIME,''EUR'')`](date-and-time-functions.html#function_get-format)
    | `''%Y-%m-%d %H.%i.%s''` |'
- en: '| [`GET_FORMAT(DATETIME,''INTERNAL'')`](date-and-time-functions.html#function_get-format)
    | `''%Y%m%d%H%i%s''` |'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(DATETIME,''INTERNAL'')`](date-and-time-functions.html#function_get-format)
    | `''%Y%m%d%H%i%s''` |'
- en: '| [`GET_FORMAT(TIME,''USA'')`](date-and-time-functions.html#function_get-format)
    | `''%h:%i:%s %p''` |'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(TIME,''USA'')`](date-and-time-functions.html#function_get-format)
    | `''%h:%i:%s %p''` |'
- en: '| [`GET_FORMAT(TIME,''JIS'')`](date-and-time-functions.html#function_get-format)
    | `''%H:%i:%s''` |'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(TIME,''JIS'')`](date-and-time-functions.html#function_get-format)
    | `''%H:%i:%s''` |'
- en: '| [`GET_FORMAT(TIME,''ISO'')`](date-and-time-functions.html#function_get-format)
    | `''%H:%i:%s''` |'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(TIME,''ISO'')`](date-and-time-functions.html#function_get-format)
    | `''%H:%i:%s''` |'
- en: '| [`GET_FORMAT(TIME,''EUR'')`](date-and-time-functions.html#function_get-format)
    | `''%H.%i.%s''` |'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(TIME,''EUR'')`](date-and-time-functions.html#function_get-format)
    | `''%H.%i.%s''` |'
- en: '| [`GET_FORMAT(TIME,''INTERNAL'')`](date-and-time-functions.html#function_get-format)
    | `''%H%i%s''` |'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| [`GET_FORMAT(TIME,''INTERNAL'')`](date-and-time-functions.html#function_get-format)
    | `''%H%i%s''` |'
- en: '| Function Call | Result |'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 函数调用 | 结果 |'
- en: '[`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    can also be used as the first argument to [`GET_FORMAT()`](date-and-time-functions.html#function_get-format),
    in which case the function returns the same values as for [`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types").'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME和TIMESTAMP类型")也可以作为[`GET_FORMAT()`](date-and-time-functions.html#function_get-format)的第一个参数使用，此时函数返回与[`DATETIME`](datetime.html
    "13.2.2 DATE、DATETIME和TIMESTAMP类型")相��的值。'
- en: '[PRE21]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[`HOUR(*`time`*)`](date-and-time-functions.html#function_hour)'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`HOUR(*`time`*)`](date-and-time-functions.html#function_hour)'
- en: Returns the hour for *`time`*. The range of the return value is `0` to `23`
    for time-of-day values. However, the range of [`TIME`](time.html "13.2.3 The TIME
    Type") values actually is much larger, so `HOUR` can return values greater than
    `23`. Returns `NULL` if *`time`* is `NULL`.
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`time`*的小时。对于一天中的时间值，返回值的范围是`0`到`23`。但是，[`TIME`](time.html "13.2.3 TIME类型")值的范围实际上要大得多，因此`HOUR`可能返回大于`23`的值。如果*`time`*为`NULL`，则返回`NULL`。
- en: '[PRE22]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[`LAST_DAY(*`date`*)`](date-and-time-functions.html#function_last-day)'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`LAST_DAY(*`date`*)`](date-and-time-functions.html#function_last-day)'
- en: Takes a date or datetime value and returns the corresponding value for the last
    day of the month. Returns `NULL` if the argument is invalid or `NULL`.
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 获取一个日期或日期时间值，并返回该月的最后一天的相应值。如果参数无效或为`NULL`，则返回`NULL`。
- en: '[PRE23]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[`LOCALTIME`](date-and-time-functions.html#function_localtime), [`LOCALTIME([*`fsp`*])`](date-and-time-functions.html#function_localtime)'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`LOCALTIME`](date-and-time-functions.html#function_localtime), [`LOCALTIME([*`fsp`*])`](date-and-time-functions.html#function_localtime)'
- en: '[`LOCALTIME`](date-and-time-functions.html#function_localtime) and [`LOCALTIME()`](date-and-time-functions.html#function_localtime)
    are synonyms for [`NOW()`](date-and-time-functions.html#function_now).'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`LOCALTIME`](date-and-time-functions.html#function_localtime) 和 [`LOCALTIME()`](date-and-time-functions.html#function_localtime)
    是 [`NOW()`](date-and-time-functions.html#function_now) 的同义词。'
- en: '[`LOCALTIMESTAMP`](date-and-time-functions.html#function_localtimestamp), [`LOCALTIMESTAMP([*`fsp`*])`](date-and-time-functions.html#function_localtimestamp)'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`LOCALTIMESTAMP`](date-and-time-functions.html#function_localtimestamp), [`LOCALTIMESTAMP([*`fsp`*])`](date-and-time-functions.html#function_localtimestamp)'
- en: '[`LOCALTIMESTAMP`](date-and-time-functions.html#function_localtimestamp) and
    [`LOCALTIMESTAMP()`](date-and-time-functions.html#function_localtimestamp) are
    synonyms for [`NOW()`](date-and-time-functions.html#function_now).'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`LOCALTIMESTAMP`](date-and-time-functions.html#function_localtimestamp) 和
    [`LOCALTIMESTAMP()`](date-and-time-functions.html#function_localtimestamp) 是 [`NOW()`](date-and-time-functions.html#function_now)
    的同义词。'
- en: '[`MAKEDATE(*`year`*,*`dayofyear`*)`](date-and-time-functions.html#function_makedate)'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MAKEDATE(*`year`*,*`dayofyear`*)`](date-and-time-functions.html#function_makedate)'
- en: Returns a date, given year and day-of-year values. *`dayofyear`* must be greater
    than 0 or the result is `NULL`. The result is also `NULL` if either argument is
    `NULL`.
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回一个日期，给定年份和一年中的天数。*`dayofyear`* 必须大于0，否则结果为`NULL`。如果任一参数为`NULL`，结果也为`NULL`。
- en: '[PRE24]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[`MAKETIME(*`hour`*,*`minute`*,*`second`*)`](date-and-time-functions.html#function_maketime)'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MAKETIME(*`hour`*,*`minute`*,*`second`*)`](date-and-time-functions.html#function_maketime)'
- en: Returns a time value calculated from the *`hour`*, *`minute`*, and *`second`*
    arguments. Returns `NULL` if any of its arguments are `NULL`.
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回从*`hour`*、*`minute`*和*`second`*参数计算的时间值。如果任一参数为`NULL`，则返回`NULL`。
- en: The *`second`* argument can have a fractional part.
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`second`* 参数可以有小数部分。'
- en: '[PRE25]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[`MICROSECOND(*`expr`*)`](date-and-time-functions.html#function_microsecond)'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MICROSECOND(*`expr`*)`](date-and-time-functions.html#function_microsecond)'
- en: Returns the microseconds from the time or datetime expression *`expr`* as a
    number in the range from `0` to `999999`. Returns `NULL` if *`expr`* is `NULL`.
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回从时间或日期时间表达式*`expr`*中计算的微秒，范围从`0`到`999999`的数字。如果*`expr`*为`NULL`，则返回`NULL`。
- en: '[PRE26]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[`MINUTE(*`time`*)`](date-and-time-functions.html#function_minute)'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MINUTE(*`time`*)`](date-and-time-functions.html#function_minute)'
- en: Returns the minute for *`time`*, in the range `0` to `59`, or `NULL` if *`time`*
    is `NULL`.
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`time`*的分钟，范围为`0`到`59`，如果*`time`*为`NULL`，则返回`NULL`。
- en: '[PRE27]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[`MONTH(*`date`*)`](date-and-time-functions.html#function_month)'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MONTH(*`date`*)`](date-and-time-functions.html#function_month)'
- en: Returns the month for *`date`*, in the range `1` to `12` for January to December,
    or `0` for dates such as `'0000-00-00'` or `'2008-00-00'` that have a zero month
    part. Returns `NULL` if *`date`* is `NULL`.
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`date`*的月份，对于一月到十二月的范围为`1`到`12`，对于具有零月部分的日期（如`'0000-00-00'`或`'2008-00-00'`）为`0`。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE28]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[`MONTHNAME(*`date`*)`](date-and-time-functions.html#function_monthname)'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MONTHNAME(*`date`*)`](date-and-time-functions.html#function_monthname)'
- en: Returns the full name of the month for *`date`*. The language used for the name
    is controlled by the value of the [`lc_time_names`](server-system-variables.html#sysvar_lc_time_names)
    system variable ([Section 12.16, “MySQL Server Locale Support”](locale-support.html
    "12.16 MySQL Server Locale Support")). Returns `NULL` if *`date`* is `NULL`.
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`date`*的月份的全名。名称的语言由[`lc_time_names`](server-system-variables.html#sysvar_lc_time_names)系统变量的值控制（[第12.16节，“MySQL服务器区域设置支持”](locale-support.html
    "12.16 MySQL Server Locale Support")）。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE29]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[`NOW([*`fsp`*])`](date-and-time-functions.html#function_now)'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`NOW([*`fsp`*])`](date-and-time-functions.html#function_now)'
- en: Returns the current date and time as a value in `'*`YYYY-MM-DD hh:mm:ss`*'`
    or *`YYYYMMDDhhmmss`* format, depending on whether the function is used in string
    or numeric context. The value is expressed in the session time zone.
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回当前日期和时间作为一个值，格式为`'*`YYYY-MM-DD hh:mm:ss`*'`或*`YYYYMMDDhhmmss`*，取决于函数在字符串或数字上下文中的使用。该值以会话时区表示。
- en: If the *`fsp`* argument is given to specify a fractional seconds precision from
    0 to 6, the return value includes a fractional seconds part of that many digits.
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果给定*`fsp`*参数以指定从0到6的小数秒精度，则返回值包括相应数量的小数秒部分。
- en: '[PRE30]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[`NOW()`](date-and-time-functions.html#function_now) returns a constant time
    that indicates the time at which the statement began to execute. (Within a stored
    function or trigger, [`NOW()`](date-and-time-functions.html#function_now) returns
    the time at which the function or triggering statement began to execute.) This
    differs from the behavior for [`SYSDATE()`](date-and-time-functions.html#function_sysdate),
    which returns the exact time at which it executes.'
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`NOW()`](date-and-time-functions.html#function_now)返回一个常量时间，表示语句开始执行的时间。（在存储函数或触发器中，[`NOW()`](date-and-time-functions.html#function_now)返回函数或触发语句开始执行的时间。）这与[`SYSDATE()`](date-and-time-functions.html#function_sysdate)的行为不同，后者返回执行时的确切时间。'
- en: '[PRE31]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In addition, the `SET TIMESTAMP` statement affects the value returned by [`NOW()`](date-and-time-functions.html#function_now)
    but not by [`SYSDATE()`](date-and-time-functions.html#function_sysdate). This
    means that timestamp settings in the binary log have no effect on invocations
    of [`SYSDATE()`](date-and-time-functions.html#function_sysdate). Setting the timestamp
    to a nonzero value causes each subsequent invocation of [`NOW()`](date-and-time-functions.html#function_now)
    to return that value. Setting the timestamp to zero cancels this effect so that
    [`NOW()`](date-and-time-functions.html#function_now) once again returns the current
    date and time.
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，`SET TIMESTAMP`语句会影响由[`NOW()`](date-and-time-functions.html#function_now)返回的值，但不会影响[`SYSDATE()`](date-and-time-functions.html#function_sysdate)的返回值。这意味着二进制日志中的时间戳设置不会影响对[`SYSDATE()`](date-and-time-functions.html#function_sysdate)的调用。将时间戳设置为非零值会导致每次后续调用[`NOW()`](date-and-time-functions.html#function_now)都返回该值。将时间戳设置为零会取消此效果，使得[`NOW()`](date-and-time-functions.html#function_now)再次返回当前日期和时间。
- en: See the description for [`SYSDATE()`](date-and-time-functions.html#function_sysdate)
    for additional information about the differences between the two functions.
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关这两个函数之间的差异的更多信息，请参阅[`SYSDATE()`](date-and-time-functions.html#function_sysdate)的描述。
- en: '[`PERIOD_ADD(*`P`*,*`N`*)`](date-and-time-functions.html#function_period-add)'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`PERIOD_ADD(*`P`*,*`N`*)`](date-and-time-functions.html#function_period-add)'
- en: Adds *`N`* months to period *`P`* (in the format *`YYMM`* or *`YYYYMM`*). Returns
    a value in the format *`YYYYMM`*.
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将*`N`*个月添加到格式为*`YYMM`*或*`YYYYMM`*的期间*`P`*中。返回格式为*`YYYYMM`*的值。
- en: Note
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The period argument *`P`* is *not* a date value.
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 期间参数*`P`*不是日期值。
- en: This function returns `NULL` if *`P`* or *`N`* is `NULL`.
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`P`*或*`N`*为`NULL`，则此函数返回`NULL`。
- en: '[PRE32]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[`PERIOD_DIFF(*`P1`*,*`P2`*)`](date-and-time-functions.html#function_period-diff)'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`PERIOD_DIFF(*`P1`*,*`P2`*)`](date-and-time-functions.html#function_period-diff)'
- en: Returns the number of months between periods *`P1`* and *`P2`*. *`P1`* and *`P2`*
    should be in the format *`YYMM`* or *`YYYYMM`*. Note that the period arguments
    *`P1`* and *`P2`* are *not* date values.
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回期间*`P1`*和*`P2`*之间的月份数。*`P1`*和*`P2`*应该是格式为*`YYMM`*或*`YYYYMM`*的值。请注意，期间参数*`P1`*和*`P2`*不是日期值。
- en: This function returns `NULL` if *`P1`* or *`P2`* is `NULL`.
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`P1`*或*`P2`*为`NULL`，则此函数返回`NULL`。
- en: '[PRE33]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[`QUARTER(*`date`*)`](date-and-time-functions.html#function_quarter)'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`QUARTER(*`date`*)`](date-and-time-functions.html#function_quarter)'
- en: Returns the quarter of the year for *`date`*, in the range `1` to `4`, or `NULL`
    if *`date`* is `NULL`.
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`date`*的年份季度，范围为`1`到`4`，如果*`date`*为`NULL`则返回`NULL`。
- en: '[PRE34]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[`SECOND(*`time`*)`](date-and-time-functions.html#function_second)'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SECOND(*`time`*)`](date-and-time-functions.html#function_second)'
- en: Returns the second for *`time`*, in the range `0` to `59`, or `NULL` if *`time`*
    is `NULL`.
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`time`*的秒数，范围为`0`到`59`，如果*`time`*为`NULL`则返回`NULL`。
- en: '[PRE35]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[`SEC_TO_TIME(*`seconds`*)`](date-and-time-functions.html#function_sec-to-time)'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SEC_TO_TIME(*`seconds`*)`](date-and-time-functions.html#function_sec-to-time)'
- en: Returns the *`seconds`* argument, converted to hours, minutes, and seconds,
    as a [`TIME`](time.html "13.2.3 The TIME Type") value. The range of the result
    is constrained to that of the [`TIME`](time.html "13.2.3 The TIME Type") data
    type. A warning occurs if the argument corresponds to a value outside that range.
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`seconds`*参数转换为小时、分钟和秒的[`TIME`](time.html "13.2.3 时间类型")值。结果的范围受限于[`TIME`](time.html
    "13.2.3 时间类型")数据类型的范围。如果参数对应的值超出该范围，则会发出警告。
- en: The function returns `NULL` if *`seconds`* is `NULL`.
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`seconds`*为`NULL`，则函数返回`NULL`。
- en: '[PRE36]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[`STR_TO_DATE(*`str`*,*`format`*)`](date-and-time-functions.html#function_str-to-date)'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`STR_TO_DATE(*`str`*,*`format`*)`](date-and-time-functions.html#function_str-to-date)'
- en: This is the inverse of the [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)
    function. It takes a string *`str`* and a format string *`format`*. `STR_TO_DATE()`
    returns a [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types") value if the format string contains both date and time parts, or a [`DATE`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") or [`TIME`](time.html "13.2.3 The
    TIME Type") value if the string contains only date or time parts. If *`str`* or
    *`format`* is `NULL`, the function returns `NULL`. If the date, time, or datetime
    value extracted from *`str`* cannot be parsed according to the rules followed
    by the server, `STR_TO_DATE()` returns `NULL` and produces a warning.
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format) 函数的反向操作。它接受一个字符串*`str`*和一个格式字符串*`format`*。如果格式字符串同时包含日期和时间部分，则`STR_TO_DATE()`返回一个[`DATETIME`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") 值，如果字符串仅包含日期或时间部分，则返回一个[`DATE`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") 或[`TIME`](time.html "13.2.3 The
    TIME Type") 值。如果*`str`*或*`format`*为`NULL`，则函数返回`NULL`。如果从*`str`*中提取的日期、时间或日期时间值无法按照服务器遵循的规则解析，则`STR_TO_DATE()`
    返回`NULL`并生成警告。
- en: The server scans *`str`* attempting to match *`format`* to it. The format string
    can contain literal characters and format specifiers beginning with `%`. Literal
    characters in *`format`* must match literally in *`str`*. Format specifiers in
    *`format`* must match a date or time part in *`str`*. For the specifiers that
    can be used in *`format`*, see the [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)
    function description.
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器扫描*`str`*，尝试将*`format`*与其匹配。格式字符串可以包含文字字符和以`%`开头的格式说明符。*`format`*中的文字字符必须与*`str`*中的文字字符完全匹配。*`format`*中的格式说明符必须与*`str`*中的日期或时间部分匹配。有关可用于*`format`*中的说明符，请参见[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)
    函数说明。
- en: '[PRE37]'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Scanning starts at the beginning of *`str`* and fails if *`format`* is found
    not to match. Extra characters at the end of *`str`* are ignored.
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 扫描从*`str`*的开头开始，如果发现*`format`*不匹配，则失败。*`str`*末尾的额外字符将被忽略。
- en: '[PRE38]'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Unspecified date or time parts have a value of 0, so incompletely specified
    values in *`str`* produce a result with some or all parts set to 0:'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 未指定的日期或时间部分的值为 0，因此在*`str`*中未完全指定的值将产生一个结果，其中一些或所有部分设置为 0：
- en: '[PRE39]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Range checking on the parts of date values is as described in [Section 13.2.2,
    “The DATE, DATETIME, and TIMESTAMP Types”](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types"). This means, for example, that “zero” dates or dates with
    part values of 0 are permitted unless the SQL mode is set to disallow such values.
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 日期值的部分的范围检查如[第 13.2.2 节，“日期、日期时间和时间戳类型”](datetime.html "13.2.2 The DATE, DATETIME,
    and TIMESTAMP Types")中所述。这意味着，例如，“零”日期或部分值为 0 的日期是允许的，除非 SQL 模式设置为不允许这些值。
- en: '[PRE40]'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'If the [`NO_ZERO_DATE`](sql-mode.html#sqlmode_no_zero_date) SQL mode is enabled,
    zero dates are disallowed. In that case, [`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date)
    returns `NULL` and generates a warning:'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果启用了[`NO_ZERO_DATE`](sql-mode.html#sqlmode_no_zero_date) SQL 模式，则不允许零日期。在这种情况下，[`STR_TO_DATE()`](date-and-time-functions.html#function_str-to-date)
    返回`NULL`并生成警告：
- en: '[PRE41]'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Prior to MySQL 8.0.35, it was possible to pass an invalid date string such as
    `'2021-11-31'` to this function. In MySQL 8.0.35 and later, `STR_TO_DATE()` performs
    complete range checking and raises an error if the date after conversion would
    be invalid.
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.35 之前，可以将无效的日期字符串（例如 `'2021-11-31'`）传递给此函数。在 MySQL 8.0.35 及更高版本中，`STR_TO_DATE()`
    执行完整的范围检查，并在转换后的日期无效时引发错误。
- en: Note
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'You cannot use format `"%X%V"` to convert a year-week string to a date because
    the combination of a year and week does not uniquely identify a year and month
    if the week crosses a month boundary. To convert a year-week to a date, you should
    also specify the weekday:'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你不能使用格式`"%X%V"`将年周字符串转换为日期，因为如果周跨越月边界，则年和周的组合不能唯一标识年和月。要将年周转换为日期，还应指定星期几：
- en: '[PRE42]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: You should also be aware that, for dates and the date portions of datetime values,
    `STR_TO_DATE()` checks (only) the individual year, month, and day of month values
    for validity. More precisely, this means that the year is checked to be sure that
    it is in the range 0-9999 inclusive, the month is checked to ensure that it is
    in the range 1-12 inclusive, and the day of month is checked to make sure that
    it is in the range 1-31 inclusive, but the server does not check the values in
    combination. For example, `SELECT STR_TO_DATE('23-2-31', '%Y-%m-%d')` returns
    `2023-02-31`. Enabling or disabling the [`ALLOW_INVALID_DATES`](sql-mode.html#sqlmode_allow_invalid_dates)
    server SQL mode has no effect on this behavior. See [Section 13.2.2, “The DATE,
    DATETIME, and TIMESTAMP Types”](datetime.html "13.2.2 The DATE, DATETIME, and
    TIMESTAMP Types"), for more information.
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您还应该注意，对于日期和日期时间值的日期部分，`STR_TO_DATE()`仅检查年、月和日的有效性。更准确地说，这意味着检查年份以确保它在0-9999的范围内，检查月份以确保它在1-12的范围内，检查日期以确保它在1-31的范围内，但服务器不会检查这些值的组合。例如，`SELECT
    STR_TO_DATE('23-2-31', '%Y-%m-%d')`返回`2023-02-31`。启用或禁用[`ALLOW_INVALID_DATES`](sql-mode.html#sqlmode_allow_invalid_dates)服务器SQL模式对此行为没有影响。有关更多信息，请参阅[第13.2.2节，“DATE、DATETIME和TIMESTAMP类型”](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")。
- en: '[`SUBDATE(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_subdate),
    [`SUBDATE(*`expr`*,*`days`*)`](date-and-time-functions.html#function_subdate)'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SUBDATE(*`date`*,INTERVAL *`expr`* *`unit`*)`](date-and-time-functions.html#function_subdate)，[`SUBDATE(*`expr`*,*`days`*)`](date-and-time-functions.html#function_subdate)'
- en: When invoked with the `INTERVAL` form of the second argument, [`SUBDATE()`](date-and-time-functions.html#function_subdate)
    is a synonym for [`DATE_SUB()`](date-and-time-functions.html#function_date-sub).
    For information on the `INTERVAL` *`unit`* argument, see the discussion for [`DATE_ADD()`](date-and-time-functions.html#function_date-add).
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用第二个参数的`INTERVAL`形式调用时，[`SUBDATE()`](date-and-time-functions.html#function_subdate)是[`DATE_SUB()`](date-and-time-functions.html#function_date-sub)的同义词。有关`INTERVAL`
    *`unit`*参数的信息，请参阅[`DATE_ADD()`](date-and-time-functions.html#function_date-add)的讨论。
- en: '[PRE43]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The second form enables the use of an integer value for *`days`*. In such cases,
    it is interpreted as the number of days to be subtracted from the date or datetime
    expression *`expr`*.
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第二种形式允许使用整数值作为*`days`*。在这种情况下，它被解释为要从日期或日期时间表达式*`expr`*中减去的天数。
- en: '[PRE44]'
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: This function returns `NULL` if any of its arguments are `NULL`.
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果任何参数为`NULL`，则此函数返回`NULL`。
- en: '[`SUBTIME(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_subtime)'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SUBTIME(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_subtime)'
- en: '[`SUBTIME()`](date-and-time-functions.html#function_subtime) returns *`expr1`*
    − *`expr2`* expressed as a value in the same format as *`expr1`*. *`expr1`* is
    a time or datetime expression, and *`expr2`* is a time expression.'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`SUBTIME()`](date-and-time-functions.html#function_subtime)返回*`expr1`* − *`expr2`*，以与*`expr1`*相同格式的值表示。*`expr1`*是时间或日期时间表达式，*`expr2`*是时间表达式。'
- en: Resolution of this function's return type is performed as it is for the [`ADDTIME()`](date-and-time-functions.html#function_addtime)
    function; see the description of that function for more information.
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数返回类型的分辨率与[`ADDTIME()`](date-and-time-functions.html#function_addtime)函数的执行方式相同；有关更多信息，请参阅该函数的描述。
- en: '[PRE45]'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This function returns `NULL` if *`expr1`* or *`expr2`* is `NULL`.
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`expr1`*或*`expr2`*为`NULL`，则此函数返回`NULL`。
- en: '[`SYSDATE([*`fsp`*])`](date-and-time-functions.html#function_sysdate)'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SYSDATE([*`fsp`*])`](date-and-time-functions.html#function_sysdate)'
- en: Returns the current date and time as a value in `'*`YYYY-MM-DD hh:mm:ss`*'`
    or *`YYYYMMDDhhmmss`* format, depending on whether the function is used in string
    or numeric context.
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回当前日期和时间作为值，格式为`'*`YYYY-MM-DD hh:mm:ss`*'`或*`YYYYMMDDhhmmss`*，具体取决于函数在字符串或数字上下文中的使用方式。
- en: If the *`fsp`* argument is given to specify a fractional seconds precision from
    0 to 6, the return value includes a fractional seconds part of that many digits.
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果给定*`fsp`*参数以指定从0到6的小数秒精度，则返回值包括该数量的小数秒部分。
- en: '[`SYSDATE()`](date-and-time-functions.html#function_sysdate) returns the time
    at which it executes. This differs from the behavior for [`NOW()`](date-and-time-functions.html#function_now),
    which returns a constant time that indicates the time at which the statement began
    to execute. (Within a stored function or trigger, [`NOW()`](date-and-time-functions.html#function_now)
    returns the time at which the function or triggering statement began to execute.)'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`SYSDATE()`](date-and-time-functions.html#function_sysdate)返回其执行时的时间。这与[`NOW()`](date-and-time-functions.html#function_now)的行为不同，后者返回指示语句开始执行的时间的常量时间。（在存储函数或触发器中，[`NOW()`](date-and-time-functions.html#function_now)返回函数或触发语句开始执行的时间。）'
- en: '[PRE46]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: In addition, the `SET TIMESTAMP` statement affects the value returned by [`NOW()`](date-and-time-functions.html#function_now)
    but not by [`SYSDATE()`](date-and-time-functions.html#function_sysdate). This
    means that timestamp settings in the binary log have no effect on invocations
    of [`SYSDATE()`](date-and-time-functions.html#function_sysdate).
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，`SET TIMESTAMP`语句会影响[`NOW()`](date-and-time-functions.html#function_now)返回的值，但不会影响[`SYSDATE()`](date-and-time-functions.html#function_sysdate)返回的值。这意味着二进制日志中的时间戳设置对[`SYSDATE()`](date-and-time-functions.html#function_sysdate)的调用没有影响。
- en: Because [`SYSDATE()`](date-and-time-functions.html#function_sysdate) can return
    different values even within the same statement, and is not affected by `SET TIMESTAMP`,
    it is nondeterministic and therefore unsafe for replication if statement-based
    binary logging is used. If that is a problem, you can use row-based logging.
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为[`SYSDATE()`](date-and-time-functions.html#function_sysdate)甚至在同一语句中可能返回不同的值，并且不受`SET
    TIMESTAMP`的影响，因此它是不确定的，因此在使用基于语句的二进制���志记录时不安全。如果这是一个问题，您可以使用基于行的日志记录。
- en: Alternatively, you can use the [`--sysdate-is-now`](server-options.html#option_mysqld_sysdate-is-now)
    option to cause [`SYSDATE()`](date-and-time-functions.html#function_sysdate) to
    be an alias for [`NOW()`](date-and-time-functions.html#function_now). This works
    if the option is used on both the replication source server and the replica.
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，您可以使用[`--sysdate-is-now`](server-options.html#option_mysqld_sysdate-is-now)选项，使[`SYSDATE()`](date-and-time-functions.html#function_sysdate)成为[`NOW()`](date-and-time-functions.html#function_now)的别名。如果在复制源服务器和副本上都使用该选项，则有效。
- en: The nondeterministic nature of [`SYSDATE()`](date-and-time-functions.html#function_sysdate)
    also means that indexes cannot be used for evaluating expressions that refer to
    it.
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`SYSDATE()`](date-and-time-functions.html#function_sysdate)的不确定性特性也意味着无法使用索引来评估引用它的表达式。'
- en: '[`TIME(*`expr`*)`](date-and-time-functions.html#function_time)'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TIME(*`expr`*)`](date-and-time-functions.html#function_time)'
- en: Extracts the time part of the time or datetime expression *`expr`* and returns
    it as a string. Returns `NULL` if *`expr`* is `NULL`.
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提取时间或日期时间表达式*`expr`*的时间部分，并将其作为字符串返回。如果*`expr`*为`NULL`，则返回`NULL`。
- en: This function is unsafe for statement-based replication. A warning is logged
    if you use this function when [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    is set to `STATEMENT`.
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数对基于语句的复制不安全。如果在[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)设置为`STATEMENT`时使用此函数，将记录警告。
- en: '[PRE47]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[`TIMEDIFF(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_timediff)'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TIMEDIFF(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_timediff)'
- en: '[`TIMEDIFF()`](date-and-time-functions.html#function_timediff) returns *`expr1`*
    − *`expr2`* expressed as a time value. *`expr1`* and *`expr2`* are strings which
    are converted to `TIME` or `DATETIME` expressions; these must be of the same type
    following conversion. Returns `NULL` if *`expr1`* or *`expr2`* is `NULL`.'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`TIMEDIFF()`](date-and-time-functions.html#function_timediff)将*`expr1`* −
    *`expr2`*表示为时间值。*`expr1`*和*`expr2`*是转换为`TIME`或`DATETIME`表达式的字符串；在转换后，它们必须是相同类型的。如果*`expr1`*或*`expr2`*为`NULL`，则返回`NULL`。'
- en: The result returned by `TIMEDIFF()` is limited to the range allowed for [`TIME`](time.html
    "13.2.3 The TIME Type") values. Alternatively, you can use either of the functions
    [`TIMESTAMPDIFF()`](date-and-time-functions.html#function_timestampdiff) and [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp),
    both of which return integers.
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`TIMEDIFF()`返回的结果受限于允许的[`TIME`](time.html "13.2.3 The TIME Type")值的范围。或者，您可以使用[`TIMESTAMPDIFF()`](date-and-time-functions.html#function_timestampdiff)和[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)中的任一函数，两者都返回整数。'
- en: '[PRE48]'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[`TIMESTAMP(*`expr`*)`](date-and-time-functions.html#function_timestamp), [`TIMESTAMP(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_timestamp)'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TIMESTAMP(*`expr`*)`](date-and-time-functions.html#function_timestamp), [`TIMESTAMP(*`expr1`*,*`expr2`*)`](date-and-time-functions.html#function_timestamp)'
- en: With a single argument, this function returns the date or datetime expression
    *`expr`* as a datetime value. With two arguments, it adds the time expression
    *`expr2`* to the date or datetime expression *`expr1`* and returns the result
    as a datetime value. Returns `NULL` if *`expr`*, *`expr1`*, or *`expr2`* is `NULL`.
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用单个参数时，该函数将日期或日期时间表达式*`expr`*作为日期时间值返回。使用两个参数时，它将时间表达式*`expr2`*添加到日期或日期时间表达式*`expr1`*中，并将结果作为日期时间值返回。如果*`expr`*、*`expr1`*或*`expr2`*为`NULL`，则返回`NULL`。
- en: '[PRE49]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[`TIMESTAMPADD(*`unit`*,*`interval`*,*`datetime_expr`*)`](date-and-time-functions.html#function_timestampadd)'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TIMESTAMPADD(*`unit`*,*`interval`*,*`datetime_expr`*)`](date-and-time-functions.html#function_timestampadd)'
- en: 'Adds the integer expression *`interval`* to the date or datetime expression
    *`datetime_expr`*. The unit for *`interval`* is given by the *`unit`* argument,
    which should be one of the following values: `MICROSECOND` (microseconds), `SECOND`,
    `MINUTE`, `HOUR`, `DAY`, `WEEK`, `MONTH`, `QUARTER`, or `YEAR`.'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将整数表达式*`interval`*添加到日期或日期时间表达式*`datetime_expr`*中。*`interval`*的单位由*`unit`*参数给出，应为以下值之一：`MICROSECOND`（微秒）、`SECOND`、`MINUTE`、`HOUR`、`DAY`、`WEEK`、`MONTH`、`QUARTER`或`YEAR`。
- en: The *`unit`* value may be specified using one of keywords as shown, or with
    a prefix of `SQL_TSI_`. For example, `DAY` and `SQL_TSI_DAY` both are legal.
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`unit`*值可以使用如下所示的关键字之一指定，也可以使用`SQL_TSI_`前缀。例如，`DAY`和`SQL_TSI_DAY`都是合法的。'
- en: This function returns `NULL` if *`interval`* or *`datetime_expr`* is `NULL`.
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`interval`*或*`datetime_expr`*为`NULL`，则此函数返回`NULL`。
- en: '[PRE50]'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'When adding a `MONTH` interval to a `DATE` or `DATETIME` value, and the resulting
    date includes a day that does not exist in the given month, the day is adjusted
    to the last day of the month, as shown here:'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当向`DATE`或`DATETIME`值添加`MONTH`间隔时，如果结果日期包含给定月份中不存在的日期，则将日期调整为该月的最后一天，如下所示：
- en: '[PRE51]'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[`TIMESTAMPDIFF(*`unit`*,*`datetime_expr1`*,*`datetime_expr2`*)`](date-and-time-functions.html#function_timestampdiff)'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TIMESTAMPDIFF(*`unit`*,*`datetime_expr1`*,*`datetime_expr2`*)`](date-and-time-functions.html#function_timestampdiff)'
- en: Returns *`datetime_expr2`* − *`datetime_expr1`*, where *`datetime_expr1`* and
    *`datetime_expr2`* are date or datetime expressions. One expression may be a date
    and the other a datetime; a date value is treated as a datetime having the time
    part `'00:00:00'` where necessary. The unit for the result (an integer) is given
    by the *`unit`* argument. The legal values for *`unit`* are the same as those
    listed in the description of the [`TIMESTAMPADD()`](date-and-time-functions.html#function_timestampadd)
    function.
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`datetime_expr2`* − *`datetime_expr1`*，其中*`datetime_expr1`*和*`datetime_expr2`*是日期或日期时间表达式。一个表达式可以是日期，另一个可以是日期时间；日期值在必要时被视为具有时间部分`'00:00:00'`的日期时间。结果（整数）的单位由*`unit`*参数给出。*`unit`*的合法值与[`TIMESTAMPADD()`](date-and-time-functions.html#function_timestampadd)函数的描述中列出的相同。
- en: This function returns `NULL` if *`datetime_expr1`* or *`datetime_expr2`* is
    `NULL`.
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`datetime_expr1`*或*`datetime_expr2`*为`NULL`，则此函数返回`NULL`。
- en: '[PRE52]'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Note
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The order of the date or datetime arguments for this function is the opposite
    of that used with the [`TIMESTAMP()`](date-and-time-functions.html#function_timestamp)
    function when invoked with 2 arguments.
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该函数的日期或日期时间参数的顺序与使用2个参数调用[`TIMESTAMP()`](date-and-time-functions.html#function_timestamp)函数时相反。
- en: '[`TIME_FORMAT(*`time`*,*`format`*)`](date-and-time-functions.html#function_time-format)'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TIME_FORMAT(*`time`*,*`format`*)`](date-and-time-functions.html#function_time-format)'
- en: This is used like the [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)
    function, but the *`format`* string may contain format specifiers only for hours,
    minutes, seconds, and microseconds. Other specifiers produce a `NULL` or `0`.
    `TIME_FORMAT()` returns `NULL` if *`time`* or *`format`* is `NULL`.
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这类似于[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)函数，但*`format`*字符串可能仅包含有关小时、分钟、秒和微秒的格式说明符。其他说明符会产生`NULL`或`0`。如果*`time`*或*`format`*为`NULL`，则`TIME_FORMAT()`返回`NULL`。
- en: If the *`time`* value contains an hour part that is greater than `23`, the `%H`
    and `%k` hour format specifiers produce a value larger than the usual range of
    `0..23`. The other hour format specifiers produce the hour value modulo 12.
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果*`time`*值包含大于`23`的小时部分，则`%H`和`%k`小时格式说明符会产生大于通常范围的`0..23`的值。其他小时格式说明符会将小时值对`12`取模。
- en: '[PRE53]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[`TIME_TO_SEC(*`time`*)`](date-and-time-functions.html#function_time-to-sec)'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TIME_TO_SEC(*`time`*)`](date-and-time-functions.html#function_time-to-sec)'
- en: Returns the *`time`* argument, converted to seconds. Returns `NULL` if *`time`*
    is `NULL`.
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回将*`time`*参数转换为秒的结果。如果*`time`*为`NULL`，则返回`NULL`。
- en: '[PRE54]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[`TO_DAYS(*`date`*)`](date-and-time-functions.html#function_to-days)'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TO_DAYS(*`date`*)`](date-and-time-functions.html#function_to-days)'
- en: Given a date *`date`*, returns a day number (the number of days since year 0).
    Returns `NULL` if *`date`* is `NULL`.
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给定一个日期*`date`*，返回一个日期编号（自公元0年以来的天数）。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE55]'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[`TO_DAYS()`](date-and-time-functions.html#function_to-days) is not intended
    for use with values that precede the advent of the Gregorian calendar (1582),
    because it does not take into account the days that were lost when the calendar
    was changed. For dates before 1582 (and possibly a later year in other locales),
    results from this function are not reliable. See [Section 13.2.7, “What Calendar
    Is Used By MySQL?”](mysql-calendar.html "13.2.7 What Calendar Is Used By MySQL?"),
    for details.'
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`TO_DAYS()`](date-and-time-functions.html#function_to-days)不适用于格里高利历（1582年）出现之前的值，因为它没有考虑到在日历更改时丢失的天数。对于1582年之前的日期（可能是其他地区的较晚年份），此函数的结果不可靠。有关详细信息，请参阅[第13.2.7节，“MySQL使用的日历是什么？”](mysql-calendar.html
    "13.2.7 MySQL使用的日历是什么？")。'
- en: 'Remember that MySQL converts two-digit year values in dates to four-digit form
    using the rules in [Section 13.2, “Date and Time Data Types”](date-and-time-types.html
    "13.2 Date and Time Data Types"). For example, `''2008-10-07''` and `''08-10-07''`
    are seen as identical dates:'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请记住，MySQL将日期中的两位年份值转换为四位形式，使用的规则在[第13.2节，“日期和时间数据类型”](date-and-time-types.html
    "13.2 日期和时间数据类型")中。例如，`'2008-10-07'`和`'08-10-07'`被视为相同的日期：
- en: '[PRE56]'
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'In MySQL, the zero date is defined as `''0000-00-00''`, even though this date
    is itself considered invalid. This means that, for `''0000-00-00''` and `''0000-01-01''`,
    [`TO_DAYS()`](date-and-time-functions.html#function_to-days) returns the values
    shown here:'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL中，零日期被定义为`'0000-00-00'`，即使这个日期本身被认为是无效的。这意味着，对于`'0000-00-00'`和`'0000-01-01'`，[`TO_DAYS()`](date-and-time-functions.html#function_to-days)返回以下值：
- en: '[PRE57]'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: This is true whether or not the [`ALLOW_INVALID_DATES`](sql-mode.html#sqlmode_allow_invalid_dates)
    SQL server mode is enabled.
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论是否启用[`ALLOW_INVALID_DATES`](sql-mode.html#sqlmode_allow_invalid_dates) SQL服务器模式，这都是正确的。
- en: '[`TO_SECONDS(*`expr`*)`](date-and-time-functions.html#function_to-seconds)'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`TO_SECONDS(*`expr`*)`](date-and-time-functions.html#function_to-seconds)'
- en: Given a date or datetime *`expr`*, returns the number of seconds since the year
    0\. If *`expr`* is not a valid date or datetime value (including `NULL`), it returns
    `NULL`.
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给定一个日期或日期时间*`expr`*，返回自公元0年以来的秒数。如果*`expr`*不是有效的日期或日期时间值（包括`NULL`），则返回`NULL`。
- en: '[PRE58]'
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Like [`TO_DAYS()`](date-and-time-functions.html#function_to-days), `TO_SECONDS()`
    is not intended for use with values that precede the advent of the Gregorian calendar
    (1582), because it does not take into account the days that were lost when the
    calendar was changed. For dates before 1582 (and possibly a later year in other
    locales), results from this function are not reliable. See [Section 13.2.7, “What
    Calendar Is Used By MySQL?”](mysql-calendar.html "13.2.7 What Calendar Is Used
    By MySQL?"), for details.
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 像[`TO_DAYS()`](date-and-time-functions.html#function_to-days)一样，`TO_SECONDS()`不适用于格里高利历（1582年）出现之前的值，因为它没有考虑到在日历更改时丢失的天数。对于1582年之前的日期（可能是其他地区的较晚年份），此函数的结果不可靠。有关详细信息，请参阅[第13.2.7节，“MySQL使用的日历是什么？”](mysql-calendar.html
    "13.2.7 MySQL使用的日历是什么？")。
- en: Like [`TO_DAYS()`](date-and-time-functions.html#function_to-days), `TO_SECONDS()`,
    converts two-digit year values in dates to four-digit form using the rules in
    [Section 13.2, “Date and Time Data Types”](date-and-time-types.html "13.2 Date
    and Time Data Types").
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 像[`TO_DAYS()`](date-and-time-functions.html#function_to-days)一样，`TO_SECONDS()`，将日期中的两位年份值转换为四位形式，使用的规则在[第13.2节，“日期和时间数据类型”](date-and-time-types.html
    "13.2 日期和时间数据类型")中。
- en: 'In MySQL, the zero date is defined as `''0000-00-00''`, even though this date
    is itself considered invalid. This means that, for `''0000-00-00''` and `''0000-01-01''`,
    [`TO_SECONDS()`](date-and-time-functions.html#function_to-seconds) returns the
    values shown here:'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL中，零日期被定义为`'0000-00-00'`，即使这个日期本身被认为是无效的。这意味着，对于`'0000-00-00'`和`'0000-01-01'`，[`TO_SECONDS()`](date-and-time-functions.html#function_to-seconds)返回以下值：
- en: '[PRE59]'
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: This is true whether or not the [`ALLOW_INVALID_DATES`](sql-mode.html#sqlmode_allow_invalid_dates)
    SQL server mode is enabled.
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论是否启用[`ALLOW_INVALID_DATES`](sql-mode.html#sqlmode_allow_invalid_dates) SQL服务器模式，这都是正确的。
- en: '[`UNIX_TIMESTAMP([*`date`*])`](date-and-time-functions.html#function_unix-timestamp)'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`UNIX_TIMESTAMP([*`date`*])`](date-and-time-functions.html#function_unix-timestamp)'
- en: If [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    is called with no *`date`* argument, it returns a Unix timestamp representing
    seconds since `'1970-01-01 00:00:00'` UTC.
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果调用[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)时没有*`date`*参数，它将返回一个表示自`'1970-01-01
    00:00:00'` UTC以来的秒数的Unix时间戳。
- en: If [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    is called with a *`date`* argument, it returns the value of the argument as seconds
    since `'1970-01-01 00:00:00'` UTC. The server interprets *`date`* as a value in
    the session time zone and converts it to an internal Unix timestamp value in UTC.
    (Clients can set the session time zone as described in [Section 7.1.15, “MySQL
    Server Time Zone Support”](time-zone-support.html "7.1.15 MySQL Server Time Zone
    Support").) The *`date`* argument may be a [`DATE`](datetime.html "13.2.2 The
    DATE, DATETIME, and TIMESTAMP Types"), [`DATETIME`](datetime.html "13.2.2 The
    DATE, DATETIME, and TIMESTAMP Types"), or [`TIMESTAMP`](datetime.html "13.2.2 The
    DATE, DATETIME, and TIMESTAMP Types") string, or a number in *`YYMMDD`*, *`YYMMDDhhmmss`*,
    *`YYYYMMDD`*, or *`YYYYMMDDhhmmss`* format. If the argument includes a time part,
    it may optionally include a fractional seconds part.
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果使用*`date`*参数调用[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)，它将返回自`'1970-01-01
    00:00:00'` UTC以来的秒数值。服务器将*`date`*解释为会话时区中的值，并将其转换为UTC中的内部Unix时间戳值。（客户端可以根据[第7.1.15节“MySQL服务器时区支持”](time-zone-support.html
    "7.1.15 MySQL服务器时区支持")中的描述设置会话时区。）*`date`*参数可以是[`DATE`](datetime.html "13.2.2 DATE、DATETIME和TIMESTAMP类型")、[`DATETIME`](datetime.html
    "13.2.2 DATE、DATETIME和TIMESTAMP类型")或[`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME和TIMESTAMP类型")字符串，或以*`YYMMDD`*、*`YYMMDDhhmmss`*、*`YYYYMMDD`*或*`YYYYMMDDhhmmss`*格式的数字。如果参数包括时间部分，则可以选择包括小数秒部分。
- en: The return value is an integer if no argument is given or the argument does
    not include a fractional seconds part, or [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC") if an argument is given that includes
    a fractional seconds part.
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果没有给定参数或参数不包括小数秒部分，则返回值为整数，或者给定包括小数秒部分的参数，则返回[`DECIMAL`](fixed-point-types.html
    "13.1.3 固定点类型（精确值） - DECIMAL, NUMERIC")。
- en: When the *`date`* argument is a [`TIMESTAMP`](datetime.html "13.2.2 The DATE,
    DATETIME, and TIMESTAMP Types") column, [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    returns the internal timestamp value directly, with no implicit “string-to-Unix-timestamp”
    conversion.
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当*`date`*参数是[`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME和TIMESTAMP类型")列时，[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)直接返回内部时间戳值，没有隐式的“字符串到Unix时间戳”的转换。
- en: 'Prior to MySQL 8.0.28, the valid range of argument values is the same as for
    the [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    data type: `''1970-01-01 00:00:01.000000''` UTC to `''2038-01-19 03:14:07.999999''`
    UTC. This is also the case in MySQL 8.0.28 and later for 32-bit platforms. For
    MySQL 8.0.28 and later running on 64-bit platforms, the valid range of argument
    values for `UNIX_TIMESTAMP()` is `''1970-01-01 00:00:01.000000''` UTC to `''3001-01-19
    03:14:07.999999''` UTC (corresponding to 32536771199.999999 seconds).'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.28之前，参数值的有效范围与[`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME和TIMESTAMP类型")数据类型相同：`'1970-01-01
    00:00:01.000000'` UTC到`'2038-01-19 03:14:07.999999'` UTC。对于运行在64位平台上的MySQL 8.0.28及更高版本，`UNIX_TIMESTAMP()`的参数值的有效范围为`'1970-01-01
    00:00:01.000000'` UTC到`'3001-01-19 03:14:07.999999'` UTC（对应32536771199.999999秒）。
- en: Regardless of MySQL version or platform architecture, if you pass an out-of-range
    date to [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp),
    it returns `0`. If *`date`* is `NULL`, it returns `NULL`.
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无论MySQL版本或平台架构如何，如果将超出范围的日期传递给[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)，它将返回`0`。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE60]'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'If you use [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    and [`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime) to
    convert between values in a non-UTC time zone and Unix timestamp values, the conversion
    is lossy because the mapping is not one-to-one in both directions. For example,
    due to conventions for local time zone changes such as Daylight Saving Time (DST),
    it is possible for [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    to map two values that are distinct in a non-UTC time zone to the same Unix timestamp
    value. [`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)
    maps that value back to only one of the original values. Here is an example, using
    values that are distinct in the `MET` time zone:'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果使用[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)和[`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)在非协调世界时时区和Unix时间戳值之间进行转换，转换是有损的，因为映射在两个方向上不是一对一的。例如，由于夏令时等本地时区更改的惯例，可能导致[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)将两个在非协调世界时时区中不同的值映射到相同的Unix时间戳值。[`FROM_UNIXTIME()`](date-and-time-functions.html#function_from-unixtime)将该值映射回原始值中的一个。以下是一个示例，使用在`MET`时区中不同的值：
- en: '[PRE61]'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Note
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: To use named time zones such as `'MET'` or `'Europe/Amsterdam'`, the time zone
    tables must be properly set up. For instructions, see [Section 7.1.15, “MySQL
    Server Time Zone Support”](time-zone-support.html "7.1.15 MySQL Server Time Zone
    Support").
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使用诸如`'MET'`或`'Europe/Amsterdam'`之类的命名时区，必须正确设置时区表。有关说明，请参见[第7.1.15节，“MySQL服务器时区支持”](time-zone-support.html
    "7.1.15 MySQL服务器时区支持")。
- en: If you want to subtract [`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)
    columns, you might want to cast them to signed integers. See [Section 14.10, “Cast
    Functions and Operators”](cast-functions.html "14.10 Cast Functions and Operators").
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果要减去[`UNIX_TIMESTAMP()`](date-and-time-functions.html#function_unix-timestamp)列，可能需要将它们转换为有符号整数。参见[第14.10节，“转换函数和运算符”](cast-functions.html
    "14.10 转换函数和运算符")。
- en: '[`UTC_DATE`](date-and-time-functions.html#function_utc-date), [`UTC_DATE()`](date-and-time-functions.html#function_utc-date)'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`UTC_DATE`](date-and-time-functions.html#function_utc-date)，[`UTC_DATE()`](date-and-time-functions.html#function_utc-date)'
- en: Returns the current UTC date as a value in `'*`YYYY-MM-DD`*'` or *`YYYYMMDD`*
    format, depending on whether the function is used in string or numeric context.
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回当前的协调世界时日期作为一个值，格式为`'*`YYYY-MM-DD`*'`或*`YYYYMMDD`*，取决于函数在字符串或数字上下文中的使用方式。
- en: '[PRE62]'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[`UTC_TIME`](date-and-time-functions.html#function_utc-time), [`UTC_TIME([*`fsp`*])`](date-and-time-functions.html#function_utc-time)'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`UTC_TIME`](date-and-time-functions.html#function_utc-time)，[`UTC_TIME([*`fsp`*])`](date-and-time-functions.html#function_utc-time)'
- en: Returns the current UTC time as a value in *`'hh:mm:ss'`* or *`hhmmss`* format,
    depending on whether the function is used in string or numeric context.
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回当前的协调世界时时间作为一个值，格式为*`'hh:mm:ss'`*或*`hhmmss`*，取决于函数在字符串或数字上下文中的使用方式。
- en: If the *`fsp`* argument is given to specify a fractional seconds precision from
    0 to 6, the return value includes a fractional seconds part of that many digits.
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果给定*`fsp`*参数以指定从0到6的小数秒精度，则返回值包括相应数量的小数秒部分。
- en: '[PRE63]'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[`UTC_TIMESTAMP`](date-and-time-functions.html#function_utc-timestamp), [`UTC_TIMESTAMP([*`fsp`*])`](date-and-time-functions.html#function_utc-timestamp)'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`UTC_TIMESTAMP`](date-and-time-functions.html#function_utc-timestamp)，[`UTC_TIMESTAMP([*`fsp`*])`](date-and-time-functions.html#function_utc-timestamp)'
- en: Returns the current UTC date and time as a value in `'*`YYYY-MM-DD hh:mm:ss`*'`
    or *`YYYYMMDDhhmmss`* format, depending on whether the function is used in string
    or numeric context.
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回当前的协调世界时日期和时间作为一个值，格式为`'*`YYYY-MM-DD hh:mm:ss`*'`或*`YYYYMMDDhhmmss`*，取决于函数在字符串或数字上下文中的使用方式。
- en: If the *`fsp`* argument is given to specify a fractional seconds precision from
    0 to 6, the return value includes a fractional seconds part of that many digits.
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果给定*`fsp`*参数以指定从0到6的小数秒精度，则返回值包括相应数量的小数秒部分。
- en: '[PRE64]'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[`WEEK(*`date`*[,*`mode`*])`](date-and-time-functions.html#function_week)'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`WEEK(*`date`*[,*`mode`*])`](date-and-time-functions.html#function_week)'
- en: This function returns the week number for *`date`*. The two-argument form of
    [`WEEK()`](date-and-time-functions.html#function_week) enables you to specify
    whether the week starts on Sunday or Monday and whether the return value should
    be in the range from `0` to `53` or from `1` to `53`. If the *`mode`* argument
    is omitted, the value of the [`default_week_format`](server-system-variables.html#sysvar_default_week_format)
    system variable is used. See [Section 7.1.8, “Server System Variables”](server-system-variables.html
    "7.1.8 Server System Variables"). For a `NULL` date value, the function returns
    `NULL`.
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数返回*`date`*的周数。[`WEEK()`](date-and-time-functions.html#function_week)的两参数形式使您能够指定周从星期日或星期一开始，返回值应该在`0`到`53`或`1`到`53`的范围内。如果省略*`mode`*参数，则使用[`default_week_format`](server-system-variables.html#sysvar_default_week_format)系统变量的值。请参见[第7.1.8节，“服务器系统变量”](server-system-variables.html
    "7.1.8 服务器系统变量")。对于`NULL`日期值，函数返回`NULL`。
- en: The following table describes how the *`mode`* argument works.
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下表描述了*`mode`*参数的工作方式。
- en: '| Mode | First day of week | Range | Week 1 is the first week … |'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 模式 | 一周的第一天 | 范围 | 第1周是第一周 … |'
- en: '| 0 | Sunday | 0-53 | with a Sunday in this year |'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 0 | 星期日 | 0-53 | 今年有一个星期日 |'
- en: '| 1 | Monday | 0-53 | with 4 or more days this year |'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 1 | 星期一 | 0-53 | 今年有4天或更多天 |'
- en: '| 2 | Sunday | 1-53 | with a Sunday in this year |'
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 2 | 星期日 | 1-53 | 今年有一个星期日 |'
- en: '| 3 | Monday | 1-53 | with 4 or more days this year |'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 3 | 星期一 | 1-53 | 今年有4天或更多天 |'
- en: '| 4 | Sunday | 0-53 | with 4 or more days this year |'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 4 | 星期日 | 0-53 | 今年有4天或更多天 |'
- en: '| 5 | Monday | 0-53 | with a Monday in this year |'
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 5 | 星期一 | 0-53 | 今年有一个星期一 |'
- en: '| 6 | Sunday | 1-53 | with 4 or more days this year |'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 6 | 星期日 | 1-53 | 今年有4天或更多天 |'
- en: '| 7 | Monday | 1-53 | with a Monday in this year |'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 7 | 星期一 | 1-53 | 今年有一个星期一 |'
- en: 'For *`mode`* values with a meaning of “with 4 or more days this year,” weeks
    are numbered according to ISO 8601:1988:'
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于具有“今年有4天或更多天”的*`mode`*值，周数按照ISO 8601:1988编号：
- en: If the week containing January 1 has 4 or more days in the new year, it is week
    1.
  id: totrans-411
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果包含1月1日的那一周有4天或更多天，那么它就是第1周。
- en: Otherwise, it is the last week of the previous year, and the next week is week
    1.
  id: totrans-412
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，它就是上一年的最后一周，下一周就是第1周。
- en: '[PRE65]'
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'If a date falls in the last week of the previous year, MySQL returns `0` if
    you do not use `2`, `3`, `6`, or `7` as the optional *`mode`* argument:'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果一个日期落在上一年的最后一周，且您没有使用`2`、`3`、`6`或`7`作为可选的*`mode`*参数，则MySQL将返回`0`：
- en: '[PRE66]'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: One might argue that [`WEEK()`](date-and-time-functions.html#function_week)
    should return `52` because the given date actually occurs in the 52nd week of
    1999. [`WEEK()`](date-and-time-functions.html#function_week) returns `0` instead
    so that the return value is “the week number in the given year.” This makes use
    of the [`WEEK()`](date-and-time-functions.html#function_week) function reliable
    when combined with other functions that extract a date part from a date.
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有人可能会认为[`WEEK()`](date-and-time-functions.html#function_week)应该返回`52`，因为给定的日期实际上出现在1999年的第52周。但[`WEEK()`](date-and-time-functions.html#function_week)返回`0`，以便返回值是“给定年份中的周数”。这使得当与从日期中提取日期部分的其他函数结合使用时，[`WEEK()`](date-and-time-functions.html#function_week)函数是可靠的。
- en: If you prefer a result evaluated with respect to the year that contains the
    first day of the week for the given date, use `0`, `2`, `5`, or `7` as the optional
    *`mode`* argument.
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您希望结果相对于包含给定日期的一周的第一天的年份进行评估，请使用`0`、`2`、`5`或`7`作为可选的*`mode`*参数。
- en: '[PRE67]'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Alternatively, use the [`YEARWEEK()`](date-and-time-functions.html#function_yearweek)
    function:'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，使用[`YEARWEEK()`](date-and-time-functions.html#function_yearweek)函数：
- en: '[PRE68]'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[`WEEKDAY(*`date`*)`](date-and-time-functions.html#function_weekday)'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`WEEKDAY(*`date`*)`](date-and-time-functions.html#function_weekday)'
- en: Returns the weekday index for *`date`* (`0` = Monday, `1` = Tuesday, … `6` =
    Sunday). Returns `NULL` if *`date`* is `NULL`.
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回*`date`*的星期索引（`0` = 星期一，`1` = 星期二，… `6` = 星期日）。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[PRE69]'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[`WEEKOFYEAR(*`date`*)`](date-and-time-functions.html#function_weekofyear)'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`WEEKOFYEAR(*`date`*)`](date-and-time-functions.html#function_weekofyear)'
- en: Returns the calendar week of the date as a number in the range from `1` to `53`.
    Returns `NULL` if *`date`* is `NULL`.
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返���日期的日历周作为范围从`1`到`53`的数字。如果*`date`*为`NULL`，则返回`NULL`。
- en: '[`WEEKOFYEAR()`](date-and-time-functions.html#function_weekofyear) is a compatibility
    function that is equivalent to [`WEEK(*`date`*,3)`](date-and-time-functions.html#function_week).'
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`WEEKOFYEAR()`](date-and-time-functions.html#function_weekofyear)是一个兼容函数，等效于[`WEEK(*`date`*,3)`](date-and-time-functions.html#function_week)。'
- en: '[PRE70]'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[`YEAR(*`date`*)`](date-and-time-functions.html#function_year)'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`YEAR(*`date`*)`](date-and-time-functions.html#function_year)'
- en: Returns the year for *`date`*, in the range `1000` to `9999`, or `0` for the
    “zero” date. Returns `NULL` if *`date`* is `NULL`.
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回 *`date`* 的年份，范围为 `1000` 到 `9999`，或者对于“零”日期为 `0`。如果 *`date`* 为 `NULL`，则返回
    `NULL`。
- en: '[PRE71]'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[`YEARWEEK(*`date`*)`](date-and-time-functions.html#function_yearweek), [`YEARWEEK(*`date`*,*`mode`*)`](date-and-time-functions.html#function_yearweek)'
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`YEARWEEK(*`date`*)`](date-and-time-functions.html#function_yearweek), [`YEARWEEK(*`date`*,*`mode`*)`](date-and-time-functions.html#function_yearweek)'
- en: Returns year and week for a date. The year in the result may be different from
    the year in the date argument for the first and the last week of the year. Returns
    `NULL` if *`date`* is `NULL`.
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回日期的年份和周数。结果中的年份可能与年份参数中的年份在一年中的第一周和最后一周不同。如果 *`date`* 为 `NULL`，则返回 `NULL`。
- en: The *`mode`* argument works exactly like the *`mode`* argument to [`WEEK()`](date-and-time-functions.html#function_week).
    For the single-argument syntax, a *`mode`* value of 0 is used. Unlike [`WEEK()`](date-and-time-functions.html#function_week),
    the value of [`default_week_format`](server-system-variables.html#sysvar_default_week_format)
    does not influence [`YEARWEEK()`](date-and-time-functions.html#function_yearweek).
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`mode`* 参数的工作方式与 [`WEEK()`](date-and-time-functions.html#function_week) 函数的
    *`mode`* 参数完全相同。对于单参数语法，使用 *`mode`* 值为 0。与 [`WEEK()`](date-and-time-functions.html#function_week)
    不同，[`default_week_format`](server-system-variables.html#sysvar_default_week_format)
    的值不会影响 [`YEARWEEK()`](date-and-time-functions.html#function_yearweek)。'
- en: '[PRE72]'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: The week number is different from what the [`WEEK()`](date-and-time-functions.html#function_week)
    function would return (`0`) for optional arguments `0` or `1`, as [`WEEK()`](date-and-time-functions.html#function_week)
    then returns the week in the context of the given year.
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 周数与 [`WEEK()`](date-and-time-functions.html#function_week) 函数对可选参数 `0` 或 `1`
    返回的周数 (`0`) 不同，因为 [`WEEK()`](date-and-time-functions.html#function_week) 然后返回给定年份上下文中的周数。
