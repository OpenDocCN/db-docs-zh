- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/select-into.html](https://dev.mysql.com/doc/refman/8.0/en/select-into.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/select-into.html](https://dev.mysql.com/doc/refman/8.0/en/select-into.html)
- en: 15.2.13.1 SELECT ... INTO Statement
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.2.13.1 SELECT ... INTO Statement
- en: 'The [`SELECT ... INTO`](select-into.html "15.2.13.1 SELECT ... INTO Statement")
    form of [`SELECT`](select.html "15.2.13 SELECT Statement") enables a query result
    to be stored in variables or written to a file:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SELECT ... INTO`](select-into.html "15.2.13.1 SELECT ... INTO Statement")形式的[`SELECT`](select.html
    "15.2.13 SELECT Statement")允许将查询结果存储在变量中或写入文件：'
- en: '`SELECT ... INTO *`var_list`*` selects column values and stores them into variables.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT ... INTO *`var_list`*`选择列值并将其存储到变量中。'
- en: '`SELECT ... INTO OUTFILE` writes the selected rows to a file. Column and line
    terminators can be specified to produce a specific output format.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT ... INTO OUTFILE`将所选行写入文件。可以指定列和行终止符以生成特定的输出格式。'
- en: '`SELECT ... INTO DUMPFILE` writes a single row to a file without any formatting.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT ... INTO DUMPFILE`将一行数据写入文件，不进行任何格式化。'
- en: 'A given [`SELECT`](select.html "15.2.13 SELECT Statement") statement can contain
    at most one `INTO` clause, although as shown by the [`SELECT`](select.html "15.2.13 SELECT
    Statement") syntax description (see [Section 15.2.13, “SELECT Statement”](select.html
    "15.2.13 SELECT Statement")), the `INTO` can appear in different positions:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 给定的[`SELECT`](select.html "15.2.13 SELECT Statement")语句最多可以包含一个`INTO`子句，尽管如[`SELECT`](select.html
    "15.2.13 SELECT Statement")语法描述所示（参见[第15.2.13节，“SELECT Statement”](select.html
    "15.2.13 SELECT Statement")），`INTO`可以出现在不同的位置：
- en: 'Before `FROM`. Example:'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`FROM`之前。示例：
- en: '[PRE0]'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Before a trailing locking clause. Example:'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在尾随锁定子句之前。示例：
- en: '[PRE1]'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'At the end of the [`SELECT`](select.html "15.2.13 SELECT Statement"). Example:'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`SELECT`](select.html "15.2.13 SELECT Statement")的末尾。示例：
- en: '[PRE2]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `INTO` position at the end of the statement is supported as of MySQL 8.0.20,
    and is the preferred position. The position before a locking clause is deprecated
    as of MySQL 8.0.20; expect support for it to be removed in a future version of
    MySQL. In other words, `INTO` after `FROM` but not at the end of the [`SELECT`](select.html
    "15.2.13 SELECT Statement") produces a warning.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.20中支持语句末尾的`INTO`位置，并且是首选位置。在MySQL 8.0.20中，位于锁定子句之前的位置已被弃用；预计在未来的MySQL版本中将删除对其的支持。换句话说，`INTO`在`FROM`之后但不在[`SELECT`](select.html
    "15.2.13 SELECT Statement")的末尾会产生警告。
- en: An `INTO` clause should not be used in a nested [`SELECT`](select.html "15.2.13 SELECT
    Statement") because such a [`SELECT`](select.html "15.2.13 SELECT Statement")
    must return its result to the outer context. There are also constraints on the
    use of `INTO` within [`UNION`](union.html "15.2.18 UNION Clause") statements;
    see [Section 15.2.18, “UNION Clause”](union.html "15.2.18 UNION Clause").
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 不应在嵌套的[`SELECT`](select.html "15.2.13 SELECT Statement")中使用`INTO`子句，因为这样的[`SELECT`](select.html
    "15.2.13 SELECT Statement")必须将其结果返回给外部上下文。在[`UNION`](union.html "15.2.18 UNION
    Clause")语句中对`INTO`的使用也受到约束；请参见[第15.2.18节，“UNION Clause”](union.html "15.2.18 UNION
    Clause")。
- en: 'For the `INTO *`var_list`*` variant:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`INTO *`var_list`*`变体：
- en: '*`var_list`* names a list of one or more variables, each of which can be a
    user-defined variable, stored procedure or function parameter, or stored program
    local variable. (Within a prepared `SELECT ... INTO *`var_list`*` statement, only
    user-defined variables are permitted; see [Section 15.6.4.2, “Local Variable Scope
    and Resolution”](local-variable-scope.html "15.6.4.2 Local Variable Scope and
    Resolution").)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*`var_list`*命名一个或多个变量的列表，每个变量可以是用户定义的变量、存储过程或函数参数，或存储程序本地变量。（在准备的`SELECT ...
    INTO *`var_list`*`语句中，只允许使用用户定义的变量；请参见[第15.6.4.2节，“本地变量范围和解析”](local-variable-scope.html
    "15.6.4.2 Local Variable Scope and Resolution")。）'
- en: The selected values are assigned to the variables. The number of variables must
    match the number of columns. The query should return a single row. If the query
    returns no rows, a warning with error code 1329 occurs (`No data`), and the variable
    values remain unchanged. If the query returns multiple rows, error 1172 occurs
    (`Result consisted of more than one row`). If it is possible that the statement
    may retrieve multiple rows, you can use `LIMIT 1` to limit the result set to a
    single row.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所选值被分配给变量。变量的数量必须与列的数量匹配。查询应返回一行数据。如果查询未返回任何行，则会出现带有错误代码1329的警告（`No data`），并且变量值保持不变。如果查询返回多行数据，则会出现错误1172（`Result
    consisted of more than one row`）。如果可能语句可能检索多行数据，可以使用`LIMIT 1`将结果集限制为一行。
- en: '[PRE3]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`INTO *`var_list`*` can also be used with a [`TABLE`](table.html "15.2.16 TABLE
    Statement") statement, subject to these restrictions:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`INTO *`var_list`*`也可以与[`TABLE`](table.html "15.2.16 TABLE语句")语句一起使用，但受到以下限制：'
- en: The number of variables must match the number of columns in the table.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量的数量必须与表中的列数相匹配。
- en: If the table contains more than one row, you must use `LIMIT 1` to limit the
    result set to a single row. `LIMIT 1` must precede the `INTO` keyword.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表包含多行，则必须使用`LIMIT 1`将结果集限制为单行。`LIMIT 1`必须在`INTO`关键字之前。
- en: 'An example of such a statement is shown here:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示了这种语句的一个示例：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can also select values from a [`VALUES`](values.html "15.2.19 VALUES Statement")
    statement that generates a single row into a set of user variables. In this case,
    you must employ a table alias, and you must assign each value from the value list
    to a variable. Each of the two statements shown here is equivalent to [`SET @x=2,
    @y=4, @z=8`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment"):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从生成单行的[`VALUES`](values.html "15.2.19 VALUES语句")语句中选择值到一组用户变量中。在这种情况下，您必须使用表别名，并且必须将值列表中的每个值分配给一个变量。这里显示的两个语句中的每一个都等同于[`SET
    @x=2, @y=4, @z=8`](set-variable.html "15.7.6.1 变量赋值的SET语法")：
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: User variable names are not case-sensitive. See [Section 11.4, “User-Defined
    Variables”](user-variables.html "11.4 User-Defined Variables").
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 用户变量名称不区分大小写。请参阅[第11.4节，“用户定义变量”](user-variables.html "11.4 用户定义变量")。
- en: The [`SELECT ... INTO OUTFILE '*`file_name`*'`](select-into.html "15.2.13.1 SELECT
    ... INTO Statement") form of [`SELECT`](select.html "15.2.13 SELECT Statement")
    writes the selected rows to a file. The file is created on the server host, so
    you must have the [`FILE`](privileges-provided.html#priv_file) privilege to use
    this syntax. *`file_name`* cannot be an existing file, which among other things
    prevents files such as `/etc/passwd` and database tables from being modified.
    The [`character_set_filesystem`](server-system-variables.html#sysvar_character_set_filesystem)
    system variable controls the interpretation of the file name.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SELECT ... INTO OUTFILE ''*`file_name`*''`](select-into.html "15.2.13.1 SELECT
    ... INTO语句")形式的[`SELECT`](select.html "15.2.13 SELECT语句")将所选行写入文件。文件在服务器主机上创建，因此您必须具有[`FILE`](privileges-provided.html#priv_file)权限才能使用此语法。*`file_name`*不能是现有文件，这样可以防止修改文件，例如`/etc/passwd`和数据库表。[`character_set_filesystem`](server-system-variables.html#sysvar_character_set_filesystem)系统变量控制文件名的解释。'
- en: The [`SELECT ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO
    Statement") statement is intended to enable dumping a table to a text file on
    the server host. To create the resulting file on some other host, [`SELECT ...
    INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO Statement") normally
    is unsuitable because there is no way to write a path to the file relative to
    the server host file system, unless the location of the file on the remote host
    can be accessed using a network-mapped path on the server host file system.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SELECT ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO语句")语句旨在使在服务器主机上将表转储到文本文件成为可能。要在其他主机上创建结果文件，通常使用[`SELECT
    ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO语句")是不合适的，因为无法相对于服务器主机文件系统写入文件路径，除非可以使用服务器主机文件系统上的网络映射路径访问远程主机上文件的位置。'
- en: Alternatively, if the MySQL client software is installed on the remote host,
    you can use a client command such as `mysql -e "SELECT ..." > *`file_name`*` to
    generate the file on that host.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果远程主机上安装了MySQL客户端软件，您可以使用客户端命令，例如`mysql -e "SELECT ..." > *`file_name`*`在该主机上生成文件。
- en: '[`SELECT ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO Statement")
    is the complement of [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement").
    Column values are written converted to the character set specified in the `CHARACTER
    SET` clause. If no such clause is present, values are dumped using the `binary`
    character set. In effect, there is no character set conversion. If a result set
    contains columns in several character sets, so is the output data file, and it
    may not be possible to reload the file correctly.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SELECT ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO语句")是[`LOAD
    DATA`](load-data.html "15.2.9 LOAD DATA语句")的补充。列值被写入并转换为`CHARACTER SET`子句中指定的字符集。如果没有这样的子句，值将使用`binary`字符集进行转储。实际上，没有字符集转换。如果结果集包含几种字符集的列，则输出数据文件也是如此，可能无法正确重新加载文件。'
- en: The syntax for the *`export_options`* part of the statement consists of the
    same `FIELDS` and `LINES` clauses that are used with the [`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement") statement. For information about the `FIELDS` and
    `LINES` clauses, including their default values and permissible values, see [Section 15.2.9,
    “LOAD DATA Statement”](load-data.html "15.2.9 LOAD DATA Statement").
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 语句中 *`export_options`* 部分的语法由与 [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA
    Statement") 语句一起使用的相同 `FIELDS` 和 `LINES` 子句组成。有关 `FIELDS` 和 `LINES` 子句的信息，包括它们的默认值和允许的值，请参阅
    [Section 15.2.9, “LOAD DATA Statement”](load-data.html "15.2.9 LOAD DATA Statement")。
- en: '`FIELDS ESCAPED BY` controls how to write special characters. If the `FIELDS
    ESCAPED BY` character is not empty, it is used when necessary to avoid ambiguity
    as a prefix that precedes following characters on output:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`FIELDS ESCAPED BY` 控制如何写入特殊字符。如果 `FIELDS ESCAPED BY` 字符不为空，则在必要时用作前缀，避免输出时后续字符的歧义：'
- en: The `FIELDS ESCAPED BY` character
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FIELDS ESCAPED BY` 字符'
- en: The `FIELDS [OPTIONALLY] ENCLOSED BY` character
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FIELDS [OPTIONALLY] ENCLOSED BY` 字符'
- en: The first character of the `FIELDS TERMINATED BY` and `LINES TERMINATED BY`
    values
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FIELDS TERMINATED BY` 和 `LINES TERMINATED BY` 值的第一个字符'
- en: ASCII `NUL` (the zero-valued byte; what is actually written following the escape
    character is ASCII `0`, not a zero-valued byte)
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ASCII `NUL`（零值字节；实际写入转义字符后的内容是 ASCII `0`，而不是零值字节）
- en: The `FIELDS TERMINATED BY`, `ENCLOSED BY`, `ESCAPED BY`, or `LINES TERMINATED
    BY` characters *must* be escaped so that you can read the file back in reliably.
    ASCII `NUL` is escaped to make it easier to view with some pagers.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`FIELDS TERMINATED BY`、`ENCLOSED BY`、`ESCAPED BY` 或 `LINES TERMINATED BY` 字符
    *必须* 转义，以便您可以可靠地读取文件。ASCII `NUL` 被转义，以便在某些分页器中更容易查看。'
- en: The resulting file need not conform to SQL syntax, so nothing else need be escaped.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的文件不需要符合 SQL 语法，因此不需要转义其他内容。
- en: If the `FIELDS ESCAPED BY` character is empty, no characters are escaped and
    `NULL` is output as `NULL`, not `\N`. It is probably not a good idea to specify
    an empty escape character, particularly if field values in your data contain any
    of the characters in the list just given.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `FIELDS ESCAPED BY` 字符为空，则不会转义任何字符，`NULL` 输出为 `NULL`，而不是 `\N`。如果你的数据中的字段值包含刚才列出的字符之一，可能不是一个好主意指定一个空的转义字符。
- en: '`INTO OUTFILE` can also be used with a [`TABLE`](table.html "15.2.16 TABLE
    Statement") statement when you want to dump all columns of a table into a text
    file. In this case, the ordering and number of rows can be controlled using `ORDER
    BY` and `LIMIT`; these clauses must precede `INTO OUTFILE`. `TABLE ... INTO OUTFILE`
    supports the same *`export_options`* as does `SELECT ... INTO OUTFILE`, and it
    is subject to the same restrictions on writing to the file system. An example
    of such a statement is shown here:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要将表的所有列转储到文本文件时，也可以使用 `INTO OUTFILE` 与 [`TABLE`](table.html "15.2.16 TABLE
    Statement") 语句。在这种情况下，可以使用 `ORDER BY` 和 `LIMIT` 控制排序和行数；这些子句必须在 `INTO OUTFILE`
    之前。`TABLE ... INTO OUTFILE` 支持与 `SELECT ... INTO OUTFILE` 相同的 *`export_options`*，并且受到写入文件系统的相同限制。这里展示了这种语句的一个示例：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can also use `SELECT ... INTO OUTFILE` with a [`VALUES`](values.html "15.2.19 VALUES
    Statement") statement to write values directly into a file. An example is shown
    here:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 `SELECT ... INTO OUTFILE` 与 [`VALUES`](values.html "15.2.19 VALUES Statement")
    语句将值直接写入文件。这里有一个示例：
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You must use a table alias; column aliases are also supported, and can optionally
    be used to write values only from desired columns. You can also use any or all
    of the export options supported by `SELECT ... INTO OUTFILE` to format the output
    to the file.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须使用表别名；列别名也受支持，并且可以选择性地用于仅从所需列中写入值。您还可以使用 `SELECT ... INTO OUTFILE` 支持的任何或所有导出选项来将输出格式化到文件中。
- en: 'Here is an example that produces a file in the comma-separated values (CSV)
    format used by many programs:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个示例，生成一个以逗号分隔值（CSV）格式的文件，许多程序使用这种格式：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you use `INTO DUMPFILE` instead of `INTO OUTFILE`, MySQL writes only one
    row into the file, without any column or line termination and without performing
    any escape processing. This is useful for selecting a [`BLOB`](blob.html "13.3.4 The
    BLOB and TEXT Types") value and storing it in a file.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用 `INTO DUMPFILE` 而不是 `INTO OUTFILE`，MySQL 只会将一行写入文件，不会有任何列或行终止，并且不执行任何转义处理。这对于选择
    [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types") 值并将其存储在文件中很有用。
- en: '[`TABLE`](table.html "15.2.16 TABLE Statement") also supports `INTO DUMPFILE`.
    If the table contains more than one row, you must also use `LIMIT 1` to limit
    the output to a single row. `INTO DUMPFILE` can also be used with `SELECT * FROM
    (VALUES ROW()[, ...]) AS *`table_alias`* [LIMIT 1]`. See [Section 15.2.19, “VALUES
    Statement”](values.html "15.2.19 VALUES Statement").'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TABLE`](table.html "15.2.16 TABLE Statement")也支持`INTO DUMPFILE`。 如果表包含多行，则还必须使用`LIMIT
    1`将输出限制为单行。 `INTO DUMPFILE`也可以与`SELECT * FROM (VALUES ROW()[, ...]) AS *`table_alias`*
    [LIMIT 1]`一起使用。请参阅[Section 15.2.19，“VALUES Statement”](values.html "15.2.19 VALUES
    Statement")。'
- en: Note
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Any file created by `INTO OUTFILE` or `INTO DUMPFILE` is owned by the operating
    system user under whose account [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL
    Server") runs. (You should *never* run [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") as `root` for this and other reasons.) As of MySQL 8.0.17,
    the umask for file creation is 0640; you must have sufficient access privileges
    to manipulate the file contents. Prior to MySQL 8.0.17, the umask is 0666 and
    the file is writable by all users on the server host.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由`INTO OUTFILE`或`INTO DUMPFILE`创建的任何文件都归属于运行[**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server")的操作系统用户。 （出于这个和其他原因，您*绝对不应该*以`root`身份运行[**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server")。）从MySQL 8.0.17开始，文件创建的umask为0640；您必须具有足够的访问权限来操作文件内容。在MySQL
    8.0.17之前，umask为0666，文件可被服务器主机上的所有用户写入。
- en: If the [`secure_file_priv`](server-system-variables.html#sysvar_secure_file_priv)
    system variable is set to a nonempty directory name, the file to be written must
    be located in that directory.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`secure_file_priv`](server-system-variables.html#sysvar_secure_file_priv)系统变量设置为非空目录名称，则要写入的文件必须位于该目录中。
- en: In the context of [`SELECT ... INTO`](select-into.html "15.2.13.1 SELECT ...
    INTO Statement") statements that occur as part of events executed by the Event
    Scheduler, diagnostics messages (not only errors, but also warnings) are written
    to the error log, and, on Windows, to the application event log. For additional
    information, see [Section 27.4.5, “Event Scheduler Status”](events-status-info.html
    "27.4.5 Event Scheduler Status").
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在由事件调度程序执行的事件的一部分中发生的[`SELECT ... INTO`](select-into.html "15.2.13.1 SELECT
    ... INTO Statement")语句的上下文中，诊断消息（不仅是错误，还包括警告）将被写入错误日志，并且在Windows上，将被写入应用程序事件日志。有关更多信息，请参阅[Section 27.4.5，“事件调度程序状态”](events-status-info.html
    "27.4.5 Event Scheduler Status")。
- en: As of MySQL 8.0.22, support is provided for periodic synchronization of output
    files written to by `SELECT INTO OUTFILE` and `SELECT INTO DUMPFILE`, enabled
    by setting the [`select_into_disk_sync`](server-system-variables.html#sysvar_select_into_disk_sync)
    server system variable introduced in that version. Output buffer size and optional
    delay can be set using, respectively, [`select_into_buffer_size`](server-system-variables.html#sysvar_select_into_buffer_size)
    and [`select_into_disk_sync_delay`](server-system-variables.html#sysvar_select_into_disk_sync_delay).
    For more information, see the descriptions of these system variables.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.22开始，支持定期同步由`SELECT INTO OUTFILE`和`SELECT INTO DUMPFILE`写入的输出文件，通过设置在该版本中引入的[`select_into_disk_sync`](server-system-variables.html#sysvar_select_into_disk_sync)服务器系统变量来启用。可以使用[`select_into_buffer_size`](server-system-variables.html#sysvar_select_into_buffer_size)和[`select_into_disk_sync_delay`](server-system-variables.html#sysvar_select_into_disk_sync_delay)分别设置输出缓冲区大小和可选延迟。有关更多信息，请参阅这些系统变量的描述。
