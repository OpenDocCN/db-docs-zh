- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-examples-compression-sect.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-examples-compression-sect.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-examples-compression-sect.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-examples-compression-sect.html)
- en: 17.15.1.3 Using the Compression Information Schema Tables
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 17.15.1.3 使用压缩信息模式表
- en: '**Example 17.1 Using the Compression Information Schema Tables**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 17.1 使用压缩信息模式表**'
- en: The following is sample output from a database that contains compressed tables
    (see [Section 17.9, “InnoDB Table and Page Compression”](innodb-compression.html
    "17.9 InnoDB Table and Page Compression"), [`INNODB_CMP`](information-schema-innodb-cmp-table.html
    "28.4.6 The INFORMATION_SCHEMA INNODB_CMP and INNODB_CMP_RESET Tables"), [`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 The INFORMATION_SCHEMA INNODB_CMP_PER_INDEX and INNODB_CMP_PER_INDEX_RESET
    Tables"), and [`INNODB_CMPMEM`](information-schema-innodb-cmpmem-table.html "28.4.7 The
    INFORMATION_SCHEMA INNODB_CMPMEM and INNODB_CMPMEM_RESET Tables")).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是包含压缩表的数据库的示例输出（参见[第17.9节，“InnoDB表和页压缩”](innodb-compression.html "17.9 InnoDB表和页压缩")，[`INNODB_CMP`](information-schema-innodb-cmp-table.html
    "28.4.6 INFORMATION_SCHEMA INNODB_CMP和INNODB_CMP_RESET表")，[`INNODB_CMP_PER_INDEX`](information-schema-innodb-cmp-per-index-table.html
    "28.4.8 INFORMATION_SCHEMA INNODB_CMP_PER_INDEX和INNODB_CMP_PER_INDEX_RESET表")和[`INNODB_CMPMEM`](information-schema-innodb-cmpmem-table.html
    "28.4.7 INFORMATION_SCHEMA INNODB_CMPMEM和INNODB_CMPMEM_RESET表")）。
- en: The following table shows the contents of [`INFORMATION_SCHEMA.INNODB_CMP`](information-schema-innodb-cmp-table.html
    "28.4.6 The INFORMATION_SCHEMA INNODB_CMP and INNODB_CMP_RESET Tables") under
    a light [workload](glossary.html#glos_workload "workload"). The only compressed
    page size that the buffer pool contains is 8K. Compressing or uncompressing pages
    has consumed less than a second since the time the statistics were reset, because
    the columns `COMPRESS_TIME` and `UNCOMPRESS_TIME` are zero.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了在轻量级[工作负载](glossary.html#glos_workload "工作负载")下[`INFORMATION_SCHEMA.INNODB_CMP`](information-schema-innodb-cmp-table.html
    "28.4.6 INFORMATION_SCHEMA INNODB_CMP和INNODB_CMP_RESET表")的内容。缓冲池中唯一包含的压缩页大小为8K。自统计数据重置以来，压缩或解压页的时间不到一秒，因为`COMPRESS_TIME`和`UNCOMPRESS_TIME`列的值为零。
- en: '| page size | compress ops | compress ops ok | compress time | uncompress ops
    | uncompress time |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| 页大小 | 压缩操作 | 压缩操作成功 | 压缩时间 | 解压操作 | 解压时间 |'
- en: '| 1024 | 0 | 0 | 0 | 0 | 0 |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| 1024 | 0 | 0 | 0 | 0 | 0 |'
- en: '| 2048 | 0 | 0 | 0 | 0 | 0 |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| 2048 | 0 | 0 | 0 | 0 | 0 |'
- en: '| 4096 | 0 | 0 | 0 | 0 | 0 |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 4096 | 0 | 0 | 0 | 0 | 0 |'
- en: '| 8192 | 1048 | 921 | 0 | 61 | 0 |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| 8192 | 1048 | 921 | 0 | 61 | 0 |'
- en: '| 16384 | 0 | 0 | 0 | 0 | 0 |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| 16384 | 0 | 0 | 0 | 0 | 0 |'
- en: According to [`INNODB_CMPMEM`](information-schema-innodb-cmpmem-table.html "28.4.7 The
    INFORMATION_SCHEMA INNODB_CMPMEM and INNODB_CMPMEM_RESET Tables"), there are 6169
    compressed 8KB pages in the [buffer pool](glossary.html#glos_buffer_pool "buffer
    pool"). The only other allocated block size is 64 bytes. The smallest `PAGE_SIZE`
    in [`INNODB_CMPMEM`](information-schema-innodb-cmpmem-table.html "28.4.7 The INFORMATION_SCHEMA
    INNODB_CMPMEM and INNODB_CMPMEM_RESET Tables") is used for block descriptors of
    those compressed pages for which no uncompressed page exists in the buffer pool.
    We see that there are 5910 such pages. Indirectly, we see that 259 (6169-5910)
    compressed pages also exist in the buffer pool in uncompressed form.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[`INNODB_CMPMEM`](information-schema-innodb-cmpmem-table.html "28.4.7 INFORMATION_SCHEMA
    INNODB_CMPMEM和INNODB_CMPMEM_RESET表")，缓冲池中有6169个压缩的8KB页。唯一的其他分配块大小为64字节。[`INNODB_CMPMEM`](information-schema-innodb-cmpmem-table.html
    "28.4.7 INFORMATION_SCHEMA INNODB_CMPMEM和INNODB_CMPMEM_RESET表")中最小的`PAGE_SIZE`用于那些在缓冲池中不存在未压缩页的压缩页的块描述符。我们看到有5910个这样的页。间接地，我们看到259（6169-5910）个压缩页也以未压缩形式存在于缓冲池中。
- en: 'The following table shows the contents of [`INFORMATION_SCHEMA.INNODB_CMPMEM`](information-schema-innodb-cmpmem-table.html
    "28.4.7 The INFORMATION_SCHEMA INNODB_CMPMEM and INNODB_CMPMEM_RESET Tables")
    under a light [workload](glossary.html#glos_workload "workload"). Some memory
    is unusable due to fragmentation of the memory allocator for compressed pages:
    `SUM(PAGE_SIZE*PAGES_FREE)=6784`. This is because small memory allocation requests
    are fulfilled by splitting bigger blocks, starting from the 16K blocks that are
    allocated from the main buffer pool, using the buddy allocation system. The fragmentation
    is this low because some allocated blocks have been relocated (copied) to form
    bigger adjacent free blocks. This copying of `SUM(PAGE_SIZE*RELOCATION_OPS)` bytes
    has consumed less than a second `(SUM(RELOCATION_TIME)=0)`.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了在轻负载[工作负载](glossary.html#glos_workload "workload")下[`INFORMATION_SCHEMA.INNODB_CMPMEM`](information-schema-innodb-cmpmem-table.html
    "28.4.7 The INFORMATION_SCHEMA INNODB_CMPMEM and INNODB_CMPMEM_RESET Tables")的内容。由于压缩页内存分配器的碎片化，一些内存无法使用：`SUM(PAGE_SIZE*PAGES_FREE)=6784`。这是因为小内存分配请求通过从主缓冲池分配的16K块开始，使用伙伴分配系统来拆分更大的块来满足。碎片化很低是因为一些已分配的块已经被重定位（复制）以形成更大的相邻空闲块。这些复制的`SUM(PAGE_SIZE*RELOCATION_OPS)`字节消耗不到一秒的时间`(SUM(RELOCATION_TIME)=0)`。
- en: '| page size | pages used | pages free | relocation ops | relocation time |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 页大小 | 已使用页数 | 空闲页数 | 重定位操作 | 重定位时间 |'
- en: '| 64 | 5910 | 0 | 2436 | 0 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 64 | 5910 | 0 | 2436 | 0 |'
- en: '| 128 | 0 | 1 | 0 | 0 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 128 | 0 | 1 | 0 | 0 |'
- en: '| 256 | 0 | 0 | 0 | 0 |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 256 | 0 | 0 | 0 | 0 |'
- en: '| 512 | 0 | 1 | 0 | 0 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 512 | 0 | 1 | 0 | 0 |'
- en: '| 1024 | 0 | 0 | 0 | 0 |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 1024 | 0 | 0 | 0 | 0 |'
- en: '| 2048 | 0 | 1 | 0 | 0 |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 2048 | 0 | 1 | 0 | 0 |'
- en: '| 4096 | 0 | 1 | 0 | 0 |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 4096 | 0 | 1 | 0 | 0 |'
- en: '| 8192 | 6169 | 0 | 5 | 0 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 8192 | 6169 | 0 | 5 | 0 |'
- en: '| 16384 | 0 | 0 | 0 | 0 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 16384 | 0 | 0 | 0 | 0 |'
