- en: 10.4 Optimizing Database Structure
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10.4 优化数据库结构
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/optimizing-database-structure.html](https://dev.mysql.com/doc/refman/8.0/en/optimizing-database-structure.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/optimizing-database-structure.html](https://dev.mysql.com/doc/refman/8.0/en/optimizing-database-structure.html)
- en: '[10.4.1 Optimizing Data Size](data-size.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.4.1 优化数据大小](data-size.html)'
- en: '[10.4.2 Optimizing MySQL Data Types](optimize-data-types.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.4.2 优化 MySQL 数据类型](optimize-data-types.html)'
- en: '[10.4.3 Optimizing for Many Tables](optimize-multi-tables.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.4.3 优化多表操作](optimize-multi-tables.html)'
- en: '[10.4.4 Internal Temporary Table Use in MySQL](internal-temporary-tables.html)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.4.4 MySQL 中内部临时表的使用](internal-temporary-tables.html)'
- en: '[10.4.5 Limits on Number of Databases and Tables](database-count-limit.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.4.5 数据库和表数量限制](database-count-limit.html)'
- en: '[10.4.6 Limits on Table Size](table-size-limit.html)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.4.6 表大小限制](table-size-limit.html)'
- en: '[10.4.7 Limits on Table Column Count and Row Size](column-count-limit.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[10.4.7 表列数和行大小限制](column-count-limit.html)'
- en: In your role as a database designer, look for the most efficient way to organize
    your schemas, tables, and columns. As when tuning application code, you minimize
    I/O, keep related items together, and plan ahead so that performance stays high
    as the data volume increases. Starting with an efficient database design makes
    it easier for team members to write high-performing application code, and makes
    the database likely to endure as applications evolve and are rewritten.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据库设计师，要寻找最有效的方式来组织模式、表和列。就像调整应用程序代码一样，你要尽量减少 I/O，将相关项目放在一起，并提前规划，以确保随着数据量的增加性能保持高水平。从高效的数据库设计开始，可以让团队成员更容易编写高性能的应用程序代码，并使数据库在应用程序演变和重写时能够持久存在。
