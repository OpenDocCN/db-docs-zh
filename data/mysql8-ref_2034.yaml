- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-statements-current-table.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-statements-current-table.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-statements-current-table.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-statements-current-table.html)
- en: 29.12.6.1 The events_statements_current Table
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 29.12.6.1 events_statements_current表
- en: The [`events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 The events_statements_current Table") table contains current statement
    events. The table stores one row per thread showing the current status of the
    thread's most recent monitored statement event, so there is no system variable
    for configuring the table size.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`events_statements_current`](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-statements-current-table.html)表包含当前语句事件。该表为每个线程存储一行，显示线程最近监视语句事件的当前状态，因此没有用于配置表大小的系统变量。'
- en: Of the tables that contain statement event rows, [`events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 The events_statements_current Table") is the most fundamental. Other
    tables that contain statement event rows are logically derived from the current
    events. For example, the [`events_statements_history`](performance-schema-events-statements-history-table.html
    "29.12.6.2 The events_statements_history Table") and [`events_statements_history_long`](performance-schema-events-statements-history-long-table.html
    "29.12.6.3 The events_statements_history_long Table") tables are collections of
    the most recent statement events that have ended, up to a maximum number of rows
    per thread and globally across all threads, respectively.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含语句事件行的表中，[`events_statements_current`](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-statements-current-table.html)是最基本的。其他包含语句事件行的表从当前事件逻辑派生。例如，[`events_statements_history`](performance-schema-events-statements-history-table.html)和[`events_statements_history_long`](performance-schema-events-statements-history-long-table.html)表是最近已结束的语句事件的集合，每个线程最多一定数量的行，并在全局范围内跨所有线程。
- en: For more information about the relationship between the three `events_statements_*`xxx`*`
    event tables, see [Section 29.9, “Performance Schema Tables for Current and Historical
    Events”](performance-schema-event-tables.html "29.9 Performance Schema Tables
    for Current and Historical Events").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有关三个`events_statements_*`xxx`*`事件表之间关系的更多信息，请参见[第29.9节，“当前和历史事件的性能模式表”](performance-schema-event-tables.html)。
- en: For information about configuring whether to collect statement events, see [Section 29.12.6,
    “Performance Schema Statement Event Tables”](performance-schema-statement-tables.html
    "29.12.6 Performance Schema Statement Event Tables").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 有关配置是否收集语句事件的信息，请参见[第29.12.6节，“性能模式语句事件表”](performance-schema-statement-tables.html)。
- en: 'The [`events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 The events_statements_current Table") table has these columns:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[`events_statements_current`](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-statements-current-table.html)表具有以下列：'
- en: '`THREAD_ID`, `EVENT_ID`'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`THREAD_ID`，`EVENT_ID`'
- en: The thread associated with the event and the thread current event number when
    the event starts. The `THREAD_ID` and `EVENT_ID` values taken together uniquely
    identify the row. No two rows have the same pair of values.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与事件相关联的线程和事件开始时的线程当前事件编号。`THREAD_ID`和`EVENT_ID`值组合在一起唯一标识行。没有两行具有相同的数值对。
- en: '`END_EVENT_ID`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`END_EVENT_ID`'
- en: This column is set to `NULL` when the event starts and updated to the thread
    current event number when the event ends.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当事件开始时，此列设置为`NULL`，并在事件结束时更新为线程当前事件编号。
- en: '`EVENT_NAME`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EVENT_NAME`'
- en: The name of the instrument from which the event was collected. This is a `NAME`
    value from the [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table") table. Instrument names may have multiple
    parts and form a hierarchy, as discussed in [Section 29.6, “Performance Schema
    Instrument Naming Conventions”](performance-schema-instrument-naming.html "29.6 Performance
    Schema Instrument Naming Conventions").
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从中收集事件的仪器的名称。这是来自[`setup_instruments`](performance-schema-setup-instruments-table.html)表的`NAME`值。仪器名称可能有多个部分并形成层次结构，如[第29.6节，“性能模式仪器命名约定”](performance-schema-instrument-naming.html)中所讨论的那样。
- en: For SQL statements, the `EVENT_NAME` value initially is `statement/com/Query`
    until the statement is parsed, then changes to a more appropriate value, as described
    in [Section 29.12.6, “Performance Schema Statement Event Tables”](performance-schema-statement-tables.html
    "29.12.6 Performance Schema Statement Event Tables").
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于SQL语句，`EVENT_NAME`值最初为`statement/com/Query`，直到语句被解析，然后根据需要更改为更合适的值，如[第29.12.6节，“性能模式语句事件表”](performance-schema-statement-tables.html
    "29.12.6 性能模式语句事件表")中所述。
- en: '`SOURCE`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOURCE`'
- en: The name of the source file containing the instrumented code that produced the
    event and the line number in the file at which the instrumentation occurs. This
    enables you to check the source to determine exactly what code is involved.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含产生事件的仪器代码的源文件的名称以及发生仪器化的文件中的行号。这使您可以检查源代码以确定涉及的确切代码。
- en: '`TIMER_START`, `TIMER_END`, `TIMER_WAIT`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TIMER_START`，`TIMER_END`，`TIMER_WAIT`'
- en: Timing information for the event. The unit for these values is picoseconds (trillionths
    of a second). The `TIMER_START` and `TIMER_END` values indicate when event timing
    started and ended. `TIMER_WAIT` is the event elapsed time (duration).
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事件的时间信息。这些值的单位为皮秒（万亿分之一秒）。`TIMER_START`和`TIMER_END`值指示事件计时开始和结束的时间。`TIMER_WAIT`是事件经过的时间（持续时间）。
- en: If an event has not finished, `TIMER_END` is the current timer value and `TIMER_WAIT`
    is the time elapsed so far (`TIMER_END` − `TIMER_START`).
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果事件尚未完成，则`TIMER_END`是当前计时器值，`TIMER_WAIT`是到目前为止经过的时间（`TIMER_END` − `TIMER_START`）。
- en: If an event is produced from an instrument that has `TIMED = NO`, timing information
    is not collected, and `TIMER_START`, `TIMER_END`, and `TIMER_WAIT` are all `NULL`.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果事件是由`TIMED = NO`的仪器产生的，则不会收集时间信息，`TIMER_START`，`TIMER_END`和`TIMER_WAIT`都是`NULL`。
- en: For discussion of picoseconds as the unit for event times and factors that affect
    time values, see [Section 29.4.1, “Performance Schema Event Timing”](performance-schema-timing.html
    "29.4.1 Performance Schema Event Timing").
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关事件时间单位为皮秒和影响时间值的因素的讨论，请参见[第29.4.1节，“性能模式事件定时”](performance-schema-timing.html
    "29.4.1 性能模式事件定时")。
- en: '`LOCK_TIME`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOCK_TIME`'
- en: The time spent waiting for table locks. This value is computed in microseconds
    but normalized to picoseconds for easier comparison with other Performance Schema
    timers.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 等待表锁的时间。此值以微秒计算，但为了与其他性能模式计时器更容易比较，已标准化为皮秒。
- en: '`SQL_TEXT`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SQL_TEXT`'
- en: The text of the SQL statement. For a command not associated with an SQL statement,
    the value is `NULL`.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQL语句的文本。对于与SQL语句不相关的命令，该值为`NULL`。
- en: The maximum space available for statement display is 1024 bytes by default.
    To change this value, set the [`performance_schema_max_sql_text_length`](performance-schema-system-variables.html#sysvar_performance_schema_max_sql_text_length)
    system variable at server startup. (Changing this value affects columns in other
    Performance Schema tables as well. See [Section 29.10, “Performance Schema Statement
    Digests and Sampling”](performance-schema-statement-digests.html "29.10 Performance
    Schema Statement Digests and Sampling").)
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句显示的最大空间默认为1024字节。要更改此值，请在服务器启动时设置[`performance_schema_max_sql_text_length`](performance-schema-system-variables.html#sysvar_performance_schema_max_sql_text_length)系统变量。（更改此值还会影响其他性能模式表中的列。请参见[第29.10节，“性能模式语句摘要和抽样”](performance-schema-statement-digests.html
    "29.10 性能模式语句摘要和抽样")。）
- en: '`DIGEST`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DIGEST`'
- en: The statement digest SHA-256 value as a string of 64 hexadecimal characters,
    or `NULL` if the `statements_digest` consumer is `no`. For more information about
    statement digesting, see [Section 29.10, “Performance Schema Statement Digests
    and Sampling”](performance-schema-statement-digests.html "29.10 Performance Schema
    Statement Digests and Sampling").
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句摘要SHA-256值，以64个十六进制字符的字符串表示，如果`statements_digest`消费者为`no`，则为`NULL`。有关语句摘要的更多信息，请参见[第29.10节，“性能模式语句摘要和抽样”](performance-schema-statement-digests.html
    "29.10 性能模式语句摘要和抽样")。
- en: '`DIGEST_TEXT`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DIGEST_TEXT`'
- en: The normalized statement digest text, or `NULL` if the `statements_digest` consumer
    is `no`. For more information about statement digesting, see [Section 29.10, “Performance
    Schema Statement Digests and Sampling”](performance-schema-statement-digests.html
    "29.10 Performance Schema Statement Digests and Sampling").
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 标准化的语句摘要文本，或者如果`statements_digest`消费者为`no`，则为`NULL`。有关语句摘要的更多信息，请参见[第29.10节，“性能模式语句摘要和抽样”](performance-schema-statement-digests.html
    "29.10 性能模式语句摘要和抽样")。
- en: The [`performance_schema_max_digest_length`](performance-schema-system-variables.html#sysvar_performance_schema_max_digest_length)
    system variable determines the maximum number of bytes available per session for
    digest value storage. However, the display length of statement digests may be
    longer than the available buffer size due to encoding of statement elements such
    as keywords and literal values in digest buffer. Consequently, values selected
    from the `DIGEST_TEXT` column of statement event tables may appear to exceed the
    [`performance_schema_max_digest_length`](performance-schema-system-variables.html#sysvar_performance_schema_max_digest_length)
    value.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`performance_schema_max_digest_length`](performance-schema-system-variables.html#sysvar_performance_schema_max_digest_length)系统变量确定每个会话用于摘要值存储的最大字节数。然而，由于在摘要缓冲区中对语句元素（如关键字和文字值）进行编码，语句摘要的显示长度可能超过可用缓冲区大小。因此，从语句事件表的`DIGEST_TEXT`列中选择的值可能会超过[`performance_schema_max_digest_length`](performance-schema-system-variables.html#sysvar_performance_schema_max_digest_length)的值。'
- en: '`CURRENT_SCHEMA`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CURRENT_SCHEMA`'
- en: The default database for the statement, `NULL` if there is none.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句的默认数据库，如果没有则为`NULL`。
- en: '`OBJECT_SCHEMA`, `OBJECT_NAME`, `OBJECT_TYPE`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECT_SCHEMA`，`OBJECT_NAME`，`OBJECT_TYPE`'
- en: For nested statements (stored programs), these columns contain information about
    the parent statement. Otherwise they are `NULL`.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于嵌套语句（存储过程），这些列包含有关父语句的信息。否则，它们为`NULL`。
- en: '`OBJECT_INSTANCE_BEGIN`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECT_INSTANCE_BEGIN`'
- en: This column identifies the statement. The value is the address of an object
    in memory.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此列标识语句。该值是内存中对象的地址。
- en: '`MYSQL_ERRNO`'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MYSQL_ERRNO`'
- en: The statement error number, from the statement diagnostics area.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句错误编号，来自语句诊断区域。
- en: '`RETURNED_SQLSTATE`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RETURNED_SQLSTATE`'
- en: The statement SQLSTATE value, from the statement diagnostics area.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句的SQLSTATE值，来自语句诊断区域。
- en: '`MESSAGE_TEXT`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MESSAGE_TEXT`'
- en: The statement error message, from the statement diagnostics area.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句错误消息，来自语句诊断区域。
- en: '`ERRORS`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ERRORS`'
- en: Whether an error occurred for the statement. The value is 0 if the SQLSTATE
    value begins with `00` (completion) or `01` (warning). The value is 1 is the SQLSTATE
    value is anything else.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句是否发生错误。如果SQLSTATE值以`00`（完成）或`01`（警告）开头，则值为0。如果SQLSTATE值为其他值，则值为1。
- en: '`WARNINGS`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WARNINGS`'
- en: The number of warnings, from the statement diagnostics area.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 来自语句诊断区域的警告数量。
- en: '`ROWS_AFFECTED`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ROWS_AFFECTED`'
- en: The number of rows affected by the statement. For a description of the meaning
    of “affected,” see [mysql_affected_rows()](/doc/c-api/8.0/en/mysql-affected-rows.html).
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句影响的行数。有关“受影响”的含义，请参阅[mysql_affected_rows()](/doc/c-api/8.0/en/mysql-affected-rows.html)。
- en: '`ROWS_SENT`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ROWS_SENT`'
- en: The number of rows returned by the statement.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句返回的行数。
- en: '`ROWS_EXAMINED`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ROWS_EXAMINED`'
- en: The number of rows examined by the server layer (not counting any processing
    internal to storage engines).
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器层检查的行数（不包括存储引擎内部处理）。
- en: '`CREATED_TMP_DISK_TABLES`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CREATED_TMP_DISK_TABLES`'
- en: Like the [`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)
    status variable, but specific to the statement.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于[`Created_tmp_disk_tables`](server-status-variables.html#statvar_Created_tmp_disk_tables)状态变量，但特定于语句。
- en: '`CREATED_TMP_TABLES`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CREATED_TMP_TABLES`'
- en: Like the [`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)
    status variable, but specific to the statement.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于[`Created_tmp_tables`](server-status-variables.html#statvar_Created_tmp_tables)状态变量，但特定于语句。
- en: '`SELECT_FULL_JOIN`'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT_FULL_JOIN`'
- en: Like the [`Select_full_join`](server-status-variables.html#statvar_Select_full_join)
    status variable, but specific to the statement.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于[`Select_full_join`](server-status-variables.html#statvar_Select_full_join)状态变量，但特定于语句。
- en: '`SELECT_FULL_RANGE_JOIN`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT_FULL_RANGE_JOIN`'
- en: Like the [`Select_full_range_join`](server-status-variables.html#statvar_Select_full_range_join)
    status variable, but specific to the statement.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于[`Select_full_range_join`](server-status-variables.html#statvar_Select_full_range_join)状态变量，但特定于语句。
- en: '`SELECT_RANGE`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT_RANGE`'
- en: Like the [`Select_range`](server-status-variables.html#statvar_Select_range)
    status variable, but specific to the statement.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于[`Select_range`](server-status-variables.html#statvar_Select_range)状态变量，但特定于语句。
- en: '`SELECT_RANGE_CHECK`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT_RANGE_CHECK`'
- en: Like the [`Select_range_check`](server-status-variables.html#statvar_Select_range_check)
    status variable, but specific to the statement.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于[`Select_range_check`](server-status-variables.html#statvar_Select_range_check)状态变量，但特定于语句。
- en: '`SELECT_SCAN`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT_SCAN`'
- en: Like the [`Select_scan`](server-status-variables.html#statvar_Select_scan) status
    variable, but specific to the statement.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于[`Select_scan`](server-status-variables.html#statvar_Select_scan)状态变量，但特定于语句。
- en: '`SORT_MERGE_PASSES`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SORT_MERGE_PASSES`'
- en: Like the [`Sort_merge_passes`](server-status-variables.html#statvar_Sort_merge_passes)
    status variable, but specific to the statement.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于 [`Sort_merge_passes`](server-status-variables.html#statvar_Sort_merge_passes)
    状态变量，但特定于语句。
- en: '`SORT_RANGE`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SORT_RANGE`'
- en: Like the [`Sort_range`](server-status-variables.html#statvar_Sort_range) status
    variable, but specific to the statement.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于 [`Sort_range`](server-status-variables.html#statvar_Sort_range) 状态变量，但特定于语句。
- en: '`SORT_ROWS`'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SORT_ROWS`'
- en: Like the [`Sort_rows`](server-status-variables.html#statvar_Sort_rows) status
    variable, but specific to the statement.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于 [`Sort_rows`](server-status-variables.html#statvar_Sort_rows) 状态变量，但特定于语句。
- en: '`SORT_SCAN`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SORT_SCAN`'
- en: Like the [`Sort_scan`](server-status-variables.html#statvar_Sort_scan) status
    variable, but specific to the statement.
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于 [`Sort_scan`](server-status-variables.html#statvar_Sort_scan) 状态变量，但特定于语句。
- en: '`NO_INDEX_USED`'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NO_INDEX_USED`'
- en: 1 if the statement performed a table scan without using an index, 0 otherwise.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果语句执行了不使用索引的表扫描，则为 1，否则为 0。
- en: '`NO_GOOD_INDEX_USED`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NO_GOOD_INDEX_USED`'
- en: 1 if the server found no good index to use for the statement, 0 otherwise. For
    additional information, see the description of the `Extra` column from `EXPLAIN`
    output for the `Range checked for each record` value in [Section 10.8.2, “EXPLAIN
    Output Format”](explain-output.html "10.8.2 EXPLAIN Output Format").
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果服务器找不到适合语句的好索引，则为 1，否则为 0。有关更多信息，请参见 [第 10.8.2 节，“EXPLAIN 输出格式”](explain-output.html
    "10.8.2 EXPLAIN 输出格式") 中 `EXPLAIN` 输出的 `Range checked for each record` 值的 `Extra`
    列描述。
- en: '`NESTING_EVENT_ID`, `NESTING_EVENT_TYPE`, `NESTING_EVENT_LEVEL`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NESTING_EVENT_ID`、`NESTING_EVENT_TYPE`、`NESTING_EVENT_LEVEL`'
- en: These three columns are used with other columns to provide information as follows
    for top-level (unnested) statements and nested statements (executed within a stored
    program).
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这三列与其他列一起用于为顶层（非嵌套）语句和嵌套语句（在存储过程中执行）提供以下信息。
- en: 'For top level statements:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于顶层语句：
- en: '[PRE0]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For nested statements:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于嵌套语句：
- en: '[PRE1]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`STATEMENT_ID`'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`STATEMENT_ID`'
- en: The query ID maintained by the server at the SQL level. The value is unique
    for the server instance because these IDs are generated using a global counter
    that is incremented atomically. This column was added in MySQL 8.0.14.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器在 SQL 级别维护的查询 ID。该值对于服务器实例是唯一的，因为这些 ID 是使用原子递增的全局计数器生成的。该列在 MySQL 8.0.14
    中添加。
- en: '`CPU_TIME`'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CPU_TIME`'
- en: The time spent on CPU for the current thread, expressed in picoseconds. This
    column was added in MySQL 8.0.28.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当前线程在 CPU 上花费的时间，以皮秒表示。该列在 MySQL 8.0.28 中添加。
- en: '`MAX_CONTROLLED_MEMORY`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MAX_CONTROLLED_MEMORY`'
- en: Reports the maximum amount of controlled memory used by a statement during execution.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 报告语句在执行过程中使用的最大受控内存量。
- en: This column was added in MySQL 8.0.31.
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该列在 MySQL 8.0.31 中添加。
- en: '`MAX_TOTAL_MEMORY`'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MAX_TOTAL_MEMORY`'
- en: Reports the maximum amount of memory used by a statement during execution.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 报告语句在执行过程中使用的最大内存量。
- en: This column was added in MySQL 8.0.31.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该列在 MySQL 8.0.31 中添加。
- en: '`EXECUTION_ENGINE`'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EXECUTION_ENGINE`'
- en: The query execution engine. The value is either `PRIMARY` or `SECONDARY`. For
    use with MySQL HeatWave Service and HeatWave, where the `PRIMARY` engine is `InnoDB`
    and the `SECONDARY` engine is HeatWave (`RAPID`). For MySQL Community Edition
    Server, MySQL Enterprise Edition Server (on-premise), and MySQL HeatWave Service
    without HeatWave, the value is always `PRIMARY`. This column was added in MySQL
    8.0.29.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查询执行引擎。该值为 `PRIMARY` 或 `SECONDARY`。用于 MySQL HeatWave 服务和 HeatWave，其中 `PRIMARY`
    引擎为 `InnoDB`，`SECONDARY` 引擎为 HeatWave（`RAPID`）。对于 MySQL Community Edition Server、MySQL
    Enterprise Edition Server（本地）和没有 HeatWave 的 MySQL HeatWave 服务，该值始终为 `PRIMARY`。该列在
    MySQL 8.0.29 中添加。
- en: 'The [`events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 The events_statements_current Table") table has these indexes:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[`events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 events_statements_current 表") 表具有以下索引：'
- en: Primary key on (`THREAD_ID`, `EVENT_ID`)
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主键为 (`THREAD_ID`, `EVENT_ID`)。
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    is permitted for the [`events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 The events_statements_current Table") table. It removes the rows.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE 语句") 允许用于 [`events_statements_current`](performance-schema-events-statements-current-table.html
    "29.12.6.1 events_statements_current 表") 表。它会删除行。'
