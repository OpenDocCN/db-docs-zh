- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/packet-too-large.html](https://dev.mysql.com/doc/refman/8.0/en/packet-too-large.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/packet-too-large.html](https://dev.mysql.com/doc/refman/8.0/en/packet-too-large.html)
- en: B.3.2.8 Packet Too Large
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: B.3.2.8 Packet Too Large
- en: A communication packet is a single SQL statement sent to the MySQL server, a
    single row that is sent to the client, or a binary log event sent from a replication
    source server to a replica.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 通信数据包是发送到MySQL服务器的单个SQL语句，发送到客户端的单个行，或从复制源服务器发送到副本的二进制日志事件。
- en: The largest possible packet that can be transmitted to or from a MySQL 8.0 server
    or client is 1GB.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 可以传输到MySQL 8.0服务器或客户端的最大可能数据包为1GB。
- en: When a MySQL client or the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL
    Server") server receives a packet bigger than [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    bytes, it issues an [`ER_NET_PACKET_TOO_LARGE`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_net_packet_too_large)
    error and closes the connection. With some clients, you may also get a `Lost connection
    to MySQL server during query` error if the communication packet is too large.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当MySQL客户端或[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")服务器接收到大于[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)字节的数据包时，会发出[`ER_NET_PACKET_TOO_LARGE`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_net_packet_too_large)错误并关闭连接。如果通信数据包过大，有些客户端还可能会出现`Lost
    connection to MySQL server during query`错误。
- en: Both the client and the server have their own [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    variable, so if you want to handle big packets, you must increase this variable
    both in the client and in the server.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端和服务器都有自己的[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)变量，因此如果要处理大数据包，必须在客户端和服务器中都增加此变量。
- en: 'If you are using the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") client program, its default [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    variable is 16MB. To set a larger value, start [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") like this:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")客户端程序，其默认[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)变量为16MB。要设置更大的值，请像这样启动[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: That sets the packet size to 32MB.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这将数据包大小设置为32MB。
- en: 'The server''s default [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)
    value is 64MB. You can increase this if the server needs to handle big queries
    (for example, if you are working with big [`BLOB`](blob.html "13.3.4 The BLOB
    and TEXT Types") columns). For example, to set the variable to 128MB, start the
    server like this:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器的默认[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)值为64MB。如果服务器需要处理大查询（例如，如果您正在使用大[`BLOB`](blob.html
    "13.3.4 The BLOB and TEXT Types")列），可以增加此值。例如，要将变量设置为128MB，请像这样启动服务器：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can also use an option file to set [`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet).
    For example, to set the size for the server to 128MB, add the following lines
    in an option file:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用选项文件来设置[`max_allowed_packet`](server-system-variables.html#sysvar_max_allowed_packet)。例如，要为服务器设置为128MB的大小，请在选项文件中添加以下行：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: It is safe to increase the value of this variable because the extra memory is
    allocated only when needed. For example, [**mysqld**](mysqld.html "6.3.1 mysqld
    — The MySQL Server") allocates more memory only when you issue a long query or
    when [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") must return a
    large result row. The small default value of the variable is a precaution to catch
    incorrect packets between the client and server and also to ensure that you do
    not run out of memory by using large packets accidentally.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 增加此变量的值是安全的，因为只有在需要时才分配额外的内存。例如，[**mysqld**](mysqld.html "6.3.1 mysqld — The
    MySQL Server")仅在发出长查询或[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")必须返回大结果行时才分配更多内存。变量的小默认值是为了捕获客户端和服务器之间的不正确数据包，并确保您不会因意外使用大数据包而耗尽内存。
- en: You can also get strange problems with large packets if you are using large
    [`BLOB`](blob.html "13.3.4 The BLOB and TEXT Types") values but have not given
    [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") access to enough memory
    to handle the query. If you suspect this is the case, try adding **ulimit -d 256000**
    to the beginning of the [**mysqld_safe**](mysqld-safe.html "6.3.2 mysqld_safe
    — MySQL Server Startup Script") script and restarting [**mysqld**](mysqld.html
    "6.3.1 mysqld — The MySQL Server").
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用大型[`BLOB`](blob.html "13.3.4 BLOB 和 TEXT 类型")值，但没有为[**mysqld**](mysqld.html
    "6.3.1 mysqld — MySQL 服务器")分配足够的内存来处理查询，也可能会遇到大数据包的奇怪问题。 如果您怀疑是这种情况，请尝试在[**mysqld_safe**](mysqld-safe.html
    "6.3.2 mysqld_safe — MySQL 服务器启动脚本")脚本的开头添加**ulimit -d 256000**，然后重新启动[**mysqld**](mysqld.html
    "6.3.1 mysqld — MySQL 服务器")。
