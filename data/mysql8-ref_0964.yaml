- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/derived-tables.html](https://dev.mysql.com/doc/refman/8.0/en/derived-tables.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/derived-tables.html](https://dev.mysql.com/doc/refman/8.0/en/derived-tables.html)
- en: 15.2.15.8 Derived Tables
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.2.15.8 派生表
- en: This section discusses general characteristics of derived tables. For information
    about lateral derived tables preceded by the `LATERAL` keyword, see [Section 15.2.15.9,
    “Lateral Derived Tables”](lateral-derived-tables.html "15.2.15.9 Lateral Derived
    Tables").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了派生表的一般特性。有关由`LATERAL`关键字引导的横向派生表的信息，请参见[Section 15.2.15.9，“横向派生表”](lateral-derived-tables.html
    "15.2.15.9 Lateral Derived Tables")。
- en: 'A derived table is an expression that generates a table within the scope of
    a query `FROM` clause. For example, a subquery in a [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement `FROM` clause is a derived table:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 派生表是在查询`FROM`子句的范围内生成表的表达式。例如，在[`SELECT`](select.html "15.2.13 SELECT Statement")语句的`FROM`子句中的子查询是一个派生表：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The [`JSON_TABLE()`](json-table-functions.html#function_json-table) function
    generates a table and provides another way to create a derived table:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`JSON_TABLE()`](json-table-functions.html#function_json-table)函数生成一个表，并提供了创建派生表的另一种方法：'
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The `[AS] *`tbl_name`*` clause is mandatory because every table in a `FROM`
    clause must have a name. Any columns in the derived table must have unique names.
    Alternatively, *`tbl_name`* may be followed by a parenthesized list of names for
    the derived table columns:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`[AS] *`tbl_name`*`子句是必需的，因为`FROM`子句中的每个表都必须有一个名称。派生表中的任何列必须具有唯一的名称。或者，*`tbl_name`*`后面可以跟着一个括号括起来的列名列表：'
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The number of column names must be the same as the number of table columns.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 列名的数量必须与表列的数量相同。
- en: 'For the sake of illustration, assume that you have this table:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明问题，假设您有这个表：
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here is how to use a subquery in the `FROM` clause, using the example table:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何在`FROM`子句中使用子查询，使用示例表：
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Result:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: '[PRE5]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here is another example: Suppose that you want to know the average of a set
    of sums for a grouped table. This does not work:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是另一个例子：假设您想知道一个分组表的一组求和的平均值。这不起作用：
- en: '[PRE6]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'However, this query provides the desired information:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个查询提供了所需的信息：
- en: '[PRE7]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Notice that the column name used within the subquery (`sum_column1`) is recognized
    in the outer query.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在子查询中使用的列名（`sum_column1`）在外部查询中被识别。
- en: 'The column names for a derived table come from its select list:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 派生表的列名来自其选择列表：
- en: '[PRE8]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To provide column names explicitly, follow the derived table name with a parenthesized
    list of column names:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要明确提供列名，请在派生表名称后面跟着一个括号括起来的列名列表：
- en: '[PRE9]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: A derived table can return a scalar, column, row, or table.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 派生表可以返回标量、列、行或表。
- en: 'Derived tables are subject to these restrictions:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 派生表受到以下限制：
- en: A derived table cannot contain references to other tables of the same [`SELECT`](select.html
    "15.2.13 SELECT Statement") (use a `LATERAL` derived table for that; see [Section 15.2.15.9,
    “Lateral Derived Tables”](lateral-derived-tables.html "15.2.15.9 Lateral Derived
    Tables")).
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 派生表不能包含对同一[`SELECT`](select.html "15.2.13 SELECT Statement")的其他表的引用（使用`LATERAL`派生表进行处理；请参见[Section 15.2.15.9，“横向派生表”](lateral-derived-tables.html
    "15.2.15.9 Lateral Derived Tables")）。
- en: 'Prior to MySQL 8.0.14, a derived table cannot contain outer references. This
    is a MySQL restriction that is lifted in MySQL 8.0.14, not a restriction of the
    SQL standard. For example, the derived table `dt` in the following query contains
    a reference `t1.b` to the table `t1` in the outer query:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.14之前，派生表不能包含外部引用。这是MySQL在MySQL 8.0.14中解除的限制，而不是SQL标准的限制。例如，以下查询中的派生表`dt`包含对外部查询中表`t1`的引用`t1.b`：
- en: '[PRE10]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The query is valid in MySQL 8.0.14 and higher. Before 8.0.14, it produces an
    error: `Unknown column ''t1.b'' in ''where clause''`'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该查询在MySQL 8.0.14及更高版本中有效。在8.0.14之前，它会产生一个错误：`Unknown column 't1.b' in 'where
    clause'`
- en: The optimizer determines information about derived tables in such a way that
    [`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement") does not need to materialize
    them. See [Section 10.2.2.4, “Optimizing Derived Tables, View References, and
    Common Table Expressions with Merging or Materialization”](derived-table-optimization.html
    "10.2.2.4 Optimizing Derived Tables, View References, and Common Table Expressions
    with Merging or Materialization").
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 优化器以一种不需要将派生表实例化的方式确定有关派生表的信息，因此[`EXPLAIN`](explain.html "15.8.2 EXPLAIN Statement")不需要将其实例化。请参见[Section 10.2.2.4，“使用合并或实例化优化派生表、视图引用和通用表达式”](derived-table-optimization.html
    "10.2.2.4 Optimizing Derived Tables, View References, and Common Table Expressions
    with Merging or Materialization")。
- en: 'It is possible under certain circumstances that using [`EXPLAIN SELECT`](explain.html
    "15.8.2 EXPLAIN Statement") modifies table data. This can occur if the outer query
    accesses any tables and an inner query invokes a stored function that changes
    one or more rows of a table. Suppose that there are two tables `t1` and `t2` in
    database `d1`, and a stored function `f1` that modifies `t2`, created as shown
    here:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，使用[`EXPLAIN SELECT`](explain.html "15.8.2 EXPLAIN Statement")可能会修改表数据。如果外部查询访问任何表，并且内部查询调用修改表中一个或多个行的存储函数，则可能会发生这种情况。假设数据库`d1`中有两个表`t1`和`t2`，以及一个修改`t2`的存储函数`f1`，创建如下所示：
- en: '[PRE11]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Referencing the function directly in an [`EXPLAIN SELECT`](explain.html "15.8.2 EXPLAIN
    Statement") has no effect on `t2`, as shown here:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 直接在[`EXPLAIN SELECT`](explain.html "15.8.2 EXPLAIN Statement")中引用函数对`t2`没有影响，如下所示：
- en: '[PRE12]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This is because the [`SELECT`](select.html "15.2.13 SELECT Statement") statement
    did not reference any tables, as can be seen in the `table` and `Extra` columns
    of the output. This is also true of the following nested [`SELECT`](select.html
    "15.2.13 SELECT Statement"):'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为[`SELECT`](select.html "15.2.13 SELECT Statement")语句没有引用任何表，可以在输出的`table`和`Extra`列中看到。这也适用于以下嵌套的[`SELECT`](select.html
    "15.2.13 SELECT Statement")：
- en: '[PRE13]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'However, if the outer [`SELECT`](select.html "15.2.13 SELECT Statement") references
    any tables, the optimizer executes the statement in the subquery as well, with
    the result that `t2` is modified:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果外部[`SELECT`](select.html "15.2.13 SELECT Statement")引用任何表，优化器也会执行子查询中的语句，结果导致`t2`被修改：
- en: '[PRE14]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The derived table optimization can also be employed with many correlated (scalar)
    subqueries (MySQL 8.0.24 and later). For more information and examples, see [Section 15.2.15.7,
    “Correlated Subqueries”](correlated-subqueries.html "15.2.15.7 Correlated Subqueries").
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 衍生表优化也可以与许多相关的（标量）子查询一起使用（MySQL 8.0.24及更高版本）。有关更多信息和示例，请参见[第15.2.15.7节，“相关子查询”](correlated-subqueries.html
    "15.2.15.7 Correlated Subqueries")。
