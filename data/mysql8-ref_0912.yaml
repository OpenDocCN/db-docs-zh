- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-table-check-constraints.html](https://dev.mysql.com/doc/refman/8.0/en/create-table-check-constraints.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-table-check-constraints.html](https://dev.mysql.com/doc/refman/8.0/en/create-table-check-constraints.html)
- en: 15.1.20.6 CHECK Constraints
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 15.1.20.6 CHECK约束
- en: 'Prior to MySQL 8.0.16, [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement") permits only the following limited version of table `CHECK` constraint
    syntax, which is parsed and ignored:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.16之前，[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")仅允许以下有限版本的表`CHECK`约束语法，该语法被解析并忽略：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As of MySQL 8.0.16, [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement") permits the core features of table and column `CHECK` constraints,
    for all storage engines. [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement") permits the following `CHECK` constraint syntax, for both table constraints
    and column constraints:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.16，[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")允许所有存储引擎的表和列`CHECK`约束的核心特性。[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")允许以下`CHECK`约束语法，适用于表约束和列约束：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The optional *`symbol`* specifies a name for the constraint. If omitted, MySQL
    generates a name from the table name, a literal `_chk_`, and an ordinal number
    (1, 2, 3, ...). Constraint names have a maximum length of 64 characters. They
    are case-sensitive, but not accent-sensitive.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的*`symbol`*指定了约束的名称。如果省略，MySQL会从表名、字面量`_chk_`和一个序号（1、2、3、...）生成一个名称。约束名称最长为64个字符。它们区分大小写，但不区分重音符号。
- en: '*`expr`* specifies the constraint condition as a boolean expression that must
    evaluate to `TRUE` or `UNKNOWN` (for `NULL` values) for each row of the table.
    If the condition evaluates to `FALSE`, it fails and a constraint violation occurs.
    The effect of a violation depends on the statement being executed, as described
    later in this section.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*`expr`*指定约束条件为一个布尔表达式，每行必须评估为`TRUE`或`UNKNOWN`（对于`NULL`值）。如果条件评估为`FALSE`，则失败并发生约束违反。违反的效果取决于正在执行的语句，如本节后面所述。'
- en: 'The optional enforcement clause indicates whether the constraint is enforced:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的强制执行子句指示约束是否被执行：
- en: If omitted or specified as `ENFORCED`, the constraint is created and enforced.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果省略或指定为`ENFORCED`，则创建并执行约束。
- en: If specified as `NOT ENFORCED`, the constraint is created but not enforced.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果指定为`NOT ENFORCED`，则创建约束但不执行。
- en: 'A `CHECK` constraint is specified as either a table constraint or column constraint:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`CHECK`约束可以指定为表约束或列约束：'
- en: A table constraint does not appear within a column definition and can refer
    to any table column or columns. Forward references are permitted to columns appearing
    later in the table definition.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表约束不出现在列定义中，可以引用任何表列或列。允许对稍后出现在表定义中的列进行前向引用。
- en: A column constraint appears within a column definition and can refer only to
    that column.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列约束出现在列定义中，只能引用该列。
- en: 'Consider this table definition:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑这个表定义：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The definition includes table constraints and column constraints, in named
    and unnamed formats:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 定义包括命名和未命名格式的表约束和列约束：
- en: 'The first constraint is a table constraint: It occurs outside any column definition,
    so it can (and does) refer to multiple table columns. This constraint contains
    forward references to columns not defined yet. No constraint name is specified,
    so MySQL generates a name.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个约束��表约束：它出现在任何列定义之外，因此可以（并且确实）引用多个表列。此约束包含对尚未定义的列的前向引用。未指定约束名称，因此MySQL生成一个名称。
- en: 'The next three constraints are column constraints: Each occurs within a column
    definition, and thus can refer only to the column being defined. One of the constraints
    is named explicitly. MySQL generates a name for each of the other two.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来的三个约束是列约束：每个出现在列定义中，因此只能引用正在定义的列。其中一个约束明确命名。MySQL为另外两个生成名称。
- en: The last two constraints are table constraints. One of them is named explicitly.
    MySQL generates a name for the other one.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后两个约束是表约束。其中一个明确命名。MySQL为另一个生成一个名称。
- en: 'As mentioned, MySQL generates a name for any `CHECK` constraint specified without
    one. To see the names generated for the preceding table definition, use `SHOW
    CREATE TABLE`:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，MySQL为未指定名称的任何`CHECK`约束生成一个名称。要查看前述表定义生成的名称，请使用`SHOW CREATE TABLE`：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The SQL standard specifies that all types of constraints (primary key, unique
    index, foreign key, check) belong to the same namespace. In MySQL, each constraint
    type has its own namespace per schema (database). Consequently, `CHECK` constraint
    names must be unique per schema; no two tables in the same schema can share a
    `CHECK` constraint name. (Exception: A `TEMPORARY` table hides a non-`TEMPORARY`
    table of the same name, so it can have the same `CHECK` constraint names as well.)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: SQL标准规定所有类型的约束（主键，唯一索引，外键，检查）属于同一命名空间。在MySQL中，每种约束类型在每个模式（数据库）中都有自己的命名空间。因此，`CHECK`约束名称必须在每个模式中是唯一的；同一模式中的两个表不能共享`CHECK`约束名称。（例外情况：`TEMPORARY`表隐藏了同名的非`TEMPORARY`表，因此它也可以具有相同的`CHECK`约束名称。）
- en: Beginning generated constraint names with the table name helps ensure schema
    uniqueness because table names also must be unique within the schema.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以表名开头生成的约束名称有助于确保模式的唯一性，因为表名在模式内也必须是唯一的。
- en: '`CHECK` condition expressions must adhere to the following rules. An error
    occurs if an expression contains disallowed constructs.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`CHECK`条件表达式必须遵守以下规则。如果表达式包含不允许的结构，则会发生错误。'
- en: Nongenerated and generated columns are permitted, except columns with the `AUTO_INCREMENT`
    attribute and columns in other tables.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许非生成和生成列，除了具有`AUTO_INCREMENT`属性的列和其他表中的列。
- en: 'Literals, deterministic built-in functions, and operators are permitted. A
    function is deterministic if, given the same data in tables, multiple invocations
    produce the same result, independently of the connected user. Examples of functions
    that are nondeterministic and fail this definition: [`CONNECTION_ID()`](information-functions.html#function_connection-id),
    [`CURRENT_USER()`](information-functions.html#function_current-user), [`NOW()`](date-and-time-functions.html#function_now).'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许使用文字，确定性内置函数和运算符。如果给定表中的数据相同，则函数是确定性的，多次调用会产生相同的结果，与连接的用户无关。不符合此定义的函数的示例包括：[`CONNECTION_ID()`](information-functions.html#function_connection-id)，[`CURRENT_USER()`](information-functions.html#function_current-user)，[`NOW()`](date-and-time-functions.html#function_now)。
- en: Stored functions and loadable functions are not permitted.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许存储函数和可加载函数。
- en: Stored procedure and function parameters are not permitted.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许存储过程和函数参数。
- en: Variables (system variables, user-defined variables, and stored program local
    variables) are not permitted.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量（系统变量，用户定义变量和存储程序本地变量）是不允许的。
- en: Subqueries are not permitted.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许子查询。
- en: Foreign key referential actions (`ON UPDATE`, `ON DELETE`) are prohibited on
    columns used in `CHECK` constraints. Likewise, `CHECK` constraints are prohibited
    on columns used in foreign key referential actions.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 外键参照操作（`ON UPDATE`，`ON DELETE`）在用于`CHECK`约束的列上是被禁止的。同样，`CHECK`约束在用于外键参照操作的列上也是被禁止的。
- en: '`CHECK` constraints are evaluated for [`INSERT`](insert.html "15.2.7 INSERT
    Statement"), [`UPDATE`](update.html "15.2.17 UPDATE Statement"), [`REPLACE`](replace.html
    "15.2.12 REPLACE Statement"), [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement"),
    and [`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement") statements and an
    error occurs if a constraint evaluates to `FALSE`. If an error occurs, handling
    of changes already applied differs for transactional and nontransactional storage
    engines, and also depends on whether strict SQL mode is in effect, as described
    in [Strict SQL Mode](sql-mode.html#sql-mode-strict "Strict SQL Mode").'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`CHECK`约束会在[`INSERT`](insert.html "15.2.7 INSERT Statement")，[`UPDATE`](update.html
    "15.2.17 UPDATE Statement")，[`REPLACE`](replace.html "15.2.12 REPLACE Statement")，[`LOAD
    DATA`](load-data.html "15.2.9 LOAD DATA Statement")和[`LOAD XML`](load-xml.html
    "15.2.10 LOAD XML Statement")语句中进行评估，如果约束评估为`FALSE`，则会发生错误。如果发生错误，已应用更改的处理方式对于事务性和非事务性存储引擎有所不同，并且还取决于是否启用了严格的SQL模式，如[严格的SQL模式](sql-mode.html#sql-mode-strict
    "Strict SQL Mode")中所述。'
- en: '`CHECK` constraints are evaluated for [`INSERT IGNORE`](insert.html "15.2.7 INSERT
    Statement"), [`UPDATE IGNORE`](update.html "15.2.17 UPDATE Statement"), [`LOAD
    DATA ... IGNORE`](load-data.html "15.2.9 LOAD DATA Statement"), and [`LOAD XML
    ... IGNORE`](load-xml.html "15.2.10 LOAD XML Statement") statements and a warning
    occurs if a constraint evaluates to `FALSE`. The insert or update for any offending
    row is skipped.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`CHECK`约束会在[`INSERT IGNORE`](insert.html "15.2.7 INSERT Statement")，[`UPDATE
    IGNORE`](update.html "15.2.17 UPDATE Statement")，[`LOAD DATA ... IGNORE`](load-data.html
    "15.2.9 LOAD DATA Statement")和[`LOAD XML ... IGNORE`](load-xml.html "15.2.10 LOAD
    XML Statement")语句中进行评估，如果约束评估为`FALSE`，则会发出警告。对于任何违反约束的行，插入或更新将被跳过。'
- en: If the constraint expression evaluates to a data type that differs from the
    declared column type, implicit coercion to the declared type occurs according
    to the usual MySQL type-conversion rules. See [Section 14.3, “Type Conversion
    in Expression Evaluation”](type-conversion.html "14.3 Type Conversion in Expression
    Evaluation"). If type conversion fails or results in a loss of precision, an error
    occurs.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果约束表达式评估为与声明的列类型不同的数据类型，则根据通常的 MySQL 类型转换规则发生对声明类型的隐式强制转换。请参阅[第 14.3 节，“表达式评估中的类型转换”](type-conversion.html
    "14.3 类型转换在表达式评估中")。如果类型转换失败或导致精度丢失，则会发生错误。
- en: Note
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Constraint expression evaluation uses the SQL mode in effect at evaluation time.
    If any component of the expression depends on the SQL mode, different results
    may occur for different uses of the table unless the SQL mode is the same during
    all uses.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 约束表达式评估在评估时使用当前的 SQL 模式。如果表达式的任何组件依赖于 SQL 模式，则除非在所有使用期间 SQL 模式相同，否则对表的不同使用可能导致不同的结果。
- en: The Information Schema [`CHECK_CONSTRAINTS`](information-schema-check-constraints-table.html
    "28.3.5 The INFORMATION_SCHEMA CHECK_CONSTRAINTS Table") table provides information
    about `CHECK` constraints defined on tables. See [Section 28.3.5, “The INFORMATION_SCHEMA
    CHECK_CONSTRAINTS Table”](information-schema-check-constraints-table.html "28.3.5 The
    INFORMATION_SCHEMA CHECK_CONSTRAINTS Table").
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 信息模式[`CHECK_CONSTRAINTS`](information-schema-check-constraints-table.html "28.3.5
    INFORMATION_SCHEMA CHECK_CONSTRAINTS 表")表提供有关在表上定义的 `CHECK` 约束的信息。请参阅[第 28.3.5
    节，“INFORMATION_SCHEMA CHECK_CONSTRAINTS 表”](information-schema-check-constraints-table.html
    "28.3.5 INFORMATION_SCHEMA CHECK_CONSTRAINTS 表")。
