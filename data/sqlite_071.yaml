- en: SQLite Archiver
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQLite Archiver
- en: 原文：[https://www.sqlite.org/sqlar/](https://www.sqlite.org/sqlar/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.sqlite.org/sqlar/](https://www.sqlite.org/sqlar/)
- en: 'Documentation[Login](/sqlar/login)[☰](#)[Home](/sqlar/doc/trunk/README.md)
    [Timeline](/sqlar/timeline) [Files](/sqlar/dir?ci=tip) [Branches](/sqlar/brlist)
    [Tags](/sqlar/taglist) [Tickets](/sqlar/ticket) [Wiki](/sqlar/wiki) # SQLAR -
    SQLite Archiver'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '文档[登录](/sqlar/login)[☰](#)[主页](/sqlar/doc/trunk/README.md) [时间线](/sqlar/timeline)
    [文件](/sqlar/dir?ci=tip) [分支](/sqlar/brlist) [标签](/sqlar/taglist) [工单](/sqlar/ticket)
    [维基](/sqlar/wiki) # SQLAR - SQLite Archiver'
- en: This repository contains sources for the "SQLite Archiver" program. This program
    (named "sqlar") operates much like "zip", except that the compressed archive it
    builds is stored in an SQLite database instead of a ZIP archive.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此存储库包含“SQLite Archiver”程序的源代码。该程序（名为“sqlar”）的操作方式与“zip”类似，不同之处在于它构建的压缩归档存储在SQLite数据库中，而不是ZIP归档。
- en: The motivation for this is to see how much larger an SQLite database file is
    compared to a ZIP archive containing the same content. The answer depends on the
    filenames, but 2% seems to be a reasonable guess. In other words, storing files
    as compressed blobs in an SQLite database file results in a file that is only
    about 2% larger than storing those same files in a ZIP archive using the same
    compression.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的动机是看看与包含相同内容的ZIP归档相比，SQLite数据库文件会大多少。答案取决于文件名，但估计增大约为2%是一个合理的猜测。换句话说，将文件作为压缩的BLOB存储在SQLite数据库文件中，结果文件只比使用相同压缩的ZIP归档大约多出2%。
- en: Compiling
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编译
- en: On unix, just type "make". The SQLite sources are included. The zlib compression
    library is needed to build.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在Unix系统上，只需键入“make”。已包含SQLite源代码。构建需要zlib压缩库。
- en: Usage
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用法
- en: 'To create an archive:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个归档：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: All files named in FILES... will be added to the archive. If another file with
    the same name already exists in the archive, it is replaced. If any of the named
    FILES is a directory, that directory is scanned recursively.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所有在FILES中命名的文件将被添加到归档中。如果归档中已存在具有相同名称的其他文件，则将其替换。如果FILES中的任何一个是目录，则将递归扫描该目录。
- en: 'To see the contents of an archive:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看归档的内容：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To extract the contents of an archive:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要提取归档的内容：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If a FILES argument is provided, then only the named files are extracted. Without
    a FILES argument, all files are extracted.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了FILES参数，则仅提取命名的文件。如果没有FILES参数，则提取所有文件。
- en: 'All commands can be supplemented with -v for verbose output. For example:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所有命令都可以使用-v进行详细输出。例如：
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: File are normally compressed using zlib prior to being stored as BLOBs in the
    database. However, if the file is incompressible or if the -n option is used on
    the command-line, then the file is stored in the database exactly as it appears
    on disk, without compression.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 文件通常在存储为数据库中的BLOB之前使用zlib进行压缩。但是，如果文件是不可压缩的或者在命令行上使用了-n选项，则文件将按照磁盘上的实际内容存储在数据库中，而不进行压缩。
- en: Storage
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储
- en: 'The database schema looks like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库模式如下：
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Both directories and empty files have sqlar.sz==0\. Directories can be distinguished
    from empty files because directories have sqlar.data IS NULL. The file is compressed
    if length(sqlar.blob)<sqlar.sz and is stored as plaintext if length(sqlar.blob)==sqlar.sz.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 目录和空文件的 `sqlar.sz` 均为0。可以通过 `sqlar.data IS NULL` 区分目录和空文件。如果 `sqlar.blob` 的长度小于
    `sqlar.sz`，则文件已压缩；如果 `sqlar.blob` 的长度等于 `sqlar.sz`，则文件存储为纯文本。
- en: Symbolic links have sqlar.sz set to -1, and the link target stored as a text
    value in the sqlar.data field.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 符号链接的`sqlar.sz`设置为-1，链接目标存储在`sqlar.data`字段中。
- en: SQLAR uses the "zlib format" for compression. ZIP uses the raw deflate format.
    The difference is that the zlib format contains a two byte compression-type indentification
    header (0x78 0x9c) and a 4-byte checksum at the end. Thus the "data" for SQLAR
    is always 6 bytes larger than the equivalent data for ZIP. The SQLAR program uses
    the zlib format rather than the slightly smaller raw deflate format because that
    is what the [zlib documentation](https://www.zlib.net/manual.html) recommends.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAR 使用 "zlib 格式" 进行压缩。ZIP 使用原始 deflate 格式。区别在于，zlib 格式包含一个两字节的压缩类型识别标头（0x78
    0x9c）和一个 4 字节的校验和。因此，对于等效数据而言，SQLAR 的 "数据" 比 ZIP 多 6 字节。SQLAR 程序使用 zlib 格式，而不是稍微更小的原始
    deflate 格式，因为这是 [zlib 文档](https://www.zlib.net/manual.html) 推荐的。
- en: SQLAR might someday be extended to support additional compression formats other
    than deflate. If so, the data field will contain new header values to identify
    entries compressed using the new formats.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAR 未来可能会扩展以支持除 deflate 外的其他压缩格式。如果是这样，数据字段将包含新的标头值，用于识别使用新格式压缩的条目。
- en: Fuse Filesystem
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Fuse 文件系统
- en: An SQLite Archive file can be mounted as a [Fuse Filesystem](http://fuse.sourceforge.net)
    using the "sqlarfs" utility, including with this project.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 "sqlarfs" 实用程序将 SQLite 存档文件作为 [Fuse 文件系统](http://fuse.sourceforge.net)
    挂载，包括该项目。
- en: 'To build the "sqlarfs" utility, run:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建 "sqlarfs" 实用程序，请运行：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then to mount an SQLite archive as a filesystem, run:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 SQLite 存档挂载为文件系统，请运行：
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Replace ARCHIVE_NAME with the filename of the SQLite archive file to be mounted,
    of course. The -f option keeps sqlarfs running in the foreground, so that you
    can unmount the filesystem by simply pressing the interrupt key (usually Ctrl-C).
    This page was generated in about 0.004s by Fossil 2.25 [fc8d476aca] 2024-06-19
    18:26:12
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `ARCHIVE_NAME` 替换为要挂载的 SQLite 存档文件的文件名，当然了。`-f` 选项使得 `sqlarfs` 在前台运行，因此您可以通过简单地按中断键（通常是
    Ctrl-C）来卸载文件系统。此页面由 Fossil 2.25 [fc8d476aca] 2024-06-19 18:26:12 生成，用时约 0.004
    秒。
