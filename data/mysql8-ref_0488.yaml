- en: 9.3.2 Using Backups for Recovery
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9.3.2 使用备份进行恢复
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/recovery-from-backups.html](https://dev.mysql.com/doc/refman/8.0/en/recovery-from-backups.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/recovery-from-backups.html](https://dev.mysql.com/doc/refman/8.0/en/recovery-from-backups.html)
- en: 'Now, suppose that we have a catastrophic unexpected exit on Wednesday at 8
    a.m. that requires recovery from backups. To recover, first we restore the last
    full backup we have (the one from Sunday 1 p.m.). The full backup file is just
    a set of SQL statements, so restoring it is very easy:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我们在周三早上8点发生了灾难性的意外退出，需要从备份中恢复。为了恢复，首先我们恢复我们拥有的最后一个完整备份（即周日下午1点的备份）。完整备份文件只是一组SQL语句，因此恢复它非常容易：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'At this point, the data is restored to its state as of Sunday 1 p.m.. To restore
    the changes made since then, we must use the incremental backups; that is, the
    `gbichot2-bin.000007` and `gbichot2-bin.000008` binary log files. Fetch the files
    if necessary from where they were backed up, and then process their contents like
    this:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，数据已恢复到周日下午1点的状态。要恢复自那时以来所做的更改，我们必须使用增量备份；也就是说，`gbichot2-bin.000007`和`gbichot2-bin.000008`二进制日志文件。如有必要，从备份位置获取文件，然后像这样处理它们的内容：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We now have recovered the data to its state as of Tuesday 1 p.m., but still
    are missing the changes from that date to the date of the crash. To not lose them,
    we would have needed to have the MySQL server store its MySQL binary logs into
    a safe location (RAID disks, SAN, ...) different from the place where it stores
    its data files, so that these logs were not on the destroyed disk. (That is, we
    can start the server with a [`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)
    option that specifies a location on a different physical device from the one on
    which the data directory resides. That way, the logs are safe even if the device
    containing the directory is lost.) If we had done this, we would have the `gbichot2-bin.000009`
    file (and any subsequent files) at hand, and we could apply them using [**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — Utility for Processing Binary Log Files") and [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") to restore the most recent data
    changes with no loss up to the moment of the crash:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已将数据恢复到周二下午1点的状态，但仍然缺少从那天到崩溃日期的更改。为了不丢失它们，我们需要让MySQL服务器将其MySQL二进制日志存储到一个安全位置（RAID磁盘，SAN，...），与存储数据文件的位置不同，以便这些日志不在被破坏的磁盘上。（也就是说，我们可以使用[`--log-bin`](replication-options-binary-log.html#option_mysqld_log-bin)选项启动服务器，指定一个与数据目录所在的物理设备不同的位置。这样，即使包含目录的设备丢失，日志也是安全的。）如果我们这样做了，我们将手头上有`gbichot2-bin.000009`文件（以及任何后续文件），我们可以使用[**mysqlbinlog**](mysqlbinlog.html
    "6.6.9 mysqlbinlog — Utility for Processing Binary Log Files")和[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")应用它们，恢复最近的数据更改，直到崩溃时刻，而无需丢失：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For more information about using [**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog
    — Utility for Processing Binary Log Files") to process binary log files, see [Section 9.5,
    “Point-in-Time (Incremental) Recovery”](point-in-time-recovery.html "9.5 Point-in-Time
    (Incremental) Recovery").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有关使用[**mysqlbinlog**](mysqlbinlog.html "6.6.9 mysqlbinlog — Utility for Processing
    Binary Log Files")处理二进制日志文件的更多信息，请参阅[第9.5节，“时间点（增量）恢复”](point-in-time-recovery.html
    "9.5 Point-in-Time (Incremental) Recovery")。
