- en: 5.6.9 Using AUTO_INCREMENT
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5.6.9 使用AUTO_INCREMENT
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/example-auto-increment.html](https://dev.mysql.com/doc/refman/8.0/en/example-auto-increment.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/example-auto-increment.html](https://dev.mysql.com/doc/refman/8.0/en/example-auto-increment.html)
- en: 'The `AUTO_INCREMENT` attribute can be used to generate a unique identity for
    new rows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`AUTO_INCREMENT`属性可用于为新行生成唯一标识：'
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Which returns:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'No value was specified for the `AUTO_INCREMENT` column, so MySQL assigned sequence
    numbers automatically. You can also explicitly assign 0 to the column to generate
    sequence numbers, unless the [`NO_AUTO_VALUE_ON_ZERO`](sql-mode.html#sqlmode_no_auto_value_on_zero)
    SQL mode is enabled. For example:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 未为`AUTO_INCREMENT`列指定值，因此MySQL会自动分配序列号。您也可以显式地将0分配给该列以生成序列号，除非启用了[`NO_AUTO_VALUE_ON_ZERO`](sql-mode.html#sqlmode_no_auto_value_on_zero)
    SQL 模式。例如：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If the column is declared `NOT NULL`, it is also possible to assign `NULL`
    to the column to generate sequence numbers. For example:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列声明为`NOT NULL`，也可以将`NULL`分配给该列以生成序列号。例如：
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When you insert any other value into an `AUTO_INCREMENT` column, the column
    is set to that value and the sequence is reset so that the next automatically
    generated value follows sequentially from the largest column value. For example:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当您向`AUTO_INCREMENT`列插入任何其他值时，该列将设置为该值，并且序列将被重置，以便下一个自动生成的值从最大列值顺序生成。例如：
- en: '[PRE4]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Updating an existing `AUTO_INCREMENT` column value also resets the `AUTO_INCREMENT`
    sequence.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 更新现有的`AUTO_INCREMENT`列值也会重置`AUTO_INCREMENT`序列。
- en: You can retrieve the most recent automatically generated `AUTO_INCREMENT` value
    with the [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    SQL function or the [`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html)
    C API function. These functions are connection-specific, so their return values
    are not affected by another connection which is also performing inserts.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    SQL 函数或[`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html) C API 函数检索最近自动生成的`AUTO_INCREMENT`值。这些函数是特定于连接的，因此它们的返回值不受另一个执行插入操作的连接的影响。
- en: Use the smallest integer data type for the `AUTO_INCREMENT` column that is large
    enough to hold the maximum sequence value you require. When the column reaches
    the upper limit of the data type, the next attempt to generate a sequence number
    fails. Use the `UNSIGNED` attribute if possible to allow a greater range. For
    example, if you use [`TINYINT`](integer-types.html "13.1.2 Integer Types (Exact
    Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT"), the maximum permissible
    sequence number is 127\. For [`TINYINT UNSIGNED`](integer-types.html "13.1.2 Integer
    Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT"), the
    maximum is 255\. See [Section 13.1.2, “Integer Types (Exact Value) - INTEGER,
    INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT”](integer-types.html "13.1.2 Integer
    Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT") for
    the ranges of all the integer types.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`AUTO_INCREMENT`列，请使用足够大以容纳所需最大序列值的最小整数数据类型。当列达到数据类型的上限时，下一次尝试生成序列号将失败。如果可能的话，请使用`UNSIGNED`属性以允许更大的范围。例如，如果使用[`TINYINT`](integer-types.html
    "13.1.2 Integer Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT,
    BIGINT")，则最大允许的序列号为127。对于[`TINYINT UNSIGNED`](integer-types.html "13.1.2 Integer
    Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT")，最大值为255。请参阅[第13.1.2节，“整数类型（精确值）
    - INTEGER、INT、SMALLINT、TINYINT、MEDIUMINT、BIGINT”](integer-types.html "13.1.2 Integer
    Types (Exact Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT")以获取所有整数类型的范围。
- en: Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For a multiple-row insert, [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    and [`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html) actually return
    the `AUTO_INCREMENT` key from the *first* of the inserted rows. This enables multiple-row
    inserts to be reproduced correctly on other servers in a replication setup.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多行插入，[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    和 [`mysql_insert_id()`](/doc/c-api/8.0/en/mysql-insert-id.html) 实际上返回插入行中*第一个*的`AUTO_INCREMENT`键。这使得可以在复制设置中的其他服务器上正确重现多行插入。
- en: 'To start with an `AUTO_INCREMENT` value other than 1, set that value with [`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") or [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement"), like this:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要从1开始的`AUTO_INCREMENT`值，可以使用[`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") 或 [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    设置该值，如下所示：
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: InnoDB Notes
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: InnoDB 注意事项
- en: For information about `AUTO_INCREMENT` usage specific to `InnoDB`, see [Section 17.6.1.6,
    “AUTO_INCREMENT Handling in InnoDB”](innodb-auto-increment-handling.html "17.6.1.6 AUTO_INCREMENT
    Handling in InnoDB").
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有关特定于`InnoDB`的`AUTO_INCREMENT`用法的信息，请参阅[第17.6.1.6节，“InnoDB中的AUTO_INCREMENT处理”](innodb-auto-increment-handling.html
    "17.6.1.6 InnoDB中的AUTO_INCREMENT处理")。
- en: MyISAM Notes
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: MyISAM注意事项
- en: For `MyISAM` tables, you can specify `AUTO_INCREMENT` on a secondary column
    in a multiple-column index. In this case, the generated value for the `AUTO_INCREMENT`
    column is calculated as [`MAX(*`auto_increment_column`*) + 1 WHERE prefix=*`given-prefix`*`](aggregate-functions.html#function_max).
    This is useful when you want to put data into ordered groups.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于`MyISAM`表，您可以在多列索引中的辅助列上指定`AUTO_INCREMENT`。在这种情况下，`AUTO_INCREMENT`列的生成值计算为[`MAX(*auto_increment_column*)
    + 1 WHERE prefix=*given-prefix*`](aggregate-functions.html#function_max)。当您想要将数据放入有序组时，这是很有用的。
- en: '[PRE6]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Which returns:'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：
- en: '[PRE7]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In this case (when the `AUTO_INCREMENT` column is part of a multiple-column
    index), `AUTO_INCREMENT` values are reused if you delete the row with the biggest
    `AUTO_INCREMENT` value in any group. This happens even for `MyISAM` tables, for
    which `AUTO_INCREMENT` values normally are not reused.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下（当`AUTO_INCREMENT`列是多列索引的一部分时），如果删除任何组中具有最大`AUTO_INCREMENT`值的行，则`AUTO_INCREMENT`值将被重用。即使对于通常不会重用`AUTO_INCREMENT`值的`MyISAM`表也是如此。
- en: If the `AUTO_INCREMENT` column is part of multiple indexes, MySQL generates
    sequence values using the index that begins with the `AUTO_INCREMENT` column,
    if there is one. For example, if the `animals` table contained indexes `PRIMARY
    KEY (grp, id)` and `INDEX (id)`, MySQL would ignore the `PRIMARY KEY` for generating
    sequence values. As a result, the table would contain a single sequence, not a
    sequence per `grp` value.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`AUTO_INCREMENT`列是多个索引的一部分，MySQL会使用以`AUTO_INCREMENT`列开头的索引生成序列值（如果有的话）。例如，如果`animals`表包含索引`PRIMARY
    KEY (grp, id)`和`INDEX (id)`，MySQL会忽略`PRIMARY KEY`来生成序列值。因此，表中将包含一个单一序列，而不是每个`grp`值一个序列。
- en: Further Reading
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'More information about `AUTO_INCREMENT` is available here:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`AUTO_INCREMENT`的更多信息，请参阅此��：
- en: 'How to assign the `AUTO_INCREMENT` attribute to a column: [Section 15.1.20,
    “CREATE TABLE Statement”](create-table.html "15.1.20 CREATE TABLE Statement"),
    and [Section 15.1.9, “ALTER TABLE Statement”](alter-table.html "15.1.9 ALTER TABLE
    Statement").'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将`AUTO_INCREMENT`属性分配给列：[第15.1.20节，“CREATE TABLE语句”](create-table.html "15.1.20
    CREATE TABLE语句")和[第15.1.9节，“ALTER TABLE语句”](alter-table.html "15.1.9 ALTER TABLE语句")。
- en: 'How `AUTO_INCREMENT` behaves depending on the [`NO_AUTO_VALUE_ON_ZERO`](sql-mode.html#sqlmode_no_auto_value_on_zero)
    SQL mode: [Section 7.1.11, “Server SQL Modes”](sql-mode.html "7.1.11 Server SQL
    Modes").'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据[`NO_AUTO_VALUE_ON_ZERO`](sql-mode.html#sqlmode_no_auto_value_on_zero) SQL模式，`AUTO_INCREMENT`的行为如何：[第7.1.11节，“服务器SQL模式”](sql-mode.html
    "7.1.11 服务器SQL模式")。
- en: 'How to use the [`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)
    function to find the row that contains the most recent `AUTO_INCREMENT` value:
    [Section 14.15, “Information Functions”](information-functions.html "14.15 Information
    Functions").'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用[`LAST_INSERT_ID()`](information-functions.html#function_last-insert-id)函数找到包含最新`AUTO_INCREMENT`值的行：[第14.15节，“信息函数”](information-functions.html
    "14.15 信息函数")。
- en: 'Setting the `AUTO_INCREMENT` value to be used: [Section 7.1.8, “Server System
    Variables”](server-system-variables.html "7.1.8 Server System Variables").'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置要使用的`AUTO_INCREMENT`值：[第7.1.8节，“服务器系统变量”](server-system-variables.html "7.1.8
    服务器系统变量")。
- en: '[Section 17.6.1.6, “AUTO_INCREMENT Handling in InnoDB”](innodb-auto-increment-handling.html
    "17.6.1.6 AUTO_INCREMENT Handling in InnoDB")'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第17.6.1.6节，“InnoDB中的AUTO_INCREMENT处理”](innodb-auto-increment-handling.html
    "17.6.1.6 InnoDB中的AUTO_INCREMENT处理")'
- en: '`AUTO_INCREMENT` and replication: [Section 19.5.1.1, “Replication and AUTO_INCREMENT”](replication-features-auto-increment.html
    "19.5.1.1 Replication and AUTO_INCREMENT").'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AUTO_INCREMENT`和复制：[第19.5.1.1节，“复制和AUTO_INCREMENT”](replication-features-auto-increment.html
    "19.5.1.1 复制和AUTO_INCREMENT")。'
- en: 'Server-system variables related to `AUTO_INCREMENT` ([`auto_increment_increment`](replication-options-source.html#sysvar_auto_increment_increment)
    and [`auto_increment_offset`](replication-options-source.html#sysvar_auto_increment_offset))
    that can be used for replication: [Section 7.1.8, “Server System Variables”](server-system-variables.html
    "7.1.8 Server System Variables").'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与`AUTO_INCREMENT`相关的服务器系统变量（[`auto_increment_increment`](replication-options-source.html#sysvar_auto_increment_increment)和[`auto_increment_offset`](replication-options-source.html#sysvar_auto_increment_offset)）可用于复制：[第7.1.8节，“服务器系统变量”](server-system-variables.html
    "7.1.8 服务器系统变量")。
