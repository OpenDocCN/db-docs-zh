- en: 14.20.3 Window Function Frame Specification
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.20.3 窗口函数帧规范
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/window-functions-frames.html](https://dev.mysql.com/doc/refman/8.0/en/window-functions-frames.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/window-functions-frames.html](https://dev.mysql.com/doc/refman/8.0/en/window-functions-frames.html)
- en: The definition of a window used with a window function can include a frame clause.
    A frame is a subset of the current partition and the frame clause specifies how
    to define the subset.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与窗口函数一起使用的窗口的定义可以包括一个帧子句。帧是当前分区的子集，帧子句指定如何定义子集。
- en: 'Frames are determined with respect to the current row, which enables a frame
    to move within a partition depending on the location of the current row within
    its partition. Examples:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 帧是相对于当前行确定的，这使得帧可以根据当前行在其分区中的位置移动。例如：
- en: By defining a frame to be all rows from the partition start to the current row,
    you can compute running totals for each row.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将帧定义为从分区开始到当前行的所有行，您可以为每行计算累计总和。
- en: By defining a frame as extending *`N`* rows on either side of the current row,
    you can compute rolling averages.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将帧定义为在当前行的两侧扩展*`N`*行，您可以计算滚动平均值。
- en: 'The following query demonstrates the use of moving frames to compute running
    totals within each group of time-ordered `level` values, as well as rolling averages
    computed from the current row and the rows that immediately precede and follow
    it:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下查询演示了使用移动帧来计算每组时间排序的`level`值内的累计总和，以及从当前行和紧随其后的行计算的滚动平均值：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For the `running_average` column, there is no frame row preceding the first
    one or following the last. In these cases, [`AVG()`](aggregate-functions.html#function_avg)
    computes the average of the rows that are available.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`running_average`列，第一个和最后一个之后没有帧行。在这些情况下，[`AVG()`](aggregate-functions.html#function_avg)计算可用行的平均值。
- en: 'Aggregate functions used as window functions operate on rows in the current
    row frame, as do these nonaggregate window functions:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作为窗口函数使用的聚合函数在当前行帧上操作，这些非聚合窗口函数也是如此：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Standard SQL specifies that window functions that operate on the entire partition
    should have no frame clause. MySQL permits a frame clause for such functions but
    ignores it. These functions use the entire partition even if a frame is specified:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 标准SQL指定对整个分区操作的窗口函数不应具有帧子句。MySQL允许这些函数具有帧子句，但会忽略它。即使指定了帧，这些函数也使用整个分区：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The frame clause, if given, has this syntax:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了帧子句，则具有以下语法：
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the absence of a frame clause, the default frame depends on whether an `ORDER
    BY` clause is present, as described later in this section.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有帧子句的情况下，默认帧取决于是否存在`ORDER BY`子句，如本节后面所述。
- en: 'The *`frame_units`* value indicates the type of relationship between the current
    row and frame rows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*`frame_units`*值表示当前行与帧行之间的关系类型：'
- en: '`ROWS`: The frame is defined by beginning and ending row positions. Offsets
    are differences in row numbers from the current row number.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ROWS`: 帧由开始和结束行位置定义。偏移量是当前行号与行号之间的差异。'
- en: '`RANGE`: The frame is defined by rows within a value range. Offsets are differences
    in row values from the current row value.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RANGE`: 帧由值范围内的行定义。偏移量是当前行值与行值之间的差异。'
- en: 'The *`frame_extent`* value indicates the start and end points of the frame.
    You can specify just the start of the frame (in which case the current row is
    implicitly the end) or use `BETWEEN` to specify both frame endpoints:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*`frame_extent`*值表示帧的起始点和结束点。您可以仅指定帧的起始点（在这种情况下，当前行隐含为结束点），或使用`BETWEEN`指定帧的两个端点：'
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: With `BETWEEN` syntax, *`frame_start`* must not occur later than *`frame_end`*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`BETWEEN`语法，*`frame_start`*不能出现在*`frame_end`*之后。
- en: 'The permitted *`frame_start`* and *`frame_end`* values have these meanings:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 允许的*`frame_start`*和*`frame_end`*值具有以下含义：
- en: '`CURRENT ROW`: For `ROWS`, the bound is the current row. For `RANGE`, the bound
    is the peers of the current row.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CURRENT ROW`: 对于`ROWS`，边界是当前行。对于`RANGE`，边界是当前行的对等行。'
- en: '`UNBOUNDED PRECEDING`: The bound is the first partition row.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UNBOUNDED PRECEDING`: 边界是第一个分区行。'
- en: '`UNBOUNDED FOLLOWING`: The bound is the last partition row.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UNBOUNDED FOLLOWING`: 边界是最后一个分区行。'
- en: '`*`expr`* PRECEDING`: For `ROWS`, the bound is *`expr`* rows before the current
    row. For `RANGE`, the bound is the rows with values equal to the current row value
    minus *`expr`*; if the current row value is `NULL`, the bound is the peers of
    the row.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`expr`* PRECEDING`: 对于`ROWS`，边界是当前行之前的*`expr`*行。对于`RANGE`，边界是具有值等于当前行值减去*`expr`*的行；如果当前行值为`NULL`，则边界是该行的对等行。'
- en: For `*`expr`* PRECEDING` (and `*`expr`* FOLLOWING`), *`expr`* can be a `?` parameter
    marker (for use in a prepared statement), a nonnegative numeric literal, or a
    temporal interval of the form `INTERVAL *`val`* *`unit`*`. For `INTERVAL` expressions,
    *`val`* specifies nonnegative interval value, and *`unit`* is a keyword indicating
    the units in which the value should be interpreted. (For details about the permitted
    *`units`* specifiers, see the description of the [`DATE_ADD()`](date-and-time-functions.html#function_date-add)
    function in [Section 14.7, “Date and Time Functions”](date-and-time-functions.html
    "14.7 Date and Time Functions").)
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于`*`expr`* PRECEDING`（和`*`expr`* FOLLOWING`），*`expr`*可以是一个`?`参数标记（用于准备的语句中），一个非负数数字文字，或者形式为`INTERVAL
    *`val`* *`unit`*`的时间间隔。对于`INTERVAL`表达式，*`val`*指定非负的间隔值，*`unit`*是一个关键字，指示值应该以哪种单位解释。（有关允许的*`units`*说明符的详细信息，请参阅[第14.7节“日期和时间函数”](date-and-time-functions.html
    "14.7 日期和时间函数")中的[`DATE_ADD()`](date-and-time-functions.html#function_date-add)函数的描述。）
- en: '`RANGE` on a numeric or temporal *`expr`* requires `ORDER BY` on a numeric
    or temporal expression, respectively.'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在数字或时间*`expr`*上的`RANGE`需要在数字或时间表达式上使用`ORDER BY`。
- en: 'Examples of valid `*`expr`* PRECEDING` and `*`expr`* FOLLOWING` indicators:'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有效的`*`expr`* PRECEDING`和`*`expr`* FOLLOWING`指示的示例：
- en: '[PRE5]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`*`expr`* FOLLOWING`: For `ROWS`, the bound is *`expr`* rows after the current
    row. For `RANGE`, the bound is the rows with values equal to the current row value
    plus *`expr`*; if the current row value is `NULL`, the bound is the peers of the
    row.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*`expr`* FOLLOWING`: 对于`ROWS`，边界是当前行之后的*`expr`*行。对于`RANGE`，边界是具有值等于当前行值加上*`expr`*的行；如果当前行值为`NULL`，则边界是该行的对等行。'
- en: For permitted values of *`expr`*, see the description of `*`expr`* PRECEDING`.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于*`expr`*的允许值，请参阅`*`expr`* PRECEDING`的描述。
- en: 'The following query demonstrates [`FIRST_VALUE()`](window-function-descriptions.html#function_first-value),
    [`LAST_VALUE()`](window-function-descriptions.html#function_last-value), and two
    instances of [`NTH_VALUE()`](window-function-descriptions.html#function_nth-value):'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下查询演示了[`FIRST_VALUE()`](window-function-descriptions.html#function_first-value)，[`LAST_VALUE()`](window-function-descriptions.html#function_last-value)和两个[`NTH_VALUE()`](window-function-descriptions.html#function_nth-value)实例：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Each function uses the rows in the current frame, which, per the window definition
    shown, extends from the first partition row to the current row. For the [`NTH_VALUE()`](window-function-descriptions.html#function_nth-value)
    calls, the current frame does not always include the requested row; in such cases,
    the return value is `NULL`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 每个函数使用当前帧中的行，根据所示的窗口定义，该帧从第一个分区行延伸到当前行。对于[`NTH_VALUE()`](window-function-descriptions.html#function_nth-value)调用，当前帧并不总是包括请求的行；在这种情况下，返回值为`NULL`。
- en: 'In the absence of a frame clause, the default frame depends on whether an `ORDER
    BY` clause is present:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有帧子句的情况下，默认帧取决于是否存在`ORDER BY`子句：
- en: 'With `ORDER BY`: The default frame includes rows from the partition start through
    the current row, including all peers of the current row (rows equal to the current
    row according to the `ORDER BY` clause). The default is equivalent to this frame
    specification:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`ORDER BY`：默认帧包括从分区开始到当前行的所有行，包括当前行的所有对等行（根据`ORDER BY`子句与当前行相等的行）。默认等同于此帧规范：
- en: '[PRE7]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Without `ORDER BY`: The default frame includes all partition rows (because,
    without `ORDER BY`, all partition rows are peers). The default is equivalent to
    this frame specification:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有`ORDER BY`：默认帧包括所有分区行（因为没有`ORDER BY`，所有分区行都是对等的）。默认等同于此帧规范：
- en: '[PRE8]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Because the default frame differs depending on presence or absence of `ORDER
    BY`, adding `ORDER BY` to a query to get deterministic results may change the
    results. (For example, the values produced by [`SUM()`](aggregate-functions.html#function_sum)
    might change.) To obtain the same results but ordered per `ORDER BY`, provide
    an explicit frame specification to be used regardless of whether `ORDER BY` is
    present.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因为默认帧取决于是否存在`ORDER BY`，为了获得确定性结果，向查询添加`ORDER BY`可能会改变结果。（例如，[`SUM()`](aggregate-functions.html#function_sum)产生的值可能会改变。）为了获得相同的结果但按`ORDER
    BY`排序，提供一个明确的帧规范，无论是否存在`ORDER BY`都会使用。
- en: 'The meaning of a frame specification can be nonobvious when the current row
    value is `NULL`. Assuming that to be the case, these examples illustrate how various
    frame specifications apply:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当当前行值为`NULL`时，框架规范的含义可能不明显。假设是这种情况，以下示例说明了各种框架规范的应用：
- en: '`ORDER BY X ASC RANGE BETWEEN 10 FOLLOWING AND 15 FOLLOWING`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ORDER BY X ASC RANGE BETWEEN 10 FOLLOWING AND 15 FOLLOWING`'
- en: The frame starts at `NULL` and stops at `NULL`, thus includes only rows with
    value `NULL`.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 框架从`NULL`开始，止于`NULL`，因此只包括值为`NULL`的行。
- en: '`ORDER BY X ASC RANGE BETWEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ORDER BY X ASC RANGE BETWEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING`'
- en: The frame starts at `NULL` and stops at the end of the partition. Because an
    `ASC` sort puts `NULL` values first, the frame is the entire partition.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 框架从`NULL`开始，止于分区末尾。因为`ASC`排序将`NULL`值放在最前面，所以框架是整个分区。
- en: '`ORDER BY X DESC RANGE BETWEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ORDER BY X DESC RANGE BETWEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING`'
- en: The frame starts at `NULL` and stops at the end of the partition. Because a
    `DESC` sort puts `NULL` values last, the frame is only the `NULL` values.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 框架从`NULL`开始，止于分区末尾。因为`DESC`排序将`NULL`值放在最后，所以框架只包括`NULL`值。
- en: '`ORDER BY X ASC RANGE BETWEEN 10 PRECEDING AND UNBOUNDED FOLLOWING`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ORDER BY X ASC RANGE BETWEEN 10 PRECEDING AND UNBOUNDED FOLLOWING`'
- en: The frame starts at `NULL` and stops at the end of the partition. Because an
    `ASC` sort puts `NULL` values first, the frame is the entire partition.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 框架从`NULL`开始，止于分区末尾。因为`ASC`排序将`NULL`值放在最前面，所以框架是整个分区。
- en: '`ORDER BY X ASC RANGE BETWEEN 10 PRECEDING AND 10 FOLLOWING`'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ORDER BY X ASC RANGE BETWEEN 10 PRECEDING AND 10 FOLLOWING`'
- en: The frame starts at `NULL` and stops at `NULL`, thus includes only rows with
    value `NULL`.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 框架从`NULL`开始，止于`NULL`，因此只包括值为`NULL`的行。
- en: '`ORDER BY X ASC RANGE BETWEEN 10 PRECEDING AND 1 PRECEDING`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ORDER BY X ASC RANGE BETWEEN 10 PRECEDING AND 1 PRECEDING`'
- en: The frame starts at `NULL` and stops at `NULL`, thus includes only rows with
    value `NULL`.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 框架从`NULL`开始，止于`NULL`，因此只包括值为`NULL`的行。
- en: '`ORDER BY X ASC RANGE BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ORDER BY X ASC RANGE BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING`'
- en: The frame starts at the beginning of the partition and stops at rows with value
    `NULL`. Because an `ASC` sort puts `NULL` values first, the frame is only the
    `NULL` values.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 框架从分区开始，止于值为`NULL`的行。因为`ASC`排序将`NULL`值放在最前面，所以框架只包括`NULL`值。
