- en: 19.2.1 Replication Formats
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 19.2.1 复制格式
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-formats.html](https://dev.mysql.com/doc/refman/8.0/en/replication-formats.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-formats.html](https://dev.mysql.com/doc/refman/8.0/en/replication-formats.html)
- en: '[19.2.1.1 Advantages and Disadvantages of Statement-Based and Row-Based Replication](replication-sbr-rbr.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[19.2.1.1 基于语句和基于行的复制的优缺点](replication-sbr-rbr.html)'
- en: '[19.2.1.2 Usage of Row-Based Logging and Replication](replication-rbr-usage.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[19.2.1.2 基于行的日志记录和复制的用法](replication-rbr-usage.html)'
- en: '[19.2.1.3 Determination of Safe and Unsafe Statements in Binary Logging](replication-rbr-safe-unsafe.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[19.2.1.3 二进制日志记录中安全和不安全语句的确定](replication-rbr-safe-unsafe.html)'
- en: 'Replication works because events written to the binary log are read from the
    source and then processed on the replica. The events are recorded within the binary
    log in different formats according to the type of event. The different replication
    formats used correspond to the binary logging format used when the events were
    recorded in the source''s binary log. The correlation between binary logging formats
    and the terms used during replication are:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 复制工作是因为写入二进制日志的事件从源读取，然后在副本上处理。根据事件类型，事件以不同格式记录在二进制日志中。使用的不同复制格式对应于事件记录在源二进制日志中时使用的二进制日志格式。二进制日志格式和复制期间使用的术语之间的关联为：
- en: When using statement-based binary logging, the source writes SQL statements
    to the binary log. Replication of the source to the replica works by executing
    the SQL statements on the replica. This is called statement-based replication
    (which can be abbreviated as SBR), which corresponds to the MySQL statement-based
    binary logging format.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用基于语句的二进制日志记录时，源将SQL语句写入二进制日志。将源复制到副本的复制通过在副本上执行SQL语句来完成。这称为基于语句的复制（可以缩写为SBR），对应于MySQL基于语句的二进制日志记录格式。
- en: When using row-based logging, the source writes events to the binary log that
    indicate how individual table rows are changed. Replication of the source to the
    replica works by copying the events representing the changes to the table rows
    to the replica. This is called row-based replication (which can be abbreviated
    as RBR).
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用基于行的日志记录时，源将事件写入二进制日志，指示如何更改单个表行。将源复制到副本的复制通过复制表示更改的事件到副本的表行来完成。这称为基于行的复制（可以缩写为RBR）。
- en: Row-based logging is the default method.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 基于行的日志记录是默认方法。
- en: You can also configure MySQL to use a mix of both statement-based and row-based
    logging, depending on which is most appropriate for the change to be logged. This
    is called mixed-format logging. When using mixed-format logging, a statement-based
    log is used by default. Depending on certain statements, and also the storage
    engine being used, the log is automatically switched to row-based in particular
    cases. Replication using the mixed format is referred to as mixed-based replication
    or mixed-format replication. For more information, see [Section 7.4.4.3, “Mixed
    Binary Logging Format”](binary-log-mixed.html "7.4.4.3 Mixed Binary Logging Format").
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您还可以配置MySQL使用基于语句和基于行的混合日志记录，具体取决于要记录的更改哪种最合适。这称为混合格式日志记录。在使用混合格式日志记录时，默认使用基于语句的日志。根据某些语句以及使用的存储引擎，日志在特定情况下会自动切换为基于行。使用混合格式的复制称为混合基于复制或混合格式复制。有关更多信息，请参见[第7.4.4.3节“混合二进制日志记录格式”](binary-log-mixed.html
    "7.4.4.3 混合二进制日志记录格式")。
- en: '**NDB Cluster. ** The default binary logging format in MySQL NDB Cluster 8.0
    is `MIXED`. You should note that NDB Cluster Replication always uses row-based
    replication, and that the [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") storage engine is incompatible with statement-based replication. See [Section 25.7.2,
    “General Requirements for NDB Cluster Replication”](mysql-cluster-replication-general.html
    "25.7.2 General Requirements for NDB Cluster Replication"), for more information.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**NDB 集群。** MySQL NDB Cluster 8.0中的默认二进制日志记录格式为`MIXED`。您应该注意，NDB Cluster复制始终使用基于行的复制，并且[`NDB`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")存储引擎与基于语句的复制不兼容。有关更多信息，请参见[第25.7.2节“NDB Cluster复制的一般要求”](mysql-cluster-replication-general.html
    "25.7.2 NDB Cluster复制的一般要求")。'
- en: When using `MIXED` format, the binary logging format is determined in part by
    the storage engine being used and the statement being executed. For more information
    on mixed-format logging and the rules governing the support of different logging
    formats, see [Section 7.4.4.3, “Mixed Binary Logging Format”](binary-log-mixed.html
    "7.4.4.3 Mixed Binary Logging Format").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`MIXED`格式时，二进制日志格式部分由正在使用的存储引擎和正在执行的语句确定。有关混合格式日志记录和支持不同日志格式的规则，请参见[Section 7.4.4.3,
    “Mixed Binary Logging Format”](binary-log-mixed.html "7.4.4.3 Mixed Binary Logging
    Format")。
- en: The logging format in a running MySQL server is controlled by setting the [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    server system variable. This variable can be set with session or global scope.
    The rules governing when and how the new setting takes effect are the same as
    for other MySQL server system variables. Setting the variable for the current
    session lasts only until the end of that session, and the change is not visible
    to other sessions. Setting the variable globally takes effect for clients that
    connect after the change, but not for any current client sessions, including the
    session where the variable setting was changed. To make the global system variable
    setting permanent so that it applies across server restarts, you must set it in
    an option file. For more information, see [Section 15.7.6.1, “SET Syntax for Variable
    Assignment”](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行中的 MySQL 服务器中，日志格式由设置[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)服务器系统变量来控制。这个变量可以在会话或全局范围内设置。关于新设置何时以及如何生效的规则与其他
    MySQL 服务器系统变量相同。为当前会话设置变量仅持续到该会话结束，且对其他会话不可见。全局设置变量会影响在更改后连接的客户端，但不会影响任何当前的客户端会话，包括更改变量设置的会话。要使全局系统变量设置永久生效，以便在服务器重新启动时应用，必须在选项文件中设置它。更多信息，请参见[Section 15.7.6.1,
    “SET Syntax for Variable Assignment”](set-variable.html "15.7.6.1 SET Syntax for
    Variable Assignment")。
- en: There are conditions under which you cannot change the binary logging format
    at runtime or doing so causes replication to fail. See [Section 7.4.4.2, “Setting
    The Binary Log Format”](binary-log-setting.html "7.4.4.2 Setting The Binary Log
    Format").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有条件下，您无法在运行时更改二进制日志格式，或者这样做会导致复制失败。请参见[Section 7.4.4.2, “Setting The Binary
    Log Format”](binary-log-setting.html "7.4.4.2 Setting The Binary Log Format")。
- en: Changing the global [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    value requires privileges sufficient to set global system variables. Changing
    the session [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    value requires privileges sufficient to set restricted session system variables.
    See [Section 7.1.9.1, “System Variable Privileges”](system-variable-privileges.html
    "7.1.9.1 System Variable Privileges").
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 更改全局[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)值需要足够权限来设置全局系统变量。更改会话[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)值需要足够权限来设置受限制的会话系统变量。请参见[Section 7.1.9.1,
    “System Variable Privileges”](system-variable-privileges.html "7.1.9.1 System
    Variable Privileges")。
- en: Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Changing the binary logging format ([`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    system variable) is deprecated as of MySQL 8.0.34\. In a future version of MySQL,
    you can expect [`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)
    to be removed altogether, and for the row-based format to become the only logging
    format used by MySQL.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 更改二进制日志格式（[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)系统变量）在
    MySQL 8.0.34 版中已被弃用。在将来的 MySQL 版本中，您可以期待[`binlog_format`](replication-options-binary-log.html#sysvar_binlog_format)被完全移除，并且基于行的格式成为
    MySQL 使用的唯一日志格式。
- en: The statement-based and row-based replication formats have different issues
    and limitations. For a comparison of their relative advantages and disadvantages,
    see [Section 19.2.1.1, “Advantages and Disadvantages of Statement-Based and Row-Based
    Replication”](replication-sbr-rbr.html "19.2.1.1 Advantages and Disadvantages
    of Statement-Based and Row-Based Replication").
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 基于语句和基于行的复制格式有不同的问题和限制。要比较它们的相对优势和劣势，请参见[Section 19.2.1.1, “Advantages and Disadvantages
    of Statement-Based and Row-Based Replication”](replication-sbr-rbr.html "19.2.1.1 Advantages
    and Disadvantages of Statement-Based and Row-Based Replication")。
- en: With statement-based replication, you may encounter issues with replicating
    stored routines or triggers. You can avoid these issues by using row-based replication
    instead. For more information, see [Section 27.7, “Stored Program Binary Logging”](stored-programs-logging.html
    "27.7 Stored Program Binary Logging").
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用基于语句的复制时，可能会遇到复制存储过程或触发器的问题。您可以通过改用基于行的复制来避免这些问题。有关更多信息，请参见[第27.7节，“存储程序二进制日志记录”](stored-programs-logging.html
    "27.7 存储程序二进制日志记录")。
