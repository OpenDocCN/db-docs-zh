- en: 15.1.22 CREATE TRIGGER Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.1.22 CREATE TRIGGER Statement
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-trigger.html](https://dev.mysql.com/doc/refman/8.0/en/create-trigger.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/create-trigger.html](https://dev.mysql.com/doc/refman/8.0/en/create-trigger.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This statement creates a new trigger. A trigger is a named database object that
    is associated with a table, and that activates when a particular event occurs
    for the table. The trigger becomes associated with the table named *`tbl_name`*,
    which must refer to a permanent table. You cannot associate a trigger with a `TEMPORARY`
    table or a view.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句创建一个新触发器。触发器是与表关联的命名数据库对象，当表发生特定事件时激活。触发器与名为 *`tbl_name`* 的表关联，该表必须引用永久表。您不能将触发器与
    `TEMPORARY` 表或视图关联。
- en: Trigger names exist in the schema namespace, meaning that all triggers must
    have unique names within a schema. Triggers in different schemas can have the
    same name.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 触发器名称存在于模式命名空间中，这意味着所有触发器在模式内必须具有唯一名称。不同模式中的触发器可以具有相同的名称。
- en: '`IF NOT EXISTS` prevents an error from occurring if a trigger having the same
    name, on the same table, exists in the same schema. This option is supported with
    `CREATE TRIGGER` beginning with MySQL 8.0.29.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`IF NOT EXISTS` 可以防止在同一模式中存在具有相同名称、在同一表上的触发器时发生错误。此选项从 MySQL 8.0.29 开始支持。'
- en: This section describes [`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE
    TRIGGER Statement") syntax. For additional discussion, see [Section 27.3.1, “Trigger
    Syntax and Examples”](trigger-syntax.html "27.3.1 Trigger Syntax and Examples").
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了 [`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE TRIGGER Statement")
    语法。有关更多讨论，请参见 [第27.3.1节“触发器语法和示例”](trigger-syntax.html "27.3.1 Trigger Syntax
    and Examples")。
- en: '[`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE TRIGGER Statement")
    requires the [`TRIGGER`](privileges-provided.html#priv_trigger) privilege for
    the table associated with the trigger. If the `DEFINER` clause is present, the
    privileges required depend on the *`user`* value, as discussed in [Section 27.6,
    “Stored Object Access Control”](stored-objects-security.html "27.6 Stored Object
    Access Control"). If binary logging is enabled, [`CREATE TRIGGER`](create-trigger.html
    "15.1.22 CREATE TRIGGER Statement") might require the [`SUPER`](privileges-provided.html#priv_super)
    privilege, as discussed in [Section 27.7, “Stored Program Binary Logging”](stored-programs-logging.html
    "27.7 Stored Program Binary Logging").'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE TRIGGER Statement")
    需要与触发器关联的表的 [`TRIGGER`](privileges-provided.html#priv_trigger) 权限。如果存在 `DEFINER`
    子句，则所需的权限取决于 *`user`* 值，如 [第27.6节“存储对象访问控制”](stored-objects-security.html "27.6 Stored
    Object Access Control") 中所讨论的。如果启用了二进制日志记录，则 [`CREATE TRIGGER`](create-trigger.html
    "15.1.22 CREATE TRIGGER Statement") 可能需要 [`SUPER`](privileges-provided.html#priv_super)
    权限，如 [第27.7节“存储程序二进制日志记录”](stored-programs-logging.html "27.7 Stored Program Binary
    Logging") 中所述。'
- en: The `DEFINER` clause determines the security context to be used when checking
    access privileges at trigger activation time, as described later in this section.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`DEFINER` 子句确定在触发器激活时用于检查访问权限的安全上下文，如本节后面所述。'
- en: '*`trigger_time`* is the trigger action time. It can be `BEFORE` or `AFTER`
    to indicate that the trigger activates before or after each row to be modified.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*`trigger_time`* 是触发器动作时间。它可以是 `BEFORE` 或 `AFTER`，表示触发器在修改每行之前或之后激活。'
- en: Basic column value checks occur prior to trigger activation, so you cannot use
    `BEFORE` triggers to convert values inappropriate for the column type to valid
    values.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在触发器激活之前会进行基本列值检查，因此您不能使用 `BEFORE` 触发器将不适合列类型的值转换为有效值。
- en: '*`trigger_event`* indicates the kind of operation that activates the trigger.
    These *`trigger_event`* values are permitted:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*`trigger_event`* 表示激活触发器的操作类型。这些 *`trigger_event`* 值是允许的：'
- en: '[`INSERT`](insert.html "15.2.7 INSERT Statement"): The trigger activates whenever
    a new row is inserted into the table (for example, through [`INSERT`](insert.html
    "15.2.7 INSERT Statement"), [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement"),
    and [`REPLACE`](replace.html "15.2.12 REPLACE Statement") statements).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INSERT`](insert.html "15.2.7 INSERT Statement"): 当向表中插入新行时触发器会激活（例如，通过 [`INSERT`](insert.html
    "15.2.7 INSERT Statement")、[`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement")
    和 [`REPLACE`](replace.html "15.2.12 REPLACE Statement") 语句）。'
- en: '[`UPDATE`](update.html "15.2.17 UPDATE Statement"): The trigger activates whenever
    a row is modified (for example, through [`UPDATE`](update.html "15.2.17 UPDATE
    Statement") statements).'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`UPDATE`](update.html "15.2.17 UPDATE Statement"): 当行被修改时触发器会激活（例如，通过 [`UPDATE`](update.html
    "15.2.17 UPDATE Statement") 语句）。'
- en: '[`DELETE`](delete.html "15.2.2 DELETE Statement"): The trigger activates whenever
    a row is deleted from the table (for example, through [`DELETE`](delete.html "15.2.2 DELETE
    Statement") and [`REPLACE`](replace.html "15.2.12 REPLACE Statement") statements).
    [`DROP TABLE`](drop-table.html "15.1.32 DROP TABLE Statement") and [`TRUNCATE
    TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement") statements on
    the table do *not* activate this trigger, because they do not use [`DELETE`](delete.html
    "15.2.2 DELETE Statement"). Dropping a partition does not activate [`DELETE`](delete.html
    "15.2.2 DELETE Statement") triggers, either.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DELETE`](delete.html "15.2.2 DELETE Statement")：该触发器在从表中删除行时激活（例如，通过[`DELETE`](delete.html
    "15.2.2 DELETE Statement")和[`REPLACE`](replace.html "15.2.12 REPLACE Statement")语句）。对表进行[`DROP
    TABLE`](drop-table.html "15.1.32 DROP TABLE Statement")和[`TRUNCATE TABLE`](truncate-table.html
    "15.1.37 TRUNCATE TABLE Statement")操作不会激活该触发器，因为它们不使用[`DELETE`](delete.html "15.2.2 DELETE
    Statement")。删除分区也不会激活[`DELETE`](delete.html "15.2.2 DELETE Statement")触发器。'
- en: The *`trigger_event`* does not represent a literal type of SQL statement that
    activates the trigger so much as it represents a type of table operation. For
    example, an [`INSERT`](insert.html "15.2.7 INSERT Statement") trigger activates
    not only for [`INSERT`](insert.html "15.2.7 INSERT Statement") statements but
    also [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement") statements because
    both statements insert rows into a table.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*`trigger_event`* 不代表激活触发器的SQL语句类型，而更多地代表一种表操作类型。例如，一个[`INSERT`](insert.html
    "15.2.7 INSERT Statement")触发器不仅激活[`INSERT`](insert.html "15.2.7 INSERT Statement")语句，还激活[`LOAD
    DATA`](load-data.html "15.2.9 LOAD DATA Statement")语句，因为这两个语句都向表中插入行。'
- en: 'A potentially confusing example of this is the `INSERT INTO ... ON DUPLICATE
    KEY UPDATE ...` syntax: a `BEFORE INSERT` trigger activates for every row, followed
    by either an `AFTER INSERT` trigger or both the `BEFORE UPDATE` and `AFTER UPDATE`
    triggers, depending on whether there was a duplicate key for the row.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这种情况可能会令人困惑的一个例子是`INSERT INTO ... ON DUPLICATE KEY UPDATE ...`语法：一个`BEFORE INSERT`触发器为每一行激活，接着是一个`AFTER
    INSERT`触发器或者`BEFORE UPDATE`和`AFTER UPDATE`触发器，具体取决于该行是否存在重复键。
- en: Note
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Cascaded foreign key actions do not activate triggers.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 级联外键操作不会触发触发器。
- en: It is possible to define multiple triggers for a given table that have the same
    trigger event and action time. For example, you can have two `BEFORE UPDATE` triggers
    for a table. By default, triggers that have the same trigger event and action
    time activate in the order they were created. To affect trigger order, specify
    a *`trigger_order`* clause that indicates `FOLLOWS` or `PRECEDES` and the name
    of an existing trigger that also has the same trigger event and action time. With
    `FOLLOWS`, the new trigger activates after the existing trigger. With `PRECEDES`,
    the new trigger activates before the existing trigger.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 可以为给定表定义多个具有相同触发事件和动作时间的触发器。例如，可以为表定义两个`BEFORE UPDATE`触发器。默认情况下，具有相同触发事件和动作时间的触发器按照它们创建的顺序激活。要影响触发器顺序，请指定一个*`trigger_order`*子句，指示`FOLLOWS`或`PRECEDES`以及一个同样具有相同触发事件和动作时间的现有触发器的名称。使用`FOLLOWS`，新触发器在现有触发器之后激活。使用`PRECEDES`，新触发器在现有触发器之前激活。
- en: '*`trigger_body`* is the statement to execute when the trigger activates. To
    execute multiple statements, use the [`BEGIN ... END`](begin-end.html "15.6.1 BEGIN
    ... END Compound Statement") compound statement construct. This also enables you
    to use the same statements that are permitted within stored routines. See [Section 15.6.1,
    “BEGIN ... END Compound Statement”](begin-end.html "15.6.1 BEGIN ... END Compound
    Statement"). Some statements are not permitted in triggers; see [Section 27.8,
    “Restrictions on Stored Programs”](stored-program-restrictions.html "27.8 Restrictions
    on Stored Programs").'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*`trigger_body`* 是触发器激活时要执行的语句。要执行多个语句，请使用[`BEGIN ... END`](begin-end.html
    "15.6.1 BEGIN ... END Compound Statement")复合语句结构。这还使您能够使用存储过程中允许的相同语句。请参阅[Section 15.6.1,
    “BEGIN ... END Compound Statement”](begin-end.html "15.6.1 BEGIN ... END Compound
    Statement")。某些语句在触发器中不允许使用；请参阅[Section 27.8, “Restrictions on Stored Programs”](stored-program-restrictions.html
    "27.8 Restrictions on Stored Programs")。'
- en: Within the trigger body, you can refer to columns in the subject table (the
    table associated with the trigger) by using the aliases `OLD` and `NEW`. `OLD.*`col_name`*`
    refers to a column of an existing row before it is updated or deleted. `NEW.*`col_name`*`
    refers to the column of a new row to be inserted or an existing row after it is
    updated.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在触发器主体中，您可以通过使用别名`OLD`和`NEW`引用主题表（与触发器关联的表）中的列。`OLD.*`col_name`*`指的是更新或删除之前现有行的列。`NEW.*`col_name`*`指的是要插入的新行或更新后的现有行的列。
- en: Triggers cannot use `NEW.*`col_name`*` or use `OLD.*`col_name`*` to refer to
    generated columns. For information about generated columns, see [Section 15.1.20.8,
    “CREATE TABLE and Generated Columns”](create-table-generated-columns.html "15.1.20.8 CREATE
    TABLE and Generated Columns").
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 触发器不能使用`NEW.*`col_name`*`或使用`OLD.*`col_name`*`来引用生成列。有关生成列的信息，请参见[第15.1.20.8节，“CREATE
    TABLE and Generated Columns”](create-table-generated-columns.html "15.1.20.8 CREATE
    TABLE and Generated Columns")。
- en: MySQL stores the [`sql_mode`](server-system-variables.html#sysvar_sql_mode)
    system variable setting in effect when a trigger is created, and always executes
    the trigger body with this setting in force, *regardless of the current server
    SQL mode when the trigger begins executing*.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL在创建触发器时存储[`sql_mode`](server-system-variables.html#sysvar_sql_mode)系统变量设置，并始终以此设置执行触发器主体，*无论触发器开始执行时当前服务器SQL模式如何*。
- en: The `DEFINER` clause specifies the MySQL account to be used when checking access
    privileges at trigger activation time. If the `DEFINER` clause is present, the
    *`user`* value should be a MySQL account specified as `'*`user_name`*'@'*`host_name`*'`,
    [`CURRENT_USER`](information-functions.html#function_current-user), or [`CURRENT_USER()`](information-functions.html#function_current-user).
    The permitted *`user`* values depend on the privileges you hold, as discussed
    in [Section 27.6, “Stored Object Access Control”](stored-objects-security.html
    "27.6 Stored Object Access Control"). Also see that section for additional information
    about trigger security.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`DEFINER`子句指定在触发器激活时检查访问权限时要使用的MySQL帐户。如果存在`DEFINER`子句，则*`user`*值应为指定为`''*`user_name`*''@''*`host_name`*''`、[`CURRENT_USER`](information-functions.html#function_current-user)或[`CURRENT_USER()`](information-functions.html#function_current-user)的MySQL帐户。允许的*`user`*值取决于您拥有的权限，如[第27.6节“存储对象访问控制”](stored-objects-security.html
    "27.6 Stored Object Access Control")中所讨论的。还请参阅该部分以获取有关触发器安全性的其他信息。'
- en: If the `DEFINER` clause is omitted, the default definer is the user who executes
    the [`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE TRIGGER Statement")
    statement. This is the same as specifying `DEFINER = CURRENT_USER` explicitly.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略`DEFINER`子句，则默认定义者是执行[`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE
    TRIGGER Statement")语句的用户。这与明确指定`DEFINER = CURRENT_USER`相同。
- en: 'MySQL takes the `DEFINER` user into account when checking trigger privileges
    as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL在检查触发器权限时考虑`DEFINER`用户如下：
- en: At [`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE TRIGGER Statement")
    time, the user who issues the statement must have the [`TRIGGER`](privileges-provided.html#priv_trigger)
    privilege.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[`CREATE TRIGGER`](create-trigger.html "15.1.22 CREATE TRIGGER Statement")时，发出该语句的用户必须具有[`TRIGGER`](privileges-provided.html#priv_trigger)权限。
- en: 'At trigger activation time, privileges are checked against the `DEFINER` user.
    This user must have these privileges:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在触发器激活时，权限将针对`DEFINER`用户进行检查。此用户必须具有以下权限：
- en: The [`TRIGGER`](privileges-provided.html#priv_trigger) privilege for the subject
    table.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主题表的[`TRIGGER`](privileges-provided.html#priv_trigger)权限。
- en: The [`SELECT`](privileges-provided.html#priv_select) privilege for the subject
    table if references to table columns occur using `OLD.*`col_name`*` or `NEW.*`col_name`*`
    in the trigger body.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果触发器主体中使用`OLD.*`col_name`*`或`NEW.*`col_name`*`引用表列，则需要对主题表具有[`SELECT`](privileges-provided.html#priv_select)权限。
- en: The [`UPDATE`](privileges-provided.html#priv_update) privilege for the subject
    table if table columns are targets of `SET NEW.*`col_name`* = *`value`*` assignments
    in the trigger body.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表列是触发器主体中`SET NEW.*`col_name`* = *`value`*`的目标，则需要对主题表具有[`UPDATE`](privileges-provided.html#priv_update)权限。
- en: Whatever other privileges normally are required for the statements executed
    by the trigger.
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触发器执行的语句通常需要的其他权限。
- en: Within a trigger body, the [`CURRENT_USER`](information-functions.html#function_current-user)
    function returns the account used to check privileges at trigger activation time.
    This is the `DEFINER` user, not the user whose actions caused the trigger to be
    activated. For information about user auditing within triggers, see [Section 8.2.23,
    “SQL-Based Account Activity Auditing”](account-activity-auditing.html "8.2.23 SQL-Based
    Account Activity Auditing").
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在触发器体内，[`CURRENT_USER`](information-functions.html#function_current-user)函数返回在触发器激活时用于检查权限的账户。这是`DEFINER`用户，而不是触发器激活的用户。有关触发器内用户审计的信息，请参阅[Section 8.2.23,
    “SQL-Based Account Activity Auditing”](account-activity-auditing.html "8.2.23 SQL-Based
    Account Activity Auditing")。
- en: If you use [`LOCK TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES
    Statements") to lock a table that has triggers, the tables used within the trigger
    are also locked, as described in [LOCK TABLES and Triggers](lock-tables.html#lock-tables-and-triggers
    "LOCK TABLES and Triggers").
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用[`LOCK TABLES`](lock-tables.html "15.3.6 LOCK TABLES and UNLOCK TABLES
    Statements")来锁定一个带有触发器的表，那么触发器中使用的表也会被锁定，就像在[LOCK TABLES and Triggers](lock-tables.html#lock-tables-and-triggers
    "LOCK TABLES and Triggers")中描述的那样。
- en: For additional discussion of trigger use, see [Section 27.3.1, “Trigger Syntax
    and Examples”](trigger-syntax.html "27.3.1 Trigger Syntax and Examples").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于触发器使用的讨论，请参阅[Section 27.3.1, “Trigger Syntax and Examples”](trigger-syntax.html
    "27.3.1 Trigger Syntax and Examples")。
