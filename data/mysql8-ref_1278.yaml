- en: 17.20.4 InnoDB memcached Multiple get and Range Query Support
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.20.4 InnoDB memcached多个获取和范围查询支持
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-memcached-multiple-get-range-query.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-memcached-multiple-get-range-query.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-memcached-multiple-get-range-query.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-memcached-multiple-get-range-query.html)
- en: The `daemon_memcached` plugin supports multiple get operations (fetching multiple
    key-value pairs in a single **memcached** query) and range queries.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`daemon_memcached`插件支持多个获取操作（在单个**memcached**查询中获取多个键值对）和范围查询。'
- en: Multiple get Operations
  id: totrans-3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 多个获取操作
- en: The ability to fetch multiple key-value pairs in a single **memcached** query
    improves read performance by reducing communication traffic between the client
    and server. For `InnoDB`, it means fewer transactions and open-table operations.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在单个**memcached**查询中获取多个键值对的能力通过减少客户端和服务器之间的通信流量来提高读取性能。对于`InnoDB`，这意味着更少的事务和打开表操作。
- en: The following example demonstrates multiple-get support. The example uses the
    `test.city` table described in [Creating a New Table and Column Mapping](innodb-memcached-setup.html#innodb-memcached-new-table-setup
    "Creating a New Table and Column Mapping").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了多个获取支持。该示例使用了[创建新表和列映射](innodb-memcached-setup.html#innodb-memcached-new-table-setup
    "创建新表和列映射")中描述的`test.city`表。
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Run a `get` command to retrieve all values from the `city` table. The results
    are returned in a key-value pair sequence.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`get`命令以从`city`表中检索所有值。结果以键值对序列返回。
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'When retrieving multiple values in a single `get` command, you can switch tables
    (using `@@*`containers.name`*` notation) to retrieve the value for the first key,
    but you cannot switch tables for subsequent keys. For example, the table switch
    in this example is valid:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在单个`get`命令中检索多个值时，您可以切换表（使用`@@*`containers.name`*`符号）以检索第一个键的值，但不能为后续键切换表。例如，此示例中的表切换是有效的：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Attempting to switch tables again in the same `get` command to retrieve a key
    value from a different table is not supported.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试在同一个`get`命令中再次切换表以从不同表中检索键值不受支持。
- en: There is no limit the number of keys that can be retrieved by a multiple get
    operation, but there is a 128MB memory limit for storing the result.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通过多个获取操作检索的键的数量没有限制，但存储结果的内存限制为128MB。
- en: Range Queries
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 范围查询
- en: 'For range queries, the `daemon_memcached` plugin supports the following comparison
    operators: `<`, `>`, `<=`, `>=`. An operator must be preceded by an `@` symbol.
    When a range query finds multiple matching key-value pairs, results are returned
    in a key-value pair sequence.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于范围查询，`daemon_memcached`插件支持以下比较运算符：`<`，`>`，`<=`，`>=`。运算符前必须加上`@`符号。当范围查询找到多个匹配的键值对时，结果以键值对序列返回。
- en: The following examples demonstrate range query support. The examples use the
    `test.city` table described in [Creating a New Table and Column Mapping](innodb-memcached-setup.html#innodb-memcached-new-table-setup
    "Creating a New Table and Column Mapping").
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了范围查询支持。这些示例使用了[创建新表和列映射](innodb-memcached-setup.html#innodb-memcached-new-table-setup
    "创建新表和列映射")中描述的`test.city`表。
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Open a telnet session:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 打开telnet会话：
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To get all values greater than `B`, enter `get @>B`:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取所有大于`B`的值，请输入`get @>B`：
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To get all values less than `M`, enter `get @<M`:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取所有小于`M`的值，请输入`get @<M`：
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To get all values less than and including `M`, enter `get @<=M`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取所有小于或等于`M`的值，请输入`get @<=M`：
- en: '[PRE7]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To get values greater than `B` but less than `M`, enter `get @>B@<M`:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取大于`B`但小于`M`的值，请输入`get @>B@<M`：
- en: '[PRE8]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: A maximum of two comparison operators can be parsed, one being either a 'less
    than' (`@<`) or 'less than or equal to' (`@<=`) operator, and the other being
    either a 'greater than' (`@>`) or 'greater than or equal to' (`@>=`) operator.
    Any additional operators are assumed to be part of the key. For example, if you
    issue a `get` command with three operators, the third operator (`@>C`) is treated
    as part of the key, and the `get` command searches for values smaller than `M`
    and greater than `B@>C`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 最多可以解析两个比较运算符，一个是'小于'（`@<`）或'小于或等于'（`@<=`）运算符，另一个是'大于'（`@>`）或'大于或等于'（`@>=`）运算符。任何额外的运算符都被视为键的一部分。例如，如果您发出带有三个运算符的`get`命令，则第三个运算符（`@>C`）被视为键的一部分，`get`命令将搜索小于`M`且大于`B@>C`的值。
- en: '[PRE9]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
