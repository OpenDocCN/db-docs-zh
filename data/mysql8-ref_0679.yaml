- en: 12.3.6 Character String Literal Character Set and Collation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12.3.6 字符字符串字面量的字符集和校对规则
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-literal.html](https://dev.mysql.com/doc/refman/8.0/en/charset-literal.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-literal.html](https://dev.mysql.com/doc/refman/8.0/en/charset-literal.html)
- en: Every character string literal has a character set and a collation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每个字符字符串字面量都有一个字符集和一个校对规则。
- en: For the simple statement `SELECT '*`string`*'`, the string has the connection
    default character set and collation defined by the [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    and [`collation_connection`](server-system-variables.html#sysvar_collation_connection)
    system variables.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于简单语句`SELECT '*`string`*'`，该字符串具有由[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)和[`collation_connection`](server-system-variables.html#sysvar_collation_connection)系统变量定义的连接默认字符集和���对规则。
- en: 'A character string literal may have an optional character set introducer and
    `COLLATE` clause, to designate it as a string that uses a particular character
    set and collation:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 字符字符串字面量可以具有可选的字符集引导符和`COLLATE`子句，以指定其为使用特定字符集和校对规则的字符串：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `_*`charset_name`*` expression is formally called an *introducer*. It tells
    the parser, “the string that follows uses character set *`charset_name`*.” An
    introducer does not change the string to the introducer character set like [`CONVERT()`](cast-functions.html#function_convert)
    would do. It does not change the string value, although padding may occur. The
    introducer is just a signal. See [Section 12.3.8, “Character Set Introducers”](charset-introducer.html
    "12.3.8 Character Set Introducers").
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`_*`charset_name`*`表达式在形式上称为*引导符*。它告诉解析器，“接下来的字符串使用字符集*`charset_name`*。”引导符不会像[`CONVERT()`](cast-functions.html#function_convert)那样将字符串转换为引导符字符集。它不会改变字符串值，尽管可能会发生填充。引导符只是一个信号。参见[第12.3.8节，“字符集引导符”](charset-introducer.html
    "12.3.8 Character Set Introducers")。'
- en: 'Examples:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Character set introducers and the `COLLATE` clause are implemented according
    to standard SQL specifications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 字符集引导符和`COLLATE`子句按照标准SQL规范实现。
- en: 'MySQL determines the character set and collation of a character string literal
    in the following manner:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL确定字符字符串字面量的字符集和校对规则的方式如下：
- en: If both *`_charset_name`* and `COLLATE *`collation_name`*` are specified, character
    set *`charset_name`* and collation *`collation_name`* are used. *`collation_name`*
    must be a permitted collation for *`charset_name`*.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果同时指定了*`_charset_name`*和`COLLATE *`collation_name`*`，则使用字符集*`charset_name`*和校对规则*`collation_name`*。*`collation_name`*必须是*`charset_name`*的允许校对规则。
- en: If *`_charset_name`* is specified but `COLLATE` is not specified, character
    set *`charset_name`* and its default collation are used. To see the default collation
    for each character set, use the [`SHOW CHARACTER SET`](show-character-set.html
    "15.7.7.3 SHOW CHARACTER SET Statement") statement or query the `INFORMATION_SCHEMA`
    [`CHARACTER_SETS`](information-schema-character-sets-table.html "28.3.4 The INFORMATION_SCHEMA
    CHARACTER_SETS Table") table.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果*`_charset_name`*被指定但未指定`COLLATE`，则使用字符集*`charset_name`*及其默认校对规则。要查看每个字符集的默认校对规则，请使用[`SHOW
    CHARACTER SET`](show-character-set.html "15.7.7.3 SHOW CHARACTER SET Statement")语句或查询`INFORMATION_SCHEMA`
    [`CHARACTER_SETS`](information-schema-character-sets-table.html "28.3.4 The INFORMATION_SCHEMA
    CHARACTER_SETS Table")表。
- en: If *`_charset_name`* is not specified but `COLLATE *`collation_name`*` is specified,
    the connection default character set given by the [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    system variable and collation *`collation_name`* are used. *`collation_name`*
    must be a permitted collation for the connection default character set.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未指定*`_charset_name`*但指定了`COLLATE *`collation_name`*`，则使用由[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)系统变量给出的连接默认字符集和校对规则*`collation_name`*。*`collation_name`*必须是连接默认字符集的允许校对规则。
- en: Otherwise (neither *`_charset_name`* nor `COLLATE *`collation_name`*` is specified),
    the connection default character set and collation given by the [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    and [`collation_connection`](server-system-variables.html#sysvar_collation_connection)
    system variables are used.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则（既未指定*`_charset_name`*也未指定`COLLATE *`collation_name`*`），则使用由[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)和[`collation_connection`](server-system-variables.html#sysvar_collation_connection)系统变量给出的连接默认字符集和校对规则。
- en: 'Examples:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: 'A nonbinary string with `latin1` character set and `latin1_german1_ci` collation:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个使用`latin1`字符集和`latin1_german1_ci`校对规则的非二进制字符串：
- en: '[PRE2]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'A nonbinary string with `utf8mb4` character set and its default collation (that
    is, `utf8mb4_0900_ai_ci`):'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '一个带有`utf8mb4`字符集和其默认排序规则（即`utf8mb4_0900_ai_ci`）的非二进制字符串:'
- en: '[PRE3]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'A binary string with `binary` character set and its default collation (that
    is, `binary`):'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '一个带有`binary`字符集和其默认排序规则（即`binary`）的二进制字符串:'
- en: '[PRE4]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'A nonbinary string with the connection default character set and `utf8mb4_0900_ai_ci`
    collation (fails if the connection character set is not `utf8mb4`):'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '一个带有连接默认字符集和`utf8mb4_0900_ai_ci`排序规则的非二进制字符串（如果连接字符集不是`utf8mb4`，则失败）:'
- en: '[PRE5]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'A string with the connection default character set and collation:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '一个带有连接默认字符集和排序规则的字符串:'
- en: '[PRE6]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: An introducer indicates the character set for the following string, but does
    not change how the parser performs escape processing within the string. Escapes
    are always interpreted by the parser according to the character set given by [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一个引导符指示了接下来字符串的字符集，但不会改变解析器在字符串内部执行转义处理的方式。转义始终由解析器根据[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)给定的字符集来解释。
- en: The following examples show that escape processing occurs using [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    even in the presence of an introducer. The examples use [`SET NAMES`](set-names.html
    "15.7.6.3 SET NAMES Statement") (which changes [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection),
    as discussed in [Section 12.4, “Connection Character Sets and Collations”](charset-connection.html
    "12.4 Connection Character Sets and Collations")), and display the resulting strings
    using the [`HEX()`](string-functions.html#function_hex) function so that the exact
    string contents can be seen.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示，即使有引导符存在，转义处理仍然使用[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)。这些示例使用[`SET
    NAMES`](set-names.html "15.7.6.3 SET NAMES Statement")（更改[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)的内容，如[第12.4节“连接字符集和排序规则”](charset-connection.html
    "12.4 Connection Character Sets and Collations")中所讨论的），并使用[`HEX()`](string-functions.html#function_hex)函数显示结果字符串，以便查看确切的字符串内容。
- en: 'Example 1:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '示例 1:'
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, `à` (hexadecimal value `E0`) is followed by `\n`, the escape sequence
    for newline. The escape sequence is interpreted using the [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    value of `latin1` to produce a literal newline (hexadecimal value `0A`). This
    happens even for the second string. That is, the `_sjis` introducer does not affect
    the parser's escape processing.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`à`（十六进制值`E0`）后面跟着`\n`，这是换行的转义序列。转义序列使用`latin1`的[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)值来产生一个字面换行（十六进制值`0A`）。即使对于第二个字符串也是如此。也就是说，`_sjis`引导符不会影响解析器的转义处理。
- en: 'Example 2:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '示例 2:'
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    is `sjis`, a character set in which the sequence of `à` followed by `\` (hexadecimal
    values `05` and `5C`) is a valid multibyte character. Hence, the first two bytes
    of the string are interpreted as a single `sjis` character, and the `\` is not
    interpreted as an escape character. The following `n` (hexadecimal value `6E`)
    is not interpreted as part of an escape sequence. This is true even for the second
    string; the `_latin1` introducer does not affect escape processing.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)是`sjis`，一个字符集，其中`à`后面跟着`\`（十六进制值`05`和`5C`）是一个有效的多字节字符。因此，字符串的前两个字节被解释为一个单个的`sjis`字符，`\`不被解释为转义字符。接下来的`n`（十六进制值`6E`）不被解释为转义序列的一部分。即使对于第二个字符串也是如此；`_latin1`引导符不会影响转义处理。
