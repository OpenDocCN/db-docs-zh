- en: 15.1.33 DROP TABLESPACE Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.1.33 DROP TABLESPACE Statement
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/drop-tablespace.html](https://dev.mysql.com/doc/refman/8.0/en/drop-tablespace.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/drop-tablespace.html](https://dev.mysql.com/doc/refman/8.0/en/drop-tablespace.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This statement drops a tablespace that was previously created using [`CREATE
    TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE Statement"). It
    is supported by the `NDB` and `InnoDB` storage engines.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句删除先前使用[`CREATE TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE
    Statement")创建的表空间。它受`NDB`和`InnoDB`存储引擎支持。
- en: The `UNDO` keyword, introduced in MySQL 8.0.14, must be specified to drop an
    undo tablespace. Only undo tablespaces created using [`CREATE UNDO TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement") syntax can be dropped. An undo tablespace
    must be in an `empty` state before it can be dropped. For more information, see
    [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html "17.6.3.4 Undo
    Tablespaces").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.14中引入的`UNDO`关键字必须在删除撤销表空间时指定。只能删除使用[`CREATE UNDO TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement")语法创建的撤销表空间。撤销表空间必须处于`空`状态才能删除。有关更多信息，请参见[Section 17.6.3.4,
    “Undo Tablespaces”](innodb-undo-tablespaces.html "17.6.3.4 Undo Tablespaces")。
- en: '`ENGINE` sets the storage engine that uses the tablespace, where *`engine_name`*
    is the name of the storage engine. Currently, the values `InnoDB` and `NDB` are
    supported. If not set, the value of [`default_storage_engine`](server-system-variables.html#sysvar_default_storage_engine)
    is used. If it is not the same as the storage engine used to create the tablespace,
    the `DROP TABLESPACE` statement fails.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`ENGINE`设置使用表空间的存储引擎，其中*`engine_name`*是存储引擎的名称。目前，支持值为`InnoDB`和`NDB`。如果未设置，则使用[`default_storage_engine`](server-system-variables.html#sysvar_default_storage_engine)的值。如果与用于创建表空间的存储引擎不同，则`DROP
    TABLESPACE`语句将失败。'
- en: '`*`tablespace_name`*` is a case-sensitive identifier in MySQL.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`*`tablespace_name`*`是MySQL中区分大小写的标识符。'
- en: For an `InnoDB` general tablespace, all tables must be dropped from the tablespace
    prior to a `DROP TABLESPACE` operation. If the tablespace is not empty, `DROP
    TABLESPACE` returns an error.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`InnoDB`通用表空间，在执行`DROP TABLESPACE`操作之前，必须从表空间中删除所有表。如果表空间不为空，`DROP TABLESPACE`会返回错误。
- en: An `NDB` tablespace to be dropped must not contain any data files; in other
    words, before you can drop an `NDB` tablespace, you must first drop each of its
    data files using [`ALTER TABLESPACE ... DROP DATAFILE`](alter-tablespace.html
    "15.1.10 ALTER TABLESPACE Statement").
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除的`NDB`表空间不能包含任何数据文件；换句话说，在您可以删除`NDB`表空间之前，必须先使用[`ALTER TABLESPACE ... DROP
    DATAFILE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")命令删除每个数据文件。
- en: Notes
  id: totrans-9
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: A general `InnoDB` tablespace is not deleted automatically when the last table
    in the tablespace is dropped. The tablespace must be dropped explicitly using
    `DROP TABLESPACE *`tablespace_name`*`.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当表空间中的最后一个表被删除时，通用`InnoDB`表空间不会自动删除。必须使用`DROP TABLESPACE *`tablespace_name`*`显式删除表空间。
- en: A [`DROP DATABASE`](drop-database.html "15.1.24 DROP DATABASE Statement") operation
    can drop tables that belong to a general tablespace but it cannot drop the tablespace,
    even if the operation drops all tables that belong to the tablespace. The tablespace
    must be dropped explicitly using `DROP TABLESPACE *`tablespace_name`*`.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DROP DATABASE`](drop-database.html "15.1.24 DROP DATABASE Statement")操作可以删除属于通用表空间的表，但无法删除表空间，即使操作删除了属于表空间的所有表。必须使用`DROP
    TABLESPACE *`tablespace_name`*`显式删除表空间。'
- en: Similar to the system tablespace, truncating or dropping tables stored in a
    general tablespace creates free space internally in the general tablespace [.ibd
    data file](glossary.html#glos_ibd_file ".ibd file") which can only be used for
    new `InnoDB` data. Space is not released back to the operating system as it is
    for file-per-table tablespaces.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与系统表空间类似，截断或删除存储在通用表空间中的表会在通用表空间的[.ibd数据文件](glossary.html#glos_ibd_file ".ibd
    file")中创建内部的可用空间，该空间只能用于新的`InnoDB`数据。与针对每个表的文件表空间不同，空间不会像对操作系统一样释放回去。
- en: InnoDB Examples
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: InnoDB示例
- en: This example demonstrates how to drop an `InnoDB` general tablespace. The general
    tablespace `ts1` is created with a single table. Before dropping the tablespace,
    the table must be dropped.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例演示了如何删除一个`InnoDB`通用表空间。通用表空间`ts1`是用一个表创建的。在删除表空间之前，必须先删除表。
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This example demonstrates dropping an undo tablespace. An undo tablespace must
    be in an `empty` state before it can be dropped. For more information, see [Section 17.6.3.4,
    “Undo Tablespaces”](innodb-undo-tablespaces.html "17.6.3.4 Undo Tablespaces").
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例演示了如何删除一个撤销表空间。撤销表空间必须处于`空`状态才能被删除。有关更多信息，请参见[第17.6.3.4节，“Undo Tablespaces”](innodb-undo-tablespaces.html
    "17.6.3.4 Undo Tablespaces")。
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: NDB Example
  id: totrans-18
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: NDB示例
- en: This example shows how to drop an `NDB` tablespace `myts` having a data file
    named `mydata-1.dat` after first creating the tablespace, and assumes the existence
    of a log file group named `mylg` (see [Section 15.1.16, “CREATE LOGFILE GROUP
    Statement”](create-logfile-group.html "15.1.16 CREATE LOGFILE GROUP Statement")).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例演示了如何在首先创建表空间后删除一个`NDB`表空间`myts`，假设存在一个名为`mylg`的日志文件组（参见[第15.1.16节，“CREATE
    LOGFILE GROUP Statement”](create-logfile-group.html "15.1.16 CREATE LOGFILE GROUP
    Statement")）。
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You must remove all data files from the tablespace using [`ALTER TABLESPACE`](alter-tablespace.html
    "15.1.10 ALTER TABLESPACE Statement"), as shown here, before it can be dropped:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 必须使用[`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")语句，如下所示，从表空间中删除所有数据文件，然后才能删除表空间：
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
