- en: 'A.9 MySQL 8.0 FAQ: Security'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A.9 MySQL 8.0 FAQ：安全性
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-security.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-security.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-security.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-security.html)
- en: A.9.1\. [Where can I find documentation that addresses security issues for MySQL?](faqs-security.html#faq-mysql-where-docs-security)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: A.9.1\. 我在哪里可以找到有关MySQL安全问题的文档？](faqs-security.html#faq-mysql-where-docs-security)
- en: A.9.2\. [What is the default authentication plugin in MySQL 8.0?](faqs-security.html#faq-mysql-default-authentication-plugin)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: A.9.2\. MySQL 8.0中的默认身份验证插件是什么？](faqs-security.html#faq-mysql-default-authentication-plugin)
- en: A.9.3\. [Does MySQL 8.0 have native support for SSL?](faqs-security.html#faq-mysql-have-native-ssl)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: A.9.3\. MySQL 8.0是否原生支持SSL？](faqs-security.html#faq-mysql-have-native-ssl)
- en: A.9.4\. [Is SSL support built into MySQL binaries, or must I recompile the binary
    myself to enable it?](faqs-security.html#faq-mysql-is-ssl-available)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: A.9.4\. SSL支持是否内置于MySQL二进制文件中，还是必须重新编译二进制文件才能启用？](faqs-security.html#faq-mysql-is-ssl-available)
- en: A.9.5\. [Does MySQL 8.0 have built-in authentication against LDAP directories?](faqs-security.html#faq-mysql-have-builtin-ldap)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: A.9.5\. MySQL 8.0是否内置对LDAP目录的身份验证？](faqs-security.html#faq-mysql-have-builtin-ldap)
- en: A.9.6\. [Does MySQL 8.0 include support for Roles Based Access Control (RBAC)?](faqs-security.html#faq-mysql-have-builtin-rbac)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: A.9.6\. MySQL 8.0是否包含基于角色的访问控制（RBAC）支持？](faqs-security.html#faq-mysql-have-builtin-rbac)
- en: A.9.7\. [Does MySQL 8.0 support TLS 1.0 and 1.1?](faqs-security.html#faq-mysql-tls-versions)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: A.9.7\. MySQL 8.0是否支持TLS 1.0和1.1？](faqs-security.html#faq-mysql-tls-versions)
- en: '| **A.9.1.** | Where can I find documentation that addresses security issues
    for MySQL? |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| **A.9.1.** | 我在哪里可以找到有关MySQL安全问题的文档？ |'
- en: '|  | The best place to start is [Chapter 8, *Security*](security.html "Chapter 8 Security").Other
    portions of the MySQL Documentation which you may find useful with regard to specific
    security concerns include the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 最好的起点是[第8章，*安全*](security.html "Chapter 8 Security")。MySQL文档的其他部分，您可能会发现与特定安全问题相关的包括以下内容：'
- en: '[Section 8.1.1, “Security Guidelines”](security-guidelines.html "8.1.1 Security
    Guidelines").'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8.1.1节，“安全准则”](security-guidelines.html "8.1.1 Security Guidelines").'
- en: '[Section 8.1.3, “Making MySQL Secure Against Attackers”](security-against-attack.html
    "8.1.3 Making MySQL Secure Against Attackers").'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8.1.3节，“使MySQL免受攻击者攻击”](security-against-attack.html "8.1.3 Making MySQL
    Secure Against Attackers").'
- en: '[Section B.3.3.2, “How to Reset the Root Password”](resetting-permissions.html
    "B.3.3.2 How to Reset the Root Password").'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第B.3.3.2节，“如何重置根密码”](resetting-permissions.html "B.3.3.2 How to Reset the
    Root Password").'
- en: '[Section 8.1.5, “How to Run MySQL as a Normal User”](changing-mysql-user.html
    "8.1.5 How to Run MySQL as a Normal User").'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8.1.5节，“如何以普通用户身份运行MySQL”](changing-mysql-user.html "8.1.5 How to Run MySQL
    as a Normal User").'
- en: '[Section 8.1.4, “Security-Related mysqld Options and Variables”](security-options.html
    "8.1.4 Security-Related mysqld Options and Variables").'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8.1.4节，“与安全相关的mysqld选项和变量”](security-options.html "8.1.4 Security-Related
    mysqld Options and Variables").'
- en: '[Section 8.1.6, “Security Considerations for LOAD DATA LOCAL”](load-data-local-security.html
    "8.1.6 Security Considerations for LOAD DATA LOCAL").'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8.1.6节，“LOAD DATA LOCAL的安全注意事项”](load-data-local-security.html "8.1.6 Security
    Considerations for LOAD DATA LOCAL").'
- en: '[Section 2.9, “Postinstallation Setup and Testing”](postinstallation.html "2.9 Postinstallation
    Setup and Testing").'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2.9节，“安装后设置和测试”](postinstallation.html "2.9 Postinstallation Setup and Testing").'
- en: '[Section 8.3, “Using Encrypted Connections”](encrypted-connections.html "8.3 Using
    Encrypted Connections").'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8.3节，“使用加密连接”](encrypted-connections.html "8.3 Using Encrypted Connections").'
- en: '[Loadable Function Security Precautions](/doc/extending-mysql/8.0/en/adding-loadable-function.html#loadable-function-security).'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[可加载函数安全预防措施](/doc/extending-mysql/8.0/en/adding-loadable-function.html#loadable-function-security).'
- en: There is also the [Secure Deployment Guide](/doc/mysql-secure-deployment-guide/8.0/en/),
    which provides procedures for deploying a generic binary distribution of MySQL
    Enterprise Edition Server with features for managing the security of your MySQL
    installation. |
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 还有[安全部署指南](/doc/mysql-secure-deployment-guide/8.0/en/)，提供了使用MySQL企业版服务器的通用二进制分发功能的部署程序，以管理MySQL安装的安全性。
    |
- en: '| **A.9.2.** | What is the default authentication plugin in MySQL 8.0? |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **A.9.2.** | MySQL 8.0中的默认身份验证插件是什么？ |'
- en: '|  | The default authentication plugin in MySQL 8.0 is `caching_sha2_password`.
    For information about this plugin, see [Section 8.4.1.2, “Caching SHA-2 Pluggable
    Authentication”](caching-sha2-pluggable-authentication.html "8.4.1.2 Caching SHA-2
    Pluggable Authentication").The `caching_sha2_password` plugin provides more secure
    password encryption than the `mysql_native_password` plugin (the default plugin
    in previous MySQL series). For information about the implications of this change
    of default plugin for server operation and compatibility of the server with clients
    and connectors, see [caching_sha2_password as the Preferred Authentication Plugin](upgrading-from-previous-series.html#upgrade-caching-sha2-password
    "caching_sha2_password as the Preferred Authentication Plugin").For general information
    about pluggable authentication and other available authentication plugins, see
    [Section 8.2.17, “Pluggable Authentication”](pluggable-authentication.html "8.2.17 Pluggable
    Authentication"), and [Section 8.4.1, “Authentication Plugins”](authentication-plugins.html
    "8.4.1 Authentication Plugins"). |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL 8.0 中默认的身份验证插件是`caching_sha2_password`。有关此插件的信息，请参阅 [Section 8.4.1.2,
    “Caching SHA-2 Pluggable Authentication”](caching-sha2-pluggable-authentication.html
    "8.4.1.2 Caching SHA-2 Pluggable Authentication")。`caching_sha2_password`插件提供比`mysql_native_password`插件更安全的密码加密（前一个MySQL系列的默认插件）。有关此默认插件更改对服务器操作和服务器与客户端及连接器兼容性的影响的信息，请参阅
    [caching_sha2_password as the Preferred Authentication Plugin](upgrading-from-previous-series.html#upgrade-caching-sha2-password
    "caching_sha2_password as the Preferred Authentication Plugin")。有关可插拔身份验证和其他可用身份验证插件的一般信息，请参阅
    [Section 8.2.17, “Pluggable Authentication”](pluggable-authentication.html "8.2.17 Pluggable
    Authentication")，以及 [Section 8.4.1, “Authentication Plugins”](authentication-plugins.html
    "8.4.1 Authentication Plugins")。 |'
- en: '| **A.9.3.** | Does MySQL 8.0 have native support for SSL? |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| **A.9.3.** | MySQL 8.0 是否原生支持SSL？ |'
- en: '|  | Most 8.0 binaries have support for SSL connections between the client
    and server. See [Section 8.3, “Using Encrypted Connections”](encrypted-connections.html
    "8.3 Using Encrypted Connections").You can also tunnel a connection using SSH,
    if (for example) the client application does not support SSL connections. For
    an example, see [Section 8.3.4, “Connecting to MySQL Remotely from Windows with
    SSH”](windows-and-ssh.html "8.3.4 Connecting to MySQL Remotely from Windows with
    SSH"). |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '|  | 大多数 8.0 二进制文件支持客户端和服务器之间的SSL连接。请参阅 [Section 8.3, “Using Encrypted Connections”](encrypted-connections.html
    "8.3 Using Encrypted Connections")。您还可以使用SSH隧道连接，如果（例如）客户端应用程序不支持SSL连接。有关示例，请参阅
    [Section 8.3.4, “Connecting to MySQL Remotely from Windows with SSH”](windows-and-ssh.html
    "8.3.4 Connecting to MySQL Remotely from Windows with SSH")。 |'
- en: '| **A.9.4.** | Is SSL support built into MySQL binaries, or must I recompile
    the binary myself to enable it? |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| **A.9.4.** | SSL支持是否内置于MySQL二进制文件中，还是必须重新编译二进制文件才能启用？ |'
- en: '|  | Most 8.0 binaries have SSL enabled for client/server connections that
    are secured, authenticated, or both. See [Section 8.3, “Using Encrypted Connections”](encrypted-connections.html
    "8.3 Using Encrypted Connections"). |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|  | 大多数 8.0 二进制文件已启用SSL，用于客户端/服务器连接的安全、身份验证或两者兼有。请参阅 [Section 8.3, “Using
    Encrypted Connections”](encrypted-connections.html "8.3 Using Encrypted Connections")。
    |'
- en: '| **A.9.5.** | Does MySQL 8.0 have built-in authentication against LDAP directories?
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| **A.9.5.** | MySQL 8.0 是否内置对LDAP目录的身份验证？ |'
- en: '|  | The Enterprise edition includes a [PAM Authentication Plugin](pam-pluggable-authentication.html
    "8.4.1.5 PAM Pluggable Authentication") that supports authentication against an
    LDAP directory. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '|  | 企业版包括一个[PAM身份验证插件](pam-pluggable-authentication.html "8.4.1.5 PAM Pluggable
    Authentication")，支持对LDAP目录进行身份验证。 |'
- en: '| **A.9.6.** | Does MySQL 8.0 include support for Roles Based Access Control
    (RBAC)? |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| **A.9.6.** | MySQL 8.0 是否支持基于角色的访问控制（RBAC）？ |'
- en: '|  | Not at this time. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '|  | 目前不支持。 |'
- en: '| **A.9.7.** | Does MySQL 8.0 support TLS 1.0 and 1.1? |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| **A.9.7.** | MySQL 8.0 是否支持TLS 1.0和1.1？ |'
- en: '|  | Support for the TLSv1 and TLSv1.1 connection protocols is removed as of
    MySQL 8.0.28\. The protocols were deprecated from MySQL 8.0.26\. For the consequences
    of that removal, see [Removal of Support for the TLSv1 and TLSv1.1 Protocols](encrypted-connection-protocols-ciphers.html#encrypted-connection-deprecated-protocols
    "Removal of Support for the TLSv1 and TLSv1.1 Protocols").Support for TLS versions
    1.0 and 1.1 is removed because those protocol versions are old, released in 1996
    and 2006, respectively. The algorithms used are weak and outdated.Unless you are
    using very old versions of MySQL Server or connectors, you are unlikely to have
    connections using TLS 1.0 or 1.1\. MySQL connectors and clients select the highest
    TLS version available by default.*When was support for TLS 1.2 added to MySQL
    Server?* MySQL Community Server added TLS 1.2 support when the community server
    switched to OpenSSL for MySQL 5.6, 5.7, and 8.0 in 2019\. For MySQL Enterprise
    Edition, OpenSSL added TLS 1.2 support in 2015, in MySQL Server 5.7.10.*How can
    one view which TLS versions are in active use?* For MySQL 5.7 or 8.0, review whether
    TLS 1.0 or 1.1 is in use by running this query:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '|  | 从 MySQL 8.0.28 开始，不再支持 TLSv1 和 TLSv1.1 连接协议。这些协议从 MySQL 8.0.26 开始被弃用。有关该移除的后果，请参阅
    [移除对 TLSv1 和 TLSv1.1 协议的支持](encrypted-connection-protocols-ciphers.html#encrypted-connection-deprecated-protocols
    "Removal of Support for the TLSv1 and TLSv1.1 Protocols")。移除对 TLS 版本 1.0 和 1.1
    的支持是因为这些协议版本过时，分别于 1996 年和 2006 年发布。使用的算法是薄弱且过时的。除非您正在使用非常旧的 MySQL Server 或连接器版本，否则不太可能有使用
    TLS 1.0 或 1.1 的连接。MySQL 连接器和客户端默认选择可用的最高 TLS 版本。*MySQL Server 何时添加对 TLS 1.2 的支持？*
    MySQL Community Server 在 2019 年切换到 OpenSSL 时为 MySQL 5.6、5.7 和 8.0 添加了 TLS 1.2
    支持。对于 MySQL Enterprise Edition，OpenSSL 在 2015 年为 MySQL Server 5.7.10 添加了 TLS 1.2
    支持。*如何查看正在使用的 TLS 版本？* 对于 MySQL 5.7 或 8.0，通过运行此查询查看是否正在使用 TLS 1.0 或 1.1：'
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If a thread using TLSv1.0 or TLSv1.1 is listed, you can determine where this
    connection is coming from by running this query:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列出了使用 TLSv1.0 或 TLSv1.1 的线程，您可以通过运行此查询确定此连接来自何处：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Alternatively, you can run this query:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以运行此查询：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'These queries provide details needed to determine which application is not
    supporting TLS 1.2 or 1.3, and target upgrades for those.*Are there other options
    for testing for TLS 1.0 or 1.1?* Yes, you can disable those versions prior to
    upgrading your server to a newer version. Explicitly specify which version to
    use, either in `mysql.cnf` (or `mysql.ini`) or by using [`SET PERSIST`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment"), for example: [`--tls-version=TLSv12`](server-system-variables.html#sysvar_tls_version).*Do
    all MySQL Connectors (5.7 and 8.0) support TLS 1.2 and higher? What about C and
    C++ applications using `libmysql`?* For C and C++ applications using the community
    `libmysqlclient` library, use an OpenSSL-based library (that is, do *not* use
    YaSSL). Usage of OpenSSL was unified in 2018 (in MySQL 8.0.4 and 5.7.28, respectively).
    The same applies for Connector/ODBC and Connector/C++. To determine what library
    dependencies are used, run the following commands to see if OpenSSL is listed.
    On Linux, use this command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这些查询提供了确定哪个应用程序不支持 TLS 1.2 或 1.3 所需的详细信息，并针对升级进行目标升级。*是否有其他测试 TLS 1.0 或 1.1
    的选项？* 是的，您可以在将服务器升级到新版本之前禁用这些版本。明确指定要使用的版本，可以在 `mysql.cnf`（或 `mysql.ini`）中或通过
    [`SET PERSIST`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    来指定，例如：[`--tls-version=TLSv12`](server-system-variables.html#sysvar_tls_version)。*所有
    MySQL 连接器（5.7 和 8.0）是否支持 TLS 1.2 及更高版本？C 和 C++ 应用程序使用 `libmysql` 呢？* 对于使用社区 `libmysqlclient`
    库的 C 和 C++ 应用程序，请使用基于 OpenSSL 的库（即，*不要* 使用 YaSSL）。在 2018 年统一使用 OpenSSL（分别在 MySQL
    8.0.4 和 5.7.28 中）。对于 Connector/ODBC 和 Connector/C++ 也是如此。要确定使用了哪些库依赖项，请运行以下命令查看
    OpenSSL 是否被列出。在 Linux 上，使用以下命令：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'On MacOS, use this command:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MacOS 上，使用以下命令：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*What about Connector/J?* Java 8 moved to TLS 1.2 as the default in January
    2014; TLS 1.2 was supported prior to that, so unless you are running a very old
    version of Connector/J, you have TLS 1.2 support.*What about Connector/NET?* For
    .NET applications, Microsoft stopped support of TLS 1.0 and 1.1 at the end of
    2020\. Support for TLS 1.2 was added in 2012\. You would need to have a very old
    version of Connector/NET not to have support for TLS 1.2.*What about Connector/Python?*
    It depends on what version of Python you are running. The SSL module in Python
    2.6 supports TLS up to version 1.0 only. In that case, you will need to upgrade
    to Python 2.7.9 or higher, or Python 3.x, both of which support newer versions
    of TLS. For details, see [Connector/Python Versions](/doc/connector-python/en/connector-python-versions.html)
    and [https://www.calazan.com/how-to-check-if-your-python-app-supports-tls-12/](https://www.calazan.com/how-to-check-if-your-python-app-supports-tls-12/).*What
    about Connector/Node.js or Node MySQL2?* TLS comes with `nodejs`, and all supported
    versions of Node.js use OpenSSL v1.1.1 (as of April 2020), which again supports
    TLS 1.2 and higher.*What about PHP?* [These versions of PHP](https://www.php.net/supported-versions.php)
    support TLS 1.2 and higher. |'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*关于 Connector/J？* Java 8 在 2014 年 1 月将 TLS 1.2 作为默认版本；在此之前就已经支持了 TLS 1.2，所以除非你在运行一个非常老的版本的
    Connector/J，否则你已经支持 TLS 1.2 了。*关于 Connector/NET？* 对于 .NET 应用程序，微软在 2020 年底停止了对
    TLS 1.0 和 1.1 的支持。TLS 1.2 在 2012 年就已经添加了支持。你需要一个非常老的版本的 Connector/NET 才不支持 TLS
    1.2。*关于 Connector/Python？* 这取决于你运行的 Python 版本。Python 2.6 中的 SSL 模块只支持到 1.0 版本的
    TLS。在这种情况下，你需要升级到 Python 2.7.9 或更高版本，或者使用 Python 3.x，两者都支持更新版本的 TLS。详情请参见 [Connector/Python
    版本](/doc/connector-python/en/connector-python-versions.html) 和 [https://www.calazan.com/how-to-check-if-your-python-app-supports-tls-12/](https://www.calazan.com/how-to-check-if-your-python-app-supports-tls-12/)。*关于
    Connector/Node.js 或 Node MySQL2？* TLS 随 `nodejs` 一起提供，所有支持的 Node.js 版本使用 OpenSSL
    v1.1.1（截至 2020 年 4 月），再次支持 TLS 1.2 及更高版本。*关于 PHP？* [这些版本的 PHP](https://www.php.net/supported-versions.php)
    支持 TLS 1.2 及更高版本。'
