- en: 17.13 InnoDB Data-at-Rest Encryption
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.13 InnoDB数据静态加密
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-data-encryption.html)
- en: '`InnoDB` supports data-at-rest encryption for [file-per-table](glossary.html#glos_file_per_table
    "file-per-table") tablespaces, [general](glossary.html#glos_general_tablespace
    "general tablespace") tablespaces, the `mysql` system tablespace, redo logs, and
    undo logs.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`支持对[file-per-table](glossary.html#glos_file_per_table "file-per-table")表空间、[通用](glossary.html#glos_general_tablespace
    "通用表空间")表空间、`mysql`系统表空间、重做日志和撤销日志进行数据静态加密。'
- en: As of MySQL 8.0.16, setting an encryption default for schemas and general tablespaces
    is also supported, which permits DBAs to control whether tables created in those
    schemas and tablespaces are encrypted.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.16版本，还支持为模式和通用表空间设置加密默认值，这使得DBA可以控制在这些模式和表空间中创建的表是否加密。
- en: '`InnoDB` data-at-rest encryption features and capabilities are described under
    the following topics in this section.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`数据静态加密的特性和功能在本节的以下主题中描述。'
- en: '[About Data-at-Rest Encryption](innodb-data-encryption.html#innodb-data-encryption-about
    "About Data-at-Rest Encryption")'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[关于数据静态加密](innodb-data-encryption.html#innodb-data-encryption-about "关于数据静态加密")'
- en: '[Encryption Prerequisites](innodb-data-encryption.html#innodb-data-encryption-encryption-prerequisites
    "Encryption Prerequisites")'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加密先决条件](innodb-data-encryption.html#innodb-data-encryption-encryption-prerequisites
    "加密先决条件")'
- en: '[Defining an Encryption Default for Schemas and General Tablespaces](innodb-data-encryption.html#innodb-schema-tablespace-encryption-default
    "Defining an Encryption Default for Schemas and General Tablespaces")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为模式和通用表空间定义加密默认值](innodb-data-encryption.html#innodb-schema-tablespace-encryption-default
    "为模式和通用表空间定义加密默认值")'
- en: '[File-Per-Table Tablespace Encryption](innodb-data-encryption.html#innodb-data-encryption-enabling-disabling
    "File-Per-Table Tablespace Encryption")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[文件-每表表空间加密](innodb-data-encryption.html#innodb-data-encryption-enabling-disabling
    "文件-每表表空间加密")'
- en: '[General Tablespace Encryption](innodb-data-encryption.html#innodb-general-tablespace-encryption-enabling-disabling
    "General Tablespace Encryption")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通用表空间加密](innodb-data-encryption.html#innodb-general-tablespace-encryption-enabling-disabling
    "通用表空间加密")'
- en: '[Doublewrite File Encryption](innodb-data-encryption.html#innodb-doublewrite-file-encryption
    "Doublewrite File Encryption")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[双写文件加密](innodb-data-encryption.html#innodb-doublewrite-file-encryption "双写文件加密")'
- en: '[mysql System Tablespace Encryption](innodb-data-encryption.html#innodb-mysql-tablespace-encryption-enabling-disabling
    "mysql System Tablespace Encryption")'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[mysql系统表空间加密](innodb-data-encryption.html#innodb-mysql-tablespace-encryption-enabling-disabling
    "mysql系统表空间加密")'
- en: '[Redo Log Encryption](innodb-data-encryption.html#innodb-data-encryption-redo-log
    "Redo Log Encryption")'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[重做日志加密](innodb-data-encryption.html#innodb-data-encryption-redo-log "重做日志加密")'
- en: '[Undo Log Encryption](innodb-data-encryption.html#innodb-data-encryption-undo-log
    "Undo Log Encryption")'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[撤销日志加密](innodb-data-encryption.html#innodb-data-encryption-undo-log "撤销日志加密")'
- en: '[Master Key Rotation](innodb-data-encryption.html#innodb-data-encryption-master-key-rotation
    "Master Key Rotation")'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[主密钥轮换](innodb-data-encryption.html#innodb-data-encryption-master-key-rotation
    "主密钥轮换")'
- en: '[Encryption and Recovery](innodb-data-encryption.html#innodb-data-encryption-recovery
    "Encryption and Recovery")'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加密和恢复](innodb-data-encryption.html#innodb-data-encryption-recovery "加密和恢复")'
- en: '[Exporting Encrypted Tablespaces](innodb-data-encryption.html#innodb-data-encryption-exporting
    "Exporting Encrypted Tablespaces")'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[导出加密表空间](innodb-data-encryption.html#innodb-data-encryption-exporting "导出加密表空间")'
- en: '[Encryption and Replication](innodb-data-encryption.html#innodb-data-encryption-replication
    "Encryption and Replication")'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加密和复制](innodb-data-encryption.html#innodb-data-encryption-replication "加密和复制")'
- en: '[Identifying Encrypted Tablespaces and Schemas](innodb-data-encryption.html#innodb-data-encryption-identifying
    "Identifying Encrypted Tablespaces and Schemas")'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[识别加密表空间和模式](innodb-data-encryption.html#innodb-data-encryption-identifying
    "识别加密表空间和模式")'
- en: '[Monitoring Encryption Progress](innodb-data-encryption.html#innodb-data-encryption-progress-monitoring
    "Monitoring Encryption Progress")'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[监控加密进度](innodb-data-encryption.html#innodb-data-encryption-progress-monitoring
    "监控加密进度")'
- en: '[Encryption Usage Notes](innodb-data-encryption.html#innodb-data-encryption-usage-notes
    "Encryption Usage Notes")'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加密使用注意事项](innodb-data-encryption.html#innodb-data-encryption-usage-notes "加密使用注意事项")'
- en: '[Encryption Limitations](innodb-data-encryption.html#innodb-data-encryption-limitations
    "Encryption Limitations")'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[加密限制](innodb-data-encryption.html#innodb-data-encryption-limitations "加密限制")'
- en: About Data-at-Rest Encryption
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于数据静态加密
- en: '`InnoDB` uses a two tier encryption key architecture, consisting of a master
    encryption key and tablespace keys. When a tablespace is encrypted, a tablespace
    key is encrypted and stored in the tablespace header. When an application or authenticated
    user wants to access encrypted tablespace data, `InnoDB` uses a master encryption
    key to decrypt the tablespace key. The decrypted version of a tablespace key never
    changes, but the master encryption key can be changed as required. This action
    is referred to as *master key rotation*.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB` 使用两层加密密钥架构，包括主加密密钥和表空间密钥。当一个表空间被加密时，表空间密钥会被加密并存储在表空间头部。当应用程序或经过身份验证的用户想要访问加密的表空间数据时，`InnoDB`
    使用主加密密钥来解密表空间密钥。解密后的表空间密钥版本永远不会改变，但主加密密钥可以根据需要更改。这个操作被称为*主密钥轮换*。'
- en: The data-at-rest encryption feature relies on a keyring component or plugin
    for master encryption key management.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 数据静态加密功能依赖于密钥环组件或插件进行主加密密钥管理。
- en: All MySQL editions provide a `component_keyring_file` component and `keyring_file`
    plugin, each of which stores keyring data in a file local to the server host.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 所有MySQL版本都提供 `component_keyring_file` 组件和 `keyring_file` 插件，每个都将密钥环数据存储在服务器主机本地的文件中。
- en: 'MySQL Enterprise Edition offers additional keyring components and plugins:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL企业版提供额外的密钥环组件和插件：
- en: '`component_keyring_encrypted_file`: Stores keyring data in an encrypted, password-protected
    file local to the server host.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`component_keyring_encrypted_file`：将密钥环数据存储在服务器主机本地的加密、受密码保护的文件中。'
- en: '`keyring_encrypted_file`: Stores keyring data in an encrypted, password-protected
    file local to the server host.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`keyring_encrypted_file`：将密钥环数据存储在服务器主机本地的加密、受密码保护的文件中。'
- en: '`keyring_okv`: A KMIP 1.1 plugin for use with KMIP-compatible back end keyring
    storage products. Supported KMIP-compatible products include centralized key management
    solutions such as Oracle Key Vault, Gemalto KeySecure, Thales Vormetric key management
    server, and Fornetix Key Orchestration.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`keyring_okv`：用于与支持KMIP的后端密钥环存储产品一起使用的KMIP 1.1插件。支持的KMIP兼容产品包括集中式密钥管理解决方案，如Oracle
    Key Vault、Gemalto KeySecure、Thales Vormetric密钥管理服务器和Fornetix Key Orchestration。'
- en: '`keyring_aws`: Communicates with the Amazon Web Services Key Management Service
    (AWS KMS) as a back end for key generation and uses a local file for key storage.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`keyring_aws`：与亚马逊网络服务密钥管理服务（AWS KMS）通信，作为密钥生成的后端，并使用本地文件进行密钥存储。'
- en: '`keyring_hashicorp`: Communicates with HashiCorp Vault for back end storage.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`keyring_hashicorp`：与HashiCorp Vault通信，作为后端存储。'
- en: Warning
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: For encryption key management, the `component_keyring_file` and `component_keyring_encrypted_file`
    components, and the `keyring_file` and `keyring_encrypted_file` plugins are not
    intended as a regulatory compliance solution. Security standards such as PCI,
    FIPS, and others require use of key management systems to secure, manage, and
    protect encryption keys in key vaults or hardware security modules (HSMs).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于加密密钥管理，`component_keyring_file` 和 `component_keyring_encrypted_file` 组件，以及
    `keyring_file` 和 `keyring_encrypted_file` 插件并不作为符合监管合规性的解决方案。诸如PCI、FIPS等安全标准要求使用密钥管理系统来在密钥保险库或硬件安全模块（HSM）中安全、管理和保护加密密钥。
- en: A secure and robust encryption key management solution is critical for security
    and for compliance with various security standards. When the data-at-rest encryption
    feature uses a centralized key management solution, the feature is referred to
    as “MySQL Enterprise Transparent Data Encryption (TDE)”.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 安全而强大的加密密钥管理解决方案对于安全性和符合各种安全标准至关重要。当数据静态加密功能使用集中式密钥管理解决方案时，该功能被称为“MySQL企业透明数据加密（TDE）”。
- en: The data-at-rest encryption feature supports the Advanced Encryption Standard
    (AES) block-based encryption algorithm. It uses Electronic Codebook (ECB) block
    encryption mode for tablespace key encryption and Cipher Block Chaining (CBC)
    block encryption mode for data encryption.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 数据静态加密功能支持高级加密标准（AES）块加密算法。它使用电子密码本（ECB）块加密模式进行表空间密钥加密，使用密码块链接（CBC）块加密模式进行数据加密。
- en: 'For frequently asked questions about the data-at-rest encryption feature, see
    [Section A.17, “MySQL 8.0 FAQ: InnoDB Data-at-Rest Encryption”](faqs-tablespace-encryption.html
    "A.17 MySQL 8.0 FAQ: InnoDB Data-at-Rest Encryption").'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有关数据静态加密功能的常见问题，请参见[Section A.17，“MySQL 8.0 FAQ：InnoDB数据静态加密”](faqs-tablespace-encryption.html
    "A.17 MySQL 8.0 FAQ：InnoDB数据静态加密")。
- en: Encryption Prerequisites
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加密先决条件
- en: A keyring component or plugin must be installed and configured at startup. Early
    loading ensures that the component or plugin is available prior to initialization
    of the `InnoDB` storage engine. For keyring installation and configuration instructions,
    see [Section 8.4.4, “The MySQL Keyring”](keyring.html "8.4.4 The MySQL Keyring").
    The instructions show how to ensure that the chosen component or plugin is active.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密钥环组件或插件必须在启动时安装和配置。早期加载确保在初始化`InnoDB`存储引擎之前可用该组件或插件。有关密钥环安装和配置说明，请参见[Section 8.4.4，“MySQL密钥环”](keyring.html
    "8.4.4 MySQL密钥环")。说明显示如何确保所选组件或插件处于活动状态。
- en: Only one keyring component or plugin should be enabled at a time. Enabling multiple
    keyring components or plugins is unsupported and results may not be as anticipated.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一次只能启用一个密钥环组件或插件。启用多个密钥环组件或插件是不受支持的，结果可能不如预期。
- en: Important
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要
- en: Once encrypted tablespaces are created in a MySQL instance, the keyring component
    or plugin that was loaded when creating the encrypted tablespace must continue
    to be loaded at startup. Failing to do so results in errors when starting the
    server and during `InnoDB` recovery.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦在MySQL实例中创建了加密表空间，创建加密表空间时加载的密钥环组件或插件必须继续在启动时加载。如果未能这样做，将在启动服务器和`InnoDB`恢复期间出现错误。
- en: When encrypting production data, ensure that you take steps to prevent loss
    of the master encryption key. *If the master encryption key is lost, data stored
    in encrypted tablespace files is unrecoverable.* If you use the `component_keyring_file`
    or `component_keyring_encrypted_file` component, or the `keyring_file` or `keyring_encrypted_file`
    plugin, create a backup of the keyring data file immediately after creating the
    first encrypted tablespace, before master key rotation, and after master key rotation.
    For each component, its configuration file indicates the data file location. The
    [`keyring_file_data`](keyring-system-variables.html#sysvar_keyring_file_data)
    configuration option defines the keyring data file location for the `keyring_file`
    plugin. The [`keyring_encrypted_file_data`](keyring-system-variables.html#sysvar_keyring_encrypted_file_data)
    configuration option defines the keyring data file location for the `keyring_encrypted_file`
    plugin. If you use the `keyring_okv` or `keyring_aws` plugin, ensure that you
    have performed the necessary configuration. For instructions, see [Section 8.4.4,
    “The MySQL Keyring”](keyring.html "8.4.4 The MySQL Keyring").
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在加密生产数据时，请确保采取措施防止主加密密钥丢失。*如果主加密密钥丢失，则存储在加密表空间文件中的数据将无法恢复。* 如果您使用`component_keyring_file`或`component_keyring_encrypted_file`组件，或者`keyring_file`或`keyring_encrypted_file`插件，在创建第一个加密表空间后立即创建密钥环数据文件的备份，在主密钥轮换之前和之后。对于每个组件，其配置文件指示数据文件位置。[`keyring_file_data`](keyring-system-variables.html#sysvar_keyring_file_data)配置选项定义了`keyring_file`插件的密钥环数据文件位置。[`keyring_encrypted_file_data`](keyring-system-variables.html#sysvar_keyring_encrypted_file_data)配置选项定义了`keyring_encrypted_file`插件的密钥环数据文件位置。如果您使用`keyring_okv`或`keyring_aws`插件，请确保已执行必要的配置。有关说明，请参见[Section 8.4.4，“MySQL密钥环”](keyring.html
    "8.4.4 MySQL密钥环")。
- en: Defining an Encryption Default for Schemas and General Tablespaces
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为模式和常规表空间定义加密默认值
- en: As of MySQL 8.0.16, the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    system variable defines the default encryption setting for schemas and general
    tablespaces. [`CREATE TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE
    Statement") and [`CREATE SCHEMA`](create-database.html "15.1.12 CREATE DATABASE
    Statement") operations apply the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    setting when an `ENCRYPTION` clause is not specified explicitly.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.16开始，[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)系统变量定义了模式和常规表空间的默认加密设置。在未明确指定`ENCRYPTION`子句时，[`CREATE
    TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE Statement")和[`CREATE
    SCHEMA`](create-database.html "15.1.12 CREATE DATABASE Statement")操作将应用[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置。
- en: '[`ALTER SCHEMA`](alter-database.html "15.1.2 ALTER DATABASE Statement") and
    [`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")
    operations do not apply the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    setting. An `ENCRYPTION` clause must be specified explicitly to alter the encryption
    of an existing schema or general tablespace.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ALTER SCHEMA`](alter-database.html "15.1.2 ALTER DATABASE Statement")和[`ALTER
    TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")操作不适用于[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置。必须明确指定`ENCRYPTION`子句才能更改现有模式或通用表空间的加密。'
- en: 'The [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    variable can be set for an individual client connection or globally using [`SET`](set-variable.html
    "15.7.6.1 SET Syntax for Variable Assignment") syntax. For example, the following
    statement enables default schema and tablespace encryption globally:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用[`SET`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")语法为单个客户端连接或全局设置[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)变量。例如，以下语句在全局范围内启用默认模式和表空间加密：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The default encryption setting for a schema can also be defined using the `DEFAULT
    ENCRYPTION` clause when creating or altering a schema, as in this example:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以在创建或更改模式时使用`DEFAULT ENCRYPTION`子句来定义模式的默认加密设置，如下例所示：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If the `DEFAULT ENCRYPTION` clause is not specified when creating a schema,
    the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    setting is applied. The `DEFAULT ENCRYPTION` clause must be specified to alter
    the default encryption of an existing schema. Otherwise, the schema retains its
    current encryption setting.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在创建模式时未指定`DEFAULT ENCRYPTION`子句，则将应用[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置。必须指定`DEFAULT
    ENCRYPTION`子句才能更改现有模式的默认加密。否则，模式将保留其当前的加密设置。
- en: By default, a table inherits the encryption setting of the schema or general
    tablespace it is created in. For example, a table created in an encryption-enabled
    schema is encrypted by default. This behavior enables a DBA to control table encryption
    usage by defining and enforcing schema and general tablespace encryption defaults.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，表继承所在模式或通用表空间的加密设置。例如，在启用加密的模式中创建的表默认是加密的。此行为使得数据库管理员可以通过定义和强制模式和通用表空间加密默认值来控制表加密的使用。
- en: Encryption defaults are enforced by enabling the [`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)
    system variable. When [`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)
    is enabled, a privilege check occurs when creating or altering a schema or general
    tablespace with an encryption setting that differs from the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    setting, or when creating or altering a table with an encryption setting that
    differs from the default schema encryption. When [`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)
    is disabled (the default), the privilege check does not occur and the previously
    mentioned operations are permitted to proceed with a warning.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 加密默认值是通过启用[`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)系统变量来强制执行的。当启用[`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)时，在创建或更改具有与[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置不同的加密设置的模式或通用表空间，或者在创建或更改具有与默认模式加密不同的加密设置的表时，将进行权限检查。当禁用[`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)（默认情况下）时，权限检查不会发生，前述操作将被允许继续并显示警告。
- en: The [`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)
    privilege is required to override default encryption settings when [`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)
    is enabled. A DBA can grant this privilege to enable a user to deviate from the
    [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    setting when creating or altering a schema or general tablespace, or to deviate
    from the default schema encryption when creating or altering a table. This privilege
    does not permit deviating from the encryption of a general tablespace when creating
    or altering a table. A table must have the same encryption setting as the general
    tablespace it resides in.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用[`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)时，需要[`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)权限来覆盖默认加密设置。数据库管理员可以授予此权限，以使用户能够在创建或更改模式或通用表空间时偏离[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置，或在创建或更改表时偏离默认模式加密。此权限不允许在创建或更改表时偏离通用表空间的加密。表必须与其所在的通用表空间具有相同的加密设置。
- en: File-Per-Table Tablespace Encryption
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每表表空间加密
- en: As of MySQL 8.0.16, a file-per-table tablespace inherits the default encryption
    of the schema in which the table is created unless an `ENCRYPTION` clause is specified
    explicitly in the [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")
    statement. Prior to MySQL 8.0.16, the `ENCRYPTION` clause must be specified to
    enable encryption.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.16开始，每表表空间将继承创建表所在模式的默认加密，除非在[`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement")语句中明确指定了一个`ENCRYPTION`子句。在MySQL 8.0.16之前，必须指定`ENCRYPTION`子句才能启用加密。
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To alter the encryption of an existing file-per-table tablespace, an `ENCRYPTION`
    clause must be specified.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改现有每表表空间的加密方式，必须指定一个`ENCRYPTION`子句。
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As of MySQL 8.0.16, if the [`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)
    variable is enabled, specifying an `ENCRYPTION` clause with a setting that differs
    from the default schema encryption requires the [`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)
    privilege. See [Defining an Encryption Default for Schemas and General Tablespaces](innodb-data-encryption.html#innodb-schema-tablespace-encryption-default
    "Defining an Encryption Default for Schemas and General Tablespaces").
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.16开始，如果启用了[`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)变量，则指定一个与默认模式加密不同的设置的`ENCRYPTION`子句需要[`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)权限。请参阅[为模式和通用表空间定义加密默认值](innodb-data-encryption.html#innodb-schema-tablespace-encryption-default
    "为模式和通用表空间定义加密默认值")。
- en: General Tablespace Encryption
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通用表空间加密
- en: As of MySQL 8.0.16, the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    variable determines the encryption of a newly created general tablespace unless
    an `ENCRYPTION` clause is specified explicitly in the [`CREATE TABLESPACE`](create-tablespace.html
    "15.1.21 CREATE TABLESPACE Statement") statement. Prior to MySQL 8.0.16, an `ENCRYPTION`
    clause must be specified to enable encryption.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.16开始，[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)变量确定新创建的通用表空间的加密，除非在[`CREATE
    TABLESPACE`](create-tablespace.html "15.1.21 CREATE TABLESPACE Statement")语句中明确指定了一个`ENCRYPTION`子句。在MySQL
    8.0.16之前，必须指定`ENCRYPTION`子句才能启用加密。
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: To alter the encryption of an existing general tablespace, an `ENCRYPTION` clause
    must be specified.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改现有通用表空间的加密方式，必须指定一个`ENCRYPTION`子句。
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As of MySQL 8.0.16, if the [`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)
    variable is enabled, specifying an `ENCRYPTION` clause with a setting that differs
    from the [`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)
    setting requires the [`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)
    privilege. See [Defining an Encryption Default for Schemas and General Tablespaces](innodb-data-encryption.html#innodb-schema-tablespace-encryption-default
    "Defining an Encryption Default for Schemas and General Tablespaces").
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 截至MySQL 8.0.16，如果启用了[`table_encryption_privilege_check`](server-system-variables.html#sysvar_table_encryption_privilege_check)变量，则指定与[`default_table_encryption`](server-system-variables.html#sysvar_default_table_encryption)设置不同的设置的`ENCRYPTION`子句需要[`TABLE_ENCRYPTION_ADMIN`](privileges-provided.html#priv_table-encryption-admin)权限。参见[为模式和通用表空间定义加密默认值](innodb-data-encryption.html#innodb-schema-tablespace-encryption-default
    "为模式和通用表空间定义加密默认值")。
- en: Doublewrite File Encryption
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 双写文件加密
- en: Encryption support for doublewrite files is available as of MySQL 8.0.23\. `InnoDB`
    automatically encrypts doublewrite file pages that belong to encrypted tablespaces.
    No action is required. Doublewrite file pages are encrypted using the encryption
    key of the associated tablespace. The same encrypted page written to a tablespace
    data file is also written to a doublewrite file. Doublewrite file pages that belong
    to an unencrypted tablespace remain unencrypted.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.23开始，双写文件的加密支持可用。`InnoDB`会自动加密属于加密表空间的双写文件页。不需要任何操作。双写文件页使用相关表空间的加密密钥进行加密。写入表空间数据文件的相同加密页也会写入双写文件。属于未加密表空间的双写文件页保持未加密状态。
- en: During recovery, encrypted doublewrite file pages are unencrypted and checked
    for corruption.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在恢复过程中，加密的双写文件页会被解密并检查是否损坏。
- en: mysql System Tablespace Encryption
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: mysql系统表空间加密
- en: Encryption support for the `mysql` system tablespace is available as of MySQL
    8.0.16.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.16开始，`mysql`系统表空间的加密支持可用。
- en: The `mysql` system tablespace contains the `mysql` system database and MySQL
    data dictionary tables. It is unencrypted by default. To enable encryption for
    the `mysql` system tablespace, specify the tablespace name and the `ENCRYPTION`
    option in an [`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE
    Statement") statement.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`mysql`系统表空间包含`mysql`系统数据库和MySQL数据字典表。默认情况下，它是未加密的。要为`mysql`系统表空间启用加密，需在[`ALTER
    TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement")语句中指定表空间名称和`ENCRYPTION`选项。'
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: To disable encryption for the `mysql` system tablespace, set `ENCRYPTION = 'N'`
    using an [`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER TABLESPACE
    Statement") statement.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要禁用`mysql`系统表空间的加密，使用[`ALTER TABLESPACE`](alter-tablespace.html "15.1.10 ALTER
    TABLESPACE Statement")语句设置`ENCRYPTION = 'N'`。
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Enabling or disabling encryption for the `mysql` system tablespace requires
    the [`CREATE TABLESPACE`](privileges-provided.html#priv_create-tablespace) privilege
    on all tables in the instance (`CREATE TABLESPACE on *.*)`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 启用或禁用`mysql`系统表空间的加密需要在实例中所有表上具有[`CREATE TABLESPACE`](privileges-provided.html#priv_create-tablespace)权限（`CREATE
    TABLESPACE on *.*`）。
- en: Redo Log Encryption
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重做日志加密
- en: Redo log data encryption is enabled using the [`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)
    configuration option. Redo log encryption is disabled by default.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 重做日志数据加密是通过[`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)配置选项启用的。默认情况下，重做日志加密是禁用的。
- en: As with tablespace data, redo log data encryption occurs when redo log data
    is written to disk, and decryption occurs when redo log data is read from disk.
    Once redo log data is read into memory, it is in unencrypted form. Redo log data
    is encrypted and decrypted using the tablespace encryption key.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 与表空间数据一样，重做日志数据加密发生在重做日志数据写入磁盘时，解密发生在重做日志数据从磁盘读取时。一旦重做日志数据被读入内存，它就是未加密的形式。重做日志数据使用表空间加密密钥进行加密和解密。
- en: When [`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)
    is enabled, unencrypted redo log pages that are present on disk remain unencrypted,
    and new redo log pages are written to disk in encrypted form. Likewise, when [`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)
    is disabled, encrypted redo log pages that are present on disk remain encrypted,
    and new redo log pages are written to disk in unencrypted form.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用[`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)时，磁盘上存在的未加密重做日志页面保持未加密，新的重做日志页面以加密形式写入磁盘。同样，当禁用[`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)时，磁盘上存在的加密重做日志页面保持加密，新的重做日志页面以未加密形式写入磁盘。
- en: Warning
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: 'A regression introduced in MySQL 8.0.30 prevents disabling redo log encryption
    once it is enabled. (Bug #108052, Bug #34456802).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 'MySQL 8.0.30中引入的一个回归阻止一旦启用重做日志加密就禁用它。（Bug #108052，Bug #34456802）。'
- en: From MySQL 8.0.30, redo log encryption metadata, including the tablespace encryption
    key, is stored in the header of the redo log file with the most recent checkpoint
    LSN. Before MySQL 8.0.30, redo log encryption metadata, including the tablespace
    encryption key, is stored in the header of the first redo log file (`ib_logfile0`).
    If the redo log file with the encryption metadata is removed, redo log encryption
    is disabled.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.30开始，包括表空间加密密钥在内的重做日志加密元数据存储在具有最新检查点LSN的重做日志文件的头部。在MySQL 8.0.30之前，包括表空间加密密钥在内的重做日志加密元数据存储在第一个重做日志文件（`ib_logfile0`）的头部。如果带有加密元数据的重做日志文件被移除，则重做日志加密被禁用。
- en: Once redo log encryption is enabled, a normal restart without the keyring component
    or plugin or without the encryption key is not possible, as `InnoDB` must be able
    to scan redo pages during startup, which is not possible if redo log pages are
    encrypted. Without the keyring component or plugin or the encryption key, only
    a forced startup without the redo logs (`SRV_FORCE_NO_LOG_REDO`) is possible.
    See [Section 17.21.3, “Forcing InnoDB Recovery”](forcing-innodb-recovery.html
    "17.21.3 Forcing InnoDB Recovery").
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启用重做日志加密，没有密钥环组件或插件或没有加密密钥的情况下，无法进行正常重启，因为`InnoDB`必须能够在启动时扫描重做页面，如果重做日志页面被加密，则无法实现。没有密钥环组件或插件或加密密钥，只能进行强制启动而不使用重做日志（`SRV_FORCE_NO_LOG_REDO`）。参见[第17.21.3节，“强制InnoDB恢复”](forcing-innodb-recovery.html
    "17.21.3 强制InnoDB恢复")。
- en: Undo Log Encryption
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 撤销日志加密
- en: Undo log data encryption is enabled using the [`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)
    configuration option. Undo log encryption applies to undo logs that reside in
    [undo tablespaces](glossary.html#glos_undo_tablespace "undo tablespace"). See
    [Section 17.6.3.4, “Undo Tablespaces”](innodb-undo-tablespaces.html "17.6.3.4 Undo
    Tablespaces"). Undo log data encryption is disabled by default.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)配置选项启用撤销日志数据加密。撤销日志加密适用于驻留在[撤销表空间](glossary.html#glos_undo_tablespace
    "撤销表空间")中的撤销日志。参见[第17.6.3.4节，“撤销表空间”](innodb-undo-tablespaces.html "17.6.3.4 撤销表空间")。默认情况下，撤销日志数据加密是禁用的。
- en: As with tablespace data, undo log data encryption occurs when undo log data
    is written to disk, and decryption occurs when undo log data is read from disk.
    Once undo log data is read into memory, it is in unencrypted form. Undo log data
    is encrypted and decrypted using the tablespace encryption key.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 与表空间数据一样，撤销日志数据加密发生在将撤销日志数据写入磁盘时，解密发生在从磁盘读取撤销日志数据时。一旦撤销日志数据被读入内存，它就是未加密的形式。撤销日志数据使用表空间加密密钥进行加密和解密。
- en: When [`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)
    is enabled, unencrypted undo log pages that are present on disk remain unencrypted,
    and new undo log pages are written to disk in encrypted form. Likewise, when [`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)
    is disabled, encrypted undo log pages that are present on disk remain encrypted,
    and new undo log pages are written to disk in unencrypted form.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当启用[`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)时，磁盘上存在的未加密撤销日志页面保持未加密，新的撤销日志页面以加密形式写入磁盘。同样，当禁用[`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)时，磁盘上存在的加密撤销日志页面保持加密，新的撤销日志页面以未加密形式写入磁盘。
- en: Undo log encryption metadata, including the tablespace encryption key, is stored
    in the header of the undo log file.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 撤销日志加密元数据，包括表空间加密密钥，存储在撤销日志文件的头部。
- en: Note
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When undo log encryption is disabled, the server continues to require the keyring
    component or plugin that was used to encrypt undo log data until the undo tablespaces
    that contained the encrypted undo log data are truncated. (An encryption header
    is only removed from an undo tablespace when the undo tablespace is truncated.)
    For information about truncating undo tablespaces, see [Truncating Undo Tablespaces](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "Truncating Undo Tablespaces").
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当撤销日志加密被禁用时，服务器将继续要求用于加密撤销日志数据的密钥环组件或插件，直到包含加密撤销日志数据的撤销表空间被截断。（仅当撤销表空间被截断时，加密头部才会从撤销表空间中移除。）有关截断撤销表空间的信息，请参阅[截断撤销表空间](innodb-undo-tablespaces.html#truncate-undo-tablespace
    "截断撤销表空间")。
- en: Master Key Rotation
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主密钥旋转
- en: The master encryption key should be rotated periodically and whenever you suspect
    that the key has been compromised.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 主加密密钥应定期旋转，以及在怀疑密钥已被泄露时。
- en: Master key rotation is an atomic, instance-level operation. Each time the master
    encryption key is rotated, all tablespace keys in the MySQL instance are re-encrypted
    and saved back to their respective tablespace headers. As an atomic operation,
    re-encryption must succeed for all tablespace keys once a rotation operation is
    initiated. If master key rotation is interrupted by a server failure, `InnoDB`
    rolls the operation forward on server restart. For more information, see [Encryption
    and Recovery](innodb-data-encryption.html#innodb-data-encryption-recovery "Encryption
    and Recovery").
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 主密钥旋转是一个原子级别的实例操作。每次旋转主加密密钥时，MySQL 实例中的所有表空间密钥都会重新加密并保存回各自的表空间头部。作为原子操作，一旦启动旋转操作，重新加密必须成功完成所有表空间密钥。如果主密钥旋转在服务器故障时中断，`InnoDB`
    在服务器重新启动时将操作向前推进。有关更多信息，请参阅[加密和恢复](innodb-data-encryption.html#innodb-data-encryption-recovery
    "加密和恢复")。
- en: Rotating the master encryption key only changes the master encryption key and
    re-encrypts tablespace keys. It does not decrypt or re-encrypt associated tablespace
    data.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转主加密密钥仅会更改主加密密钥并重新加密表空间密钥。它不会解密或重新加密相关的表空间数据。
- en: Rotating the master encryption key requires the [`ENCRYPTION_KEY_ADMIN`](privileges-provided.html#priv_encryption-key-admin)
    privilege (or the deprecated [`SUPER`](privileges-provided.html#priv_super) privilege).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转主加密密钥需要 [`ENCRYPTION_KEY_ADMIN`](privileges-provided.html#priv_encryption-key-admin)
    权限（或已弃用的 [`SUPER`](privileges-provided.html#priv_super) 权限）。
- en: 'To rotate the master encryption key, run:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要旋转主加密密钥，请运行：
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    supports concurrent DML. However, it cannot be run concurrently with tablespace
    encryption operations, and locks are taken to prevent conflicts that could arise
    from concurrent execution. If an [`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    operation is running, it must finish before a tablespace encryption operation
    can proceed, and vice versa.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    支持并发 DML。但是，它不能与表空间加密操作同时运行，并且会采取锁定以防止由并发执行引起的冲突。如果正在运行一个 [`ALTER INSTANCE ROTATE
    INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    操作，则必须等到该操作完成后，才能继续进行表空间加密操作，反之亦然。'
- en: Encryption and Recovery
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加密和恢复
- en: If a server failure occurs during an encryption operation, the operation is
    rolled forward when the server is restarted. For general tablespaces, the encryption
    operation is resumed in a background thread from the last processed page.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在加密操作期间发生服务器故障，则在服务器重新启动时将向前推进操作。对于一般表空间，加密操作将在后台线程中从上次处理的页面继续。
- en: If a server failure occurs during master key rotation, `InnoDB` continues the
    operation on server restart.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在主密钥旋转期间发生服务器故障，`InnoDB` 在服务器重新启动时继续操作。
- en: The keyring component or plugin must be loaded prior to storage engine initialization
    so that the information necessary to decrypt tablespace data pages can be retrieved
    from tablespace headers before `InnoDB` initialization and recovery activities
    access tablespace data. (See [Encryption Prerequisites](innodb-data-encryption.html#innodb-data-encryption-encryption-prerequisites
    "Encryption Prerequisites").)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 必须在存储引擎初始化之前加载密钥环组件或插件，以便在`InnoDB` 初始化和恢复活动访问表空间数据之前从表空间头部检索解密表空间数据页所需的信息（请参阅[加密先决条件](innodb-data-encryption.html#innodb-data-encryption-encryption-prerequisites
    "加密先决条件")）。
- en: When `InnoDB` initialization and recovery begin, the master key rotation operation
    resumes. Due to the server failure, some tablespace keys may already be encrypted
    using the new master encryption key. `InnoDB` reads the encryption data from each
    tablespace header, and if the data indicates that the tablespace key is encrypted
    using the old master encryption key, `InnoDB` retrieves the old key from the keyring
    and uses it to decrypt the tablespace key. `InnoDB` then re-encrypts the tablespace
    key using the new master encryption key and saves the re-encrypted tablespace
    key back to the tablespace header.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当`InnoDB`初始化和恢复开始时，主密钥旋转操作会继续。由于服务器故障，一些表空间密钥可能已经使用新的主加密密钥加密。`InnoDB`从每个表空间头读取加密数据，如果数据表明表空间密钥是使用旧的主加密密钥加密的，`InnoDB`会从keyring中检索旧密钥并用它解密表空间密钥。然后，`InnoDB`使用新的主加密密钥重新加密表空间密钥，并将重新加密的表空间密钥保存回表空间头。
- en: Exporting Encrypted Tablespaces
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出加密表空间
- en: Tablespace export is only supported for file-per-table tablespaces.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 仅支持文件-每表表空间的表空间导出。
- en: When an encrypted tablespace is exported, `InnoDB` generates a *transfer key*
    that is used to encrypt the tablespace key. The encrypted tablespace key and transfer
    key are stored in a `*`tablespace_name`*.cfp` file. This file together with the
    encrypted tablespace file is required to perform an import operation. On import,
    `InnoDB` uses the transfer key to decrypt the tablespace key in the `*`tablespace_name`*.cfp`
    file. For related information, see [Section 17.6.1.3, “Importing InnoDB Tables”](innodb-table-import.html
    "17.6.1.3 Importing InnoDB Tables").
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当导出加密表空间时，`InnoDB`会生成一个*传输密钥*，用于加密表空间密钥。加密的表空间密钥和传输密钥存储在一个`*`tablespace_name`*.cfp`文件中。这个文件和加密的表空间文件一起需要执行导入操作。在导入时，`InnoDB`使用传输密钥解密`*`tablespace_name`*.cfp`文件中的表空间密钥。有关更多信息，请参见[第17.6.1.3节，“导入InnoDB表”](innodb-table-import.html
    "17.6.1.3 导入InnoDB表")。
- en: Encryption and Replication
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加密和复制
- en: The [`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    statement is only supported in replication environments where the source and replica
    run a version of MySQL that supports tablespace encryption.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有在源和副本运行支持表空间加密的MySQL版本的复制环境中才支持[`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)语句。
- en: Successful [`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    statements are written to the binary log for replication on replicas.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成功的[`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)语句会被写入二进制日志，用于副本的复制。
- en: If an [`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    statement fails, it is not logged to the binary log and is not replicated on replicas.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果[`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)语句失败，则不会记录到二进制日志中，也不会在副本上复制。
- en: Replication of an [`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    operation fails if the keyring component or plugin is installed on the source
    but not on the replica.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果源上安装了keyring组件或插件，但副本上没有安装，则[`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)操作的复制会失败。
- en: If the `keyring_file` or `keyring_encrypted_file` plugin is installed on both
    the source and a replica but the replica does not have a keyring data file, the
    replicated [`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    statement creates the keyring data file on the replica, assuming the keyring file
    data is not cached in memory. [`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)
    uses keyring file data that is cached in memory, if available.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果源和副本上都安装了`keyring_file`或`keyring_encrypted_file`插件，但副本没有keyring数据文件，则复制的[`ALTER
    INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)语句会在副本上创建keyring数据文件，假设keyring文件数据没有缓存在内存中。如果可用，[`ALTER
    INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)会使用缓存在内存中的keyring文件数据。
- en: Identifying Encrypted Tablespaces and Schemas
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 识别加密表空间和模式
- en: The Information Schema [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") table, introduced in
    MySQL 8.0.13, includes an `ENCRYPTION` column that can be used to identify encrypted
    tablespaces.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8.0.13中引入的信息模式[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table")表包括一个`ENCRYPTION`列，可用于识别加密的表空间。
- en: '[PRE9]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When the `ENCRYPTION` option is specified in a [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") or [`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement") statement, it is recorded in the `CREATE_OPTIONS` column of
    [`INFORMATION_SCHEMA.TABLES`](information-schema-tables-table.html "28.3.38 The
    INFORMATION_SCHEMA TABLES Table"). This column can be queried to identify tables
    that reside in encrypted file-per-table tablespaces.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 当在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")或[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")语句中指定`ENCRYPTION`选项时，它将记录在[`INFORMATION_SCHEMA.TABLES`](information-schema-tables-table.html
    "28.3.38 The INFORMATION_SCHEMA TABLES Table")的`CREATE_OPTIONS`列中。可以查询此列以识别位于加密文件-每表表空间中的表。
- en: '[PRE10]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Query the Information Schema [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") table to retrieve information
    about the tablespace associated with a particular schema and table.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 查询信息模式[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table")表，以检索与特定模式和表关联的表空间的信息。
- en: '[PRE11]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can identify encryption-enabled schemas by querying the Information Schema
    [`SCHEMATA`](information-schema-schemata-table.html "28.3.31 The INFORMATION_SCHEMA
    SCHEMATA Table") table.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过查询信息模式[`SCHEMATA`](information-schema-schemata-table.html "28.3.31 The
    INFORMATION_SCHEMA SCHEMATA Table")表来识别启用加密的模式。
- en: '[PRE12]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[`SHOW CREATE SCHEMA`](show-create-database.html "15.7.7.6 SHOW CREATE DATABASE
    Statement") also shows the `DEFAULT ENCRYPTION` clause.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SHOW CREATE SCHEMA`](show-create-database.html "15.7.7.6 SHOW CREATE DATABASE
    Statement")还显示`DEFAULT ENCRYPTION`子句。'
- en: Monitoring Encryption Progress
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 监控加密进度
- en: You can monitor general tablespace and `mysql` system tablespace encryption
    progress using [Performance Schema](performance-schema.html "Chapter 29 MySQL
    Performance Schema").
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[性能模式](performance-schema.html "Chapter 29 MySQL Performance Schema")监视通用表空间和`mysql`系统表空间的加密进度。
- en: The `stage/innodb/alter tablespace (encryption)` stage event instrument reports
    `WORK_ESTIMATED` and `WORK_COMPLETED` information for general tablespace encryption
    operations.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`stage/innodb/alter tablespace (encryption)`阶段事件工具报告了通用表空间加密操作的`WORK_ESTIMATED`和`WORK_COMPLETED`信息。'
- en: The following example demonstrates how to enable the `stage/innodb/alter tablespace
    (encryption)` stage event instrument and related consumer tables to monitor general
    tablespace or `mysql` system tablespace encryption progress. For information about
    Performance Schema stage event instruments and related consumers, see [Section 29.12.5,
    “Performance Schema Stage Event Tables”](performance-schema-stage-tables.html
    "29.12.5 Performance Schema Stage Event Tables").
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了如何启用`stage/innodb/alter tablespace (encryption)`阶段事件工具和相关消费者表，以监视通用表空间或`mysql`系统表空间的加密进度。有关性能模式阶段事件工具和相关消费者的信息，请参阅[第29.12.5节，“性能模式阶段事件表”](performance-schema-stage-tables.html
    "29.12.5 Performance Schema Stage Event Tables")。
- en: 'Enable the `stage/innodb/alter tablespace (encryption)` instrument:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用`stage/innodb/alter tablespace (encryption)`工具：
- en: '[PRE13]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Enable the stage event consumer tables, which include [`events_stages_current`](performance-schema-events-stages-current-table.html
    "29.12.5.1 The events_stages_current Table"), [`events_stages_history`](performance-schema-events-stages-history-table.html
    "29.12.5.2 The events_stages_history Table"), and [`events_stages_history_long`](performance-schema-events-stages-history-long-table.html
    "29.12.5.3 The events_stages_history_long Table").
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用包括[`events_stages_current`](performance-schema-events-stages-current-table.html
    "29.12.5.1 The events_stages_current Table")、[`events_stages_history`](performance-schema-events-stages-history-table.html
    "29.12.5.2 The events_stages_history Table")和[`events_stages_history_long`](performance-schema-events-stages-history-long-table.html
    "29.12.5.3 The events_stages_history_long Table")的阶段事件消费者表。
- en: '[PRE14]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Run a tablespace encryption operation. In this example, a general tablespace
    named `ts1` is encrypted.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行表空间加密操作。在此示例中，一个名为`ts1`的通用表空间被加密。
- en: '[PRE15]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Check the progress of the encryption operation by querying the Performance Schema
    [`events_stages_current`](performance-schema-events-stages-current-table.html
    "29.12.5.1 The events_stages_current Table") table. `WORK_ESTIMATED` reports the
    total number of pages in the tablespace. `WORK_COMPLETED` reports the number of
    pages processed.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过查询性能模式[`events_stages_current`](performance-schema-events-stages-current-table.html
    "29.12.5.1 events_stages_current表")表来检查加密操作的进度。`WORK_ESTIMATED`报告表空间中的总页数。`WORK_COMPLETED`报告已处理的页数。
- en: '[PRE16]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The [`events_stages_current`](performance-schema-events-stages-current-table.html
    "29.12.5.1 The events_stages_current Table") table returns an empty set if the
    encryption operation has completed. In this case, you can check the [`events_stages_history`](performance-schema-events-stages-history-table.html
    "29.12.5.2 The events_stages_history Table") table to view event data for the
    completed operation. For example:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果加密操作已完成，[`events_stages_current`](performance-schema-events-stages-current-table.html
    "29.12.5.1 events_stages_current表")表将返回一个空集。在这种情况下，您可以查询[`events_stages_history`](performance-schema-events-stages-history-table.html
    "29.12.5.2 events_stages_history表")表查看已完成操作的事件数据。例如：
- en: '[PRE17]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Encryption Usage Notes
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加密使用注意事项
- en: Plan appropriately when altering an existing file-per-table tablespace with
    the `ENCRYPTION` option. Tables residing in file-per-table tablespaces are rebuilt
    using the `COPY` algorithm. The `INPLACE` algorithm is used when altering the
    `ENCRYPTION` attribute of a general tablespace or the `mysql` system tablespace.
    The `INPLACE` algorithm permits concurrent DML on tables that reside in the general
    tablespace. Concurrent DDL is blocked.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当修改具有`ENCRYPTION`选项的现有每个文件表表空间时，请做好计划。驻留在每个文件表表空间中的表将使用`COPY`算法重建。当修改普通表空间或`mysql`系统表空间的`ENCRYPTION`属性时，将使用`INPLACE`算法。`INPLACE`算法允许在普通表空间中的表上进行并发DML。并发DDL被阻止。
- en: When a general tablespace or the `mysql` system tablespace is encrypted, all
    tables residing in the tablespace are encrypted. Likewise, a table created in
    an encrypted tablespace is encrypted.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当一个普通表空间或`mysql`系统表空间被加密时，驻留在表空间中的所有表都会被加密。同样，创建在加密表空间中的表也会被加密。
- en: If the server exits or is stopped during normal operation, it is recommended
    to restart the server using the same encryption settings that were configured
    previously.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果服务器在正常运行期间退出或停止，建议使用之前配置的相同加密设置重新启动服务器。
- en: The first master encryption key is generated when the first new or existing
    tablespace is encrypted.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个主加密密钥是在第一个新的或现有的表空间加密时生成的。
- en: Master key rotation re-encrypts tablespaces keys but does not change the tablespace
    key itself. To change a tablespace key, you must disable and re-enable encryption.
    For file-per-table tablespaces, re-encrypting the tablespace is an `ALGORITHM=COPY`
    operation that rebuilds the table. For general tablespaces and the `mysql` system
    tablespace, it is an `ALGORITHM=INPLACE` operation, which does not require rebuilding
    tables that reside in the tablespace.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主密钥轮换会重新加密表空间密钥，但不会更改表空间密钥本身。要更改表空间密钥，必须禁用并重新启用加密。对于每个表的文件表空间，重新加密表空间是一个`ALGORITHM=COPY`操作，重新构建表。对于普通表空间和`mysql`系统表空间，这是一个`ALGORITHM=INPLACE`操作，不需要重新构建驻留在表空间中的表。
- en: If a table is created with both the [`COMPRESSION`](create-table.html "15.1.20 CREATE
    TABLE Statement") and [`ENCRYPTION`](create-table.html "15.1.20 CREATE TABLE Statement")
    options, compression is performed before tablespace data is encrypted.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个表同时使用[`COMPRESSION`](create-table.html "15.1.20 CREATE TABLE语句")和[`ENCRYPTION`](create-table.html
    "15.1.20 CREATE TABLE语句")选项创建，压缩会在表空间数据加密之前执行。
- en: If a keyring data file (the file named by [`keyring_file_data`](keyring-system-variables.html#sysvar_keyring_file_data)
    or [`keyring_encrypted_file_data`](keyring-system-variables.html#sysvar_keyring_encrypted_file_data))
    is empty or missing, the first execution of [`ALTER INSTANCE ROTATE INNODB MASTER
    KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key) creates a master
    encryption key.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个密钥环数据文件（由[`keyring_file_data`](keyring-system-variables.html#sysvar_keyring_file_data)或[`keyring_encrypted_file_data`](keyring-system-variables.html#sysvar_keyring_encrypted_file_data)命名的文件）为空或丢失，第一次执行[`ALTER
    INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html#alter-instance-rotate-innodb-master-key)将创建一个主加密密钥。
- en: Uninstalling the `component_keyring_file` or `component_keyring_encrypted_file`
    component does not remove an existing keyring data file. Uninstalling the `keyring_file`
    or `keyring_encrypted_file` plugin does not remove an existing keyring data file.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卸载`component_keyring_file`或`component_keyring_encrypted_file`组件不会删除现有的密钥环数据文件。卸载`keyring_file`或`keyring_encrypted_file`插件不会删除现有的密钥环数据文件。
- en: It is recommended that you not place a keyring data file under the same directory
    as tablespace data files.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议不要将密钥环数据文件放在与表空间数据文件相同的目录下。
- en: Modifying the [`keyring_file_data`](keyring-system-variables.html#sysvar_keyring_file_data)
    or [`keyring_encrypted_file_data`](keyring-system-variables.html#sysvar_keyring_encrypted_file_data)
    setting at runtime or when restarting the server can cause previously encrypted
    tablespaces to become inaccessible, resulting in lost data.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在运行时或重新启动服务器时修改[`keyring_file_data`](keyring-system-variables.html#sysvar_keyring_file_data)或[`keyring_encrypted_file_data`](keyring-system-variables.html#sysvar_keyring_encrypted_file_data)设置可能导致先前加密的表空间无法访问，导致数据丢失。
- en: Encryption is supported for the `InnoDB` `FULLTEXT` index tables that are created
    implicitly when adding a `FULLTEXT` index. For related information, see [InnoDB
    Full-Text Index Tables](innodb-fulltext-index.html#innodb-fulltext-index-tables
    "InnoDB Full-Text Index Tables").
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持对通过添加`FULLTEXT`索引隐式创建的`InnoDB` `FULLTEXT`索引表进行加密。有关相关信息，请参阅[InnoDB全文索引表](innodb-fulltext-index.html#innodb-fulltext-index-tables
    "InnoDB Full-Text Index Tables")。
- en: Encryption Limitations
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加密限制
- en: Advanced Encryption Standard (AES) is the only supported encryption algorithm.
    `InnoDB` tablespace encryption uses Electronic Codebook (ECB) block encryption
    mode for tablespace key encryption and Cipher Block Chaining (CBC) block encryption
    mode for data encryption. Padding is not used with CBC block encryption mode.
    Instead, `InnoDB` ensures that the text to be encrypted is a multiple of the block
    size.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级加密标准（AES）是唯一支持的加密算法。`InnoDB`表空间加密使用电子密码本（ECB）块加密模式进行表空间密钥加密，使用密码块链接（CBC）块加密模式进行数据加密。在CBC块加密模式下不使用填充。相反，`InnoDB`确保要加密的文本是块大小的倍数。
- en: Encryption is only supported for [file-per-table](glossary.html#glos_file_per_table
    "file-per-table") tablespaces, [general](glossary.html#glos_general_tablespace
    "general tablespace") tablespaces, and the `mysql` system tablespace. Encryption
    support for general tablespaces was introduced in MySQL 8.0.13\. Encryption support
    for the `mysql` system tablespace is available as of MySQL 8.0.16\. Encryption
    is not supported for other tablespace types including the `InnoDB` [system tablespace](glossary.html#glos_system_tablespace
    "system tablespace").
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密仅支持[file-per-table](glossary.html#glos_file_per_table "file-per-table")表空间、[general](glossary.html#glos_general_tablespace
    "general tablespace")表空间和`mysql`系统表空间。MySQL 8.0.13引入了对general表空间的加密支持。MySQL 8.0.16引入了对`mysql`系统表空间的加密支持。不支持对其他表空间类型（包括`InnoDB`[系统表空间](glossary.html#glos_system_tablespace
    "system tablespace")）进行加密。
- en: You cannot move or copy a table from an encrypted [file-per-table](glossary.html#glos_file_per_table
    "file-per-table") tablespace, [general](glossary.html#glos_general_tablespace
    "general tablespace") tablespace, or the `mysql` system tablespace to a tablespace
    type that does not support encryption.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法将加密的[file-per-table](glossary.html#glos_file_per_table "file-per-table")表空间、[general](glossary.html#glos_general_tablespace
    "general tablespace")表空间或`mysql`系统表空间中的表移动或复制到不支持加密的表空间类型。
- en: You cannot move or copy a table from an encrypted tablespace to an unencrypted
    tablespace. However, moving a table from an unencrypted tablespace to an encrypted
    one is permitted. For example, you can move or copy a table from a unencrypted
    [file-per-table](glossary.html#glos_file_per_table "file-per-table") or [general](glossary.html#glos_general_tablespace
    "general tablespace") tablespace to an encrypted general tablespace.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法将表从加密的表空间移动或复制到未加密的表空间。但是，允许将表从未加密的表空间移动到加密的表空间。例如，可以将表从未加密的[file-per-table](glossary.html#glos_file_per_table
    "file-per-table")或[general](glossary.html#glos_general_tablespace "general tablespace")表空间移动或复制到加密的general表空间。
- en: By default, tablespace encryption only applies to data in the tablespace. Redo
    log and undo log data can be encrypted by enabling [`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)
    and [`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt).
    See [Redo Log Encryption](innodb-data-encryption.html#innodb-data-encryption-redo-log
    "Redo Log Encryption"), and [Undo Log Encryption](innodb-data-encryption.html#innodb-data-encryption-undo-log
    "Undo Log Encryption"). For information about binary log file and relay log file
    encryption, see [Section 19.3.2, “Encrypting Binary Log Files and Relay Log Files”](replication-binlog-encryption.html
    "19.3.2 Encrypting Binary Log Files and Relay Log Files").
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，表空间加密仅适用于表空间中的数据。可以通过启用[`innodb_redo_log_encrypt`](innodb-parameters.html#sysvar_innodb_redo_log_encrypt)和[`innodb_undo_log_encrypt`](innodb-parameters.html#sysvar_innodb_undo_log_encrypt)来加密重做日志和撤销日志数据。参见[重做日志加密](innodb-data-encryption.html#innodb-data-encryption-redo-log
    "重做日志加密")和[撤销日志加密](innodb-data-encryption.html#innodb-data-encryption-undo-log
    "撤销日志加密")。有关二进制日志文件和中继日志文件加密的信息，请参见[第19.3.2节，“加密二进制日志文件和中继日志文件”](replication-binlog-encryption.html
    "19.3.2 加密二进制日志文件和中继日志文件")。
- en: It is not permitted to change the storage engine of a table that resides in,
    or previously resided in, an encrypted tablespace.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许更改位于加密表空间中或先前位于加密表空间中的表的存储引擎。
