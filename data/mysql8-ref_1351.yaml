- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-functions.html](https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-functions.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-functions.html](https://dev.mysql.com/doc/refman/8.0/en/replication-gtids-functions.html)
- en: 19.1.3.8 Stored Function Examples to Manipulate GTIDs
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 19.1.3.8 操作GTID的存储函数示例
- en: 'This section provides examples of stored functions (see [Chapter 27, *Stored
    Objects*](stored-objects.html "Chapter 27 Stored Objects")) which you can create
    using some of the built-in functions provided by MySQL for use with GTID-based
    replication, listed here:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了使用MySQL提供的一些内置函数创建的存储函数示例（请参阅[第27章，*存储对象*](stored-objects.html "第27章 存储对象")），这些函数可用于与基于GTID的复制一起使用，列在此处：
- en: '[`GTID_SUBSET()`](gtid-functions.html#function_gtid-subset): Shows whether
    one GTID set is a subset of another.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`GTID_SUBSET()`](gtid-functions.html#function_gtid-subset)：显示一个GTID集合是否是另一个的子集。'
- en: '[`GTID_SUBTRACT()`](gtid-functions.html#function_gtid-subtract): Returns the
    GTIDs from one GTID set that are not in another.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`GTID_SUBTRACT()`](gtid-functions.html#function_gtid-subtract)：返回一个GTID集合中不在另一个中的GTID。'
- en: '`WAIT_FOR_EXECUTED_GTID_SET()`: Waits until all transactions in a given GTID
    set have been executed.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WAIT_FOR_EXECUTED_GTID_SET()`: 等待给定GTID集合中的所有事务被执行。'
- en: See [Section 14.18.2, “Functions Used with Global Transaction Identifiers (GTIDs)”](gtid-functions.html
    "14.18.2 Functions Used with Global Transaction Identifiers (GTIDs)"), more more
    information about the functions just listed.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有关刚列出的函数的更多信息，请参阅[第14.18.2节，“与全局事务标识符（GTID）一起使用的函数”](gtid-functions.html "14.18.2 与全局事务标识符（GTID）一起使用的函数")。
- en: 'Note that in these stored functions, the delimiter command has been used to
    change the MySQL statement delimiter to a vertical bar, like this:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在这些存储函数中，分隔符命令已被用于将MySQL语句分隔符更改为竖线，如下所示：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: All of the stored functions shown in this section take string representations
    of GTID sets as arguments, so GTID sets must always be quoted when used with them.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中显示的所有存储函数都将GTID集合的字符串表示作为参数，因此在与它们一起使用时，GTID集合必须始终带引号。
- en: 'This function returns nonzero (true) if two GTID sets are the same set, even
    if they are not formatted in the same way:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数在两个GTID集合相同时返回非零（true），即使它们的格式不同：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This function returns nonzero (true) if two GTID sets are disjoint:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数在两个GTID集合不相交时返回非零（true）：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This function returns nonzero (true) if two GTID sets are disjoint and `sum`
    is their union:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数在两个GTID集合不相交且`sum`为它们的并集时返回非零（true）：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This function returns a normalized form of the GTID set, in all uppercase,
    with no whitespace and no duplicates, with UUIDs in alphabetic order and intervals
    in numeric order:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回GTID集合的规范形式，全部大写，无空格和无重复，UUID按字母顺序排列，间隔按数字顺序排列：
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This function returns the union of two GTID sets:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回两个GTID集合的并集：
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This function returns the intersection of two GTID sets.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回两个GTID集合的交集。
- en: '[PRE6]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This function returns the symmetric difference between two GTID sets, that is,
    the GTIDs that exist in `gs1` but not in `gs2`, as well as the GTIDs that exist
    in `gs2` but not in `gs1`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回两个GTID集合之间的对称差异，即存在于`gs1`中但不存在于`gs2`中的GTID，以及存在于`gs2`中但不存在于`gs1`中的GTID。
- en: '[PRE7]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This function removes from a GTID set all the GTIDs with the specified origin,
    and returns the remaining GTIDs, if any. The UUID is the identifier used by the
    server where the transaction originated, which is normally the value of [`server_uuid`](replication-options.html#sysvar_server_uuid).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数从GTID集合中删除所有具有指定来源的GTID，并返回剩余的GTID（如果有的话）。 UUID是服务器的标识符，事务通常是在[`server_uuid`](replication-options.html#sysvar_server_uuid)中的值。
- en: '[PRE8]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This function acts as the reverse of the previous one; it returns only those
    GTIDs from the GTID set that originate from the server with the specified identifier
    (UUID).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数充当前一个函数的反向；它仅返回来自具有指定标识符（UUID）的服务器的GTID集合中的GTID。
- en: '[PRE9]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Example 19.1 Verifying that a replica is up to date**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 19.1 验证副本是否最新**'
- en: The built-in functions [`GTID_SUBSET()`](gtid-functions.html#function_gtid-subset)
    and [`GTID_SUBTRACT()`](gtid-functions.html#function_gtid-subtract) can be used
    to check that a replica has applied at least every transaction that a source has
    applied.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 内置函数[`GTID_SUBSET()`](gtid-functions.html#function_gtid-subset)和[`GTID_SUBTRACT()`](gtid-functions.html#function_gtid-subtract)可用于检查副本是否至少应用了源应用的每个事务。
- en: 'To perform this check with `GTID_SUBSET()`, execute the following statement
    on the replica:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`GTID_SUBSET()`执行此检查，请在副本上执行以下语句：
- en: '[PRE10]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If the returns value is `0` (false), this means that some GTIDs in *`source_gtid_executed`*
    are not present in *`replica_gtid_executed`*, and that the replica has not yet
    applied transactions that were applied on the source, which means that the replica
    is not up to date.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果返回值为 `0`（false），则意味着 *`source_gtid_executed`* 中的一些 GTID 不在 *`replica_gtid_executed`*
    中，并且副本尚未应用在源上应用的事务，这意味着副本不是最新的。
- en: 'To perform the same check with `GTID_SUBTRACT()`, execute the following statement
    on the replica:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `GTID_SUBTRACT()` 执行相同的检查，在副本上执行以下语句：
- en: '[PRE11]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This statement returns any GTIDs that are in *`source_gtid_executed`* but not
    in *`replica_gtid_executed`*. If any GTIDs are returned, the source has applied
    some transactions that the replica has not applied, and the replica is therefore
    not up to date.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句返回在 *`source_gtid_executed`* 中但不在 *`replica_gtid_executed`* 中的任何 GTID。如果返回任何
    GTID，则表示源已应用了一些副本尚未应用的事务，因此副本不是最新的。
- en: '**Example 19.2 Backup and restore scenario**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 19.2 备份和恢复场景**'
- en: The stored functions `GTID_IS_EQUAL()`, `GTID_IS_DISJOINT()`, and `GTID_IS_DISJOINT_UNION()`
    can be used to verify backup and restore operations involving multiple databases
    and servers. In this example scenario, `server1` contains database `db1`, and
    `server2` contains database `db2`. The goal is to copy database `db2` to `server1`,
    and the result on `server1` should be the union of the two databases. The procedure
    used is to back up `server2` using [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program"), then to restore this backup on `server1`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 存储函数 `GTID_IS_EQUAL()`、`GTID_IS_DISJOINT()` 和 `GTID_IS_DISJOINT_UNION()` 可用于验证涉及多个数据库和服务器的备份和恢复操作。在此示例场景中，`server1`
    包含数据库 `db1`，`server2` 包含数据库 `db2`。目标是将数据库 `db2` 复制到 `server1`，并且在 `server1` 上的结果应该是两个数据库的并集。使用的步骤是使用
    [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")
    备份 `server2`，然后在 `server1` 上恢复此备份。
- en: Provided that [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program") was run with [`--set-gtid-purged`](mysqldump.html#option_mysqldump_set-gtid-purged)
    set to `ON` or `AUTO` (the default), the output contains a `SET @@GLOBAL.gtid_purged`
    statement which adds the [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    set from `server2` to the [`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)
    set on `server1`. `gtid_purged` contains the GTIDs of all the transactions that
    have been committed on a given server but which do not exist in any binary log
    file on the server. When database `db2` is copied to `server1`, the GTIDs of the
    transactions committed on `server2`, which are not in the binary log files on
    `server1`, must be added to `gtid_purged` for `server1` to make the set complete.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")
    时，如果使用了 [`--set-gtid-purged`](mysqldump.html#option_mysqldump_set-gtid-purged)
    参数设置为 `ON` 或 `AUTO`（默认值），输出将包含一个 `SET @@GLOBAL.gtid_purged` 语句，该语句将从 `server2`
    的 [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed) 集合添加到
    `server1` 的 [`gtid_purged`](replication-options-gtids.html#sysvar_gtid_purged)
    集合中。`gtid_purged` 包含在给定服务器上已提交但在服务器上任何二进制日志文件中不存在的所有事务的 GTID。当将数据库 `db2` 复制到 `server1`
    时，必须将在 `server2` 上提交的事务的 GTID（这些事务不在 `server1` 的二进制日志文件中）添加到 `server1` 的 `gtid_purged`
    中，以使集合完整。
- en: 'The stored functions can be used to assist with the following steps in this
    scenario:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 存储函数可用于协助此场景中的以下步骤：
- en: 'Use `GTID_IS_EQUAL()` to verify that the backup operation computed the correct
    GTID set for the `SET @@GLOBAL.gtid_purged` statement. On `server2`, extract that
    statement from the [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program") output, and store the GTID set into a local variable, such as
    `$gtid_purged_set`. Then execute the following statement:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `GTID_IS_EQUAL()` 验证备份操作是否为 `SET @@GLOBAL.gtid_purged` 语句计算了正确的 GTID 集合。在
    `server2` 上，从 [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program") 输出中提取该语句，并将 GTID 集合存储到一个本地变量中，例如 `$gtid_purged_set`。然后执行以下语句：
- en: '[PRE12]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If the result is 1, the two GTID sets are equal, and the set has been computed
    correctly.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果结果为 1，则两个 GTID 集合相等，且集合已正确计算。
- en: 'Use `GTID_IS_DISJOINT()` to verify that the GTID set in the [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program") output does not overlap with the
    `gtid_executed` set on `server1`. Having identical GTIDs present on both servers
    causes errors when copying database `db2` to `server1`. To check, on `server1`,
    extract and store `gtid_purged` from the output into a local variable as done
    previously, then execute the following statement:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`GTID_IS_DISJOINT()`验证[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A
    Database Backup Program")输出中的GTID集与`server1`上的`gtid_executed`集不重叠。在两个服务器上存在相同的GTID会导致将数据库`db2`复制到`server1`时出现错误。要检查，在`server1`上，从输出中提取并存储`gtid_purged`到一个本地变量中，然后执行以下语句：
- en: '[PRE13]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If the result is 1, there is no overlap between the two GTID sets, so no duplicate
    GTIDs are present.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果结果为1，则两个GTID集之间没有重叠，因此不存在重复的GTID。
- en: 'Use `GTID_IS_DISJOINT_UNION()` to verify that the restore operation resulted
    in the correct GTID state on `server1`. Before restoring the backup, on `server1`,
    obtain the existing `gtid_executed` set by executing the following statement:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`GTID_IS_DISJOINT_UNION()`验证还原操作是否在`server1`上导致正确的GTID状态。在还原备份之前，在`server1`上执行以下语句获取现有的`gtid_executed`集：
- en: '[PRE14]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Store the result in a local variable `$original_gtid_executed`, as well as
    the set from `gtid_purged` in another local variable as described previously.
    When the backup from `server2` has been restored onto `server1`, execute the following
    statement to verify the GTID state:'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将结果存储在本地变量`$original_gtid_executed`中，以及如前所述，将`gtid_purged`中的集合存储在另一个本地变量中。当从`server2`恢复备份到`server1`时，执行以下语句验证GTID状态：
- en: '[PRE15]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If the result is `1`, the stored function has verified that the original `gtid_executed`
    set from `server1` (`$original_gtid_executed`) and the `gtid_purged` set that
    was added from `server2` (`$gtid_purged_set`) have no overlap, and that the updated
    `gtid_executed` set on `server1` now consists of the previous `gtid_executed`
    set from `server1` plus the `gtid_purged` set from `server2`, which is the desired
    result. Ensure that this check is carried out before any further transactions
    take place on `server1`, otherwise the new transactions in `gtid_executed` cause
    it to fail.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果结果为`1`，则存储的函数已验证来自`server1`的原始`gtid_executed`集（`$original_gtid_executed`）和从`server2`添加的`gtid_purged`集（`$gtid_purged_set`）没有重叠，并且`server1`上更新的`gtid_executed`集现在包括来自`server1`的先前`gtid_executed`集以及来自`server2`的`gtid_purged`集，这是期望的结果。确保在`server1`上发生任何进一步的事务之前进行此检查，否则`gtid_executed`中的新事务将导致其失败。
- en: '**Example 19.3 Selecting the most up-to-date replica for manual failover**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 19.3 选择最新的副本进行手动故障转移**'
- en: The stored function `GTID_UNION()` can be used to identify the most up-to-date
    replica from a set of replicas, in order to perform a manual failover operation
    after a source server has stopped unexpectedly. If some of the replicas are experiencing
    replication lag, this stored function can be used to compute the most up-to-date
    replica without waiting for all the replicas to apply their existing relay logs,
    and therefore to minimize the failover time. The function can return the union
    of [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed) on each
    replica with the set of transactions received by the replica, which is recorded
    in the Performance Schema [`replication_connection_status`](performance-schema-replication-connection-status-table.html
    "29.12.11.2 The replication_connection_status Table") table. You can compare these
    results to find which replica's record of transactions is the most up to date,
    even if not all of the transactions have been committed yet.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 存储函数`GTID_UNION()`可用于从一组副本中识别最新的副本，以便在源服务器意外停止后执行手动故障转移操作。如果一些副本正在经历复制延迟，此存储函数可用于计算最新的副本，而无需等待所有副本应用其现有的中继日志，从而最小化故障转移时间。该函数可以返回每个副本上的[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)与副本接收到的事务集的并集，该事务集记录在性能模式[`replication_connection_status`](performance-schema-replication-connection-status-table.html
    "29.12.11.2 The replication_connection_status Table")表中。您可以比较这些结果，找出哪个副本的事务记录是最新的，即使并非所有事务都已提交。
- en: 'On each replica, compute the complete record of transactions by issuing the
    following statement:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个副本上，通过执行以下语句计算完整的事务记录：
- en: '[PRE16]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You can then compare the results from each replica to see which one has the
    most up-to-date record of transactions, and use this replica as the new source.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以比较每个副本的结果，看哪个副本具有最新的事务记录，并将此副本用作新的源。
- en: '**Example 19.4 Checking for extraneous transactions on a replica**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 19.4 检查副本上的多余交易**'
- en: The stored function `GTID_SUBTRACT_UUID()` can be used to check whether a replica
    has received transactions that did not originate from its designated source or
    sources. If it has, there might be an issue with your replication setup, or with
    a proxy, router, or load balancer. This function works by removing from a GTID
    set all the GTIDs from a specified originating server, and returning the remaining
    GTIDs, if any.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 存储函数`GTID_SUBTRACT_UUID()`可用于检查副本是否接收了未来自其指定来源或来源的交易。如果有，则可能存在复制设置问题，或代理、路由器或负载均衡器存在问题。此函数通过从指定起始服务器的GTID集合中移除所有GTID，并返回剩余的GTID（如果有）来工作。
- en: 'For a replica with a single source, issue the following statement, giving the
    identifier of the originating source, which is normally the same as [`server_uuid`](replication-options.html#sysvar_server_uuid):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于具有单个来源的副本，请发出以下语句，提供起始来源的标识符，通常与[`server_uuid`](replication-options.html#sysvar_server_uuid)相同：
- en: '[PRE17]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: If the result is not empty, the transactions returned are extra transactions
    that did not originate from the designated source.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果不为空，则返回的交易是未来自指定来源的额外交易。
- en: 'For a replica in a multisource topology, include the server UUID of each source
    in the function call, like this:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多源拓扑中的副本，请在函数调用中包含每个来源的服务器UUID，如下所示：
- en: '[PRE18]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If the result is not empty, the transactions returned are extra transactions
    that did not originate from any of the designated sources.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果结果不为空，则返回的交易是未来自任何指定来源的额外交易。
- en: '**Example 19.5 Verifying that a server in a replication topology is read-only**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 19.5 验证复制拓扑中的服务器是否为只读**'
- en: 'The stored function `GTID_INTERSECTION_WITH_UUID()` can be used to verify that
    a server has not originated any GTIDs and is in a read-only state. The function
    returns only those GTIDs from the GTID set that originate from the server with
    the specified identifier. If any of the transactions listed in [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    from this server use the server''s own identifier, the server itself originated
    those transactions. You can issue the following statement on the server to check:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 存储函数`GTID_INTERSECTION_WITH_UUID()`可用于验证服务器是否未发起任何GTID并处于只读状态。该函数仅返回来自具有指定标识符的服务器的GTID集合中的那些GTID。如果在此服务器的[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)中列出的任何交易使用服务器自己的标识符，则服务器本身发起了这些交易。您可以在服务器上发出以下语句进行检查：
- en: '[PRE19]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**Example 19.6 Validating an additional replica in multisource replication**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 19.6 在多源复制中验证额外的副本**'
- en: The stored function `GTID_INTERSECTION_WITH_UUID()` can be used to find out
    if a replica attached to a multisource replication setup has applied all the transactions
    originating from one particular source. In this scenario, `source1` and `source2`
    are both sources and replicas and replicate to each other. `source2` also has
    its own replica. The replica also receives and applies transactions from `source1`
    if `source2` is configured with [`log_replica_updates=ON`](replication-options-binary-log.html#sysvar_log_replica_updates),
    but it does not do so if `source2` uses `log_replica_updates=OFF`. Whichever the
    case, we currently want only to find out if the replica is up to date with `source2`.
    In this situation, `GTID_INTERSECTION_WITH_UUID()` can be used to identify the
    transactions that `source2` originated, discarding the transactions that `source2`
    has replicated from `source1`. The built-in function [`GTID_SUBSET()`](gtid-functions.html#function_gtid-subset)
    can then be used to compare the result with the [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    set on the replica. If the replica is up to date with `source2`, the `gtid_executed`
    set on the replica contains all the transactions in the intersection set (the
    transactions that originated from `source2`).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 存储函数`GTID_INTERSECTION_WITH_UUID()`可用于查找附加到多源复制设置的副本是否已应用来自一个特定源的所有事务。在这种情况下，`source1`和`source2`都是源和副本，并相互复制。`source2`还有自己的副本。如果`source2`配置为[`log_replica_updates=ON`](replication-options-binary-log.html#sysvar_log_replica_updates)，则副本还会接收并应用来自`source1`的事务，但如果`source2`使用`log_replica_updates=OFF`，则不会这样做。无论哪种情况，我们目前只想知道副本是否与`source2`保持同步。在这种情况下，`GTID_INTERSECTION_WITH_UUID()`可用于识别`source2`发起的事务，丢弃`source2`从`source1`复制的事务。然后可以使用内置函数[`GTID_SUBSET()`](gtid-functions.html#function_gtid-subset)将结果与副本上的[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)集进行比较。如果副本与`source2`保持同步，则副本上的`gtid_executed`集包含交集集中的所有事务（源自`source2`的事务）。
- en: 'To carry out this check, store the values of `gtid_executed` and the server
    UUID from `source2` and the value of [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    from the replica into user variables as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行此检查，请将`source2`的`gtid_executed`值和服务器UUID以及副本中的[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)值存储到用户变量中，如下所示：
- en: '[PRE20]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Then use `GTID_INTERSECTION_WITH_UUID()` and `GTID_SUBSET()` with these variables
    as input, as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用`GTID_INTERSECTION_WITH_UUID()`和`GTID_SUBSET()`，并将这些变量作为输入，如下所示：
- en: '[PRE21]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The server identifier from `source2` (`@source2_server_uuid`) is used with `GTID_INTERSECTION_WITH_UUID()`
    to identify and return only those GTIDs from the set of GTIDs that originated
    on `source2`, omitting those that originated on `source1`. The resulting GTID
    set is then compared with the set of all executed GTIDs on the replica, using
    `GTID_SUBSET()`. If this statement returns nonzero (true), all the identified
    GTIDs from `source2` (the first set input) are also found in [`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)
    from the replica, meaning that the replica has received and executed all the transactions
    that originated from `source2`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 来自`source2`的服务器标识符（`@source2_server_uuid`）与`GTID_INTERSECTION_WITH_UUID()`一起使用，仅识别并返回那些在`source2`上发起的GTID，省略那些在`source1`上发起的。然后，使用`GTID_SUBSET()`将生成的GTID集与副本上的所有已执行GTID集进行比较。如果此语句返回非零（true），则从`source2`识别的所有GTID（第一个输入集）也在副本的[`gtid_executed`](replication-options-gtids.html#sysvar_gtid_executed)中找到，这意味着副本已接收并执行了所有源自`source2`的事务。
