- en: 8.2.1 Account User Names and Passwords
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8.2.1 账户用户名和密码
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/user-names.html](https://dev.mysql.com/doc/refman/8.0/en/user-names.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/user-names.html](https://dev.mysql.com/doc/refman/8.0/en/user-names.html)
- en: MySQL stores accounts in the `user` table of the `mysql` system database. An
    account is defined in terms of a user name and the client host or hosts from which
    the user can connect to the server. For information about account representation
    in the `user` table, see [Section 8.2.3, “Grant Tables”](grant-tables.html "8.2.3 Grant
    Tables").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL将账户存储在`mysql`系统数据库的`user`表中。账户根据用户名称和用户可以连接到服务器的客户端主机或主机来定义。有关`user`表中账户表示的信息，请参见
    [第8.2.3节，“授权表”](grant-tables.html "8.2.3 授权表")。
- en: An account may also have authentication credentials such as a password. The
    credentials are handled by the account authentication plugin. MySQL supports multiple
    authentication plugins. Some of them use built-in authentication methods, whereas
    others enable authentication using external authentication methods. See [Section 8.2.17,
    “Pluggable Authentication”](pluggable-authentication.html "8.2.17 Pluggable Authentication").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一个账户可能还有身份验证凭据，比如密码。这些凭据由账户身份验证插件处理。MySQL支持多种身份验证插件。其中一些使用内置身份验证方法，而其他一些则启用使用外部身份验证方法进行身份验证。参见
    [第8.2.17节，“可插拔身份验证”](pluggable-authentication.html "8.2.17 可插拔身份验证")。
- en: 'There are several distinctions between the way user names and passwords are
    used by MySQL and your operating system:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL和您的操作系统在使用用户名称和密码方面有几个区别：
- en: User names, as used by MySQL for authentication purposes, have nothing to do
    with user names (login names) as used by Windows or Unix. On Unix, most MySQL
    clients by default try to log in using the current Unix user name as the MySQL
    user name, but that is for convenience only. The default can be overridden easily,
    because client programs permit any user name to be specified with a `-u` or `--user`
    option. This means that anyone can attempt to connect to the server using any
    user name, so you cannot make a database secure in any way unless all MySQL accounts
    have passwords. Anyone who specifies a user name for an account that has no password
    can connect successfully to the server.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名，用于MySQL身份验证目的，与Windows或Unix中用于登录的用户名无关。在Unix上，默认情况下，大多数MySQL客户端尝试使用当前Unix用户名作为MySQL用户名登录，但这仅仅是为了方便。默认设置可以轻松覆盖，因为客户端程序允许使用`-u`或`--user`选项指定任何用户名。这意味着任何人都可以尝试使用任何用户名连接到服务器，因此除非所有MySQL账户都有密码，否则无法以任何方式使数据库安全。任何指定了没有密码的账户的用户名的人都可以成功连接到服务器。
- en: MySQL user names are up to 32 characters long. Operating system user names may
    have a different maximum length.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL用户名称最长可达32个字符。操作系统用户名称可能具有不同的最大长度。
- en: Warning
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 警告
- en: The MySQL user name length limit is hardcoded in MySQL servers and clients,
    and trying to circumvent it by modifying the definitions of the tables in the
    `mysql` database *does not work*.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL用户名称长度限制是硬编码在MySQL服务器和客户端中的，试图通过修改`mysql`数据库中表的定义来规避它*不起作用*。
- en: You should never alter the structure of tables in the `mysql` database in any
    manner whatsoever except by means of the procedure that is described in [Chapter 3,
    *Upgrading MySQL*](upgrading.html "Chapter 3 Upgrading MySQL"). Attempting to
    redefine the MySQL system tables in any other fashion results in undefined and
    unsupported behavior. The server is free to ignore rows that become malformed
    as a result of such modifications.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了通过[第3章，“升级MySQL”](upgrading.html "第3章 升级MySQL")中描述的过程之外，您绝对不应以任何方式更改`mysql`数据库中表的结构。试图以任何其他方式重新定义MySQL系统表会导致未定义和不受支持的行为。服务器可以忽略由于这些修改而变得畸形的行。
- en: To authenticate client connections for accounts that use built-in authentication
    methods, the server uses passwords stored in the `user` table. These passwords
    are distinct from passwords for logging in to your operating system. There is
    no necessary connection between the “external” password you use to log in to a
    Windows or Unix machine and the password you use to access the MySQL server on
    that machine.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为使用内置身份验证方法的账户验证客户端连接，服务器使用存储在`user`表中的密码。这些密码与用于登录操作系统的密码不同。您用于登录Windows或Unix机器的“外部”密码与您用于访问该机器上的MySQL服务器的密码之间没有必要的联系。
- en: If the server authenticates a client using some other plugin, the authentication
    method that the plugin implements may or may not use a password stored in the
    `user` table. In this case, it is possible that an external password is also used
    to authenticate to the MySQL server.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果服务器使用其他插件对客户端进行身份验证，插件实现的身份验证方法可能会或可能不会使用存储在`user`表中的密码。在这种情况下，可能还会使用外部密码进行MySQL服务器的身份验证。
- en: Passwords stored in the `user` table are encrypted using plugin-specific algorithms.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在`user`表中的密码使用特定于插件的算法进行加密。
- en: If the user name and password contain only ASCII characters, it is possible
    to connect to the server regardless of character set settings. To enable connections
    when the user name or password contain non-ASCII characters, client applications
    should call the [`mysql_options()`](/doc/c-api/8.0/en/mysql-options.html) C API
    function with the `MYSQL_SET_CHARSET_NAME` option and appropriate character set
    name as arguments. This causes authentication to take place using the specified
    character set. Otherwise, authentication fails unless the server default character
    set is the same as the encoding in the authentication defaults.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户名和密码只包含ASCII字符，则无论字符集设置如何，都可以连接到服务器。要在用户名或密码包含非ASCII字符时启用连接，客户端应用程序应使用`MYSQL_SET_CHARSET_NAME`选项和适当的字符集名称作为参数调用[`mysql_options()`](/doc/c-api/8.0/en/mysql-options.html)
    C API函数。这会导致使用指定的字符集进行身份验证。否则，除非服务器默认字符集与身份验证默认值中的编码相同，否则身份验证将失败。
- en: Standard MySQL client programs support a `--default-character-set` option that
    causes [`mysql_options()`](/doc/c-api/8.0/en/mysql-options.html) to be called
    as just described. In addition, character set autodetection is supported as described
    in [Section 12.4, “Connection Character Sets and Collations”](charset-connection.html
    "12.4 Connection Character Sets and Collations"). For programs that use a connector
    that is not based on the C API, the connector may provide an equivalent to [`mysql_options()`](/doc/c-api/8.0/en/mysql-options.html)
    that can be used instead. Check the connector documentation.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 标准的MySQL客户端程序支持一个`--default-character-set`选项，会导致调用[`mysql_options()`](/doc/c-api/8.0/en/mysql-options.html)如上所述。此外，支持字符集自动检测，如[第12.4节，“连接字符集和校对规则”](charset-connection.html
    "12.4 连接字符集和校对规则")所述。对于不基于C API的连接器，可能会提供类似于[`mysql_options()`](/doc/c-api/8.0/en/mysql-options.html)的等效选项供使用。请查阅连接器文档。
- en: The preceding notes do not apply for `ucs2`, `utf16`, and `utf32`, which are
    not permitted as client character sets.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前述注意事项不适用于`ucs2`、`utf16`和`utf32`，这些字符集不被允许作为客户端字符集。
- en: The MySQL installation process populates the grant tables with an initial `root`
    account, as described in [Section 2.9.4, “Securing the Initial MySQL Account”](default-privileges.html
    "2.9.4 Securing the Initial MySQL Account"), which also discusses how to assign
    a password to it. Thereafter, you normally set up, modify, and remove MySQL accounts
    using statements such as [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER
    Statement"), [`DROP USER`](drop-user.html "15.7.1.5 DROP USER Statement"), [`GRANT`](grant.html
    "15.7.1.6 GRANT Statement"), and [`REVOKE`](revoke.html "15.7.1.8 REVOKE Statement").
    See [Section 8.2.8, “Adding Accounts, Assigning Privileges, and Dropping Accounts”](creating-accounts.html
    "8.2.8 Adding Accounts, Assigning Privileges, and Dropping Accounts"), and [Section 15.7.1,
    “Account Management Statements”](account-management-statements.html "15.7.1 Account
    Management Statements").
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL安装过程会使用初始`root`账户填充授权表，如[第2.9.4节，“保护初始MySQL账户”](default-privileges.html
    "2.9.4 保护初始MySQL账户")所述，该节还讨论了如何为其分配密码。之后，通常使用[`CREATE USER`](create-user.html
    "15.7.1.3 CREATE USER语句")、[`DROP USER`](drop-user.html "15.7.1.5 DROP USER语句")、[`GRANT`](grant.html
    "15.7.1.6 GRANT语句")和[`REVOKE`](revoke.html "15.7.1.8 REVOKE语句")等语句设置、修改和删除MySQL账户。参见[第8.2.8节，“添加账户、分配权限和删除账户”](creating-accounts.html
    "8.2.8 添加账户、分配权限和删除账户")，以及[第15.7.1节，“账户管理语句”](account-management-statements.html
    "15.7.1 账户管理语句")。
- en: 'To connect to a MySQL server with a command-line client, specify user name
    and password options as necessary for the account that you want to use:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用命令行客户端连接到MySQL服务器，根据要使用的账户，指定用户名和密码选项如下所示：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you prefer short options, the command looks like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您喜欢简短选项，命令如下：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you omit the password value following the [`--password`](connection-options.html#option_general_password)
    or `-p` option on the command line (as just shown), the client prompts for one.
    Alternatively, the password can be specified on the command line:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在命令行上省略了[`--password`](connection-options.html#option_general_password)或`-p`选项后面的密码值（如上所示），客户端会提示输入密码。或者，密码可以在命令行上指定：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you use the `-p` option, there must be *no space* between `-p` and the following
    password value.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用`-p`选项，则`-p`和后面的密码值之间*不能有空格*。
- en: Specifying a password on the command line should be considered insecure. See
    [Section 8.1.2.1, “End-User Guidelines for Password Security”](password-security-user.html
    "8.1.2.1 End-User Guidelines for Password Security"). To avoid giving the password
    on the command line, use an option file or a login path file. See [Section 6.2.2.2,
    “Using Option Files”](option-files.html "6.2.2.2 Using Option Files"), and [Section 6.6.7,
    “mysql_config_editor — MySQL Configuration Utility”](mysql-config-editor.html
    "6.6.7 mysql_config_editor — MySQL Configuration Utility").
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行上指定密码应被视为不安全。请参见[第8.1.2.1节，“密码安全的最终用户指南”](password-security-user.html "8.1.2.1 密码安全的最终用户指南")。为了避免在命令行上输入密码，可以使用选项文件或登录路径文件。请参见[第6.2.2.2节，“使用选项文件”](option-files.html
    "6.2.2.2 使用选项文件")，以及[第6.6.7节，“mysql_config_editor — MySQL配置实用程序”](mysql-config-editor.html
    "6.6.7 mysql_config_editor — MySQL配置实用程序")。
- en: For additional information about specifying user names, passwords, and other
    connection parameters, see [Section 6.2.4, “Connecting to the MySQL Server Using
    Command Options”](connecting.html "6.2.4 Connecting to the MySQL Server Using
    Command Options").
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有关指定用户名、密码和其他连接参数的附加信息，请参见[第6.2.4节，“使用命令选项连接到MySQL服务器”](connecting.html "6.2.4 连接到MySQL服务器使用命令选项")。
