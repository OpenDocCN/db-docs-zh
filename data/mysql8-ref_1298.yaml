- en: Chapter 18 Alternative Storage Engines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 18 章 备选存储引擎
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/storage-engines.html](https://dev.mysql.com/doc/refman/8.0/en/storage-engines.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/storage-engines.html](https://dev.mysql.com/doc/refman/8.0/en/storage-engines.html)
- en: '**Table of Contents**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录**'
- en: '[18.1 Setting the Storage Engine](storage-engine-setting.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.1 设置存储引擎](storage-engine-setting.html)'
- en: '[18.2 The MyISAM Storage Engine](myisam-storage-engine.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.2 MyISAM 存储引擎](myisam-storage-engine.html)'
- en: '[18.2.1 MyISAM Startup Options](myisam-start.html)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.2.1 MyISAM 启动选项](myisam-start.html)'
- en: '[18.2.2 Space Needed for Keys](key-space.html)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.2.2 键所需的空间](key-space.html)'
- en: '[18.2.3 MyISAM Table Storage Formats](myisam-table-formats.html)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.2.3 MyISAM 表存储格式](myisam-table-formats.html)'
- en: '[18.2.4 MyISAM Table Problems](myisam-table-problems.html)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.2.4 MyISAM 表问题](myisam-table-problems.html)'
- en: '[18.3 The MEMORY Storage Engine](memory-storage-engine.html)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.3 MEMORY 存储引擎](memory-storage-engine.html)'
- en: '[18.4 The CSV Storage Engine](csv-storage-engine.html)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.4 CSV 存储引擎](csv-storage-engine.html)'
- en: '[18.4.1 Repairing and Checking CSV Tables](se-csv-repair.html)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.4.1 修复和检查 CSV 表](se-csv-repair.html)'
- en: '[18.4.2 CSV Limitations](se-csv-limitations.html)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.4.2 CSV 限制](se-csv-limitations.html)'
- en: '[18.5 The ARCHIVE Storage Engine](archive-storage-engine.html)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.5 ARCHIVE 存储引擎](archive-storage-engine.html)'
- en: '[18.6 The BLACKHOLE Storage Engine](blackhole-storage-engine.html)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.6 BLACKHOLE 存储引擎](blackhole-storage-engine.html)'
- en: '[18.7 The MERGE Storage Engine](merge-storage-engine.html)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.7 MERGE 存储引擎](merge-storage-engine.html)'
- en: '[18.7.1 MERGE Table Advantages and Disadvantages](merge-table-advantages.html)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.7.1 MERGE 表优缺点](merge-table-advantages.html)'
- en: '[18.7.2 MERGE Table Problems](merge-table-problems.html)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.7.2 MERGE 表问题](merge-table-problems.html)'
- en: '[18.8 The FEDERATED Storage Engine](federated-storage-engine.html)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.8 FEDERATED 存储引擎](federated-storage-engine.html)'
- en: '[18.8.1 FEDERATED Storage Engine Overview](federated-description.html)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.8.1 FEDERATED 存储引擎概述](federated-description.html)'
- en: '[18.8.2 How to Create FEDERATED Tables](federated-create.html)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.8.2 如何创建 FEDERATED 表](federated-create.html)'
- en: '[18.8.3 FEDERATED Storage Engine Notes and Tips](federated-usagenotes.html)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.8.3 FEDERATED 存储引擎注意事项和提示](federated-usagenotes.html)'
- en: '[18.8.4 FEDERATED Storage Engine Resources](federated-storage-engine-resources.html)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.8.4 FEDERATED 存储引擎资源](federated-storage-engine-resources.html)'
- en: '[18.9 The EXAMPLE Storage Engine](example-storage-engine.html)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.9 EXAMPLE 存储引擎](example-storage-engine.html)'
- en: '[18.10 Other Storage Engines](storage-engines-other.html)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.10 其他存储引擎](storage-engines-other.html)'
- en: '[18.11 Overview of MySQL Storage Engine Architecture](pluggable-storage-overview.html)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.11 MySQL 存储引擎架构概述](pluggable-storage-overview.html)'
- en: '[18.11.1 Pluggable Storage Engine Architecture](pluggable-storage.html)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.11.1 可插拔存储引擎架构](pluggable-storage.html)'
- en: '[18.11.2 The Common Database Server Layer](pluggable-storage-common-layer.html)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.11.2 通用数据库服务器层](pluggable-storage-common-layer.html)'
- en: Storage engines are MySQL components that handle the SQL operations for different
    table types. [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage
    Engine") is the default and most general-purpose storage engine, and Oracle recommends
    using it for tables except for specialized use cases. (The [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") statement in MySQL 8.0 creates `InnoDB` tables
    by default.)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 存储引擎是 MySQL 组件，用于处理不同表类型的 SQL 操作。[`InnoDB`](innodb-storage-engine.html "第 17
    章 InnoDB 存储引擎") 是默认和最通用的存储引擎，Oracle 建议除了专用用例外，都使用它来创建表。（在 MySQL 8.0 中，[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE 语句") 语句默认创建 `InnoDB` 表。）
- en: MySQL Server uses a pluggable storage engine architecture that enables storage
    engines to be loaded into and unloaded from a running MySQL server.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 服务器使用可插拔存储引擎架构，允许存储引擎在运行中加载和卸载。
- en: To determine which storage engines your server supports, use the [`SHOW ENGINES`](show-engines.html
    "15.7.7.16 SHOW ENGINES Statement") statement. The value in the `Support` column
    indicates whether an engine can be used. A value of `YES`, `NO`, or `DEFAULT`
    indicates that an engine is available, not available, or available and currently
    set as the default storage engine.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定服务器支持哪些存储引擎，请使用 [`SHOW ENGINES`](show-engines.html "15.7.7.16 SHOW ENGINES
    语句") 语句。`Support` 列中的值指示引擎是否可用。`YES`、`NO` 或 `DEFAULT` 的值表示引擎可用、不可用或可用且当前设置为默认存储引擎。
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This chapter covers use cases for special-purpose MySQL storage engines. It
    does not cover the default [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine") storage engine or the [`NDB`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") storage engine which are covered in [Chapter 17, *The InnoDB
    Storage Engine*](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine")
    and [Chapter 25, *MySQL NDB Cluster 8.0*](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0"). For advanced users, it also contains a description of the pluggable
    storage engine architecture (see [Section 18.11, “Overview of MySQL Storage Engine
    Architecture”](pluggable-storage-overview.html "18.11 Overview of MySQL Storage
    Engine Architecture")).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了特定用途的 MySQL 存储引擎的使用案例。它不涵盖默认的 [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine") 存储引擎或 [`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB
    Cluster 8.0") 存储引擎，这些在 [Chapter 17, *The InnoDB Storage Engine*](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine") 和 [Chapter 25, *MySQL NDB Cluster 8.0*](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") 中有介绍。对于高级用户，它还包含了可插拔存储引擎架构的描述（请参见[Section 18.11,
    “Overview of MySQL Storage Engine Architecture”](pluggable-storage-overview.html
    "18.11 Overview of MySQL Storage Engine Architecture")）。
- en: For information about features offered in commercial MySQL Server binaries,
    see [*MySQL Editions*](https://www.mysql.com/products/), on the MySQL website.
    The storage engines available might depend on which edition of MySQL you are using.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有关商业 MySQL Server 二进制版本提供的功能信息，请访问 MySQL 网站上的[*MySQL Editions*](https://www.mysql.com/products/)。可用的存储引擎可能取决于您使用的
    MySQL 版本。
- en: 'For answers to commonly asked questions about MySQL storage engines, see [Section A.2,
    “MySQL 8.0 FAQ: Storage Engines”](faqs-storage-engines.html "A.2 MySQL 8.0 FAQ:
    Storage Engines").'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '关于 MySQL 存储引擎常见问题的答案，请参见[Section A.2, “MySQL 8.0 FAQ: Storage Engines”](faqs-storage-engines.html
    "A.2 MySQL 8.0 FAQ: Storage Engines")。'
- en: MySQL 8.0 Supported Storage Engines
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MySQL 8.0 支持的存储引擎
- en: '[`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine"):
    The default storage engine in MySQL 8.0. `InnoDB` is a transaction-safe (ACID
    compliant) storage engine for MySQL that has commit, rollback, and crash-recovery
    capabilities to protect user data. `InnoDB` row-level locking (without escalation
    to coarser granularity locks) and Oracle-style consistent nonlocking reads increase
    multi-user concurrency and performance. `InnoDB` stores user data in clustered
    indexes to reduce I/O for common queries based on primary keys. To maintain data
    integrity, `InnoDB` also supports `FOREIGN KEY` referential-integrity constraints.
    For more information about `InnoDB`, see [Chapter 17, *The InnoDB Storage Engine*](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine").'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage Engine")：MySQL
    8.0 中的默认存储引擎。`InnoDB` 是 MySQL 的事务安全（ACID 兼容）存储引擎，具有提交、回滚和崩溃恢复功能，以保护用户数据。`InnoDB`
    行级锁定（不升级为更粗粒度的锁）和 Oracle 风格的一致性非锁定读取增加了多用户并发性和性能。`InnoDB` 将用户数据存储在聚集索引中，以减少基于主键的常见查询的
    I/O。为了保持数据完整性，`InnoDB` 还支持 `FOREIGN KEY` 外键完整性约束。有关 `InnoDB` 的更多信息，请参见[Chapter 17,
    *The InnoDB Storage Engine*](innodb-storage-engine.html "Chapter 17 The InnoDB
    Storage Engine")。'
- en: '[`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM Storage Engine"): These
    tables have a small footprint. [Table-level locking](glossary.html#glos_table_lock
    "table lock") limits the performance in read/write workloads, so it is often used
    in read-only or read-mostly workloads in Web and data warehousing configurations.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM Storage Engine")：这些表占用空间小。[表级锁定](glossary.html#glos_table_lock
    "table lock") 限制了读/写工作负载的性能，因此通常用于 Web 和数据仓库配置中的只读或读多写少的工作负载。'
- en: '[`Memory`](memory-storage-engine.html "18.3 The MEMORY Storage Engine"): Stores
    all data in RAM, for fast access in environments that require quick lookups of
    non-critical data. This engine was formerly known as the `HEAP` engine. Its use
    cases are decreasing; `InnoDB` with its buffer pool memory area provides a general-purpose
    and durable way to keep most or all data in memory, and `NDBCLUSTER` provides
    fast key-value lookups for huge distributed data sets.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Memory`](memory-storage-engine.html "18.3 The MEMORY Storage Engine")：将所有数据存储在
    RAM 中，用于快速访问需要快速查找非关键数据的环境。这个引擎以前被称为 `HEAP` 引擎。它的使用案例正在减少；`InnoDB` 通过其缓冲池内存区提供了一种通用且耐用的方式来将大部分或全部数据保存在内存中，而
    `NDBCLUSTER` 为庞大的分布式数据集提供了快速的键值查找。'
- en: '[`CSV`](csv-storage-engine.html "18.4 The CSV Storage Engine"): Its tables
    are really text files with comma-separated values. CSV tables let you import or
    dump data in CSV format, to exchange data with scripts and applications that read
    and write that same format. Because CSV tables are not indexed, you typically
    keep the data in `InnoDB` tables during normal operation, and only use CSV tables
    during the import or export stage.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CSV`](csv-storage-engine.html "18.4 The CSV Storage Engine")：它的表实际上是带有逗号分隔值的文本文件。CSV表允许你以CSV格式导入或导出数据，与读写相同格式的脚本和应用程序交换数据。因为CSV表没有索引，通常在正常操作期间将数据保存在`InnoDB`表中，仅在导入或导出阶段使用CSV表。'
- en: '[`Archive`](archive-storage-engine.html "18.5 The ARCHIVE Storage Engine"):
    These compact, unindexed tables are intended for storing and retrieving large
    amounts of seldom-referenced historical, archived, or security audit information.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`归档`](archive-storage-engine.html "18.5 The ARCHIVE Storage Engine")：这些紧凑的、无索引的表用于存储和检索大量很少被引用的历史、归档或安全审计信息。'
- en: '[`Blackhole`](blackhole-storage-engine.html "18.6 The BLACKHOLE Storage Engine"):
    The Blackhole storage engine accepts but does not store data, similar to the Unix
    `/dev/null` device. Queries always return an empty set. These tables can be used
    in replication configurations where DML statements are sent to replica servers,
    but the source server does not keep its own copy of the data.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`黑洞`](blackhole-storage-engine.html "18.6 The BLACKHOLE Storage Engine")：黑洞存储引擎接受但不存储数据，类似于Unix的`/dev/null`设备。查询总是返回一个空集。这些表可以在复制配置中使用，其中DML语句被发送到副本服务器，但源服务器不保留自己的数据副本。'
- en: '[`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0") (also known
    as [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0")): This
    clustered database engine is particularly suited for applications that require
    the highest possible degree of uptime and availability.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`NDB`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0")（也称为[`NDBCLUSTER`](mysql-cluster.html
    "第25章 MySQL NDB Cluster 8.0")）：这个集群数据库引擎特别适用于需要最高可用性和可用性的应用程序。'
- en: '[`Merge`](merge-storage-engine.html "18.7 The MERGE Storage Engine"): Enables
    a MySQL DBA or developer to logically group a series of identical `MyISAM` tables
    and reference them as one object. Good for VLDB environments such as data warehousing.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`合并`](merge-storage-engine.html "18.7 The MERGE Storage Engine")：使MySQL DBA或开发人员可以逻辑地将一系列相同的`MyISAM`表分组，并将它们引用为一个对象。适用于数据仓库等VLDB环境。'
- en: '[`Federated`](federated-storage-engine.html "18.8 The FEDERATED Storage Engine"):
    Offers the ability to link separate MySQL servers to create one logical database
    from many physical servers. Very good for distributed or data mart environments.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`联合`](federated-storage-engine.html "18.8 The FEDERATED Storage Engine")：提供了将不同的MySQL服务器链接起来，从许多物理服务器创建一个逻辑数据库的能力。非常适合分布式或数据仓库环境。'
- en: '[`Example`](example-storage-engine.html "18.9 The EXAMPLE Storage Engine"):
    This engine serves as an example in the MySQL source code that illustrates how
    to begin writing new storage engines. It is primarily of interest to developers.
    The storage engine is a “stub” that does nothing. You can create tables with this
    engine, but no data can be stored in them or retrieved from them.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`示例`](example-storage-engine.html "18.9 The EXAMPLE Storage Engine")：这个引擎在MySQL源代码中作为一个示例，展示了如何开始编写新的存储引擎。主要是为开发人员感兴趣。这个存储引擎是一个“存根”，什么也不做。你可以用这个引擎创建表，但不能在其中存储或检索数据。'
- en: You are not restricted to using the same storage engine for an entire server
    or schema. You can specify the storage engine for any table. For example, an application
    might use mostly `InnoDB` tables, with one `CSV` table for exporting data to a
    spreadsheet and a few `MEMORY` tables for temporary workspaces.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你不必限制整个服务器或模式使用相同的存储引擎。你可以为任何表指定存储引擎。例如，一个应用程序可能主要使用`InnoDB`表，其中一个`CSV`表用于将数据导出到电子表格，以及一些`MEMORY`表用于临时工作空间。
- en: '**Choosing a Storage Engine**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**选择存储引擎**'
- en: The various storage engines provided with MySQL are designed with different
    use cases in mind. The following table provides an overview of some storage engines
    provided with MySQL, with clarifying notes following the table.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL提供的各种存储引擎是针对不同用例设计的。以下表格提供了一些MySQL提供的存储引擎的概述，表格后面跟着澄清说明。
- en: '**Table 18.1 Storage Engines Feature Summary**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 18.1 存储引擎特性摘要**'
- en: '| Feature | MyISAM | Memory | InnoDB | Archive | NDB |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 特性 | MyISAM | Memory | InnoDB | Archive | NDB |'
- en: '| B-tree indexes | Yes | Yes | Yes | No | No |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| B-tree索引 | 是 | 是 | 是 | 否 | 否 |'
- en: '| Backup/point-in-time recovery (note 1) | Yes | Yes | Yes | Yes | Yes |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 备份/时间点恢复（注1） | 是 | 是 | 是 | 是 | 是 |'
- en: '| Cluster database support | No | No | No | No | Yes |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 集群数据库支持 | 否 | 否 | 否 | 否 | 是 |'
- en: '| Clustered indexes | No | No | Yes | No | No |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 聚集索引 | 否 | 否 | 是 | 否 | 否 |'
- en: '| Compressed data | Yes (note 2) | No | Yes | Yes | No |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 压缩数据 | 是（注2） | 否 | 是 | 是 | 否 |'
- en: '| Data caches | No | N/A | Yes | No | Yes |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 数据缓存 | 否 | 不适用 | 是 | 否 | 是 |'
- en: '| Encrypted data | Yes (note 3) | Yes (note 3) | Yes (note 4) | Yes (note 3)
    | Yes (note 5) |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 加密数据 | 是（注3） | 是（注3） | 是（注4） | 是（注3） | 是（注5） |'
- en: '| Foreign key support | No | No | Yes | No | Yes |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 外键支持 | 否 | 否 | 是 | 否 | 是 |'
- en: '| Full-text search indexes | Yes | No | Yes (note 6) | No | No |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 全文搜索索引 | 是 | 否 | 是（注6） | 否 | 否 |'
- en: '| Geospatial data type support | Yes | No | Yes | Yes | Yes |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 地理空间数据类型支持 | 是 | 否 | 是 | 是 | 是 |'
- en: '| Geospatial indexing support | Yes | No | Yes (note 7) | No | No |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 地理空间索引支持 | 是 | 否 | 是（注7） | 否 | 否 |'
- en: '| Hash indexes | No | Yes | No (note 8) | No | Yes |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 哈希索引 | 否 | 是 | 否（注8） | 否 | 是 |'
- en: '| Index caches | Yes | N/A | Yes | No | Yes |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 索引缓存 | 是 | 不适用 | 是 | 否 | 是 |'
- en: '| Locking granularity | Table | Table | Row | Row | Row |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 锁定粒度 | 表 | 表 | 行 | 行 | 行 |'
- en: '| MVCC | No | No | Yes | No | No |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| MVCC | 否 | 否 | 是 | 否 | 否 |'
- en: '| Replication support (note 1) | Yes | Limited (note 9) | Yes | Yes | Yes |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 复制支持（注1） | 是 | 有限（注9） | 是 | 是 | 是 |'
- en: '| Storage limits | 256TB | RAM | 64TB | None | 384EB |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 存储限制 | 256TB | RAM | 64TB | 无 | 384EB |'
- en: '| T-tree indexes | No | No | No | No | Yes |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| T树索引 | 否 | 否 | 否 | 否 | 是 |'
- en: '| Transactions | No | No | Yes | No | Yes |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 事务 | 否 | 否 | 是 | 否 | 是 |'
- en: '| Update statistics for data dictionary | Yes | Yes | Yes | Yes | Yes |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 更新数据字典的统计信息 | 是 | 是 | 是 | 是 | 是 |'
- en: '| Feature | MyISAM | Memory | InnoDB | Archive | NDB |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 特性 | MyISAM | Memory | InnoDB | Archive | NDB |'
- en: '**Notes:**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**注：**'
- en: 1\. Implemented in the server, rather than in the storage engine.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 在服务器端实现，而不是在存储引擎中。
- en: 2\. Compressed MyISAM tables are supported only when using the compressed row
    format. Tables using the compressed row format with MyISAM are read only.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 仅当使用压缩行格式时，支持压缩的MyISAM表。使用压缩行格式的MyISAM表是只读的。
- en: 3\. Implemented in the server via encryption functions.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 通过加密函数在服务器端实现。
- en: 4\. Implemented in the server via encryption functions; In MySQL 5.7 and later,
    data-at-rest encryption is supported.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 通过加密函数在服务器端实现；在MySQL 5.7及更高版本中，支持数据静态加密。
- en: 5\. Implemented in the server via encryption functions; encrypted NDB backups
    as of NDB 8.0.22; transparent NDB file system encryption supported in NDB 8.0.29
    and later.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 通过加密函数在服务器端实现；NDB 8.0.22起支持加密的NDB备份；NDB 8.0.29及更高版本支持透明的NDB文件系统加密。
- en: 6\. Support for FULLTEXT indexes is available in MySQL 5.6 and later.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. MySQL 5.6及更高版本支持全文索引。
- en: 7\. Support for geospatial indexing is available in MySQL 5.7 and later.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. MySQL 5.7及更高版本支持地理空间索引。
- en: 8\. InnoDB utilizes hash indexes internally for its Adaptive Hash Index feature.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 8\. InnoDB在内部利用哈希索引来实现其自适应哈希索引功能。
- en: 9\. See the discussion later in this section.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 9\. 请参见本节后面的讨论。
