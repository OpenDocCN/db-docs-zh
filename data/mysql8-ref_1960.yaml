- en: 28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 28.4.14 INNODB_FT_BEING_DELETED 表
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/information-schema-innodb-ft-being-deleted-table.html](https://dev.mysql.com/doc/refman/8.0/en/information-schema-innodb-ft-being-deleted-table.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/information-schema-innodb-ft-being-deleted-table.html](https://dev.mysql.com/doc/refman/8.0/en/information-schema-innodb-ft-being-deleted-table.html)
- en: The [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table") table provides
    a snapshot of the [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 The INFORMATION_SCHEMA INNODB_FT_DELETED Table") table; it is used only
    during an [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")
    maintenance operation. When [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") is run, the [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table") table is emptied,
    and `DOC_ID` values are removed from the [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 The INFORMATION_SCHEMA INNODB_FT_DELETED Table") table. Because the contents
    of [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table") typically have
    a short lifetime, this table has limited utility for monitoring or debugging.
    For information about running [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") on tables with `FULLTEXT` indexes, see [Section 14.9.6, “Fine-Tuning
    MySQL Full-Text Search”](fulltext-fine-tuning.html "14.9.6 Fine-Tuning MySQL Full-Text
    Search").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 INNODB_FT_BEING_DELETED 表") 表提供了 [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 INNODB_FT_DELETED 表") 表的快照；仅在 [`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE 语句") 维护操作期间使用。运行 [`OPTIMIZE TABLE`](optimize-table.html
    "15.7.3.4 OPTIMIZE TABLE 语句") 时，[`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 INNODB_FT_BEING_DELETED 表") 表被清空，并且 `DOC_ID` 值从 [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 INNODB_FT_DELETED 表") 表中删除。由于 [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 INNODB_FT_BEING_DELETED 表") 的内容通常具有较短的生命周期，因此此表对于监视或调试具有有限的实用性。有关在具有
    `FULLTEXT` 索引的表上运行 [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE
    语句") 的信息，请参见 [第 14.9.6 节，“调整 MySQL 全文搜索”](fulltext-fine-tuning.html "14.9.6 调整
    MySQL 全文搜索")。'
- en: This table is empty initially. Before querying it, set the value of the [`innodb_ft_aux_table`](innodb-parameters.html#sysvar_innodb_ft_aux_table)
    system variable to the name (including the database name) of the table that contains
    the `FULLTEXT` index (for example, `test/articles`). The output appears similar
    to the example provided for the [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 The INFORMATION_SCHEMA INNODB_FT_DELETED Table") table.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此表最初为空。在查询之前，请将 [`innodb_ft_aux_table`](innodb-parameters.html#sysvar_innodb_ft_aux_table)
    系统变量的值设置为包含 `FULLTEXT` 索引的表的名称（包括数据库名称）（例如，`test/articles`）。输出类似于为 [`INNODB_FT_DELETED`](information-schema-innodb-ft-deleted-table.html
    "28.4.17 INNODB_FT_DELETED 表") 表提供的示例。
- en: For related usage information and examples, see [Section 17.15.4, “InnoDB INFORMATION_SCHEMA
    FULLTEXT Index Tables”](innodb-information-schema-fulltext_index-tables.html "17.15.4 InnoDB
    INFORMATION_SCHEMA FULLTEXT Index Tables").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有关相关用法信息和示例，请参见 [第 17.15.4 节，“InnoDB INFORMATION_SCHEMA FULLTEXT 索引表”](innodb-information-schema-fulltext_index-tables.html
    "17.15.4 InnoDB INFORMATION_SCHEMA FULLTEXT 索引表")。
- en: 'The [`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 The INFORMATION_SCHEMA INNODB_FT_BEING_DELETED Table") table has these
    columns:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INNODB_FT_BEING_DELETED`](information-schema-innodb-ft-being-deleted-table.html
    "28.4.14 INNODB_FT_BEING_DELETED 表") 表包含以下列：'
- en: '`DOC_ID`'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DOC_ID`'
- en: The document ID of the row that is in the process of being deleted. This value
    might reflect the value of an ID column that you defined for the underlying table,
    or it can be a sequence value generated by `InnoDB` when the table contains no
    suitable column. This value is used when you perform text searches, to skip rows
    in the [`INNODB_FT_INDEX_TABLE`](information-schema-innodb-ft-index-table-table.html
    "28.4.19 The INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE Table") table before data
    for deleted rows is physically removed from the `FULLTEXT` index by an [`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement") statement. For
    more information, see [Optimizing InnoDB Full-Text Indexes](fulltext-fine-tuning.html#fulltext-optimize
    "Optimizing InnoDB Full-Text Indexes").
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在删除过程中的行的文档ID。此值可能反映您为基础表定义的ID列的值，或者当表不包含适当列时，可以是`InnoDB`生成的序列值。在执行文本搜索时，此值用于在通过
    [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement") 语句物理删除`FULLTEXT`索引中已删除行的数据之前，跳过[`INNODB_FT_INDEX_TABLE`](information-schema-innodb-ft-index-table-table.html
    "28.4.19 The INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE Table") 表中的行。有关更多信息，请参见
    [优化InnoDB全文索引](fulltext-fine-tuning.html#fulltext-optimize "Optimizing InnoDB
    Full-Text Indexes")。
- en: Notes
  id: totrans-8
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Use the `INFORMATION_SCHEMA` [`COLUMNS`](information-schema-columns-table.html
    "28.3.8 The INFORMATION_SCHEMA COLUMNS Table") table or the [`SHOW COLUMNS`](show-columns.html
    "15.7.7.5 SHOW COLUMNS Statement") statement to view additional information about
    the columns of this table, including data types and default values.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`INFORMATION_SCHEMA` [`COLUMNS`](information-schema-columns-table.html "28.3.8 The
    INFORMATION_SCHEMA COLUMNS Table") 表或 [`SHOW COLUMNS`](show-columns.html "15.7.7.5 SHOW
    COLUMNS Statement") 语句查看有关此表的列的其他信息，包括数据类型和默认值。
- en: You must have the [`PROCESS`](privileges-provided.html#priv_process) privilege
    to query this table.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您必须具有[`PROCESS`](privileges-provided.html#priv_process)权限才能查询此表。
- en: For more information about `InnoDB` `FULLTEXT` search, see [Section 17.6.2.4,
    “InnoDB Full-Text Indexes”](innodb-fulltext-index.html "17.6.2.4 InnoDB Full-Text
    Indexes"), and [Section 14.9, “Full-Text Search Functions”](fulltext-search.html
    "14.9 Full-Text Search Functions").
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`InnoDB` `FULLTEXT`搜索的更多信息，请参见 [Section 17.6.2.4, “InnoDB Full-Text Indexes”](innodb-fulltext-index.html
    "17.6.2.4 InnoDB Full-Text Indexes")，以及 [Section 14.9, “Full-Text Search Functions”](fulltext-search.html
    "14.9 Full-Text Search Functions")。
