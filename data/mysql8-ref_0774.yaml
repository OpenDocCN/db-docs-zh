- en: 13.4.3 Supported Spatial Data Formats
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.4.3 支持的空间数据格式
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/gis-data-formats.html](https://dev.mysql.com/doc/refman/8.0/en/gis-data-formats.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/gis-data-formats.html](https://dev.mysql.com/doc/refman/8.0/en/gis-data-formats.html)
- en: 'Two standard spatial data formats are used to represent geometry objects in
    queries:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 用于在查询中表示几何对象的两种标准空间数据格式：
- en: Well-Known Text (WKT) format
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Well-Known Text (WKT)格式
- en: Well-Known Binary (WKB) format
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Well-Known Binary (WKB)格式
- en: Internally, MySQL stores geometry values in a format that is not identical to
    either WKT or WKB format. (Internal format is like WKB but with an initial 4 bytes
    to indicate the SRID.)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部，MySQL以一种与WKT或WKB格式不完全相同的格式存储几何值（内部格式类似于WKB，但具有用于指示SRID的初始4个字节）。
- en: There are functions available to convert between different data formats; see
    [Section 14.16.6, “Geometry Format Conversion Functions”](gis-format-conversion-functions.html
    "14.16.6 Geometry Format Conversion Functions").
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有函数可用于在不同数据格式之间转换；参见[第14.16.6节，“几何格式转换函数”](gis-format-conversion-functions.html
    "14.16.6 几何格式转换函数")。
- en: 'The following sections describe the spatial data formats MySQL uses:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节描述了MySQL使用的空间数据格式：
- en: '[Well-Known Text (WKT) Format](gis-data-formats.html#gis-wkt-format "Well-Known
    Text (WKT) Format")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Well-Known Text (WKT) Format](gis-data-formats.html#gis-wkt-format "Well-Known
    Text (WKT) Format")'
- en: '[Well-Known Binary (WKB) Format](gis-data-formats.html#gis-wkb-format "Well-Known
    Binary (WKB) Format")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Well-Known Binary (WKB) Format](gis-data-formats.html#gis-wkb-format "Well-Known
    Binary (WKB) Format")'
- en: '[Internal Geometry Storage Format](gis-data-formats.html#gis-internal-format
    "Internal Geometry Storage Format")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Internal Geometry Storage Format](gis-data-formats.html#gis-internal-format
    "Internal Geometry Storage Format")'
- en: Well-Known Text (WKT) Format
  id: totrans-11
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Well-Known Text (WKT)格式
- en: The Well-Known Text (WKT) representation of geometry values is designed for
    exchanging geometry data in ASCII form. The OpenGIS specification provides a Backus-Naur
    grammar that specifies the formal production rules for writing WKT values (see
    [Section 13.4, “Spatial Data Types”](spatial-types.html "13.4 Spatial Data Types")).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 几何值的Well-Known Text (WKT)表示设计用于以ASCII形式交换几何数据。OpenGIS规范提供了一个Backus-Naur语法，指定了编写WKT值的正式生成规则（参见[第13.4节，“空间数据类型”](spatial-types.html
    "13.4 空间数据类型")）。
- en: 'Examples of WKT representations of geometry objects:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 几何对象的WKT表示示例：
- en: 'A `Point`:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`Point`：
- en: '[PRE0]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The point coordinates are specified with no separating comma. This differs from
    the syntax for the SQL [`Point()`](gis-mysql-specific-functions.html#function_point)
    function, which requires a comma between the coordinates. Take care to use the
    syntax appropriate to the context of a given spatial operation. For example, the
    following statements both use [`ST_X()`](gis-point-property-functions.html#function_st-x)
    to extract the X-coordinate from a `Point` object. The first produces the object
    directly using the [`Point()`](gis-mysql-specific-functions.html#function_point)
    function. The second uses a WKT representation converted to a `Point` with [`ST_GeomFromText()`](gis-wkt-functions.html#function_st-geomfromtext).
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点坐标未用逗号分隔。这与SQL [`Point()`](gis-mysql-specific-functions.html#function_point)函数的语法不同，后者要求坐标之间有逗号。请注意使用适合给定空间操作上下文的语法。例如，以下语句都使用[`ST_X()`](gis-point-property-functions.html#function_st-x)从`Point`对象中提取X坐标。第一个直接使用[`Point()`](gis-mysql-specific-functions.html#function_point)函数生成对象。第二个使用转换为`Point`的WKT表示，使用[`ST_GeomFromText()`](gis-wkt-functions.html#function_st-geomfromtext)。
- en: '[PRE1]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A `LineString` with four points:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有四个点的`LineString`：
- en: '[PRE2]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The point coordinate pairs are separated by commas.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点坐标对由逗号分隔。
- en: 'A `Polygon` with one exterior ring and one interior ring:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有一个外环和一个内环的`Polygon`：
- en: '[PRE3]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'A `MultiPoint` with three `Point` values:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有三个`Point`值的`MultiPoint`：
- en: '[PRE4]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Spatial functions such as [`ST_MPointFromText()`](gis-wkt-functions.html#function_st-mpointfromtext)
    and [`ST_GeomFromText()`](gis-wkt-functions.html#function_st-geomfromtext) that
    accept WKT-format representations of `MultiPoint` values permit individual points
    within values to be surrounded by parentheses. For example, both of the following
    function calls are valid:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接受`MultiPoint`值的WKT格式表示的空间函数，如[`ST_MPointFromText()`](gis-wkt-functions.html#function_st-mpointfromtext)和[`ST_GeomFromText()`](gis-wkt-functions.html#function_st-geomfromtext)，允许值内的单个点被括号括起来。例如，以下两个函数调用都是有效的：
- en: '[PRE5]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'A `MultiLineString` with two `LineString` values:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个具有两个`LineString`值的`MultiLineString`：
- en: '[PRE6]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'A `MultiPolygon` with two `Polygon` values:'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有��个`Polygon`值的`MultiPolygon`：
- en: '[PRE7]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'A `GeometryCollection` consisting of two `Point` values and one `LineString`:'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由两个`Point`值和一个`LineString`组成的`GeometryCollection`：
- en: '[PRE8]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Well-Known Binary (WKB) Format
  id: totrans-33
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 熟知二进制（WKB）格式
- en: 'The Well-Known Binary (WKB) representation of geometric values is used for
    exchanging geometry data as binary streams represented by [`BLOB`](blob.html "13.3.4 The
    BLOB and TEXT Types") values containing geometric WKB information. This format
    is defined by the OpenGIS specification (see [Section 13.4, “Spatial Data Types”](spatial-types.html
    "13.4 Spatial Data Types")). It is also defined in the ISO *SQL/MM Part 3: Spatial*
    standard.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 几何值的熟知二进制（WKB）表示用于以二进制流交换几何数据，表示为包含几何 WKB 信息的 [`BLOB`](blob.html "13.3.4 BLOB
    和 TEXT 类型") 值。该格式由 OpenGIS 规范定义（请参阅[第 13.4 节，“空间数据类型”](spatial-types.html "13.4 空间数据类型")）。它还在
    ISO *SQL/MM 第 3 部分：空间*标准中定义。
- en: WKB uses 1-byte unsigned integers, 4-byte unsigned integers, and 8-byte double-precision
    numbers (IEEE 754 format). A byte is eight bits.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: WKB 使用 1 字节无符号整数、4 字节无符号整数和 8 字节双精度数（IEEE 754 格式）。一个字节是八位。
- en: 'For example, a WKB value that corresponds to `POINT(1 -1)` consists of this
    sequence of 21 bytes, each represented by two hexadecimal digits:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，与 `POINT(1 -1)` 对应的 WKB 值由以下 21 个字节序列组成，每个字节由两个十六进制数字表示：
- en: '[PRE9]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The sequence consists of the components shown in the following table.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 该序列由下表中显示的组件组成。
- en: '**Table 13.2 WKB Components Example**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 13.2 WKB 组件示例**'
- en: '| Component | Size | Value |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 组件 | 大小 | 值 |'
- en: '| Byte order | 1 byte | `01` |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 字节顺序 | 1 字节 | `01` |'
- en: '| WKB type | 4 bytes | `01000000` |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| WKB 类型 | 4 字节 | `01000000` |'
- en: '| X coordinate | 8 bytes | `000000000000F03F` |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| X 坐标 | 8 字节 | `000000000000F03F` |'
- en: '| Y coordinate | 8 bytes | `000000000000F0BF` |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| Y 坐标 | 8 字节 | `000000000000F0BF` |'
- en: 'Component representation is as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 组件表示如下：
- en: The byte order indicator is either 1 or 0 to signify little-endian or big-endian
    storage. The little-endian and big-endian byte orders are also known as Network
    Data Representation (NDR) and External Data Representation (XDR), respectively.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字节顺序指示符为 1 或 0，表示小端或大端存储。小端和大端字节顺序也被称为网络数据表示（NDR）和外部数据表示（XDR）。
- en: The WKB type is a code that indicates the geometry type. MySQL uses values from
    1 through 7 to indicate `Point`, `LineString`, `Polygon`, `MultiPoint`, `MultiLineString`,
    `MultiPolygon`, and `GeometryCollection`.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WKB 类型是指示几何类型的代码。MySQL 使用值从 1 到 7 来表示 `Point`、`LineString`、`Polygon`、`MultiPoint`、`MultiLineString`、`MultiPolygon`
    和 `GeometryCollection`。
- en: A `Point` value has X and Y coordinates, each represented as a double-precision
    value.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Point` 值具有 X 和 Y 坐标，每个坐标表示为双精度值。'
- en: WKB values for more complex geometry values have more complex data structures,
    as detailed in the OpenGIS specification.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 更复杂的几何值的 WKB 值具有更复杂的数据结构，详细信息请参阅 OpenGIS 规范。
- en: Internal Geometry Storage Format
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 内部几何存储格式
- en: MySQL stores geometry values using 4 bytes to indicate the SRID followed by
    the WKB representation of the value. For a description of WKB format, see [Well-Known
    Binary (WKB) Format](gis-data-formats.html#gis-wkb-format "Well-Known Binary (WKB)
    Format").
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 使用 4 个字节来指示 SRID，然后是值的 WKB 表示。有关 WKB 格式的描述，请参阅[熟知二进制（WKB）格式](gis-data-formats.html#gis-wkb-format
    "熟知二进制（WKB）格式")。
- en: 'For the WKB part, these MySQL-specific considerations apply:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 WKB 部分，这些是适用于 MySQL 的特定考虑因素：
- en: The byte-order indicator byte is 1 because MySQL stores geometries as little-endian
    values.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字节顺序指示符字节为 1，因为 MySQL 将几何值存储为小端值。
- en: MySQL supports geometry types of `Point`, `LineString`, `Polygon`, `MultiPoint`,
    `MultiLineString`, `MultiPolygon`, and `GeometryCollection`. Other geometry types
    are not supported.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 支持 `Point`、`LineString`、`Polygon`、`MultiPoint`、`MultiLineString`、`MultiPolygon`
    和 `GeometryCollection` 几何类型。不支持其他几何类型。
- en: Only `GeometryCollection` can be empty. Such a value is stored with 0 elements.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有 `GeometryCollection` 可以为空。这样的值存储为 0 元素。
- en: Polygon rings can be specified both clockwise and counterclockwise. MySQL flips
    the rings automatically when reading data.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多边形环可以指定顺时针和逆时针。MySQL 在读取数据时会自动翻转环。
- en: Cartesian coordinates are stored in the length unit of the spatial reference
    system, with X values in the X coordinates and Y values in the Y coordinates.
    Axis directions are those specified by the spatial reference system.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 笛卡尔坐标以空间参考系统的长度单位存储，X 值在 X 坐标中，Y 值在 Y 坐标中。轴方向由空间参考系统指定。
- en: Geographic coordinates are stored in the angle unit of the spatial reference
    system, with longitudes in the X coordinates and latitudes in the Y coordinates.
    Axis directions and the meridian are those specified by the spatial reference
    system.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 地理坐标以空间参考系统的角度单位存储，经度在 X 坐标中，纬度在 Y 坐标中。轴方向和子午线由空间参考系统指定。
- en: 'The [`LENGTH()`](string-functions.html#function_length) function returns the
    space in bytes required for value storage. Example:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[`LENGTH()`](string-functions.html#function_length) 函数返回存储值所需的字节空间。例如：'
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The value length is 25 bytes, made up of these components (as can be seen from
    the hexadecimal value):'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 值长度为 25 个字节，由以下组件组成（如从十六进制值中可以看出）：
- en: 4 bytes for integer SRID (0)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4 个字节用于整数 SRID（0）
- en: 1 byte for integer byte order (1 = little-endian)
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 个字节用于整数字节顺序（1 = 小端）
- en: 4 bytes for integer type information (1 = `Point`)
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4 个字节用于整数类型信息（1 = `Point`）
- en: 8 bytes for double-precision X coordinate (1)
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 8 个字节用于双精度 X 坐标（1）
- en: 8 bytes for double-precision Y coordinate (−1)
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 8 个字节用于双精度 Y 坐标（−1）
