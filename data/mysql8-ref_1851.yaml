- en: 26.2.6 Subpartitioning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 26.2.6 子分区化
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/partitioning-subpartitions.html](https://dev.mysql.com/doc/refman/8.0/en/partitioning-subpartitions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/partitioning-subpartitions.html](https://dev.mysql.com/doc/refman/8.0/en/partitioning-subpartitions.html)
- en: 'Subpartitioning—also known as composite partitioning—is the further division
    of each partition in a partitioned table. Consider the following [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") statement:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 子分区化，也称为复合分区化，是对分区表中每个分区的进一步划分。考虑以下[`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement")语句：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Table `ts` has 3 `RANGE` partitions. Each of these partitions—`p0`, `p1`, and
    `p2`—is further divided into 2 subpartitions. In effect, the entire table is divided
    into `3 * 2 = 6` partitions. However, due to the action of the `PARTITION BY RANGE`
    clause, the first 2 of these store only those records with a value less than 1990
    in the `purchased` column.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 表`ts`有3个`RANGE`分区。这些分区——`p0`、`p1`和`p2`——进一步划分为2个子分区。实际上，整个表被划分为`3 * 2 = 6`个分区。但是，由于`PARTITION
    BY RANGE`子句的作用，前两个仅存储`purchased`列中值小于1990的记录。
- en: It is possible to subpartition tables that are partitioned by `RANGE` or `LIST`.
    Subpartitions may use either `HASH` or `KEY` partitioning. This is also known
    as composite partitioning.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 可以对按`RANGE`或`LIST`分区的表进行子分区化。子分区可以使用`HASH`或`KEY`分区。这也称为复合分区化。
- en: Note
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`SUBPARTITION BY HASH` and `SUBPARTITION BY KEY` generally follow the same
    syntax rules as `PARTITION BY HASH` and `PARTITION BY KEY`, respectively. An exception
    to this is that `SUBPARTITION BY KEY` (unlike `PARTITION BY KEY`) does not currently
    support a default column, so the column used for this purpose must be specified,
    even if the table has an explicit primary key. This is a known issue which we
    are working to address; see [Issues with subpartitions](partitioning-limitations.html#partitioning-limitations-subpartitions
    "Issues with subpartitions"), for more information and an example.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`SUBPARTITION BY HASH`和`SUBPARTITION BY KEY`通常遵循与`PARTITION BY HASH`和`PARTITION
    BY KEY`相同的语法规则。一个例外是，`SUBPARTITION BY KEY`（不像`PARTITION BY KEY`）目前不支持默认列，因此必须指定用于此目的的列，即使表具有显式主键。这是一个我们正在努力解决的已知问题；有关更多信息和示例，请参见[子分区的问题](partitioning-limitations.html#partitioning-limitations-subpartitions
    "子分区的问题")。'
- en: 'It is also possible to define subpartitions explicitly using `SUBPARTITION`
    clauses to specify options for individual subpartitions. For example, a more verbose
    fashion of creating the same table `ts` as shown in the previous example would
    be:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用`SUBPARTITION`子句明确定义子分区，以指定各个子分区的选项。例如，以更冗长的方式创建与前面示例中所示的相同表`ts`的方法如下：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Some syntactical items of note are listed here:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这里列出了一些需要注意的语法项：
- en: Each partition must have the same number of subpartitions.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个分区必须具有相同数量的子分区。
- en: 'If you explicitly define any subpartitions using `SUBPARTITION` on any partition
    of a partitioned table, you must define them all. In other words, the following
    statement fails:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您在分区表的任何分区上明确定义了任何子分区，必须定义它们全部。换句话说，以下语句将失败：
- en: '[PRE2]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This statement would still fail even if it used `SUBPARTITIONS 2`.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 即使使用`SUBPARTITIONS 2`，此语句仍将失败。
- en: Each `SUBPARTITION` clause must include (at a minimum) a name for the subpartition.
    Otherwise, you may set any desired option for the subpartition or allow it to
    assume its default setting for that option.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个`SUBPARTITION`子句必须至少包括一个子分区的名称。否则，您可以为子分区设置任何所需选项，或允许其假定该选项的默认设置。
- en: 'Subpartition names must be unique across the entire table. For example, the
    following [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")
    statement is valid:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子分区名称必须在整个表中是唯一的。例如，以下[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE
    Statement")语句是有效的：
- en: '[PRE3]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
