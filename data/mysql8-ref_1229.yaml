- en: 17.9.2 InnoDB Page Compression
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.9.2 InnoDB页面压缩
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-page-compression.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-page-compression.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-page-compression.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-page-compression.html)
- en: '`InnoDB` supports page-level compression for tables that reside in [file-per-table](glossary.html#glos_file_per_table
    "file-per-table") tablespaces. This feature is referred to as *Transparent Page
    Compression*. Page compression is enabled by specifying the `COMPRESSION` attribute
    with [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") or [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement"). Supported compression
    algorithms include `Zlib` and `LZ4`.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`支持位于[file-per-table](glossary.html#glos_file_per_table "file-per-table")表空间中的表的页面级压缩。此功能称为*透明页压缩*。通过在[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")或[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement")中指定`COMPRESSION`属性来启用页面压缩。支持的压缩算法包括`Zlib`和`LZ4`。'
- en: Supported Platforms
  id: totrans-3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 支持的平台
- en: 'Page compression requires sparse file and hole punching support. Page compression
    is supported on Windows with NTFS, and on the following subset of MySQL-supported
    Linux platforms where the kernel level provides hole punching support:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 页面压缩需要稀疏文件和空洞打孔支持。在Windows上，页面压缩受NTFS支持，在以下MySQL支持的Linux平台子集上，内核级别提供空洞打孔支持：
- en: RHEL 7 and derived distributions that use kernel version 3.10.0-123 or higher
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL 7及使用内核版本3.10.0-123或更高的衍生发行版
- en: OEL 5.10 (UEK2) kernel version 2.6.39 or higher
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OEL 5.10（UEK2）内核版本2.6.39或更高
- en: OEL 6.5 (UEK3) kernel version 3.8.13 or higher
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OEL 6.5（UEK3）内核版本3.8.13或更高
- en: OEL 7.0 kernel version 3.8.13 or higher
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OEL 7.0内核版本3.8.13或更高
- en: SLE11 kernel version 3.0-x
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SLE11内核版本3.0-x
- en: SLE12 kernel version 3.12-x
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SLE12内核版本3.12-x
- en: OES11 kernel version 3.0-x
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OES11内核版本3.0-x
- en: Ubuntu 14.0.4 LTS kernel version 3.13 or higher
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 14.0.4 LTS内核版本3.13或更高
- en: Ubuntu 12.0.4 LTS kernel version 3.2 or higher
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 12.0.4 LTS内核版本3.2或更高
- en: Debian 7 kernel version 3.2 or higher
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian 7内核版本3.2或更高
- en: Note
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: All of the available file systems for a given Linux distribution may not support
    hole punching.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 给定Linux发行版的所有可用文件系统可能不支持空洞打孔。
- en: How Page Compression Works
  id: totrans-17
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 页面压缩的工作原理
- en: When a page is written, it is compressed using the specified compression algorithm.
    The compressed data is written to disk, where the hole punching mechanism releases
    empty blocks from the end of the page. If compression fails, data is written out
    as-is.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当写入页面时，使用指定的压缩算法对其进行压缩。压缩后的数据写入磁盘，其中空洞打孔机制释放页面末尾的空块。如果压缩失败，则按原样写出数据。
- en: Hole Punch Size on Linux
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Linux系统上的空洞打孔大小
- en: On Linux systems, the file system block size is the unit size used for hole
    punching. Therefore, page compression only works if page data can be compressed
    to a size that is less than or equal to the `InnoDB` page size minus the file
    system block size. For example, if [`innodb_page_size=16K`](innodb-parameters.html#sysvar_innodb_page_size)
    and the file system block size is 4K, page data must compress to less than or
    equal to 12K to make hole punching possible.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux系统上，文件系统块大小是用于空洞打孔的单位大小。因此，只有当页面数据可以压缩到小于或等于`InnoDB`页面大小减去文件系统块大小时，页面压缩才有效。例如，如果[`innodb_page_size=16K`](innodb-parameters.html#sysvar_innodb_page_size)且文件系统块大小为4K，则页面数据必须压缩到小于或等于12K才能进行空洞打孔。
- en: Hole Punch Size on Windows
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Windows系统上的空洞打孔大小
- en: 'On Windows systems, the underlying infrastructure for sparse files is based
    on NTFS compression. Hole punching size is the NTFS compression unit, which is
    16 times the NTFS cluster size. Cluster sizes and their compression units are
    shown in the following table:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows系统上，稀疏文件的基础架构基于NTFS压缩。空洞打孔大小是NTFS压缩单元，它是NTFS群集大小的16倍。群集大小及其压缩单元如下表所示：
- en: '**Table 17.14 Windows NTFS Cluster Size and Compression Units**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 17.14 Windows NTFS群集大小和压缩单元**'
- en: '| Cluster Size | Compression Unit |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 群集大小 | 压缩单元 |'
- en: '| 512 Bytes | 8 KB |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 512字节 | 8 KB |'
- en: '| 1 KB | 16 KB |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 1 KB | 16 KB |'
- en: '| 2 KB | 32 KB |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 2 KB | 32 KB |'
- en: '| 4 KB | 64 KB |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 4 KB | 64 KB |'
- en: Page compression on Windows systems only works if page data can be compressed
    to a size that is less than or equal to the `InnoDB` page size minus the compression
    unit size.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Windows系统上的页面压缩仅在页面数据可以压缩到小于或等于`InnoDB`页面大小减去压缩单元大小时才有效。
- en: The default NTFS cluster size is 4KB, for which the compression unit size is
    64KB. This means that page compression has no benefit for an out-of-the box Windows
    NTFS configuration, as the maximum [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    is also 64KB.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的NTFS簇大小为4KB，压缩单元大小为64KB。这意味着对于开箱即用的Windows NTFS配置，页面压缩没有任何好处，因为最大的[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)也是64KB。
- en: For page compression to work on Windows, the file system must be created with
    a cluster size smaller than 4K, and the [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)
    must be at least twice the size of the compression unit. For example, for page
    compression to work on Windows, you could build the file system with a cluster
    size of 512 Bytes (which has a compression unit of 8KB) and initialize `InnoDB`
    with an [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size) value
    of 16K or greater.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要使页面压缩在Windows上工作，文件系统必须使用小于4K的簇大小，并且[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)必须至少是压缩单元大小的两倍。例如，要使页面压缩在Windows上工作，可以使用512字节的簇大小（具有8KB的压缩单元）构建文件系统，并使用大于16K的[`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)值初始化`InnoDB`。
- en: Enabling Page Compression
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 启用页面压缩
- en: 'To enable page compression, specify the `COMPRESSION` attribute in the [`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") statement. For example:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用页面压缩，请在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")语句中指定`COMPRESSION`属性。例如：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can also enable page compression in an [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") statement. However, [`ALTER TABLE ... COMPRESSION`](alter-table.html
    "15.1.9 ALTER TABLE Statement") only updates the tablespace compression attribute.
    Writes to the tablespace that occur after setting the new compression algorithm
    use the new setting, but to apply the new compression algorithm to existing pages,
    you must rebuild the table using [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement").
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")语句中启用页面压缩。但是，[`ALTER
    TABLE ... COMPRESSION`](alter-table.html "15.1.9 ALTER TABLE Statement")仅更新表空间压缩属性。设置新的压缩算法后对表空间的写入使用新设置，但要将新的压缩算法应用于现有页面，必须使用[`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")重建表。
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Disabling Page Compression
  id: totrans-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 禁用页面压缩
- en: To disable page compression, set `COMPRESSION=None` using [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement"). Writes to the tablespace that occur after setting
    `COMPRESSION=None` no longer use page compression. To uncompress existing pages,
    you must rebuild the table using [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement") after setting `COMPRESSION=None`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要禁用页面压缩，请使用[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")设置`COMPRESSION=None`。设置`COMPRESSION=None`后对表空间的写入不再使用页面压缩。要取消现有页面的压缩，必须在设置`COMPRESSION=None`后使用[`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")重建表。
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Page Compression Metadata
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 页面压缩元数据
- en: 'Page compression metadata is found in the Information Schema [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") table, in the following
    columns:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 页面压缩元数据位于信息模式[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table")表中，以下列中：
- en: '`FS_BLOCK_SIZE`: The file system block size, which is the unit size used for
    hole punching.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FS_BLOCK_SIZE`：文件系统块大小，用于空洞打孔的单位大小。'
- en: '`FILE_SIZE`: The apparent size of the file, which represents the maximum size
    of the file, uncompressed.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FILE_SIZE`：文件的表面大小，表示未压缩的文件的最大大小。'
- en: '`ALLOCATED_SIZE`: The actual size of the file, which is the amount of space
    allocated on disk.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ALLOCATED_SIZE`：文件的实际大小，即磁盘上分配的空间量。'
- en: Note
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: On Unix-like systems, `ls -l *`tablespace_name`*.ibd` shows the apparent file
    size (equivalent to `FILE_SIZE`) in bytes. To view the actual amount of space
    allocated on disk (equivalent to `ALLOCATED_SIZE`), use `du --block-size=1 *`tablespace_name`*.ibd`.
    The `--block-size=1` option prints the allocated space in bytes instead of blocks,
    so that it can be compared to `ls -l` output.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在类Unix系统上，`ls -l *`tablespace_name`*.ibd`显示文件的表面文件大小（等同于`FILE_SIZE`）以字节为单位。要查看磁盘上分配的实际空间量（等同于`ALLOCATED_SIZE`），请使用`du
    --block-size=1 *`tablespace_name`*.ibd`。`--block-size=1`选项以字节而不是块打印分配的空间，以便与`ls
    -l`输出进行比较。
- en: Use [`SHOW CREATE TABLE`](show-create-table.html "15.7.7.10 SHOW CREATE TABLE
    Statement") to view the current page compression setting (`Zlib`, `Lz4`, or `None`).
    A table may contain a mix of pages with different compression settings.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [`SHOW CREATE TABLE`](show-create-table.html "15.7.7.10 SHOW CREATE TABLE
    Statement") 查看当前页面压缩设置 (`Zlib`, `Lz4`, 或 `None`)。一个表可能包含具有不同压缩设置的页面。
- en: In the following example, page compression metadata for the employees table
    is retrieved from the Information Schema [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") table.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，从信息模式 [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") 表中检索了员工表的页面压缩元数据。
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Page compression metadata for the employees table shows that the apparent file
    size is 23068672 bytes while the actual file size (with page compression) is 19415040
    bytes. The file system block size is 4096 bytes, which is the block size used
    for hole punching.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 员工表的页面压缩元数据显示，表面文件大小为 23068672 字节，而实��文件大小（带有页面压缩）为 19415040 字节。文件系统块大小为 4096
    字节，这是用于打孔的块大小。
- en: Identifying Tables Using Page Compression
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 识别使用页面压缩的表
- en: 'To identify tables for which page compression is enabled, you can check the
    Information Schema [`TABLES`](information-schema-tables-table.html "28.3.38 The
    INFORMATION_SCHEMA TABLES Table") table''s `CREATE_OPTIONS` column for tables
    defined with the `COMPRESSION` attribute:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要识别启用页面压缩的表，可以检查信息模式 [`TABLES`](information-schema-tables-table.html "28.3.38 The
    INFORMATION_SCHEMA TABLES Table") 表的 `CREATE_OPTIONS` 列，查看定义了 `COMPRESSION` 属性的表：
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[`SHOW CREATE TABLE`](show-create-table.html "15.7.7.10 SHOW CREATE TABLE Statement")
    also shows the `COMPRESSION` attribute, if used.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SHOW CREATE TABLE`](show-create-table.html "15.7.7.10 SHOW CREATE TABLE Statement")
    还显示了如果使用的话的 `COMPRESSION` 属性。'
- en: Page Compression Limitations and Usage Notes
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 页面压缩的限制和使用注意事项
- en: Page compression is disabled if the file system block size (or compression unit
    size on Windows) * 2 > [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size).
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件系统块大小（或 Windows 上的压缩单元大小）* 2 > [`innodb_page_size`](innodb-parameters.html#sysvar_innodb_page_size)，则禁用页面压缩。
- en: Page compression is not supported for tables that reside in shared tablespaces,
    which include the system tablespace, temporary tablespaces, and general tablespaces.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持位于共享表空间中的表进行页面压缩，这包括系统表空间、临时表空间和一般表空间。
- en: Page compression is not supported for undo log tablespaces.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持撤销日志表空间进行页面压缩。
- en: Page compression is not supported for redo log pages.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持重做日志页面进行页面压缩。
- en: R-tree pages, which are used for spatial indexes, are not compressed.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于空间索引的 R 树页面不进行压缩。
- en: Pages that belong to compressed tables (`ROW_FORMAT=COMPRESSED`) are left as-is.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属于压缩表 (`ROW_FORMAT=COMPRESSED`) 的页面保持不变。
- en: During recovery, updated pages are written out in an uncompressed form.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在恢复期间，更新的页面以未压缩形式写出。
- en: Loading a page-compressed tablespace on a server that does not support the compression
    algorithm that was used causes an I/O error.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不支持使用的压缩算法的服务器上加载页面压缩的表空间会导致 I/O 错误。
- en: Before downgrading to an earlier version of MySQL that does not support page
    compression, uncompress the tables that use the page compression feature. To uncompress
    a table, run [`ALTER TABLE ... COMPRESSION=None`](alter-table.html "15.1.9 ALTER
    TABLE Statement") and [`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE Statement").
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在降级到不支持页面压缩的早期版本的 MySQL 之前，需要取消对使用页面压缩功能的表进行解压缩。要对表进行解压缩，运行 [`ALTER TABLE ...
    COMPRESSION=None`](alter-table.html "15.1.9 ALTER TABLE Statement") 和 [`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement")。
- en: Page-compressed tablespaces can be copied between Linux and Windows servers
    if the compression algorithm that was used is available on both servers.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在 Linux 和 Windows 服务器上都可用使用的压缩算法，则可以在页面压缩的表空间之间进行复制。
- en: Preserving page compression when moving a page-compressed tablespace file from
    one host to another requires a utility that preserves sparse files.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将一个页面压缩的表空间文件从一个主机移动到另一个主机时，需要使用一个能保留稀疏文件的实用程序来保留页面压缩。
- en: Better page compression may be achieved on Fusion-io hardware with NVMFS than
    on other platforms, as NVMFS is designed to take advantage of punch hole functionality.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Fusion-io 硬件上使用 NVMFS 可以实现更好的页面压缩效果，因为 NVMFS 设计用于利用打孔功能。
- en: Using the page compression feature with a large `InnoDB` page size and relatively
    small file system block size could result in write amplification. For example,
    a maximum `InnoDB` page size of 64KB with a 4KB file system block size may improve
    compression but may also increase demand on the buffer pool, leading to increased
    I/O and potential write amplification.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用具有较大`InnoDB`页面大小和相对较小文件系统块大小的页面压缩功能可能导致写放大。例如，具有64KB的最大`InnoDB`页面大小和4KB文件系统块大小可能会提高压缩率，但也可能增加对缓冲池的需求，导致增加的I/O和潜在的写放大。
