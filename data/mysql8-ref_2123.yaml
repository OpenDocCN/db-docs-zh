- en: 29.19 Using the Performance Schema to Diagnose Problems
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 29.19 使用性能模式诊断问题
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-examples.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-examples.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-examples.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-examples.html)
- en: '[29.19.1 Query Profiling Using Performance Schema](performance-schema-query-profiling.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[29.19.1 使用性能模式进行查询分析](performance-schema-query-profiling.html)'
- en: '[29.19.2 Obtaining Parent Event Information](performance-schema-obtaining-parent-events.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[29.19.2 获取父事件信息](performance-schema-obtaining-parent-events.html)'
- en: The Performance Schema is a tool to help a DBA do performance tuning by taking
    real measurements instead of “wild guesses.” This section demonstrates some ways
    to use the Performance Schema for this purpose. The discussion here relies on
    the use of event filtering, which is described in [Section 29.4.2, “Performance
    Schema Event Filtering”](performance-schema-filtering.html "29.4.2 Performance
    Schema Event Filtering").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式是帮助数据库管理员通过进行实际测量而不是“猜测”来进行性能调优的工具。本节演示了使用性能模式进行此目的的一些方法。这里的讨论依赖于事件过滤的使用，该过滤在[Section 29.4.2,
    “性能模式事件过滤”](performance-schema-filtering.html "29.4.2 性能模式事件过滤")中有描述。
- en: The following example provides one methodology that you can use to analyze a
    repeatable problem, such as investigating a performance bottleneck. To begin,
    you should have a repeatable use case where performance is deemed “too slow” and
    needs optimization, and you should enable all instrumentation (no pre-filtering
    at all).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例提供了一种方法，您可以使用该方法分析可重复的问题，例如调查性能瓶颈。首先，您应该有一个性能被认为“太慢”并需要优化的可重复用例，并且应该启用所有仪器（完全不进行预过滤）。
- en: Run the use case.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行用例。
- en: Using the Performance Schema tables, analyze the root cause of the performance
    problem. This analysis relies heavily on post-filtering.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用性能模式表，分析性能问题的根本原因。这种分析在很大程度上依赖于后过滤。
- en: For problem areas that are ruled out, disable the corresponding instruments.
    For example, if analysis shows that the issue is not related to file I/O in a
    particular storage engine, disable the file I/O instruments for that engine. Then
    truncate the history and summary tables to remove previously collected events.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于已排除的问题领域，禁用相应的仪器。例如，如果分析显示问题与特定存储引擎中的文件 I/O 无关，则禁用该引擎的文件 I/O 仪器。然后截断历史和摘要表以删除先前收集的事件。
- en: Repeat the process at step 1.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤 1 中的过程。
- en: With each iteration, the Performance Schema output, particularly the [`events_waits_history_long`](performance-schema-events-waits-history-long-table.html
    "29.12.4.3 The events_waits_history_long Table") table, contains less and less
    “noise” caused by nonsignificant instruments, and given that this table has a
    fixed size, contains more and more data relevant to the analysis of the problem
    at hand.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随着每次迭代，性能模式输出，特别是[`events_waits_history_long`](performance-schema-events-waits-history-long-table.html
    "29.12.4.3 The events_waits_history_long Table")表，包含的由于不重要的仪器引起的“噪音”越来越少，而且由于该表具有固定大小，包含的与手头问题分析相关的数据越来越多。
- en: With each iteration, investigation should lead closer and closer to the root
    cause of the problem, as the “signal/noise” ratio improves, making analysis easier.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随着每次迭代，调查应该越来越接近问题的根本原因，因为“信号/噪音”比例改善，使分析变得更容易。
- en: 'Once a root cause of performance bottleneck is identified, take the appropriate
    corrective action, such as:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦确定了性能瓶颈的根本原因，采取适当的纠正措施，例如：
- en: Tune the server parameters (cache sizes, memory, and so forth).
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整服务器参数（缓存大小、内存等）。
- en: Tune a query by writing it differently,
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过不同方式编写查询来调整查询，
- en: Tune the database schema (tables, indexes, and so forth).
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整数据库架构（表、索引等）。
- en: Tune the code (this applies to storage engine or server developers only).
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整代码（仅适用于存储引擎或服务器开发人员）。
- en: Start again at step 1, to see the effects of the changes on performance.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新从步骤 1 开始，以查看对性能的更改产生的影响。
- en: 'The `mutex_instances.LOCKED_BY_THREAD_ID` and `rwlock_instances.WRITE_LOCKED_BY_THREAD_ID`
    columns are extremely important for investigating performance bottlenecks or deadlocks.
    This is made possible by Performance Schema instrumentation as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`mutex_instances.LOCKED_BY_THREAD_ID` 和 `rwlock_instances.WRITE_LOCKED_BY_THREAD_ID`
    列对于调查性能瓶颈或死锁非常重要。这是通过性能模式仪器实现的：'
- en: Suppose that thread 1 is stuck waiting for a mutex.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设线程 1 因等待互斥锁而被阻塞。
- en: 'You can determine what the thread is waiting for:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以确定线程正在等待什么：
- en: '[PRE0]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Say the query result identifies that the thread is waiting for mutex A, found
    in `events_waits_current.OBJECT_INSTANCE_BEGIN`.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查询结果显示线程正在等待互斥锁 A，位于`events_waits_current.OBJECT_INSTANCE_BEGIN`。
- en: 'You can determine which thread is holding mutex A:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以确定哪个线程正在持有互斥锁 A：
- en: '[PRE1]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Say the query result identifies that it is thread 2 holding mutex A, as found
    in `mutex_instances.LOCKED_BY_THREAD_ID`.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查询结果显示线程 2 正在持有互斥锁 A，如`mutex_instances.LOCKED_BY_THREAD_ID`中所示。
- en: 'You can see what thread 2 is doing:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以看到线程 2 在做什么：
- en: '[PRE2]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
