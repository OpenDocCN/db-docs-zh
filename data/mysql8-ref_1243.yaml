- en: 17.12.6 Simplifying DDL Statements with Online DDL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.12.6 通过在线 DDL 简化 DDL 语句
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-single-multi.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-single-multi.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-single-multi.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-single-multi.html)
- en: Before the introduction of [online DDL](glossary.html#glos_online_ddl "online
    DDL"), it was common practice to combine many DDL operations into a single [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") statement. Because each
    [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") statement involved
    copying and rebuilding the table, it was more efficient to make several changes
    to the same table at once, since those changes could all be done with a single
    rebuild operation for the table. The downside was that SQL code involving DDL
    operations was harder to maintain and to reuse in different scripts. If the specific
    changes were different each time, you might have to construct a new complex [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") for each slightly different
    scenario.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在引入[在线 DDL](glossary.html#glos_online_ddl "在线 DDL")之前，将许多 DDL 操作合并为单个[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE 语句")语句是常见做法。因为每个[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE 语句")语句都涉及复制和重建表，所以一次对同一表进行多个更改更有效，因为这些更改可以在一次表的重建操作中完成。不利之处在于，涉及
    DDL 操作的 SQL 代码更难维护和在不同脚本中重复使用。如果每次具体更改都不同，你可能需要为每个略有不同的情况构建一个新的复杂[`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE 语句")。
- en: 'For DDL operations that can be done online, you can separate them into individual
    [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") statements for
    easier scripting and maintenance, without sacrificing efficiency. For example,
    you might take a complicated statement such as:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于可以在线执行的 DDL 操作，你可以将它们分开为单独的[`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE 语句")语句，以便更轻松地编写脚本和维护，而不会牺牲效率。例如，你可以将一个复杂的语句简化为：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'and break it down into simpler parts that can be tested and performed independently,
    such as:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 并将其分解为可以独立测试和执行的更简单的部分，例如：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You might still use multi-part [`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement") statements for:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能仍然使用多部分[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE 语句")语句来：
- en: Operations that must be performed in a specific sequence, such as creating an
    index followed by a foreign key constraint that uses that index.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须按特定顺序执行的操作，例如创建索引，然后创建使用该索引的外键约束。
- en: Operations all using the same specific `LOCK` clause, that you want to either
    succeed or fail as a group.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有使用相同特定`LOCK`子句的操作，你希望它们作为一个组要么成功要么失败。
- en: Operations that cannot be performed online, that is, that still use the table-copy
    method.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法在线执行的操作，即仍使用表复制方法的操作。
- en: Operations for which you specify `ALGORITHM=COPY` or [`old_alter_table=1`](server-system-variables.html#sysvar_old_alter_table),
    to force the table-copying behavior if needed for precise backward-compatibility
    in specialized scenarios.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为其指定`ALGORITHM=COPY`或[`old_alter_table=1`](server-system-variables.html#sysvar_old_alter_table)的操作，以在特定情况下需要精确向后兼容性时强制执行表复制行为。
