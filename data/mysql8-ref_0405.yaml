- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/fido-pluggable-authentication.html](https://dev.mysql.com/doc/refman/8.0/en/fido-pluggable-authentication.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/fido-pluggable-authentication.html](https://dev.mysql.com/doc/refman/8.0/en/fido-pluggable-authentication.html)
- en: 8.4.1.11 FIDO Pluggable Authentication
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 8.4.1.11 FIDO 可插拔认证
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: FIDO pluggable authentication is an extension included in MySQL Enterprise Edition,
    a commercial product. To learn more about commercial products, see [https://www.mysql.com/products/](https://www.mysql.com/products/).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: FIDO 可插拔认证是包含在 MySQL Enterprise Edition 中的扩展，这是一款商业产品。要了解更多关于商业产品的信息，请参见 [https://www.mysql.com/products/](https://www.mysql.com/products/)。
- en: MySQL Enterprise Edition supports an authentication method that enables users
    to authenticate to MySQL Server using FIDO authentication. This authentication
    method is deprecated as of MySQL 8.0.35 and is subject to removal in a future
    MySQL release. For similar capabilities, consider upgrading to MySQL 8.2 (or higher)
    where users can authenticate to MySQL Server using [WebAuthn authentication](/doc/refman/8.2/en/webauthn-pluggable-authentication.html).
    You need to understand the release model for MySQL innovation and long-term support
    (LTS) versions before you proceed with an upgrade. For more information, see [Section 3.2,
    “Upgrade Paths”](upgrade-paths.html "3.2 Upgrade Paths").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL Enterprise Edition 支持一种认证方法，允许用户使用 FIDO 认证对 MySQL 服务器进行认证。从 MySQL 8.0.35
    开始，此认证方法已被弃用，并可能在未来的 MySQL 版本中被移除。为了获得类似的功能，请考虑升级到 MySQL 8.2（或更高版本），用户可以使用 [WebAuthn
    认证](/doc/refman/8.2/en/webauthn-pluggable-authentication.html) 对 MySQL 服务器进行认证。在进行升级之前，您需要了解
    MySQL 创新和长期支持（LTS）版本的发布模型。有关更多信息，请参见 [Section 3.2, “升级路径”](upgrade-paths.html
    "3.2 升级路径")。
- en: FIDO stands for Fast Identity Online, which provides standards for authentication
    that does not require use of passwords.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: FIDO 代表快速身份在线，提供了不需要使用密码的认证标准。
- en: 'FIDO pluggable authentication provides these capabilities:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: FIDO 可插拔认证提供以下功能：
- en: FIDO enables authentication to MySQL Server using devices such as smart cards,
    security keys, and biometric readers.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FIDO 可以使用智能卡、安全密钥和生物识别读卡器等设备对 MySQL 服务器进行认证。
- en: Because authentication can occur other than by providing a password, FIDO enables
    passwordless authentication.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为认证可以通过除提供密码外的其他方式进行，所以 FIDO 实现了无密码认证。
- en: On the other hand, device authentication is often used in conjunction with password
    authentication, so FIDO authentication can be used to good effect for MySQL accounts
    that use multifactor authentication; see [Section 8.2.18, “Multifactor Authentication”](multifactor-authentication.html
    "8.2.18 Multifactor Authentication").
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一方面，设备认证通常与密码认证一起使用，因此 FIDO 认证可用于使用多因素认证的 MySQL 帐户；参见 [Section 8.2.18, “多因素认证”](multifactor-authentication.html
    "8.2.18 多因素认证")。
- en: The following table shows the plugin and library file names. The file name suffix
    might differ on your system. Common suffixes are `.so` for Unix and Unix-like
    systems, and `.dll` for Windows. The file must be located in the directory named
    by the [`plugin_dir`](server-system-variables.html#sysvar_plugin_dir) system variable.
    For installation information, see [Installing FIDO Pluggable Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-installation
    "Installing FIDO Pluggable Authentication").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了插件和库文件的名称。文件名后缀可能因系统而异。Unix 和类 Unix 系统通常使用 `.so`，Windows 系统使用 `.dll`。文件必须位于由
    [`plugin_dir`](server-system-variables.html#sysvar_plugin_dir) 系统变量指定的目录中。有关安装信息，请参见
    [安装 FIDO 可插拔认证](fido-pluggable-authentication.html#fido-pluggable-authentication-installation
    "安装 FIDO 可插拔认证")。
- en: '**Table 8.27 Plugin and Library Names for FIDO Authentication**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 8.27 FIDO 认证的插件和库名称**'
- en: '| Plugin or File | Plugin or File Name |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 插件或文件 | 插件或文件名 |'
- en: '| Server-side plugin | `authentication_fido` |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 服务器端插件 | `authentication_fido` |'
- en: '| Client-side plugin | `authentication_fido_client` |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 客户端插件 | `authentication_fido_client` |'
- en: '| Library file | `authentication_fido.so`, `authentication_fido_client.so`
    |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 库文件 | `authentication_fido.so`，`authentication_fido_client.so` |'
- en: Note
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A `libfido2` library must be available on systems where either the server-side
    or client-side FIDO authentication plugin is used. If a host machine has more
    than one FIDO device, the `libfido2` library decides which device to use for registration
    and authentication. The `libfido2` library does not provide a facility for device
    selection.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用服务器端或客户端 FIDO 认证插件的系统上必须可用 `libfido2` 库。如果主机上有多个 FIDO 设备，则 `libfido2` 库决定用于注册和认证的设备。`libfido2`
    库不提供设备选择功能。
- en: The server-side FIDO authentication plugin is included only in MySQL Enterprise
    Edition. It is not included in MySQL community distributions. The client-side
    plugin is included in all distributions, including community distributions, which
    enables clients from any distribution to connect to a server that has the server-side
    plugin loaded.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端的FIDO身份验证插件仅包含在MySQL企业版中。它不包含在MySQL社区发行版中。客户端插件包含在所有发行版中，包括社区发行版，这使得来自任何发行版的客户端都可以连接到加载了服务器端插件的服务器。
- en: 'The following sections provide installation and usage information specific
    to FIDO pluggable authentication:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节提供了特定于FIDO可插拔认证的安装和使用信息：
- en: '[Installing FIDO Pluggable Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-installation
    "Installing FIDO Pluggable Authentication")'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[安装FIDO可插拔认证](fido-pluggable-authentication.html#fido-pluggable-authentication-installation
    "安装FIDO可插拔认证")'
- en: '[Using FIDO Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-usage
    "Using FIDO Authentication")'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用FIDO认证](fido-pluggable-authentication.html#fido-pluggable-authentication-usage
    "使用FIDO认证")'
- en: '[FIDO Passwordless Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-passwordless
    "FIDO Passwordless Authentication")'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[FIDO免密码认证](fido-pluggable-authentication.html#fido-pluggable-authentication-passwordless
    "FIDO免密码认证")'
- en: '[FIDO Device Unregistration](fido-pluggable-authentication.html#fido-pluggable-authentication-unregistration
    "FIDO Device Unregistration")'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[FIDO设备注销](fido-pluggable-authentication.html#fido-pluggable-authentication-unregistration
    "FIDO设备注销")'
- en: '[How FIDO Authentication of MySQL Users Works](fido-pluggable-authentication.html#fido-pluggable-authentication-process
    "How FIDO Authentication of MySQL Users Works")'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[MySQL用户FIDO认证的工作原理](fido-pluggable-authentication.html#fido-pluggable-authentication-process
    "MySQL用户FIDO认证的工作原理")'
- en: For general information about pluggable authentication in MySQL, see [Section 8.2.17,
    “Pluggable Authentication”](pluggable-authentication.html "8.2.17 Pluggable Authentication").
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有关MySQL中可插拔认证的一般信息，请参见[第8.2.17节，“可插拔认证”](pluggable-authentication.html "8.2.17 可插拔认证")。
- en: Installing FIDO Pluggable Authentication
  id: totrans-26
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 安装FIDO可插拔认证
- en: This section describes how to install the server-side FIDO authentication plugin.
    For general information about installing plugins, see [Section 7.6.1, “Installing
    and Uninstalling Plugins”](plugin-loading.html "7.6.1 Installing and Uninstalling
    Plugins").
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何安装服务器端的FIDO身份验证插件。有关安装插件的一般信息，请参见[第7.6.1节，“安装和卸载插件”](plugin-loading.html
    "7.6.1 安装和卸载插件")。
- en: To be usable by the server, the plugin library file must be located in the MySQL
    plugin directory (the directory named by the [`plugin_dir`](server-system-variables.html#sysvar_plugin_dir)
    system variable). If necessary, configure the plugin directory location by setting
    the value of [`plugin_dir`](server-system-variables.html#sysvar_plugin_dir) at
    server startup.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要使服务器可用，插件库文件必须位于MySQL插件目录中（由[`plugin_dir`](server-system-variables.html#sysvar_plugin_dir)系统变量命名的目录）。如果需要，通过在服务器启动时设置[`plugin_dir`](server-system-variables.html#sysvar_plugin_dir)的值来配置插件目录位置。
- en: The server-side plugin library file base name is `authentication_fido`. The
    file name suffix differs per platform (for example, `.so` for Unix and Unix-like
    systems, `.dll` for Windows).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端插件库文件基本名称为`authentication_fido`。文件名后缀因平台而异（例如，对于Unix和类Unix系统，为`.so`，对于Windows为`.dll`）。
- en: To load the plugin at server startup, use the [`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add)
    option to name the library file that contains it. With this plugin-loading method,
    the option must be given each time the server starts.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要在服务器启动时加载插件，请使用[`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add)选项命名包含插件的库文件。使用此插件加载方法，选项必须在每次服务器启动时给出。
- en: 'To load the plugin, put a line such as this in your `my.cnf` file, adjusting
    the `.so` suffix for your platform as necessary:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要加载插件，请在您的`my.cnf`文件中添加类似以下行，根据需要调整`.so`后缀以适应您的平台：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After modifying `my.cnf`, restart the server to cause the new setting to take
    effect.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 修改`my.cnf`后，重新启动服务器以使新设置生效。
- en: 'Alternatively, to load the plugin at runtime, use this statement, adjusting
    the `.so` suffix for your platform as necessary:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要在运行时加载插件，请使用此语句，根据需要调整`.so`后缀以适应您的平台：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN Statement")
    loads the plugin immediately, and also registers it in the `mysql.plugins` system
    table to cause the server to load it for each subsequent normal startup without
    the need for [`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add).'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INSTALL PLUGIN`](install-plugin.html "15.7.4.4 INSTALL PLUGIN Statement")立即加载插件，并在`mysql.plugins`系统表中注册它，以使服务器在每次后续正常启动时加载它，而无需[`--plugin-load-add`](server-options.html#option_mysqld_plugin-load-add)。'
- en: 'To verify plugin installation, examine the Information Schema [`PLUGINS`](information-schema-plugins-table.html
    "28.3.22 The INFORMATION_SCHEMA PLUGINS Table") table or use the [`SHOW PLUGINS`](show-plugins.html
    "15.7.7.25 SHOW PLUGINS Statement") statement (see [Section 7.6.2, “Obtaining
    Server Plugin Information”](obtaining-plugin-information.html "7.6.2 Obtaining
    Server Plugin Information")). For example:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证插件安装，请检查信息模式[`PLUGINS`](information-schema-plugins-table.html "28.3.22 The
    INFORMATION_SCHEMA PLUGINS Table")表，或使用[`SHOW PLUGINS`](show-plugins.html "15.7.7.25 SHOW
    PLUGINS Statement")语句（参见[Section 7.6.2，“获取服务器插件信息”](obtaining-plugin-information.html
    "7.6.2 Obtaining Server Plugin Information")）。例如：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If a plugin fails to initialize, check the server error log for diagnostic messages.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插件初始化失败，请检查服务器错误日志以获取诊断消息。
- en: To associate MySQL accounts with the FIDO authentication plugin, see [Using
    FIDO Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-usage
    "Using FIDO Authentication").
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 MySQL 帐户与 FIDO 认证插件关联，请参见[使用 FIDO 认证](fido-pluggable-authentication.html#fido-pluggable-authentication-usage
    "Using FIDO Authentication")。
- en: Using FIDO Authentication
  id: totrans-41
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 使用 FIDO 认证
- en: FIDO authentication typically is used in the context of multifactor authentication
    (see [Section 8.2.18, “Multifactor Authentication”](multifactor-authentication.html
    "8.2.18 Multifactor Authentication")). This section shows how to incorporate FIDO
    device-based authentication into a multifactor account, using the `authentication_fido`
    plugin.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: FIDO 认证通常用于多因素认证的背景下（参见[Section 8.2.18，“多因素认证”](multifactor-authentication.html
    "8.2.18 Multifactor Authentication")）。本节展示了如何将基于 FIDO 设备的认证纳入多因素帐户中，使用`authentication_fido`插件。
- en: It is assumed in the following discussion that the server is running with the
    server-side FIDO authentication plugin enabled, as described in [Installing FIDO
    Pluggable Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-installation
    "Installing FIDO Pluggable Authentication"), and that the client-side FIDO plugin
    is available in the plugin directory on the client host.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下讨论中假定服务器正在运行，并启用了服务器端 FIDO 认证插件，如[安装 FIDO 可插拔认证](fido-pluggable-authentication.html#fido-pluggable-authentication-installation
    "Installing FIDO Pluggable Authentication")中所述，并且客户端 FIDO 插件在客户端主机的插件目录中可用。
- en: Note
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: On Windows, FIDO authentication only functions if the client process runs as
    a user with administrator privileges.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，只有当客户端进程以具有管理员权限的用户身份运行时，FIDO 认证才能正常工作。
- en: It is also assumed that FIDO authentication is used in conjunction with non-FIDO
    authentication (which implies a 2FA or 3FA account). FIDO can also be used by
    itself to create 1FA accounts that authenticate in a passwordless manner. In this
    case, the setup process differs somewhat. For instructions, see [FIDO Passwordless
    Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-passwordless
    "FIDO Passwordless Authentication").
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 还假定 FIDO 认证与非 FIDO 认证一起使用（这意味着 2FA 或 3FA 帐户）。FIDO 也可以单独使用，创建以无密码方式进行身份验证的 1FA
    帐户。在这种情况下，设置过程略有不同。有关说明，请参见[FIDO 无密码认证](fido-pluggable-authentication.html#fido-pluggable-authentication-passwordless
    "FIDO Passwordless Authentication")。
- en: 'An account that is configured to use the `authentication_fido` plugin is associated
    with a FIDO device. Because of this, a one-time device registration step is required
    before FIDO authentication can occur. The device registration process has these
    characteristics:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 配置为使用`authentication_fido`插件的帐户与 FIDO 设备关联。因此，在进行 FIDO 认证之前需要进行一次设备注册步骤。设备注册过程具有以下特点：
- en: Any FIDO device associated with an account must be registered before the account
    can be used.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与帐户关联的任何 FIDO 设备必须在使用帐户之前注册。
- en: Registration requires that a FIDO device be available on the client host, or
    registration fails.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册要求客户端主机上有一个 FIDO 设备，否则注册将失败。
- en: The user is expected to perform the appropriate FIDO device action when prompted
    during registration (for example, touching the device or performing a biometric
    scan).
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户在注册过程中收到提示时，应执行适当的 FIDO 设备操作（例如，触摸设备或进行生物识别扫描）。
- en: To perform device registration, the client user must invoke the [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") client program or MySQL Shell and
    specify the [`--fido-register-factor`](mysql-command-options.html#option_mysql_fido-register-factor)
    option to specify the factor or factors for which a device is being registered.
    For example, if the account is set to use FIDO as the second authentication factor,
    the user invokes [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client") with the [`--fido-register-factor=2`](mysql-command-options.html#option_mysql_fido-register-factor)
    option.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要执行设备注册，客户端用户必须调用[**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client")客户端程序或MySQL Shell，并指定[`--fido-register-factor`](mysql-command-options.html#option_mysql_fido-register-factor)选项以指定正在注册设备的因素或因素。例如，如果帐户设置为将FIDO用作第二身份验证因素，则用户使用[`--fido-register-factor=2`](mysql-command-options.html#option_mysql_fido-register-factor)选项调用[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")。
- en: If the user account is configured with the `authentication_fido` plugin set
    as the second or third factor, authentication for all preceding factors must succeed
    before the registration step can proceed.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户帐户配置为将`authentication_fido`插件设置为第二或第三因素，则在注册步骤可以继续之前，所有前面因素的身份验证必须成功。
- en: The server knows from the information in the user account whether the FIDO device
    requires registration or has already been registered. When the client program
    connects, the server places the client session in sandbox mode if the device must
    be registered, so that registration must occur before anything else can be done.
    Sandbox mode used for FIDO device registration is similar to that used for handling
    of expired passwords. See [Section 8.2.16, “Server Handling of Expired Passwords”](expired-password-handling.html
    "8.2.16 Server Handling of Expired Passwords").
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器根据用户帐户中的信息知道FIDO设备是否需要注册或已经注册。当客户端程序连接时，如果设备必须注册，服务器会将客户端会话置于沙盒模式，以便在执行其他操作之前必须进行注册。用于FIDO设备注册的沙盒模式类似于处理过期密码的模式。请参阅[第8.2.16节，“服务器处理过期密码”](expired-password-handling.html
    "8.2.16 Server Handling of Expired Passwords")。
- en: In sandbox mode, no statements other than [`ALTER USER`](alter-user.html "15.7.1.1 ALTER
    USER Statement") are permitted. Registration is performed using forms of this
    statement. When invoked with the [`--fido-register-factor`](mysql-command-options.html#option_mysql_fido-register-factor)
    option, the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    client generates the [`ALTER USER`](alter-user.html "15.7.1.1 ALTER USER Statement")
    statements required to perform registration. After registration has been accomplished,
    the server switches the session out of sandbox mode, and the client can proceed
    normally. For information about the generated [`ALTER USER`](alter-user.html "15.7.1.1 ALTER
    USER Statement") statements, refer to the [`--fido-register-factor`](mysql-command-options.html#option_mysql_fido-register-factor)
    description.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在沙盒模式下，除了[`ALTER USER`](alter-user.html "15.7.1.1 ALTER USER Statement")语句之外，不允许使用其他语句。注册是通过此语句的形式执行的。当使用[`--fido-register-factor`](mysql-command-options.html#option_mysql_fido-register-factor)选项调用时，[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端会生成执行注册所需的[`ALTER USER`](alter-user.html
    "15.7.1.1 ALTER USER Statement")语句。注册完成后，服务器会将会话从沙盒模式切换出来，客户端可以正常进行操作。有关生成的[`ALTER
    USER`](alter-user.html "15.7.1.1 ALTER USER Statement")语句的信息，请参考[`--fido-register-factor`](mysql-command-options.html#option_mysql_fido-register-factor)的描述。
- en: When device registration has been performed for the account, the server updates
    the `mysql.user` system table row for that account to update the device registration
    status and to store the public key and credential ID.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当为帐户执行设备注册后，服务器会更新该帐户的`mysql.user`系统表行，以更新设备注册状态并存储公钥和凭证ID。
- en: The registration step can be performed only by the user named by the account.
    If one user attempts to perform registration for another user, an error occurs.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只能由帐户指定的用户执行注册步骤。如果一个用户尝试为另一个用户执行注册，则会出现错误。
- en: The user should use the same FIDO device during registration and authentication.
    If, after registering a FIDO device on the client host, the device is reset or
    a different device is inserted, authentication fails. In this case, the device
    associated with the account must be unregistered and registration must be done
    again.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户在注册和身份验证过程中应使用相同的FIDO设备。如果在客户端主机上注册了FIDO设备后，重置设备或插入不同设备，则身份验证将失败。在这种情况下，必须取消与帐户关联的设备注册，并重新进行注册。
- en: 'Suppose that you want an account to authenticate first using the `caching_sha2_password`
    plugin, then using the `authentication_fido` plugin. Create a multifactor account
    using a statement like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您希望一个账户首先使用 `caching_sha2_password` 插件进行认证，然后再使用 `authentication_fido` 插件进行认证。可以使用类似以下语句创建多因素账户：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To connect, supply the factor 1 password to satisfy authentication for that
    factor, and to initiate registration of the FIDO device, set the [`--fido-register-factor`](mysql-command-options.html#option_mysql_fido-register-factor)
    to factor 2.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接，提供因素 1 密码以满足该因素的认证，并将 [`--fido-register-factor`](mysql-command-options.html#option_mysql_fido-register-factor)
    设置为因素 2 以启动 FIDO 设备的注册。
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Once the factor 1 password is accepted, the client session enters sandbox mode
    so that device registration can be performed for factor 2\. During registration,
    you are prompted to perform the appropriate FIDO device action, such as touching
    the device or performing a biometric scan.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦因素 1 密码被接受，客户端会进入沙盒模式，以便为因素 2 进行设备注册。在注册过程中，您将被提示执行适当的 FIDO 设备操作，例如触摸设备或进行生物识别扫描。
- en: When the registration process is complete, the connection to the server is permitted.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当注册过程完成时，连接到服务器是允许的。
- en: Note
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The connection to the server is permitted following registration regardless
    of additional authentication factors in the account's authentication chain. For
    example, if the account in the preceding example was defined with a third authentication
    factor (using non-FIDO authentication), the connection would be permitted after
    a successful registration without authenticating the third factor. However, subsequent
    connections would require authenticating all three factors.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在注册后，无论账户的认证链中是否存在额外的认证因素，连接到服务器都是允许的。例如，如果前面的示例中的账户定义了第三个认证因素（使用非 FIDO 认证），则在成功注册后连接将被允许，而无需对第三个因素进行认证。然而，后续的连接将需要对所有三个因素进行认证。
- en: FIDO Passwordless Authentication
  id: totrans-66
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: FIDO 无密码认证
- en: This section describes how FIDO can be used by itself to create 1FA accounts
    that authenticate in a passwordless manner. In this context, “passwordless” means
    that authentication occurs but uses a method other than a password, such as a
    security key or biometric scan. It does not refer to an account that uses a password-based
    authentication plugin for which the password is empty. That kind of “passwordless”
    is completely insecure and is not recommended.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何单独使用 FIDO 创建支持无密码认证的 1FA 账户。在这种情况下，“无密码”意味着认证会发生，但使用的是除密码之外的方法，例如安全密钥或生物识别扫描。这并不是指使用密码为空的基于密码的认证插件的账户。那种“无密码”是完全不安全的，不建议使用。
- en: 'The following prerequisites apply when using the `authentication_fido` plugin
    to achieve passwordless authentication:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `authentication_fido` 插件实现无密码认证时，需要满足以下先决条件：
- en: The user that creates a passwordless-authentication account requires the [`PASSWORDLESS_USER_ADMIN`](privileges-provided.html#priv_passwordless-user-admin)
    privilege in addition to the [`CREATE USER`](privileges-provided.html#priv_create-user)
    privilege.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建无密码认证账户的用户需要[`PASSWORDLESS_USER_ADMIN`](privileges-provided.html#priv_passwordless-user-admin)权限，以及[`CREATE
    USER`](privileges-provided.html#priv_create-user)权限。
- en: 'The first element of the [`authentication_policy`](server-system-variables.html#sysvar_authentication_policy)
    value must be an asterisk (`*`) and not a plugin name. For example, the default
    [`authentication_policy`](server-system-variables.html#sysvar_authentication_policy)
    value supports enabling passwordless authentication because the first element
    is an asterisk:'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`authentication_policy`](server-system-variables.html#sysvar_authentication_policy)
    值的第一个元素必须是星号（`*`），而不是插件名称。例如，默认的 [`authentication_policy`](server-system-variables.html#sysvar_authentication_policy)
    值支持启用无密码认证，因为第一个元素是星号：'
- en: '[PRE5]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For information about configuring the [`authentication_policy`](server-system-variables.html#sysvar_authentication_policy)
    value, see [Configuring the Multifactor Authentication Policy](multifactor-authentication.html#multifactor-authentication-policy
    "Configuring the Multifactor Authentication Policy").
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关配置 [`authentication_policy`](server-system-variables.html#sysvar_authentication_policy)
    值的信息，请参阅[配置多因素认证策略](multifactor-authentication.html#multifactor-authentication-policy)。
- en: To use `authentication_fido` as a passwordless authentication method, the account
    must be created with `authentication_fido` as the first factor authentication
    method. The `INITIAL AUTHENTICATION IDENTIFIED BY` clause must also be specified
    for the first factor (it is not supported with 2nd or 3rd factors). This clause
    specifies whether a randomly generated or user-specified password will be used
    for FIDO device registration. After device registration, the server deletes the
    password and modifies the account to make `authentication_fido` the sole authentication
    method (the 1FA method).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 要将`authentication_fido`用作免密码认证方法，必须将帐户创建为将`authentication_fido`作为第一因素认证方法。还必须为第一因素指定`INITIAL
    AUTHENTICATION IDENTIFIED BY`子句（不支持第2或第3因素）。此子句指定FIDO设备注册时将使用随机生成的还是用户指定的密码。设备注册后，服务器会删除密码并修改帐户，使`authentication_fido`成为唯一的认证方法（1FA方法）。
- en: 'The required [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")
    syntax is as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的[`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")语法如下：
- en: '[PRE6]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following example uses the `RANDOM PASSWORD` syntax:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例使用`RANDOM PASSWORD`语法：
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To perform registration, the user must authenticate to the server with the
    password associated with the `INITIAL AUTHENTICATION IDENTIFIED BY` clause, either
    the randomly generated password, or the `''*`auth_string`*''` value. If the account
    was created as just shown, the user executes this command and pastes in the preceding
    randomly generated password (`9XHK]M{l2rnD;VXyHzeF`) at the prompt:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行注册，用户必须使用与`INITIAL AUTHENTICATION IDENTIFIED BY`子句关联的密码对服务器进行身份验证，可以是随机生成的密码，也可以是`'*`auth_string`*'`值。如果帐户是刚刚创建的，用户执行此命令并在提示处粘贴先前生成的随机密码（`9XHK]M{l2rnD;VXyHzeF`）：
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The option `--fido-register-factor=2` is used because the `INITIAL AUTHENTICATION
    IDENTIFIED BY` clause is currently acting as the first factor authentication method.
    The user must therefore provide the temporary password by using the second factor.
    On a successful registration, the server removes the temporary password and revises
    the account entry in the `mysql.user` system table to list `authentication_fido`
    as the sole (1FA) authentication method.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 选项`--fido-register-factor=2`用于表示`INITIAL AUTHENTICATION IDENTIFIED BY`子句当前充当第一因素认证方法。因此，用户必须使用第二因素提供临时密码。成功注册后，服务器将删除临时密码并修改`mysql.user`系统表中的帐户条目，将`authentication_fido`列为唯一（1FA）认证方法。
- en: 'When creating a passwordless-authentication account, it is important to include
    the `INITIAL AUTHENTICATION IDENTIFIED BY` clause in the [`CREATE USER`](create-user.html
    "15.7.1.3 CREATE USER Statement") statement. The server will accept a statement
    without the clause, but the resulting account is unusable because there is no
    way to connect to the server to register the device. Suppose that you execute
    a statement like this:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 创建无密码认证帐户时，重要的是在[`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")语句中包含`INITIAL
    AUTHENTICATION IDENTIFIED BY`子句。服务器将接受没有子句的语句，但由于没有办法连接到服务器注册设备，因此生成的帐户无法使用。假设您执行了这样的语句：
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Subsequent attempts to use the account to connect fail like this:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 后续尝试使用帐户连接将失败，如下所示：
- en: '[PRE10]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Passwordless authentication is achieved using the Universal 2nd Factor (U2F)
    protocol, which does not support additional security measures such as setting
    a PIN on the device to be registered. It is therefore the responsibility of the
    device holder to ensure the device is handled in a secure manner.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用通用第二因素（U2F）协议实现无密码认证，该协议不支持设置要注册的设备的PIN等其他安全措施。因此，设备持有者有责任确保设备以安全方式处理。
- en: FIDO Device Unregistration
  id: totrans-87
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: FIDO设备注销
- en: 'It is possible to unregister FIDO devices associated with a MySQL account.
    This might be desirable or necessary under multiple circumstances:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 可以注销与MySQL帐户关联的FIDO设备。在多种情况下，这可能是可取或必要的：
- en: A FIDO device is to be replaced with a different device. The previous device
    must be unregistered and the new device registered.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要用不同设备替换FIDO设备。必须注销先前的设备并注册新设备。
- en: In this case, the account owner or any user who has the [`CREATE USER`](privileges-provided.html#priv_create-user)
    privilege can unregister the device. The account owner can register the new device.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，帐户所有者或任何具有[`CREATE USER`](privileges-provided.html#priv_create-user)权限的用户都可以注销设备。帐户所有者可以注册新设备。
- en: A FIDO device is reset or lost. Authentication attempts will fail until the
    current device is unregistered and a new registration is performed.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FIDO 设备被重置或丢失。直到当前设备被注销并执行新的注册为止，认证尝试将失败。
- en: In this case, the account owner, being unable to authenticate, cannot unregister
    the current device and must contact the DBA (or any user who has the [`CREATE
    USER`](privileges-provided.html#priv_create-user) privilege) to do so. Then the
    account owner can reregister the reset device or register a new device.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，由于账户所有者无法进行身份验证，因此无法注销当前设备，必须联系 DBA（或任何具有[`CREATE USER`](privileges-provided.html#priv_create-user)
    权限的用户）来执行此操作。然后账户所有者可以重新注册重置的设备或注册新设备。
- en: 'Unregistering a FIDO device can be done by the account owner or by any user
    who has the [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")
    privilege. Use this syntax:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 注销 FIDO 设备可以由账户所有者或任何具有[`CREATE USER`](create-user.html "15.7.1.3 CREATE USER
    Statement") 权限的用户执行。使用以下语法：
- en: '[PRE11]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: To re-register a device or perform a new registration, refer to the instructions
    in [Using FIDO Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-usage
    "Using FIDO Authentication").
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要重新注册设备或执行新的注册，请参考[使用 FIDO 认证](fido-pluggable-authentication.html#fido-pluggable-authentication-usage
    "Using FIDO Authentication") 中的说明。
- en: How FIDO Authentication of MySQL Users Works
  id: totrans-96
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: FIDO 认证 MySQL 用户的工作原理
- en: This section provides an overview of how MySQL and FIDO work together to authenticate
    MySQL users. For examples showing how to set up MySQL accounts to use the FIDO
    authentication plugins, see [Using FIDO Authentication](fido-pluggable-authentication.html#fido-pluggable-authentication-usage
    "Using FIDO Authentication").
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 本节概述了 MySQL 和 FIDO 如何共同工作以对 MySQL 用户进行认证。有关如何设置 MySQL 账户以使用 FIDO 认证插件的示例，请参见[使用
    FIDO 认证](fido-pluggable-authentication.html#fido-pluggable-authentication-usage
    "Using FIDO Authentication")。
- en: 'An account that uses FIDO authentication must perform an initial device registration
    step before it can connect to the server. After the device has been registered,
    authentication can proceed. FIDO device registration process is as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 FIDO 认证的账户必须在连接到服务器之前执行初始设备注册步骤。设备注册后，认证可以继续进行。FIDO 设备注册过程如下：
- en: The server sends a random challenge, user ID, and relying party ID (which uniquely
    identifies a server) to the client. The relying party ID is defined by the [`authentication_fido_rp_id`](pluggable-authentication-system-variables.html#sysvar_authentication_fido_rp_id)
    system variable. The default value is `MySQL`.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器向客户端发送随机挑战、用户 ID 和依赖方 ID（唯一标识服务器），依赖方 ID 由[`authentication_fido_rp_id`](pluggable-authentication-system-variables.html#sysvar_authentication_fido_rp_id)
    系统变量定义。默认值为 `MySQL`。
- en: The client receives that information and sends it to the client-side FIDO authentication
    plugin, which in turn provides it to the FIDO device.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端接收该信息并将其发送给客户端 FIDO 认证插件，后者再将其提供给 FIDO 设备。
- en: After the user has performed the appropriate device action (for example, touching
    the device or performing a biometric scan) the FIDO device generates a public/private
    key pair, a key handle, an X.509 certificate, and a signature, which is returned
    to the server.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户执行适当的设备操作（例如，触摸设备或进行生物识别扫描）后，FIDO 设备生成公钥/私钥对、密钥句柄、X.509 证书和签名，然后返回给服务器。
- en: The server-side FIDO authentication plugin verifies the signature. Upon successful
    verification, the server stores the credential ID and public key in the `mysql.user`
    system table.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器端 FIDO 认证插件验证签名。验证成功后，服务器将凭证 ID 和公钥存储在 `mysql.user` 系统表中。
- en: 'After registration has been performed successfully, FIDO authentication follows
    this process:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 注册成功后，FIDO 认证遵循以下流程：
- en: The server sends a random challenge, user ID, relying party ID and credentials
    to the client.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器向客户端发送随机挑战、用户 ID、依赖方 ID 和凭证。
- en: The client sends the same information to the FIDO device.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端将相同的信息发送给 FIDO 设备。
- en: The FIDO device prompts the user to perform the appropriate device action, based
    on the selection made during registration.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: FIDO 设备提示用户执行适当的设备操作，根据注册时所做的选择。
- en: This action unlocks the private key and the challenge is signed.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此操作解锁私钥并签署挑战。
- en: This signed challenge is returned to the server.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 签署的挑战返回给服务器。
- en: The server-side FIDO authentication plugin verifies the signature with the public
    key and responds to indicate authentication success or failure.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器端 FIDO 认证插件使用公钥验证签名，并响应以指示认证成功或失败。
