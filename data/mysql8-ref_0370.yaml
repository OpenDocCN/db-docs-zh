- en: 8.2.10 Using Roles
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8.2.10 使用角色
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/roles.html](https://dev.mysql.com/doc/refman/8.0/en/roles.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/roles.html](https://dev.mysql.com/doc/refman/8.0/en/roles.html)
- en: A MySQL role is a named collection of privileges. Like user accounts, roles
    can have privileges granted to and revoked from them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 角色是一组命名的权限集合。与用户帐户一样，角色可以被授予和撤销权限。
- en: A user account can be granted roles, which grants to the account the privileges
    associated with each role. This enables assignment of sets of privileges to accounts
    and provides a convenient alternative to granting individual privileges, both
    for conceptualizing desired privilege assignments and implementing them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用户帐户可以被授予角色，从而向帐户授予与每个角色相关联的权限。这使得可以将一组权限分配给帐户，并为所需的权限分配提供了一个方便的替代方法，用于概念化所需的权限分配并实施它们。
- en: 'The following list summarizes role-management capabilities provided by MySQL:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表总结了 MySQL 提供的角色管理功能：
- en: '[`CREATE ROLE`](create-role.html "15.7.1.2 CREATE ROLE Statement") and [`DROP
    ROLE`](drop-role.html "15.7.1.4 DROP ROLE Statement") create and remove roles.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE ROLE`](create-role.html "15.7.1.2 CREATE ROLE 语句") 和 [`DROP ROLE`](drop-role.html
    "15.7.1.4 DROP ROLE 语句") 创建和移除角色。'
- en: '[`GRANT`](grant.html "15.7.1.6 GRANT Statement") and [`REVOKE`](revoke.html
    "15.7.1.8 REVOKE Statement") assign privileges to revoke privileges from user
    accounts and roles.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`GRANT`](grant.html "15.7.1.6 GRANT 语句") 和 [`REVOKE`](revoke.html "15.7.1.8
    REVOKE 语句") 分配权限以撤销用户帐户和角色的权限。'
- en: '[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS Statement") displays
    privilege and role assignments for user accounts and roles.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS 语句") 显示用户帐户和角色的权限和角色分配。'
- en: '[`SET DEFAULT ROLE`](set-default-role.html "15.7.1.9 SET DEFAULT ROLE Statement")
    specifies which account roles are active by default.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SET DEFAULT ROLE`](set-default-role.html "15.7.1.9 SET DEFAULT ROLE 语句")
    指定默认情况下活动的帐户角色。'
- en: '[`SET ROLE`](set-role.html "15.7.1.11 SET ROLE Statement") changes the active
    roles within the current session.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SET ROLE`](set-role.html "15.7.1.11 SET ROLE 语句") 更改当前会话中的活动角色。'
- en: The [`CURRENT_ROLE()`](information-functions.html#function_current-role) function
    displays the active roles within the current session.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CURRENT_ROLE()`](information-functions.html#function_current-role) 函数显示当前会话中活动的角色。'
- en: The [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    and [`activate_all_roles_on_login`](server-system-variables.html#sysvar_activate_all_roles_on_login)
    system variables enable defining mandatory roles and automatic activation of granted
    roles when users log in to the server.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles) 和
    [`activate_all_roles_on_login`](server-system-variables.html#sysvar_activate_all_roles_on_login)
    系统变量允许定义强制角色和用户登录到服务器时自动激活授予的角色。'
- en: For descriptions of individual role-manipulation statements (including the privileges
    required to use them), see [Section 15.7.1, “Account Management Statements”](account-management-statements.html
    "15.7.1 Account Management Statements"). The following discussion provides examples
    of role usage. Unless otherwise specified, SQL statements shown here should be
    executed using a MySQL account with sufficient administrative privileges, such
    as the `root` account.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有关单个角色操作语句的描述（包括使用它们所需的权限），请参阅[第 15.7.1 节，“帐户管理语句”](account-management-statements.html
    "15.7.1 帐户管理语句")。以下讨论提供了角色使用的示例。除非另有说明，此处显示的 SQL 语句应使用具有足够管理权限的 MySQL 帐户（如 `root`
    帐户）执行。
- en: '[Creating Roles and Granting Privileges to Them](roles.html#roles-creating-granting
    "Creating Roles and Granting Privileges to Them")'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建角色并授予权限](roles.html#roles-creating-granting "创建角色并授予权限")'
- en: '[Defining Mandatory Roles](roles.html#mandatory-roles "Defining Mandatory Roles")'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[定义强制角色](roles.html#mandatory-roles "定义强制角色")'
- en: '[Checking Role Privileges](roles.html#roles-checking "Checking Role Privileges")'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[检查角色权限](roles.html#roles-checking "检查角色权限")'
- en: '[Activating Roles](roles.html#roles-activating "Activating Roles")'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[激活角色](roles.html#roles-activating "激活角色")'
- en: '[Revoking Roles or Role Privileges](roles.html#roles-revoking "Revoking Roles
    or Role Privileges")'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[撤销角色或角色权限](roles.html#roles-revoking "撤销角色或角色权限")'
- en: '[Dropping Roles](roles.html#roles-dropping "Dropping Roles")'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[删除角色](roles.html#roles-dropping "删除角色")'
- en: '[User and Role Interchangeability](roles.html#role-user-interchangeability
    "User and Role Interchangeability")'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用户和角色的可互换性](roles.html#role-user-interchangeability "用户和角色��可互换性")'
- en: Creating Roles and Granting Privileges to Them
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建角色并授予权限
- en: 'Consider this scenario:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下情景：
- en: An application uses a database named `app_db`.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个应用程序使用名为`app_db`的数据库。
- en: Associated with the application, there can be accounts for developers who create
    and maintain the application, and for users who interact with it.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与应用程序关联，可以为创建和维护应用程序的开发人员以及与之交互的用户创建帐户。
- en: Developers need full access to the database. Some users need only read access,
    others need read/write access.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员需要对数据库拥有完全访问权限。一些用户只需要读取访问权限，其他用户需要读取/写入访问权限。
- en: To avoid granting privileges individually to possibly many user accounts, create
    roles as names for the required privilege sets. This makes it easy to grant the
    required privileges to user accounts, by granting the appropriate roles.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免向可能有许多用户帐户单独授予权限，将角色创建为所需权限集的名称。这样可以轻松地向用户帐户授予所需的权限，方法是授予适当的角色。
- en: 'To create the roles, use the [`CREATE ROLE`](create-role.html "15.7.1.2 CREATE
    ROLE Statement") statement:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建角色，请使用[`CREATE ROLE`](create-role.html "15.7.1.2 CREATE ROLE Statement")语句：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Role names are much like user account names and consist of a user part and host
    part in `'*`user_name`*'@'*`host_name`*'` format. The host part, if omitted, defaults
    to `'%'`. The user and host parts can be unquoted unless they contain special
    characters such as `-` or `%`. Unlike account names, the user part of role names
    cannot be blank. For additional information, see [Section 8.2.5, “Specifying Role
    Names”](role-names.html "8.2.5 Specifying Role Names").
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 角色名称与用户帐户名称非常相似，由`'*`user_name`*'@'*`host_name`*'`格式中的用户部分和主机部分组成。如果省略主机部分，则默认为`'%'`。用户和主机部分可以不带引号，除非它们包含特殊字符，如`-`或`%`。与帐户名称不同，角色名称的用户部分不能为空。有关更多信息，请参见[第8.2.5节“指定角色名称”](role-names.html
    "8.2.5 Specifying Role Names")。
- en: 'To assign privileges to the roles, execute [`GRANT`](grant.html "15.7.1.6 GRANT
    Statement") statements using the same syntax as for assigning privileges to user
    accounts:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要为角色分配权限，执行与为用户帐户分配权限相同的语法的[`GRANT`](grant.html "15.7.1.6 GRANT Statement")语句：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now suppose that initially you require one developer account, two user accounts
    that need read-only access, and one user account that needs read/write access.
    Use [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement") to create
    the accounts:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设最初您需要一个开发人员帐户，两个需要只读访问权限的用户帐户和一个需要读取/写入访问权限的用户帐户。使用[`CREATE USER`](create-user.html
    "15.7.1.3 CREATE USER Statement")创建这些帐户：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To assign each user account its required privileges, you could use [`GRANT`](grant.html
    "15.7.1.6 GRANT Statement") statements of the same form as just shown, but that
    requires enumerating individual privileges for each user. Instead, use an alternative
    [`GRANT`](grant.html "15.7.1.6 GRANT Statement") syntax that permits granting
    roles rather than privileges:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为每个用户帐户分配所需的权限，您可以使用与刚刚显示的相同形式的[`GRANT`](grant.html "15.7.1.6 GRANT Statement")语句，但这需要为每个用户枚举单独的权限。相反，使用另一种允许授予角色而不是权限的[`GRANT`](grant.html
    "15.7.1.6 GRANT Statement")语法：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The [`GRANT`](grant.html "15.7.1.6 GRANT Statement") statement for the `rw_user1`
    account grants the read and write roles, which combine to provide the required
    read and write privileges.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`rw_user1`帐户的[`GRANT`](grant.html "15.7.1.6 GRANT Statement")语句授予读取和写入角色，这些角色结合起来提供所需的读取和写入权限。
- en: 'The [`GRANT`](grant.html "15.7.1.6 GRANT Statement") syntax for granting roles
    to an account differs from the syntax for granting privileges: There is an `ON`
    clause to assign privileges, whereas there is no `ON` clause to assign roles.
    Because the syntaxes are distinct, you cannot mix assigning privileges and roles
    in the same statement. (It is permitted to assign both privileges and roles to
    an account, but you must use separate [`GRANT`](grant.html "15.7.1.6 GRANT Statement")
    statements, each with syntax appropriate to what is to be granted.) As of MySQL
    8.0.16, roles cannot be granted to anonymous users.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 将角色授予帐户的[`GRANT`](grant.html "15.7.1.6 GRANT Statement")语法与授予权限的语法不同：有一个`ON`子句用于分配权限，而没有`ON`子句用于分配角色。因为语法不同，您不能在同一语句中混合分配权限和角色。（允许向帐户分配权限和角色，但必须使用适用于要授予的内容的语法的单独的[`GRANT`](grant.html
    "15.7.1.6 GRANT Statement")语句。）截至MySQL 8.0.16，无法向匿名用户授予角色。
- en: A role when created is locked, has no password, and is assigned the default
    authentication plugin. (These role attributes can be changed later with the [`ALTER
    USER`](alter-user.html "15.7.1.1 ALTER USER Statement") statement, by users who
    have the global [`CREATE USER`](privileges-provided.html#priv_create-user) privilege.)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 创建角色时，角色被锁定，没有密码，并分配默认的身份验证插件。（这些角色属性可以稍后由具有全局[`CREATE USER`](privileges-provided.html#priv_create-user)权限的用户使用[`ALTER
    USER`](alter-user.html "15.7.1.1 ALTER USER语句")语句更改。）
- en: While locked, a role cannot be used to authenticate to the server. If unlocked,
    a role can be used to authenticate. This is because roles and users are both authorization
    identifiers with much in common and little to distinguish them. See also [User
    and Role Interchangeability](roles.html#role-user-interchangeability "User and
    Role Interchangeability").
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当角色被锁定时，无法用于服务器身份验证。如果解锁，则可以用于身份验证。这是因为角色和用户都是授权标识符，有很多共同之处，很少有区别。另请参阅[用户和角色的可互换性](roles.html#role-user-interchangeability
    "用户和角色的可互换性")。
- en: Defining Mandatory Roles
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 定义强制角色
- en: It is possible to specify roles as mandatory by naming them in the value of
    the [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles) system
    variable. The server treats a mandatory role as granted to all users, so that
    it need not be granted explicitly to any account.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)系统变量的值中命名角色来指定角色为强制角色。服务器将强制角色视为授予所有用户的角色，因此不需要显式授予任何帐户。
- en: 'To specify mandatory roles at server startup, define [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    in your server `my.cnf` file:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要在服务器启动时指定强制角色，请在服务器的`my.cnf`文件中定义[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To set and persist [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    at runtime, use a statement like this:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要在运行时设置和持久化[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)，请使用以下语句：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[`SET PERSIST`](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment")
    sets a value for the running MySQL instance. It also saves the value, causing
    it to carry over to subsequent server restarts. To change the value for the running
    MySQL instance without having it carry over to subsequent restarts, use the `GLOBAL`
    keyword rather than `PERSIST`. See [Section 15.7.6.1, “SET Syntax for Variable
    Assignment”](set-variable.html "15.7.6.1 SET Syntax for Variable Assignment").'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SET PERSIST`](set-variable.html "15.7.6.1 变量赋值的SET语法")为运行中的MySQL实例设置一个值。它还保存该值，导致其在后续服务器重启时保留。要更改运行中的MySQL实例的值，而不使其在后续重启时保留，使用`GLOBAL`关键字而不是`PERSIST`。请参阅[第15.7.6.1节，“变量赋值的SET语法”](set-variable.html
    "15.7.6.1 变量赋值的SET语法")。'
- en: Setting [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    requires the [`ROLE_ADMIN`](privileges-provided.html#priv_role-admin) privilege,
    in addition to the [`SYSTEM_VARIABLES_ADMIN`](privileges-provided.html#priv_system-variables-admin)
    privilege (or the deprecated [`SUPER`](privileges-provided.html#priv_super) privilege)
    normally required to set a global system variable.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 设置[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)需要[`ROLE_ADMIN`](privileges-provided.html#priv_role-admin)权限，除了通常需要设置全局系统变量的[`SYSTEM_VARIABLES_ADMIN`](privileges-provided.html#priv_system-variables-admin)权限（或已弃用的[`SUPER`](privileges-provided.html#priv_super)权限）。
- en: Mandatory roles, like explicitly granted roles, do not take effect until activated
    (see [Activating Roles](roles.html#roles-activating "Activating Roles")). At login
    time, role activation occurs for all granted roles if the [`activate_all_roles_on_login`](server-system-variables.html#sysvar_activate_all_roles_on_login)
    system variable is enabled, or for roles that are set as default roles otherwise.
    At runtime, [`SET ROLE`](set-role.html "15.7.1.11 SET ROLE Statement") activates
    roles.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 强制角色，就像显式授予的角色一样，在激活之前不会生效（请参阅[激活角色](roles.html#roles-activating "激活角色")）。在登录时，如果启用了[`activate_all_roles_on_login`](server-system-variables.html#sysvar_activate_all_roles_on_login)系统变量，则为所有授予的角色激活，否则为设置为默认角色的角色激活。在运行时，[`SET
    ROLE`](set-role.html "15.7.1.11 SET ROLE语句")激活角色。
- en: Roles named in the value of [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    cannot be revoked with [`REVOKE`](revoke.html "15.7.1.8 REVOKE Statement") or
    dropped with [`DROP ROLE`](drop-role.html "15.7.1.4 DROP ROLE Statement") or [`DROP
    USER`](drop-user.html "15.7.1.5 DROP USER Statement").
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)值中命名的角色不能通过[`REVOKE`](revoke.html
    "15.7.1.8 REVOKE语句")或[`DROP ROLE`](drop-role.html "15.7.1.4 DROP ROLE语句")或[`DROP
    USER`](drop-user.html "15.7.1.5 DROP USER语句")来撤销。
- en: 'To prevent sessions from being made system sessions by default, a role that
    has the [`SYSTEM_USER`](privileges-provided.html#priv_system-user) privilege cannot
    be listed in the value of the [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    system variable:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为防止会话默认成为系统会话，具有[`SYSTEM_USER`](privileges-provided.html#priv_system-user)权限的角色不能列在[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)系统变量的值中：
- en: If [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    is assigned a role at startup that has the [`SYSTEM_USER`](privileges-provided.html#priv_system-user)
    privilege, the server writes a message to the error log and exits.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在启动时将[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)分配给具有[`SYSTEM_USER`](privileges-provided.html#priv_system-user)权限的角色，则服务器会向错误日志写入消息并退出。
- en: If [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    is assigned a role at runtime that has the [`SYSTEM_USER`](privileges-provided.html#priv_system-user)
    privilege, an error occurs and the [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    value remains unchanged.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在运行时将[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)分配给具有[`SYSTEM_USER`](privileges-provided.html#priv_system-user)权限的角色，则会发生错误，并且[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)值保持不变。
- en: Even with this safeguard, it is better to avoid granting the [`SYSTEM_USER`](privileges-provided.html#priv_system-user)
    privilege through a role in order to guard against the possibility of privilege
    escalation.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 即使有此保障，最好避免通过角色授予[`SYSTEM_USER`](privileges-provided.html#priv_system-user)权限，以防止权限升级的可能性。
- en: If a role named in [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    is not present in the `mysql.user` system table, the role is not granted to users.
    When the server attempts role activation for a user, it does not treat the nonexistent
    role as mandatory and writes a warning to the error log. If the role is created
    later and thus becomes valid, [`FLUSH PRIVILEGES`](flush.html#flush-privileges)
    may be necessary to cause the server to treat it as mandatory.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在`mysql.user`系统表中不存在[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)中命名的角色，则不会将该角色授予用户。当服务器尝试为用户激活角色时，它不会将不存在的角色视为强制角色，并将警告写入错误日志。如果稍后创建了角色并因此变为有效，则可能需要使用[`FLUSH
    PRIVILEGES`](flush.html#flush-privileges)使服务器将其视为强制角色。
- en: '[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS Statement") displays
    mandatory roles according to the rules described in [Section 15.7.7.21, “SHOW
    GRANTS Statement”](show-grants.html "15.7.7.21 SHOW GRANTS Statement").'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS Statement") 根据[第 15.7.7.21
    节，“SHOW GRANTS Statement”](show-grants.html "15.7.7.21 SHOW GRANTS Statement")中描述的规则显示强制角色。'
- en: Checking Role Privileges
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查角色权限
- en: 'To verify the privileges assigned to an account, use [`SHOW GRANTS`](show-grants.html
    "15.7.7.21 SHOW GRANTS Statement"). For example:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证分配给账户的权限，请使用[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS Statement")。例如：
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'However, that shows each granted role without “expanding” it to the privileges
    the role represents. To show role privileges as well, add a `USING` clause naming
    the granted roles for which to display privileges:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这显示了每个授予的角色，而没有将其“展开”为角色代表的权限。要显示角色权限，还需添加一个`USING`子句，命名要显示权限的授予角色：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Verify each other type of user similarly:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地验证每种类型的用户：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS Statement") displays
    mandatory roles according to the rules described in [Section 15.7.7.21, “SHOW
    GRANTS Statement”](show-grants.html "15.7.7.21 SHOW GRANTS Statement").'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS Statement") 根据[第 15.7.7.21
    节，“SHOW GRANTS Statement”](show-grants.html "15.7.7.21 SHOW GRANTS Statement")中描述的规则显示强制角色。'
- en: Activating Roles
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 激活角色
- en: Roles granted to a user account can be active or inactive within account sessions.
    If a granted role is active within a session, its privileges apply; otherwise,
    they do not. To determine which roles are active within the current session, use
    the [`CURRENT_ROLE()`](information-functions.html#function_current-role) function.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 授予用户账户的角色可以在账户会话中处于活动或非活动状态。如果授予的角色在会话中处于活动状态，则其权限生效；否则，不生效。要确定当前会话中哪些角色处于活动状态，请使用[`CURRENT_ROLE()`](information-functions.html#function_current-role)函数。
- en: 'By default, granting a role to an account or naming it in the [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    system variable value does not automatically cause the role to become active within
    account sessions. For example, because thus far in the preceding discussion no
    `rw_user1` roles have been activated, if you connect to the server as `rw_user1`
    and invoke the [`CURRENT_ROLE()`](information-functions.html#function_current-role)
    function, the result is `NONE` (no active roles):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，将角色授予给一个账户或在[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)系统变量值中命名它不会自动导致角色在账户会话中变为活动状态。例如，因为在前面的讨论中到目前为止没有激活任何`rw_user1`角色，如果您以`rw_user1`身份连接到服务器并调用[`CURRENT_ROLE()`](information-functions.html#function_current-role)函数，结果是`NONE`（没有活动角色）：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To specify which roles should become active each time a user connects to the
    server and authenticates, use [`SET DEFAULT ROLE`](set-default-role.html "15.7.1.9 SET
    DEFAULT ROLE Statement"). To set the default to all assigned roles for each account
    created earlier, use this statement:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要指定每次用户连接到服务器并进行身份验证时应激活哪些角色，请使用[`SET DEFAULT ROLE`](set-default-role.html "15.7.1.9 SET
    DEFAULT ROLE Statement")。要将默认设置为早期创建的每个账户的所有分配角色，请使用此语句：
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now if you connect as `rw_user1`, the initial value of [`CURRENT_ROLE()`](information-functions.html#function_current-role)
    reflects the new default role assignments:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您以`rw_user1`身份连接，[`CURRENT_ROLE()`](information-functions.html#function_current-role)的初始值反映了新的默认角色分配：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: To cause all explicitly granted and mandatory roles to be automatically activated
    when users connect to the server, enable the [`activate_all_roles_on_login`](server-system-variables.html#sysvar_activate_all_roles_on_login)
    system variable. By default, automatic role activation is disabled.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要在用户连接到服务器时自动激活所有明确授予和强制性角色，请启用[`activate_all_roles_on_login`](server-system-variables.html#sysvar_activate_all_roles_on_login)系统变量。默认情况下，自动角色激活被禁用。
- en: 'Within a session, a user can execute [`SET ROLE`](set-role.html "15.7.1.11 SET
    ROLE Statement") to change the set of active roles. For example, for `rw_user1`:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个会话中，用户可以执行[`SET ROLE`](set-role.html "15.7.1.11 SET ROLE Statement")来改变活动角色集。例如，对于`rw_user1`：
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The first [`SET ROLE`](set-role.html "15.7.1.11 SET ROLE Statement") statement
    deactivates all roles. The second makes `rw_user1` effectively read only. The
    third restores the default roles.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个[`SET ROLE`](set-role.html "15.7.1.11 SET ROLE Statement")语句取消所有角色。第二个使`rw_user1`有效地只读。第三个恢复默认角色。
- en: 'The effective user for stored program and view objects is subject to the `DEFINER`
    and `SQL SECURITY` attributes, which determine whether execution occurs in invoker
    or definer context (see [Section 27.6, “Stored Object Access Control”](stored-objects-security.html
    "27.6 Stored Object Access Control")):'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 存储程序和视图对象的有效用户受`DEFINER`和`SQL SECURITY`属性的影响，这些属性确定执行是在调用者还是定义者上下文中发生（参见[第27.6节，“存储对象访问控制”](stored-objects-security.html
    "27.6 Stored Object Access Control")）：
- en: Stored program and view objects that execute in invoker context execute with
    the roles that are active within the current session.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在调用者上下文中执行的存储程序和视图对象将使用当前会话中处于活动状态的角色执行。
- en: Stored program and view objects that execute in definer context execute with
    the default roles of the user named in their `DEFINER` attribute. If [`activate_all_roles_on_login`](server-system-variables.html#sysvar_activate_all_roles_on_login)
    is enabled, such objects execute with all roles granted to the `DEFINER` user,
    including mandatory roles. For stored programs, if execution should occur with
    roles different from the default, the program body can execute [`SET ROLE`](set-role.html
    "15.7.1.11 SET ROLE Statement") to activate the required roles. This must be done
    with caution since the privileges assigned to roles can be changed.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在定义者上下文中执行的存储程序和视图对象将使用其`DEFINER`属性中命名的用户的默认角色执行。如果启用了[`activate_all_roles_on_login`](server-system-variables.html#sysvar_activate_all_roles_on_login)，这样的对象将使用授予`DEFINER`用户的所有角色，包括强制性角色。对于存储程序，如果执行应该使用与默认不同的角色，则程序体可以执行[`SET
    ROLE`](set-role.html "15.7.1.11 SET ROLE Statement")来激活所需的角色。这必须谨慎进行，因为分配给角色的权限可以更改。
- en: Revoking Roles or Role Privileges
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 撤销角色或角色权限
- en: 'Just as roles can be granted to an account, they can be revoked from an account:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 就像角色可以授予给一个账户一样，它们也可以从一个账户中撤销：
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Roles named in the [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    system variable value cannot be revoked.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)系统变量值中命名的角色不能被撤销。
- en: '[`REVOKE`](revoke.html "15.7.1.8 REVOKE Statement") can also be applied to
    a role to modify the privileges granted to it. This affects not only the role
    itself, but any account granted that role. Suppose that you want to temporarily
    make all application users read only. To do this, use [`REVOKE`](revoke.html "15.7.1.8 REVOKE
    Statement") to revoke the modification privileges from the `app_write` role:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[`REVOKE`](revoke.html "15.7.1.8 REVOKE Statement")也可以应用于角色以修改授予其的权限。这不仅影响角色本身，还影响分配了该角色的任何帐户。假设您想暂时使所有应用程序用户只读。为此，请使用[`REVOKE`](revoke.html
    "15.7.1.8 REVOKE Statement")来从`app_write`角色中撤销修改权限：'
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'As it happens, that leaves the role with no privileges at all, as can be seen
    using [`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS Statement") (which
    demonstrates that this statement can be used with roles, not just users):'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 正如所发生的那样，这将使角色完全没有任何权限，可以使用[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW
    GRANTS Statement")来查看（这表明此语句可以与角色一起使用，而不仅仅是用户）：
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Because revoking privileges from a role affects the privileges for any user
    who is assigned the modified role, `rw_user1` now has no table modification privileges
    ([`INSERT`](privileges-provided.html#priv_insert), [`UPDATE`](privileges-provided.html#priv_update),
    and [`DELETE`](privileges-provided.html#priv_delete) are no longer present):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 因为从角色中撤销权限会影响分配了修改后角色的任何用户的权限，`rw_user1`现在没有表修改权限（[`INSERT`](privileges-provided.html#priv_insert)、[`UPDATE`](privileges-provided.html#priv_update)和[`DELETE`](privileges-provided.html#priv_delete)不再存在）：
- en: '[PRE16]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In effect, the `rw_user1` read/write user has become a read-only user. This
    also occurs for any other accounts that are granted the `app_write` role, illustrating
    how use of roles makes it unnecessary to modify privileges for individual accounts.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，`rw_user1`读/写用户已成为只读用户。对于被授予`app_write`角色的任何其他帐户也是如此，说明使用角色使得不必为单个帐户修改权限。
- en: 'To restore modification privileges to the role, simply re-grant them:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要恢复角色的修改权限，只需重新授予它们：
- en: '[PRE17]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now `rw_user1` again has modification privileges, as do any other accounts granted
    the `app_write` role.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`rw_user1`再次具有修改权限，任何其他被授予`app_write`角色的帐户也是如此。
- en: Dropping Roles
  id: totrans-92
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除角色
- en: 'To drop roles, use [`DROP ROLE`](drop-role.html "15.7.1.4 DROP ROLE Statement"):'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除角色，请使用[`DROP ROLE`](drop-role.html "15.7.1.4 DROP ROLE Statement")：
- en: '[PRE18]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Dropping a role revokes it from every account to which it was granted.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 删除一个角色会从授予它的每个帐户中撤销该角色。
- en: Roles named in the [`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)
    system variable value cannot be dropped.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`mandatory_roles`](server-system-variables.html#sysvar_mandatory_roles)系统变量值中命名的角色不能被删除。
- en: User and Role Interchangeability
  id: totrans-97
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 用户和角色的互换性
- en: As has been hinted at earlier for [`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW
    GRANTS Statement"), which displays grants for user accounts or roles, accounts
    and roles can be used interchangeably.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 正如早些时候暗示的那样，对于[`SHOW GRANTS`](show-grants.html "15.7.7.21 SHOW GRANTS Statement")，它显示用户帐户或角色的授权，帐户和角色可以互换使用。
- en: One difference between roles and users is that [`CREATE ROLE`](create-role.html
    "15.7.1.2 CREATE ROLE Statement") creates an authorization identifier that is
    locked by default, whereas [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER
    Statement") creates an authorization identifier that is unlocked by default. You
    should keep in mind that this distinction is not immutable; a user with appropriate
    privileges can lock or unlock roles or (other) users after they have been created.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 角色和用户之间的一个区别是，[`CREATE ROLE`](create-role.html "15.7.1.2 CREATE ROLE Statement")默认创建一个被锁定的授权标识符，而[`CREATE
    USER`](create-user.html "15.7.1.3 CREATE USER Statement")默认创建一个未锁定的授权标识符。您应该记住这个区别不是不可改变的；具有适当权限的用户可以在创建后锁定或解锁角色或（其他）用户。
- en: If a database administrator has a preference that a specific authorization identifier
    must be a role, a name scheme can be used to communicate this intention. For example,
    you could use a `r_` prefix for all authorization identifiers that you intend
    to be roles and nothing else.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据库管理员有一个偏好，即特定的授权标识符必须是一个角色，那么可以使用命名方案来传达这一意图。例如，您可以为所有您打算作为角色而不是其他内容的授权标识符使用`r_`前缀。
- en: 'Another difference between roles and users lies in the privileges available
    for administering them:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 角色和用户之间的另一个区别在于用于管理它们的权限的可用性：
- en: The [`CREATE ROLE`](privileges-provided.html#priv_create-role) and [`DROP ROLE`](privileges-provided.html#priv_drop-role)
    privileges enable only use of the [`CREATE ROLE`](create-role.html "15.7.1.2 CREATE
    ROLE Statement") and [`DROP ROLE`](drop-role.html "15.7.1.4 DROP ROLE Statement")
    statements, respectively.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE ROLE`](privileges-provided.html#priv_create-role) 和 [`DROP ROLE`](privileges-provided.html#priv_drop-role)
    权限仅允许使用 [`CREATE ROLE`](create-role.html "15.7.1.2 CREATE ROLE Statement") 和 [`DROP
    ROLE`](drop-role.html "15.7.1.4 DROP ROLE Statement") 语句。'
- en: The [`CREATE USER`](privileges-provided.html#priv_create-user) privilege enables
    use of the [`ALTER USER`](alter-user.html "15.7.1.1 ALTER USER Statement"), [`CREATE
    ROLE`](create-role.html "15.7.1.2 CREATE ROLE Statement"), [`CREATE USER`](create-user.html
    "15.7.1.3 CREATE USER Statement"), [`DROP ROLE`](drop-role.html "15.7.1.4 DROP
    ROLE Statement"), [`DROP USER`](drop-user.html "15.7.1.5 DROP USER Statement"),
    [`RENAME USER`](rename-user.html "15.7.1.7 RENAME USER Statement"), and [`REVOKE
    ALL PRIVILEGES`](revoke.html "15.7.1.8 REVOKE Statement") statements.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CREATE USER`](privileges-provided.html#priv_create-user) 权限允许使用 [`ALTER USER`](alter-user.html
    "15.7.1.1 ALTER USER Statement")、[`CREATE ROLE`](create-role.html "15.7.1.2 CREATE
    ROLE Statement")、[`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")、[`DROP
    ROLE`](drop-role.html "15.7.1.4 DROP ROLE Statement")、[`DROP USER`](drop-user.html
    "15.7.1.5 DROP USER Statement")、[`RENAME USER`](rename-user.html "15.7.1.7 RENAME
    USER Statement") 和 [`REVOKE ALL PRIVILEGES`](revoke.html "15.7.1.8 REVOKE Statement")
    语句。'
- en: Thus, the [`CREATE ROLE`](privileges-provided.html#priv_create-role) and [`DROP
    ROLE`](privileges-provided.html#priv_drop-role) privileges are not as powerful
    as [`CREATE USER`](privileges-provided.html#priv_create-user) and may be granted
    to users who should only be permitted to create and drop roles, and not perform
    more general account manipulation.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，[`CREATE ROLE`](privileges-provided.html#priv_create-role) 和 [`DROP ROLE`](privileges-provided.html#priv_drop-role)
    权限不如 [`CREATE USER`](privileges-provided.html#priv_create-user) 强大，可能授予那些只允许创建和删除角色而不执行更一般帐户操作的用户。
- en: With regard to privileges and interchangeability of users and roles, you can
    treat a user account like a role and grant that account to another user or a role.
    The effect is to grant the account's privileges and roles to the other user or
    role.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 关于权限和用户与角色的可互换性，您可以将用户帐户视为角色并将该帐户授予另一个用户或角色。效果是将该帐户的权限和角色授予另一个用户或角色。
- en: 'This set of statements demonstrates that you can grant a user to a user, a
    role to a user, a user to a role, or a role to a role:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这组语句表明您可以将用户授予用户，将角色授予用户，将用户授予角色，或将角色授予角色：
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The result in each case is to grant to the grantee object the privileges associated
    with the granted object. After executing those statements, each of `u2` and `r2`
    have been granted privileges from a user (`u1`) and a role (`r1`):'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 每种情况的结果是将授予对象的权限与授予对象相关联的权限授予给受让对象。执行这些语句后，`u2` 和 `r2` 分别从用户 (`u1`) 和角色 (`r1`)
    获得了权限：
- en: '[PRE20]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The preceding example is illustrative only, but interchangeability of user
    accounts and roles has practical application, such as in the following situation:
    Suppose that a legacy application development project began before the advent
    of roles in MySQL, so all user accounts associated with the project are granted
    privileges directly (rather than granted privileges by virtue of being granted
    roles). One of these accounts is a developer account that was originally granted
    privileges as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的例子仅供参考，但用户帐户和角色的可互换性具有实际应用，例如在以下情况下：假设一个传统的应用开发项目在 MySQL 的角色出现之前就开始了，因此与该项目相关的所有用户帐户都直接被授予权限（而不是通过授予角色而获得权限）。其中一个帐户是最初被授予权限的开发人员帐户如下：
- en: '[PRE21]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If this developer leaves the project, it becomes necessary to assign the privileges
    to another user, or perhaps multiple users if development activities have expanded.
    Here are some ways to deal with the issue:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果该开发人员离开项目，则有必要将权限分配给另一个用户，或者如果开发活动已扩展，则可能需要分配给多个用户。以下是处理此问题的一些方法：
- en: 'Without using roles: Change the account password so the original developer
    cannot use it, and have a new developer use the account instead:'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不使用角色：更改帐户密码，以防止原始开发人员使用它，并让新开发人员使用该帐户：
- en: '[PRE22]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Using roles: Lock the account to prevent anyone from using it to connect to
    the server:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用角色：锁定帐户以防止任何人使用它连接到服务器：
- en: '[PRE23]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Then treat the account as a role. For each developer new to the project, create
    a new account and grant to it the original developer account:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后将该帐户视为一个角色。对于项目中的每个新开发人员，创建一个新帐户并授予其原始开发人员帐户：
- en: '[PRE24]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The effect is to assign the original developer account privileges to the new
    account.
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该效果是将原始开发者账户的权限分配给新账户。
