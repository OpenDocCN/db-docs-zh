- en: 13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13.1.3 固定点类型（精确值）- DECIMAL, NUMERIC
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/fixed-point-types.html](https://dev.mysql.com/doc/refman/8.0/en/fixed-point-types.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/fixed-point-types.html](https://dev.mysql.com/doc/refman/8.0/en/fixed-point-types.html)
- en: The `DECIMAL` and `NUMERIC` types store exact numeric data values. These types
    are used when it is important to preserve exact precision, for example with monetary
    data. In MySQL, `NUMERIC` is implemented as `DECIMAL`, so the following remarks
    about `DECIMAL` apply equally to `NUMERIC`.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '`DECIMAL`和`NUMERIC`类型存储精确的数值数据。当需要保留精确精度时，例如在货币数据中，使用这些类型。在 MySQL 中，`NUMERIC`被实现为`DECIMAL`，因此关于`DECIMAL`的以下说明同样适用于`NUMERIC`。'
- en: MySQL stores `DECIMAL` values in binary format. See [Section 14.24, “Precision
    Math”](precision-math.html "14.24 Precision Math").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL以二进制格式存储`DECIMAL`值。请参阅[第14.24节，“精度数学”](precision-math.html "14.24 精度数学")。
- en: 'In a `DECIMAL` column declaration, the precision and scale can be (and usually
    is) specified. For example:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在`DECIMAL`列声明中，通常会指定精度和标度。例如：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this example, `5` is the precision and `2` is the scale. The precision represents
    the number of significant digits that are stored for values, and the scale represents
    the number of digits that can be stored following the decimal point.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，`5`是精度，`2`是标度。精度表示存储值的有效数字的数量，而标度表示小数点后可以存储的数字的数量。
- en: Standard SQL requires that `DECIMAL(5,2)` be able to store any value with five
    digits and two decimals, so values that can be stored in the `salary` column range
    from `-999.99` to `999.99`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 标准 SQL 要求`DECIMAL(5,2)`能够存储任何具有五位数字和两位小数的值，因此可以存储在`salary`列中的值范围从`-999.99`到`999.99`。
- en: In standard SQL, the syntax `DECIMAL(*`M`*)` is equivalent to `DECIMAL(*`M`*,0)`.
    Similarly, the syntax `DECIMAL` is equivalent to `DECIMAL(*`M`*,0)`, where the
    implementation is permitted to decide the value of *`M`*. MySQL supports both
    of these variant forms of `DECIMAL` syntax. The default value of *`M`* is 10.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在标准 SQL 中，语法`DECIMAL(*`M`*)`等同于`DECIMAL(*`M`*,0)`。类似地，语法`DECIMAL`等同于`DECIMAL(*`M`*,0)`，其中实现允许决定*`M`*的值。MySQL支持`DECIMAL`语法的这两种变体形式。*`M`*的默认值为10。
- en: If the scale is 0, `DECIMAL` values contain no decimal point or fractional part.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果标度为0，则`DECIMAL`值不包含小数点或小数部分。
- en: The maximum number of digits for `DECIMAL` is 65, but the actual range for a
    given `DECIMAL` column can be constrained by the precision or scale for a given
    column. When such a column is assigned a value with more digits following the
    decimal point than are permitted by the specified scale, the value is converted
    to that scale. (The precise behavior is operating system-specific, but generally
    the effect is truncation to the permissible number of digits.)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`DECIMAL`的最大数字位数为65，但给定`DECIMAL`列的实际范围可以受到给定列的精度或标度的限制。当为这样的列分配一个具有比指定标度允许的更多小数位数的值时，该值将被转换为该标度。（具体行为取决于操作系统，但通常效果是截断为允许的数字位数。）'
