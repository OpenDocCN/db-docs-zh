- en: 25.3.5 NDB Cluster Example with Tables and Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 25.3.5 带有表和数据的 NDB Cluster 示例
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-install-example-data.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-install-example-data.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-install-example-data.html](https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster-install-example-data.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The information in this section applies to NDB Cluster running on both Unix
    and Windows platforms.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容适用于在 Unix 和 Windows 平台上运行的 NDB Cluster。
- en: 'Working with database tables and data in NDB Cluster is not much different
    from doing so in standard MySQL. There are two key points to keep in mind:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 与在标准 MySQL 中操作数据库表和数据并没有太大区别。有两个关键点需要记住：
- en: 'For a table to be replicated in the cluster, it must use the [`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine. To specify this, use the `ENGINE=NDBCLUSTER`
    or `ENGINE=NDB` option when creating the table:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在集群中复制表，必须使用[`NDBCLUSTER`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0")存储引擎。在创建表时，使用`ENGINE=NDBCLUSTER`或`ENGINE=NDB`选项来指定：
- en: '[PRE0]'
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Alternatively, for an existing table that uses a different storage engine,
    use [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") to change
    the table to use [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0"):'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，对于使用不同存储引擎的现有表，可以使用[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")将表更改为使用[`NDBCLUSTER`](mysql-cluster.html
    "第 25 章 MySQL NDB Cluster 8.0")：
- en: '[PRE1]'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Every [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster 8.0")
    table has a primary key. If no primary key is defined by the user when a table
    is created, the [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0") storage engine automatically generates a hidden one. Such a key takes up
    space just as does any other table index. (It is not uncommon to encounter problems
    due to insufficient memory for accommodating these automatically created indexes.)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个[`NDBCLUSTER`](mysql-cluster.html "第 25 章 MySQL NDB Cluster 8.0")表都有一个主键。如果用户在创建表时没有定义主键，[`NDBCLUSTER`](mysql-cluster.html
    "第 25 章 MySQL NDB Cluster 8.0")存储引擎会自动生成一个隐藏的主键。这样的主键占用空间，就像任何其他表索引一样。（由于内存不足以容纳这些自动生成的索引，遇到问题并不罕见。）
- en: 'If you are importing tables from an existing database using the output of [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program"), you can open the SQL script in
    a text editor and add the `ENGINE` option to any table creation statements, or
    replace any existing `ENGINE` options. Suppose that you have the `world` sample
    database on another MySQL server that does not support NDB Cluster, and you want
    to export the `City` table:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")的输出从现有数据库导入表，您可以在文本编辑器中打开
    SQL 脚本，并为任何表创建语句添加`ENGINE`选项，或替换任何现有的`ENGINE`选项。假设您在另一个不支持 NDB Cluster 的 MySQL
    服务器上有`world`示例数据库，并且想要导出`City`表：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The resulting `city_table.sql` file contains this table creation statement
    (and the [`INSERT`](insert.html "15.2.7 INSERT Statement") statements necessary
    to import the table data):'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '生成的`city_table.sql`文件包含此表创建语句（以及导入表数据所需的[`INSERT`](insert.html "15.2.7 INSERT
    Statement")语句）:'
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You need to make sure that MySQL uses the [`NDBCLUSTER`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") storage engine for this table. There are two
    ways that this can be accomplished. One of these is to modify the table definition
    *before* importing it into the Cluster database. Using the `City` table as an
    example, modify the `ENGINE` option of the definition as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要确保 MySQL 为这个表使用[`NDBCLUSTER`](mysql-cluster.html "第 25 章 MySQL NDB Cluster
    8.0")存储引擎。有两种方法可以实现这一点。其中一种是在将表导入到集群数据库*之前*修改表定义。以`City`表为例，修改定义的`ENGINE`选项如下：
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This must be done for the definition of each table that is to be part of the
    clustered database. The easiest way to accomplish this is to do a search-and-replace
    on the file that contains the definitions and replace all instances of `TYPE=*`engine_name`*`
    or `ENGINE=*`engine_name`*` with `ENGINE=NDBCLUSTER`. If you do not want to modify
    the file, you can use the unmodified file to create the tables, and then use [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") to change their storage
    engine. The particulars are given later in this section.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 必须为要成为集群数据库一部分的每个表的定义执行此操作。实现这一点的最简单方法是在包含定义的文件上执行搜索和替换，并将所有`TYPE=*`engine_name`*`或`ENGINE=*`engine_name`*`的实例替换为`ENGINE=NDBCLUSTER`。如果您不想修改文件，可以使用未修改的文件创建表，然后使用[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")来更改它们的存储引擎。具体细节稍后在本节中给出。
- en: 'Assuming that you have already created a database named `world` on the SQL
    node of the cluster, you can then use the [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") command-line client to read `city_table.sql`,
    and create and populate the corresponding table in the usual manner:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已经在集群的 SQL 节点上创建了名为`world`的数据库，然后您可以使用[**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client")命令行客户端读取`city_table.sql`，并按照通常的方式创建和填充相应的表：
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: It is very important to keep in mind that the preceding command must be executed
    on the host where the SQL node is running (in this case, on the machine with the
    IP address `198.51.100.20`).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 非常重要的一点是要记住，前述命令必须在运行 SQL 节点的主机上执行（在本例中，在具有 IP 地址`198.51.100.20`的机器上）。
- en: 'To create a copy of the entire `world` database on the SQL node, use [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program") on the noncluster server to export
    the database to a file named `world.sql` (for example, in the `/tmp` directory).
    Then modify the table definitions as just described and import the file into the
    SQL node of the cluster like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 SQL 节点上创建整个`world`数据库的副本，请在非集群服务器上使用[**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program")将数据库导出到名为`world.sql`的文件中（例如，在`/tmp`目录中）。然后按照刚才描述的方式修改表定义，并将文件导入到集群的
    SQL 节点中：
- en: '[PRE6]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If you save the file to a different location, adjust the preceding instructions
    accordingly.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将文件保存到不同位置，请相应调整前述说明。
- en: 'Running [`SELECT`](select.html "15.2.13 SELECT Statement") queries on the SQL
    node is no different from running them on any other instance of a MySQL server.
    To run queries from the command line, you first need to log in to the MySQL Monitor
    in the usual way (specify the `root` password at the `Enter password:` prompt):'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SQL 节点上运行[`SELECT`](select.html "15.2.13 SELECT Statement")查询与在任何其他 MySQL
    服务器实例上运行它们没有任何区别。要从命令行运行查询，您首先需要以通常的方式登录到 MySQL Monitor（在`Enter password:`提示处指定`root`密码）：
- en: '[PRE7]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We simply use the MySQL server's `root` account and assume that you have followed
    the standard security precautions for installing a MySQL server, including setting
    a strong `root` password. For more information, see [Section 2.9.4, “Securing
    the Initial MySQL Account”](default-privileges.html "2.9.4 Securing the Initial
    MySQL Account").
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只使用 MySQL 服务器的`root`帐户，并假设您已经遵循了安装 MySQL 服务器的标准安全预防措施，包括设置强大的`root`密码。有关更多信息，请参见[Section 2.9.4,
    “Securing the Initial MySQL Account”](default-privileges.html "2.9.4 Securing
    the Initial MySQL Account")。
- en: It is worth taking into account that NDB Cluster nodes do *not* make use of
    the MySQL privilege system when accessing one another. Setting or changing MySQL
    user accounts (including the `root` account) effects only applications that access
    the SQL node, not interaction between nodes. See [Section 25.6.20.2, “NDB Cluster
    and MySQL Privileges”](mysql-cluster-security-mysql-privileges.html "25.6.20.2 NDB
    Cluster and MySQL Privileges"), for more information.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，NDB Cluster 节点在相互访问时*不*使用 MySQL 权限系统。设置或更改 MySQL 用户帐户（包括`root`帐户）仅影响访问
    SQL 节点的应用程序，而不影响节点之间的交互。有关更多信息，请参见[Section 25.6.20.2, “NDB Cluster and MySQL Privileges”](mysql-cluster-security-mysql-privileges.html
    "25.6.20.2 NDB Cluster and MySQL Privileges")。
- en: 'If you did not modify the `ENGINE` clauses in the table definitions prior to
    importing the SQL script, you should run the following statements at this point:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在导入 SQL 脚本之前未修改表定义中的`ENGINE`子句，则应在此时运行以下语句：
- en: '[PRE8]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Selecting a database and running a **SELECT** query against a table in that
    database is also accomplished in the usual manner, as is exiting the MySQL Monitor:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 选择数据库并针对该数据库中的表运行**SELECT**查询也是按照通常的方式完成的，退出 MySQL Monitor 也是一样：
- en: '[PRE9]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Applications that use MySQL can employ standard APIs to access [`NDB`](mysql-cluster.html
    "Chapter 25 MySQL NDB Cluster 8.0") tables. It is important to remember that your
    application must access the SQL node, and not the management or data nodes. This
    brief example shows how we might execute the [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement just shown by using the PHP 5.X `mysqli` extension running
    on a Web server elsewhere on the network:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用MySQL的应用程序可以使用标准API来访问[`NDB`](mysql-cluster.html "Chapter 25 MySQL NDB Cluster
    8.0")表。重要的是要记住，您的应用程序必须访问SQL节点，而不是管理或数据节点。这个简短的示例展示了我们如何通过在网络上的其他地方运行的PHP 5.X
    `mysqli`扩展来执行刚刚显示的[`SELECT`](select.html "15.2.13 SELECT Statement")语句：
- en: '[PRE10]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We assume that the process running on the Web server can reach the IP address
    of the SQL node.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设运行在Web服务器上的进程可以访问SQL节点的IP地址。
- en: In a similar fashion, you can use the MySQL C API, Perl-DBI, Python-mysql, or
    MySQL Connectors to perform the tasks of data definition and manipulation just
    as you would normally with MySQL.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以类似的方式，您可以使用MySQL C API、Perl-DBI、Python-mysql或MySQL Connectors来执行数据定义和操作任务，就像您通常使用MySQL一样。
