- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-rwlock-instances-table.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-rwlock-instances-table.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-rwlock-instances-table.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-rwlock-instances-table.html)
- en: 29.12.3.4 The rwlock_instances Table
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 29.12.3.4 `rwlock_instances`表
- en: The [`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table") table lists all the [rwlock](glossary.html#glos_rw_lock
    "rw-lock") (read write lock) instances seen by the Performance Schema while the
    server executes. An `rwlock` is a synchronization mechanism used in the code to
    enforce that threads at a given time can have access to some common resource following
    certain rules. The resource is said to be “protected” by the `rwlock`. The access
    is either shared (many threads can have a read lock at the same time), exclusive
    (only one thread can have a write lock at a given time), or shared-exclusive (a
    thread can have a write lock while permitting inconsistent reads by other threads).
    Shared-exclusive access is otherwise known as an `sxlock` and optimizes concurrency
    and improves scalability for read-write workloads.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table")表列出了在服务器执行时性能模式看到的所有[rwlock](glossary.html#glos_rw_lock
    "rw-lock")（读写锁）实例。`rwlock`是代码中使用的同步机制，用于强制在给定时间内的线程可以按照某些规则访问一些共享资源。资源被称为由`rwlock`“保护”。访问可以是共享的（许多线程可以同时拥有读锁），独占的（一次只有一个线程可以拥有写锁），或共享-独占的（一个线程可以拥有写锁，同时允许其他线程进行不一致的读取）。共享-独占访问又称为`sxlock`，可优化并发性并改善读写工作负载的可伸缩性。'
- en: Depending on how many threads are requesting a lock, and the nature of the locks
    requested, access can be either granted in shared mode, exclusive mode, shared-exclusive
    mode or not granted at all, waiting for other threads to finish first.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 根据请求锁的线程数量以及请求的锁的性质，访问可以以共享模式、独占模式、共享-独占模式或根本不授予访问，等待其他线程先完成。
- en: 'The [`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table") table has these columns:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table")表具有以下列：'
- en: '`NAME`'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NAME`'
- en: The instrument name associated with the lock.
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与锁相关联的工具名称。
- en: '`OBJECT_INSTANCE_BEGIN`'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OBJECT_INSTANCE_BEGIN`'
- en: The address in memory of the instrumented lock.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 工具锁在内存中的地址。
- en: '`WRITE_LOCKED_BY_THREAD_ID`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WRITE_LOCKED_BY_THREAD_ID`'
- en: When a thread currently has an `rwlock` locked in exclusive (write) mode, `WRITE_LOCKED_BY_THREAD_ID`
    is the `THREAD_ID` of the locking thread, otherwise it is `NULL`.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当一个线程当前以独占（写）模式锁定一个`rwlock`时，`WRITE_LOCKED_BY_THREAD_ID`是锁定线程的`THREAD_ID`，否则为`NULL`。
- en: '`READ_LOCKED_BY_COUNT`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`READ_LOCKED_BY_COUNT`'
- en: When a thread currently has an `rwlock` locked in shared (read) mode, `READ_LOCKED_BY_COUNT`
    is incremented by 1\. This is a counter only, so it cannot be used directly to
    find which thread holds a read lock, but it can be used to see whether there is
    a read contention on an `rwlock`, and see how many readers are currently active.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当一个线程当前以共享（读）模式锁定一个`rwlock`时，`READ_LOCKED_BY_COUNT`会增加1。这只是一个计数器，因此不能直接用来找出哪个线程持有读锁，但可以用来查看`rwlock`上是否存在读争用，以及当前有多少读者活跃。
- en: 'The [`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table") table has these indexes:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table")表具有以下索引：'
- en: Primary key on (`OBJECT_INSTANCE_BEGIN`)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主键为(`OBJECT_INSTANCE_BEGIN`)
- en: Index on (`NAME`)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引为(`NAME`)
- en: Index on (`WRITE_LOCKED_BY_THREAD_ID`)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引为(`WRITE_LOCKED_BY_THREAD_ID`)
- en: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")
    is not permitted for the [`rwlock_instances`](performance-schema-rwlock-instances-table.html
    "29.12.3.4 The rwlock_instances Table") table.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TRUNCATE TABLE`](truncate-table.html "15.1.37 TRUNCATE TABLE Statement")不允许用于[`rwlock_instances`](performance-schema-rwlock-instances-table.html
    "29.12.3.4 The rwlock_instances Table")表。'
- en: 'By performing queries on both of the following tables, a monitoring application
    or a DBA may detect some bottlenecks or deadlocks between threads that involve
    locks:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对以下两个表执行查询，监控应用程序或DBA可以检测到涉及锁的线程之间的一些瓶颈或死锁：
- en: '[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 The events_waits_current Table"), to see what `rwlock` a thread is
    waiting for'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`events_waits_current`](performance-schema-events-waits-current-table.html
    "29.12.4.1 The events_waits_current Table")，查看线程正在等待哪个`rwlock`'
- en: '[`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table"), to see which other thread currently owns an `rwlock`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table")，查看当前拥有`rwlock`的其他线程。'
- en: 'There is a limitation: The [`rwlock_instances`](performance-schema-rwlock-instances-table.html
    "29.12.3.4 The rwlock_instances Table") can be used only to identify the thread
    holding a write lock, but not the threads holding a read lock.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一个限制：[`rwlock_instances`](performance-schema-rwlock-instances-table.html "29.12.3.4 The
    rwlock_instances Table") 只能用于识别持有写锁的线程，而不能识别持有读锁的线程。
