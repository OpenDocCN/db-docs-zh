- en: 10.2.7 Other Optimization Tips
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10.2.7 其他优化提示
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-optimization-tips.html](https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-optimization-tips.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-optimization-tips.html](https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-optimization-tips.html)
- en: 'This section lists a number of miscellaneous tips for improving query processing
    speed:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节列出了一些改善查询处理速度的杂项提示：
- en: If your application makes several database requests to perform related updates,
    combining the statements into a stored routine can help performance. Similarly,
    if your application computes a single result based on several column values or
    large volumes of data, combining the computation into a loadable function can
    help performance. The resulting fast database operations are then available to
    be reused by other queries, applications, and even code written in different programming
    languages. See [Section 27.2, “Using Stored Routines”](stored-routines.html "27.2 Using
    Stored Routines") and [Adding Functions to MySQL](/doc/extending-mysql/8.0/en/adding-functions.html)
    for more information.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的应用程序进行了几个数据库请求以执行相关更新，将语句组合成存储过程可以提高性能。同样，如果您的应用程序基于几个列值或大量数据计算单个结果，将计算组合成可加载的函数可以提高性能。然后，产生的快速数据库操作可以被其他查询、应用程序甚至用不同编程语言编写的代码重用。有关更多信息，请参阅
    [第27.2节“使用存储过程”](stored-routines.html "27.2 使用存储过程") 和 [向 MySQL 添加函数](/doc/extending-mysql/8.0/en/adding-functions.html)。
- en: To fix any compression issues that occur with `ARCHIVE` tables, use [`OPTIMIZE
    TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE TABLE Statement"). See [Section 18.5,
    “The ARCHIVE Storage Engine”](archive-storage-engine.html "18.5 The ARCHIVE Storage
    Engine").
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要解决`ARCHIVE`表出现的任何压缩问题，请使用[`OPTIMIZE TABLE`](optimize-table.html "15.7.3.4 OPTIMIZE
    TABLE 语句")。请参阅 [第18.5节“ARCHIVE 存储引擎”](archive-storage-engine.html "18.5 ARCHIVE
    存储引擎")。
- en: If possible, classify reports as “live” or as “statistical”, where data needed
    for statistical reports is created only from summary tables that are generated
    periodically from the live data.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能的话，将报告分类为“实时”或“统计”，需要用于统计报告的数据仅从定期从实时数据生成的摘要表中创建。
- en: If you have data that does not conform well to a rows-and-columns table structure,
    you can pack and store data into a [`BLOB`](blob.html "13.3.4 The BLOB and TEXT
    Types") column. In this case, you must provide code in your application to pack
    and unpack information, but this might save I/O operations to read and write the
    sets of related values.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的数据不太符合行和列的表结构，您可以将数据打包存储到一个[`BLOB`](blob.html "13.3.4 BLOB 和 TEXT 类型")列中。在这种情况下，您必须在应用程序中提供代码来打包和解包信息，但这可能会节省读取和写入相关值集的
    I/O 操作。
- en: With Web servers, store images and other binary assets as files, with the path
    name stored in the database rather than the file itself. Most Web servers are
    better at caching files than database contents, so using files is generally faster.
    (Although you must handle backups and storage issues yourself in this case.)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Web 服务器，将图像和其他二进制资产存储为文件，并将路径名存储在数据库中，而不是存储文件本身。大多数 Web 服务器更擅长缓存文件而不是数据库内容，因此使用文件通常更快。（尽管在这种情况下，您必须自行处理备份和存储问题。）
- en: If you need really high speed, look at the low-level MySQL interfaces. For example,
    by accessing the MySQL [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB
    Storage Engine") or [`MyISAM`](myisam-storage-engine.html "18.2 The MyISAM Storage
    Engine") storage engine directly, you could get a substantial speed increase compared
    to using the SQL interface.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果需要真正的高速度，请查看低级别的 MySQL 接口。例如，通过直接访问 MySQL [`InnoDB`](innodb-storage-engine.html
    "第17章 InnoDB 存储引擎") 或 [`MyISAM`](myisam-storage-engine.html "18.2 MyISAM 存储引擎")
    存储引擎，与使用 SQL 接口相比，您可能会获得显着的速度提升。
- en: Similarly, for databases using the [`NDBCLUSTER`](mysql-cluster.html "Chapter 25 MySQL
    NDB Cluster 8.0") storage engine, you may wish to investigate possible use of
    the NDB API (see [MySQL NDB Cluster API Developer Guide](/doc/ndbapi/en/)).
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同样地，对于使用 [`NDBCLUSTER`](mysql-cluster.html "第25章 MySQL NDB Cluster 8.0") 存储引擎的数据库，您可能希望调查可能使用
    NDB API 的情况（请参阅 [MySQL NDB Cluster API 开发人员指南](/doc/ndbapi/en/)）。
- en: Replication can provide a performance benefit for some operations. You can distribute
    client retrievals among replicas to split up the load. To avoid slowing down the
    source while making backups, you can make backups using a replica. See [Chapter 19,
    *Replication*](replication.html "Chapter 19 Replication").
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制可以为某些操作提供性能优势。您可以将客户端检索分布在副本之间以分担负载。为了在备份时不减慢源的速度，您可以使用副本进行备份。请参阅[第19章，*复制*](replication.html
    "第19章 复制")。
