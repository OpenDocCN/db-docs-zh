- en: 18.1 Setting the Storage Engine
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 18.1 设置存储引擎
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/storage-engine-setting.html](https://dev.mysql.com/doc/refman/8.0/en/storage-engine-setting.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/storage-engine-setting.html](https://dev.mysql.com/doc/refman/8.0/en/storage-engine-setting.html)
- en: 'When you create a new table, you can specify which storage engine to use by
    adding an `ENGINE` table option to the [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") statement:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当您创建新表时，可以通过在[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")语句中添加`ENGINE`表选项来指定要使用的存储引擎：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When you omit the `ENGINE` option, the default storage engine is used. The default
    engine is [`InnoDB`](innodb-storage-engine.html "Chapter 17 The InnoDB Storage
    Engine") in MySQL 8.0\. You can specify the default engine by using the [`--default-storage-engine`](server-system-variables.html#sysvar_default_storage_engine)
    server startup option, or by setting the [`default-storage-engine`](server-system-variables.html#sysvar_default_storage_engine)
    option in the `my.cnf` configuration file.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当您省略`ENGINE`选项时，将使用默认存储引擎。在MySQL 8.0中，默认引擎是[`InnoDB`](innodb-storage-engine.html
    "Chapter 17 The InnoDB Storage Engine")。您可以通过使用[`--default-storage-engine`](server-system-variables.html#sysvar_default_storage_engine)服务器启动选项或通过在`my.cnf`配置文件中设置[`default-storage-engine`](server-system-variables.html#sysvar_default_storage_engine)选项来指定默认引擎。
- en: 'You can set the default storage engine for the current session by setting the
    [`default_storage_engine`](server-system-variables.html#sysvar_default_storage_engine)
    variable:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过设置[`default_storage_engine`](server-system-variables.html#sysvar_default_storage_engine)变量为当前会话设置默认存储引擎：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The storage engine for `TEMPORARY` tables created with [`CREATE TEMPORARY TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") can be set separately from the engine for permanent
    tables by setting the [`default_tmp_storage_engine`](server-system-variables.html#sysvar_default_tmp_storage_engine),
    either at startup or at runtime.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`CREATE TEMPORARY TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")创建的`TEMPORARY`表的存储引擎可以通过在启动时或运行时设置[`default_tmp_storage_engine`](server-system-variables.html#sysvar_default_tmp_storage_engine)来单独设置，与永久表的引擎不同。
- en: 'To convert a table from one storage engine to another, use an [`ALTER TABLE`](alter-table.html
    "15.1.9 ALTER TABLE Statement") statement that indicates the new engine:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要将表从一种存储引擎转换为另一种，使用指示新引擎的[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE
    Statement")语句：
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: See [Section 15.1.20, “CREATE TABLE Statement”](create-table.html "15.1.20 CREATE
    TABLE Statement"), and [Section 15.1.9, “ALTER TABLE Statement”](alter-table.html
    "15.1.9 ALTER TABLE Statement").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[第15.1.20节，“CREATE TABLE Statement”](create-table.html "15.1.20 CREATE TABLE
    Statement")和[第15.1.9节，“ALTER TABLE Statement”](alter-table.html "15.1.9 ALTER
    TABLE Statement")。
- en: If you try to use a storage engine that is not compiled in or that is compiled
    in but deactivated, MySQL instead creates a table using the default storage engine.
    For example, in a replication setup, perhaps your source server uses `InnoDB`
    tables for maximum safety, but the replica servers use other storage engines for
    speed at the expense of durability or concurrency.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尝试使用未编译或已编译但已停用的存储引擎，MySQL会使用默认存储引擎创建表。例如，在复制设置中，也许您的源服务器使用`InnoDB`表以获得最大安全性，但副本服务器使用其他存储引擎以换取速度而牺牲耐久性或并发性。
- en: By default, a warning is generated whenever [`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement") or [`ALTER TABLE`](alter-table.html "15.1.9 ALTER
    TABLE Statement") cannot use the default storage engine. To prevent confusing,
    unintended behavior if the desired engine is unavailable, enable the [`NO_ENGINE_SUBSTITUTION`](sql-mode.html#sqlmode_no_engine_substitution)
    SQL mode. If the desired engine is unavailable, this setting produces an error
    instead of a warning, and the table is not created or altered. See [Section 7.1.11,
    “Server SQL Modes”](sql-mode.html "7.1.11 Server SQL Modes").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，当[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")或[`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")无法使用默认存储引擎时会生成警告。为了防止混淆和意外行为，如果所需引擎不可用，请启用[`NO_ENGINE_SUBSTITUTION`](sql-mode.html#sqlmode_no_engine_substitution)
    SQL 模式。如果所需引擎不可用，此设置会产生错误而不是警告，并且表不会被创建或更改。参见[第7.1.11节，“服务器 SQL 模式”](sql-mode.html
    "7.1.11 Server SQL Modes")。
- en: MySQL may store a table's index and data in one or more other files, depending
    on the storage engine. Table and column definitions are stored in the MySQL data
    dictionary. Individual storage engines create any additional files required for
    the tables that they manage. If a table name contains special characters, the
    names for the table files contain encoded versions of those characters as described
    in [Section 11.2.4, “Mapping of Identifiers to File Names”](identifier-mapping.html
    "11.2.4 Mapping of Identifiers to File Names").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL可能会根据存储引擎的不同，将表的索引和数据存储在一个或多个其他文件中。表和列的定义存储在MySQL数据字典中。各个存储引擎会为其管理的表创建所需的任何额外文件。如果表名包含特殊字符，则表文件的名称会包含这些字符的编码版本，如[Section 11.2.4，“标识符映射到文件名”](identifier-mapping.html
    "11.2.4 Mapping of Identifiers to File Names")中所述。
