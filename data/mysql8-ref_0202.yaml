- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/myisamchk-table-info.html](https://dev.mysql.com/doc/refman/8.0/en/myisamchk-table-info.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/myisamchk-table-info.html](https://dev.mysql.com/doc/refman/8.0/en/myisamchk-table-info.html)
- en: 6.6.4.5 Obtaining Table Information with myisamchk
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 6.6.4.5 使用 myisamchk 获取表信息
- en: To obtain a description of a `MyISAM` table or statistics about it, use the
    commands shown here. The output from these commands is explained later in this
    section.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取 `MyISAM` 表的描述或有关其统计信息，请使用此处显示的命令。稍后将解释这些命令的输出。
- en: '[**myisamchk -d *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**myisamchk -d *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")'
- en: Runs [**myisamchk**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") in “describe mode” to produce a description of your table. If you start
    the MySQL server with external locking disabled, [**myisamchk**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility") may report an error for
    a table that is updated while it runs. However, because [**myisamchk**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility") does not change the table
    in describe mode, there is no risk of destroying data.
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在“描述模式”下运行[**myisamchk**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") 以生成表的描述。如果使用外部锁定禁用启动 MySQL 服务器，则在运行时更新的表可能会报告错误。但是，因为[**myisamchk**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility") 在描述模式下不会更改表，所以不会破坏数据。
- en: '[**myisamchk -dv *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**myisamchk -dv *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")'
- en: Adding `-v` runs [**myisamchk**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") in verbose mode so that it produces more information about the table.
    Adding `-v` a second time produces even more information.
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加 `-v` 参数以在详细模式下运行[**myisamchk**](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility")，从而生成有关表的更多信息。再次添加 `-v` 参数会生成更多信息。
- en: '[**myisamchk -eis *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility")'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**myisamchk -eis *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility")'
- en: Shows only the most important information from a table. This operation is slow
    because it must read the entire table.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅显示表中最重要的信息。此操作速度较慢，因为它必须读取整个表。
- en: '[**myisamchk -eiv *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**myisamchk -eiv *`tbl_name`***](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility")'
- en: This is like `-eis`, but tells you what is being done.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这类似于 `-eis`，但告诉您正在执行什么操作。
- en: The *`tbl_name`* argument can be either the name of a `MyISAM` table or the
    name of its index file, as described in [Section 6.6.4, “myisamchk — MyISAM Table-Maintenance
    Utility”](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance Utility").
    Multiple *`tbl_name`* arguments can be given.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*`tbl_name`* 参数可以是 `MyISAM` 表的名称，也可以是其索引文件的名称，如[第 6.6.4 节，“myisamchk — MyISAM
    Table-Maintenance Utility”](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")中所述。可以提供多个 *`tbl_name`* 参数。'
- en: Suppose that a table named `person` has the following structure. (The `MAX_ROWS`
    table option is included so that in the example output from [**myisamchk**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility") shown later, some values
    are smaller and fit the output format more easily.)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 假设名为 `person` 的表具有以下结构。（包含 `MAX_ROWS` 表选项，以便在稍后显示的[**myisamchk**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility") 示例输出中，某些值较小且更容易适应输出格式。）
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Suppose also that the table has these data and index file sizes:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 假设表具有以下数据和索引文件大小：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Example of [**myisamchk -dvv**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") output:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[**myisamchk -dvv**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") 输出示例：'
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Explanations for the types of information [**myisamchk**](myisamchk.html "6.6.4 myisamchk
    — MyISAM Table-Maintenance Utility") produces are given here. “Keyfile” refers
    to the index file. “Record” and “row” are synonymous, as are “field” and “column.”
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[**myisamchk**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") 生成的信息类型解释在此处。 “Keyfile” 指的是索引文件。“Record” 和 “row” 是同义词，同样，“field” 和 “column”
    也是。'
- en: 'The initial part of the table description contains these values:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 表描述的初始部分包含这些值：
- en: '`MyISAM file`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MyISAM 文件`'
- en: Name of the `MyISAM` (index) file.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`MyISAM`（索引）文件的名称。'
- en: '`Record format`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`记录格式`'
- en: The format used to store table rows. The preceding examples use `Fixed length`.
    Other possible values are `Compressed` and `Packed`. (`Packed` corresponds to
    what `SHOW TABLE STATUS` reports as `Dynamic`.)
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于存储表行的格式。前面的示例使用`固定长度`。其他可能的值包括`压缩`和`打包`。（`打包`对应于`SHOW TABLE STATUS`报告的`动态`。）
- en: '`Chararacter set`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`字符集`'
- en: The table default character set.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表的默认字符集。
- en: '`File-version`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`文件版本`'
- en: Version of `MyISAM` format. Always 1.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`MyISAM`格式的版本。始终为1。'
- en: '`Creation time`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`创建时间`'
- en: When the data file was created.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据文件创建时间。
- en: '`Recover time`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`恢复时间`'
- en: When the index/data file was last reconstructed.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上次重建索引/数据文件的时间。
- en: '`Status`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`状态`'
- en: Table status flags. Possible values are `crashed`, `open`, `changed`, `analyzed`,
    `optimized keys`, and `sorted index pages`.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表状态标志。可能的值为`崩溃`、`打开`、`更改`、`分析`、`优化键`和`排序索引页`。
- en: '`Auto increment key`, `Last value`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`自增键`, `最后值`'
- en: The key number associated the table's `AUTO_INCREMENT` column, and the most
    recently generated value for this column. These fields do not appear if there
    is no such column.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与表的`AUTO_INCREMENT`列相关联的键号，以及此列的最近生成的值。如果没有这样的列，则不显示这些字段。
- en: '`Data records`'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`数据记录`'
- en: The number of rows in the table.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表中的行数。
- en: '`Deleted blocks`'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`已删除块`'
- en: How many deleted blocks still have reserved space. You can optimize your table
    to minimize this space. See [Section 9.6.4, “MyISAM Table Optimization”](myisam-optimization.html
    "9.6.4 MyISAM Table Optimization").
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有多少已删除块仍然保留空间。您可以优化表以最小化此空间。请参阅[第9.6.4节，“MyISAM表优化”](myisam-optimization.html
    "9.6.4 MyISAM Table Optimization")。
- en: '`Datafile parts`'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`数据文件部分`'
- en: For dynamic-row format, this indicates how many data blocks there are. For an
    optimized table without fragmented rows, this is the same as `Data records`.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于动态行格式，这表示有多少数据块。对于没有碎片行的优化表，这与`数据记录`相同。
- en: '`Deleted data`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`已删除数据`'
- en: How many bytes of unreclaimed deleted data there are. You can optimize your
    table to minimize this space. See [Section 9.6.4, “MyISAM Table Optimization”](myisam-optimization.html
    "9.6.4 MyISAM Table Optimization").
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有多少字节的未回收删除数据。您可以优化表以最小化此空间。请参阅[第9.6.4节，“MyISAM表优化”](myisam-optimization.html
    "9.6.4 MyISAM Table Optimization")。
- en: '`Datafile pointer`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`数据文件指针`'
- en: The size of the data file pointer, in bytes. It is usually 2, 3, 4, or 5 bytes.
    Most tables manage with 2 bytes, but this cannot be controlled from MySQL yet.
    For fixed tables, this is a row address. For dynamic tables, this is a byte address.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据文件指针的大小，以字节为单位。通常为2、3、4或5字节。大多数表使用2字节，但目前无法从MySQL控制。对于固定表，这是一个行地址。对于动态表，这是一个字节地址。
- en: '`Keyfile pointer`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`键文件指针`'
- en: The size of the index file pointer, in bytes. It is usually 1, 2, or 3 bytes.
    Most tables manage with 2 bytes, but this is calculated automatically by MySQL.
    It is always a block address.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引文件指针的大小，以字节为单位。通常为1、2或3字节。大多数表使用2字节，但MySQL会自动计算。它始终是一个块地址。
- en: '`Max datafile length`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`最大数据文件长度`'
- en: How long the table data file can become, in bytes.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表数据文件可以变得多长，以字节为单位。
- en: '`Max keyfile length`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`最大键文件长度`'
- en: How long the table index file can become, in bytes.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表索引文件可以变得多长，以字节为单位。
- en: '`Recordlength`'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`记录长度`'
- en: How much space each row takes, in bytes.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每行占用多少空间，以字节为单位。
- en: 'The `table description` part of the output includes a list of all keys in the
    table. For each key, [**myisamchk**](myisamchk.html "6.6.4 myisamchk — MyISAM
    Table-Maintenance Utility") displays some low-level information:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的`表描述`部分包括表中所有键的列表。对于每个键，[**myisamchk**](myisamchk.html "6.6.4 myisamchk —
    MyISAM Table-Maintenance Utility")显示一些低级信息：
- en: '`Key`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`键`'
- en: This key's number. This value is shown only for the first column of the key.
    If this value is missing, the line corresponds to the second or later column of
    a multiple-column key. For the table shown in the example, there are two `table
    description` lines for the second index. This indicates that it is a multiple-part
    index with two parts.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此键的编号。仅对键的第一列显示此值。如果缺少此值，则该行对应于多列键的第二列或更高列。对于示例中显示的表，第二个索引有两行`表描述`。这表示它是一个具有两部分的多部分索引。
- en: '`Start`'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`开始`'
- en: Where in the row this portion of the index starts.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此索引部分在行中的起始位置。
- en: '`Len`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`长度`'
- en: How long this portion of the index is. For packed numbers, this should always
    be the full length of the column. For strings, it may be shorter than the full
    length of the indexed column, because you can index a prefix of a string column.
    The total length of a multiple-part key is the sum of the `Len` values for all
    key parts.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此部分索引的长度。对于压缩数字，这应始终是列的完整长度。对于字符串，它可能比索引列的完整长度短，因为可以索引字符串列的前缀。多部分键的总长度是所有关键部分的`Len`值之和。
- en: '`Index`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index`'
- en: Whether a key value can exist multiple times in the index. Possible values are
    `unique` or `multip.` (multiple).
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引中是否可以存在多个相同的键值。可能的值为`unique`或`multip.`（多个）。
- en: '`Type`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Type`'
- en: What data type this portion of the index has. This is a `MyISAM` data type with
    the possible values `packed`, `stripped`, or `empty`.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此部分索引的数据类型。这是一个`MyISAM`数据类型，可能的值为`packed`、`stripped`或`empty`。
- en: '`Root`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Root`'
- en: Address of the root index block.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根索引块的地址。
- en: '`Blocksize`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Blocksize`'
- en: The size of each index block. By default this is 1024, but the value may be
    changed at compile time when MySQL is built from source.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个索引块的大小。默认情况下为1024，但在从源代码构建MySQL时，该值可以在编译时更改。
- en: '`Rec/key`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Rec/key`'
- en: This is a statistical value used by the optimizer. It tells how many rows there
    are per value for this index. A unique index always has a value of 1\. This may
    be updated after a table is loaded (or greatly changed) with [**myisamchk -a**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility"). If this is not updated
    at all, a default value of 30 is given.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是优化器使用的统计值。它告诉此索引每个值有多少行。唯一索引的值始终为1。在加载表后（或大幅更改后），可以使用[**myisamchk -a**](myisamchk.html
    "6.6.4 myisamchk — MyISAM Table-Maintenance Utility")更新此值。如果根本没有更新，将给出默认值30。
- en: 'The last part of the output provides information about each column:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的最后部分提供了有关每列的信息：
- en: '`Field`'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Field`'
- en: The column number.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列号。
- en: '`Start`'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Start`'
- en: The byte position of the column within table rows.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列在表行中的字节位置。
- en: '`Length`'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Length`'
- en: The length of the column in bytes.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列的字节长度。
- en: '`Nullpos`, `Nullbit`'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Nullpos`，`Nullbit`'
- en: For columns that can be `NULL`, `MyISAM` stores `NULL` values as a flag in a
    byte. Depending on how many nullable columns there are, there can be one or more
    bytes used for this purpose. The `Nullpos` and `Nullbit` values, if nonempty,
    indicate which byte and bit contains that flag indicating whether the column is
    `NULL`.
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于可以为`NULL`的列，`MyISAM`将`NULL`值存储为一个字节中的标志。根据可为空的列数，可以使用一个或多个字节用于此目的。如果`Nullpos`和`Nullbit`值非空，则指示哪个字节和位包含指示列是否为`NULL`的标志。
- en: The position and number of bytes used to store `NULL` flags is shown in the
    line for field 1\. This is why there are six `Field` lines for the `person` table
    even though it has only five columns.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示用于存储`NULL`标志的位置和字节数的位置和数量在字段1的行中显示。这就是为什么`person`表有五列，但有六行`Field`行的原因。
- en: '`Type`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Type`'
- en: 'The data type. The value may contain any of the following descriptors:'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据类型。该值可能包含以下描述符之一：
- en: '`constant`'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`constant`'
- en: All rows have the same value.
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有行具有相同的值。
- en: '`no endspace`'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no endspace`'
- en: Do not store endspace.
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要存储末尾空格。
- en: '`no endspace, not_always`'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no endspace, not_always`'
- en: Do not store endspace and do not do endspace compression for all values.
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要存储末尾空格，也不要对所有值进行末尾空格压缩。
- en: '`no endspace, no empty`'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no endspace, no empty`'
- en: Do not store endspace. Do not store empty values.
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要存储末尾空格。不要存储空值。
- en: '`table-lookup`'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`table-lookup`'
- en: The column was converted to an [`ENUM`](enum.html "13.3.5 The ENUM Type").
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该列已转换为[`ENUM`](enum.html "13.3.5 The ENUM Type")。
- en: '`zerofill(*`N`*)`'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`zerofill(*`N`*)`'
- en: The most significant *`N`* bytes in the value are always 0 and are not stored.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 值中最重要的*`N`*字节始终为0且不存储。
- en: '`no zeros`'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`no zeros`'
- en: Do not store zeros.
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不要存储零值。
- en: '`always zero`'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`always zero`'
- en: Zero values are stored using one bit.
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 零值使用一位存储。
- en: '`Huff tree`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Huff tree`'
- en: The number of the Huffman tree associated with the column.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与列关联的Huffman树的编号。
- en: '`Bits`'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Bits`'
- en: The number of bits used in the Huffman tree.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Huffman树中使用的位数。
- en: The `Huff tree` and `Bits` fields are displayed if the table has been compressed
    with [**myisampack**](myisampack.html "6.6.6 myisampack — Generate Compressed,
    Read-Only MyISAM Tables"). See [Section 6.6.6, “myisampack — Generate Compressed,
    Read-Only MyISAM Tables”](myisampack.html "6.6.6 myisampack — Generate Compressed,
    Read-Only MyISAM Tables"), for an example of this information.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表已使用[**myisampack**](myisampack.html "6.6.6 myisampack — Generate Compressed,
    Read-Only MyISAM Tables")进行压缩，则显示`Huff tree`和`Bits`字段。参见[第6.6.6节，“myisampack —
    生成压缩的只读MyISAM表”](myisampack.html "6.6.6 myisampack — Generate Compressed, Read-Only
    MyISAM Tables")，了解此信息的示例。
- en: 'Example of [**myisamchk -eiv**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") output:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[**myisamchk -eiv**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")输出示例：'
- en: '[PRE3]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[**myisamchk -eiv**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility") output includes the following information:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[**myisamchk -eiv**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")输出包括以下信息：'
- en: '`Data records`'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`数据记录`'
- en: The number of rows in the table.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表中的行数。
- en: '`Deleted blocks`'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`已删除块`'
- en: How many deleted blocks still have reserved space. You can optimize your table
    to minimize this space. See [Section 9.6.4, “MyISAM Table Optimization”](myisam-optimization.html
    "9.6.4 MyISAM Table Optimization").
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有多少已删除的块仍然保留了空间。您可以优化表以最小化此空间。参见[第9.6.4节，“MyISAM表优化”](myisam-optimization.html
    "9.6.4 MyISAM Table Optimization")。
- en: '`Key`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`键`'
- en: The key number.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 键号。
- en: '`Keyblocks used`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`已使用键块`'
- en: What percentage of the keyblocks are used. When a table has just been reorganized
    with [**myisamchk**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility"), the values are very high (very near theoretical maximum).
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用的键块的百分比。当表刚刚使用[**myisamchk**](myisamchk.html "6.6.4 myisamchk — MyISAM Table-Maintenance
    Utility")重新组织时，值非常高（非常接近理论最大值）。
- en: '`Packed`'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`压缩`'
- en: MySQL tries to pack key values that have a common suffix. This can only be used
    for indexes on [`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types") and [`VARCHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types") columns. For long indexed strings that have
    similar leftmost parts, this can significantly reduce the space used. In the preceding
    example, the second key is 40 bytes long and a 97% reduction in space is achieved.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL尝试压缩具有共同后缀的键值。这仅适用于[`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types")和[`VARCHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types")列上的索引。对于具有相似左侧部分的长索引字符串，这可以显着减少使用的空间。在前面的示例中，第二个键长40字节，实现了97%的空间减少。
- en: '`Max levels`'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`最大级别`'
- en: How deep the B-tree for this key is. Large tables with long key values get high
    values.
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此键的B树有多深。具有长键值的大表会获得较高的值。
- en: '`Records`'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`记录`'
- en: How many rows are in the table.
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表中有多少行。
- en: '`M.recordlength`'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`M.recordlength`'
- en: The average row length. This is the exact row length for tables with fixed-length
    rows, because all rows have the same length.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 平均行长度。对于具有固定长度行的表，这是确切的行长度，因为所有行长度相同。
- en: '`Packed`'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`压缩`'
- en: MySQL strips spaces from the end of strings. The `Packed` value indicates the
    percentage of savings achieved by doing this.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MySQL从字符串末尾删除空格。`压缩`值指示通过执行此操作实现的节省百分比。
- en: '`Recordspace used`'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`已使用记录空间`'
- en: What percentage of the data file is used.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据文件中已使用的百分比。
- en: '`Empty space`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`空间`'
- en: What percentage of the data file is unused.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据文件中未使用的百分比。
- en: '`Blocks/Record`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`块/记录`'
- en: Average number of blocks per row (that is, how many links a fragmented row is
    composed of). This is always 1.0 for fixed-format tables. This value should stay
    as close to 1.0 as possible. If it gets too large, you can reorganize the table.
    See [Section 9.6.4, “MyISAM Table Optimization”](myisam-optimization.html "9.6.4 MyISAM
    Table Optimization").
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每行的平均块数（即，一个碎片化行由多少个链接组成）。对于固定格式表，这总是1.0。此值应尽可能接近1.0。如果值过大，您可以重新组织表。参见[第9.6.4节，“MyISAM表优化”](myisam-optimization.html
    "9.6.4 MyISAM Table Optimization")。
- en: '`Recordblocks`'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`记录块`'
- en: How many blocks (links) are used. For fixed-format tables, this is the same
    as the number of rows.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用了多少块（链接）。对于固定格式表，这与行数相同。
- en: '`Deleteblocks`'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`删除块`'
- en: How many blocks (links) are deleted.
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 已删除（未使用）的块（链接）数。
- en: '`Recorddata`'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`记录数据`'
- en: How many bytes in the data file are used.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据文件中已使用的字节数。
- en: '`Deleted data`'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`已删除数据`'
- en: How many bytes in the data file are deleted (unused).
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据文件中已删除（未使用）的字节数。
- en: '`Lost space`'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`丢失空间`'
- en: If a row is updated to a shorter length, some space is lost. This is the sum
    of all such losses, in bytes.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果将行更新为较短长度，则会丢失一些空间。这是所有此类损���的总和，以字节为单位。
- en: '`Linkdata`'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`链接数据`'
- en: When the dynamic table format is used, row fragments are linked with pointers
    (4 to 7 bytes each). `Linkdata` is the sum of the amount of storage used by all
    such pointers.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当使用动态表格式时，行片段通过指针（每个4到7个字节）连接。`Linkdata`是所有这些指针使用的存储量的总和。
