- en: 12.3.8 Character Set Introducers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12.3.8 字符集引导符
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-introducer.html](https://dev.mysql.com/doc/refman/8.0/en/charset-introducer.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/charset-introducer.html](https://dev.mysql.com/doc/refman/8.0/en/charset-introducer.html)
- en: 'A character string literal, hexadecimal literal, or bit-value literal may have
    an optional character set introducer and `COLLATE` clause, to designate it as
    a string that uses a particular character set and collation:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串文字、十六进制文字或位值文字可以有可选的字符集引导符和`COLLATE`子句，以指定它为使用特定字符集和校对规则的字符串：
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `_*`charset_name`*` expression is formally called an *introducer*. It tells
    the parser, “the string that follows uses character set *`charset_name`*.” An
    introducer does not change the string to the introducer character set like [`CONVERT()`](cast-functions.html#function_convert)
    would do. It does not change the string value, although padding may occur. The
    introducer is just a signal.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`_*`charset_name`*`表达式在形式上称为*引导符*。它告诉解析器，“接下来的字符串使用字符集*`charset_name`*。” 引导符不会像[`CONVERT()`](cast-functions.html#function_convert)那样将字符串更改为引导符字符集。它不会更改字符串值，尽管可能会发生填充。引导符只是一个信号。'
- en: For character string literals, space between the introducer and the string is
    permitted but optional.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于字符串文字，引导符和字符串之间的空格是允许但是可选的。
- en: For character set literals, an introducer indicates the character set for the
    following string, but does not change how the parser performs escape processing
    within the string. Escapes are always interpreted by the parser according to the
    character set given by [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection).
    For additional discussion and examples, see [Section 12.3.6, “Character String
    Literal Character Set and Collation”](charset-literal.html "12.3.6 Character String
    Literal Character Set and Collation").
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于字符集文字，引导符表示后续字符串的字符集，但不会改变解析器如何在字符串内执行转义处理。转义始终由解析器根据[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)给定的字符集进行解释。有关更多讨论和示例，请参见[第12.3.6节，“字符串文字的字符集和校对规则”](charset-literal.html
    "12.3.6 字符串文字的字符集和校对规则")。
- en: 'Examples:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Character set introducers and the `COLLATE` clause are implemented according
    to standard SQL specifications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 字符集引导符和`COLLATE`子句按照标准SQL规范实现。
- en: 'Character string literals can be designated as binary strings by using the
    `_binary` introducer. Hexadecimal literals and bit-value literals are binary strings
    by default, so `_binary` is permitted, but normally unnecessary. `_binary` may
    be useful to preserve a hexadecimal or bit literal as a binary string in contexts
    for which the literal is otherwise treated as a number. For example, bit operations
    permit numeric or binary string arguments in MySQL 8.0 and higher, but treat hexadecimal
    and bit literals as numbers by default. To explicitly specify binary string context
    for such literals, use a `_binary` introducer for at least one of the arguments:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串文字可以通过使用`_binary`引导符指定为二进制字符串。十六进制文字和位值文字默认为二进制字符串，因此允许使用`_binary`，但通常是不必要的。在MySQL
    8.0及更高版本中，位操作允许数字或二进制字符串参数，但默认情况下将十六进制和位文字视为数字。为了明确指定这些文字的二进制字符串上下文，对于这些文字至少一个参数使用`_binary`引导符：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The displayed result appears similar for both bit operations, but the result
    without `_binary` is a `BIGINT` value, whereas the result with `_binary` is a
    binary string. Due to the difference in result types, the displayed values differ:
    High-order 0 digits are not displayed for the numeric result.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于位操作，显示的结果看起来相似，但没有`_binary`的结果是一个`BIGINT`值，而有`_binary`的结果是一个二进制字符串。由于结果类型的差异，显示的值也不同：高位0数字不会显示在数值结果中。
- en: 'MySQL determines the character set and collation of a character string literal,
    hexadecimal literal, or bit-value literal in the following manner:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL确定字符串文字、十六进制文字或位值文字的字符集和校对规则的方式如下：
- en: If both *`_charset_name`* and `COLLATE *`collation_name`*` are specified, character
    set *`charset_name`* and collation *`collation_name`* are used. *`collation_name`*
    must be a permitted collation for *`charset_name`*.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果同时指定了*`_charset_name`*和`COLLATE *`collation_name`*`，则使用字符集*`charset_name`*和校对规则*`collation_name`*。*`collation_name`*必须是*`charset_name`*的允许校对规则。
- en: If *`_charset_name`* is specified but `COLLATE` is not specified, character
    set *`charset_name`* and its default collation are used. To see the default collation
    for each character set, use the [`SHOW CHARACTER SET`](show-character-set.html
    "15.7.7.3 SHOW CHARACTER SET Statement") statement or query the `INFORMATION_SCHEMA`
    [`CHARACTER_SETS`](information-schema-character-sets-table.html "28.3.4 The INFORMATION_SCHEMA
    CHARACTER_SETS Table") table.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果指定了*`_charset_name`*但未指定`COLLATE`，则使用字符集*`charset_name`*及其默认排序规则。要查看每个字符集的默认排序规则，请使用[`SHOW
    CHARACTER SET`](show-character-set.html "15.7.7.3 SHOW CHARACTER SET Statement")语句或查询`INFORMATION_SCHEMA`
    [`CHARACTER_SETS`](information-schema-character-sets-table.html "28.3.4 The INFORMATION_SCHEMA
    CHARACTER_SETS Table")表。
- en: 'If *`_charset_name`* is not specified but `COLLATE *`collation_name`*` is specified:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未指定*`_charset_name`*但指定了`COLLATE *`collation_name`*`：
- en: For a character string literal, the connection default character set given by
    the [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    system variable and collation *`collation_name`* are used. *`collation_name`*
    must be a permitted collation for the connection default character set.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于字符字符串字面值，使用由[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)系统变量给出的连接默认字符集和排序规则*`collation_name`*。*`collation_name`*必须是连接默认字符集的允许排序规则。
- en: For a hexadecimal literal or bit-value literal, the only permitted collation
    is `binary` because these types of literals are binary strings by default.
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于十六进制字面值或位值字面值，唯一允许的排序规则是`binary`，因为这些类型的字面值默认为二进制字符串。
- en: 'Otherwise (neither *`_charset_name`* nor `COLLATE *`collation_name`*` is specified):'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则（既未指定*`_charset_name`*也未指定`COLLATE *`collation_name`*`）：
- en: For a character string literal, the connection default character set and collation
    given by the [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    and [`collation_connection`](server-system-variables.html#sysvar_collation_connection)
    system variables are used.
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于字符字符串字面值，使用由[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)和[`collation_connection`](server-system-variables.html#sysvar_collation_connection)系统变量给出的连接默认字符集和排序规则。
- en: For a hexadecimal literal or bit-value literal, the character set and collation
    are `binary`.
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于十六进制字面值或位值字面值，字符集和排序规则为`binary`。
- en: 'Examples:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: 'Nonbinary strings with `latin1` character set and `latin1_german1_ci` collation:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有`latin1`字符集和`latin1_german1_ci`排序规则的非二进制字符串：
- en: '[PRE3]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Nonbinary strings with `utf8mb4` character set and its default collation (that
    is, `utf8mb4_0900_ai_ci`):'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有`utf8mb4`字符集及其默认排序规则（即`utf8mb4_0900_ai_ci`）的非二进制字符串：
- en: '[PRE4]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Binary strings with `binary` character set and its default collation (that
    is, `binary`):'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有`binary`字符集及其默认排序规则（即`binary`）的二进制字符串：
- en: '[PRE5]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The hexadecimal literal and bit-value literal need no introducer because they
    are binary strings by default.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 十六进制字面值和位值字面值不需要引导符，因为它们默认为二进制字符串。
- en: 'A nonbinary string with the connection default character set and `utf8mb4_0900_ai_ci`
    collation (fails if the connection character set is not `utf8mb4`):'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个具有连接默认字符集和`utf8mb4_0900_ai_ci`排序规则的非二进制字符串（如果连接字符集不是`utf8mb4`，则失败）：
- en: '[PRE6]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This construction (`COLLATE` only) does not work for hexadecimal literals or
    bit literals because their character set is `binary` no matter the connection
    character set, and `binary` is not compatible with the `utf8mb4_0900_ai_ci` collation.
    The only permitted `COLLATE` clause in the absence of an introducer is `COLLATE
    binary`.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个构造（`COLLATE` only）对十六进制字面值或位字面值不起作用，因为它们的字符集是`binary`，无论连接字符集如何，而`binary`与`utf8mb4_0900_ai_ci`排序规则不兼容。在没有引导符的情况下，唯一允许的`COLLATE`子句是`COLLATE
    binary`。
- en: 'A string with the connection default character set and collation:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个具有连接默认字符集和排序规则的字符串：
- en: '[PRE7]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
