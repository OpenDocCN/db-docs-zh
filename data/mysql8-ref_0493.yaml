- en: 9.4.3 Dumping Data in Delimited-Text Format with mysqldump
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9.4.3 使用mysqldump以分隔文本格式转储数据
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysqldump-delimited-text.html](https://dev.mysql.com/doc/refman/8.0/en/mysqldump-delimited-text.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/mysqldump-delimited-text.html](https://dev.mysql.com/doc/refman/8.0/en/mysqldump-delimited-text.html)
- en: This section describes how to use [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program") to create delimited-text dump files. For information
    about reloading such dump files, see [Section 9.4.4, “Reloading Delimited-Text
    Format Backups”](reloading-delimited-text-dumps.html "9.4.4 Reloading Delimited-Text
    Format Backups").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何使用[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program")创建分隔文本转储文件。有关重新加载此类转储文件的信息，请参见[Section 9.4.4, “Reloading Delimited-Text
    Format Backups”](reloading-delimited-text-dumps.html "9.4.4 Reloading Delimited-Text
    Format Backups")。
- en: If you invoke [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program") with the [`--tab=*`dir_name`*`](mysqldump.html#option_mysqldump_tab)
    option, it uses *`dir_name`* as the output directory and dumps tables individually
    in that directory using two files for each table. The table name is the base name
    for these files. For a table named `t1`, the files are named `t1.sql` and `t1.txt`.
    The `.sql` file contains a [`CREATE TABLE`](create-table.html "15.1.20 CREATE
    TABLE Statement") statement for the table. The `.txt` file contains the table
    data, one line per table row.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用[`--tab=*`dir_name`*`](mysqldump.html#option_mysqldump_tab)选项调用[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")，它将使用*`dir_name`*作为输出目录，并在该目录中单独转储表，每个表使用两个文件。表名是这些文件的基本名称。对于名为`t1`的表，文件名为`t1.sql`和`t1.txt`。`.sql`文件包含表的[`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")语句。`.txt`文件包含表数据，每行一个表行。
- en: 'The following command dumps the contents of the `db1` database to files in
    the `/tmp` database:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将`db1`数据库的内容转储到`/tmp`数据库中：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `.txt` files containing table data are written by the server, so they are
    owned by the system account used for running the server. The server uses [`SELECT
    ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO Statement") to
    write the files, so you must have the [`FILE`](privileges-provided.html#priv_file)
    privilege to perform this operation, and an error occurs if a given `.txt` file
    already exists.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 包含表数据的`.txt`文件由服务器编写，因此它们由用于运行服务器的系统帐户拥有。服务器使用[`SELECT ... INTO OUTFILE`](select-into.html
    "15.2.13.1 SELECT ... INTO Statement")来写入文件，因此您必须具有[`FILE`](privileges-provided.html#priv_file)权限才能执行此操作，如果给定的`.txt`文件已经存在，则会发生错误。
- en: The server sends the `CREATE` definitions for dumped tables to [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program"), which writes them to `.sql` files.
    These files therefore are owned by the user who executes [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program").
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器将转储表的`CREATE`定义发送给[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program")，后者将它们写入`.sql`文件。因此，这些文件的所有者是执行[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")的用户。
- en: It is best that [`--tab`](mysqldump.html#option_mysqldump_tab) be used only
    for dumping a local server. If you use it with a remote server, the [`--tab`](mysqldump.html#option_mysqldump_tab)
    directory must exist on both the local and remote hosts, and the `.txt` files
    are written by the server in the remote directory (on the server host), whereas
    the `.sql` files are written by [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program") in the local directory (on the client host).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最好只在本地服务器上使用[`--tab`](mysqldump.html#option_mysqldump_tab)进行转储。如果在远程服务器上使用它，那么[`--tab`](mysqldump.html#option_mysqldump_tab)目录必须同时存在于本地和远程主机上，并且`.txt`文件由服务器在远程目录（在服务器主机上）中写入，而`.sql`文件由[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")在本地目录（在客户端主机上）中写入。
- en: For [**mysqldump --tab**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program"), the server by default writes table data to `.txt` files one line per
    row with tabs between column values, no quotation marks around column values,
    and newline as the line terminator. (These are the same defaults as for [`SELECT
    ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO Statement").)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[**mysqldump --tab**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program")，服务器默认将表数据写入`.txt`文件，每行一个行，列值之间用制表符分隔，列值周围没有引号，换行符作为行终止符。（这些是与[`SELECT
    ... INTO OUTFILE`](select-into.html "15.2.13.1 SELECT ... INTO Statement")相同的默认值。）
- en: 'To enable data files to be written using a different format, [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program") supports these options:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使数据文件以不同格式编写，[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database
    Backup Program")支持以下选项：
- en: '[`--fields-terminated-by=*`str`*`](mysqldump.html#option_mysqldump_fields)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--fields-terminated-by=*`str`*`](mysqldump.html#option_mysqldump_fields)'
- en: 'The string for separating column values (default: tab).'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于分隔列值的字符串（默认：制表符）。
- en: '[`--fields-enclosed-by=*`char`*`](mysqldump.html#option_mysqldump_fields)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--fields-enclosed-by=*`char`*`](mysqldump.html#option_mysqldump_fields)'
- en: 'The character within which to enclose column values (default: no character).'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于封装列值的字符（默认：无字符）。
- en: '[`--fields-optionally-enclosed-by=*`char`*`](mysqldump.html#option_mysqldump_fields)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--fields-optionally-enclosed-by=*`char`*`](mysqldump.html#option_mysqldump_fields)'
- en: 'The character within which to enclose non-numeric column values (default: no
    character).'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于封装非数字列值的字符（默认：无字符）。
- en: '[`--fields-escaped-by=*`char`*`](mysqldump.html#option_mysqldump_fields)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--fields-escaped-by=*`char`*`](mysqldump.html#option_mysqldump_fields)'
- en: 'The character for escaping special characters (default: no escaping).'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于转义特殊字符的字符（默认：不转义）。
- en: '[`--lines-terminated-by=*`str`*`](mysqldump.html#option_mysqldump_lines-terminated-by)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`--lines-terminated-by=*`str`*`](mysqldump.html#option_mysqldump_lines-terminated-by)'
- en: 'The line-termination string (default: newline).'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 行终止字符串（默认：换行符）。
- en: 'Depending on the value you specify for any of these options, it might be necessary
    on the command line to quote or escape the value appropriately for your command
    interpreter. Alternatively, specify the value using hex notation. Suppose that
    you want [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup Program")
    to quote column values within double quotation marks. To do so, specify double
    quote as the value for the [`--fields-enclosed-by`](mysqldump.html#option_mysqldump_fields)
    option. But this character is often special to command interpreters and must be
    treated specially. For example, on Unix, you can quote the double quote like this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您为这些选项中的任何一个指定的值，可能需要在命令行上适当地引用或转义该值。或者，使用十六进制表示值。假设您希望[**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program")在双引号内引用列值。为此，请将双引号指定为[`--fields-enclosed-by`](mysqldump.html#option_mysqldump_fields)选项的值。但是，此字符通常对命令解释器特殊，必须特殊处理。例如，在Unix上，您可以这样引用双引号：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'On any platform, you can specify the value in hex:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何平台上，您都可以以十六进制指定值：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'It is common to use several of the data-formatting options together. For example,
    to dump tables in comma-separated values format with lines terminated by carriage-return/newline
    pairs (`\r\n`), use this command (enter it on a single line):'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通常会一起使用几个数据格式选项。例如，要以逗号分隔值格式转储表，并以回车/换行对（`\r\n`）终止行，请使用以下命令（在一行上输入）：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Should you use any of the data-formatting options to dump table data, you need
    to specify the same format when you reload data files later, to ensure proper
    interpretation of the file contents.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用任何数据格式选项来转储表数据，则在以后重新加载数据文件时，需要指定相同的格式，以确保正确解释文件内容。
