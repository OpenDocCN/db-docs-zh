- en: 14.8.3 Character Set and Collation of Function Results
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.8.3 函数结果的字符集和排序规则
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/string-functions-charset.html](https://dev.mysql.com/doc/refman/8.0/en/string-functions-charset.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/string-functions-charset.html](https://dev.mysql.com/doc/refman/8.0/en/string-functions-charset.html)
- en: 'MySQL has many operators and functions that return a string. This section answers
    the question: What is the character set and collation of such a string?'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL有许多返回字符串的运算符和函数。本节回答了一个问题：这样的字符串的字符集和排序规则是什么？
- en: For simple functions that take string input and return a string result as output,
    the output's character set and collation are the same as those of the principal
    input value. For example, [`UPPER(*`X`*)`](string-functions.html#function_upper)
    returns a string with the same character string and collation as *`X`*. The same
    applies for [`INSTR()`](string-functions.html#function_instr), [`LCASE()`](string-functions.html#function_lcase),
    [`LOWER()`](string-functions.html#function_lower), [`LTRIM()`](string-functions.html#function_ltrim),
    [`MID()`](string-functions.html#function_mid), [`REPEAT()`](string-functions.html#function_repeat),
    [`REPLACE()`](string-functions.html#function_replace), [`REVERSE()`](string-functions.html#function_reverse),
    [`RIGHT()`](string-functions.html#function_right), [`RPAD()`](string-functions.html#function_rpad),
    [`RTRIM()`](string-functions.html#function_rtrim), [`SOUNDEX()`](string-functions.html#function_soundex),
    [`SUBSTRING()`](string-functions.html#function_substring), [`TRIM()`](string-functions.html#function_trim),
    [`UCASE()`](string-functions.html#function_ucase), and [`UPPER()`](string-functions.html#function_upper).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于接受字符串输入并返回字符串结果的简单函数，输出的字符集和排序规则与主要输入值相同。例如，[`UPPER(*`X`*)`](string-functions.html#function_upper)
    返回一个与 *`X`* 相同字符集和排序规则的字符串。对于 [`INSTR()`](string-functions.html#function_instr)、[`LCASE()`](string-functions.html#function_lcase)、[`LOWER()`](string-functions.html#function_lower)、[`LTRIM()`](string-functions.html#function_ltrim)、[`MID()`](string-functions.html#function_mid)、[`REPEAT()`](string-functions.html#function_repeat)、[`REPLACE()`](string-functions.html#function_replace)、[`REVERSE()`](string-functions.html#function_reverse)、[`RIGHT()`](string-functions.html#function_right)、[`RPAD()`](string-functions.html#function_rpad)、[`RTRIM()`](string-functions.html#function_rtrim)、[`SOUNDEX()`](string-functions.html#function_soundex)、[`SUBSTRING()`](string-functions.html#function_substring)、[`TRIM()`](string-functions.html#function_trim)、[`UCASE()`](string-functions.html#function_ucase)
    和 [`UPPER()`](string-functions.html#function_upper) 也适用相同规则。
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The [`REPLACE()`](string-functions.html#function_replace) function, unlike all
    other functions, always ignores the collation of the string input and performs
    a case-sensitive comparison.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 与所有其他函数不同，[`REPLACE()`](string-functions.html#function_replace) 函数始终忽略字符串输入的排序规则并执行区分大小写的比较。
- en: 'If a string input or function result is a binary string, the string has the
    `binary` character set and collation. This can be checked by using the [`CHARSET()`](information-functions.html#function_charset)
    and [`COLLATION()`](information-functions.html#function_collation) functions,
    both of which return `binary` for a binary string argument:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果字符串输入或函数结果是二进制字符串，则该字符串具有 `binary` 字符集和排序规则。可以通过使用 [`CHARSET()`](information-functions.html#function_charset)
    和 [`COLLATION()`](information-functions.html#function_collation) 函数来检查，两者对于二进制字符串参数都返回
    `binary`：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For operations that combine multiple string inputs and return a single string
    output, the “aggregation rules” of standard SQL apply for determining the collation
    of the result:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于将多个字符串输入组合并返回单个字符串输出的操作，标准SQL的“聚合规则”适用于确定结果的排序规则：
- en: If an explicit `COLLATE *`Y`*` occurs, use *`Y`*.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果明确出现 `COLLATE *`Y`*`，则使用 *`Y`*。
- en: If explicit `COLLATE *`Y`*` and `COLLATE *`Z`*` occur, raise an error.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果明确出现 `COLLATE *`Y`*` 和 `COLLATE *`Z`*`，则引发错误。
- en: Otherwise, if all collations are *`Y`*, use *`Y`*.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，如果所有排序规则都是 *`Y`*，则使用 *`Y`*。
- en: Otherwise, the result has no collation.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，结果没有排序规则。
- en: For example, with `CASE ... WHEN a THEN b WHEN b THEN c COLLATE *`X`* END`,
    the resulting collation is *`X`*. The same applies for [`UNION`](union.html "15.2.18 UNION
    Clause"), [`||`](logical-operators.html#operator_or), [`CONCAT()`](string-functions.html#function_concat),
    [`ELT()`](string-functions.html#function_elt), [`GREATEST()`](comparison-operators.html#function_greatest),
    [`IF()`](flow-control-functions.html#function_if), and [`LEAST()`](comparison-operators.html#function_least).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，使用 `CASE ... WHEN a THEN b WHEN b THEN c COLLATE *`X`* END`，结果的排序规则是 *`X`*。对于
    [`UNION`](union.html "15.2.18 UNION Clause")、[`||`](logical-operators.html#operator_or)、[`CONCAT()`](string-functions.html#function_concat)、[`ELT()`](string-functions.html#function_elt)、[`GREATEST()`](comparison-operators.html#function_greatest)、[`IF()`](flow-control-functions.html#function_if)
    和 [`LEAST()`](comparison-operators.html#function_least) 也适用相同规则。
- en: For operations that convert to character data, the character set and collation
    of the strings that result from the operations are defined by the [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    and [`collation_connection`](server-system-variables.html#sysvar_collation_connection)
    system variables that determine the default connection character set and collation
    (see [Section 12.4, “Connection Character Sets and Collations”](charset-connection.html
    "12.4 Connection Character Sets and Collations")). This applies only to [`BIN_TO_UUID()`](miscellaneous-functions.html#function_bin-to-uuid),
    [`CAST()`](cast-functions.html#function_cast), [`CONV()`](mathematical-functions.html#function_conv),
    [`FORMAT()`](string-functions.html#function_format), [`HEX()`](string-functions.html#function_hex),
    and [`SPACE()`](string-functions.html#function_space).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于转换为字符数据的操作，操作结果字符串的字符集和排序由确定默认连接字符集和排序的[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)和[`collation_connection`](server-system-variables.html#sysvar_collation_connection)系统变量定义（参见[第12.4节，“连接字符集和排序”](charset-connection.html
    "12.4 连接字符集和排序")）。这仅适用于[`BIN_TO_UUID()`](miscellaneous-functions.html#function_bin-to-uuid)、[`CAST()`](cast-functions.html#function_cast)、[`CONV()`](mathematical-functions.html#function_conv)、[`FORMAT()`](string-functions.html#function_format)、[`HEX()`](string-functions.html#function_hex)和[`SPACE()`](string-functions.html#function_space)。
- en: An exception to the preceding principle occurs for expressions for virtual generated
    columns. In such expressions, the table character set is used for [`BIN_TO_UUID()`](miscellaneous-functions.html#function_bin-to-uuid),
    [`CONV()`](mathematical-functions.html#function_conv), or [`HEX()`](string-functions.html#function_hex)
    results, regardless of connection character set.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于虚拟生成列的表达式，前述原则有一个例外。在这种表达式中，无论连接字符集如何，都使用表字符集来处理[`BIN_TO_UUID()`](miscellaneous-functions.html#function_bin-to-uuid)、[`CONV()`](mathematical-functions.html#function_conv)或[`HEX()`](string-functions.html#function_hex)的结果。
- en: 'If there is any question about the character set or collation of the result
    returned by a string function, use the [`CHARSET()`](information-functions.html#function_charset)
    or [`COLLATION()`](information-functions.html#function_collation) function to
    find out:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对字符串函数返回的结果的字符集或排序有任何疑问，请使用[`CHARSET()`](information-functions.html#function_charset)或[`COLLATION()`](information-functions.html#function_collation)函数来查找：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
