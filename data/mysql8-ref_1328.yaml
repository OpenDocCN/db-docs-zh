- en: 18.11 Overview of MySQL Storage Engine Architecture
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 18.11 MySQL存储引擎架构概述
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/pluggable-storage-overview.html](https://dev.mysql.com/doc/refman/8.0/en/pluggable-storage-overview.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/pluggable-storage-overview.html](https://dev.mysql.com/doc/refman/8.0/en/pluggable-storage-overview.html)
- en: '[18.11.1 Pluggable Storage Engine Architecture](pluggable-storage.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.11.1 可插拔存储引擎架构](pluggable-storage.html)'
- en: '[18.11.2 The Common Database Server Layer](pluggable-storage-common-layer.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[18.11.2 共同的数据库服务器层](pluggable-storage-common-layer.html)'
- en: The MySQL pluggable storage engine architecture enables a database professional
    to select a specialized storage engine for a particular application need while
    being completely shielded from the need to manage any specific application coding
    requirements. The MySQL server architecture isolates the application programmer
    and DBA from all of the low-level implementation details at the storage level,
    providing a consistent and easy application model and API. Thus, although there
    are different capabilities across different storage engines, the application is
    shielded from these differences.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL可插拔存储引擎架构使数据库专业人员能够为特定应用需求选择专门的存储引擎，同时完全屏蔽了管理任何特定应用编码需求的需要。MySQL服务器架构将应用程序员和数据库管理员与存储级别的所有低级实现细节隔离开来，提供一致且易于使用的应用模型和API。因此，尽管不同存储引擎具有不同的功能，但应用程序被屏蔽免受这些差异的影响。
- en: The MySQL pluggable storage engine architecture is shown in [Figure 18.3, “MySQL
    Architecture with Pluggable Storage Engines”](pluggable-storage-overview.html#mysql-architecture-diagram
    "Figure 18.3 MySQL Architecture with Pluggable Storage Engines").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL可插拔存储引擎架构显示在[图18.3，“带有可插拔存储引擎的MySQL架构”](pluggable-storage-overview.html#mysql-architecture-diagram
    "图18.3 MySQL架构与可插拔存储引擎")中。
- en: '**Figure 18.3 MySQL Architecture with Pluggable Storage Engines**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**图18.3 MySQL架构与可插拔存储引擎**'
- en: '![MySQL architecture diagram showing connectors, interfaces, pluggable storage
    engines, the file system with files and logs.](../Images/139bfed6c12381f6d33a7e83968b9a1f.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![MySQL架构图显示连接器、接口、可插拔存储引擎、带有文件和日志的文件系统。](../Images/139bfed6c12381f6d33a7e83968b9a1f.png)'
- en: The pluggable storage engine architecture provides a standard set of management
    and support services that are common among all underlying storage engines. The
    storage engines themselves are the components of the database server that actually
    perform actions on the underlying data that is maintained at the physical server
    level.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 可插拔存储引擎架构提供了一套标准的管理和支持服务，这些服务在所有底层存储引擎中都是共同的。存储引擎本身是数据库服务器的组件，实际上在物理服务器级别上执行对底层数据的操作。
- en: This efficient and modular architecture provides huge benefits for those wishing
    to specifically target a particular application need—such as data warehousing,
    transaction processing, or high availability situations—while enjoying the advantage
    of utilizing a set of interfaces and services that are independent of any one
    storage engine.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这种高效且模块化的架构为那些希望专门针对特定应用需求（如数据仓库、事务处理或高可用性情况）的人提供了巨大的好处，同时享受利用独立于任何一个存储引擎的一组接口和服务的优势。
- en: The application programmer and DBA interact with the MySQL database through
    Connector APIs and service layers that are above the storage engines. If application
    changes bring about requirements that demand the underlying storage engine change,
    or that one or more storage engines be added to support new needs, no significant
    coding or process changes are required to make things work. The MySQL server architecture
    shields the application from the underlying complexity of the storage engine by
    presenting a consistent and easy-to-use API that applies across storage engines.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序员和数据库管理员通过位于存储引擎之上的连接器API和服务层与MySQL数据库进行交互。如果应用程序的更改带来了需要更改底层存储引擎或添加一个或多个存储引擎以支持新需求的要求，那么不需要进行重大的编码或流程更改即可使事情正常运行。MySQL服务器架构通过提供一致且易于使用的API来屏蔽应用程序免受存储引擎的底层复杂性。
