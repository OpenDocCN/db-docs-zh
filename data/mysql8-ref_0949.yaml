- en: 15.2.10 LOAD XML Statement
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15.2.10 LOAD XML Statement
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/load-xml.html](https://dev.mysql.com/doc/refman/8.0/en/load-xml.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/load-xml.html](https://dev.mysql.com/doc/refman/8.0/en/load-xml.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The [`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement") statement reads
    data from an XML file into a table. The *`file_name`* must be given as a literal
    string. The *`tagname`* in the optional `ROWS IDENTIFIED BY` clause must also
    be given as a literal string, and must be surrounded by angle brackets (`<` and
    `>`).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement")语句将数据从XML文件读取到表中。*`file_name`*必须作为文字字符串给出。可选的`ROWS
    IDENTIFIED BY`子句中的*`tagname`*也必须作为文字字符串给出，并且必须用尖括号（`<`和`>`）括起来。'
- en: '[`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement") acts as the complement
    of running the [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    client in XML output mode (that is, starting the client with the [`--xml`](mysql-command-options.html#option_mysql_xml)
    option). To write data from a table to an XML file, you can invoke the [**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client") client with the [`--xml`](mysql-command-options.html#option_mysql_xml)
    and [`-e`](mysql-command-options.html#option_mysql_execute) options from the system
    shell, as shown here:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement")作为运行[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端以XML输出模式（即使用[`--xml`](mysql-command-options.html#option_mysql_xml)选项启动客户端）的补充。要将表中数据写入XML文件，可以从系统shell中调用带有[`--xml`](mysql-command-options.html#option_mysql_xml)和[`-e`](mysql-command-options.html#option_mysql_execute)选项的[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端，如下所示：'
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To read the file back into a table, use [`LOAD XML`](load-xml.html "15.2.10 LOAD
    XML Statement"). By default, the `<row>` element is considered to be the equivalent
    of a database table row; this can be changed using the `ROWS IDENTIFIED BY` clause.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文件读取回表中，请使用[`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement")。默认情况下，`<row>`元素被视为数据库表行的等价物；可以使用`ROWS
    IDENTIFIED BY`子句进行更改。
- en: 'This statement supports three different XML formats:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句支持三种不同的XML格式：
- en: 'Column names as attributes and column values as attribute values:'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列名作为属性，列值作为属性值：
- en: '[PRE2]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Column names as tags and column values as the content of these tags:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列名作为标签，列值作为这些标签的内容：
- en: '[PRE3]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Column names are the `name` attributes of `<field>` tags, and values are the
    contents of these tags:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列名是`<field>`标签的`name`属性，而值是这些标签的内容：
- en: '[PRE4]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This is the format used by other MySQL tools, such as [**mysqldump**](mysqldump.html
    "6.5.4 mysqldump — A Database Backup Program").
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是其他MySQL工具（如[**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program")）使用的格式。
- en: All three formats can be used in the same XML file; the import routine automatically
    detects the format for each row and interprets it correctly. Tags are matched
    based on the tag or attribute name and the column name.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 所有三种格式可以在同一个XML文件中使用；导入程序会自动检测每一行的格式并正确解释。标签是根据标签或属性名和列名进行匹配的。
- en: 'Prior to MySQL 8.0.21, `LOAD XML` did not support `CDATA` sections in the source
    XML. (Bug #30753708, Bug #98199)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '在MySQL 8.0.21之前，`LOAD XML`不支持源XML中的`CDATA`部分。（Bug #30753708，Bug #98199）'
- en: 'The following clauses work essentially the same way for [`LOAD XML`](load-xml.html
    "15.2.10 LOAD XML Statement") as they do for [`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement"):'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下子句对于[`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement")与对于[`LOAD DATA`](load-data.html
    "15.2.9 LOAD DATA Statement")基本上是相同的方式工作：
- en: '`LOW_PRIORITY` or `CONCURRENT`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOW_PRIORITY`或`CONCURRENT`'
- en: '`LOCAL`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LOCAL`'
- en: '`REPLACE` or `IGNORE`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`REPLACE`或`IGNORE`'
- en: '`CHARACTER SET`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CHARACTER SET`'
- en: '`SET`'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SET`'
- en: See [Section 15.2.9, “LOAD DATA Statement”](load-data.html "15.2.9 LOAD DATA
    Statement"), for more information about these clauses.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于这些子句的信息，请参见[第15.2.9节，“LOAD DATA Statement”](load-data.html "15.2.9 LOAD
    DATA Statement")。
- en: '`(*`field_name_or_user_var`*, ...)` is a list of one or more comma-separated
    XML fields or user variables. The name of a user variable used for this purpose
    must match the name of a field from the XML file, prefixed with `@`. You can use
    field names to select only desired fields. User variables can be employed to store
    the corresponding field values for subsequent re-use.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`(*`field_name_or_user_var`*, ...)`是一个由一个或多个逗号分隔的XML字段或用户变量列表。用于此目的的用户变量的名称必须与XML文件中的字段名称匹配，并以`@`为前缀。您可以使用字段名称仅选择所需的字段。用户变量可用于存储相应的字段值以供后续重用。'
- en: The `IGNORE *`number`* LINES` or `IGNORE *`number`* ROWS` clause causes the
    first *`number`* rows in the XML file to be skipped. It is analogous to the [`LOAD
    DATA`](load-data.html "15.2.9 LOAD DATA Statement") statement's `IGNORE ... LINES`
    clause.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`IGNORE *`number`* LINES`或`IGNORE *`number`* ROWS`子句导致XML文件中的前*`number`*行被跳过。这类似于[`LOAD
    DATA`](load-data.html "15.2.9 LOAD DATA Statement")语句的`IGNORE ... LINES`子句。'
- en: 'Suppose that we have a table named `person`, created as shown here:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个名为`person`的表，如下所示创建：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Suppose further that this table is initially empty.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步假设此表最初为空。
- en: 'Now suppose that we have a simple XML file `person.xml`, whose contents are
    as shown here:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在假设我们有一个简单的XML文件`person.xml`，其内容如下所示：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Each of the permissible XML formats discussed previously is represented in this
    example file.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例文件中表示了先前讨论的每种允许的XML格式。
- en: 'To import the data in `person.xml` into the `person` table, you can use this
    statement:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要将`person.xml`中的数据导入`person`表中，可以使用以下语句：
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here, we assume that `person.xml` is located in the MySQL data directory. If
    the file cannot be found, the following error results:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们假设`person.xml`位于MySQL数据目录中。如果找不到文件，将出现以下错误：
- en: '[PRE8]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `ROWS IDENTIFIED BY '<person>'` clause means that each `<person>` element
    in the XML file is considered equivalent to a row in the table into which the
    data is to be imported. In this case, this is the `person` table in the `test`
    database.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`ROWS IDENTIFIED BY ''<person>''`子句意味着XML文件中的每个`<person>`元素被视为要导入数据的表中的一行。在这种情况下，这是`test`数据库中的`person`表。'
- en: 'As can be seen by the response from the server, 8 rows were imported into the
    `test.person` table. This can be verified by a simple [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从服务器的响应可以看出，有8行被导入到`test.person`表中。可以通过简单的[`SELECT`](select.html "15.2.13 SELECT
    Statement")语句进行验证：
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This shows, as stated earlier in this section, that any or all of the 3 permitted
    XML formats may appear in a single file and be read using [`LOAD XML`](load-xml.html
    "15.2.10 LOAD XML Statement").
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本节前面所述，任何或所有3种允许的XML格式都可以出现在单个文件中，并且可以使用[`LOAD XML`](load-xml.html "15.2.10 LOAD
    XML Statement")进行读取。
- en: 'The inverse of the import operation just shown—that is, dumping MySQL table
    data into an XML file—can be accomplished using the [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") client from the system shell, as shown here:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 刚刚展示的导入操作的反向操作——即将MySQL表数据转储到XML文件中——可以使用系统shell中的[**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client")客户端来完成，如下所示：
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The [`--xml`](mysql-command-options.html#option_mysql_xml) option causes the
    [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") client to
    use XML formatting for its output; the [`-e`](mysql-command-options.html#option_mysql_execute)
    option causes the client to execute the SQL statement immediately following the
    option. See [Section 6.5.1, “mysql — The MySQL Command-Line Client”](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client").
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[`--xml`](mysql-command-options.html#option_mysql_xml)选项使[**mysql**](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")客户端使用XML格式进行输出；[`-e`](mysql-command-options.html#option_mysql_execute)选项使客户端执行紧随选项后的SQL语句。参见[第6.5.1节，“mysql
    — The MySQL Command-Line Client”](mysql.html "6.5.1 mysql — The MySQL Command-Line
    Client")。'
- en: 'You can verify that the dump is valid by creating a copy of the `person` table
    and importing the dump file into the new table, like this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过创建`person`表的副本并将转储文件导入新表来验证转储是否有效，如下所示：
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'There is no requirement that every field in the XML file be matched with a
    column in the corresponding table. Fields which have no corresponding columns
    are skipped. You can see this by first emptying the `person2` table and dropping
    the `created` column, then using the same [`LOAD XML`](load-xml.html "15.2.10 LOAD
    XML Statement") statement we just employed previously, like this:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: XML文件中的每个字段都不必与相应表中的列匹配。没有相应列的字段将被跳过。您可以通过首先清空`person2`表并删除`created`列，然后使用我们之前使用的相同的[`LOAD
    XML`](load-xml.html "15.2.10 LOAD XML Statement")语句来查看这一点，如下所示：
- en: '[PRE12]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The order in which the fields are given within each row of the XML file does
    not affect the operation of [`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement");
    the field order can vary from row to row, and is not required to be in the same
    order as the corresponding columns in the table.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: XML文件中每行中给定字段的顺序不会影响[`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement")的操作；字段顺序可以在行与行之间变化，并且不需要与表中相应列的顺序相同。
- en: 'As mentioned previously, you can use a `(*`field_name_or_user_var`*, ...)`
    list of one or more XML fields (to select desired fields only) or user variables
    (to store the corresponding field values for later use). User variables can be
    especially useful when you want to insert data from an XML file into table columns
    whose names do not match those of the XML fields. To see how this works, we first
    create a table named `individual` whose structure matches that of the `person`
    table, but whose columns are named differently:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，你可以使用一个`(*`field_name_or_user_var`*, ...)`列表选择一个或多个XML字段（仅选择所需字段）或用户变量（存储相应字段值以供以后使用）。当你想要将数据从XML文件插入到表列中的名称与XML字段不匹配时，用户变量尤其有用。为了看到这是如何工作的，我们首先创建一个名为`individual`的表，其结构与`person`表相匹配，但列名不同：
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In this case, you cannot simply load the XML file directly into the table,
    because the field and column names do not match:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你不能简单地直接将XML文件加载到表中，因为字段和列名不匹配：
- en: '[PRE14]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This happens because the MySQL server looks for field names matching the column
    names of the target table. You can work around this problem by selecting the field
    values into user variables, then setting the target table''s columns equal to
    the values of those variables using `SET`. You can perform both of these operations
    in a single statement, as shown here:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为MySQL服务器会查找与目标表的列名匹配的字段名。你可以通过将字段值选择到用户变量中，然后使用`SET`将目标表的列设置为这些变量的值来解决这个问题。你可以在单个语句中执行这两个操作，如下所示：
- en: '[PRE15]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The names of the user variables *must* match those of the corresponding fields
    from the XML file, with the addition of the required `@` prefix to indicate that
    they are variables. The user variables need not be listed or assigned in the same
    order as the corresponding fields.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 用户变量的名称*必须*与XML文件中相应字段的名称匹配，并添加必需的`@`前缀以指示它们是变量。用户变量不需要按照相应字段的顺序列出或分配。
- en: 'Using a `ROWS IDENTIFIED BY ''<*`tagname`*>''` clause, it is possible to import
    data from the same XML file into database tables with different definitions. For
    this example, suppose that you have a file named `address.xml` which contains
    the following XML:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ROWS IDENTIFIED BY '<*`tagname`*>'`子句，可以将来自相同XML文件的数据导入到具有不同定义的数据库表中。例如，假设你有一个名为`address.xml`的文件，其中包含以下XML：
- en: '[PRE16]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You can again use the `test.person` table as defined previously in this section,
    after clearing all the existing records from the table and then showing its structure
    as shown here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在清空表中的所有现有记录并显示其结构后，你可以再次使用本节中先前定义的`test.person`表，如下所示：
- en: '[PRE17]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now create an `address` table in the `test` database using the following [`CREATE
    TABLE`](create-table.html "15.1.20 CREATE TABLE Statement") statement:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在`test`数据库中使用以下[`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")语句创建一个`address`表：
- en: '[PRE18]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: To import the data from the XML file into the `person` table, execute the following
    [`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement") statement, which specifies
    that rows are to be specified by the `<person>` element, as shown here;
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要将XML文件中的数据导入到`person`表中，请执行以下[`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement")语句，该语句指定了行应由`<person>`元素指定，如下所示；
- en: '[PRE19]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You can verify that the records were imported using a [`SELECT`](select.html
    "15.2.13 SELECT Statement") statement:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过[`SELECT`](select.html "15.2.13 SELECT Statement")语句验证记录是否已导入：
- en: '[PRE20]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Since the `<address>` elements in the XML file have no corresponding columns
    in the `person` table, they are skipped.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于XML文件中的`<address>`元素在`person`表中没有对应的列，因此它们被跳过。
- en: 'To import the data from the `<address>` elements into the `address` table,
    use the [`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement") statement shown
    here:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要将`<address>`元素中的数据导入到`address`表中，请使用以下显示的[`LOAD XML`](load-xml.html "15.2.10 LOAD
    XML Statement")语句：
- en: '[PRE21]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can see that the data was imported using a [`SELECT`](select.html "15.2.13 SELECT
    Statement") statement such as this one:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过类似于这样的[`SELECT`](select.html "15.2.13 SELECT Statement")语句查看导入的数据：
- en: '[PRE22]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The data from the `<address>` element that is enclosed in XML comments is not
    imported. However, since there is a `person_id` column in the `address` table,
    the value of the `person_id` attribute from the parent `<person>` element for
    each `<address>` *is* imported into the `address` table.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 被XML注释包围的`<address>`元素中的数据不会被导入。然而，由于`address`表中有一个`person_id`列，因此每个`<address>`元素的父级`<person>`元素的`person_id`属性值*会*被导入到`address`表中。
- en: '**Security Considerations. ** As with the [`LOAD DATA`](load-data.html "15.2.9 LOAD
    DATA Statement") statement, the transfer of the XML file from the client host
    to the server host is initiated by the MySQL server. In theory, a patched server
    could be built that would tell the client program to transfer a file of the server''s
    choosing rather than the file named by the client in the [`LOAD XML`](load-xml.html
    "15.2.10 LOAD XML Statement") statement. Such a server could access any file on
    the client host to which the client user has read access.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全注意事项。** 与 [`LOAD DATA`](load-data.html "15.2.9 LOAD DATA Statement") 语句一样，从客户端主机到服务器主机的
    XML 文件传输是由 MySQL 服务器发起的。理论上，可以构建一个经过修补的服务器，告诉客户端程序传输服务器选择的文件，而不是客户端在 [`LOAD XML`](load-xml.html
    "15.2.10 LOAD XML Statement") 语句中命名的文件。这样的服务器可以访问客户端主机上客户端用户具有读取权限的任何文件。'
- en: In a Web environment, clients usually connect to MySQL from a Web server. A
    user that can run any command against the MySQL server can use [`LOAD XML LOCAL`](load-xml.html
    "15.2.10 LOAD XML Statement") to read any files to which the Web server process
    has read access. In this environment, the client with respect to the MySQL server
    is actually the Web server, not the remote program being run by the user who connects
    to the Web server.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Web 环境中，客户端通常从 Web 服务器连接到 MySQL。可以运行任何命令来针对 MySQL 服务器的用户可以使用 [`LOAD XML LOCAL`](load-xml.html
    "15.2.10 LOAD XML Statement") 读取 Web 服务器进程具有读取权限的任何文件。在这种环境中，相对于 MySQL 服务器的客户端实际上是
    Web 服务器，而不是连接到 Web 服务器的用户运行的远程程序。
- en: You can disable loading of XML files from clients by starting the server with
    [`--local-infile=0`](server-system-variables.html#sysvar_local_infile) or [`--local-infile=OFF`](server-system-variables.html#sysvar_local_infile).
    This option can also be used when starting the [**mysql**](mysql.html "6.5.1 mysql
    — The MySQL Command-Line Client") client to disable [`LOAD XML`](load-xml.html
    "15.2.10 LOAD XML Statement") for the duration of the client session.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用 [`--local-infile=0`](server-system-variables.html#sysvar_local_infile)
    或 [`--local-infile=OFF`](server-system-variables.html#sysvar_local_infile) 启动服务器来禁用客户端加载
    XML 文件。在启动 [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client")
    客户端时，也可以使用此选项禁用客户端会话期间的 [`LOAD XML`](load-xml.html "15.2.10 LOAD XML Statement")。
- en: To prevent a client from loading XML files from the server, do not grant the
    [`FILE`](privileges-provided.html#priv_file) privilege to the corresponding MySQL
    user account, or revoke this privilege if the client user account already has
    it.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要阻止客户端从服务器加载 XML 文件，不要向相应的 MySQL 用户帐户授予 [`FILE`](privileges-provided.html#priv_file)
    权限，或者如果客户端用户帐户已经具有该权限，则撤销此权限。
- en: Important
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 重要
- en: Revoking the [`FILE`](privileges-provided.html#priv_file) privilege (or not
    granting it in the first place) keeps the user only from executing the [`LOAD
    XML`](load-xml.html "15.2.10 LOAD XML Statement") statement (as well as the [`LOAD_FILE()`](string-functions.html#function_load-file)
    function; it does *not* prevent the user from executing [`LOAD XML LOCAL`](load-xml.html
    "15.2.10 LOAD XML Statement"). To disallow this statement, you must start the
    server or the client with `--local-infile=OFF`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 撤销 [`FILE`](privileges-provided.html#priv_file) 权限（或者一开始不授予它）只会阻止用户执行 [`LOAD
    XML`](load-xml.html "15.2.10 LOAD XML Statement") 语句（以及 [`LOAD_FILE()`](string-functions.html#function_load-file)
    函数；它 *不* 阻止用户执行 [`LOAD XML LOCAL`](load-xml.html "15.2.10 LOAD XML Statement")。要禁止此语句，必须使用
    `--local-infile=OFF` 启动服务器或客户端。
- en: In other words, the [`FILE`](privileges-provided.html#priv_file) privilege affects
    only whether the client can read files on the server; it has no bearing on whether
    the client can read files on the local file system.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，[`FILE`](privileges-provided.html#priv_file) 权限仅影响客户端是否可以读取服务器上的文件；它与客户端是否可以读取本地文件系统上的文件无关。
