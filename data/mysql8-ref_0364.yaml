- en: 8.2.4 Specifying Account Names
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8.2.4 指定账户名
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/account-names.html](https://dev.mysql.com/doc/refman/8.0/en/account-names.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/account-names.html](https://dev.mysql.com/doc/refman/8.0/en/account-names.html)
- en: MySQL account names consist of a user name and a host name, which enables creation
    of distinct accounts for users with the same user name who connect from different
    hosts. This section describes the syntax for account names, including special
    values and wildcard rules.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL账户名由用户名和主机名组成，这使得可以为从不同主机连接的具有相同用户名的用户创建不同的账户。本节描述了账户名的语法，包括特殊值和通配符规则。
- en: In most respects, account names are similar to MySQL role names, with some differences
    described at [Section 8.2.5, “Specifying Role Names”](role-names.html "8.2.5 Specifying
    Role Names").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数方面，账户名与MySQL角色名类似，但有一些差异，详见[第8.2.5节“指定角色名”](role-names.html "8.2.5 指定角色名")。
- en: 'Account names appear in SQL statements such as [`CREATE USER`](create-user.html
    "15.7.1.3 CREATE USER Statement"), [`GRANT`](grant.html "15.7.1.6 GRANT Statement"),
    and [`SET PASSWORD`](set-password.html "15.7.1.10 SET PASSWORD Statement") and
    follow these rules:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 账户名出现在SQL语句中，如[`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")、[`GRANT`](grant.html
    "15.7.1.6 GRANT Statement")和[`SET PASSWORD`](set-password.html "15.7.1.10 SET
    PASSWORD Statement")，并遵循以下规则：
- en: Account name syntax is `'*`user_name`*'@'*`host_name`*'`.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账户名语法为`'*`user_name`*'@'*`host_name`*'`。
- en: The `@'*`host_name`*'` part is optional. An account name consisting only of
    a user name is equivalent to `'*`user_name`*'@'%'`. For example, `'me'` is equivalent
    to `'me'@'%'`.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@''*`host_name`*''`部分是可选的。仅由用户名组成的账户名等同于`''*`user_name`*''@''%''`。例如，`''me''`等同于`''me''@''%''`。'
- en: The user name and host name need not be quoted if they are legal as unquoted
    identifiers. Quotes must be used if a *`user_name`* string contains special characters
    (such as space or `-`), or a *`host_name`* string contains special characters
    or wildcard characters (such as `.` or `%`). For example, in the account name
    `'test-user'@'%.com'`, both the user name and host name parts require quotes.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户名和主机名作为未引用的标识符是合法的，则不需要加引号。如果*`user_name`*字符串包含特殊字符（如空格或`-`），或者*`host_name`*字符串包含特殊字符或通配符字符（如`.`或`%`），则必须使用引号。例如，在账户名`'test-user'@'%.com'`中，用户名称和主机名部分都需要引号。
- en: Quote user names and host names as identifiers or as strings, using either backticks
    ([PRE0]).
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将用户名称和主机名引用为标识符或字符串，可以使用反引号进行引用。
- en: The user name and host name parts, if quoted, must be quoted separately. That
    is, write `'me'@'localhost'`, not `'me@localhost'`. (The latter is actually equivalent
    to `'me@localhost'@'%'`, although this behavior is now deprecated.)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户名和主机名部分被引用，则必须分别引用。也就是说，写成`'me'@'localhost'`，而不是`'me@localhost'`。（后者实际上等同于`'me@localhost'@'%'`，尽管这种行为现在已被弃用。）
- en: A reference to the [`CURRENT_USER`](information-functions.html#function_current-user)
    or [`CURRENT_USER()`](information-functions.html#function_current-user) function
    is equivalent to specifying the current client's user name and host name literally.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对[`CURRENT_USER`](information-functions.html#function_current-user)或[`CURRENT_USER()`](information-functions.html#function_current-user)函数的引用等同于直接指定当前客户端的用户名和主机名。
- en: 'MySQL stores account names in grant tables in the `mysql` system database using
    separate columns for the user name and host name parts:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL使用独立列在`mysql`系统数据库的授权表中存储账户名的用户名称和主机名部分：
- en: The `user` table contains one row for each account. The `User` and `Host` columns
    store the user name and host name. This table also indicates which global privileges
    the account has.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user`表为每个账户包含一行。`User`和`Host`列存储用户名和主机名。该表还指示了账户具有哪些全局权限。'
- en: Other grant tables indicate privileges an account has for databases and objects
    within databases. These tables have `User` and `Host` columns to store the account
    name. Each row in these tables associates with the account in the `user` table
    that has the same `User` and `Host` values.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他授权表显示了账户对数据库和数据库内对象的权限。这些表有`User`和`Host`列用于存储账户名。这些表中的每一行都与`user`表中具有相同`User`和`Host`值的账户相关联。
- en: For access-checking purposes, comparisons of User values are case-sensitive.
    Comparisons of Host values are not case-sensitive.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于访问检查目的，User值的比较区分大小写。Host值的比较不区分大小写。
- en: For additional detail about the properties of user names and host names as stored
    in the grant tables, such as maximum length, see [Grant Table Scope Column Properties](grant-tables.html#grant-tables-scope-column-properties
    "Grant Table Scope Column Properties").
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有关存储在授权表中的用户名称和主机名属性的详细信息，例如最大长度，请参阅[Grant Table Scope Column Properties](grant-tables.html#grant-tables-scope-column-properties
    "Grant Table Scope Column Properties")。
- en: User names and host names have certain special values or wildcard conventions,
    as described following.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 用户名和主机名具有特定的特殊值或通配符约定，如下所述。
- en: The user name part of an account name is either a nonblank value that literally
    matches the user name for incoming connection attempts, or a blank value (the
    empty string) that matches any user name. An account with a blank user name is
    an anonymous user. To specify an anonymous user in SQL statements, use a quoted
    empty user name part, such as `''@'localhost'`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 帐户名的用户名部分要么是一个非空值，字面上匹配传入连接尝试的用户名，要么是一个空值（空字符串），匹配任何用户名。具有空用户名的帐户是匿名用户。要在SQL语句中指定匿名用户，请使用带引号的空用户名部分，例如`''@'localhost'`。
- en: 'The host name part of an account name can take many forms, and wildcards are
    permitted:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 帐户名的主机名部分可以采用多种形式，并且允许使用通配符：
- en: A host value can be a host name or an IP address (IPv4 or IPv6). The name `'localhost'`
    indicates the local host. The IP address `'127.0.0.1'` indicates the IPv4 loopback
    interface. The IP address `'::1'` indicates the IPv6 loopback interface.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机值可以是主机名或IP地址（IPv4或IPv6）。名称`'localhost'`表示本地主机。IP地址`'127.0.0.1'`表示IPv4环回接口。IP地址`'::1'`表示IPv6环回接口。
- en: Use of the `%` and `_` wildcard characters is permitted in host name or IP address
    values, but is deprecated as of MySQL 8.0.35, and thus subject to removal in a
    future version of MySQL. These characters have the same meaning as for pattern-matching
    operations performed with the [`LIKE`](string-comparison-functions.html#operator_like)
    operator. For example, a host value of `'%'` matches any host name, whereas a
    value of `'%.mysql.com'` matches any host in the `mysql.com` domain. `'198.51.100.%'`
    matches any host in the 198.51.100 class C network.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主机名或IP地址值中允许使用`%`和`_`通配符字符，但自MySQL 8.0.35起已不推荐使用，并且可能在将来的MySQL版本中删除。这些字符的含义与使用[`LIKE`](string-comparison-functions.html#operator_like)运算符执行的模式匹配操作相同。例如，主机值`'%'`匹配任何主机名，而值`'%.mysql.com'`匹配`mysql.com`域中的任何主机。`'198.51.100.%'`匹配198.51.100类C网络中的任何主机。
- en: Because IP wildcard values are permitted in host values (for example, `'198.51.100.%'`
    to match every host on a subnet), someone could try to exploit this capability
    by naming a host `198.51.100.somewhere.com`. To foil such attempts, MySQL does
    not perform matching on host names that start with digits and a dot. For example,
    if a host is named `1.2.example.com`, its name never matches the host part of
    account names. An IP wildcard value can match only IP addresses, not host names.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为主机值中允许使用IP通配符值（例如，`'198.51.100.%'`匹配子网上的每个主机），因此某人可能尝试利用此功能，将主机命名为`198.51.100.somewhere.com`。为了阻止这种尝试，MySQL不会对以数字和点开头的主机名进行匹配。例如，如果主机名为`1.2.example.com`，其名称永远不会与帐户名的主机部分匹配。IP通配符值只能匹配IP地址，而不能匹配主机名。
- en: If [`partial_revokes`](server-system-variables.html#sysvar_partial_revokes)
    is `ON`, MySQL treats `%` and `_` in grants as literal characters, and not as
    wildcards. Beginning with MySQL 8.0.35, use of these wildcards is deprecated (regardless
    of this variable's value), and you should expect this functionality to be removed
    in a future version of MySQL.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果[`partial_revokes`](server-system-variables.html#sysvar_partial_revokes)为`ON`，MySQL将`%`和`_`视为文字字符，而不是通配符。从MySQL
    8.0.35开始，不推荐使用这些通配符（无论此变量的值如何），您应该期望这种功能在将来的MySQL版本中被移除。
- en: For a host value specified as an IPv4 address, a netmask can be given to indicate
    how many address bits to use for the network number. Netmask notation cannot be
    used for IPv6 addresses.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于指定为IPv4地址的主机值，可以提供一个子网掩码来指示用于网络号的地址位数。子网掩码表示法不能用于IPv6地址。
- en: 'The syntax is `*`host_ip`*/*`netmask`*`. For example:'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语法是`*`host_ip`*/*`netmask`*`。例如：
- en: '[PRE1]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This enables `david` to connect from any client host having an IP address *`client_ip`*
    for which the following condition is true:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这使得`david`可以从具有IP地址*`client_ip`*的任何客户端主机连接，条件如下：
- en: '[PRE2]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'That is, for the [`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")
    statement just shown:'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于刚刚显示的[`CREATE USER`](create-user.html "15.7.1.3 CREATE USER Statement")语句：
- en: '[PRE3]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: IP addresses that satisfy this condition range from `198.51.100.0` to `198.51.100.255`.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 满足此条件的 IP 地址范围从 `198.51.100.0` 到 `198.51.100.255`。
- en: 'A netmask typically begins with bits set to 1, followed by bits set to 0\.
    Examples:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 掩码通常以设置为 1 的位开始，然后是设置为 0 的位。示例：
- en: '`198.0.0.0/255.0.0.0`: Any host on the 198 class A network'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`198.0.0.0/255.0.0.0`: 198 类 A 网络上的任何主机'
- en: '`198.51.0.0/255.255.0.0`: Any host on the 198.51 class B network'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`198.51.0.0/255.255.0.0`: 198.51 类 B 网络上的任何主机'
- en: '`198.51.100.0/255.255.255.0`: Any host on the 198.51.100 class C network'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`198.51.100.0/255.255.255.0`: 198.51.100 类 C 网络上的任何主机'
- en: '`198.51.100.1`: Only the host with this specific IP address'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`198.51.100.1`: 仅具有此特定 IP 地址的主机'
- en: As of MySQL 8.0.23, a host value specified as an IPv4 address can be written
    using CIDR notation, such as `198.51.100.44/24`.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自 MySQL 8.0.23 起，指定为 IPv4 地址的主机值可以使用 CIDR 表示法，例如 `198.51.100.44/24`。
- en: 'The server performs matching of host values in account names against the client
    host using the value returned by the system DNS resolver for the client host name
    or IP address. Except in the case that the account host value is specified using
    netmask notation, the server performs this comparison as a string match, even
    for an account host value given as an IP address. This means that you should specify
    account host values in the same format used by DNS. Here are examples of problems
    to watch out for:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器通过系统 DNS 解析器返回的客户端主机名或 IP 地址的值来匹配帐户名称中的主机值。除非使用网络掩码表示帐户主机值，服务器将执行此比较作为字符串匹配，即使帐户主机值以
    IP 地址形式给出。这意味着您应该以 DNS 使用的相同格式指定帐户主机值。以下是需要注意的问题示例：
- en: Suppose that a host on the local network has a fully qualified name of `host1.example.com`.
    If DNS returns name lookups for this host as `host1.example.com`, use that name
    in account host values. If DNS returns just `host1`, use `host1` instead.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设本地网络上的主机具有完全限定名称 `host1.example.com`。如果 DNS 返回此主机的名称查找为 `host1.example.com`，请在帐户主机值中使用该名称。如果
    DNS 只返回 `host1`，请改用 `host1`。
- en: If DNS returns the IP address for a given host as `198.51.100.2`, that matches
    an account host value of `198.51.100.2` but not `198.051.100.2`. Similarly, it
    matches an account host pattern like `198.51.100.%` but not `198.051.100.%`.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 DNS 返回给定主机的 IP 地址为 `198.51.100.2`，则匹配帐户主机值为 `198.51.100.2`，但不匹配 `198.051.100.2`。同样，它匹配帐户主机模式如
    `198.51.100.%`，但不匹配 `198.051.100.%`。
- en: To avoid problems like these, it is advisable to check the format in which your
    DNS returns host names and addresses. Use values in the same format in MySQL account
    names.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为避免此类问题，建议检查 DNS 返回主机名和地址的格式。在 MySQL 帐户名称中使用相同格式的值。
