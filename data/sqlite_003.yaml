- en: 1\. Situations Where SQLite Works Well
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. SQLite适用的情况
- en: 原文：[https://sqlite.com/whentouse.html](https://sqlite.com/whentouse.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/whentouse.html](https://sqlite.com/whentouse.html)
- en: SQLite is not directly comparable to client/server SQL database engines such
    as MySQL, Oracle, PostgreSQL, or SQL Server since SQLite is trying to solve a
    different problem.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite与MySQL、Oracle、PostgreSQL或SQL Server等客户端/服务器SQL数据库引擎不直接可比，因为SQLite正试图解决不同的问题。
- en: Client/server SQL database engines strive to implement a shared repository of
    enterprise data. They emphasize scalability, concurrency, centralization, and
    control. SQLite strives to provide local data storage for individual applications
    and devices. SQLite emphasizes economy, efficiency, reliability, independence,
    and simplicity.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端/服务器SQL数据库引擎致力于实现企业数据的共享存储库。它们强调可扩展性、并发性、集中化和控制。SQLite则致力于为个别应用程序和设备提供本地数据存储。SQLite强调经济性、效率、可靠性、独立性和简单性。
- en: SQLite does not compete with client/server databases. SQLite competes with [fopen()](http://man.he.net/man3/fopen).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite并不与客户端/服务器数据库竞争。SQLite与[fopen()](http://man.he.net/man3/fopen)竞争。
- en: '**Embedded devices and the internet of things**'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**嵌入式设备和物联网**'
- en: 'Because an SQLite database requires no administration, it works well in devices
    that must operate without expert human support. SQLite is a good fit for use in
    cellphones, set-top boxes, televisions, game consoles, cameras, watches, kitchen
    appliances, thermostats, automobiles, machine tools, airplanes, remote sensors,
    drones, medical devices, and robots: the "internet of things".'
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为SQLite数据库不需要管理，所以它非常适合在必须在没有专家支持的情况下运行的设备中使用。SQLite非常适合用于手机、机顶盒、电视、游戏机、摄像头、手表、厨房电器、恒温器、汽车、机床、飞机、远程传感器、无人机、医疗设备和机器人等："物联网"设备。
- en: Client/server database engines are designed to live inside a lovingly-attended
    datacenter at the core of the network. SQLite works there too, but SQLite also
    thrives at the edge of the network, fending for itself while providing fast and
    reliable data services to applications that would otherwise have dodgy connectivity.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 客户端/服务器数据库引擎设计用于生活在网络核心的精心管理的数据中心中。SQLite在那里也能工作，但SQLite也可以在网络边缘繁荣发展，自力更生，为本来可能有不稳定连接的应用程序提供快速和可靠的数据服务。
- en: '**Application file format**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序文件格式**'
- en: SQLite is often used as the on-disk file format for desktop applications such
    as version control systems, financial analysis tools, media cataloging and editing
    suites, CAD packages, record keeping programs, and so forth. The traditional File/Open
    operation calls sqlite3_open() to attach to the database file. Updates happen
    automatically as application content is revised so the File/Save menu option becomes
    superfluous. The File/Save_As menu option can be implemented using the [backup
    API](backup.html).
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite通常被用作桌面应用程序的磁盘文件格式，例如版本控制系统、财务分析工具、媒体目录和编辑套件、CAD软件、记录管理程序等等。传统的文件/打开操作调用sqlite3_open()来连接数据库文件。随着应用内容的更新，更新操作会自动发生，因此文件/保存菜单选项变得多余。可以使用[备份API](backup.html)来实现文件/另存为菜单选项。
- en: There are many benefits to this approach, including improved performance, reduced
    cost and complexity, and improved reliability. See technical notes ["aff_short.html"](aff_short.html)
    and ["appfileformat.html"](appfileformat.html) and ["fasterthanfs.html"](fasterthanfs.html)
    for more information. This use case is closely related to the [data transfer format](#wireproto)
    and [data container](#container) use cases below.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这种方法有很多好处，包括提高性能、降低成本和复杂性、提高可靠性。更多信息请参阅技术笔记["aff_short.html"](aff_short.html)、["appfileformat.html"](appfileformat.html)和["fasterthanfs.html"](fasterthanfs.html)。此用例与下面的[数据传输格式](#wireproto)和[数据容器](#container)用例密切相关。
- en: '**Websites**'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网站**'
- en: SQLite works great as the database engine for most low to medium traffic websites
    (which is to say, most websites). The amount of web traffic that SQLite can handle
    depends on how heavily the website uses its database. Generally speaking, any
    site that gets fewer than 100K hits/day should work fine with SQLite. The 100K
    hits/day figure is a conservative estimate, not a hard upper bound. SQLite has
    been demonstrated to work with 10 times that amount of traffic.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite非常适合作为大多数低到中等流量网站的数据库引擎（也就是说，大多数网站）。SQLite能处理的网站流量量取决于网站对其数据库的使用情况。一般来说，任何每天少于100K次点击的网站都可以很好地使用SQLite。这个每天100K次点击的数字是一个保守估计，而不是严格的上限。SQLite已经被证明可以处理比这多10倍的流量。
- en: The SQLite website ([https://www.sqlite.org/](https://www.sqlite.org/)) uses
    SQLite itself, of course, and as of this writing (2015) it handles about 400K
    to 500K HTTP requests per day, about 15-20% of which are dynamic pages touching
    the database. Dynamic content uses [about 200 SQL statements per webpage](np1queryprob.html).
    This setup runs on a single VM that shares a physical server with 23 others and
    yet still keeps the load average below 0.1 most of the time.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当然，SQLite 的网站（[https://www.sqlite.org/](https://www.sqlite.org/)）本身也使用 SQLite，并且截至本文撰写时（2015
    年），它每天处理大约 40 到 50 万次 HTTP 请求，其中约 15-20% 是涉及数据库的动态页面。动态内容每个网页使用 [约 200 条 SQL 语句](np1queryprob.html)。该设置在一个与其他
    23 台物理服务器共享的单个虚拟机上运行，大多数时间负载平均值低于 0.1。
- en: 'See also: [Hacker New discussion from 2022-12-13](https://news.ycombinator.com/item?id=33975635).'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另请参阅：[2022-12-13 的 Hacker News 讨论](https://news.ycombinator.com/item?id=33975635)。
- en: '**Data analysis**'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据分析**'
- en: People who understand SQL can employ the [sqlite3 command-line shell](cli.html)
    (or various third-party SQLite access programs) to analyze large datasets. Raw
    data can be imported from CSV files, then that data can be sliced and diced to
    generate a myriad of summary reports. More complex analysis can be done using
    simple scripts written in Tcl or Python (both of which come with SQLite built-in)
    or in R or other languages using readily available adaptors. Possible uses include
    website log analysis, sports statistics analysis, compilation of programming metrics,
    and analysis of experimental results. Many bioinformatics researchers use SQLite
    in this way.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 理解 SQL 的人可以使用 [sqlite3 命令行 shell](cli.html)（或各种第三方 SQLite 访问程序）来分析大型数据集。原始数据可以从
    CSV 文件导入，然后可以对这些数据进行切片和切块，生成大量的汇总报告。可以使用内置 SQLite 的 Tcl 或 Python 简单脚本，或者使用可用的适配器在
    R 或其他语言中执行更复杂的分析。可能的用途包括网站日志分析、体育统计分析、编程指标汇编以及实验结果分析。许多生物信息学研究人员以这种方式使用 SQLite。
- en: The same thing can be done with an enterprise client/server database, of course.
    The advantage of SQLite is that it is easier to install and use and the resulting
    database is a single file that can be written to a USB memory stick or emailed
    to a colleague.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当然，企业客户/服务器数据库也可以完成同样的事情。SQLite 的优势在于更容易安装和使用，并且生成的数据库是一个单独的文件，可以写入 USB 存储器或通过电子邮件发送给同事。
- en: '**Cache for enterprise data**'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**企业数据缓存**'
- en: Many applications use SQLite as a cache of relevant content from an enterprise
    RDBMS. This reduces latency, since most queries now occur against the local cache
    and avoid a network round-trip. It also reduces the load on the network and on
    the central database server. And in many cases, it means that the client-side
    application can continue operating during network outages.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 许多应用程序将 SQLite 用作来自企业关系型数据库（RDBMS）的相关内容的缓存。这降低了延迟，因为现在大多数查询发生在本地缓存中，避免了网络往返。它还减少了网络和中央数据库服务器的负载。在许多情况下，这意味着客户端应用程序可以在网络中断期间继续运行。
- en: '**Server-side database**'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务器端数据库**'
- en: Systems designers report success using SQLite as a data store on server applications
    running in the datacenter, or in other words, using SQLite as the underlying storage
    engine for an application-specific database server.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 系统设计师报告称，在数据中心运行的服务器应用程序中使用 SQLite 作为数据存储，换句话说，将 SQLite 作为应用特定数据库服务器的底层存储引擎。
- en: 'With this pattern, the overall system is still client/server: clients send
    requests to the server and get back replies over the network. But instead of sending
    generic SQL and getting back raw table content, the client requests and server
    responses are high-level and application-specific. The server translates requests
    into multiple SQL queries, gathers the results, does post-processing, filtering,
    and analysis, then constructs a high-level reply containing only the essential
    information.'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种模式下，整个系统仍然是客户端/服务器模式：客户端向服务器发送请求，并通过网络获取回复。但是，与发送通用 SQL 并获取原始表内容不同，客户端的请求和服务器的响应是高级和特定于应用程序的。服务器将请求转换为多个
    SQL 查询，收集结果，进行后处理、过滤和分析，然后构造一个只包含基本信息的高级回复。
- en: 'Developers report that SQLite is often faster than a client/server SQL database
    engine in this scenario. Database requests are serialized by the server, so concurrency
    is not an issue. Concurrency is also improved by "database sharding": using separate
    database files for different subdomains. For example, the server might have a
    separate SQLite database for each user, so that the server can handle hundreds
    or thousands of simultaneous connections, but each SQLite database is only used
    by one connection.'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开发人员报告称，在这种情况下，SQLite 通常比客户端/服务器 SQL 数据库引擎更快。数据库请求由服务器串行化，所以并发性不是问题。通过“数据库分片”也可以改善并发性：为不同子域使用单独的数据库文件。例如，服务器可能为每个用户有一个独立的
    SQLite 数据库，以便服务器可以处理数百或数千个同时连接，但每个 SQLite 数据库只由一个连接使用。
- en: '**Data transfer format**'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据传输格式**'
- en: Because an SQLite database is a single compact file in a [well-defined cross-platform
    format](fileformat2.html), it is often used as a container for transferring content
    from one system to another. The sender gathers content into an SQLite database
    file, transfers that one file to the receiver, then the receiver uses SQL to extract
    the content as needed.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为 SQLite 数据库是一个 [定义明确的跨平台格式](fileformat2.html) 中的单个紧凑文件，所以经常用作从一个系统向另一个系统传输内容的容器。发送方将内容收集到一个
    SQLite 数据库文件中，将该文件传输给接收方，然后接收方使用 SQL 根据需要提取内容。
- en: An SQLite database facilitates data transfer between systems even when the endpoints
    have different word sizes and/or byte orders. The data can be a complex mix of
    large binary blobs, text, and small numeric or boolean values. The data format
    can be easily extended by adding new tables and/or columns, without breaking legacy
    receivers. The SQL query language means that receivers are not required to parse
    the entire transfer all at once, but can instead query the received content as
    needed. The data format is "transparent" in the sense that it is easily decoded
    for human viewing using a variety of universally available, open-source tools,
    from multiple vendors.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 即使端点的字长和/或字节顺序不同，SQLite 数据库也能方便地在系统之间传输数据。数据可能是大型二进制大对象、文本和小数值或布尔值的复杂混合。数据格式可以通过添加新的表和/或列轻松扩展，而不会破坏旧的接收器。SQL
    查询语言意味着接收器不需要一次性解析整个传输内容，而是可以根据需要查询接收到的内容。数据格式是“透明的”，意味着可以使用多种普遍可用的开源工具，从多个供应商解码以便人类查看。
- en: '**File archive and/or data container**'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件归档和/或数据容器**'
- en: The [SQLite Archive](sqlar.html) idea shows how SQLite can be used as a substitute
    for ZIP archives or Tarballs. An archive of files stored in SQLite is only very
    slightly larger, and in some cases actually smaller, than the equivalent ZIP archive.
    And an SQLite archive features incremental and atomic updating and the ability
    to store much richer metadata.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[SQLite 归档](sqlar.html) 的概念展示了如何使用 SQLite 作为 ZIP 归档或 Tarballs 的替代品。存储在 SQLite
    中的文件归档只比等效的 ZIP 归档略大一些，在某些情况下甚至更小。SQLite 归档支持增量和原子更新，还能存储更丰富的元数据。'
- en: '[Fossil](https://www.fossil-scm.org/) version 2.5 and later offers [SQLite
    Archive files](sqlar.html) as a download format, in addition to traditional tarball
    and ZIP archive. The [sqlite3.exe command-line shell](cli.html) version 3.22.0
    and later will create, list, or unpack an SQL archiving using the [.archive command](cli.html#sqlar).'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[Fossil](https://www.fossil-scm.org/) 版本 2.5 及更高版本除了传统的 Tarball 和 ZIP 归档格式外，还提供
    [SQLite 归档文件](sqlar.html) 作为下载格式。[sqlite3.exe 命令行 shell](cli.html) 版本 3.22.0 及更高版本可以使用
    [.archive 命令](cli.html#sqlar) 创建、列出或解包 SQLite 归档。'
- en: SQLite is a good solution for any situation that requires bundling diverse content
    into a self-contained and self-describing package for shipment across a network.
    Content is encoded in a [well-defined, cross-platform, and stable file format](fileformat2.html).
    The encoding is efficient, and receivers can extract small subsets of the content
    without having to read and parse the entire file.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite 是将各种内容打包成自包含且自描述包以便通过网络传输的良好解决方案。内容编码在一个 [定义明确、跨平台且稳定的文件格式](fileformat2.html)
    中。编码高效，接收方可以提取内容的小子集而不必读取和解析整个文件。
- en: SQL archives are useful as the distribution format for software or content updates
    that are broadcast to many clients. Variations on this idea are used, for example,
    to transmit TV programming guides to set-top boxes and to send over-the-air updates
    to vehicle navigation systems.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQL 归档作为分发给多个客户端的软件或内容更新的分发格式非常有用。这个想法的变种被用于将电视节目指南传输到机顶盒，并向车载导航系统发送无线更新。
- en: '**Replacement for *ad hoc* disk files**'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**临时替代*特定*磁盘文件**'
- en: Many programs use [fopen()](http://man.he.net/man3/fopen), [fread()](http://man.he.net/man3/fread),
    and [fwrite()](http://man.he.net/man3/fwrite) to create and manage files of data
    in home-grown formats. SQLite works particularly well as a replacement for these
    *ad hoc* data files. Contrary to intuition, SQLite can be [faster than the filesystem](fasterthanfs.html)
    for reading and writing content to disk.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 许多程序使用[fopen()](http://man.he.net/man3/fopen)、[fread()](http://man.he.net/man3/fread)和[fwrite()](http://man.he.net/man3/fwrite)来创建和管理自定义格式的数据文件。SQLite特别适合作为这些*特定*数据文件的替代方案。与直觉相反，SQLite在读写磁盘内容方面可能比文件系统更快。
- en: '**Internal or temporary databases**'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内部或临时数据库**'
- en: For programs that have a lot of data that must be sifted and sorted in diverse
    ways, it is often easier and quicker to load the data into an in-memory SQLite
    database and use queries with joins and ORDER BY clauses to extract the data in
    the form and order needed rather than to try to code the same operations manually.
    Using an SQL database internally in this way also gives the program greater flexibility
    since new columns and indices can be added without having to recode every query.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于需要以各种方式筛选和排序大量数据的程序，通常将数据加载到内存中的SQLite数据库，并使用带有JOIN和ORDER BY子句的查询来提取所需的数据形式和顺序，比手动编码相同操作更容易且更快。以这种方式在程序内部使用SQL数据库还使得程序更具灵活性，因为可以添加新的列和索引而无需重新编码每个查询。
- en: '**Stand-in for an enterprise database during demos or testing**'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**企业数据库演示或测试的替代方案**'
- en: Client applications typically use a generic database interface that allows connections
    to various SQL database engines. It makes good sense to include SQLite in the
    mix of supported databases and to statically link the SQLite engine in with the
    client. That way the client program can be used standalone with an SQLite data
    file for testing or for demonstrations.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 客户端应用程序通常使用通用数据库接口，允许连接到各种SQL数据库引擎。在支持的数据库中包括SQLite并静态链接SQLite引擎到客户端是明智的选择。这样客户端程序就可以独立使用SQLite数据文件进行测试或演示。
- en: '**Education and Training**'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**教育与培训**'
- en: 'Because it is simple to setup and use (installation is trivial: just copy the
    **sqlite3** or **sqlite3.exe** executable to the target machine and run it) SQLite
    makes a good database engine for use in teaching SQL. Students can easily create
    as many databases as they like and can email databases to the instructor for comments
    or grading. For more advanced students who are interested in studying how an RDBMS
    is implemented, the modular and well-commented and documented SQLite code can
    serve as a good basis.'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因为设置和使用简单（安装非常简单：只需将**sqlite3**或**sqlite3.exe**可执行文件复制到目标机器并运行即可），SQLite非常适合用于教授SQL。学生们可以轻松创建任意数量的数据库，并可以通过电子邮件将数据库发送给教师以进行评语或评分。对于更进一步研究关系型数据库管理系统实现的高级学生来说，模块化且有良好注释和文档的SQLite代码可以作为一个很好的基础。
- en: '**Experimental SQL language extensions**'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实验性SQL语言扩展**'
- en: The simple, modular design of SQLite makes it a good platform for prototyping
    new, experimental database language features or ideas.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite的简单模块化设计使其成为原型设计新的实验性数据库语言特性或思路的良好平台。
- en: 2\. Situations Where A Client/Server RDBMS May Work Better
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 客户/服务器关系型数据库管理系统更适用的情况
- en: '**Client/Server Applications**'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户/服务器应用程序**'
- en: If there are many client programs sending SQL to the same database over a network,
    then use a client/server database engine instead of SQLite. SQLite will work over
    a network filesystem, but because of the latency associated with most network
    filesystems, performance will not be great. Also, file locking logic is buggy
    in many network filesystem implementations (on both Unix and Windows). If file
    locking does not work correctly, two or more clients might try to modify the same
    part of the same database at the same time, resulting in corruption. Because this
    problem results from bugs in the underlying filesystem implementation, there is
    nothing SQLite can do to prevent it.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果有许多客户端程序通过网络向同一个数据库发送SQL，则应使用客户/服务器数据库引擎而不是SQLite。SQLite可以在网络文件系统上工作，但由于大多数网络文件系统的延迟，性能不会很好。此外，许多网络文件系统实现中的文件锁逻辑存在错误（在Unix和Windows上均有）。如果文件锁定无法正常工作，则两个或更多客户端可能尝试同时修改同一数据库的同一部分，导致损坏。由于此问题源于底层文件系统实现的错误，SQLite无法防止此类问题的发生。
- en: A good rule of thumb is to avoid using SQLite in situations where the same database
    will be accessed directly (without an intervening application server) and simultaneously
    from many computers over a network.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个好的经验法则是在同一数据库将直接（无中间应用程序服务器）且同时从许多计算机上网络访问时，避免使用SQLite。
- en: '**High-volume Websites**'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高流量网站**'
- en: SQLite will normally work fine as the database backend to a website. But if
    the website is write-intensive or is so busy that it requires multiple servers,
    then consider using an enterprise-class client/server database engine instead
    of SQLite.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite通常可以作为网站的数据库后端正常工作。但是，如果网站的写入操作很频繁，或者非常繁忙以至于需要多台服务器，则考虑使用企业级客户/服务器数据库引擎，而不是SQLite。
- en: '**Very large datasets**'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非常大的数据集**'
- en: An SQLite database is limited in size to 281 terabytes (2^(48) bytes, 256 tibibytes).
    And even if it could handle larger databases, SQLite stores the entire database
    in a single disk file and many filesystems limit the maximum size of files to
    something less than this. So if you are contemplating databases of this magnitude,
    you would do well to consider using a client/server database engine that spreads
    its content across multiple disk files, and perhaps across multiple volumes.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite数据库大小限制为281 TB（2^(48)字节，256 tebibytes）。即使它可以处理更大的数据库，SQLite也将整个数据库存储在单个磁盘文件中，而许多文件系统将文件的最大大小限制在此以下。因此，如果您正在考虑这种规模的数据库，则最好考虑使用客户/服务器数据库引擎，该引擎将其内容分布在多个磁盘文件中，可能还分布在多个卷上。
- en: '**High Concurrency**'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高并发**'
- en: SQLite supports an unlimited number of simultaneous readers, but it will only
    allow one writer at any instant in time. For many situations, this is not a problem.
    Writers queue up. Each application does its database work quickly and moves on,
    and no lock lasts for more than a few dozen milliseconds. But there are some applications
    that require more concurrency, and those applications may need to seek a different
    solution.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite支持无限数量的同时读取者，但每次只允许一个写入者。对于许多情况来说，这不是问题。写入者排队等候。每个应用程序都可以快速完成其数据库工作并继续进行，且任何锁定时间不超过几十毫秒。但是，有些应用程序需要更高的并发性，这些应用程序可能需要寻找其他解决方案。
- en: 3\. Checklist For Choosing The Right Database Engine
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 选择正确数据库引擎的检查表
- en: '**Is the data separated from the application by a network? → choose client/server**'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据是否通过网络与应用程序分离？ → 选择客户/服务器**'
- en: Relational database engines act as bandwidth-reducing data filters. So it is
    best to keep the database engine and the data on the same physical device so that
    the high-bandwidth engine-to-disk link does not have to traverse the network,
    only the lower-bandwidth application-to-engine link.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关系数据库引擎充当减少带宽的数据过滤器。因此，最好将数据库引擎和数据放在同一物理设备上，以便高带宽的引擎到磁盘链路无需经过网络，只需低带宽的应用程序到引擎链路即可。
- en: But SQLite is built into the application. So if the data is on a separate device
    from the application, it is required that the higher bandwidth engine-to-disk
    link be across the network. This works, but it is suboptimal. Hence, it is usually
    better to select a client/server database engine when the data is on a separate
    device from the application.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但是SQLite内置于应用程序中。因此，如果数据位于与应用程序分开的设备上，则需要跨网络进行更高带宽的引擎到磁盘链路。这种方法可行，但不是最佳选择。因此，在数据位于与应用程序分开的设备上时，通常最好选择客户/服务器数据库引擎。
- en: '*Nota Bene:* In this rule, "application" means the code that issues SQL statements.
    If the "application" is an [application server](whentouse.html#serversidedb) and
    if the content resides on the same physical machine as the application server,
    then SQLite might still be appropriate even though the end user is another network
    hop away.'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*Nota Bene:* 在这里，“应用程序”指发出SQL语句的代码。如果“应用程序”是[应用程序服务器](whentouse.html#serversidedb)，且内容存储在与应用程序服务器相同的物理机器上，则SQLite可能仍然合适，即使最终用户在另一个网络跳跃之外。'
- en: '**Many concurrent writers? → choose client/server**'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**许多并发写入者？ → 选择客户/服务器**'
- en: If many threads and/or processes need to write the database at the same instant
    (and they cannot queue up and take turns) then it is best to select a database
    engine that supports that capability, which always means a client/server database
    engine.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果许多线程和/或进程需要同时写入数据库（且它们无法排队并轮流执行），则最好选择支持该功能的数据库引擎，这总是指客户/服务器数据库引擎。
- en: SQLite only supports one writer at a time per database file. But in most cases,
    a write transaction only takes milliseconds and so multiple writers can simply
    take turns. SQLite will handle more write concurrency than many people suspect.
    Nevertheless, client/server database systems, because they have a long-running
    server process at hand to coordinate access, can usually handle far more write
    concurrency than SQLite ever will.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite每次仅支持一个写入器对数据库文件进行写入。但在大多数情况下，写入事务只需几毫秒，因此多个写入器可以轮流进行。SQLite可以处理的写入并发性比许多人想象的要多。然而，由于客户端/服务器数据库系统具有长时间运行的服务器进程来协调访问，因此通常可以处理比SQLite更多的写入并发性。
- en: '**Big data? → choose client/server**'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**大数据？ → 选择客户端/服务器**'
- en: If your data will grow to a size that you are uncomfortable or unable to fit
    into a single disk file, then you should select a solution other than SQLite.
    SQLite supports databases up to 281 terabytes in size, assuming you can find a
    disk drive and filesystem that will support 281-terabyte files. Even so, when
    the size of the content looks like it might creep into the terabyte range, it
    would be good to consider a centralized client/server database.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您的数据将增长到使您无法或不愿将其放入单个磁盘文件的大小，那么您应该选择SQLite之外的解决方案。SQLite支持大小高达281TB的数据库，假设您可以找到支持281TB文件的磁盘驱动器和文件系统。即便如此，当内容的大小看起来可能会渗入到TB范围时，最好考虑使用集中式客户端/服务器数据库。
- en: '**Otherwise → choose SQLite!**'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**否则 → 选择SQLite！**'
- en: For device-local storage with low writer concurrency and less than a terabyte
    of content, SQLite is almost always a better solution. SQLite is fast and reliable
    and it requires no configuration or maintenance. It keeps things simple. SQLite
    "just works".
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于设备本地存储，写入并发性低且内容少于一TB的情况，SQLite几乎总是更好的解决方案。SQLite快速可靠，无需配置或维护。它保持简单。SQLite“只管工作”。
