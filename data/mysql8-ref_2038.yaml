- en: 29.12.7 Performance Schema Transaction Tables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 29.12.7 性能模式事务表
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html)
- en: '[29.12.7.1 The events_transactions_current Table](performance-schema-events-transactions-current-table.html)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[29.12.7.1 事件_事务_当前表](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-transactions-current-table.html)'
- en: '[29.12.7.2 The events_transactions_history Table](performance-schema-events-transactions-history-table.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[29.12.7.2 事件_事务_历史表](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-transactions-history-table.html)'
- en: '[29.12.7.3 The events_transactions_history_long Table](performance-schema-events-transactions-history-long-table.html)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[29.12.7.3 事件_事务_历史_长表](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-transactions-history-long-table.html)'
- en: The Performance Schema instruments transactions. Within the event hierarchy,
    wait events nest within stage events, which nest within statement events, which
    nest within transaction events.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式对事务进行仪表化。在事件层次结构中，等待事件嵌套在阶段事件中，阶段事件嵌套在语句事件中，语句事件嵌套在事务事件中。
- en: 'These tables store transaction events:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这些表存储事务事件：
- en: '[`events_transactions_current`](performance-schema-events-transactions-current-table.html
    "29.12.7.1 The events_transactions_current Table"): The current transaction event
    for each thread.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`events_transactions_current`](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-transactions-current-table.html
    "29.12.7.1 事件_事务_当前表"): 每个线程的当前事务事件。'
- en: '[`events_transactions_history`](performance-schema-events-transactions-history-table.html
    "29.12.7.2 The events_transactions_history Table"): The most recent transaction
    events that have ended per thread.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`events_transactions_history`](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-transactions-history-table.html
    "29.12.7.2 事件_事务_历史表"): 每个线程结束的最近事务事件。'
- en: '[`events_transactions_history_long`](performance-schema-events-transactions-history-long-table.html
    "29.12.7.3 The events_transactions_history_long Table"): The most recent transaction
    events that have ended globally (across all threads).'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`events_transactions_history_long`](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-events-transactions-history-long-table.html
    "29.12.7.3 事件_事务_历史_长表"): 全局结束的最近事务事件（跨所有线程）。'
- en: The following sections describe the transaction event tables. There are also
    summary tables that aggregate information about transaction events; see [Section 29.12.20.5,
    “Transaction Summary Tables”](performance-schema-transaction-summary-tables.html
    "29.12.20.5 Transaction Summary Tables").
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分描述了事务事件表。还有汇总表汇总有关事务事件的信息；参见[第29.12.20.5节，“事务汇总表”](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-summary-tables.html
    "29.12.20.5 事务汇总表")。
- en: For more information about the relationship between the three transaction event
    tables, see [Section 29.9, “Performance Schema Tables for Current and Historical
    Events”](performance-schema-event-tables.html "29.9 Performance Schema Tables
    for Current and Historical Events").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有关三个事务事件表之间关系的更多信息，请参见[第29.9节，“当前和历史事件的性能模式表”](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-event-tables.html
    "29.9 当��和历史事件的性能模式表")。
- en: '[Configuring Transaction Event Collection](performance-schema-transaction-tables.html#performance-schema-transaction-tables-configuration
    "Configuring Transaction Event Collection")'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[配置事务事件收集](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html#performance-schema-transaction-tables-configuration
    "Configuring Transaction Event Collection")'
- en: '[Transaction Boundaries](performance-schema-transaction-tables.html#performance-schema-transaction-tables-transaction-boundaries
    "Transaction Boundaries")'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务边界](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html#performance-schema-transaction-tables-transaction-boundaries
    "Transaction Boundaries")'
- en: '[Transaction Instrumentation](performance-schema-transaction-tables.html#performance-schema-transaction-tables-instrumentation
    "Transaction Instrumentation")'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务仪表化](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html#performance-schema-transaction-tables-instrumentation
    "Transaction Instrumentation")'
- en: '[Transactions and Nested Events](performance-schema-transaction-tables.html#performance-schema-transaction-tables-nested-events
    "Transactions and Nested Events")'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务和嵌套事件](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html#performance-schema-transaction-tables-nested-events
    "Transactions and Nested Events")'
- en: '[Transactions and Stored Programs](performance-schema-transaction-tables.html#performance-schema-transaction-tables-stored-programs
    "Transactions and Stored Programs")'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务和存储过程](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html#performance-schema-transaction-tables-stored-programs
    "Transactions and Stored Programs")'
- en: '[Transactions and Savepoints](performance-schema-transaction-tables.html#performance-schema-transaction-tables-savepoints
    "Transactions and Savepoints")'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务和保存点](https://dev.mysql.com/doc/refman/8.0/en/performance-schema-transaction-tables.html#performance-schema-transaction-tables-savepoints
    "Transactions and Savepoints")'
- en: '[Transactions and Errors](performance-schema-transaction-tables.html#performance-schema-transaction-tables-errors
    "Transactions and Errors")'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[事务和错误](performance-schema-transaction-tables.html#performance-schema-transaction-tables-errors
    "Transactions and Errors")'
- en: Configuring Transaction Event Collection
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置事务事件收集
- en: 'To control whether to collect transaction events, set the state of the relevant
    instruments and consumers:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要控制是否收集事务事件，请设置相关工具和消费者的状态：
- en: The [`setup_instruments`](performance-schema-setup-instruments-table.html "29.12.2.3 The
    setup_instruments Table") table contains an instrument named `transaction`. Use
    this instrument to enable or disable collection of individual transaction event
    classes.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`setup_instruments`](performance-schema-setup-instruments-table.html "29.12.2.3 The
    setup_instruments Table")表包含一个名为`transaction`的工具。使用此工具来启用或禁用单个事务事件类的收集。'
- en: The [`setup_consumers`](performance-schema-setup-consumers-table.html "29.12.2.2 The
    setup_consumers Table") table contains consumer values with names corresponding
    to the current and historical transaction event table names. Use these consumers
    to filter collection of transaction events.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`setup_consumers`](performance-schema-setup-consumers-table.html "29.12.2.2 The
    setup_consumers Table")表包含与当前和历史事务事件表名称对应的消费者值。使用这些消费者来过滤事务事件的收集。'
- en: 'The `transaction` instrument and the `events_transactions_current` and `events_transactions_history`
    transaction consumers are enabled by default:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`transaction`工具和`events_transactions_current`以及`events_transactions_history`事务消费者默认启用：'
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To control transaction event collection at server startup, use lines like these
    in your `my.cnf` file:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要在服务器启动时控制事务事件的收集，请在您的`my.cnf`文件中使用类似以下行：
- en: 'Enable:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用：
- en: '[PRE1]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Disable:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用：
- en: '[PRE2]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To control transaction event collection at runtime, update the [`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table") and [`setup_consumers`](performance-schema-setup-consumers-table.html
    "29.12.2.2 The setup_consumers Table") tables:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要在运行时控制事务事件的收集，请更新[`setup_instruments`](performance-schema-setup-instruments-table.html
    "29.12.2.3 The setup_instruments Table")和[`setup_consumers`](performance-schema-setup-consumers-table.html
    "29.12.2.2 The setup_consumers Table")表：
- en: 'Enable:'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用：
- en: '[PRE3]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Disable:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用：
- en: '[PRE4]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: To collect transaction events only for specific transaction event tables, enable
    the `transaction` instrument but only the transaction consumers corresponding
    to the desired tables.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了仅收集特定事务事件表的事务事件，启用`transaction`工具，但仅启用与所需表对应的事务消费者。
- en: For additional information about configuring event collection, see [Section 29.3,
    “Performance Schema Startup Configuration”](performance-schema-startup-configuration.html
    "29.3 Performance Schema Startup Configuration"), and [Section 29.4, “Performance
    Schema Runtime Configuration”](performance-schema-runtime-configuration.html "29.4 Performance
    Schema Runtime Configuration").
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有关配置事件收集的其他信息，请参见[第29.3节“性能模式启动配置”](performance-schema-startup-configuration.html
    "29.3 Performance Schema Startup Configuration")和[第29.4节“性能模式运行时配置”](performance-schema-runtime-configuration.html
    "29.4 Performance Schema Runtime Configuration")。
- en: Transaction Boundaries
  id: totrans-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务边界
- en: 'In MySQL Server, transactions start explicitly with these statements:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL服务器中，事务明确以以下语句开始：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Transactions also start implicitly. For example, when the [`autocommit`](server-system-variables.html#sysvar_autocommit)
    system variable is enabled, the start of each statement starts a new transaction.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 事务也会隐式开始。例如，当启用[`autocommit`](server-system-variables.html#sysvar_autocommit)系统变量时，每个语句的开始都会启动一个新事务。
- en: When [`autocommit`](server-system-variables.html#sysvar_autocommit) is disabled,
    the first statement following a committed transaction marks the start of a new
    transaction. Subsequent statements are part of the transaction until it is committed.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当禁用[`autocommit`](server-system-variables.html#sysvar_autocommit)时，提交事务后的第一条语句标志着新事务的开始。直到提交为止，后续语句都属于该事务。
- en: 'Transactions explicitly end with these statements:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 事务明确以以下语句结束：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Transactions also end implicitly, by execution of DDL statements, locking statements,
    and server administration statements.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 事务也会隐式结束，通过DDL语句、锁定语句和服务器管理语句的执行。
- en: In the following discussion, references to [`START TRANSACTION`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements") also apply to [`BEGIN`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements"), [`XA START`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements"), and [`XA BEGIN`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements"). Similarly, references to [`COMMIT`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements") and [`ROLLBACK`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements") apply to [`XA COMMIT`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements") and [`XA ROLLBACK`](xa-statements.html
    "15.3.8.1 XA Transaction SQL Statements"), respectively.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的讨论中，对[`START TRANSACTION`](commit.html "15.3.1 START TRANSACTION, COMMIT,
    and ROLLBACK Statements")的引用也适用于[`BEGIN`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")，[`XA START`](xa-statements.html "15.3.8.1 XA
    Transaction SQL Statements")和[`XA BEGIN`](xa-statements.html "15.3.8.1 XA Transaction
    SQL Statements")。同样，对[`COMMIT`](commit.html "15.3.1 START TRANSACTION, COMMIT,
    and ROLLBACK Statements")和[`ROLLBACK`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")的引用也适用于[`XA COMMIT`](xa-statements.html "15.3.8.1 XA
    Transaction SQL Statements")和[`XA ROLLBACK`](xa-statements.html "15.3.8.1 XA Transaction
    SQL Statements")。
- en: 'The Performance Schema defines transaction boundaries similarly to that of
    the server. The start and end of a transaction event closely match the corresponding
    state transitions in the server:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 性能模式定义事务边界与服务器类似。事务事件的开始和结束与服务器中相应的状态转换非常相似：
- en: For an explicitly started transaction, the transaction event starts during processing
    of the [`START TRANSACTION`](commit.html "15.3.1 START TRANSACTION, COMMIT, and
    ROLLBACK Statements") statement.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于显式启动的事务，事务事件在处理[`START TRANSACTION`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")语句期间开始。
- en: For an implicitly started transaction, the transaction event starts on the first
    statement that uses a transactional engine after the previous transaction has
    ended.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于隐式启动的事务，事务事件从上一个事务结束后第一次使用事务引擎的语句开始。
- en: For any transaction, whether explicitly or implicitly ended, the transaction
    event ends when the server transitions out of the active transaction state during
    the processing of [`COMMIT`](commit.html "15.3.1 START TRANSACTION, COMMIT, and
    ROLLBACK Statements") or [`ROLLBACK`](commit.html "15.3.1 START TRANSACTION, COMMIT,
    and ROLLBACK Statements").
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于任何事务，无论是显式还是隐式结束，事务事件在服务器在处理[`COMMIT`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")或[`ROLLBACK`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")期间转换出活动事务状态时结束。
- en: 'There are subtle implications to this approach:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法有微妙的含义：
- en: Transaction events in the Performance Schema do not fully include the statement
    events associated with the corresponding [`START TRANSACTION`](commit.html "15.3.1 START
    TRANSACTION, COMMIT, and ROLLBACK Statements"), [`COMMIT`](commit.html "15.3.1 START
    TRANSACTION, COMMIT, and ROLLBACK Statements"), or [`ROLLBACK`](commit.html "15.3.1 START
    TRANSACTION, COMMIT, and ROLLBACK Statements") statements. There is a trivial
    amount of timing overlap between the transaction event and these statements.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能模式中的事务事件并不完全包括与相应的[`START TRANSACTION`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")，[`COMMIT`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")或[`ROLLBACK`](commit.html "15.3.1 START TRANSACTION,
    COMMIT, and ROLLBACK Statements")语句相关联的语句事件。事务事件与这些语句之间存在微小的时间重叠。
- en: Statements that work with nontransactional engines have no effect on the transaction
    state of the connection. For implicit transactions, the transaction event begins
    with the first statement that uses a transactional engine. This means that statements
    operating exclusively on nontransactional tables are ignored, even following [`START
    TRANSACTION`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements").
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用非事务引擎的语句对连接的事务状态没有影响。对于隐式事务，事务事件从第一个使用事务引擎的语句开始。这意味着仅在非事务表上操作的语句将被忽略，即使在[`START
    TRANSACTION`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")之后也是如此。
- en: 'To illustrate, consider the following scenario:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 举例说明，考虑以下情景：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: From the perspective of the server, Transaction 1 ends when table `t2` is created.
    Transaction 2 does not start until a transactional table is accessed, despite
    the intervening updates to nontransactional tables.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 从服务器的角度看，事务1在表`t2`创建时结束。事务2直到访问事务表时才开始，尽管在此期间更新了非事务表。
- en: From the perspective of the Performance Schema, Transaction 2 starts when the
    server transitions into an active transaction state. Statements 6 and 7 are not
    included within the boundaries of Transaction 2, which is consistent with how
    the server writes transactions to the binary log.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从性能模式的角度看，当服务器转换为活动事务状态时，事务2开始。语句6和7不包括在事务2的范围内，这与服务器将事务写入二进制日志的方式一致。
- en: Transaction Instrumentation
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务仪表化
- en: 'Three attributes define transactions:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 三个属性定义了事务：
- en: Access mode (read only, read write)
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问模式（只读，读写）
- en: Isolation level ([`SERIALIZABLE`](innodb-transaction-isolation-levels.html#isolevel_serializable),
    [`REPEATABLE READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read),
    and so forth)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隔离级别（[`SERIALIZABLE`](innodb-transaction-isolation-levels.html#isolevel_serializable)，[`REPEATABLE
    READ`](innodb-transaction-isolation-levels.html#isolevel_repeatable-read)，等等）
- en: Implicit ([`autocommit`](server-system-variables.html#sysvar_autocommit) enabled)
    or explicit ([`autocommit`](server-system-variables.html#sysvar_autocommit) disabled)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式（启用[`autocommit`](server-system-variables.html#sysvar_autocommit)）或显式（禁用[`autocommit`](server-system-variables.html#sysvar_autocommit)）
- en: To reduce complexity of the transaction instrumentation and to ensure that the
    collected transaction data provides complete, meaningful results, all transactions
    are instrumented independently of access mode, isolation level, or autocommit
    mode.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少事务仪表化的复杂性，并确保收集的事务数据提供完整、有意义的结果，所有事务都是独立于访问模式、隔离级别或自动提交模式进行仪表化的。
- en: 'To selectively examine transaction history, use the attribute columns in the
    transaction event tables: `ACCESS_MODE`, `ISOLATION_LEVEL`, and `AUTOCOMMIT`.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择性地检查事务历史记录，请使用事务事件表中的属性列：`ACCESS_MODE`，`ISOLATION_LEVEL`和`AUTOCOMMIT`。
- en: The cost of transaction instrumentation can be reduced various ways, such as
    enabling or disabling transaction instrumentation according to user, account,
    host, or thread (client connection).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过各种方式减少事务仪表化的成本，例如根据用户、账户、主机或线程（客户端连接）启用或禁用事务仪表化。
- en: Transactions and Nested Events
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务和嵌套事件
- en: The parent of a transaction event is the event that initiated the transaction.
    For an explicitly started transaction, this includes the [`START TRANSACTION`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements") and [`COMMIT AND
    CHAIN`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")
    statements. For an implicitly started transaction, it is the first statement that
    uses a transactional engine after the previous transaction ends.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 事务事件的父级是启动事务的事件。对于显式启动的事务，这包括[`START TRANSACTION`](commit.html "15.3.1 START
    TRANSACTION, COMMIT, and ROLLBACK Statements")和[`COMMIT AND CHAIN`](commit.html
    "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")语句。对于隐式启动的事务，它是在上一个事务结束后第一个使用事务引擎的语句。
- en: In general, a transaction is the top-level parent to all events initiated during
    the transaction, including statements that explicitly end the transaction such
    as [`COMMIT`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements")
    and [`ROLLBACK`](commit.html "15.3.1 START TRANSACTION, COMMIT, and ROLLBACK Statements").
    Exceptions are statements that implicitly end a transaction, such as DDL statements,
    in which case the current transaction must be committed before the new statement
    is executed.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，事务是在事务期间启动的所有事件的最高级父级，包括明确结束事务的语句，比如[`COMMIT`](commit.html "15.3.1 START
    TRANSACTION, COMMIT, and ROLLBACK Statements")和[`ROLLBACK`](commit.html "15.3.1 START
    TRANSACTION, COMMIT, and ROLLBACK Statements")。异常情况是隐式结束事务的语句，比如DDL语句，在这种情况下，必须在执行新语句之前提交当前事务。
- en: Transactions and Stored Programs
  id: totrans-68
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务和存储程序
- en: 'Transactions and stored program events are related as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 事务和存储程序事件相关如下：
- en: Stored Procedures
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储过程
- en: Stored procedures operate independently of transactions. A stored procedure
    can be started within a transaction, and a transaction can be started or ended
    from within a stored procedure. If called from within a transaction, a stored
    procedure can execute statements that force a commit of the parent transaction
    and then start a new transaction.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储过程独立于事务运行。存储过程可以在事务内启动，并且可以在存储过程内启动或结束事务。如果在事务内调用，存储过程可以执行强制提交父事务的语句，然后启动新事务。
- en: If a stored procedure is started within a transaction, that transaction is the
    parent of the stored procedure event.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在事务内启动存储过程，则该事务是存储过程事件的父级。
- en: If a transaction is started by a stored procedure, the stored procedure is the
    parent of the transaction event.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果事务是由存储过程启动的，则存储过程是事务事件的父级。
- en: Stored Functions
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储函数
- en: Stored functions are restricted from causing an explicit or implicit commit
    or rollback. Stored function events can reside within a parent transaction event.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储函数受限于不引起显式或隐式提交或回滚。存储函数事件可以存在于父事务事件中。
- en: Triggers
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触发器
- en: Triggers activate as part of a statement that accesses the table with which
    it is associated, so the parent of a trigger event is always the statement that
    activates it.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 触发器作为访问与其关联的表的语句的一部分而激活，因此触发器事件的父级始终是激活它的语句。
- en: Triggers cannot issue statements that cause an explicit or implicit commit or
    rollback of a transaction.
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 触发器不能发出导致事务显式或隐式提交或回滚的语句。
- en: Scheduled Events
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划事件
- en: The execution of the statements in the body of a scheduled event takes place
    in a new connection. Nesting of a scheduled event within a parent transaction
    is not applicable.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 计划事件体中语句的执行发生在一个新连接中。计划事件嵌套在父事务中不适用。
- en: Transactions and Savepoints
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务和保存点
- en: Savepoint statements are recorded as separate statement events. Transaction
    events include separate counters for [`SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT,
    ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Statements"), [`ROLLBACK TO SAVEPOINT`](savepoint.html
    "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Statements"),
    and [`RELEASE SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT,
    and RELEASE SAVEPOINT Statements") statements issued during the transaction.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 保存点语句被记录为单独的语句事件。事务事件包括在事务期间发出的[`SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT,
    ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Statements")、[`ROLLBACK TO SAVEPOINT`](savepoint.html
    "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and RELEASE SAVEPOINT Statements")和[`RELEASE
    SAVEPOINT`](savepoint.html "15.3.4 SAVEPOINT, ROLLBACK TO SAVEPOINT, and RELEASE
    SAVEPOINT Statements")语句的单独计数器。
- en: Transactions and Errors
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事务和错误
- en: Errors and warnings that occur within a transaction are recorded in statement
    events, but not in the corresponding transaction event. This includes transaction-specific
    errors and warnings, such as a rollback on a nontransactional table or GTID consistency
    errors.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在事务中发生的错误和警告记录在语句事件中，而不记录在相应的事务事件中。这包括事务特定的错误和警告，例如在非事务表上的回滚或GTID一致性错误。
