- en: 14.10 Cast Functions and Operators
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14.10 转换函数和运算符
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html](https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html](https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html)
- en: '**Table 14.15 Cast Functions and Operators**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 14.15 转换函数和运算符**'
- en: '| Name | Description | Deprecated |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 描述 | 已弃用 |'
- en: '| [`BINARY`](cast-functions.html#operator_binary) | Cast a string to a binary
    string | 8.0.27 |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`BINARY`](cast-functions.html#operator_binary) | 将字符串转换为二进制字符串 | 8.0.27
    |'
- en: '| [`CAST()`](cast-functions.html#function_cast) | Cast a value as a certain
    type |  |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`CAST()`](cast-functions.html#function_cast) | 将值转换为特定类型 |  |'
- en: '| [`CONVERT()`](cast-functions.html#function_convert) | Cast a value as a certain
    type |  |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`CONVERT()`](cast-functions.html#function_convert) | 将值转换为特定类型 |  |'
- en: Cast functions and operators enable conversion of values from one data type
    to another.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 转换函数和运算符使值从一种数据类型转换为另一种数据类型。
- en: '[Cast Function and Operator Descriptions](cast-functions.html#cast-function-descriptions
    "Cast Function and Operator Descriptions")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换函数和运算符描述](cast-functions.html#cast-function-descriptions "转换函数和运算符描述")'
- en: '[Character Set Conversions](cast-functions.html#cast-character-set-conversions
    "Character Set Conversions")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[字符集转换](cast-functions.html#cast-character-set-conversions "字符集转换")'
- en: '[Character Set Conversions for String Comparisons](cast-functions.html#cast-string-comparisons
    "Character Set Conversions for String Comparisons")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用于字符串比较的字符集转换](cast-functions.html#cast-string-comparisons "用于字符串比较的字符集转换")'
- en: '[Cast Operations on Spatial Types](cast-functions.html#cast-spatial-types "Cast
    Operations on Spatial Types")'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[空间类型的转换操作](cast-functions.html#cast-spatial-types "空间类型的转换操作")'
- en: '[Other Uses for Cast Operations](cast-functions.html#cast-other-uses "Other
    Uses for Cast Operations")'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换操作的其他用途](cast-functions.html#cast-other-uses "转换操作的其他用途")'
- en: Cast Function and Operator Descriptions
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换函数和运算符描述
- en: '[`BINARY`](cast-functions.html#operator_binary) *`expr`*'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`BINARY`](cast-functions.html#operator_binary) *`expr`*'
- en: The [`BINARY`](cast-functions.html#operator_binary) operator converts the expression
    to a binary string (a string that has the `binary` character set and `binary`
    collation). A common use for [`BINARY`](cast-functions.html#operator_binary) is
    to force a character string comparison to be done byte by byte using numeric byte
    values rather than character by character. The [`BINARY`](cast-functions.html#operator_binary)
    operator also causes trailing spaces in comparisons to be significant. For information
    about the differences between the `binary` collation of the `binary` character
    set and the `_bin` collations of nonbinary character sets, see [Section 12.8.5,
    “The binary Collation Compared to _bin Collations”](charset-binary-collations.html
    "12.8.5 The binary Collation Compared to _bin Collations").
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`BINARY`](cast-functions.html#operator_binary) 运算符将表达式转换为二进制字符串（具有 `binary`
    字符集和 `binary` 校对的字符串）。[`BINARY`](cast-functions.html#operator_binary) 的常见用途是通过使用数值字节值而不是逐个字符来进行字符字符串比较。[`BINARY`](cast-functions.html#operator_binary)
    运算符还导致比较中的尾随空格具有重要意义。有关 `binary` 字符集和非二进制字符集的 `_bin` 校对之间的区别的信息，请参见 [第 12.8.5
    节，“二进制校对与 _bin 校对的比较”](charset-binary-collations.html "12.8.5 二进制校对与 _bin 校对的比较")。'
- en: The `BINARY` operator is deprecated as of MySQL 8.0.27, and you should expect
    its removal in a future version of MySQL. Use [`CAST(... AS BINARY)`](cast-functions.html#function_cast)
    instead.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`BINARY` 运算符在 MySQL 8.0.27 中已弃用，并且您应该期望在将来的 MySQL 版本中将其移除。请改用 [`CAST(... AS
    BINARY)`](cast-functions.html#function_cast)。'
- en: '[PRE0]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In a comparison, [`BINARY`](cast-functions.html#operator_binary) affects the
    entire operation; it can be given before either operand with the same result.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在比较中，[`BINARY`](cast-functions.html#operator_binary) 影响整个操作；可以在任一操作数之前使用，结果相同。
- en: 'To convert a string expression to a binary string, these constructs are equivalent:'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要将字符串表达式转换为二进制字符串，以下结构是等效的：
- en: '[PRE1]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If a value is a string literal, it can be designated as a binary string without
    converting it by using the `_binary` character set introducer:'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果一个值是字符串文字，可以通过使用 `_binary` 字符集引导符将其指定为二进制字符串而无需转换：
- en: '[PRE2]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For information about introducers, see [Section 12.3.8, “Character Set Introducers”](charset-introducer.html
    "12.3.8 Character Set Introducers").
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关引导符的信息，请参见 [第 12.3.8 节，“字符集引导符”](charset-introducer.html "12.3.8 字符集引导符")。
- en: 'The [`BINARY`](cast-functions.html#operator_binary) operator in expressions
    differs in effect from the `BINARY` attribute in character column definitions.
    For a character column defined with the `BINARY` attribute, MySQL assigns the
    table default character set and the binary (`_bin`) collation of that character
    set. Every nonbinary character set has a `_bin` collation. For example, if the
    table default character set is `utf8mb4`, these two column definitions are equivalent:'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在表达式中，[`BINARY`](cast-functions.html#operator_binary) 运算符的效果与字符列定义中的 `BINARY`
    属性不同。对于使用 `BINARY` 属性定义的字符列，MySQL 分配表默认字符集和该字符集的二进制 (`_bin`) 校对。每个非二进制字符集都有一个
    `_bin` 校对。例如，如果表默认字符集是 `utf8mb4`，那么这两个列定义是等效的：
- en: '[PRE3]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The use of `CHARACTER SET binary` in the definition of a [`CHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types"), [`VARCHAR`](char.html "13.3.2 The CHAR and
    VARCHAR Types"), or [`TEXT`](blob.html "13.3.4 The BLOB and TEXT Types") column
    causes the column to be treated as the corresponding binary string data type.
    For example, the following pairs of definitions are equivalent:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 [`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types")、[`VARCHAR`](char.html
    "13.3.2 The CHAR and VARCHAR Types") 或 [`TEXT`](blob.html "13.3.4 The BLOB and
    TEXT Types") 列的定义中使用 `CHARACTER SET binary` 会导致该列被视为相应的二进制字符串数据类型。例如，以下定义对是等效的：
- en: '[PRE4]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If [`BINARY`](cast-functions.html#operator_binary) is invoked from within the
    [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") client,
    binary strings display using hexadecimal notation, depending on the value of the
    [`--binary-as-hex`](mysql-command-options.html#option_mysql_binary-as-hex). For
    more information about that option, see [Section 6.5.1, “mysql — The MySQL Command-Line
    Client”](mysql.html "6.5.1 mysql — The MySQL Command-Line Client").
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果从 [**mysql**](mysql.html "6.5.1 mysql — The MySQL Command-Line Client") 客户端调用
    [`BINARY`](cast-functions.html#operator_binary)，二进制字符串将使用十六进制表示，具体取决于 [`--binary-as-hex`](mysql-command-options.html#option_mysql_binary-as-hex)
    的值。有关该选项的更多信息，请参阅 [Section 6.5.1, “mysql — The MySQL Command-Line Client”](mysql.html
    "6.5.1 mysql — The MySQL Command-Line Client")。
- en: '[`CAST(*`expr`* AS *`type`* [ARRAY])`](cast-functions.html#function_cast)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CAST(*`expr`* AS *`type`* [ARRAY])`](cast-functions.html#function_cast)'
- en: '[`CAST(*`timestamp_value`* AT TIME ZONE *`timezone_specifier`* AS DATETIME[(*`precision`*)])`](cast-functions.html#function_cast)'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CAST(*`timestamp_value`* AT TIME ZONE *`timezone_specifier`* AS DATETIME[(*`precision`*)])`](cast-functions.html#function_cast)'
- en: '*`timezone_specifier`*: [INTERVAL] ''+00:00'' | ''UTC'''
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*`timezone_specifier`*: [INTERVAL] ''+00:00'' | ''UTC'''
- en: With [`CAST(*`expr`* AS *`type`*`](cast-functions.html#function_cast) syntax,
    the [`CAST()`](cast-functions.html#function_cast) function takes an expression
    of any type and produces a result value of the specified type. This operation
    may also be expressed as [`CONVERT(*`expr`*, *`type`*)`](cast-functions.html#function_convert),
    which is equivalent. If *`expr`* is `NULL`, `CAST()` returns `NULL`.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 [`CAST(*`expr`* AS *`type`*`](cast-functions.html#function_cast) 语法，[`CAST()`](cast-functions.html#function_cast)
    函数接受任何类型的表达式，并生成指定类型的结果值。这个操作也可以表示为 [`CONVERT(*`expr`*, *`type`*)`](cast-functions.html#function_convert)，它是等效的。如果
    *`expr`* 是 `NULL`，`CAST()` 返回 `NULL`。
- en: 'These *`type`* values are permitted:'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 允许使用以下 *`type`* 值：
- en: '`BINARY[(*`N`*)]`'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BINARY[(*`N`*)]`'
- en: Produces a string with the [`VARBINARY`](binary-varbinary.html "13.3.3 The BINARY
    and VARBINARY Types") data type, except that when the expression *`expr`* is empty
    (zero length), the result type is `BINARY(0)`. If the optional length *`N`* is
    given, `BINARY(*`N`*)` causes the cast to use no more than *`N`* bytes of the
    argument. Values shorter than *`N`* bytes are padded with `0x00` bytes to a length
    of *`N`*. If the optional length *`N`* is not given, MySQL calculates the maximum
    length from the expression. If the supplied or calculated length is greater than
    an internal threshold, the result type is `BLOB`. If the length is still too long,
    the result type is `LONGBLOB`.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成一个具有 [`VARBINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY
    Types") 数据类型的字符串，除非表达式 *`expr`* 为空（长度为零），结果类型为 `BINARY(0)`。如果给定可选长度 *`N`*，`BINARY(*`N`*)`
    使转换不超过 *`N`* 个字节的参数。长度小于 *`N`* 的值用 `0x00` 字节填充到长度为 *`N`*。如果未给出可选长度 *`N`*，MySQL
    从表达式计算最大长度。如果提供或计算的长度大于内部阈值，则结果类型为 `BLOB`。如果长度仍然太长，则结果类型为 `LONGBLOB`。
- en: For a description of how casting to `BINARY` affects comparisons, see [Section 13.3.3,
    “The BINARY and VARBINARY Types”](binary-varbinary.html "13.3.3 The BINARY and
    VARBINARY Types").
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关将 `BINARY` 转换影响比较的描述，请参阅 [Section 13.3.3, “The BINARY and VARBINARY Types”](binary-varbinary.html
    "13.3.3 The BINARY and VARBINARY Types")。
- en: '`CHAR[(*`N`*)] [*`charset_info`*]`'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CHAR[(*`N`*)] [*`charset_info`*]`'
- en: Produces a string with the [`VARCHAR`](char.html "13.3.2 The CHAR and VARCHAR
    Types") data type, unless the expression *`expr`* is empty (zero length), in which
    case the result type is `CHAR(0)`. If the optional length *`N`* is given, `CHAR(*`N`*)`
    causes the cast to use no more than *`N`* characters of the argument. No padding
    occurs for values shorter than *`N`* characters. If the optional length *`N`*
    is not given, MySQL calculates the maximum length from the expression. If the
    supplied or calculated length is greater than an internal threshold, the result
    type is `TEXT`. If the length is still too long, the result type is `LONGTEXT`.
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成一个具有[`VARCHAR`](char.html "13.3.2 CHAR 和 VARCHAR 类型")数据类型的字符串，除非表达式 *`expr`*
    为空（长度为零），在这种情况下，结果类型为 `CHAR(0)`。如果给定了可选长度 *`N`*，`CHAR(*`N`*)` 使转换不超过 *`N`* 个字符的参数。对于长度小于
    *`N`* 的值，不会进行填充。如果未给出可选长度 *`N`*，MySQL 会从表达式计算最大长度。如果提供或计算的长度大于内部阈值，则结果类型为 `TEXT`。如果长度仍然太长，则结果类型为
    `LONGTEXT`。
- en: 'With no *`charset_info`* clause, `CHAR` produces a string with the default
    character set. To specify the character set explicitly, these *`charset_info`*
    values are permitted:'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 没有 *`charset_info`* 子句时，`CHAR` 生成一个具有默认字符集的字符串。要明确指定字符集，允许使用以下 *`charset_info`*
    值：
- en: '`CHARACTER SET *`charset_name`*`: Produces a string with the given character
    set.'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CHARACTER SET *`charset_name`*`：生成具有给定字符集的字符串。'
- en: '`ASCII`: Shorthand for `CHARACTER SET latin1`.'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ASCII`：`CHARACTER SET latin1` 的简写。'
- en: '`UNICODE`: Shorthand for `CHARACTER SET ucs2`.'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UNICODE`：`CHARACTER SET ucs2` 的简写。'
- en: In all cases, the string has the character set default collation.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在所有情况下，字符串具有字符集默认排序规则。
- en: '`DATE`'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`日期`'
- en: Produces a [`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types") value.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成一个[`日期`](datetime.html "13.2.2 日期、日期时间和时间戳类型")值。
- en: '`DATETIME[(*`M`*)]`'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DATETIME[(*`M`*)]`'
- en: Produces a [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP
    Types") value. If the optional *`M`* value is given, it specifies the fractional
    seconds precision.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成一个[`日期时间`](datetime.html "13.2.2 日期、��期时间和时间戳类型")值。如果给定了可选 *`M`* 值，则指定了小数秒精度。
- en: '`DECIMAL[(*`M`*[,*`D`*])]`'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DECIMAL[(*`M`*[,*`D`*])]`'
- en: Produces a [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point Types (Exact
    Value) - DECIMAL, NUMERIC") value. If the optional *`M`* and *`D`* values are
    given, they specify the maximum number of digits (the precision) and the number
    of digits following the decimal point (the scale). If *`D`* is omitted, 0 is assumed.
    If *`M`* is omitted, 10 is assumed.
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成一个[`DECIMAL`](fixed-point-types.html "13.1.3 定点类型（精确值）- DECIMAL、NUMERIC")值。如果给定了可选的
    *`M`* 和 *`D`* 值，则它们指定了数字的最大位数（精度）和小数点后的位数（标度）。如果省略了 *`D`*，则假定为 0。如果省略了 *`M`*，则假定为
    10。
- en: '`DOUBLE`'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DOUBLE`'
- en: Produces a [`DOUBLE`](floating-point-types.html "13.1.4 Floating-Point Types
    (Approximate Value) - FLOAT, DOUBLE") result. Added in MySQL 8.0.17.
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成一个[`DOUBLE`](floating-point-types.html "13.1.4 浮点类型（近似值）- FLOAT、DOUBLE")结果。在
    MySQL 8.0.17 中添加。
- en: '`FLOAT[(*`p`*)]`'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FLOAT[(*`p`*)]`'
- en: If the precision *`p`* is not specified, produces a result of type [`FLOAT`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE"). If *`p`* is
    provided and 0 <= < *`p`* <= 24, the result is of type `FLOAT`. If 25 <= *`p`*
    <= 53, the result is of type [`DOUBLE`](floating-point-types.html "13.1.4 Floating-Point
    Types (Approximate Value) - FLOAT, DOUBLE"). If *`p`* < 0 or *`p`* > 53, an error
    is returned. Added in MySQL 8.0.17.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果未指定精度 *`p`*，则生成一个[`FLOAT`](floating-point-types.html "13.1.4 浮点类型（近似值）- FLOAT、DOUBLE")类型的结果。如果提供了
    *`p`* 并且 0 <= < *`p`* <= 24，则结果为 `FLOAT` 类型。如果 25 <= *`p`* <= 53，则结果为[`DOUBLE`](floating-point-types.html
    "13.1.4 浮点类型（近似值）- FLOAT、DOUBLE")类型。如果 *`p`* < 0 或 *`p`* > 53，则返回错误。在 MySQL 8.0.17
    中添加。
- en: '`JSON`'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`JSON`'
- en: Produces a [`JSON`](json.html "13.5 The JSON Data Type") value. For details
    on the rules for conversion of values between [`JSON`](json.html "13.5 The JSON
    Data Type") and other types, see [Comparison and Ordering of JSON Values](json.html#json-comparison
    "Comparison and Ordering of JSON Values").
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 生成一个[`JSON`](json.html "13.5 JSON 数据类型")值。有关值在[`JSON`](json.html "13.5 JSON
    数据类型")和其他类型之间转换规则的详细信息，请参阅[JSON 值的比较和排序](json.html#json-comparison "JSON 值的比较和排序")。
- en: '`NCHAR[(*`N`*)]`'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NCHAR[(*`N`*)]`'
- en: Like `CHAR`, but produces a string with the national character set. See [Section 12.3.7,
    “The National Character Set”](charset-national.html "12.3.7 The National Character
    Set").
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类似于 `CHAR`，但生成具有国家字符集的字符串。请参阅[第 12.3.7 节，“国家字符集”](charset-national.html "12.3.7 国家字符集")。
- en: Unlike `CHAR`, `NCHAR` does not permit trailing character set information to
    be specified.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与 `CHAR` 不同，`NCHAR` 不允许指定尾随字符集信息。
- en: '`REAL`'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`REAL`'
- en: Produces a result of type [`REAL`](floating-point-types.html "13.1.4 Floating-Point
    Types (Approximate Value) - FLOAT, DOUBLE"). This is actually `FLOAT` if the `REAL_AS_FLOAT`
    SQL mode is enabled; otherwise the result is of type `DOUBLE`.
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 产生一个[`REAL`](floating-point-types.html "13.1.4 浮点类型（近似值） - FLOAT, DOUBLE")类型的结果。如果启用了`REAL_AS_FLOAT`
    SQL 模式，则实际上是`FLOAT`；否则结果为`DOUBLE`类型。
- en: '`SIGNED [INTEGER]`'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SIGNED [INTEGER]`'
- en: Produces a signed [`BIGINT`](integer-types.html "13.1.2 Integer Types (Exact
    Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT") value.
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 产生一个带符号的[`BIGINT`](integer-types.html "13.1.2 整数类型（精确值） - INTEGER, INT, SMALLINT,
    TINYINT, MEDIUMINT, BIGINT")值。
- en: '*`spatial_type`*'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*`spatial_type`*'
- en: As of MySQL 8.0.24, [`CAST()`](cast-functions.html#function_cast) and [`CONVERT()`](cast-functions.html#function_convert)
    support casting geometry values from one spatial type to another, for certain
    combinations of spatial types. For details, see [Cast Operations on Spatial Types](cast-functions.html#cast-spatial-types
    "Cast Operations on Spatial Types").
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截至 MySQL 8.0.24 版本，[`CAST()`](cast-functions.html#function_cast) 和 [`CONVERT()`](cast-functions.html#function_convert)
    支持将几何值从一种空间类型转换为另一种空间类型，适用于某些空间类型的组合。有关详细信息，请参见[空间类型的转换操作](cast-functions.html#cast-spatial-types
    "空间类型的转换操作")。
- en: '`TIME[(*`M`*)]`'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TIME[(*`M`*)]`'
- en: Produces a [`TIME`](time.html "13.2.3 The TIME Type") value. If the optional
    *`M`* value is given, it specifies the fractional seconds precision.
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 产生一个[`TIME`](time.html "13.2.3 TIME 类型")值���如果给定了可选的*`M`*值，则指定小数秒精度。
- en: '`UNSIGNED [INTEGER]`'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UNSIGNED [INTEGER]`'
- en: Produces an unsigned [`BIGINT`](integer-types.html "13.1.2 Integer Types (Exact
    Value) - INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT") value.
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 产生一个无符号的[`BIGINT`](integer-types.html "13.1.2 整数类型（精确值） - INTEGER, INT, SMALLINT,
    TINYINT, MEDIUMINT, BIGINT")值。
- en: '`YEAR`'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YEAR`'
- en: 'Produces a [`YEAR`](year.html "13.2.4 The YEAR Type") value. Added in MySQL
    8.0.22\. These rules govern conversion to `YEAR`:'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 产生一个[`YEAR`](year.html "13.2.4 YEAR 类型")值。在 MySQL 8.0.22 版本中添加。这些规则适用于转换为`YEAR`：
- en: For a four-digit number in the range 1901-2155 inclusive, or for a string which
    can be interpreted as a four-digit number in this range, return the corresponding
    `YEAR` value.
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于范围在 1901-2155（包括）之间的四位数，或者可以解释为此范围内四位数的字符串，返回相应的`YEAR`值。
- en: 'For a number consisting of one or two digits, or for a string which can be
    interpreted as such a number, return a `YEAR` value as follows:'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于由一到两位数字组成的数字，或者可以解释为这样一个数字的字符串，返回如下`YEAR`值：
- en: If the number is in the range 1-69 inclusive, add 2000 and return the sum.
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果数字在 1-69（包括）范围内，则加上 2000 并返回总和。
- en: If the number is in the range 70-99 inclusive, add 1900 and return the sum.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果数字在 70-99（包括）范围内，则加上 1900 并返回总和。
- en: For a string which evaluates to 0, return 2000.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于评估为 0 的字符串，返回 2000。
- en: For the number 0, return 0.
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于数字 0，返回 0。
- en: For a [`DATE`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"),
    [`DATETIME`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types"),
    or [`TIMESTAMP`](datetime.html "13.2.2 The DATE, DATETIME, and TIMESTAMP Types")
    value, return the `YEAR` portion of the value. For a [`TIME`](time.html "13.2.3 The
    TIME Type") value, return the current year.
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于[`DATE`](datetime.html "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型")、[`DATETIME`](datetime.html
    "13.2.2 DATE、DATETIME 和 TIMESTAMP 类型")或[`TIMESTAMP`](datetime.html "13.2.2 DATE、DATETIME
    和 TIMESTAMP 类型")值，返回值的`YEAR`部分。对于[`TIME`](time.html "13.2.3 TIME 类型")值，返回当前年份。
- en: 'If you do not specify the type of a `TIME` argument, you may get a different
    result from what you expect, as shown here:'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果不指定`TIME`参数的类型，则可能会得到与预期不同的结果，如下所示：
- en: '[PRE5]'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If the argument is of type [`DECIMAL`](fixed-point-types.html "13.1.3 Fixed-Point
    Types (Exact Value) - DECIMAL, NUMERIC"), [`DOUBLE`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE"), [`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC"), or [`REAL`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE"), round the
    value to the nearest integer, then attempt to cast the value to `YEAR` using the
    rules for integer values, as shown here:'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果参数是[`DECIMAL`](fixed-point-types.html "13.1.3 定点类型（精确值） - DECIMAL, NUMERIC")、[`DOUBLE`](floating-point-types.html
    "13.1.4 浮点类型（近似值） - FLOAT, DOUBLE")、[`DECIMAL`](fixed-point-types.html "13.1.3 定点类型（精确值）
    - DECIMAL, NUMERIC")或[`REAL`](floating-point-types.html "13.1.4 浮点类型（近似值） - FLOAT,
    DOUBLE")类型，则将值四舍五入到最接近的整数，然后尝试使用整数值的规则将值转换为`YEAR`，如下所示：
- en: '[PRE6]'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: An argument of type [`GEOMETRY`](spatial-type-overview.html "13.4.1 Spatial
    Data Types") cannot be converted to [`YEAR`](year.html "13.2.4 The YEAR Type").
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不能将类型为[`GEOMETRY`](spatial-type-overview.html "13.4.1 空间数据类型")的参数转换为[`YEAR`](year.html
    "13.2.4 YEAR 类型")。
- en: For a value that cannot be successfully converted to `YEAR`, return `NULL`.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于无法成功转换为`YEAR`的值，返回`NULL`。
- en: 'A string value containing non-numeric characters which must be truncated prior
    to conversion raises a warning, as shown here:'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包含必须在转换之前截断的非数字字符的字符串值会引发警告，如下所示：
- en: '[PRE7]'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In MySQL 8.0.17 and higher, [`InnoDB`](innodb-storage-engine.html "Chapter 17 The
    InnoDB Storage Engine") allows the use of an additional `ARRAY` keyword for creating
    a multi-valued index on a [`JSON`](json.html "13.5 The JSON Data Type") array
    as part of [`CREATE INDEX`](create-index.html "15.1.15 CREATE INDEX Statement"),
    [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement"), and [`ALTER
    TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement") statements. `ARRAY` is
    not supported except when used to create a multi-valued index in one of these
    statements, in which case it is required. The column being indexed must be a column
    of type `JSON`. With `ARRAY`, the *`type`* following the `AS` keyword may specify
    any of the types supported by `CAST()`, with the exceptions of `BINARY`, `JSON`,
    and `YEAR`. For syntax information and examples, as well as other relevant information,
    see [Multi-Valued Indexes](create-index.html#create-index-multi-valued "Multi-Valued
    Indexes").
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MySQL 8.0.17及更高版本中，[`InnoDB`](innodb-storage-engine.html "第17章 InnoDB存储引擎")允许在[`CREATE
    INDEX`](create-index.html "15.1.15 CREATE INDEX语句")、[`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE语句")和[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE语句")语句中使用额外的`ARRAY`关键字来创建JSON数组的多值索引。除了在这些语句中用于创建多值索引时，不支持`ARRAY`。被索引的列必须是JSON类型的列。使用`ARRAY`时，`AS`关键字后面的*`type`*可以指定`CAST()`支持的任何类型，但不包括`BINARY`、`JSON`和`YEAR`。有关语法信息和示例，以及其他相关信息，请参见[多值索引](create-index.html#create-index-multi-valued
    "多值索引")。
- en: Note
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '[`CONVERT()`](cast-functions.html#function_convert), unlike [`CAST()`](cast-functions.html#function_cast),
    does *not* support multi-valued index creation or the `ARRAY` keyword.'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与[`CAST()`](cast-functions.html#function_cast)不同，[`CONVERT()`](cast-functions.html#function_convert)
    *不*支持多值索引创建或`ARRAY`关键字。
- en: Beginning with MySQL 8.0.22, `CAST()` supports retrieval of a [`TIMESTAMP`](datetime.html
    "13.2.2 The DATE, DATETIME, and TIMESTAMP Types") value as being in UTC, using
    the `AT TIMEZONE` operator. The only supported time zone is UTC; this can be specified
    as either of `'+00:00'` or `'UTC'`. The only return type supported by this syntax
    is `DATETIME`, with an optional precision specifier in the range of 0 to 6, inclusive.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.22开始，`CAST()`支持使用`AT TIMEZONE`运算符将[`TIMESTAMP`](datetime.html "13.2.2
    日期、时间和时间戳类型")值检索为UTC时间。唯一支持的时区是UTC；可以将其指定为`'+00:00'`或`'UTC'`。此语法支持的唯一返回类型是`DATETIME`，其精度范围为0到6，包括0和6。
- en: '`TIMESTAMP` values that use timezone offsets are also supported.'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用时区偏移的`TIMESTAMP`值也受支持。
- en: '[PRE8]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you use `''UTC''` as the time zone specifier with this form of `CAST()`,
    and the server raises an error such as Unknown or incorrect time zone: ''UTC'',
    you may need to install the MySQL time zone tables (see [Populating the Time Zone
    Tables](time-zone-support.html#time-zone-installation "Populating the Time Zone
    Tables")).'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您在`CAST()`的这种形式中使用`'UTC'`作为时区指定符，并且服务器引发错误，例如未知或不正确的时区：'UTC'，则可能需要安装MySQL时区表（请参阅[填充时区表](time-zone-support.html#time-zone-installation
    "填充时区表")）。
- en: '`AT TIME ZONE` does not support the `ARRAY` keyword, and is not supported by
    the [`CONVERT()`](cast-functions.html#function_convert) function.'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`AT TIME ZONE`不支持`ARRAY`关键字，并且不受[`CONVERT()`](cast-functions.html#function_convert)函数支持。'
- en: '[`CONVERT(*`expr`* USING *`transcoding_name`*)`](cast-functions.html#function_convert)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CONVERT(*`expr`* USING *`transcoding_name`*)`](cast-functions.html#function_convert)'
- en: '[`CONVERT(*`expr`*,*`type`*)`](cast-functions.html#function_convert)'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CONVERT(*`expr`*,*`type`*)`](cast-functions.html#function_convert)'
- en: '[`CONVERT(*`expr`* USING *`transcoding_name`*)`](cast-functions.html#function_convert)
    is standard SQL syntax. The non-`USING` form of [`CONVERT()`](cast-functions.html#function_convert)
    is ODBC syntax. Regardless of the syntax used, the function returns `NULL` if
    *`expr`* is `NULL`.'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CONVERT(*`expr`* USING *`transcoding_name`*)`](cast-functions.html#function_convert)是标准的SQL语法。[`CONVERT()`](cast-functions.html#function_convert)的非`USING`形式是ODBC语法。无论使用哪种语法，如果*`expr`*为`NULL`，该函数都会返回`NULL`。'
- en: '[`CONVERT(*`expr`* USING *`transcoding_name`*)`](cast-functions.html#function_convert)
    converts data between different character sets. In MySQL, transcoding names are
    the same as the corresponding character set names. For example, this statement
    converts the string `''abc''` in the default character set to the corresponding
    string in the `utf8mb4` character set:'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CONVERT(*`expr`* USING *`transcoding_name`*)`](cast-functions.html#function_convert)在不同字符集之间转换数据。在
    MySQL 中，转码名称与相应的字符集名称相同。例如，此语句将默认字符集中的字符串`''abc''`转换为`utf8mb4`字符集中的相应字符串：'
- en: '[PRE9]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[`CONVERT(*`expr`*, *`type`*)`](cast-functions.html#function_convert) syntax
    (without `USING`) takes an expression and a *`type`* value specifying a result
    type, and produces a result value of the specified type. This operation may also
    be expressed as [`CAST(*`expr`* AS *`type`*)`](cast-functions.html#function_cast),
    which is equivalent. For more information, see the description of [`CAST()`](cast-functions.html#function_cast).'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`CONVERT(*`expr`*, *`type`*)`](cast-functions.html#function_convert)语法（不带`USING`）接受一个表达式和一个*`type`*值，指定结果类型，并产生指定类型的结果值。此操作也可以表示为[`CAST(*`expr`*
    AS *`type`*)`](cast-functions.html#function_cast)，这是等效的。有关更多信息，请参阅[`CAST()`](cast-functions.html#function_cast)的描述。'
- en: Note
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Prior to MySQL 8.0.28, this function sometimes allowed invalid conversions of
    [`BINARY`](binary-varbinary.html "13.3.3 The BINARY and VARBINARY Types") values
    to a nonbinary character set. When `CONVERT()` was used as part of the expression
    for an indexed generated column, this could lead to index corruption following
    an upgrade from a previous version of MySQL. See [SQL Changes](upgrading-from-previous-series.html#upgrade-sql-changes
    "SQL Changes"), for information about how to handle this situation.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MySQL 8.0.28 之前，这个函数有时允许将[`BINARY`](binary-varbinary.html "13.3.3 二进制和VARBINARY类型")值无效地转换为非二进制字符集。当`CONVERT()`作为索引生成列表达式的一部分时，这可能导致在从先前版本的
    MySQL 升级后出现索引损坏。有关如何处理这种情况的信息，请参见[SQL更改](upgrading-from-previous-series.html#upgrade-sql-changes
    "SQL Changes")。
- en: Character Set Conversions
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 字符集转换
- en: '[`CONVERT()`](cast-functions.html#function_convert) with a `USING` clause converts
    data between character sets:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 带有`USING`子句的[`CONVERT()`](cast-functions.html#function_convert)在字符集之间转换数据：
- en: '[PRE10]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In MySQL, transcoding names are the same as the corresponding character set
    names.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MySQL 中，转码名称与相应的字符集名称相同。
- en: 'Examples:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: '[PRE11]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'To convert strings between character sets, you can also use [`CONVERT(*`expr`*,
    *`type`*)`](cast-functions.html#function_convert) syntax (without `USING`), or
    [`CAST(*`expr`* AS *`type`*)`](cast-functions.html#function_cast), which is equivalent:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要在字符集之间转换字符串，还可以使用[`CONVERT(*`expr`*, *`type`*)`](cast-functions.html#function_convert)语法（不带`USING`），或者等效的[`CAST(*`expr`*
    AS *`type`*)`](cast-functions.html#function_cast)：
- en: '[PRE12]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Examples:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 例子：
- en: '[PRE13]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If you specify `CHARACTER SET *`charset_name`*` as just shown, the character
    set and collation of the result are *`charset_name`* and the default collation
    of *`charset_name`*. If you omit `CHARACTER SET *`charset_name`*`, the character
    set and collation of the result are defined by the [`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)
    and [`collation_connection`](server-system-variables.html#sysvar_collation_connection)
    system variables that determine the default connection character set and collation
    (see [Section 12.4, “Connection Character Sets and Collations”](charset-connection.html
    "12.4 Connection Character Sets and Collations")).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你像刚才展示的那样指定`CHARACTER SET *`charset_name`*`，结果的字符集和排序规则分别为*`charset_name`*和*`charset_name`*的默认排序规则。如果省略`CHARACTER
    SET *`charset_name`*`，结果的字符集和排序规则由确定默认连接字符集和排序规则的[`character_set_connection`](server-system-variables.html#sysvar_character_set_connection)和[`collation_connection`](server-system-variables.html#sysvar_collation_connection)系统变量定义（参见[第12.4节，“连接字符集和排序规则”](charset-connection.html
    "12.4 连接字符集和排序规则")）。
- en: 'A `COLLATE` clause is not permitted within a [`CONVERT()`](cast-functions.html#function_convert)
    or [`CAST()`](cast-functions.html#function_cast) call, but you can apply it to
    the function result. For example, these are legal:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在[`CONVERT()`](cast-functions.html#function_convert)或[`CAST()`](cast-functions.html#function_cast)调用中不允许使用`COLLATE`子句，但可以将其应用于函数结果。例如，以下是合法的：
- en: '[PRE14]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'But these are illegal:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 但以下是不合法的：
- en: '[PRE15]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: For string literals, another way to specify the character set is to use a character
    set introducer. `_latin1` and `_latin2` in the preceding example are instances
    of introducers. Unlike conversion functions such as [`CAST()`](cast-functions.html#function_cast),
    or [`CONVERT()`](cast-functions.html#function_convert), which convert a string
    from one character set to another, an introducer designates a string literal as
    having a particular character set, with no conversion involved. For more information,
    see [Section 12.3.8, “Character Set Introducers”](charset-introducer.html "12.3.8 Character
    Set Introducers").
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 对于字符串字面值，指定字符集的另一种方法是使用字符集引导符。在前面的示例中，`_latin1`和`_latin2`是引导符的实例。与转换函数（如[`CAST()`](cast-functions.html#function_cast)或[`CONVERT()`](cast-functions.html#function_convert)）不同，这些函数将字符串从一个字符集转换为另一个字符集，引导符指定字符串字面值具有特定的字符集，不涉及转换。有关更多信息，请参见[第 12.3.8
    节，“字符集引导符”](charset-introducer.html "12.3.8 字符集引导符")。
- en: Character Set Conversions for String Comparisons
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 字符串比较的字符集转换
- en: 'Normally, you cannot compare a [`BLOB`](blob.html "13.3.4 The BLOB and TEXT
    Types") value or other binary string in case-insensitive fashion because binary
    strings use the `binary` character set, which has no collation with the concept
    of lettercase. To perform a case-insensitive comparison, first use the [`CONVERT()`](cast-functions.html#function_convert)
    or [`CAST()`](cast-functions.html#function_cast) function to convert the value
    to a nonbinary string. Comparisons of the resulting string use its collation.
    For example, if the conversion result collation is not case-sensitive, a [`LIKE`](string-comparison-functions.html#operator_like)
    operation is not case-sensitive. That is true for the following operation because
    the default `utf8mb4` collation (`utf8mb4_0900_ai_ci`) is not case-sensitive:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，你无法以不区分大小写的方式比较[`BLOB`](blob.html "13.3.4 BLOB 和 TEXT 类型")值或其他二进制字符串，因为二进制字符串使用`binary`字符集，该字符集没有与大小写概念相关的排序规则。要执行不区分大小写的比较，首先使用[`CONVERT()`](cast-functions.html#function_convert)或[`CAST()`](cast-functions.html#function_cast)函数将值转换为非二进制字符串。对转换后的字符串进行比较时使用其排序规则。例如，如果转换结果的排序规则不区分大小写，则[`LIKE`](string-comparison-functions.html#operator_like)操作也不区分大小写。这对于以下操作是正确的，因为默认的`utf8mb4`排序规则（`utf8mb4_0900_ai_ci`）不区分大小写：
- en: '[PRE16]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To specify a particular collation for the converted string, use a `COLLATE`
    clause following the [`CONVERT()`](cast-functions.html#function_convert) call:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 要为转换后的字符串指定特定的排序规则，请在[`CONVERT()`](cast-functions.html#function_convert)调用后使用`COLLATE`子句：
- en: '[PRE17]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: To use a different character set, substitute its name for `utf8mb4` in the preceding
    statements (and similarly to use a different collation).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用不同的字符集，请在前述语句中用其名称替换`utf8mb4`（类似地，要使用不同的排序规则也是如此）。
- en: '[`CONVERT()`](cast-functions.html#function_convert) and [`CAST()`](cast-functions.html#function_cast)
    can be used more generally for comparing strings represented in different character
    sets. For example, a comparison of these strings results in an error because they
    have different character sets:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CONVERT()`](cast-functions.html#function_convert)和[`CAST()`](cast-functions.html#function_cast)可以更普遍地用于比较以不同字符集表示的字符串。例如，对这些字符串进行比较会导致错误，因为它们具有不同的字符集：'
- en: '[PRE18]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Converting one of the strings to a character set compatible with the other
    enables the comparison to occur without error:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 将其中一个字符串转换为与另一个兼容的字符集，使比较可以顺利进行：
- en: '[PRE19]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Character set conversion is also useful preceding lettercase conversion of
    binary strings. [`LOWER()`](string-functions.html#function_lower) and [`UPPER()`](string-functions.html#function_upper)
    are ineffective when applied directly to binary strings because the concept of
    lettercase does not apply. To perform lettercase conversion of a binary string,
    first convert it to a nonbinary string using a character set appropriate for the
    data stored in the string:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 字符集转换在对二进制字符串进行大小写转换之前也很有用。当直接应用于二进制字符串时，[`LOWER()`](string-functions.html#function_lower)和[`UPPER()`](string-functions.html#function_upper)是无效的，因为大小写概念不适用。要对二进制字符串执行大小写转换，首先使用适合字符串中存储的数据的字符集将其转换为非二进制字符串：
- en: '[PRE20]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Be aware that if you apply [`BINARY`](cast-functions.html#operator_binary),
    [`CAST()`](cast-functions.html#function_cast), or [`CONVERT()`](cast-functions.html#function_convert)
    to an indexed column, MySQL may not be able to use the index efficiently.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果将[`BINARY`](cast-functions.html#operator_binary)、[`CAST()`](cast-functions.html#function_cast)或[`CONVERT()`](cast-functions.html#function_convert)应用于索引列，MySQL可能无法有效地使用索引。
- en: Cast Operations on Spatial Types
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对空间类型执行转换操作
- en: 'As of MySQL 8.0.24, [`CAST()`](cast-functions.html#function_cast) and [`CONVERT()`](cast-functions.html#function_convert)
    support casting geometry values from one spatial type to another, for certain
    combinations of spatial types. The following list shows the permitted type combinations,
    where “MySQL extension” designates casts implemented in MySQL beyond those defined
    in the [SQL/MM standard](spatial-types.html "13.4 Spatial Data Types"):'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0.24开始，[`CAST()`](cast-functions.html#function_cast)和[`CONVERT()`](cast-functions.html#function_convert)支持将几何值从一种空间类型转换为另一种空间类型，适用于某些空间类型的组合。以下列表显示了允许的类型组合，其中“MySQL扩展”指的是MySQL中实现的超出[SQL/MM标准](spatial-types.html
    "13.4 空间数据类型")定义的转换：
- en: 'From `Point` to:'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`Point`到：
- en: '`MultiPoint`'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiPoint`'
- en: '`GeometryCollection`'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GeometryCollection`'
- en: 'From `LineString` to:'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`LineString`到：
- en: '`Polygon` (MySQL extension)'
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Polygon`（MySQL扩展）'
- en: '`MultiPoint` (MySQL extension)'
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiPoint`（MySQL扩展）'
- en: '`MultiLineString`'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiLineString`'
- en: '`GeometryCollection`'
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GeometryCollection`'
- en: 'From `Polygon` to:'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`Polygon`到：
- en: '`LineString` (MySQL extension)'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LineString`（MySQL扩展）'
- en: '`MultiLineString` (MySQL extension)'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiLineString`（MySQL扩展）'
- en: '`MultiPolygon`'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiPolygon`'
- en: '`GeometryCollection`'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GeometryCollection`'
- en: 'From `MultiPoint` to:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`MultiPoint`到：
- en: '`Point`'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Point`'
- en: '`LineString` (MySQL extension)'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LineString`（MySQL扩展）'
- en: '`GeometryCollection`'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GeometryCollection`'
- en: 'From `MultiLineString` to:'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`MultiLineString`到：
- en: '`LineString`'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LineString`'
- en: '`Polygon` (MySQL extension)'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Polygon`（MySQL扩展）'
- en: '`MultiPolygon` (MySQL extension)'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiPolygon`（MySQL扩展）'
- en: '`GeometryCollection`'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GeometryCollection`'
- en: 'From `MultiPolygon` to:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`MultiPolygon`到：
- en: '`Polygon`'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Polygon`'
- en: '`MultiLineString` (MySQL extension)'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiLineString`（MySQL扩展）'
- en: '`GeometryCollection`'
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GeometryCollection`'
- en: 'From `GeometryCollection` to:'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`GeometryCollection`到：
- en: '`Point`'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Point`'
- en: '`LineString`'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LineString`'
- en: '`Polygon`'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Polygon`'
- en: '`MultiPoint`'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiPoint`'
- en: '`MultiLineString`'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiLineString`'
- en: '`MultiPolygon`'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiPolygon`'
- en: In spatial casts, `GeometryCollection` and `GeomCollection` are synonyms for
    the same result type.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在空间转换中，`GeometryCollection`和`GeomCollection`是相同结果类型的同义词。
- en: Some conditions apply to all spatial type casts, and some conditions apply only
    when the cast result is to have a particular spatial type. For information about
    terms such as “well-formed geometry,” see [Section 13.4.4, “Geometry Well-Formedness
    and Validity”](geometry-well-formedness-validity.html "13.4.4 Geometry Well-Formedness
    and Validity").
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 一些条件适用于所有空间类型转换，而一些条件仅适用于转换结果为特定空间类型时。有关“格式良好的几何”等术语的信息，请参阅[第13.4.4节，“几何格式良好性和有效性”](geometry-well-formedness-validity.html
    "13.4.4 几何格式良好性和有效性")。
- en: '[General Conditions for Spatial Casts](cast-functions.html#spatial-cast-general-conditions
    "General Conditions for Spatial Casts")'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[空间转换的一般条件](cast-functions.html#spatial-cast-general-conditions "空间转换的一般条件")'
- en: '[Conditions for Casts to Point](cast-functions.html#spatial-cast-point-conditions
    "Conditions for Casts to Point")'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换为Point的条件](cast-functions.html#spatial-cast-point-conditions "转换为Point的条件")'
- en: '[Conditions for Casts to LineString](cast-functions.html#spatial-cast-linestring-conditions
    "Conditions for Casts to LineString")'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换为LineString的条件](cast-functions.html#spatial-cast-linestring-conditions "转换为LineString的条件")'
- en: '[Conditions for Casts to Polygon](cast-functions.html#spatial-cast-polygon-conditions
    "Conditions for Casts to Polygon")'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换为Polygon的条件](cast-functions.html#spatial-cast-polygon-conditions "转换为Polygon的条件")'
- en: '[Conditions for Casts to MultiPoint](cast-functions.html#spatial-cast-multipoint-conditions
    "Conditions for Casts to MultiPoint")'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换为MultiPoint的条件](cast-functions.html#spatial-cast-multipoint-conditions "转换为MultiPoint的条件")'
- en: '[Conditions for Casts to MultiLineString](cast-functions.html#spatial-cast-multilinestring-conditions
    "Conditions for Casts to MultiLineString")'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换为MultiLineString的条件](cast-functions.html#spatial-cast-multilinestring-conditions
    "转换为MultiLineString的条件")'
- en: '[Conditions for Casts to MultiPolygon](cast-functions.html#spatial-cast-multipolygon-conditions
    "Conditions for Casts to MultiPolygon")'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换为MultiPolygon的条件](cast-functions.html#spatial-cast-multipolygon-conditions
    "转换为MultiPolygon的条件")'
- en: '[Conditions for Casts to GeometryCollection](cast-functions.html#spatial-cast-geometrycollection-conditions
    "Conditions for Casts to GeometryCollection")'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[转换为GeometryCollection的条件](cast-functions.html#spatial-cast-geometrycollection-conditions
    "转换为GeometryCollection的条件")'
- en: General Conditions for Spatial Casts
  id: totrans-176
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 空间转换的一般条件
- en: 'These conditions apply to all spatial casts regardless of the result type:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这些条件适用于所有空间转换，无论结果类型如何：
- en: The result of a cast is in the same SRS as that of the expression to cast.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换的结果与要转换的表达式的SRS相同。
- en: Casting between spatial types does not change coordinate values or order.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在空间类型之间进行转换不会改变坐标值或顺序。
- en: If the expression to cast is `NULL`, the function result is `NULL`.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式为`NULL`，函数结果为`NULL`。
- en: Casting to spatial types using the [`JSON_VALUE()`](json-search-functions.html#function_json-value)
    function with a `RETURNING` clause specifying a spatial type is not permitted.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许使用带有指定空间类型的`RETURNING`子句的[`JSON_VALUE()`](json-search-functions.html#function_json-value)函数来转换空间类型。
- en: Casting to an `ARRAY` of spatial types is not permitted.
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许将空间类型转换为`ARRAY`。
- en: If the spatial type combination is permitted but the expression to cast is not
    a syntactically well-formed geometry, an [`ER_GIS_INVALID_DATA`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_gis_invalid_data)
    error occurs.
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果空间类型组合是允许的，但要转换的表达式不是一个语法上良好形成的几何图形，将会发生一个[`ER_GIS_INVALID_DATA`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_gis_invalid_data)错误。
- en: If the spatial type combination is permitted but the expression to cast is a
    syntactically well-formed geometry in an undefined spatial reference system (SRS),
    an [`ER_SRS_NOT_FOUND`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_srs_not_found)
    error occurs.
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果空间类型组合是允许的，但要转换的表达式是在未定义的空间参考系统（SRS）中语法上良好形成的几何图形，则会发生一个[`ER_SRS_NOT_FOUND`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_srs_not_found)错误。
- en: 'If the expression to cast has a geographic SRS but has a longitude or latitude
    that is out of range, an error occurs:'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式具有地理SRS但经度或纬度超出范围，则会发生错误：
- en: If a longitude value is not in the range (−180, 180], an [`ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_geometry_param_longitude_out_of_range)
    error occurs.
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果经度值不在范围（−180, 180]内，则会发生一个[`ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_geometry_param_longitude_out_of_range)错误。
- en: If a latitude value is not in the range [−90, 90], an [`ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_geometry_param_latitude_out_of_range)
    error occurs.
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果纬度值不在范围[−90, 90]内，则会发生一个[`ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_geometry_param_latitude_out_of_range)错误。
- en: Ranges shown are in degrees. If an SRS uses another unit, the range uses the
    corresponding values in its unit. The exact range limits deviate slightly due
    to floating-point arithmetic.
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 显示的范围以度为单位。如果SRS使用另一个单位，则范围使用其单位中的相应值。由于浮点运算，确切的范围限制略有偏差。
- en: Conditions for Casts to Point
  id: totrans-189
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 转换为点的条件
- en: 'When the cast result type is `Point`, these conditions apply:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 当转换结果类型为`Point`时，应用以下条件：
- en: If the expression to cast is a well-formed geometry of type `Point`, the function
    result is that `Point`.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个`Point`类型的良好形成的几何图形，则函数结果为该`Point`。
- en: If the expression to cast is a well-formed geometry of type `MultiPoint` containing
    a single `Point`, the function result is that `Point`. If the expression contains
    more than one `Point`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含单个`Point`的`MultiPoint`类型的良好形成的几何图形，则函数结果为该`Point`。如果表达式包含多个`Point`，则会发生一个[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type `GeometryCollection`
    containing only a single `Point`, the function result is that `Point`. If the
    expression is empty, contains more than one `Point`, or contains other geometry
    types, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含单个`Point`的`GeometryCollection`类型的良好形成的几何图形，则函数结果为该`Point`。如果表达式为空，包含多个`Point`或包含其他几何类型，则会发生一个[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type other than `Point`,
    `MultiPoint`, `GeometryCollection`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是除`Point`、`MultiPoint`、`GeometryCollection`之外的其他类型的良好形成的几何图形，则会发生一个[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: Conditions for Casts to LineString
  id: totrans-195
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 转换为LineString的条件
- en: 'When the cast result type is `LineString`, these conditions apply:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当转换结果类型为`LineString`时，应用以下条件：
- en: If the expression to cast is a well-formed geometry of type `LineString`, the
    function result is that `LineString`.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个`LineString`类型的良好形成的几何图形，则函数结果为该`LineString`。
- en: If the expression to cast is a well-formed geometry of type `Polygon` that has
    no inner rings, the function result is a `LineString` containing the points of
    the outer ring in the same order. If the expression has inner rings, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`Polygon`且没有内环的形状，则函数结果是一个`LineString`，其中包含外环的点按相同顺序排列。如果表达式有内环，则会出现[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type `MultiPoint` containing
    at least two points, the function result is a `LineString` containing the points
    of the `MultiPoint` in the order they appear in the expression. If the expression
    contains only one `Point`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是包含至少两个点的类型为`MultiPoint`的形状，则函数结果是一个`LineString`，其中包含`MultiPoint`中点的顺序与表达式中出现的顺序相同。如果表达式只包含一个`Point`，则会出现[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type `MultiLineString`
    containing a single `LineString`, the function result is that `LineString`. If
    the expression contains more than one `LineString`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是包含单个`LineString`的类型为`MultiLineString`的形状，则函数结果是该`LineString`。如果表达式包含多个`LineString`，则会出现[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type `GeometryCollection`,
    containing only a single `LineString`, the function result is that `LineString`.
    If the expression is empty, contains more than one `LineString`, or contains other
    geometry types, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是包含单个`LineString`的类型为`GeometryCollection`的形状，则函数结果是该`LineString`。如果表达式为空，包含多个`LineString`或包含其他几何类型，则会出现[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type other than `LineString`,
    `Polygon`, `MultiPoint`, `MultiLineString`, or `GeometryCollection`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是除`LineString`、`Polygon`、`MultiPoint`、`MultiLineString`或`GeometryCollection`之外类型的形状，则会出现[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: Conditions for Casts to Polygon
  id: totrans-203
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 转换为多边形的条件
- en: 'When the cast result type is `Polygon`, these conditions apply:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 当转换结果类型为`Polygon`时，应满足以下条件：
- en: If the expression to cast is a well-formed geometry of type `LineString` that
    is a ring (that is, the start and end points are the same), the function result
    is a `Polygon` with an outer ring consisting of the points of the `LineString`
    in the same order. If the expression is not a ring, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs. If the ring is not in the correct order (the exterior ring must
    be counter-clockwise), an [`ER_INVALID_CAST_POLYGON_RING_DIRECTION`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_polygon_ring_direction)
    error occurs.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`LineString`的形状，且是一个环（即起点和终点相同），则函数结果是一个外环由`LineString`中的点按相同顺序组成的`Polygon`。如果表达式不是环，则会出现[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。如果环的顺序不正确（外环必须是逆时针方向），则会出现[`ER_INVALID_CAST_POLYGON_RING_DIRECTION`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_polygon_ring_direction)错误。
- en: If the expression to cast is a well-formed geometry of type `Polygon`, the function
    result is that `Polygon`.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`Polygon`的形状，则函数结果是该`Polygon`。
- en: If the expression to cast is a well-formed geometry of type `MultiLineString`
    where all elements are rings, the function result is a `Polygon` with the first
    `LineString` as outer ring and any additional `LineString` values as inner rings.
    If any element of the expression is not a ring, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs. If any ring is not in the correct order (the exterior ring must
    be counter-clockwise, interior rings must be clockwise), an [`ER_INVALID_CAST_POLYGON_RING_DIRECTION`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_polygon_ring_direction)
    error occurs.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`MultiLineString`且所有元素都是环的形状良好的几何图形，则函数结果是以第一个`LineString`作为外环，任何额外的`LineString`值作为内环的`Polygon`。如果表达式的任何元素不是环，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。如果任何环不按正确顺序排列（外环必须是逆时针，内环必须是顺时针），则会发生[`ER_INVALID_CAST_POLYGON_RING_DIRECTION`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_polygon_ring_direction)错误。
- en: If the expression to cast is a well-formed geometry of type `MultiPolygon` containing
    a single `Polygon`, the function result is that `Polygon`. If the expression contains
    more than one `Polygon`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`MultiPolygon`且包含单个`Polygon`的形状良好的几何图形，则函数结果是该`Polygon`。如果表达式包含多个`Polygon`，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type `GeometryCollection`
    containing only a single `Polygon`, the function result is that `Polygon`. If
    the expression is empty, contains more than one `Polygon`, or contains other geometry
    types, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`GeometryCollection`且仅包含单个`Polygon`的形状良好的几何图形，则函数结果是该`Polygon`。如果表达式为空，包含多个`Polygon`或包含其他几何类型，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type other than `LineString`,
    `Polygon`, `MultiLineString`, `MultiPolygon`, or `GeometryCollection`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`LineString`、`Polygon`、`MultiLineString`、`MultiPolygon`或`GeometryCollection`之外的形状良好的几何图形，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: Conditions for Casts to MultiPoint
  id: totrans-211
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 转换为MultiPoint的条件
- en: 'When the cast result type is `MultiPoint`, these conditions apply:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 当转换结果类型为`MultiPoint`时，应满足以下条件：
- en: If the expression to cast is a well-formed geometry of type `Point`, the function
    result is a `MultiPoint` containing that `Point` as its sole element.
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`Point`的形状良好的几何图形，则函数结果是包含该`Point`作为唯一元素的`MultiPoint`。
- en: If the expression to cast is a well-formed geometry of type `LineString`, the
    function result is a `MultiPoint` containing the points of the `LineString` in
    the same order.
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`LineString`的形状良好的几何图形，则函数结果是按相同顺序包含`LineString`的点的`MultiPoint`。
- en: If the expression to cast is a well-formed geometry of type `MultiPoint`, the
    function result is that `MultiPoint`.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`MultiPoint`的形状良好的几何图形，则函数结果是该`MultiPoint`。
- en: If the expression to cast is a well-formed geometry of type `GeometryCollection`
    containing only points, the function result is a `MultiPoint` containing those
    points. If the `GeometryCollection` is empty or contains other geometry types,
    an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`GeometryCollection`且仅包含点的形状良好的几何图形，则函数结果是包含这些点的`MultiPoint`。如果`GeometryCollection`为空或包含其他几何类型，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type other than `Point`,
    `LineString`, `MultiPoint`, or `GeometryCollection`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`Point`、`LineString`、`MultiPoint`或`GeometryCollection`之外的形状良好的几何图形，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: Conditions for Casts to MultiLineString
  id: totrans-218
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 转换为MultiLineString的条件
- en: 'When the cast result type is `MultiLineString`, these conditions apply:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 当转换结果类型为`MultiLineString`时，应满足以下条件：
- en: If the expression to cast is a well-formed geometry of type `LineString`, the
    function result is a `MultiLineString` containing that `LineString` as its sole
    element.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`LineString`的格式良好的几何图形，则函数结果为包含该`LineString`作为唯一元素的`MultiLineString`。
- en: If the expression to cast is a well-formed geometry of type `Polygon`, the function
    result is a `MultiLineString` containing the outer ring of the `Polygon` as its
    first element and any inner rings as additional elements in the order they appear
    in the expression.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`Polygon`的格式良好的几何图形，则函数结果为包含`Polygon`的外环作为第一个元素，任何内环作为额外元素按表达式中出现顺序排列的`MultiLineString`。
- en: If the expression to cast is a well-formed geometry of type `MultiLineString`,
    the function result is that `MultiLineString`.
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`MultiLineString`的格式良好的几何图形，则函数结果为该`MultiLineString`。
- en: If the expression to cast is a well-formed geometry of type `MultiPolygon` containing
    only polygons without inner rings, the function result is a `MultiLineString`
    containing the polygon rings in the order they appear in the expression. If the
    expression contains any polygons with inner rings, an [`ER_WRONG_PARAMETERS_TO_STORED_FCT`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_wrong_parameters_to_stored_fct)
    error occurs.
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是仅包含没有内环的多边形的`MultiPolygon`的格式良好的几何图形，则函数结果为包含多边形环按表达式中出现顺序排列的`MultiLineString`。如果表达式包含任何带有内环的多边形，则会发生[`ER_WRONG_PARAMETERS_TO_STORED_FCT`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_wrong_parameters_to_stored_fct)错误。
- en: If the expression to cast is a well-formed geometry of type `GeometryCollection`
    containing only linestrings, the function result is a `MultiLineString` containing
    those linestrings. If the expression is empty or contains other geometry types,
    an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是仅包含线串的`GeometryCollection`的格式良好的几何图形，则函数结果为包含这些线串的`MultiLineString`。如果表达式为空或包含其他几何类型，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type other than `LineString`,
    `Polygon`, `MultiLineString`, `MultiPolygon`, or `GeometryCollection`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`LineString`、`Polygon`、`MultiLineString`、`MultiPolygon`或`GeometryCollection`之外的格式良好的几何图形，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: Conditions for Casts to MultiPolygon
  id: totrans-226
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 转换为MultiPolygon的条件
- en: 'When the cast result type is `MultiPolygon`, these conditions apply:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 当转换结果类型为`MultiPolygon`时，应满足以下条件：
- en: If the expression to cast is a well-formed geometry of type `Polygon`, the function
    result is a `MultiPolygon` containing the `Polygon` as its sole element.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`Polygon`的格式良好的几何图形，则函数结果为包含该`Polygon`作为唯一元素的`MultiPolygon`。
- en: If the expression to cast is a well-formed geometry of type `MultiLineString`
    where all elements are rings, the function result is a `MultiPolygon` containing
    a `Polygon` with only an outer ring for each element of the expression. If any
    element is not a ring, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs. If any ring is not in the correct order (exterior ring must be counter-clockwise),
    an [`ER_INVALID_CAST_POLYGON_RING_DIRECTION`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_polygon_ring_direction)
    error occurs.
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是所有元素均为环的类型为`MultiLineString`的格式良好的几何图形，则函数结果为包含每个元素的仅具有外环的`Polygon`的`MultiPolygon`。如果任何元素不是环，则会发生[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。如果任何环不按正确顺序（外环必须逆时针）排列，则会发生[`ER_INVALID_CAST_POLYGON_RING_DIRECTION`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_polygon_ring_direction)错误。
- en: If the expression to cast is a well-formed geometry of type `MultiPolygon`,
    the function result is that `MultiPolygon`.
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是类型为`MultiPolygon`的格式良好的几何图形，则函数结果为该`MultiPolygon`。
- en: If the expression to cast is a well-formed geometry of type `GeometryCollection`
    containing only polygons, the function result is a `MultiPolygon` containing those
    polygons. If the expression is empty or contains other geometry types, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含多边形的`GeometryCollection`类型的形状，函数的结果是包含这些多边形的`MultiPolygon`。如果表达式为空或包含其他几何类型，则会出现[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: If the expression to cast is a well-formed geometry of type other than `Polygon`,
    `MultiLineString`, `MultiPolygon`, or `GeometryCollection`, an [`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)
    error occurs.
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是除了`Polygon`、`MultiLineString`、`MultiPolygon`或`GeometryCollection`之外的其他类型的形状，会出现[`ER_INVALID_CAST_TO_GEOMETRY`](/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_invalid_cast_to_geometry)错误。
- en: Conditions for Casts to GeometryCollection
  id: totrans-233
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 转换为GeometryCollection的条件
- en: 'When the cast result type is `GeometryCollection`, these conditions apply:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 当转换结果类型为`GeometryCollection`时，这些条件适用：
- en: '`GeometryCollection` and `GeomCollection` are synonyms for the same result
    type.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GeometryCollection`和`GeomCollection`是相同结果类型的同义词。'
- en: If the expression to cast is a well-formed geometry of type `Point`, the function
    result is a `GeometryCollection` containing that `Point` as its sole element.
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含点的`Point`类型的形状，函数的结果是包含该点作为唯一元素的`GeometryCollection`。
- en: If the expression to cast is a well-formed geometry of type `LineString`, the
    function result is a `GeometryCollection` containing that `LineString` as its
    sole element.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含线串的`LineString`类型的形状，函数的结果是包含该线串作为唯一元素的`GeometryCollection`。
- en: If the expression to cast is a well-formed geometry of type `Polygon`, the function
    result is a `GeometryCollection` containing that `Polygon` as its sole element.
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含多边形的`Polygon`类型的形状，函数的结果是包含该多边形作为唯一元素的`GeometryCollection`。
- en: If the expression to cast is a well-formed geometry of type `MultiPoint`, the
    function result is a `GeometryCollection` containing the points in the order they
    appear in the expression.
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含多点的`MultiPoint`类型的形状，函数的结果是按照表达式中出现的顺序包含这些点的`GeometryCollection`。
- en: If the expression to cast is a well-formed geometry of type `MultiLineString`,
    the function result is a `GeometryCollection` containing the linestrings in the
    order they appear in the expression.
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含多线串的`MultiLineString`类型的形状，函数的结果是按照表达式中出现的顺序包含这些线串的`GeometryCollection`。
- en: If the expression to cast is a well-formed geometry of type `MultiPolygon`,
    the function result is a `GeometryCollection` containing the elements of the `MultiPolygon`
    in the order they appear in the expression.
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含多边形的`MultiPolygon`类型的形状，函数的结果是按照表达���中出现的顺序包含`MultiPolygon`的元素的`GeometryCollection`。
- en: If the expression to cast is a well-formed geometry of type `GeometryCollection`,
    the function result is that `GeometryCollection`.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要转换的表达式是一个只包含GeometryCollection的`GeometryCollection`类型的形状，函数的结果就是那个`GeometryCollection`。
- en: Other Uses for Cast Operations
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换操作的其他用途
- en: 'The cast functions are useful for creating a column with a specific type in
    a [`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement")
    statement:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 转换函数在[`CREATE TABLE ... SELECT`](create-table.html "15.1.20 CREATE TABLE Statement")语句中创建具有特定类型的列时非常有用：
- en: '[PRE21]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The cast functions are useful for sorting [`ENUM`](enum.html "13.3.5 The ENUM
    Type") columns in lexical order. Normally, sorting of [`ENUM`](enum.html "13.3.5 The
    ENUM Type") columns occurs using the internal numeric values. Casting the values
    to [`CHAR`](char.html "13.3.2 The CHAR and VARCHAR Types") results in a lexical
    sort:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 转换函数对于按字典顺序排序[`ENUM`](enum.html "13.3.5 The ENUM Type")列非常有用。通常，对[`ENUM`](enum.html
    "13.3.5 The ENUM Type")列的排序使用内部数值。将值转换为[`CHAR`](char.html "13.3.2 The CHAR and
    VARCHAR Types")会导致字典排序：
- en: '[PRE22]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[`CAST()`](cast-functions.html#function_cast) also changes the result if you
    use it as part of a more complex expression such as [`CONCAT(''Date: '',CAST(NOW()
    AS DATE))`](string-functions.html#function_concat).'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CAST()`](cast-functions.html#function_cast)也会改变结果，如果你将其作为更复杂表达式的一部分，比如[`CONCAT(''Date:
    '',CAST(NOW() AS DATE))`](string-functions.html#function_concat)。'
- en: For temporal values, there is little need to use [`CAST()`](cast-functions.html#function_cast)
    to extract data in different formats. Instead, use a function such as [`EXTRACT()`](date-and-time-functions.html#function_extract),
    [`DATE_FORMAT()`](date-and-time-functions.html#function_date-format), or [`TIME_FORMAT()`](date-and-time-functions.html#function_time-format).
    See [Section 14.7, “Date and Time Functions”](date-and-time-functions.html "14.7 Date
    and Time Functions").
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 对于时间值，很少需要使用[`CAST()`](cast-functions.html#function_cast)以不同格式提取数据。而是使用诸如[`EXTRACT()`](date-and-time-functions.html#function_extract)、[`DATE_FORMAT()`](date-and-time-functions.html#function_date-format)或[`TIME_FORMAT()`](date-and-time-functions.html#function_time-format)等函数。请参阅[第14.7节，“日期和时间函数”](date-and-time-functions.html
    "14.7 日期和时间函数")。
- en: 'To cast a string to a number, it normally suffices to use the string value
    in numeric context:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 要将字符串转换为数字，通常只需在数字上下文中使用字符串值：
- en: '[PRE23]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'That is also true for hexadecimal and bit literals, which are binary strings
    by default:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 十六进制和位字面值也是默认的二进制字符串。
- en: '[PRE24]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: A string used in an arithmetic operation is converted to a floating-point number
    during expression evaluation.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在算术运算中使用的字符串在表达式评估期间被转换为浮点数。
- en: 'A number used in string context is converted to a string:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在字符串上下文中使用的数字被转换为字符串：
- en: '[PRE25]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: For information about implicit conversion of numbers to strings, see [Section 14.3,
    “Type Conversion in Expression Evaluation”](type-conversion.html "14.3 Type Conversion
    in Expression Evaluation").
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 有关将数字隐式转换为字符串的信息，请参阅[第14.3节，“表达式评估中的类型转换”](type-conversion.html "14.3 表达式评估中的类型转换")。
- en: MySQL supports arithmetic with both signed and unsigned 64-bit values. For numeric
    operators (such as [`+`](arithmetic-functions.html#operator_plus) or [`-`](arithmetic-functions.html#operator_minus))
    where one of the operands is an unsigned integer, the result is unsigned by default
    (see [Section 14.6.1, “Arithmetic Operators”](arithmetic-functions.html "14.6.1 Arithmetic
    Operators")). To override this, use the `SIGNED` or `UNSIGNED` cast operator to
    cast a value to a signed or unsigned 64-bit integer, respectively.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL支持带符号和无符号64位值的算术运算。对于数值运算符（如[`+`](arithmetic-functions.html#operator_plus)或[`-`](arithmetic-functions.html#operator_minus)），其中一个操作数是无符号整数时，默认结果是无符号的（参见[第14.6.1节，“算术运算符”](arithmetic-functions.html
    "14.6.1 算术运算符")）。要覆盖此行为，使用`SIGNED`或`UNSIGNED`强制转换运算符将值分别转换为有符号或无符号64位整数。
- en: '[PRE26]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: If either operand is a floating-point value, the result is a floating-point
    value and is not affected by the preceding rule. (In this context, [`DECIMAL`](fixed-point-types.html
    "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC") column values are
    regarded as floating-point values.)
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 如果任一操作数是浮点值，则结果是浮点值，并且不受前述规则的影响。（在此上下文中，[`DECIMAL`](fixed-point-types.html "13.1.3 固定点类型（精确值）
    - DECIMAL, NUMERIC")列值被视为浮点值。）
- en: '[PRE27]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The SQL mode affects the result of conversion operations (see [Section 7.1.11,
    “Server SQL Modes”](sql-mode.html "7.1.11 Server SQL Modes")). Examples:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: SQL模式会影响转换操作的结果（请参阅[第7.1.11节，“服务器SQL模式”](sql-mode.html "7.1.11 服务器SQL模式")）。示例：
- en: For conversion of a “zero” date string to a date, [`CONVERT()`](cast-functions.html#function_convert)
    and [`CAST()`](cast-functions.html#function_cast) return `NULL` and produce a
    warning when the [`NO_ZERO_DATE`](sql-mode.html#sqlmode_no_zero_date) SQL mode
    is enabled.
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于将“零”日期字符串转换为日期，当启用[`NO_ZERO_DATE`](sql-mode.html#sqlmode_no_zero_date) SQL模式时，[`CONVERT()`](cast-functions.html#function_convert)和[`CAST()`](cast-functions.html#function_cast)返回`NULL`并产生警告。
- en: For integer subtraction, if the [`NO_UNSIGNED_SUBTRACTION`](sql-mode.html#sqlmode_no_unsigned_subtraction)
    SQL mode is enabled, the subtraction result is signed even if any operand is unsigned.
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于整数减法，如果启用了[`NO_UNSIGNED_SUBTRACTION`](sql-mode.html#sqlmode_no_unsigned_subtraction)
    SQL模式，则减法结果是有符号的，即使任何操作数都是无符号的。
