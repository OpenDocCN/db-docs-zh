- en: 'A.17 MySQL 8.0 FAQ: InnoDB Data-at-Rest Encryption'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A.17 MySQL 8.0 FAQ：InnoDB 数据静态加密
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html)
- en: A.17.1\. [Is data decrypted for users who are authorized to see it?](faqs-tablespace-encryption.html#faq-tablespace-encryption-access)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.1\. [数据是否解密给了有权限查看的用户？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-access)
- en: A.17.2\. [What is the overhead associated with InnoDB data-at-rest encryption?](faqs-tablespace-encryption.html#faq-tablespace-encryption-overhead)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.2\. [InnoDB 数据静态加密相关的开销是多少？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-overhead)
- en: A.17.3\. [What are the encryption algorithms used with InnoDB data-at-rest encryption?](faqs-tablespace-encryption.html#faq-tablespace-encryption-algorithm)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.3\. [InnoDB 数据静态加密使用哪些加密算法？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-algorithm)
- en: A.17.4\. [Is it possible to use 3rd party encryption algorithms in place of
    the one provided by the InnoDB data-at-rest encryption feature?](faqs-tablespace-encryption.html#faq-tablespace-encryption-other-algorithms)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.4\. [是否可以使用第三方加密算法代替 InnoDB 数据静态加密功能提供的算法？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-other-algorithms)
- en: A.17.5\. [Can indexed columns be encrypted?](faqs-tablespace-encryption.html#faq-tablespace-encryption-indexed-columns)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.5\. [索引列可以加密吗？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-indexed-columns)
- en: A.17.6\. [What data types and data lengths does InnoDB data-at-rest encryption
    support?](faqs-tablespace-encryption.html#faq-tablespace-encryption-data-types)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.6\. [InnoDB 数据静态加密支持哪些数据类型和数据长度？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-data-types)
- en: A.17.7\. [Does data remain encrypted on the network?](faqs-tablespace-encryption.html#faq-tablespace-encryption-network)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.7\. [数据在网络上保持加密吗？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-network)
- en: A.17.8\. [Does database memory contain cleartext or encrypted data?](faqs-tablespace-encryption.html#faq-tablespace-encryption-database-memory)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.8\. [数据库内存包含明文还是加密数据？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-database-memory)
- en: A.17.9\. [How do I know which data to encrypt?](faqs-tablespace-encryption.html#faq-tablespace-encryption-data-to-encrypt)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.9\. [我如何知道哪些数据需要加密？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-data-to-encrypt)
- en: A.17.10\. [How is InnoDB data-at-rest encryption different from encryption functions
    MySQL already provides?](faqs-tablespace-encryption.html#faq-tablespace-encryption-mysql-encryption)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.10\. [InnoDB 数据静态加密与 MySQL 已提供的加密函数有何不同？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-mysql-encryption)
- en: A.17.11\. [Does the transportable tablespaces feature work with InnoDB data-at-rest
    encryption?](faqs-tablespace-encryption.html#faq-tablespace-encryption-transportable-tablespaces)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.11\. [可传输表空间功能与 InnoDB 数据静态加密兼容吗？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-transportable-tablespaces)
- en: A.17.12\. [Does compression work with InnoDB data-at-rest encryption?](faqs-tablespace-encryption.html#faq-tablespace-encryption-compression)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.12\. [压缩与 InnoDB 数据静态加密是否兼容？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-compression)
- en: A.17.13\. [Can I use mysqldump with encrypted tables?](faqs-tablespace-encryption.html#faq-tablespace-encryption-mysqldump)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.13\. [我可以在加密表上使用 mysqldump 吗？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-mysqldump)
- en: A.17.14\. [How do I change (rotate, re-key) the master encryption key?](faqs-tablespace-encryption.html#faq-tablespace-encryption-key-rotation)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.14\. [如何更改（旋转，重新生成密钥）主加密密钥？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-key-rotation)
- en: A.17.15\. [How do I migrate data from a cleartext InnoDB tablespace to an encrypted
    InnoDB tablespace?](faqs-tablespace-encryption.html#faq-tablespace-encryption-data-migration)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: A.17.15\. [我如何将数据从明文 InnoDB 表空间迁移到加密的 InnoDB 表空间？](https://dev.mysql.com/doc/refman/8.0/en/faqs-tablespace-encryption.html#faq-tablespace-encryption-data-migration)
- en: '| **A.17.1.** | Is data decrypted for users who are authorized to see it? |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.1.** | 数据是否解密给了有权限查看的用户？'
- en: '|  | Yes. `InnoDB` data-at-rest encryption is designed to transparently apply
    encryption within the database without impacting existing applications. Returning
    data in encrypted format would break most existing applications. `InnoDB` data-at-rest
    encryption provides the benefit of encryption without the overhead associated
    with traditional database encryption solutions, which would typically require
    expensive and substantial changes to applications, database triggers, and views.
    |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。`InnoDB`数据静态加密旨在在数据库内部透明地应用加密，而不影响现有应用程序。以加密格式返回数据将破坏大多数现有应用程序。`InnoDB`数据静态加密提供了加密的好处，而不会带来传统数据库加密解决方案所带来的开销，后者通常需要昂贵且重大的应用程序、数据库触发器和视图更改。'
- en: '| **A.17.2.** | What is the overhead associated with `InnoDB` data-at-rest
    encryption? |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.2.** | `InnoDB`数据静态加密相关的开销是多少？'
- en: '|  | There is no additional storage overhead. According to internal benchmarks,
    performance overhead amounts to a single digit percentage difference. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '|  | 没有额外的存储开销。根据内部基准测试，性能开销仅相当于单个数字百分比的差异。'
- en: '| **A.17.3.** | What are the encryption algorithms used with `InnoDB` data-at-rest
    encryption? |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.3.** | `InnoDB`数据静态加密使用哪些加密算法？'
- en: '|  | `InnoDB` data-at-rest encryption supports the Advanced Encryption Standard
    (AES256) block-based encryption algorithm. It uses Electronic Codebook (ECB) block
    encryption mode for tablespace key encryption and Cipher Block Chaining (CBC)
    block encryption mode for data encryption. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|  | `InnoDB`数据静态加密支持高级加密标准（AES256）基于块的加密算法。它使用电子密码本（ECB）块加密模式用于表空间密钥加密，使用密码块链接（CBC）块加密模式用于数据加密。'
- en: '| **A.17.4.** | Is it possible to use 3rd party encryption algorithms in place
    of the one provided by the `InnoDB` data-at-rest encryption feature? |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.4.** | 是否可以使用第三方加密算法来替代`InnoDB`数据静态加密功能提供的算法？'
- en: '|  | No, it is not possible to use other encryption algorithms. The provided
    encryption algorithm is broadly accepted. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '|  | 不，不可能使用其他加密算法。提供的加密算法被广泛接受。'
- en: '| **A.17.5.** | Can indexed columns be encrypted? |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.5.** | 索引列可以加密吗？'
- en: '|  | `InnoDB` data-at-rest encryption supports all indexes transparently. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|  | `InnoDB`数据静态加密透明地支持所有索引。'
- en: '| **A.17.6.** | What data types and data lengths does `InnoDB` data-at-rest
    encryption support? |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.6.** | `InnoDB`数据静态加密支持哪些数据类型和数据长度？'
- en: '|  | `InnoDB` data-at-rest encryption supports all supported data types. There
    is no data length limitation. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '|  | `InnoDB`数据静态加密支持所有支持的数据类型。没有数据长度限制。'
- en: '| **A.17.7.** | Does data remain encrypted on the network? |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.7.** | 数据在网络上保持加密吗？'
- en: '|  | Data encrypted by the `InnoDB` data-at-rest feature is decrypted when
    it is read from the tablespace file. Thus, if the data is on the network, it is
    in cleartext form. However, data on the network can be encrypted using MySQL network
    encryption, which encrypts data traveling to and from a database using SSL/TLS.
    |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '|  | 通过`InnoDB`数据静态加密功能加密的数据在从表空间文件读取时解密。因此，如果数据在网络上，它是明文形式。然而，网络上的数据可以使用MySQL网络加密进行加密，该加密使用SSL/TLS加密数据库之间传输的数据。'
- en: '| **A.17.8.** | Does database memory contain cleartext or encrypted data? |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.8.** | 数据库内存包含明文还是加密数据？'
- en: '|  | With `InnoDB` data-at-rest encryption, in-memory data is decrypted, which
    provides complete transparency. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '|  | 使用`InnoDB`数据静态加密，内存中的数据被解密，提供完全透明性。'
- en: '| **A.17.9.** | How do I know which data to encrypt? |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.9.** | 我如何知道要加密哪些数据？'
- en: '|  | Compliance with the PCI-DSS standard requires that credit card numbers
    (Primary Account Number, or ''PAN'') be stored in encrypted form. Breach Notification
    Laws (for example, CA SB 1386, CA AB 1950, and similar laws in 43+ more US states)
    require encryption of first name, last name, driver license number, and other
    PII data. In early 2008, CA AB 1298 added medical and health insurance information
    to PII data. Additionally, industry specific privacy and security standards may
    require encryption of certain assets. For example, assets such as pharmaceutical
    research results, oil field exploration results, financial contracts, or personal
    data of law enforcement informants may require encryption. In the health care
    industry, the privacy of patient data, health records and X-ray images is of the
    highest importance. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '|  | 遵守PCI-DSS标准要求信用卡号（主帐号号码，或''PAN''）以加密形式存储。违反通知法律（例如，CA SB 1386，CA AB 1950以及43多个美国州的类似法律）要求对名字、姓氏、驾驶执照号码和其他PII数据进行加密。2008年初，CA
    AB 1298将医疗和健康保险信息添加到PII数据中。此外，行业特定的隐私和安全标准可能要求对某些资产进行加密。例如，像制药研究结果、油田勘探结果、金融合同或执法线人的个人数据等资产可能需要加密。在医疗保健行业，患者数据、健康记录和X射线图像的隐私至关重要。'
- en: '| **A.17.10.** | How is `InnoDB` data-at-rest encryption different from encryption
    functions MySQL already provides? |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.10.** | `InnoDB`数据静止加密与MySQL已提供的加密函数有何不同？'
- en: '|  | There are symmetric and asymmetric encryption APIs in MySQL that can be
    used to manually encrypt data within the database. However, the application must
    manage encryption keys and perform required encryption and decryption operations
    by calling API functions. `InnoDB` data-at-rest encryption requires no application
    changes, is transparent to end users, and provides automated, built-in key management.
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '|  | MySQL中有对称和非对称加密API，可用于在数据库内部手动加密数据。但是，应用程序必须管理加密密钥，并通过调用API函数执行所需的加密和解密操作。`InnoDB`数据静止加密不需要应用程序更改，对终端用户透明，并提供自动化的内置密钥管理。'
- en: '| **A.17.11.** | Does the transportable tablespaces feature work with `InnoDB`
    data-at-rest encryption? |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.11.** | 可以使用可传输表空间功能与`InnoDB`数据静止加密一起使用吗？'
- en: '|  | Yes. It is supported for encrypted file-per-table tablespaces. For more
    information, see [Exporting Encrypted Tablespaces](innodb-data-encryption.html#innodb-data-encryption-exporting
    "Exporting Encrypted Tablespaces"). |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。对于加密的文件表表空间是支持的。有关更多信息，请参见[导出加密表空间](innodb-data-encryption.html#innodb-data-encryption-exporting
    "导出加密表空间")。'
- en: '| **A.17.12.** | Does compression work with `InnoDB` data-at-rest encryption?
    |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.12.** | 压缩与`InnoDB`数据静止加密兼容吗？'
- en: '|  | Customers using `InnoDB` data-at-rest encryption receive the full benefit
    of compression because compression is applied before data blocks are encrypted.
    |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '|  | 使用`InnoDB`数据静止加密的客户可以充分利用压缩，因为压缩是在数据块加密之前应用的。'
- en: '| **A.17.13.** | Can I use `mysqldump` with encrypted tables? |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.13.** | 我可以在加密表上使用`mysqldump`吗？'
- en: '|  | Yes. Because these utilities create logical backups, the data dumped from
    encrypted tables is not encrypted. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '|  | 是的。因为这些实用程序创建逻辑备份，从加密表中转储的数据未加密。'
- en: '| **A.17.14.** | How do I change (rotate, re-key) the master encryption key?
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.14.** | 如何更改（旋转，重新生成）主加密密钥？'
- en: '|  | `InnoDB` data-at-rest encryption uses a two tier key mechanism. When data-at-rest
    encryption is used, individual tablespace keys are stored in the header of the
    underlying tablespace data file. Tablespace keys are encrypted using the master
    encryption key. The master encryption key is generated when tablespace encryption
    is enabled, and is stored outside the database. The master encryption key is rotated
    using the [`ALTER INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html "15.1.5 ALTER
    INSTANCE Statement") statement, which generates a new master encryption key, stores
    the key, and rotates the key into use. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '|  | `InnoDB`数据静止加密使用两层密钥机制。当使用数据静止加密时，单独的表空间密钥存储在底层表空间数据文件的头部。表空间密钥使用主加密密钥加密。主加密密钥在启用表空间加密时生成，并存储在数据库外部。主加密密钥使用[`ALTER
    INSTANCE ROTATE INNODB MASTER KEY`](alter-instance.html "15.1.5 ALTER INSTANCE
    Statement")语句进行旋转，生成新的主加密密钥，存储密钥，并将密钥旋转到使用中。'
- en: '| **A.17.15.** | How do I migrate data from a cleartext `InnoDB` tablespace
    to an encrypted `InnoDB` tablespace? |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| **A.17.15.** | 如何将明文`InnoDB`表空间中的数据迁移到加密`InnoDB`表空间中？'
- en: '|  | Transferring data from one tablespace to another is not required. To encrypt
    data in an `InnoDB` file-per-table tablespace, run [`ALTER TABLE *`tbl_name`*
    ENCRYPTION = ''Y''`](alter-table.html "15.1.9 ALTER TABLE Statement"). To encrypt
    a general tablespace or the `mysql` tablespace, run [`ALTER TABLESPACE *`tablespace_name`*
    ENCRYPTION = ''Y''`](alter-tablespace.html "15.1.10 ALTER TABLESPACE Statement").
    Encryption support for general tablespaces was introduced in MySQL 8.0.13\. Encryption
    support for the `mysql` system tablespace is available as of MySQL 8.0.16. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '|  | 不需要将数据从一个表空间转移到另一个表空间。要在`InnoDB`文件每表表空间中加密数据，请运行[`ALTER TABLE *`tbl_name`*
    ENCRYPTION = ''Y''`](alter-table.html "15.1.9 ALTER TABLE Statement")。要加密通用表空间或`mysql`表空间，请运行[`ALTER
    TABLESPACE *`tablespace_name`* ENCRYPTION = ''Y''`](alter-tablespace.html "15.1.10 ALTER
    TABLESPACE Statement")。MySQL 8.0.13引入了对通用表空间的加密支持。MySQL 8.0.16引入了对`mysql`系统表空间的加密支持。
    |'
