- en: 17.15.3 InnoDB INFORMATION_SCHEMA Schema Object Tables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17.15.3 InnoDB INFORMATION_SCHEMA模式对象表
- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-system-tables.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-system-tables.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-system-tables.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-information-schema-system-tables.html)
- en: You can extract metadata about schema objects managed by `InnoDB` using `InnoDB`
    `INFORMATION_SCHEMA` tables. This information comes from the data dictionary.
    Traditionally, you would get this type of information using the techniques from
    [Section 17.17, “InnoDB Monitors”](innodb-monitors.html "17.17 InnoDB Monitors"),
    setting up `InnoDB` monitors and parsing the output from the [`SHOW ENGINE INNODB
    STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE Statement") statement. The `InnoDB`
    `INFORMATION_SCHEMA` table interface allows you to query this data using SQL.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`InnoDB` `INFORMATION_SCHEMA`表提取关于由`InnoDB`管理的模式对象的元数据。这些信息来自数据字典。传统上，您可以使用[第17.17节“InnoDB监视器”](innodb-monitors.html
    "17.17 InnoDB Monitors")中的技术，设置`InnoDB`监视器并解析[`SHOW ENGINE INNODB STATUS`](show-engine.html
    "15.7.7.15 SHOW ENGINE Statement")语句的输出来获取此类型的信息。`InnoDB` `INFORMATION_SCHEMA`表接口允许您使用SQL查询这些数据。
- en: '`InnoDB` `INFORMATION_SCHEMA` schema object tables include the tables listed
    below.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB` `INFORMATION_SCHEMA`模式对象表包括下面列出的表。'
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The table names are indicative of the type of data provided:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 表名反映��提供的数据类型：
- en: '[`INNODB_TABLES`](information-schema-innodb-tables-table.html "28.4.23 The
    INFORMATION_SCHEMA INNODB_TABLES Table") provides metadata about `InnoDB` tables.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_TABLES`](information-schema-innodb-tables-table.html "28.4.23 The
    INFORMATION_SCHEMA INNODB_TABLES Table")提供了关于`InnoDB`表的元数据。'
- en: '[`INNODB_COLUMNS`](information-schema-innodb-columns-table.html "28.4.9 The
    INFORMATION_SCHEMA INNODB_COLUMNS Table") provides metadata about `InnoDB` table
    columns.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_COLUMNS`](information-schema-innodb-columns-table.html "28.4.9 The
    INFORMATION_SCHEMA INNODB_COLUMNS Table")提供了关于`InnoDB`表列的元数据。'
- en: '[`INNODB_INDEXES`](information-schema-innodb-indexes-table.html "28.4.20 The
    INFORMATION_SCHEMA INNODB_INDEXES Table") provides metadata about `InnoDB` indexes.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_INDEXES`](information-schema-innodb-indexes-table.html "28.4.20 The
    INFORMATION_SCHEMA INNODB_INDEXES Table")提供了关于`InnoDB`索引的元数据。'
- en: '[`INNODB_FIELDS`](information-schema-innodb-fields-table.html "28.4.11 The
    INFORMATION_SCHEMA INNODB_FIELDS Table") provides metadata about the key columns
    (fields) of `InnoDB` indexes.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FIELDS`](information-schema-innodb-fields-table.html "28.4.11 The
    INFORMATION_SCHEMA INNODB_FIELDS Table")提供了关于`InnoDB`索引的关键列（字段）的元数据。'
- en: '[`INNODB_TABLESTATS`](information-schema-innodb-tablestats-table.html "28.4.26 The
    INFORMATION_SCHEMA INNODB_TABLESTATS View") provides a view of low-level status
    information about `InnoDB` tables that is derived from in-memory data structures.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_TABLESTATS`](information-schema-innodb-tablestats-table.html "28.4.26
    The INFORMATION_SCHEMA INNODB_TABLESTATS View")提供了关于`InnoDB`表的低级状态信息的视图，这些信息是从内存数据结构中派生的。'
- en: '[`INNODB_DATAFILES`](information-schema-innodb-datafiles-table.html "28.4.10 The
    INFORMATION_SCHEMA INNODB_DATAFILES Table") provides data file path information
    for `InnoDB` file-per-table and general tablespaces.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_DATAFILES`](information-schema-innodb-datafiles-table.html "28.4.10
    The INFORMATION_SCHEMA INNODB_DATAFILES Table")提供了`InnoDB`文件表和通用表空间的数据文件路径信息。'
- en: '[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html "28.4.24 The
    INFORMATION_SCHEMA INNODB_TABLESPACES Table") provides metadata about `InnoDB`
    file-per-table, general, and undo tablespaces.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html "28.4.24
    The INFORMATION_SCHEMA INNODB_TABLESPACES Table")提供了关于`InnoDB`文件表、通用表和撤销表空间的元数据。'
- en: '[`INNODB_TABLESPACES_BRIEF`](information-schema-innodb-tablespaces-brief-table.html
    "28.4.25 The INFORMATION_SCHEMA INNODB_TABLESPACES_BRIEF Table") provides a subset
    of metadata about `InnoDB` tablespaces.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_TABLESPACES_BRIEF`](information-schema-innodb-tablespaces-brief-table.html
    "28.4.25 The INFORMATION_SCHEMA INNODB_TABLESPACES_BRIEF Table")提供了关于`InnoDB`表空间的部分元数据。'
- en: '[`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html "28.4.12 The
    INFORMATION_SCHEMA INNODB_FOREIGN Table") provides metadata about foreign keys
    defined on `InnoDB` tables.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html "28.4.12 The
    INFORMATION_SCHEMA INNODB_FOREIGN Table")提供了关于在`InnoDB`表上定义的外键的元数据。'
- en: '[`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html "28.4.13 The
    INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table") provides metadata about the columns
    of foreign keys that are defined on `InnoDB` tables.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html "28.4.13
    The INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table")提供了关于在`InnoDB`表上定义的外键列的元数据。'
- en: '`InnoDB` `INFORMATION_SCHEMA` schema object tables can be joined together through
    fields such as `TABLE_ID`, `INDEX_ID`, and `SPACE`, allowing you to easily retrieve
    all available data for an object you want to study or monitor.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB` `INFORMATION_SCHEMA`模式对象表可以通过`TABLE_ID`、`INDEX_ID`和`SPACE`等字段进行连接，使您可以轻松检索要研究或监视的对象的所有可用数据。'
- en: Refer to the `InnoDB` [INFORMATION_SCHEMA](innodb-information-schema-tables.html
    "28.4 INFORMATION_SCHEMA InnoDB Tables") documentation for information about the
    columns of each table.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 参考`InnoDB` [INFORMATION_SCHEMA](innodb-information-schema-tables.html "28.4 INFORMATION_SCHEMA
    InnoDB Tables") 文档，了解每个表的列信息。
- en: '**Example 17.2 InnoDB INFORMATION_SCHEMA Schema Object Tables**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 17.2 InnoDB INFORMATION_SCHEMA模式对象表**'
- en: This example uses a simple table (`t1`) with a single index (`i1`) to demonstrate
    the type of metadata found in the `InnoDB` `INFORMATION_SCHEMA` schema object
    tables.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例使用一个简单的表（`t1`）和一个单一索引（`i1`）来演示在`InnoDB` `INFORMATION_SCHEMA`模式对象表中找到的元数据类型。
- en: 'Create a test database and table `t1`:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个测试数据库和表`t1`：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After creating the table `t1`, query [`INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table") to locate the metadata for
    `test/t1`:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建表`t1`后，查询[`INNODB_TABLES`](information-schema-innodb-tables-table.html "28.4.23 INFORMATION_SCHEMA
    INNODB_TABLES表")以查找`test/t1`的元数据：
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Table `t1` has a `TABLE_ID` of 71\. The `FLAG` field provides bit level information
    about table format and storage characteristics. There are six columns, three of
    which are hidden columns created by `InnoDB` (`DB_ROW_ID`, `DB_TRX_ID`, and `DB_ROLL_PTR`).
    The ID of the table's `SPACE` is 57 (a value of 0 would indicate that the table
    resides in the system tablespace). The `ROW_FORMAT` is Compact. `ZIP_PAGE_SIZE`
    only applies to tables with a `Compressed` row format. `INSTANT_COLS` shows number
    of columns in the table prior to adding the first instant column using `ALTER
    TABLE ... ADD COLUMN` with `ALGORITHM=INSTANT`.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表`t1`的`TABLE_ID`为71。`FLAG`字段提供有关表格式和存储特性的位级信息。共有六列，其中三列是由`InnoDB`创建的隐藏列（`DB_ROW_ID`、`DB_TRX_ID`和`DB_ROLL_PTR`）。表的`SPACE`的ID为57（值为0表示表位于系统表空间中）。`ROW_FORMAT`为Compact。`ZIP_PAGE_SIZE`仅适用于具有`Compressed`行格式的表。`INSTANT_COLS`显示在使用`ALTER
    TABLE ... ADD COLUMN`添加第一个即时列之前表中的列数。
- en: Using the `TABLE_ID` information from [`INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table"), query the [`INNODB_COLUMNS`](information-schema-innodb-columns-table.html
    "28.4.9 The INFORMATION_SCHEMA INNODB_COLUMNS Table") table for information about
    the table's columns.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[`INNODB_TABLES`](information-schema-innodb-tables-table.html "28.4.23 INFORMATION_SCHEMA
    INNODB_TABLES表")中的`TABLE_ID`信息，查询[`INNODB_COLUMNS`](information-schema-innodb-columns-table.html
    "28.4.9 INFORMATION_SCHEMA INNODB_COLUMNS表")表以获取有关表列的信息。
- en: '[PRE3]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In addition to the `TABLE_ID` and column `NAME`, [`INNODB_COLUMNS`](information-schema-innodb-columns-table.html
    "28.4.9 The INFORMATION_SCHEMA INNODB_COLUMNS Table") provides the ordinal position
    (`POS`) of each column (starting from 0 and incrementing sequentially), the column
    `MTYPE` or “main type” (6 = INT, 2 = CHAR, 1 = VARCHAR), the `PRTYPE` or “precise
    type” (a binary value with bits that represent the MySQL data type, character
    set code, and nullability), and the column length (`LEN`). The `HAS_DEFAULT` and
    `DEFAULT_VALUE` columns only apply to columns added instantly using `ALTER TABLE
    ... ADD COLUMN` with `ALGORITHM=INSTANT`.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了`TABLE_ID`和列`NAME`之外，[`INNODB_COLUMNS`](information-schema-innodb-columns-table.html
    "28.4.9 INFORMATION_SCHEMA INNODB_COLUMNS表")还提供每列的序数位置（从0开始递增顺序），列`MTYPE`或“主类型”（6
    = INT，2 = CHAR，1 = VARCHAR），`PRTYPE`或“精确类型”（一个二进制值，其中的位表示MySQL数据类型、字符集代码和可空性），以及列长度（`LEN`）。`HAS_DEFAULT`和`DEFAULT_VALUE`列仅适用于使用`ALTER
    TABLE ... ADD COLUMN`立即添加的列。
- en: Using the `TABLE_ID` information from [`INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table") once again, query [`INNODB_INDEXES`](information-schema-innodb-indexes-table.html
    "28.4.20 The INFORMATION_SCHEMA INNODB_INDEXES Table") for information about the
    indexes associated with table `t1`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次使用[`INNODB_TABLES`](information-schema-innodb-tables-table.html "28.4.23 INFORMATION_SCHEMA
    INNODB_TABLES表")中的`TABLE_ID`信息，查询[`INNODB_INDEXES`](information-schema-innodb-indexes-table.html
    "28.4.20 INFORMATION_SCHEMA INNODB_INDEXES表")以获取与表`t1`关联的索引信息。
- en: '[PRE4]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[`INNODB_INDEXES`](information-schema-innodb-indexes-table.html "28.4.20 The
    INFORMATION_SCHEMA INNODB_INDEXES Table") returns data for two indexes. The first
    index is `GEN_CLUST_INDEX`, which is a clustered index created by `InnoDB` if
    the table does not have a user-defined clustered index. The second index (`i1`)
    is the user-defined secondary index.'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`INNODB_INDEXES`](information-schema-innodb-indexes-table.html "28.4.20 INNODB_INDEXES表")返回两个索引的数据。第一个索引是`GEN_CLUST_INDEX`，如果表没有用户定义的聚簇索引，则`InnoDB`会创建一个聚簇索引。第二个索引（`i1`）是用户定义的二级索引。'
- en: The `INDEX_ID` is an identifier for the index that is unique across all databases
    in an instance. The `TABLE_ID` identifies the table that the index is associated
    with. The index `TYPE` value indicates the type of index (1 = Clustered Index,
    0 = Secondary index). The `N_FILEDS` value is the number of fields that comprise
    the index. `PAGE_NO` is the root page number of the index B-tree, and `SPACE`
    is the ID of the tablespace where the index resides. A nonzero value indicates
    that the index does not reside in the system tablespace. `MERGE_THRESHOLD` defines
    a percentage threshold value for the amount of data in an index page. If the amount
    of data in an index page falls below the this value (the default is 50%) when
    a row is deleted or when a row is shortened by an update operation, `InnoDB` attempts
    to merge the index page with a neighboring index page.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`INDEX_ID`是一个在实例中所有数据库中唯一的索引标识符。`TABLE_ID`标识与索引关联的表。索引`TYPE`值表示索引类型（1 = 聚簇索引，0
    = 二级索引）。`N_FILEDS`值是组成索引的字段数。`PAGE_NO`是索引B树的根页号，`SPACE`是索引所在的表空间的ID。非零值表示索引不位于系统表空间中。`MERGE_THRESHOLD`定义了索引页中数据量的百分比阈值。如果索引页中的数据量低于此值（默认为50%），当删除行或通过更新操作缩短行时，`InnoDB`会尝试将索引页与相邻的索引页合并。'
- en: Using the `INDEX_ID` information from [`INNODB_INDEXES`](information-schema-innodb-indexes-table.html
    "28.4.20 The INFORMATION_SCHEMA INNODB_INDEXES Table"), query [`INNODB_FIELDS`](information-schema-innodb-fields-table.html
    "28.4.11 The INFORMATION_SCHEMA INNODB_FIELDS Table") for information about the
    fields of index `i1`.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[`INNODB_INDEXES`](information-schema-innodb-indexes-table.html "28.4.20 INNODB_INDEXES表")中的`INDEX_ID`信息，查询[`INNODB_FIELDS`](information-schema-innodb-fields-table.html
    "28.4.11 INNODB_FIELDS表")以获取索引`i1`的字段信息。
- en: '[PRE5]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[`INNODB_FIELDS`](information-schema-innodb-fields-table.html "28.4.11 The
    INFORMATION_SCHEMA INNODB_FIELDS Table") provides the `NAME` of the indexed field
    and its ordinal position within the index. If the index (i1) had been defined
    on multiple fields, [`INNODB_FIELDS`](information-schema-innodb-fields-table.html
    "28.4.11 The INFORMATION_SCHEMA INNODB_FIELDS Table") would provide metadata for
    each of the indexed fields.'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`INNODB_FIELDS`](information-schema-innodb-fields-table.html "28.4.11 INNODB_FIELDS表")提供索引字段的`NAME`和其在索引中的序号位置。如果索引（i1）是在多个字段上定义的，[`INNODB_FIELDS`](information-schema-innodb-fields-table.html
    "28.4.11 INNODB_FIELDS表")将为每个索引字段提供元数据。'
- en: Using the `SPACE` information from [`INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table"), query [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") table for information
    about the table's tablespace.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[`INNODB_TABLES`](information-schema-innodb-tables-table.html "28.4.23 INNODB_TABLES表")中的`SPACE`信息，查询[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 INNODB_TABLESPACES表")表以获取有关表的表空间的信息。
- en: '[PRE6]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In addition to the `SPACE` ID of the tablespace and the `NAME` of the associated
    table, [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table") provides tablespace
    `FLAG` data, which is bit level information about tablespace format and storage
    characteristics. Also provided are tablespace `ROW_FORMAT`, `PAGE_SIZE`, and several
    other tablespace metadata items.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了表空间的`SPACE` ID和关联表的`NAME`之外，[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 INNODB_TABLESPACES表")提供表空间`FLAG`数据，这是关于表空间格式和存储特性的位级信息。还提供了表空间`ROW_FORMAT`，`PAGE_SIZE`以及其他几个表空间元数据项。
- en: Using the `SPACE` information from [`INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table") once again, query [`INNODB_DATAFILES`](information-schema-innodb-datafiles-table.html
    "28.4.10 The INFORMATION_SCHEMA INNODB_DATAFILES Table") for the location of the
    tablespace data file.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次使用[`INNODB_TABLES`](information-schema-innodb-tables-table.html "28.4.23 The
    INFORMATION_SCHEMA INNODB_TABLES Table")中的`SPACE`信息，查询[`INNODB_DATAFILES`](information-schema-innodb-datafiles-table.html
    "28.4.10 The INFORMATION_SCHEMA INNODB_DATAFILES Table")以获取表空间数据文件的位置。
- en: '[PRE7]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The datafile is located in the `test` directory under MySQL's `data` directory.
    If a [file-per-table](glossary.html#glos_file_per_table "file-per-table") tablespace
    were created in a location outside the MySQL data directory using the `DATA DIRECTORY`
    clause of the [`CREATE TABLE`](create-table.html "15.1.20 CREATE TABLE Statement")
    statement, the tablespace `PATH` would be a fully qualified directory path.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据文件位于MySQL的`data`目录下的`test`目录中。如果在MySQL数据目录之外的位置使用[`CREATE TABLE`](create-table.html
    "15.1.20 CREATE TABLE Statement")语句的`DATA DIRECTORY`子句创建了[file-per-table](glossary.html#glos_file_per_table
    "file-per-table")表空间，则表空间`PATH`将是一个完全限定的目录路径。
- en: As a final step, insert a row into table `t1` (`TABLE_ID = 71`) and view the
    data in the [`INNODB_TABLESTATS`](information-schema-innodb-tablestats-table.html
    "28.4.26 The INFORMATION_SCHEMA INNODB_TABLESTATS View") table. The data in this
    table is used by the MySQL optimizer to calculate which index to use when querying
    an `InnoDB` table. This information is derived from in-memory data structures.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步，向表`t1`（`TABLE_ID = 71`）插入一行数据，并查看[`INNODB_TABLESTATS`](information-schema-innodb-tablestats-table.html
    "28.4.26 The INFORMATION_SCHEMA INNODB_TABLESTATS View")表中的数据。此表中的数据由MySQL优化器用于计算在查询`InnoDB`表时使用哪个索引。这些信息来自内存数据结构。
- en: '[PRE8]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `STATS_INITIALIZED` field indicates whether or not statistics have been
    collected for the table. `NUM_ROWS` is the current estimated number of rows in
    the table. The `CLUST_INDEX_SIZE` and `OTHER_INDEX_SIZE` fields report the number
    of pages on disk that store clustered and secondary indexes for the table, respectively.
    The `MODIFIED_COUNTER` value shows the number of rows modified by DML operations
    and cascade operations from foreign keys. The `AUTOINC` value is the next number
    to be issued for any autoincrement-based operation. There are no autoincrement
    columns defined on table `t1`, so the value is 0\. The `REF_COUNT` value is a
    counter. When the counter reaches 0, it signifies that the table metadata can
    be evicted from the table cache.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`STATS_INITIALIZED`字段指示表是否已收集统计信息。`NUM_ROWS`是表中当前估计的行数。`CLUST_INDEX_SIZE`和`OTHER_INDEX_SIZE`字段分别报告存储表的聚集索引和辅助索引的磁盘上的页面数。`MODIFIED_COUNTER`值显示被DML操作和外键级联操作修改的行数。`AUTOINC`值是任何自增操作即将发行的下一个数字。在表`t1`上没有定义自增列，因此该值为0。`REF_COUNT`值是一个计数器。当计数器达到0时，表示表元数据可以从表缓存中驱逐。'
- en: '**Example 17.3 Foreign Key INFORMATION_SCHEMA Schema Object Tables**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 17.3 外键INFORMATION_SCHEMA模式对象表**'
- en: The [`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html "28.4.12 The
    INFORMATION_SCHEMA INNODB_FOREIGN Table") and [`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html
    "28.4.13 The INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table") tables provide data
    about foreign key relationships. This example uses a parent table and child table
    with a foreign key relationship to demonstrate the data found in the [`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html
    "28.4.12 The INFORMATION_SCHEMA INNODB_FOREIGN Table") and [`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html
    "28.4.13 The INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table") tables.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html "28.4.12 The
    INFORMATION_SCHEMA INNODB_FOREIGN Table")和[`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html
    "28.4.13 The INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table")表提供有关外键关系的数据。此示例使用具有外键关系的父表和子表来演示在[`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html
    "28.4.12 The INFORMATION_SCHEMA INNODB_FOREIGN Table")和[`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html
    "28.4.13 The INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table")表中找到的数据。'
- en: 'Create the test database with parent and child tables:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建具有父表和子表的测试数据库：
- en: '[PRE9]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'After the parent and child tables are created, query [`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html
    "28.4.12 The INFORMATION_SCHEMA INNODB_FOREIGN Table") and locate the foreign
    key data for the `test/child` and `test/parent` foreign key relationship:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建父表和子表后，查询[`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html "28.4.12 The
    INFORMATION_SCHEMA INNODB_FOREIGN Table")并找到`test/child`和`test/parent`外键关系的外键数据：
- en: '[PRE10]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Metadata includes the foreign key `ID` (`fk1`), which is named for the `CONSTRAINT`
    that was defined on the child table. The `FOR_NAME` is the name of the child table
    where the foreign key is defined. `REF_NAME` is the name of the parent table (the
    “referenced” table). `N_COLS` is the number of columns in the foreign key index.
    `TYPE` is a numerical value representing bit flags that provide additional information
    about the foreign key column. In this case, the `TYPE` value is 1, which indicates
    that the `ON DELETE CASCADE` option was specified for the foreign key. See the
    [`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html "28.4.12 The INFORMATION_SCHEMA
    INNODB_FOREIGN Table") table definition for more information about `TYPE` values.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 元数据包括外键`ID`（`fk1`），该外键是在子表上定义的`CONSTRAINT`的名称。`FOR_NAME`是定义外键的子表的名称。`REF_NAME`是父表（“被引用”表）的名称。`N_COLS`是外键索引中的列数。`TYPE`是表示有关外键列的其他信息的位标志的数值。在这种情况下，`TYPE`值为1，表示为外键指定了`ON
    DELETE CASCADE`选项。有关`TYPE`值的更多信息，请参阅[`INNODB_FOREIGN`](information-schema-innodb-foreign-table.html
    "28.4.12 INFORMATION_SCHEMA INNODB_FOREIGN 表")表定义。
- en: Using the foreign key `ID`, query [`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html
    "28.4.13 The INFORMATION_SCHEMA INNODB_FOREIGN_COLS Table") to view data about
    the columns of the foreign key.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用外键`ID`，查询[`INNODB_FOREIGN_COLS`](information-schema-innodb-foreign-cols-table.html
    "28.4.13 INFORMATION_SCHEMA INNODB_FOREIGN_COLS 表")以查看有关外键列的数据。
- en: '[PRE11]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '`FOR_COL_NAME` is the name of the foreign key column in the child table, and
    `REF_COL_NAME` is the name of the referenced column in the parent table. The `POS`
    value is the ordinal position of the key field within the foreign key index, starting
    at zero.'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`FOR_COL_NAME`是子表中外键列的名称，`REF_COL_NAME`是父表中引用列的名称。`POS`值是外键索引中键字段的序数位置，从零开始。'
- en: '**Example 17.4 Joining InnoDB INFORMATION_SCHEMA Schema Object Tables**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 17.4 连接 InnoDB INFORMATION_SCHEMA 模式对象表**'
- en: This example demonstrates joining three `InnoDB` `INFORMATION_SCHEMA` schema
    object tables ([`INNODB_TABLES`](information-schema-innodb-tables-table.html "28.4.23 The
    INFORMATION_SCHEMA INNODB_TABLES Table"), [`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table"), and [`INNODB_TABLESTATS`](information-schema-innodb-tablestats-table.html
    "28.4.26 The INFORMATION_SCHEMA INNODB_TABLESTATS View")) to gather file format,
    row format, page size, and index size information about tables in the employees
    sample database.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例演示了连接三个`InnoDB` `INFORMATION_SCHEMA`模式对象表（[`INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 INFORMATION_SCHEMA INNODB_TABLES 表")、[`INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 INFORMATION_SCHEMA INNODB_TABLESPACES 表")和[`INNODB_TABLESTATS`](information-schema-innodb-tablestats-table.html
    "28.4.26 INFORMATION_SCHEMA INNODB_TABLESTATS 视图")）以收集有关员工示例数据库中表的文件格式、行格式、页面大小和索引大小信息。
- en: 'The following table aliases are used to shorten the query string:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表别名用于缩短查询字符串：
- en: '[`INFORMATION_SCHEMA.INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 The INFORMATION_SCHEMA INNODB_TABLES Table"): a'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INFORMATION_SCHEMA.INNODB_TABLES`](information-schema-innodb-tables-table.html
    "28.4.23 INFORMATION_SCHEMA INNODB_TABLES 表")：a'
- en: '[`INFORMATION_SCHEMA.INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 The INFORMATION_SCHEMA INNODB_TABLESPACES Table"): b'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INFORMATION_SCHEMA.INNODB_TABLESPACES`](information-schema-innodb-tablespaces-table.html
    "28.4.24 INFORMATION_SCHEMA INNODB_TABLESPACES 表")：b'
- en: '[`INFORMATION_SCHEMA.INNODB_TABLESTATS`](information-schema-innodb-tablestats-table.html
    "28.4.26 The INFORMATION_SCHEMA INNODB_TABLESTATS View"): c'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`INFORMATION_SCHEMA.INNODB_TABLESTATS`](information-schema-innodb-tablestats-table.html
    "28.4.26 INFORMATION_SCHEMA INNODB_TABLESTATS 视图")：c'
- en: An [`IF()`](flow-control-functions.html#function_if) control flow function is
    used to account for compressed tables. If a table is compressed, the index size
    is calculated using `ZIP_PAGE_SIZE` rather than `PAGE_SIZE`. `CLUST_INDEX_SIZE`
    and `OTHER_INDEX_SIZE`, which are reported in bytes, are divided by `1024*1024`
    to provide index sizes in megabytes (MBs). MB values are rounded to zero decimal
    spaces using the [`ROUND()`](mathematical-functions.html#function_round) function.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`IF()`](flow-control-functions.html#function_if)控制流函数来处理压缩表。如果表被压缩，索引大小将使用`ZIP_PAGE_SIZE`而不是`PAGE_SIZE`来计算。`CLUST_INDEX_SIZE`和`OTHER_INDEX_SIZE`以字节报告，通过`1024*1024`除以以提供以兆字节（MB）为单位的索引大小。MB值使用[`ROUND()`](mathematical-functions.html#function_round)函数四舍五入到零位小数。
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
