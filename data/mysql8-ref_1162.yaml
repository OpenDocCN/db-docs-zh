- en: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-migration.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-migration.html)
  id: totrans-0
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://dev.mysql.com/doc/refman/8.0/en/innodb-migration.html](https://dev.mysql.com/doc/refman/8.0/en/innodb-migration.html)
- en: 17.6.1.4 Moving or Copying InnoDB Tables
  id: totrans-1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 17.6.1.4 移动或复制 InnoDB 表
- en: This section describes techniques for moving or copying some or all `InnoDB`
    tables to a different server or instance. For example, you might move an entire
    MySQL instance to a larger, faster server; you might clone an entire MySQL instance
    to a new replica server; you might copy individual tables to another instance
    to develop and test an application, or to a data warehouse server to produce reports.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了将一些或所有 `InnoDB` 表移动或复制到不同服务器或实例的技术。例如，您可能会将整个 MySQL 实例移动到更大、更快的服务器；您可能会克隆整个
    MySQL 实例到新的复制服务器；您可能会将单个表复制到另一个实例以开发和测试应用程序，或者将其复制到数据仓库服务器以生成报告。
- en: 'On Windows, `InnoDB` always stores database and table names internally in lowercase.
    To move databases in a binary format from Unix to Windows or from Windows to Unix,
    create all databases and tables using lowercase names. A convenient way to accomplish
    this is to add the following line to the `[mysqld]` section of your `my.cnf` or
    `my.ini` file before creating any databases or tables:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，`InnoDB` 总是在内部以小写存储数据库和表名。要将数据库以二进制格式从 Unix 移动到 Windows 或从 Windows
    移动到 Unix，请使用小写名称创建所有数据库和表。实现这一目标的一种便捷方法是在创建任何数据库或表之前将以下行添加到您的 `my.cnf` 或 `my.ini`
    文件的 `[mysqld]` 部分：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is prohibited to start the server with a [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    setting that is different from the setting used when the server was initialized.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 禁止使用与服务器初始化时使用的设置不同的 [`lower_case_table_names`](server-system-variables.html#sysvar_lower_case_table_names)
    设置启动服务器。
- en: 'Techniques for moving or copying `InnoDB` tables include:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 移动或复制 `InnoDB` 表的技术包括：
- en: '[Importing Tables](innodb-migration.html#copy-tables-import "Importing Tables")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[导入表](innodb-migration.html#copy-tables-import "导入表")'
- en: '[MySQL Enterprise Backup](innodb-migration.html#copy-tables-meb "MySQL Enterprise
    Backup")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[MySQL Enterprise Backup](innodb-migration.html#copy-tables-meb "MySQL Enterprise
    Backup")'
- en: '[Copying Data Files (Cold Backup Method)](innodb-migration.html#copy-tables-cold-backup
    "Copying Data Files (Cold Backup Method)")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[复制数据文件（冷备份方法）](innodb-migration.html#copy-tables-cold-backup "复制数据文件（冷备份方法）")'
- en: '[Restoring from a Logical Backup](innodb-migration.html#copy-tables-logical-backup
    "Restoring from a Logical Backup")'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[从逻辑备份恢复](innodb-migration.html#copy-tables-logical-backup "从逻辑备份恢复")'
- en: Importing Tables
  id: totrans-12
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 导入表
- en: A table that resides in a file-per-table tablespace can be imported from another
    MySQL server instance or from a backup using the *Transportable Tablespace* feature.
    See [Section 17.6.1.3, “Importing InnoDB Tables”](innodb-table-import.html "17.6.1.3 Importing
    InnoDB Tables").
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 位于文件表空间中的表可以使用 *可传输表空间* 功能从另一个 MySQL 服务器实例或备份中导入。请参阅 [第 17.6.1.3 节，“导入 InnoDB
    表”](innodb-table-import.html "17.6.1.3 导入 InnoDB 表")。
- en: MySQL Enterprise Backup
  id: totrans-14
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: MySQL Enterprise Backup
- en: The MySQL Enterprise Backup product lets you back up a running MySQL database
    with minimal disruption to operations while producing a consistent snapshot of
    the database. When MySQL Enterprise Backup is copying tables, reads and writes
    can continue. In addition, MySQL Enterprise Backup can create compressed backup
    files, and back up subsets of tables. In conjunction with the MySQL binary log,
    you can perform point-in-time recovery. MySQL Enterprise Backup is included as
    part of the MySQL Enterprise subscription.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL Enterprise Backup 产品可让您在最小干扰运营的情况下备份正在运行的 MySQL 数据库，并生成数据库的一致快照。当 MySQL
    Enterprise Backup 复制表时，读写可以继续进行。此外，MySQL Enterprise Backup 可以创建压缩备份文件，并备份表的子集。结合
    MySQL 二进制日志，您可以执行按时间点恢复。MySQL Enterprise Backup 包含在 MySQL Enterprise 订阅的一部分中。
- en: For more details about MySQL Enterprise Backup, see [Section 32.1, “MySQL Enterprise
    Backup Overview”](mysql-enterprise-backup.html "32.1 MySQL Enterprise Backup Overview").
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 MySQL Enterprise Backup 的更多详细信息，请参阅 [第 32.1 节，“MySQL Enterprise Backup 概述”](mysql-enterprise-backup.html
    "32.1 MySQL Enterprise Backup 概述")。
- en: Copying Data Files (Cold Backup Method)
  id: totrans-17
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 复制数据文件（冷备份方法）
- en: You can move an `InnoDB` database simply by copying all the relevant files listed
    under "Cold Backups" in [Section 17.18.1, “InnoDB Backup”](innodb-backup.html
    "17.18.1 InnoDB Backup").
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过复制 [第 17.18.1 节，“InnoDB 备份”](innodb-backup.html "17.18.1 InnoDB 备份") 中列出的所有相关文件来移动
    `InnoDB` 数据库。
- en: '`InnoDB` data and log files are binary-compatible on all platforms having the
    same floating-point number format. If the floating-point formats differ but you
    have not used [`FLOAT`](floating-point-types.html "13.1.4 Floating-Point Types
    (Approximate Value) - FLOAT, DOUBLE") or [`DOUBLE`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE") data types
    in your tables, then the procedure is the same: simply copy the relevant files.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有具有相同浮点数格式的平台上，`InnoDB`数据和日志文件是二进制兼容的。如果浮点格式不同，但你的表中没有使用[`FLOAT`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE")或[`DOUBLE`](floating-point-types.html
    "13.1.4 Floating-Point Types (Approximate Value) - FLOAT, DOUBLE")数据类型，则程序是相同的：只需复制相关文件。
- en: When you move or copy file-per-table `.ibd` files, the database directory name
    must be the same on the source and destination systems. The table definition stored
    in the `InnoDB` shared tablespace includes the database name. The transaction
    IDs and log sequence numbers stored in the tablespace files also differ between
    databases.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当移动或复制基于文件的表格`.ibd`文件时，源和目标系统的数据库目录名称必须相同。存储在`InnoDB`共享表空间中的表定义包括数据库名称。表空间文件中存储的事务ID和日志序列号也在不同的数据库之间有所不同。
- en: 'To move an `.ibd` file and the associated table from one database to another,
    use a [`RENAME TABLE`](rename-table.html "15.1.36 RENAME TABLE Statement") statement:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要将一个`.ibd`文件和相关表从一个数据库移动到另一个数据库，使用[`RENAME TABLE`](rename-table.html "15.1.36 RENAME
    TABLE Statement")语句：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you have a “clean” backup of an `.ibd` file, you can restore it to the MySQL
    installation from which it originated as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个“干净”的`.ibd`文件备份，你可以按照以下步骤将其恢复到它原来的MySQL安装中：
- en: The table must not have been dropped or truncated since you copied the `.ibd`
    file, because doing so changes the table ID stored inside the tablespace.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自从你复制`.ibd`文件以来，表不能被删除或截断，因为这样会改变存储在表空间内部的表ID。
- en: 'Issue this [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    statement to delete the current `.ibd` file:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发出这个[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")语句来删除当前的`.ibd`文件：
- en: '[PRE2]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Copy the backup `.ibd` file to the proper database directory.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将备份的`.ibd`文件复制到正确的数据库目录中。
- en: 'Issue this [`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")
    statement to tell `InnoDB` to use the new `.ibd` file for the table:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发出这个[`ALTER TABLE`](alter-table.html "15.1.9 ALTER TABLE Statement")语句，告诉`InnoDB`使用新的`.ibd`文件来替换表：
- en: '[PRE3]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The [`ALTER TABLE ... IMPORT TABLESPACE`](alter-table.html "15.1.9 ALTER TABLE
    Statement") feature does not enforce foreign key constraints on imported data.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`ALTER TABLE ... IMPORT TABLESPACE`](alter-table.html "15.1.9 ALTER TABLE
    Statement")功能不会对导入的数据强制执行外键约束。'
- en: 'In this context, a “clean” `.ibd` file backup is one for which the following
    requirements are satisfied:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，“干净”的`.ibd`文件备份是指满足以下要求的备份：
- en: There are no uncommitted modifications by transactions in the `.ibd` file.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.ibd`文件中没有事务中未提交的修改。'
- en: There are no unmerged insert buffer entries in the `.ibd` file.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.ibd`文件中没有未合并的插入缓冲区条目。'
- en: Purge has removed all delete-marked index records from the `.ibd` file.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清除已从`.ibd`文件中删除标记的索引记录。
- en: '[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") has flushed all
    modified pages of the `.ibd` file from the buffer pool to the file.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")已经将`.ibd`文件的所有修改页面从缓冲池刷新到文件中。'
- en: 'You can make a clean backup `.ibd` file using the following method:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下方法制作一个干净的备份`.ibd`文件：
- en: Stop all activity from the [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL
    Server") server and commit all transactions.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止所有来自[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")服务器��活动，并提交所有事务。
- en: Wait until [`SHOW ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE
    Statement") shows that there are no active transactions in the database, and the
    main thread status of `InnoDB` is `Waiting for server activity`. Then you can
    make a copy of the `.ibd` file.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等到[`SHOW ENGINE INNODB STATUS`](show-engine.html "15.7.7.15 SHOW ENGINE Statement")显示数据库中没有活动事务，并且`InnoDB`的主线程状态为`等待服务器活动`。然后你可以复制`.ibd`文件。
- en: 'Another method for making a clean copy of an `.ibd` file is to use the MySQL
    Enterprise Backup product:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 制作一个`.ibd`文件的干净副本的另一种方法是使用MySQL企业备份产品：
- en: Use MySQL Enterprise Backup to back up the `InnoDB` installation.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用MySQL企业备份来备份`InnoDB`安装。
- en: Start a second [**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server") server
    on the backup and let it clean up the `.ibd` files in the backup.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在备份上启动第二个[**mysqld**](mysqld.html "6.3.1 mysqld — The MySQL Server")服务器，并让它清理备份中的`.ibd`文件。
- en: Restoring from a Logical Backup
  id: totrans-43
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 从逻辑备份中恢复
- en: You can use a utility such as [**mysqldump**](mysqldump.html "6.5.4 mysqldump
    — A Database Backup Program") to perform a logical backup, which produces a set
    of SQL statements that can be executed to reproduce the original database object
    definitions and table data for transfer to another SQL server. Using this method,
    it does not matter whether the formats differ or if your tables contain floating-point
    data.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用类似 [**mysqldump**](mysqldump.html "6.5.4 mysqldump — A Database Backup
    Program") 这样的实用程序执行逻辑备份，它会生成一组可以执行的 SQL 语句，以便在转移到另一个 SQL 服务器时重新生成原始数据库对象定义和表数据。使用这种方法，无论格式是否不同或者你的表是否包含浮点数据都无关紧要。
- en: To improve the performance of this method, disable [`autocommit`](server-system-variables.html#sysvar_autocommit)
    when importing data. Perform a commit only after importing an entire table or
    segment of a table.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高此方法的性能，在导入数据时禁用 [`autocommit`](server-system-variables.html#sysvar_autocommit)。只有在导入整个表或表的一部分后才执行提交。
