- en: 1\. Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 概述
- en: 原文：[https://sqlite.com/spellfix1.html](https://sqlite.com/spellfix1.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/spellfix1.html](https://sqlite.com/spellfix1.html)
- en: This spellfix1 [virtual table](vtab.html) can be used to search a large vocabulary
    for close matches. For example, spellfix1 can be used to suggest corrections to
    misspelled words. Or, it could be used with [FTS4](fts3.html#fts4) to do full-text
    search using potentially misspelled words.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这个spellfix1 [虚拟表](vtab.html) 可以用来搜索大词汇量中的近似匹配项。例如，spellfix1可以用来建议修正拼写错误的单词。或者，它可以与[FTS4](fts3.html#fts4)一起使用，用于使用可能拼写错误的单词进行全文搜索。
- en: The implementation for the spellfix1 virtual table is held in the SQLite source
    tree in the miscellaneous extensions folder and in particular in the file [ext/misc/spellfix1.c](https://www.sqlite.org/src/finfo?name=ext/misc/spellfix.c).
    The spellfix1 virtual table is not included in the SQLite [amalgamation](amalgamation.html)
    and is not a part of any standard SQLite build. It is a [loadable extension](loadext.html).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: spellfix1虚拟表的实现存储在SQLite源代码树的miscellaneous extensions文件夹中，特别是在文件[ext/misc/spellfix1.c](https://www.sqlite.org/src/finfo?name=ext/misc/spellfix.c)中。spellfix1虚拟表未包含在SQLite
    [amalgamation](amalgamation.html)中，也不是任何标准SQLite构建的一部分。它是一个[可加载扩展](loadext.html)。
- en: 'Once the spellfix1 extension is loaded, an instance of the spellfix1 virtual
    table is created like this:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 加载spellfix1扩展后，可以像这样创建一个spellfix1虚拟表的实例：
- en: '[PRE0]'
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The "spellfix1" term is the name of the spellfix module and must be entered
    as shown. The "demo" term is the name of the virtual table you will be creating
    and can be altered to suit the needs of your application. The virtual table is
    initially empty. In order for the virtual table to be useful, you will need to
    populate it with your vocabulary. Suppose you have a list of words in a table
    named "big_vocabulary". Then do this:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '"spellfix1"术语是spellfix模块的名称，必须按照所示输入。"demo"术语是您将创建的虚拟表的名称，可以根据应用程序的需求进行更改。虚拟表最初为空的。为了使虚拟表有用，您需要使用词汇填充它。假设您有一个名为"big_vocabulary"的单词列表表。然后执行以下操作：'
- en: '[PRE1]'
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you intend to use this virtual table in cooperation with an [FTS4](fts3.html#fts4)
    table (for spelling correction of search terms) then you might extract the vocabulary
    using an [fts4aux](fts3.html#fts4aux) table:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打算与[FTS4](fts3.html#fts4)表合作使用此虚拟表（用于搜索词语的拼写更正），则可以使用[fts4aux](fts3.html#fts4aux)表提取词汇：
- en: '[PRE2]'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can also provide the virtual table with a "rank" for each word. The "rank"
    is an estimate of how common the word is. Larger numbers mean the word is more
    common. If you omit the rank when populating the table, then a rank of 1 is assumed.
    But if you have rank information, you can supply it and the virtual table will
    show a slight preference for selecting more commonly used terms. To populate the
    rank from an fts4aux table "search_aux" do something like this:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以为每个单词提供一个"rank"给虚拟表。"rank"是单词常见程度的估计值。较大的数字表示单词更常见。如果在填充表时省略rank，则假定rank为1。但是，如果有rank信息，您可以提供它，虚拟表将倾向于选择更常用的术语。要从fts4aux表"search_aux"填充rank，可以执行以下操作：
- en: '[PRE3]'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To query the virtual table, include a MATCH operator in the WHERE clause. For
    example:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要查询虚拟表，请在WHERE子句中包含MATCH操作符。例如：
- en: '[PRE4]'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Using a dataset of American place names (derived from [http://geonames.usgs.gov/domestic/download_data.htm](http://geonames.usgs.gov/domestic/download_data.htm))
    the query above returns 20 results beginning with:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用美国地名数据集（源自[http://geonames.usgs.gov/domestic/download_data.htm](http://geonames.usgs.gov/domestic/download_data.htm)），上述查询返回以以下方式开始的20个结果：
- en: '[PRE5]'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you append the character ''*'' to the end of the pattern, then a prefix
    search is performed. For example:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在模式末尾附加字符'*'，则执行前缀搜索。例如：
- en: '[PRE6]'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Yields 20 results beginning with:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回以以下方式开始的20个结果：
- en: '[PRE7]'
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 2\. Search Refinements
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 搜索精炼
- en: 'By default, the spellfix1 table returns no more than 20 results. (It might
    return less than 20 if there were fewer good matches.) You can change the upper
    bound on the number of returned rows by adding a "top=N" term to the WHERE clause
    of your query, where N is the new maximum. For example, to see the 5 best matches:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，spellfix1表最多返回20个结果。（如果匹配较少，则可能返回少于20个。）您可以通过在查询的WHERE子句中添加"top=N"项来更改返回行数的上限，其中N是新的最大值。例如，要查看前5个最佳匹配：
- en: '[PRE8]'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Each entry in the spellfix1 virtual table is associated with a particular language,
    identified by the integer "langid" column. The default langid is 0 and if no other
    actions are taken, the entire vocabulary is a part of the 0 language. But if your
    application needs to operate in multiple languages, then you can specify different
    vocabulary items for each language by specifying the langid field when populating
    the table. For example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: spellfix1 虚拟表中的每个条目都与特定的语言相关联，由整数 "langid" 列标识。默认 langid 为 0，如果没有其他操作，则整个词汇表是
    0 语言的一部分。但如果您的应用程序需要在多种语言中运行，则可以在填充表时通过指定 langid 字段来为每种语言指定不同的词汇项。例如：
- en: '[PRE9]'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'After the virtual table has been populated with items from multiple languages,
    specify the language of interest using a "langid=N" term in the WHERE clause of
    the query:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟表从多种语言中填充项目后，可以在查询的 WHERE 子句中使用 "langid=N" 项来指定感兴趣的语言：
- en: '[PRE10]'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note that if you do not include the "langid=N" term in the WHERE clause, the
    search will be against language 0 (English in the example above.) All spellfix1
    searches are against a single language id. There is no way to search all languages
    at once.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果在 WHERE 子句中不包括 "langid=N" 项，则搜索将针对语言 0（如上例中的英语）。所有 spellfix1 搜索都针对单个语言ID。无法同时搜索所有语言。
- en: 3\. Virtual Table Details
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 虚拟表详情
- en: 'Each row in the spellfix1 virtual table has a unique rowid with seven columns
    plus five extra hidden columns. The columns are as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: spellfix1 虚拟表中的每一行都有一个唯一的 rowid，具有七列加上五个额外隐藏列。列如下：
- en: '**rowid**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**rowid**'
- en: A unique integer number associated with each vocabulary item in the table. This
    can be used as a foreign key on other tables in the database.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 与表中每个词汇项关联的唯一整数号码。这可以在数据库中的其他表上用作外键。
- en: '**word**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**word**'
- en: The text of the word that matches the pattern. Both word and pattern can contain
    unicode characters and can be mixed case.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 与模式匹配的单词的文本。单词和模式都可以包含Unicode字符，并且可以是混合大小写。
- en: '**rank**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**rank**'
- en: This is the rank of the word, as specified in the original INSERT statement.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是单词的排名，如原始的 INSERT 语句中所指定的。
- en: '**distance**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**distance**'
- en: This is an edit distance or Levenshtein distance going from the pattern to the
    word.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从模式到单词的编辑距离或Levenshtein距离。
- en: '**langid**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**langid**'
- en: This is the language-id of the word. All queries are against a single language-id,
    which defaults to 0. For any given query this value is the same on all rows.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这是单词的语言ID。所有查询都针对单个语言ID，默认为 0。对于任何给定的查询，该值在所有行上是相同的。
- en: '**score**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**score**'
- en: The score is a combination of rank and distance. The idea is that a lower score
    is better. The virtual table attempts to find words with the lowest score and
    by default (unless overridden by ORDER BY) returns results in order of increasing
    score.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 分数是排名和距离的组合。理念是分数越低越好。虚拟表尝试找到分数最低的单词，默认情况下（除非通过 ORDER BY 覆盖），按照分数递增的顺序返回结果。
- en: '**matchlen**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**matchlen**'
- en: In a prefix search, the matchlen is the number of characters in the string that
    match against the prefix. For a non-prefix search, this is the same as length(word).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在前缀搜索中，matchlen 是与前缀匹配的字符串中的字符数。对于非前缀搜索，这与 word 的长度相同。
- en: '**phonehash**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**phonehash**'
- en: This column shows the phonetic hash prefix that was used to restrict the search.
    For any given query, this column should be the same for every row. This information
    is available for diagnostic purposes and is not normally considered useful in
    real applications.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 此列显示用于限制搜索的音标哈希前缀。对于任何给定的查询，此列对于每一行应该是相同的。此信息可用于诊断目的，通常不被认为在实际应用中有用。
- en: '**top**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**top**'
- en: (HIDDEN) For any query, this value is the same on all rows. It is an integer
    which is the maximum number of rows that will be output. The actually number of
    rows output might be less than this number, but it will never be greater. The
    default value for top is 20, but that can be changed for each query by including
    a term of the form "top=N" in the WHERE clause of the query.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: （隐藏）对于任何查询，该值在所有行上是相同的。它是一个整数，表示将输出的最大行数。实际输出的行数可能少于此数，但绝不会更多。top 的默认值为 20，但可以通过在查询的
    WHERE 子句中包括形式为 "top=N" 的项来更改每个查询的值。
- en: '**scope**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**scope**'
- en: (HIDDEN) For any query, this value is the same on all rows. The scope is a measure
    of how widely the virtual table looks for matching words. Smaller values of scope
    cause a broader search. The scope is normally chosen automatically and is capped
    at 4\. Applications can change the scope by including a term of the form "scope=N"
    in the WHERE clause of the query. Increasing the scope will make the query run
    faster, but will reduce the possible corrections.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: (隐藏) 对于任何查询，该值在所有行中都是相同的。范围是对虚拟表如何广泛地寻找匹配词的一个衡量标准。范围的较小值会导致更广泛的搜索。范围通常会自动选择，并且最大为4。应用程序可以通过在查询的WHERE子句中包含一个形式为“scope=N”的术语来更改范围。增加范围将使查询运行更快，但会减少可能的更正。
- en: '**srchcnt**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**srchcnt**'
- en: (HIDDEN) For any query, this value is the same on all rows. This value is an
    integer which is the number of words examined using the edit-distance algorithm
    to find the top matches that are ultimately displayed. This value is for diagnostic
    use only.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: (隐藏) 对于任何查询，该值在所有行中都是相同的。该值是一个整数，是使用编辑距离算法检查的单词数量，以找到最终显示的最佳匹配。此值仅用于诊断目的。
- en: '**soundslike**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**soundslike**'
- en: (HIDDEN) When inserting vocabulary entries, this field can be set to a spelling
    that matches what the word sounds like. See the DEALING WITH UNUSUAL AND DIFFICULT
    SPELLINGS section below for details.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: (隐藏) 在插入词汇条目时，可以将此字段设置为与单词发音相符的拼写。有关详细信息，请参见下面的处理与不寻常和困难的拼写部分。
- en: '**command**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**command**'
- en: (HIDDEN) The value of the "command" column is always NULL. However, applications
    can insert special strings into the "command" column in order to provoke certain
    behaviors in the spellfix1 virtual table. For example, inserting the string 'reset'
    into the "command" column will cause the virtual table to reread its edit distance
    weights (if there are any).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: (隐藏) “command”列的值始终为NULL。但是，应用程序可以在“command”列中插入特殊字符串，以引发拼写修复1虚拟表中的某些行为。例如，将字符串“reset”插入到“command”列中将导致虚拟表重新读取其编辑距离权重（如果有）。
- en: 4\. Algorithm
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 算法
- en: 'The spellfix1 virtual table creates a single shadow table named "%_vocab" (where
    the % is replaced by the name of the virtual table; Ex: "demo_vocab" for the "demo"
    virtual table). the shadow table contains the following columns:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 拼写修复1虚拟表创建一个名为“%_vocab”（其中%被虚拟表的名称替换；例如：“demo”虚拟表的“demo_vocab”）的单个影子表。影子表包含以下列：
- en: '**id**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**id**'
- en: The unique id (INTEGER PRIMARY KEY)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一ID（INTEGER PRIMARY KEY）
- en: '**rank**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**rank**'
- en: The rank of word.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 词的排名。
- en: '**langid**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**langid**'
- en: The language id for this entry.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此条目的语言ID。
- en: '**word**'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**word**'
- en: The original UTF8 text of the vocabulary word
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇单词的原始UTF8文本
- en: '**k1**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**k1**'
- en: 'The word transliterated into lower-case ASCII. There is a standard table of
    mappings from non-ASCII characters into ASCII. Examples: "æ" -> "ae", "þ" -> "th",
    "ß" -> "ss", "á" -> "a", ... The accessory function spellfix1_translit(X) will
    do the non-ASCII to ASCII mapping. The built-in lower(X) function will convert
    to lower-case. Thus: k1 = lower(spellfix1_translit(word)). If the word is already
    all lower-case ASCII, then the k1 column will contain a NULL. This reduces the
    storage requirements for the %_vocab table and helps spellfix to run a little
    faster. Therefore, it is advantageous to populate as much of the spellfix table
    as possible using lower-case ASCII vocabulary.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 将单词音译为小写ASCII。有一张标准表格，可以将非ASCII字符映射为ASCII。例如：“æ”->“ae”，“þ”->“th”，“ß”->“ss”，“á”->“a”，……辅助函数spellfix1_translit(X)将执行非ASCII到ASCII映射。内置的lower(X)函数将转换为小写。因此：k1=
    lower(spellfix1_translit(word))。如果单词已经全部是小写ASCII，则k1列将包含NULL。这可以减少%_vocab表的存储要求，并有助于spellfix运行稍快。因此，有利的是尽可能使用小写ASCII词汇填充拼写修复表。
- en: '**k2**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**k2**'
- en: 'This field holds a phonetic code derived from coalesce(k1,word). Letters that
    have similar sounds are mapped into the same symbol. For example, all vowels and
    vowel clusters become the single symbol "A". And the letters "p", "b", "f", and
    "v" all become "B". All nasal sounds are represented as "N". And so forth. The
    mapping is based on ideas found in Soundex, Metaphone, and other long-standing
    phonetic matching systems. This key can be generated by the function spellfix1_phonehash(X).
    Hence: k2 = spellfix1_phonehash(coalesce(k1,word))'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此字段包含从coalesce(k1,word)派生的音标代码。具有相似发音的字母被映射为相同的符号。例如，所有元音和元音组成变成单个符号“A”。字母“p”、“b”、“f”和“v”都变成“B”。所有鼻音都表示为“N”。依此类推。映射基于Soundex、Metaphone和其他长期存在的音标匹配系统中的想法。此键可以由函数spellfix1_phonehash(X)生成。因此：k2
    = spellfix1_phonehash(coalesce(k1,word))
- en: There is also a function for computing the Wagner edit distance or the Levenshtein
    distance between a pattern and a word. This function is exposed as spellfix1_editdist(X,Y).
    The edit distance function returns the "cost" of converting X into Y. Some transformations
    cost more than others. Changing one vowel into a different vowel, for example
    is relatively cheap, as is doubling a constant, or omitting the second character
    of a double-constant. Other transformations or more expensive. The idea is that
    the edit distance function returns a low cost for words that are similar and a
    higher cost for words that are further apart. In this implementation, the maximum
    cost of any single-character edit (delete, insert, or substitute) is 100, with
    lower costs for some edits (such as transforming vowels).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这里还有一个用于计算模式和单词之间的瓦格纳编辑距离或莱文斯坦距离的函数。这个函数通过 `spellfix1_editdist(X,Y)` 暴露出来。编辑距离函数返回将
    X 转换为 Y 的“成本”。有些转换比其他转换更昂贵。例如，将一个元音改为另一个元音相对较便宜，如同一个常数，或省略双常数的第二个字符。其他的转换则更昂贵。编辑距离函数的思想是，对于相似的词返回一个低成本，对于相距较远的词返回一个较高的成本。在这个实现中，任何单字符编辑（删除、插入或替换）的最大成本是100，某些编辑的成本更低（如变换元音）。
- en: 'The "score" for a comparison is the edit distance between the pattern and the
    word, adjusted down by the base-2 logarithm of the word rank. For example, a match
    with distance 100 but rank 1000 would have a score of 122 (= 100 - log2(1000)
    + 32) whereas a match with distance 100 with a rank of 1 would have a score of
    131 (100 - log2(1) + 32). (NB: The constant 32 is added to each score to keep
    it from going negative in case the edit distance is zero.) In this way, frequently
    used words get a slightly lower cost which tends to move them toward the top of
    the list of alternative spellings.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 比较的 "分数" 是模式和单词之间的编辑距离，通过单词排名的基数对数调整。例如，距离为 100 但排名为 1000 的匹配具有分数 122（= 100
    - log2(1000) + 32），而距离为 100 但排名为 1 的匹配具有分数 131（100 - log2(1) + 32）。通过这种方式，经常使用的单词得到稍低的成本，这倾向于将它们移动到替代拼写列表的顶部。
- en: A straightforward implementation of a spelling corrector would be to compare
    the search term against every word in the vocabulary and select the 20 with the
    lowest scores. However, there will typically be hundreds of thousands or millions
    of words in the vocabulary, and so this approach is not fast enough.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 拼写校正器的一个简单实现是将搜索术语与词汇表中的每个单词进行比较，并选择最低分的前 20 个。但是，词汇表中通常会有数十万或数百万个单词，因此这种方法不够快速。
- en: 'Suppose the term that is being spell-corrected is X. To limit the search space,
    X is converted to a k2-like key using the equivalent of:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 假设被拼写纠正的术语是 X。为了限制搜索空间，X 被转换为一个类似于 k2 的关键字，使用等效于：
- en: '[PRE11]'
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This key is then limited to "scope" characters. The default scope value is 4,
    but an alternative scope can be specified using the "scope=N" term in the WHERE
    clause. After the key has been truncated, the edit distance is run against every
    term in the vocabulary that has a k2 value that begins with the abbreviated key.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，这个关键字被限制在 "scope" 字符内。默认的范围值是4，但可以在 WHERE 子句中使用 "scope=N" 术语指定替代范围。在关键字被截断之后，编辑距离针对词汇表中每个具有以简写键开头的
    k2 值运行。
- en: For example, suppose the input word is "Paskagula". The phonetic key is "BACACALA"
    which is then truncated to 4 characters "BACA". The edit distance is then run
    on the 4980 entries (out of 272,597 entries total) of the vocabulary whose k2
    values begin with BACA, yielding "Pascagoula" as the best match.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设输入单词是 "Paskagula"。音标键是 "BACACALA"，然后被截断为4个字符 "BACA"。然后对词汇表中具有以 BACA 开头的
    k2 值的 4980 个条目（总共 272,597 个条目）运行编辑距离，得到 "Pascagoula" 作为最佳匹配。
- en: Only terms of the vocabulary with a matching langid are searched. Hence, the
    same table can contain entries from multiple languages and only the requested
    language will be used. The default langid is 0.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 只搜索具有匹配 langid 的词汇表条目。因此，同一表可以包含来自多种语言的条目，只会使用请求的语言。默认的 langid 是 0。
- en: 5\. Configurable Edit Distance
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 可配置的编辑距离
- en: 'The built-in Wagner edit-distance function with fixed weights can be replaced
    by the [editdist3()](spellfix1.html#editdist3) edit-distance function with application-defined
    weights and support for unicode, by specifying the "edit_cost_table=*TABLENAME*"
    parameter to the spellfix1 module when the virtual table is created. For example:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 使用固定权重的内置瓦格纳编辑距离函数可以通过在创建虚拟表时指定 "edit_cost_table=*TABLENAME*" 参数到 spellfix1
    模块来替换具有应用定义权重和支持 Unicode 的 [editdist3()](spellfix1.html#editdist3) 编辑距离函数。例如：
- en: '[PRE12]'
  id: totrans-80
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The [editdist3()](spellfix1.html#editdist3) edit-distance function can also
    be selected or deselected at run-time by inserting an appropriate string into
    the "command" column of the virtual table:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[editdist3()](spellfix1.html#editdist3) 编辑距离函数也可以通过将适当的字符串插入到虚拟表的 "command"
    列来在运行时选择或取消选择：'
- en: '[PRE13]'
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the examples above, the APPCOST table would be interrogated to find the edit
    distance coefficients. It is the presence of the "edit_cost_table=" parameter
    to the spellfix1 module name that causes editdist3() to be used in place of the
    built-in edit distance function. If APPCOST is an empty string, then the built-in
    Wagner edit-distance function is used.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，将会查询 APPCOST 表以查找编辑距离系数。是 "edit_cost_table=" 参数在 spellfix1 模块名中的存在导致使用
    editdist3() 代替内置的编辑距离函数。如果 APPCOST 是空字符串，则使用内置的瓦格纳编辑距离函数。
- en: 'The edit distance coefficients are normally read from the APPCOST table once
    and there after stored in memory. Hence, run-time changes to the APPCOST table
    will not normally affect the edit distance results. However, inserting the special
    string ''reset'' into the "command" column of the virtual table causes the edit
    distance coefficients to be reread the APPCOST table. Hence, applications should
    run a SQL statement similar to the following when changes to the APPCOST table
    occur:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑距离系数通常从 APPCOST 表读取一次，然后存储在内存中。因此，对 APPCOST 表的运行时更改通常不会影响编辑距离结果。然而，将特殊字符串
    'reset' 插入到虚拟表的 "command" 列会导致重新读取 APPCOST 表中的编辑距离系数。因此，当 APPCOST 表发生更改时，应用程序应运行类似以下的
    SQL 语句：
- en: INSERT INTO demo2(command) VALUES("reset");
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: INSERT INTO demo2(command) VALUES("reset");
- en: 6\. Dealing With Unusual And Difficult Spellings
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 处理不寻常和困难的拼写
- en: The algorithm above works quite well for most cases, but there are exceptions.
    These exceptions can be dealt with by making additional entries in the virtual
    table using the "soundslike" column.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 上述算法对大多数情况都很有效，但存在例外情况。这些例外情况可以通过在虚拟表中使用 "soundslike" 列添加额外条目来处理。
- en: 'For example, many words of Greek origin begin with letters "ps" where the "p"
    is silent. Ex: psalm, pseudonym, psoriasis, psyche. In another example, many Scottish
    surnames can be spelled with an initial "Mac" or "Mc". Thus, "MacKay" and "McKay"
    are both pronounced the same.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，许多源自希腊的单词以 "ps" 开头，其中 "p" 是无声的。例如：诗篇，假名，牛皮癣，心灵。另一个例子是，许多苏格兰姓氏可以以 "Mac" 或
    "Mc" 开头拼写。因此，"MacKay" 和 "McKay" 的发音相同。
- en: 'Accommodation can be made for words that are not spelled as they sound by making
    additional entries into the virtual table for the same word, but adding an alternative
    spelling in the "soundslike" column. For example, the canonical entry for "psalm"
    would be this:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在虚拟表中为同一个单词添加其他拼写，并在 "soundslike" 列中添加备选拼写，来适应非按照其发音拼写的单词。例如，"诗篇" 的规范条目如下：
- en: '[PRE14]'
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To enhance the ability to correct the spelling of "salm" into "psalm", make
    an addition entry like this:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增强将 "salm" 的拼写改正为 "psalm" 的能力，可以像这样添加一个条目：
- en: '[PRE15]'
  id: totrans-92
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE15]'
- en: It is ok to make multiple entries for the same word as long as each entry has
    a different soundslike value. Note that if no soundslike value is specified, the
    soundslike defaults to the word itself.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定 soundslike 值，则可以对同一个单词进行多个条目。请注意，如果未指定 soundslike 值，则 soundslike 默认为单词本身。
- en: Listed below are some cases where it might make sense to add additional soundslike
    entries. The specific entries will depend on the application and the target language.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 下面列出了一些可能需要添加额外 soundslike 条目的情况。具体条目将取决于应用程序和目标语言。
- en: 'Silent "p" in words beginning with "ps": psalm, psyche'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"ps" 开头的单词中的无声 "p"：诗篇，心灵'
- en: 'Silent "p" in words beginning with "pn": pneumonia, pneumatic'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"pn" 开头的单词中的无声 "p"：肺炎，气动的'
- en: 'Silent "p" in words beginning with "pt": pterodactyl, ptolemaic'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"pt" 开头的单词中的无声 "p"：翼龙，托勒密的'
- en: 'Silent "d" in words beginning with "dj": djinn, Djikarta'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"dj" 开头的单词中的无声 "d"：精灵，雅加达'
- en: 'Silent "k" in words beginning with "kn": knight, Knuthson'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '"kn" 开头的单词中的无声 "k"：骑士，Knuthson'
- en: 'Silent "g" in words beginning with "gn": gnarly, gnome, gnat'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单词开头带有"gn"的情况下的静音"g"：gnarly, gnome, gnat
- en: '"Mac" versus "Mc" beginning Scottish surnames'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苏格兰姓氏开头的"Mac"与"Mc"的区别
- en: '"Tch" sounds in Slavic words: Tchaikovsky vs. Chaykovsky'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 斯拉夫语单词中的"Tch"音：Tchaikovsky vs. Chaykovsky
- en: 'The letter "j" pronounced like "h" in Spanish: LaJolla'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 西班牙语中"j"发音像"h"：LaJolla
- en: 'Words beginning with "wr" versus "r": write vs. rite'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以"wr"开头的单词与以"r"开头的单词的区别：write vs. rite
- en: Miscellaneous problem words such as "debt", "tsetse", "Nguyen", "Van Nuyes".
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种问题单词，如"debt"，"tsetse"，"Nguyen"，"Van Nuyes"。
- en: 7\. Auxiliary Functions
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7\. 辅助函数
- en: 'The source code module that implements the spellfix1 virtual table also implements
    several SQL functions that might be useful to applications that employ spellfix1
    or for testing or diagnostic work while developing applications that use spellfix1\.
    The following auxiliary functions are available:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 实现拼写修复虚拟表的源代码模块还实现了几个SQL函数，这些函数对于使用spellfix1的应用程序或在开发使用spellfix1的应用程序时进行测试或诊断工作可能很有用。以下是可用的辅助函数：
- en: '**editdist3(P,W)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**editdist3(P,W)**'
- en: editdist3(P,W,L)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: editdist3(P,W,L)
- en: editdist3(T)**
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: editdist3(T)**
- en: These routines provide direct access to the version of the Wagner edit-distance
    function that allows for application-defined weights on edit operations. The first
    two forms of this function compare pattern P against word W and return the edit
    distance. In the first function, the langid is assumed to be 0 and in the second,
    the langid is given by the L parameter. The third form of this function reloads
    edit distance coefficients from the table named by T.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这些例程直接提供对Wagner编辑距离函数版本的访问，该函数允许应用程序定义编辑操作的权重。此函数的前两种形式比较模式P与单词W并返回编辑距离。在第一个函数中，langid假定为0，在第二个函数中，langid由参数L给出。此函数的第三种形式从名为T的表重新加载编辑距离系数。
- en: '**spellfix1_editdist(P,W)**'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**spellfix1_editdist(P,W)**'
- en: This routine provides access to the built-in Wagner edit-distance function that
    uses default, fixed costs. The value returned is the edit distance needed to transform
    W into P.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 此例程提供访问内置的Wagner编辑距离函数，该函数使用默认的固定成本。返回的值是将W转换为P所需的编辑距离。
- en: '**spellfix1_phonehash(X)**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**spellfix1_phonehash(X)**'
- en: This routine constructs a phonetic hash of the pure ascii input word X and returns
    that hash. This routine is used internally by spellfix1 in order to transform
    the K1 column of the shadow table into the K2 column.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 此例程构建输入纯ASCII单词X的音素哈希并返回该哈希。此例程在spellfix1内部使用，以将阴影表的K1列转换为K2列。
- en: '**spellfix1_scriptcode(X)**'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**spellfix1_scriptcode(X)**'
- en: 'Given an input string X, this routine attempts to determine the dominant script
    of that input and returns the ISO-15924 numeric code for that script. The current
    implementation understands the following scripts:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 给定输入字符串X，此例程尝试确定该输入的主要书写系统并返回该系统的ISO-15924数值代码。当前实现理解以下书写系统：
- en: 215 - Latin
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 215 - Latin
- en: 220 - Cyrillic
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 220 - Cyrillic
- en: 200 - Greek
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 200 - Greek
- en: Additional language codes might be added in future releases.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会在未来版本中添加更多语言代码。
- en: '**spellfix1_translit(X)**'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**spellfix1_translit(X)**'
- en: This routine transliterates unicode text into pure ascii, returning the pure
    ascii representation of the input text X. This is the function that is used internally
    to transform vocabulary words into the K1 column of the shadow table.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此例程将Unicode文本转换为纯ASCII，并返回输入文本X的纯ASCII表示。这是用于将词汇词转换为阴影表的K1列的内部使用函数。
- en: 8\. The editdist3 function
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8\. editdist3函数
- en: 'The editdist3 algorithm is a function that computes the minimum edit distance
    (a.k.a. the Levenshtein distance) between two input strings. The editdist3 algorithm
    is a configurable alternative to the default edit distance function of spellfix1.
    Features of editdist3 include:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: editdist3算法是计算两个输入字符串之间最小编辑距离（也称为Levenshtein距离）的函数。editdist3算法是spellfix1默认编辑距离函数的可配置替代方案。editdist3的特点包括：
- en: It works with unicode (UTF8) text.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它适用于Unicode（UTF8）文本。
- en: A table of insertion, deletion, and substitution costs can be provided by the
    application.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序可以提供插入、删除和替换成本的表。
- en: Multi-character insertions, deletions, and substitutions can be enumerated in
    the cost table.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在成本表中可以列举多字符的插入、删除和替换。
- en: 9\. The editdist3 COST table
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9\. editdist3成本表
- en: 'To program the costs of editdist3, create a table such as the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要编程editdist3的成本，请创建如下表：
- en: '[PRE16]'
  id: totrans-131
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The cost table can be named anything you want - it does not have to be called
    "editcost". And the table can contain additional columns. The only requirement
    is that the table must contain the four columns show above, with exactly the names
    shown.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 成本表可以任意命名 - 不一定要称为 "editcost"。表格可以包含额外的列。唯一的要求是表格必须包含上述四列，且列名必须与示例完全相同。
- en: The iLang column is a non-negative integer that identifies a set of costs appropriate
    for a particular language. The editdist3 function will only use a single iLang
    value for any given edit-distance computation. The default value is 0\. It is
    recommended that applications that only need to use a single language always use
    iLang==0 for all entries.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 列 iLang 是一个非负整数，用于标识适用于特定语言的成本集合。函数 editdist3 在任何给定的编辑距离计算中只会使用单个 iLang 值。默认值是
    0。建议只需要使用单一语言的应用始终对所有条目使用 iLang==0。
- en: The iCost column is the numeric cost of transforming cFrom into cTo. This value
    should be a non-negative integer, and should probably be less than 100. The default
    single-character insertion and deletion costs are 100 and the default single-character
    to single-character substitution cost is 150\. A cost of 10000 or more is considered
    "infinite" and causes the rule to be ignored.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 列 iCost 是将 cFrom 转换为 cTo 的数值成本。此值应为非负整数，且可能小于 100。默认单字符插入和删除成本为 100，单字符到单字符替换成本为
    150。10000 或更高的成本被视为“无限”，并导致规则被忽略。
- en: The cFrom and cTo columns show edit transformation strings. Either or both columns
    may contain more than one character. Or either column (but not both) may hold
    an empty string. When cFrom is empty, that is the cost of inserting cTo. When
    cTo is empty, that is the cost of deleting cFrom.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 列 cFrom 和 cTo 显示编辑转换字符串。任一列或两列都可能包含多个字符。当 cFrom 为空时，表示插入 cTo 的成本。当 cTo 为空时，表示删除
    cFrom 的成本。
- en: In the spellfix1 algorithm, cFrom is the text as the user entered it and cTo
    is the correctly spelled text as it exists in the database. The goal of the editdist3
    algorithm is to determine how close the user-entered text is to the dictionary
    text.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在 spellfix1 算法中，cFrom 是用户输入的文本，cTo 是数据库中存在的正确拼写文本。editdist3 算法的目标是确定用户输入的文本与词典文本的接近程度。
- en: 'There are three special-case entries in the cost table:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 成本表中有三个特例条目：
- en: '| cFrom | cTo | Meaning |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| cFrom | cTo | 意义 |'
- en: '| '''' | ''?'' | The default insertion cost |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| '''' | ''?'' | 默认插入成本 |'
- en: '| ''?'' | '''' | The default deletion cost |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| ''?'' | '''' | 默认删除成本 |'
- en: '| ''?'' | ''?'' | The default substitution cost |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| ''?'' | ''?'' | 默认替换成本 |'
- en: If any of the special-case entries shows above are omitted, then the value of
    100 is used for insertion and deletion and 150 is used for substitution. To disable
    the default insertion, deletion, and/or substitution set their respective cost
    to 10000 or more.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略了任何上述特殊情况条目，则插入和删除的值将为 100，替换的值将为 150。要禁用默认插入、删除和/或替换，请将它们的相应成本设置为 10000
    或更高。
- en: Other entries in the cost table specific transforms for particular characters.
    The cost of specific transforms should be less than the default costs, or else
    the default costs will take precedence and the specific transforms will never
    be used.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 成本表中的其他条目专门针对特定字符的转换。特定转换的成本应低于默认成本，否则默认成本将优先，而特定转换将永远不会被使用。
- en: 'Some example, cost table entries:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 一些示例，成本表条目：
- en: '[PRE17]'
  id: totrans-145
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The rule above says that the letter "a" in user input can be matched against
    the letter "ä" in the dictionary with a penalty of 5.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 上述规则表明，用户输入的字母 "a" 可以与字典中的字母 "ä" 匹配，并罚分 5。
- en: '[PRE18]'
  id: totrans-147
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The number of characters in cFrom and cTo do not need to be the same. The rule
    above says that "ss" on user input will match "ß" with a penalty of 8.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: cFrom 和 cTo 中的字符数不需要相同。上述规则表明，用户输入的 "ss" 将与字典中的 "ß" 匹配，并罚分 8。
- en: 10\. Experimenting with the editcost3() function
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10\. 尝试 editcost3() 函数
- en: 'The spellfix1 virtual table uses editdist3 if the "edit_cost_table=TABLE" option
    is specified as an argument when the spellfix1 virtual table is created. But editdist3
    can also be tested directly using the built-in "editdist3()" SQL function. The
    editdist3() SQL function has 3 forms:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在创建 spellfix1 虚拟表时指定了 "edit_cost_table=TABLE" 选项作为参数，则 spellfix1 虚拟表将使用 editdist3。但是可以直接使用内置的
    "editdist3()" SQL 函数来测试 editdist3。editdist3() SQL 函数有 3 种形式：
- en: editdist3('TABLENAME');
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: editdist3('TABLENAME');
- en: editdist3('string1', 'string2');
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: editdist3('string1', 'string2');
- en: editdist3('string1', 'string2', langid);
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: editdist3('string1', 'string2', langid);
- en: The first form loads the edit distance coefficients from a table called 'TABLENAME'.
    Any prior coefficients are discarded. So when experimenting with weights and the
    weight table changes, simply rerun the single-argument form of editdist3() to
    reload revised coefficients. Note that the edit distance weights used by the editdist3()
    SQL function are independent from the weights used by the spellfix1 virtual table.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种形式从名为 `'TABLENAME'` 的表中加载编辑距离系数。任何先前的系数都将被丢弃。因此，在尝试不同权重和权重表更改时，只需重新运行 `editdist3()`
    的单参数形式即可重新加载修订后的系数。请注意，`editdist3()` SQL 函数使用的编辑距离权重与 `spellfix1` 虚拟表使用的权重是独立的。
- en: The second and third forms return the computed edit distance between strings
    'string1' and "string2'. In the second form, a language id of 0 is used. The language
    id is specified in the third form.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种和第三种形式返回字符串 `'string1'` 和 `"string2'` 之间计算得到的编辑距离。在第二种形式中，使用语言标识符 0。语言标识符在第三种形式中指定。
