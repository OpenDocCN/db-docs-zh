["```sql\n-- I have about decided that SQL's treatment of NULLs is capricious and cannot be\n-- deduced by logic.  It must be discovered by experiment.  To that end, I have \n-- prepared the following script to test how various SQL databases deal with NULL.\n-- My aim is to use the information gathered from this script to make SQLite as\n-- much like other databases as possible.\n--\n-- If you could please run this script in your database engine and mail the results\n-- to me at drh@hwaci.com, that will be a big help.  Please be sure to identify the\n-- database engine you use for this test.  Thanks.\n--\n-- If you have to change anything to get this script to run with your database\n-- engine, please send your revised script together with your results.\n--\n\n-- Create a test table with data\ncreate table t1(a int, b int, c int);\ninsert into t1 values(1,0,0);\ninsert into t1 values(2,0,1);\ninsert into t1 values(3,1,0);\ninsert into t1 values(4,1,1);\ninsert into t1 values(5,null,0);\ninsert into t1 values(6,null,1);\ninsert into t1 values(7,null,null);\n\n-- Check to see what CASE does with NULLs in its test expressions\nselect a, case when b<>0 then 1 else 0 end from t1;\nselect a+10, case when not b<>0 then 1 else 0 end from t1;\nselect a+20, case when b<>0 and c<>0 then 1 else 0 end from t1;\nselect a+30, case when not (b<>0 and c<>0) then 1 else 0 end from t1;\nselect a+40, case when b<>0 or c<>0 then 1 else 0 end from t1;\nselect a+50, case when not (b<>0 or c<>0) then 1 else 0 end from t1;\nselect a+60, case b when c then 1 else 0 end from t1;\nselect a+70, case c when b then 1 else 0 end from t1;\n\n-- What happens when you multiply a NULL by zero?\nselect a+80, b*0 from t1;\nselect a+90, b*c from t1;\n\n-- What happens to NULL for other operators?\nselect a+100, b+c from t1;\n\n-- Test the treatment of aggregate operators\nselect count(*), count(b), sum(b), avg(b), min(b), max(b) from t1;\n\n-- Check the behavior of NULLs in WHERE clauses\nselect a+110 from t1 where b<10;\nselect a+120 from t1 where not b>10;\nselect a+130 from t1 where b<10 OR c=1;\nselect a+140 from t1 where b<10 AND c=1;\nselect a+150 from t1 where not (b<10 AND c=1);\nselect a+160 from t1 where not (c=1 AND b<10);\n\n-- Check the behavior of NULLs in a DISTINCT query\nselect distinct b from t1;\n\n-- Check the behavior of NULLs in a UNION query\nselect b from t1 union select b from t1;\n\n-- Create a new table with a unique column.  Check to see if NULLs are considered\n-- to be distinct.\ncreate table t2(a int, b int unique);\ninsert into t2 values(1,1);\ninsert into t2 values(2,null);\ninsert into t2 values(3,null);\nselect * from t2;\n\ndrop table t1;\ndrop table t2;\n\n```"]