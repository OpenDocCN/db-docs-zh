- en: 1\. Getting Started
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 入门指南
- en: 原文：[https://sqlite.com/cli.html](https://sqlite.com/cli.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/cli.html](https://sqlite.com/cli.html)
- en: The SQLite project provides a simple command-line program named **sqlite3**
    (or **sqlite3.exe** on Windows) that allows the user to manually enter and execute
    SQL statements against an SQLite database or against a [ZIP archive](#zipdb).
    This document provides a brief introduction on how to use the **sqlite3** program.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite项目提供了一个名为**sqlite3**（或Windows上的**sqlite3.exe**）的简单命令行程序，允许用户手动输入并执行SQL语句，针对SQLite数据库或[Z​​IP存档](#zipdb)。本文提供了如何使用**sqlite3**程序的简要介绍。
- en: Start the **sqlite3** program by typing "sqlite3" at the command prompt, optionally
    followed by the name of the file that holds the SQLite database (or [ZIP archive](#zipdb)).
    If the named file does not exist, a new database file with the given name will
    be created automatically. If no database file is specified on the command-line,
    a temporary database is created and automatically deleted when the "sqlite3" program
    exits.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在命令提示符下键入"sqlite3"启动**sqlite3**程序，可选择性地跟上保存SQLite数据库（或[Z​​IP存档](#zipdb)）的文件名。如果指定的文件不存在，则将自动创建一个具有给定名称的新数据库文件。如果在命令行中未指定数据库文件，则将创建一个临时数据库，并在"sqlite3"程序退出时自动删除。
- en: On startup, the **sqlite3** program will show a brief banner message then prompt
    you to enter SQL. Type in SQL statements (terminated by a semicolon), press "Enter"
    and the SQL will be executed.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 启动时，**sqlite3**程序将显示一个简短的横幅消息，然后提示您输入SQL。键入SQL语句（以分号结尾），按"Enter"执行SQL语句。
- en: 'For example, to create a new SQLite database named "ex1" with a single table
    named "tbl1", you might do this:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要创建名为"ex1"的新SQLite数据库，并包含名为"tbl1"的单个表，您可以这样做：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Terminate the sqlite3 program by typing your system End-Of-File character (usually
    a Control-D). Use the interrupt character (usually a Control-C) to stop a long-running
    SQL statement.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 终止sqlite3程序时，请键入系统的文件结束符（通常是Control-D）。使用中断字符（通常是Control-C）来停止长时间运行的SQL语句。
- en: 'Make sure you type a semicolon at the end of each SQL command! The sqlite3
    program looks for a semicolon to know when your SQL command is complete. If you
    omit the semicolon, sqlite3 will give you a continuation prompt and wait for you
    to enter more text to complete the SQL command. This feature allows you to enter
    SQL commands that span multiple lines. For example:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 确保每个SQL命令的末尾都键入分号！sqlite3程序会查找分号以确定您的SQL命令何时完成。如果省略分号，sqlite3将给出一个继续提示，并等待您输入更多文本以完成SQL命令。此功能允许您输入跨多行的SQL命令。例如：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 2\. Double-click Startup On Windows
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 在Windows上双击启动
- en: 'Windows users can double-click on the **sqlite3.exe** icon to cause the command-line
    shell to pop-up a terminal window running SQLite. However, because double-clicking
    starts the sqlite3.exe without command-line arguments, no database file will have
    been specified, so SQLite will use a temporary database that is deleted when the
    session exits. To use a persistent disk file as the database, enter the ".open"
    command immediately after the terminal window starts up:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Windows用户可以双击**sqlite3.exe**图标，使命令行shell弹出运行SQLite的终端窗口。但是，因为双击启动sqlite3.exe时没有命令行参数，所以不会指定任何数据库文件，因此SQLite将使用一个在会话退出时删除的临时数据库。要将持久磁盘文件用作数据库，请在终端窗口启动后立即输入".open"命令：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The example above causes the database file named "ex1.db" to be opened and used.
    The "ex1.db" file is created if it does not previously exist. You might want to
    use a full pathname to ensure that the file is in the directory that you think
    it is in. Use forward-slashes as the directory separator character. In other words
    use "c:/work/ex1.db", not "c:\work\ex1.db".
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例导致名为"ex1.db"的数据库文件被打开和使用。如果之前不存在"ex1.db"文件，则会创建该文件。您可能希望使用完整路径名来确保文件位于您认为的目录中。请使用斜杠作为目录分隔符。换句话说，请使用"c:/work/ex1.db"，而不是"c:\work\ex1.db"。
- en: 'Alternatively, you can create a new database using the default temporary storage,
    then save that database into a disk file using the ".save" command:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以使用默认临时存储创建一个新的数据库，然后使用".save"命令将该数据库保存到磁盘文件中：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Be careful when using the ".save" command as it will overwrite any preexisting
    database files having the same name without prompting for confirmation. As with
    the ".open" command, you might want to use a full pathname with forward-slash
    directory separators to avoid ambiguity.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用".save"命令时要小心，因为它将覆盖任何具有相同名称的现有数据库文件而不会提示确认。与".open"命令一样，您可能希望使用带有斜杠目录分隔符的完整路径名，以避免歧义。
- en: 3\. Special commands to sqlite3 (dot-commands)
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 特殊命令到 sqlite3（点命令）
- en: Most of the time, sqlite3 just reads lines of input and passes them on to the
    SQLite library for execution. But input lines that begin with a dot (".") are
    intercepted and interpreted by the sqlite3 program itself. These "dot commands"
    are typically used to change the output format of queries, or to execute certain
    prepackaged query statements. There were originally just a few dot commands, but
    over the years many new features have accumulated so that today there are over
    60.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，sqlite3 只是读取输入行并将其传递给 SQLite 库进行执行。但以点号 (".") 开头的输入行会被 sqlite3 程序拦截并解释。这些
    "点命令" 通常用于更改查询的输出格式，或执行某些预打包的查询语句。最初只有几个点命令，但多年来积累了许多新功能，因此今天有超过 60 个点命令。
- en: 'For a listing of the available dot commands, you can enter ".help" with no
    arguments. Or enter ".help TOPIC" for detailed information about TOPIC. The list
    of available dot-commands follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看可用的点命令列表，可以输入不带参数的".help"。或输入".help TOPIC"以获取有关 TOPIC 的详细信息。可用点命令的列表如下：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 4\. Rules for "dot-commands", SQL and More
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. “点命令”、SQL 和更多规则
- en: 4.1\. Line Structure
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.1\. 行结构
- en: 'The CLI''s input is parsed into a sequence consisting of:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 的输入被解析为一个序列，其中包括：
- en: SQL statements;
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 语句；
- en: dot-commands; or
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点命令；或
- en: CLI comments
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CLI 注释
- en: SQL statements are free-form, and can be spread across multiple lines, with
    whitespace or SQL comments embedded anywhere. They are terminated by either a
    ';' character at the end of an input line, or a '/' character or the word "go"
    on a line by itself. When not at the end of an input line, the ';' character acts
    to separate SQL statements. Trailing whitespace is ignored for purposes of termination.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 语句是自由格式的，可以跨多行分布，任何位置嵌入空白或 SQL 注释。它们以输入行末尾的 ';' 字符或 '/' 字符或单独一行上的单词 "go"
    终止。用于终止的目的忽略尾随空白字符。
- en: 'A dot-command has a more restrictive structure:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 点命令具有更严格的结构：
- en: It must begin with its "." at the left margin with no preceding whitespace.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它必须以其 "." 开头，左边距没有前导空白字符。
- en: It must be entirely contained on a single input line.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它必须完全包含在单个输入行中。
- en: It cannot occur in the middle of an ordinary SQL statement. In other words,
    it cannot occur at a continuation prompt.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不能出现在普通 SQL 语句的中间。换句话说，它不能出现在继续提示符处。
- en: There is no comment syntax for dot-commands.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点命令没有注释语法。
- en: The CLI also accepts whole-line comments that begin with a '#' character and
    extend to the end of the line. There can be no with whitespace prior to the '#'.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 还接受以 '#' 字符开头并延伸到行尾的整行注释。在 '#' 前不能有空白字符。
- en: 4.2\. Dot-command arguments
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2\. 点命令参数
- en: 'The arguments passed to dot-commands are parsed from the command tail, per
    these rules:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给点命令的参数根据以下规则从命令尾部解析：
- en: The trailing newline and any other trailing whitespace is discarded;
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 末尾的换行符和任何其他尾随空白字符都被丢弃；
- en: Whitespace immediately following the dot-command name, or any argument input
    end bound is discarded;
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 紧跟在点命令名称后面的空白字符，或者任何参数输入结束界定符被丢弃；
- en: An argument input begins with any non-whitespace character;
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 参数输入以任何非空白字符开头；
- en: 'An argument input ends with a character which depends upon its leading character
    thusly:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 参数输入以其前导字符取决于其结束字符：
- en: for a leading single-quote ('), a single-quote acts as the end delimiter;
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于前导单引号（'），单引号充当结束定界符；
- en: for a leading double-quote ("), an unescaped double-quote acts as the end delimiter;
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于前导双引号（"），未转义的双引号充当结束定界符；
- en: for any other leading character, the end delimiter is any whitespace; and
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于任何其他前导字符，结束定界符是任何空白字符；和
- en: the command tail end acts as the end delimiter for any argument;
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令尾端作为任何参数的结束定界符；
- en: Within a double-quoted argument input, a backslash-escaped double-quote is part
    of the argument rather than its terminating quote;
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在双引号参数输入内，反斜杠转义的双引号是参数的一部分而不是其终止引号；
- en: Within a double-quoted argument, traditional C-string literal, backslash escape
    sequence translation is done; and
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在双引号参数内，传统的 C 字符串文字，反斜杠转义序列被转换；和
- en: Argument input delimiters (the bounding quotes or whitespace) are discarded
    to yield the passed argument.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 参数输入分隔符（界定引号或空白字符）被丢弃以得到传递的参数。
- en: 4.3\. Dot-command execution
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.3\. 点命令执行
- en: The dot-commands are interpreted by the sqlite3.exe command-line program, not
    by SQLite itself. So none of the dot-commands will work as an argument to SQLite
    interfaces such as [sqlite3_prepare()](c3ref/prepare.html) or [sqlite3_exec()](c3ref/exec.html).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '".separator" dot 命令由 sqlite3.exe 命令行程序解释，而不是 SQLite 本身。因此，所有 dot 命令都不能作为 SQLite
    接口（如 [sqlite3_prepare()](c3ref/prepare.html) 或 [sqlite3_exec()](c3ref/exec.html)）的参数使用。'
- en: 5\. Changing Output Formats
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 更改输出格式
- en: 'The sqlite3 program is able to show the results of a query in 14 different
    output formats:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: sqlite3 程序能够以 14 种不同的输出格式显示查询结果：
- en: ascii
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ascii
- en: box
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: box
- en: csv
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: csv
- en: column
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: column
- en: html
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: html
- en: insert
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: insert
- en: json
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: json
- en: line
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: line
- en: list
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: list
- en: markdown
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: markdown
- en: quote
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: quote
- en: table
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: table
- en: tabs
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tabs
- en: tcl
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tcl
- en: You can use the ".mode" dot command to switch between these output formats.
    The default output mode is "list". In list mode, each row of a query result is
    written on one line of output and each column within that row is separated by
    a specific separator string. The default separator is a pipe symbol ("|"). List
    mode is especially useful when you are going to send the output of a query to
    another program (such as AWK) for additional processing.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 ".mode" dot 命令在这些输出格式之间切换。默认输出模式为 "list"。在 list 模式下，查询结果的每一行写在输出的一行上，每个行内的列由特定分隔字符串分隔。默认分隔符是管道符号（"|"）。当将查询输出发送到另一个程序（如
    AWK）进行额外处理时，list 模式特别有用。
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Type ".mode" with no arguments to show the current mode:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 输入 ".mode" 且不带参数以显示当前模式：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Use the ".separator" dot command to change the separator. For example, to change
    the separator to a comma and a space, you could do this:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ".separator" dot 命令来更改分隔符。例如，要将分隔符更改为逗号和空格，可以这样做：
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The next ".mode" command might reset the ".separator" back to some default value
    (depending on its arguments). So you will likely need to repeat the ".separator"
    command whenever you change modes if you want to continue using a non-standard
    separator.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个 ".mode" 命令可能会将 ".separator" 重置回某个默认值（取决于其参数）。因此，如果要继续使用非标准分隔符，每次更改模式后可能需要重复
    ".separator" 命令。
- en: 'In "quote" mode, the output is formatted as SQL literals. Strings are enclosed
    in single-quotes and internal single-quotes are escaped by doubling. Blobs are
    displayed in hexadecimal blob literal notation (Ex: x''abcd''). Numbers are displayed
    as ASCII text and NULL values are shown as "NULL". All columns are separated from
    each other by a comma (or whatever alternative character is selected using ".separator").'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 "quote" 模式下，输出格式为 SQL 字面量。字符串用单引号括起来，内部单引号通过双重转义。Blobs 以十六进制 blob 字面量表示（例如：x'abcd'）。数字显示为
    ASCII 文本，NULL 值显示为 "NULL"。所有列都用逗号（或使用 ".separator" 选择的其他字符）分隔。
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In "line" mode, each column in a row of the database is shown on a line by
    itself. Each line consists of the column name, an equal sign and the column data.
    Successive records are separated by a blank line. Here is an example of line mode
    output:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在 "line" 模式下，数据库行中的每一列都显示在单独的一行上。每行由列名、等号和列数据组成。连续的记录之间用空行分隔。以下是 line 模式输出的示例：
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In column mode, each record is shown on a separate line with the data aligned
    in columns. For example:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在列模式下，每条记录都显示在单独的一行上，数据在列中对齐。例如：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In "column" mode (and also in "box", "table", and "markdown" modes) the width
    of columns adjusts automatically. But you can override this, providing a specified
    width for each column using the ".width" command. The arguments to ".width" are
    integers which are the number of characters to devote to each column. Negative
    numbers mean right-justify. Thus:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在 "column" 模式（以及 "box"、"table" 和 "markdown" 模式）中，列的宽度会自动调整。但您可以使用 ".width" 命令为每个列指定特定的宽度。".width"
    的参数是整数，表示每列要占用的字符数。负数表示右对齐。因此：
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: A width of 0 means the column width is chosen automatically. Unspecified column
    widths become zero. Hence, the command ".width" with no arguments resets all column
    widths to zero and hence causes all column widths to be determined automatically.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 宽度为 0 表示列宽度自动选择。未指定的列宽度变为零。因此，不带参数的 ".width" 命令会将所有列宽度重置为零，导致所有列宽度自动确定。
- en: 'The "column" mode is a tabular output format. Other tabular output formats
    are "box", "markdown", and "table":'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '"column" 模式是一个表格输出格式。其他表格输出格式包括 "box"、"markdown" 和 "table"：'
- en: '[PRE12]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The columnar modes accept some addition options to control formatting. The "--wrap
    *N*" option (where *N* is an integer) causes columns to wrap text that is longer
    than N characters. Wrapping is disabled if N is zero.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 列模式接受一些额外的选项来控制格式化。"--wrap *N*" 选项（*N* 为整数）会导致列在超过 N 个字符的文本处换行。如果 N 为零，则禁用换行。
- en: '[PRE13]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Wrapping happens after exactly *N* characters, which might be in the middle
    of a word. To wrap at a word boundary, add the "--wordwrap on" option (or just
    "-ww" for short):'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 换行发生在正好 *N* 个字符之后，这可能发生在单词中间。要在单词边界处换行，请添加 "--wordwrap on" 选项（或简写为 "-ww"）：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The "--quote" option causes the results in each column to be quoted like an
    SQL literal, as in the "quote" mode. See the on-line help for additional options.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '"--quote" 选项会导致每列中的结果像 SQL 字面量一样带引号，就像 "quote" 模式一样。有关其他选项，请参阅在线帮助。'
- en: The command ".mode box --wrap 60 --quote" is so useful for general-purpose database
    queries that it is given its own alias. Instead of typing out that whole 27-character
    command, you can just say ".mode qbox".
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 命令 ".mode box --wrap 60 --quote" 在通用数据库查询中非常有用，因此它具有自己的别名。您可以直接使用 ".mode qbox"
    而不是输入整个 27 个字符的命令。
- en: Another useful output mode is "insert". In insert mode, the output is formatted
    to look like SQL INSERT statements. Use insert mode to generate text that can
    later be used to input data into a different database.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种有用的输出模式是 "insert"。在插入模式下，输出格式化为类似 SQL INSERT 语句的形式。使用插入模式生成文本，以便稍后将数据输入到其他数据库中。
- en: 'When specifying insert mode, you have to give an extra argument which is the
    name of the table to be inserted into. For example:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定插入模式时，必须提供额外的参数，即要插入的表名。例如：
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Other output modes include "csv", "json", and "tcl". Try these yourself to see
    what they do.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 其他输出模式包括 "csv"、"json" 和 "tcl"。请自行尝试以查看它们的功能。
- en: 6\. Querying the database schema
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 查询数据库模式
- en: The sqlite3 program provides several convenience commands that are useful for
    looking at the schema of the database. There is nothing that these commands do
    that cannot be done by some other means. These commands are provided purely as
    a shortcut.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: sqlite3 程序提供了几个方便的命令，用于查看数据库的架构。这些命令提供了一些其他方法无法完成的便利。这些命令纯粹是为了快捷起见而提供的。
- en: For example, to see a list of the tables in the database, you can enter ".tables".
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要查看数据库中表的列表，可以输入 ".tables"。
- en: '[PRE16]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The ".tables" command is similar to setting list mode then executing the following
    query:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '".tables" 命令类似于设置列表模式，然后执行以下查询：'
- en: '[PRE17]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: But the ".tables" command does more. It queries the [sqlite_schema](schematab.html)
    table for all [attached](lang_attach.html) databases, not just the primary database.
    And it arranges its output into neat columns.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 但是 ".tables" 命令功能更强大。它查询 [sqlite_schema](schematab.html) 表中所有 [attached](lang_attach.html)
    数据库，而不仅限于主数据库。并将其输出整齐地排列成列。
- en: The ".indexes" command works in a similar way to list all of the indexes. If
    the ".indexes" command is given an argument which is the name of a table, then
    it shows just indexes on that table.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '".indexes" 命令的工作方式类似于列出所有索引。如果 ".indexes" 命令带有表名作为参数，则只显示该表上的索引。'
- en: 'The ".schema" command shows the complete schema for the database, or for a
    single table if an optional tablename argument is provided:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '".schema" 命令显示数据库的完整模式，或者如果提供了可选的表名参数，则显示单个表的模式：'
- en: '[PRE18]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The ".schema" command is roughly the same as setting list mode, then entering
    the following query:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '".schema" 命令与设置列表模式然后输入以下查询大致相同：'
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'As with ".tables", the ".schema" command shows the schema for all [attached](lang_attach.html)
    databases. If you only want to see the schema for a single database (perhaps "main")
    then you can add an argument to ".schema" to restrict its output:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 与 ".tables" 类似，".schema" 命令显示所有 [attached](lang_attach.html) 数据库的模式。如果只想查看单个数据库（比如
    "main"）的模式，则可以在 ".schema" 后加上参数来限制其输出：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The ".schema" command can be augmented with the "--indent" option, in which
    case it tries to reformat the various CREATE statements of the schema so that
    they are more easily readable by humans.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '".schema" 命令可以使用 "--indent" 选项增强，这样它会尝试重新格式化模式的各种 CREATE 语句，使其更易于人类阅读。'
- en: The ".databases" command shows a list of all databases open in the current connection.
    There will always be at least 2\. The first one is "main", the original database
    opened. The second is "temp", the database used for temporary tables. There may
    be additional databases listed for databases attached using the ATTACH statement.
    The first output column is the name the database is attached with, and the second
    result column is the filename of the external file. There may be a third result
    column which will be either "'r/o'" or "'r/w'" depending on whether the database
    file is read-only or read-write. And there might be a fourth result column showing
    the result of [sqlite3_txn_state()](c3ref/txn_state.html) for that database file.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '".databases" 命令显示当前连接中所有打开的数据库列表。至少会有两个数据库。第一个是 "main"，最初打开的数据库。第二个是 "temp"，用于临时表的数据库。可能会列出使用
    ATTACH 语句附加的其他数据库。第一个输出列是数据库的附加名称，第二个结果列是外部文件的文件名。可能会有第三个结果列，其内容将是 "''r/o''" 或
    "''r/w''"，取决于数据库文件是只读还是读写。还可能会有第四个结果列，显示该数据库文件的 [sqlite3_txn_state()](c3ref/txn_state.html)
    的结果。'
- en: '[PRE21]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The ".fullschema" dot-command works like the ".schema" command in that it displays
    the entire database schema. But ".fullschema" also includes dumps of the statistics
    tables "sqlite_stat1", "sqlite_stat3", and "sqlite_stat4", if they exist. The
    ".fullschema" command normally provides all of the information needed to exactly
    recreate a query plan for a specific query. When reporting suspected problems
    with the SQLite query planner to the SQLite development team, developers are requested
    to provide the complete ".fullschema" output as part of the trouble report. Note
    that the sqlite_stat3 and sqlite_stat4 tables contain samples of index entries
    and so might contain sensitive data, so do not send the ".fullschema" output of
    a proprietary database over a public channel.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '".fullschema" 命令类似于 ".schema" 命令，显示整个数据库架构。但 ".fullschema" 还包括统计表 "sqlite_stat1"、"sqlite_stat3"
    和 "sqlite_stat4" 的转储，如果存在的话。".fullschema" 命令通常提供了重新创建特定查询的查询计划所需的所有信息。在向 SQLite
    开发团队报告 SQLite 查询规划器可能存在的问题时，开发人员被要求提供完整的 ".fullschema" 输出作为问题报告的一部分。请注意，sqlite_stat3
    和 sqlite_stat4 表包含索引条目的样本，因此可能包含敏感数据，因此不要通过公共频道发送专有数据库的 ".fullschema" 输出。'
- en: 7\. Opening Database Files
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7\. 打开数据库文件
- en: The ".open" command opens a new database connection, after first closing the
    previously opened database command. In its simplest form, the ".open" command
    merely invokes [sqlite3_open()](c3ref/open.html) on the file named as its argument.
    Use the name ":memory:" to open a new in-memory database that disappears when
    the CLI exits or when the ".open" command is run again. Or use no name to open
    a private, temporary on-disk database which will also disappear upon exit or use
    of ".open".
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '".open" 命令打开一个新的数据库连接，在先关闭先前打开的数据库命令之后。最简单的形式下，".open" 命令仅在其参数命名的文件上调用 [sqlite3_open()](c3ref/open.html)。使用名称
    ":memory:" 可以打开一个新的内存数据库，当 CLI 退出或再次运行 ".open" 命令时会消失。或者不使用名称来打开一个私有的临时磁盘数据库，也会在退出或使用
    ".open" 后消失。'
- en: If the --new option is included with ".open", then the database is reset prior
    to being opened. Any prior data is destroyed. This is a destructive overwrite
    of prior data and no confirmation is requested, so use this option carefully.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在 ".open" 中包含 --new 选项，则在打开之前将重置数据库。任何先前的数据都将被销毁。这是一次破坏性的覆盖先前数据操作，不会请求确认，请谨慎使用该选项。
- en: The --readonly option opens the database in read-only mode. Write will be prohibited.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: --readonly 选项以只读模式打开数据库。写操作将被禁止。
- en: The --deserialize option causes the entire content of the on-disk file to be
    read into memory and then opened as an in-memory database using the [sqlite3_deserialize()](c3ref/deserialize.html)
    interface. This will, of course, require a lot of memory if you have a large database.
    Also, any changes you make to the database will not be saved back to disk unless
    you explicitly save them using the ".save" or ".backup" commands.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: --deserialize 选项会导致将磁盘文件的整个内容读入内存，然后使用 [sqlite3_deserialize()](c3ref/deserialize.html)
    接口作为内存数据库打开。如果有大型数据库，这当然会消耗大量内存。此外，除非显式使用 ".save" 或 ".backup" 命令保存更改，否则对数据库所做的任何更改都不会保存回磁盘。
- en: The --append option causes the SQLite database to be appended to an existing
    file rather than working as a stand-alone file. See the [appendvfs extension](https://www.sqlite.org/src/file/ext/misc/appendvfs.c)
    for more information.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: --append 选项使 SQLite 数据库附加到现有文件而不是作为独立文件工作。有关更多信息，请参阅 [appendvfs 扩展](https://www.sqlite.org/src/file/ext/misc/appendvfs.c)。
- en: The --zip option causes the specified input file to be interpreted as a ZIP
    archive instead of as an SQLite database file.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: --zip 选项导致指定的输入文件被解释为 ZIP 存档，而不是 SQLite 数据库文件。
- en: The --hexdb option causes the database content to be to be read from subsequent
    lines of input in a hex format, rather than from a separate file on disk. The
    "dbtotxt" command-line tool can be used to generate the appropriate text for a
    database. The --hexdb option is intended for use by the SQLite developers for
    testing purposes. We do not know of any use cases for this option outside of internal
    SQLite testing and development.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: --hexdb 选项使数据库内容以十六进制格式从后续输入的行中读取，而不是从磁盘上的单独文件中读取。"dbtotxt" 命令行工具可用于为数据库生成适当的文本。--hexdb
    选项旨在供 SQLite 开发人员用于测试目的。我们不知道在内部 SQLite 测试和开发之外有任何用例。
- en: 8\. Redirecting I/O
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8\. 重定向 I/O
- en: 8.1\. Writing results to a file
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.1\. 将结果写入文件
- en: 'By default, sqlite3 sends query results to standard output. You can change
    this using the ".output" and ".once" commands. Just put the name of an output
    file as an argument to .output and all subsequent query results will be written
    to that file. Or use the .once command instead of .output and output will only
    be redirected for the single next command before reverting to the console. Use
    .output with no arguments to begin writing to standard output again. For example:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，sqlite3 将查询结果发送到标准输出。您可以使用 ".output" 和 ".once" 命令更改此行为。只需将输出文件的名称作为 .output
    的参数，所有随后的查询结果将被写入该文件。或者使用 .once 命令而不是 .output，在单个下一个命令之前重定向输出，然后恢复到控制台。使用没有参数的
    .output 来重新开始写入标准输出。例如：
- en: '[PRE22]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'If the first character of the ".output" or ".once" filename is a pipe symbol
    ("|") then the remaining characters are treated as a command and the output is
    sent to that command. This makes it easy to pipe the results of a query into some
    other process. For example, the "open -f" command on a Mac opens a text editor
    to display the content that it reads from standard input. So to see the results
    of a query in a text editor, one could type:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 ".output" 或 ".once" 文件名的第一个字符是管道符号（"|"），则剩余的字符被视为命令，并将输出发送到该命令。这使得可以轻松地将查询结果导入到其他进程中。例如，在
    Mac 上，"open -f" 命令打开一个文本编辑器来显示从标准输入读取的内容。因此，要在文本编辑器中查看查询结果，可以输入：
- en: '[PRE23]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: If the ".output" or ".once" commands have an argument of "-e" then output is
    collected into a temporary file and the system text editor is invoked on that
    text file. Thus, the command ".once -e" achieves the same result as ".once '|open
    -f'" but with the benefit of being portable across all systems.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 ".output" 或 ".once" 命令带有 "-e" 参数，则输出会被收集到一个临时文件中，并调用系统文本编辑器打开该文本文件。因此，命令
    ".once -e" 实现的效果与 ".once '|open -f'" 相同，但在所有系统上都是可移植的。
- en: 'If the ".output" or ".once" commands have a "-x" argument, that causes them
    to accumulate output as Comma-Separated-Values (CSV) in a temporary file, then
    invoke the default system utility for viewing CSV files (usually a spreadsheet
    program) on the result. This is a quick way of sending the result of a query to
    a spreadsheet for easy viewing:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 ".output" 或 ".once" 命令带有 "-x" 参数，这会导致它们将输出累积为逗号分隔值（CSV）在一个临时文件中，然后调用默认的系统实用程序来查看
    CSV 文件（通常是电子表格程序）。这是将查询结果快速发送到电子表格以便轻松查看的一种方法：
- en: '[PRE24]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The ".excel" command is an alias for ".once -x". It does exactly the same thing.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '".excel" 命令是 ".once -x" 的别名，功能完全相同。'
- en: 8.2\. Reading SQL from a file
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.2\. 从文件中读取 SQL
- en: In interactive mode, sqlite3 reads input text (either SQL statements or [dot-commands](cli.html#dotcmd))
    from the keyboard. You can also redirect input from a file when you launch sqlite3,
    of course, but then you do not have the ability to interact with the program.
    Sometimes it is useful to run an SQL script contained in a file entering other
    commands from the command-line. For this, the ".read" dot-command is provided.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在交互模式下，sqlite3 从键盘读取输入文本（可以是 SQL 语句或 [dot-commands](cli.html#dotcmd)）。当然，您也可以在启动
    sqlite3 时从文件重定向输入，但这样就无法与程序交互。有时从命令行运行包含在文件中的 SQL 脚本并输入其他命令是有用的。为此，提供了 ".read"
    dot-command。
- en: The ".read" command takes a single argument which is (usually) the name of a
    file from which to read input text.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: “.read” 命令接受一个参数，该参数通常是要读取输入文本的文件名。
- en: '[PRE25]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The ".read" command temporarily stops reading from the keyboard and instead
    takes its input from the file named. Upon reaching the end of the file, input
    reverts back to the keyboard. The script file may contain dot-commands, just like
    ordinary interactive input.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: “.read” 命令临时停止从键盘读取，并从指定的文件名中读取输入。在达到文件末尾后，输入会恢复到键盘。脚本文件可以包含点命令，就像普通交互式输入一样。
- en: 'If the argument to ".read" begins with the "|" character, then instead of opening
    the argument as a file, it runs the argument (without the leading "|") as a command,
    then uses the output of that command as its input. Thus, if you have a script
    that generates SQL, you can execute that SQL directly using a command similar
    to the following:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果“.read”命令的参数以“|”字符开头，则不会打开参数作为文件，而是将参数（去掉前导“|”）作为命令运行，然后使用该命令的输出作为其输入。因此，如果您有一个生成
    SQL 的脚本，可以使用类似以下命令直接执行该 SQL：
- en: '[PRE26]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 8.3\. File I/O Functions
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.3\. 文件 I/O 函数
- en: The command-line shell adds two [application-defined SQL functions](appfunc.html)
    that facilitate reading content from a file into a table column, and writing the
    content of a column into a file, respectively.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行 shell 添加了两个 [应用定义的 SQL 函数](appfunc.html)，分别用于从文件中读取内容到表列中，以及将列的内容写入文件。
- en: 'The readfile(X) SQL function reads the entire content of the file named X and
    returns that content as a BLOB. This can be used to load content into a table.
    For example:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: readfile(X) SQL 函数读取名为 X 的文件的整个内容，并将该内容作为 BLOB 返回。这可以用于将内容加载到表中。例如：
- en: '[PRE27]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The writefile(X,Y) SQL function write the blob Y into the file named X and
    returns the number of bytes written. Use this function to extract the content
    of a single table column into a file. For example:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: writefile(X,Y) SQL 函数将 blob Y 写入名为 X 的文件，并返回写入的字节数。使用此函数将单个表列的内容提取到文件中。例如：
- en: '[PRE28]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Note that the readfile(X) and writefile(X,Y) functions are extension functions
    and are not built into the core SQLite library. These routines are available as
    a [loadable extension](loadext.html) in the [ext/misc/fileio.c](https://www.sqlite.org/src/artifact?ci=trunk&filename=ext/misc/fileio.c)
    source file in the [SQLite source code repositories](download.html#srctree).
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，readfile(X) 和 writefile(X,Y) 函数是扩展函数，并不是内置于核心 SQLite 库中的。这些例程作为 [可加载扩展](loadext.html)
    提供，源文件位于 [SQLite 源代码库](download.html#srctree) 中的 [ext/misc/fileio.c](https://www.sqlite.org/src/artifact?ci=trunk&filename=ext/misc/fileio.c)。
- en: 8.4\. The edit() SQL function
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.4\. 编辑函数 edit()
- en: The CLI has another built-in SQL function named edit(). Edit() takes one or
    two arguments. The first argument is a value - often a large multi-line string
    to be edited. The second argument is the invocation for a text editor. (It may
    include options to affect the editor's behavior.) If the second argument is omitted,
    the VISUAL environment variable is used. The edit() function writes its first
    argument into a temporary file, invokes the editor on the temporary file, rereads
    the file back into memory after the editor is done, then returns the edited text.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 还有一个内置的 SQL 函数名为 edit()。Edit() 接受一到两个参数。第一个参数是一个值 - 通常是要编辑的大多行字符串。第二个参数是调用文本编辑器的命令（可能包含影响编辑器行为的选项）。如果省略第二个参数，则使用
    VISUAL 环境变量。edit() 函数将其第一个参数写入临时文件，在编辑器完成后重新读取文件到内存，然后返回编辑后的文本。
- en: 'The edit() function can be used to make changes to large text values. For example:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: edit() 函数可用于对大文本值进行更改。例如：
- en: '[PRE29]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: In this example, the content of the docs.body field for the entry where docs.name
    is "report-15" will be sent to the editor. After the editor returns, the result
    will be written back into the docs.body field.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，“report-15” 的 docs.name 字段的 docs.body 内容将被发送到编辑器。编辑器返回后，结果将被写回 docs.body
    字段中。
- en: 'The default operation of edit() is to invoke a text editor. But by using an
    alternative edit program in the second argument, you can also get it to edit images
    or other non-text resources. For example, if you want to modify a JPEG image that
    happens to be stored in a field of a table, you could run:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: edit() 的默认操作是调用文本编辑器。但是，通过在第二个参数中使用替代的编辑程序，也可以编辑图像或其他非文本资源。例如，如果您想修改存储在表字段中的
    JPEG 图像，可以运行：
- en: '[PRE30]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The edit program can also be used as a viewer, by simply ignoring the return
    value. For example, to merely look at the image above, you might run:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑程序也可用作查看器，只需忽略返回值即可。例如，要仅查看上面的图像，您可以运行：
- en: '[PRE31]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 8.5\. Importing files as CSV or other formats
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.5\. 将文件导入为CSV或其他格式
- en: Use the ".import" command to import CSV (comma separated value) or similarly
    delimited data into an SQLite table. The ".import" command takes two arguments
    which are the source from which data is to be read and the name of the SQLite
    table into which the data is to be inserted. The source argument is the name of
    a file to be read or, if it begins with a "|" character, it specifies a command
    which will be run to produce the input data.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 使用".import"命令将CSV（逗号分隔值）或类似分隔的数据导入SQLite表格。".import"命令接受两个参数：数据来源和要插入数据的SQLite表格名称。数据来源可以是要读取的文件名称，或者如果以"|"字符开头，则指定一个将生成输入数据的命令。
- en: Note that it may be important to set the "mode" before running the ".import"
    command. This is prudent to prevent the command-line shell from trying to interpret
    the input file text as some format other than how the file is structured. If the
    --csv or --ascii options are used, they control import input delimiters. Otherwise,
    the delimiters are those in effect for the current output mode.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行".import"命令之前，设置"mode"可能非常重要。这样做是为了防止命令行解释器尝试将输入文件文本解释为除文件结构外的其他格式。如果使用了--csv或--ascii选项，则它们会控制导入输入分隔符。否则，分隔符将按照当前输出模式的设置来确定。
- en: To import into a table not in the "main" schema, the --schema option may be
    used to specify that the table is in some other schema. This can be useful for
    ATTACH'ed databases or to import into a TEMP table.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 要将数据导入到不在"main"模式下的表中，可以使用--schema选项指定表位于其他模式中。这对于ATTACH的数据库或导入到TEMP表格非常有用。
- en: When .import is run, its treatment of the first input row depends upon whether
    the target table already exists. If it does not exist, the table is automatically
    created and the content of the first input row is used to set the name of all
    the columns in the table. In this case, the table data content is taken from the
    second and subsequent input rows. If the target table already exists, every row
    of the input, including the first, is taken to be actual data content. If the
    input file contains an initial row of column labels, you can make the .import
    command skip that initial row using the "--skip 1" option.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行.import时，其对第一个输入行的处理取决于目标表是否已存在。如果不存在，则自动创建表，并使用第一个输入行的内容设置表中所有列的名称。在这种情况下，表格数据内容来自第二行及其后续的输入行。如果目标表已存在，则将输入文件的每一行（包括第一行）视为实际数据内容。如果输入文件包含初始的列标签行，您可以使用"--skip
    1"选项让.import命令跳过该初始行。
- en: 'Here is an example usage, loading a pre-existing temporary table from a CSV
    file which has column names in its first row:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例用法，从包含列名的CSV文件中加载预先存在的临时表格的内容：
- en: '[PRE32]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'While reading input data in modes other than ''ascii'', ".import" interprets
    input as records composed of fields according to the RFC 4180 specification with
    this exception: The input record and field separators are as set by the mode or
    by use of the .separator command. Fields are always subject to quote removal to
    reverse quoting done per RFC 4180, except in ascii mode.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在读取非'ascii'模式的输入数据时，".import"将根据RFC 4180规范将输入解释为由字段组成的记录，但有一个例外：输入记录和字段分隔符由模式设置或使用.separator命令设置。字段始终要经过引号删除，以撤消RFC
    4180中执行的引号处理，但在ascii模式下除外。
- en: To import data with arbitrary delimiters and no quoting, first set ascii mode
    (".mode ascii"), then set the field and record delimiters using the ".separator"
    command. This will suppress dequoting. Upon ".import", the data will be split
    into fields and records according to the delimiters so specified.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 要导入具有任意分隔符和无引号的数据，请先设置ascii模式（".mode ascii"），然后使用".separator"命令设置字段和记录分隔符。这将禁止去引号。在".import"时，数据将根据指定的分隔符拆分为字段和记录。
- en: 8.6\. Export to CSV
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.6\. 导出为CSV
- en: To export an SQLite table (or part of a table) as CSV, simply set the "mode"
    to "csv" and then run a query to extract the desired rows of the table. The output
    will formatted as CSV per RFC 4180.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 要将SQLite表格（或表格的一部分）导出为CSV，只需将"mode"设置为"csv"，然后运行查询以提取表格中所需的行。输出将按照RFC 4180的CSV格式进行格式化。
- en: '[PRE33]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In the example above, the ".headers on" line causes column labels to be printed
    as the first row of output. This means that the first row of the resulting CSV
    file will contain column labels. If column labels are not desired, set ".headers
    off" instead. (The ".headers off" setting is the default and can be omitted if
    the headers have not been previously turned on.)
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，".headers on" 行会导致列标签被打印为输出的第一行。这意味着生成的 CSV 文件的第一行将包含列标签。如果不需要列标签，请设置
    ".headers off"。 （".headers off" 设置是默认设置，如果未曾打开过标题，则可以省略。）
- en: The line ".once *FILENAME*" causes all query output to go into the named file
    instead of being printed on the console. In the example above, that line causes
    the CSV content to be written into a file named "C:/work/dataout.csv".
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '".once *FILENAME*" 行会导致所有查询输出写入指定文件，而不是在控制台上打印。在上述示例中，该行会将 CSV 内容写入名为 "C:/work/dataout.csv"
    的文件中。'
- en: The final line of the example (the ".system c:/work/dataout.csv") has the same
    effect as double-clicking on the c:/work/dataout.csv file in windows. This will
    typically bring up a spreadsheet program to display the CSV file.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 示例的最后一行（".system c:/work/dataout.csv"）具有与在 Windows 上双击 c:/work/dataout.csv 文件相同的效果。这通常会打开一个电子表格程序来显示
    CSV 文件。
- en: 'That command only works as written on Windows. The equivalent line on a Mac
    would be:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令仅在 Windows 上如原样写入才有效。在 Mac 上等效的命令行是：
- en: '[PRE34]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'On Linux and other unix systems you will need to enter something like:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 和其他 Unix 系统上，您需要输入类似以下内容：
- en: '[PRE35]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 8.6.1\. Export to Excel
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 8.6.1\. 导出到 Excel
- en: 'To simplify export to a spreadsheet, the CLI provides the ".excel" command
    which captures the output of a single query and sends that output to the default
    spreadsheet program on the host computer. Use it like this:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化导出到电子表格，CLI 提供了 ".excel" 命令，它捕获单个查询的输出，并将该输出发送到主机计算机上的默认电子表格程序。使用方式如下：
- en: '[PRE36]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The command above writes the output of the query as CSV into a temporary file,
    invokes the default handler for CSV files (usually the preferred spreadsheet program
    such as Excel or LibreOffice), then deletes the temporary file. This is essentially
    a short-hand method of doing the sequence of ".csv", ".once", and ".system" commands
    described above.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令会将查询的输出作为 CSV 写入一个临时文件，调用 CSV 文件的默认处理程序（通常是首选的电子表格程序，如 Excel 或 LibreOffice），然后删除临时文件。这本质上是执行上述
    ".csv"、".once" 和 ".system" 命令序列的简便方法。
- en: The ".excel" command is really an alias for ".once -x". The -x option to .once
    causes it to writes results as CSV into a temporary file that is named with a
    ".csv" suffix, then invoke the systems default handler for CSV files.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '".excel" 命令实际上是 ".once -x" 的别名。".once" 的 -x 选项会将结果作为 CSV 写入一个临时文件，并以 ".csv"
    后缀命名，然后调用系统的默认 CSV 文件处理程序。'
- en: There is also a ".once -e" command which works similarly, except that it names
    the temporary file with a ".txt" suffix so that the default text editor for the
    system will be invoked, instead of the default spreadsheet.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 也有一个 ".once -e" 命令，其工作方式类似，但是它会以 ".txt" 后缀命名临时文件，这样系统的默认文本编辑器将被调用，而不是默认的电子表格程序。
- en: 8.6.2\. Export to TSV (tab separated values)
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 8.6.2\. 导出到 TSV（制表符分隔值）
- en: Exporting to pure TSV, without any field quoting, can be done by entering ".mode
    tabs" before running a query. However, the output will not be read correctly in
    tabs mode by the ".import" command if it contains doublequote characters. To get
    TSV quoted per RFC 4180 so that it can be input in tabs mode with ".import", first
    enter ".mode csv", then enter '.separator "\t"' before running a query.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行查询之前输入 ".mode tabs" 可以导出纯 TSV，不带任何字段引用。但是，如果输出包含双引号字符，在 tabs 模式下由 ".import"
    命令读取时，输出将无法正确读取。为了按照 RFC 4180 对 TSV 进行引用，使其可以在 tabs 模式下由 ".import" 输入，首先输入 ".mode csv"，然后在运行查询之前输入
    '.separator "\t"'。
- en: 9\. Accessing ZIP Archives As Database Files
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9\. 访问 ZIP 归档作为数据库文件
- en: In addition to reading and writing SQLite database files, the **sqlite3** program
    will also read and write ZIP archives. Simply specify a ZIP archive filename in
    place of an SQLite database filename on the initial command line, or in the ".open"
    command, and **sqlite3** will automatically detect that the file is a ZIP archive
    instead of an SQLite database and will open it as such. This works regardless
    of file suffix. So you can open JAR, DOCX, and ODP files and any other file format
    that is really a ZIP archive and SQLite will read it for you.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 除了读写 SQLite 数据库文件外，**sqlite3** 程序还可以读写 ZIP 归档文件。只需在初始命令行中指定 ZIP 归档文件名，或在 ".open"
    命令中指定 ZIP 归档文件名，**sqlite3** 将自动检测文件是否为 ZIP 归档文件而不是 SQLite 数据库文件，并相应地打开它。这适用于任何文件后缀。因此，您可以打开
    JAR、DOCX 和 ODP 文件，以及任何其他实际上是 ZIP 归档文件的文件格式，SQLite 都可以为您读取。
- en: 'A ZIP archive appears to be a database containing a single table with the following
    schema:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: ZIP 归档看起来像一个包含以下架构的数据库：
- en: '[PRE37]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'So, for example, if you wanted to see the compression efficiency (expressed
    as the size of the compressed content relative to the original uncompressed file
    size) for all files in the ZIP archive, sorted from most compressed to least compressed,
    you could run a query like this:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，例如，如果您想要查看 ZIP 归档文件中所有文件的压缩效率（表示为压缩内容大小与原始未压缩文件大小的比率），从最高压缩到最低压缩，您可以运行如下查询：
- en: '[PRE38]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Or using [file I/O functions](cli.html#fileio), you can extract elements of
    the ZIP archive:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 或者使用 [文件 I/O 函数](cli.html#fileio)，您可以提取 ZIP 归档文件的元素：
- en: '[PRE39]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 9.1\. How ZIP archive access is implemented
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 9.1\. ZIP 归档访问的实现方式
- en: 'The command-line shell uses the [Zipfile virtual table](zipfile.html) to access
    ZIP archives. You can see this by running the ".schema" command when a ZIP archive
    is open:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行 shell 使用 [Zipfile 虚拟表](zipfile.html) 来访问 ZIP 归档文件。当 ZIP 归档文件打开时，您可以通过运行
    ".schema" 命令来查看：
- en: '[PRE40]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: When opening a file, if the command-line client discovers that the file is ZIP
    archive instead of an SQLite database, it actually opens an [in-memory database](inmemorydb.html)
    and then in that in-memory database it creates an instance of the [Zipfile virtual
    table](zipfile.html) that is attached to the ZIP archive.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 当打开文件时，如果命令行客户端发现文件是 ZIP 归档文件而不是 SQLite 数据库，则会实际打开一个 [内存数据库](inmemorydb.html)，然后在该内存数据库中创建与
    ZIP 归档相关联的 [Zipfile 虚拟表](zipfile.html) 实例。
- en: The special processing for opening ZIP archives is a trick of the command-line
    shell, not the core SQLite library. So if you want to open a ZIP archive as a
    database in your application, you will need to activate the [Zipfile virtual table](zipfile.html)
    module then run an appropriate [CREATE VIRTUAL TABLE](lang_createvtab.html) statement.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 ZIP 归档文件的特殊处理是命令行 shell 的一个技巧，而不是核心 SQLite 库的一部分。因此，如果您想在应用程序中将 ZIP 归档文件作为数据库打开，您需要激活
    [Zipfile 虚拟表](zipfile.html) 模块，然后运行适当的 [CREATE VIRTUAL TABLE](lang_createvtab.html)
    声明。
- en: 10\. Converting An Entire Database To A Text File
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10\. 将整个数据库转换为文本文件
- en: Use the ".dump" command to convert the entire contents of a database into a
    single UTF-8 text file. This file can be converted back into a database by piping
    it back into **sqlite3**.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ".dump" 命令将整个数据库内容转换为单个 UTF-8 文本文件。通过将其通过管道输入回 **sqlite3**，可以将此文件转换回数据库。
- en: 'A good way to make an archival copy of a database is this:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 制作数据库的归档副本的好方法是：
- en: '[PRE41]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This generates a file named **ex1.dump.gz** that contains everything you need
    to reconstruct the database at a later time, or on another machine. To reconstruct
    the database, just type:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成名为 **ex1.dump.gz** 的文件，其中包含您重建数据库所需的所有内容，可以在以后的时间或其他机器上重建数据库。要重建数据库，只需键入：
- en: '[PRE42]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The text format is pure SQL so you can also use the .dump command to export
    an SQLite database into other popular SQL database engines. Like this:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 文本格式是纯 SQL，因此您也可以使用 .dump 命令将 SQLite 数据库导出到其他流行的 SQL 数据库引擎。例如：
- en: '[PRE43]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 11\. Recover Data From a Corrupted Database
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11\. 从损坏的数据库中恢复数据
- en: Like the ".dump" command, ".recover" attempts to convert the entire contents
    of a database file to text. The difference is that instead of reading data using
    the normal SQL database interface, ".recover" attempts to reassemble the database
    based on data extracted directly from as many database pages as possible. If the
    database is corrupt, ".recover" is usually able to recover data from all uncorrupted
    parts of the database, whereas ".dump" stops when the first sign of corruption
    is encountered.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 与 ".dump" 命令类似，".recover" 尝试将数据库文件的整个内容转换为文本。不同之处在于，".recover" 尝试根据直接从尽可能多的数据库页面中提取的数据重新组装数据库，而不是使用正常的
    SQL 数据库接口读取数据。如果数据库损坏，".recover" 通常能够从数据库的所有未损坏部分中恢复数据，而 ".dump" 在遇到第一个损坏迹象时停止。
- en: 'If the ".recover" command recovers one or more rows that it cannot attribute
    to any database table, the output script creates a "lost_and_found" table to store
    the orphaned rows. The schema of the lost_and_found table is as follows:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 ".recover" 命令恢复了一个或多个无法归因于任何数据库表的行，则输出脚本将创建一个 "lost_and_found" 表来存储孤立的行。lost_and_found
    表的模式如下所示：
- en: '[PRE44]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The "lost_and_found" table contains one row for each orphaned row recovered
    from the database. Additionally, there is one row for each recovered index entry
    that cannot be attributed to any SQL index. This is because, in an SQLite database,
    the same format is used to store SQL index entries and WITHOUT ROWID table entries.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '"lost_and_found" 表包含从数据库中恢复的每个孤立行的一行。此外，还有一行用于无法归因于任何 SQL 索引的每个恢复的索引条目。这是因为在
    SQLite 数据库中，用于存储 SQL 索引条目和 WITHOUT ROWID 表条目的格式相同。'
- en: '| Column | Contents |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| 列 | 内容 |'
- en: '| rootpgno | Even though it may not be possible to attribute the row to a specific
    database table, it may be part of a tree structure within the database file. In
    this case, the root page number of that tree structure is stored in this column.
    Or, if the page the row was found on is not part of a tree structure, this column
    stores a copy of the value in column "pgno" - the page number of the page the
    row was found on. In many, although not all, cases, all rows in the lost_and_found
    table with the same value in this column belong to the same table. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| rootpgno | 即使可能无法将行归因于特定的数据库表，它可能是数据库文件中树结构的一部分。在这种情况下，该树结构的根页号存储在此列中。或者，如果找到行的页面不是树结构的一部分，则此列存储“pgno”列中值的副本
    - 找到行的页面的页号。在许多情况下，虽然不是所有情况，lost_and_found 表中具有相同值的所有行都属于同一表。 |'
- en: '| pgno | The page number of the page on which this row was found. |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| pgno | 找到该行的页面的页号。 |'
- en: '| nfield | The number of fields in this row. |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| nfield | 此行中字段的数量。 |'
- en: '| id | If the row comes from a WITHOUT ROWID table, this column contains NULL.
    Otherwise, it contains the 64-bit integer rowid value for the row. |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| id | 如果行来自 WITHOUT ROWID 表，则此列包含 NULL。否则，它包含行的 64 位整数 rowid 值。 |'
- en: '| c0, c1, c2... | The values for each column of the row are stored in these
    columns. The ".recover" command creates the lost_and_found table with as many
    columns as required by the longest orphaned row. |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| c0, c1, c2... | 行的每个列的值存储在这些列中。".recover" 命令根据最长的孤立行所需的列数创建 lost_and_found
    表。 |'
- en: 'If the recovered database schema already contains a table named "lost_and_found",
    the ".recover" command uses the name "lost_and_found0". If the name "lost_and_found0"
    is also already taken, "lost_and_found1", and so on. The default name "lost_and_found"
    may be overridden by invoking ".recover" with the --lost-and-found switch. For
    example, to have the output script call the table "orphaned_rows":'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果恢复的数据库模式已经包含名为 "lost_and_found" 的表，则 ".recover" 命令使用名称 "lost_and_found0"。如果名称
    "lost_and_found0" 也已经被使用，则使用 "lost_and_found1"，依此类推。可以通过以带 --lost-and-found 开关调用
    ".recover" 来覆盖默认名称 "lost_and_found"。例如，要让输出脚本称表为 "orphaned_rows"：
- en: '[PRE45]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 12\. Loading Extensions
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12\. 加载扩展
- en: 'You can add new custom [application-defined SQL functions](appfunc.html), [collating
    sequences](datatype3.html#collation), [virtual tables](vtab.html), and [VFSes](vfs.html)
    to the command-line shell at run-time using the ".load" command. First, build
    the extension as a DLL or shared library (as described in the [Run-Time Loadable
    Extensions](loadext.html) document) then type:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过 ".load" 命令在运行时向命令行 shell 中添加新的自定义 [应用定义的 SQL 函数](appfunc.html)，[排序序列](datatype3.html#collation)，[虚拟表](vtab.html)，以及
    [VFS](vfs.html)。首先，将扩展构建为 DLL 或共享库（如 [运行时可加载扩展](loadext.html) 文档中描述的那样），然后输入以下内容：
- en: '[PRE46]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Note that SQLite automatically adds the appropriate extension suffix (".dll"
    on windows, ".dylib" on Mac, ".so" on most other unixes) to the extension filename.
    It is generally a good idea to specify the full pathname of the extension.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，SQLite 自动添加适当的扩展后缀（".dll" 在 Windows 上，".dylib" 在 Mac 上，大多数其他 Unix 系统上为 ".so"）到扩展文件名中。通常最好指定扩展的完整路径名。
- en: SQLite computes the entry point for the extension based on the extension filename.
    To override this choice, simply add the name of the extension as a second argument
    to the ".load" command.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite 根据扩展文件名计算扩展的入口点。要覆盖此选择，只需将扩展名作为 ".load" 命令的第二个参数添加即可。
- en: Source code for several useful extensions can be found in the [ext/misc](https://www.sqlite.org/src/tree?name=ext/misc&ci=trunk)
    subdirectory of the SQLite source tree. You can use these extensions as-is, or
    as a basis for creating your own custom extensions to address your own particular
    needs.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 多个有用扩展的源代码可以在SQLite源代码树的[ext/misc](https://www.sqlite.org/src/tree?name=ext/misc&ci=trunk)子目录中找到。你可以直接使用这些扩展，或者以它们为基础创建你自己的定制扩展，以满足特定需求。
- en: 13\. Cryptographic Hashes Of Database Content
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 13\. 数据库内容的加密哈希
- en: The ".sha3sum" dot-command computes a [SHA3](https://en.wikipedia.org/wiki/SHA-3)
    hash of the *content* of the database. To be clear, the hash is computed over
    the database content, not its representation on disk. This means, for example,
    that a [VACUUM](lang_vacuum.html) or similar data-preserving transformation does
    not change the hash.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '".sha3sum" dot-command 计算数据库内容的[SHA3](https://en.wikipedia.org/wiki/SHA-3)哈希。明确地说，哈希是在数据库内容上计算的，而不是在磁盘上它的表示上。这意味着，例如，[VACUUM](lang_vacuum.html)
    或类似的数据保留转换不会更改哈希。'
- en: The ".sha3sum" command supports options "--sha3-224", "--sha3-256", "--sha3-384",
    and "--sha3-512" to define which variety of SHA3 to use for the hash. The default
    is SHA3-256.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '".sha3sum" 命令支持选项 "--sha3-224"、"--sha3-256"、"--sha3-384" 和 "--sha3-512"，用于定义要使用的
    SHA3 的种类。默认为 SHA3-256。'
- en: The database schema (in the [sqlite_schema](schematab.html) table) is not normally
    included in the hash, but can be added by the "--schema" option.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库模式（在[sqlite_schema](schematab.html)表中）通常不包含在哈希中，但可以通过 "--schema" 选项添加。
- en: The ".sha3sum" command takes a single optional argument which is a [LIKE](lang_expr.html#like)
    pattern. If this option is present, only tables whose names match the [LIKE](lang_expr.html#like)
    pattern will be hashed.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '".sha3sum" 命令接受一个可选参数，这个参数是一个[LIKE](lang_expr.html#like)模式。如果存在这个选项，只有表名与[LIKE](lang_expr.html#like)模式匹配的表会被哈希。'
- en: The ".sha3sum" command is implemented with the help of the [extension function
    "sha3_query()"](https://www.sqlite.org/src/file/ext/misc/shathree.c) that is included
    with the command-line shell.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '".sha3sum" 命令是通过命令行 shell 包含的[扩展函数 "sha3_query()"](https://www.sqlite.org/src/file/ext/misc/shathree.c)来实现的。'
- en: 14\. Database Content Self-Tests
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 14\. 数据库内容自测
- en: 'The ".selftest" command attempts to verify that a database is intact and is
    not corrupt. The .selftest command looks for a table in schema named "selftest"
    and defined as follows:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '".selftest" 命令尝试验证数据库是否完整且未损坏。该命令查找名为 "selftest" 的模式中的表，并定义如下：'
- en: '[PRE47]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The .selftest command reads the rows of the selftest table in selftest.tno order.
    For each 'memo' row, it writes the text in 'cmd' to the output. For each 'run'
    row, it runs the 'cmd' text as SQL and compares the result to the value in 'ans',
    and shows an error message if the results differ.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '".selftest" 命令按照 selftest.tno 排序读取 selftest 表的行。对于每个 ''memo'' 行，它将 ''cmd''
    中的文本写入输出。对于每个 ''run'' 行，它运行 ''cmd'' 文本作为 SQL，并将结果与 ''ans'' 中的值进行比较，如果结果不同则显示错误消息。'
- en: If there is no selftest table, the ".selftest" command runs [PRAGMA integrity_check](pragma.html#pragma_integrity_check).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有 selftest 表，则 ".selftest" 命令运行[PRAGMA integrity_check](pragma.html#pragma_integrity_check)。
- en: The ".selftest --init" command creates the selftest table if it does not already
    exists, then appends entries that check the SHA3 hash of the content of all tables.
    Subsequent runs of ".selftest" will verify that the database has not been changed
    in any way. To generate tests to verify that a subset of the tables is unchanged,
    simply run ".selftest --init" then [DELETE](lang_delete.html) the selftest rows
    that refer to tables that are not constant.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '".selftest --init" 命令如果不存在则创建 selftest 表，然后追加条目以检查所有表内容的 SHA3 哈希。随后的 ".selftest"
    运行将验证数据库未被任何方式更改。要生成用于验证子集表未更改的测试，只需运行 ".selftest --init" 然后[DELETE](lang_delete.html)
    selftest 行，这些行引用未被改变的表。'
- en: 15\. SQLite Archive Support
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15\. SQLite 归档支持
- en: 'The ".archive" dot-command and the "-A" command-line option provide built-in
    support for the [SQLite Archive format](sqlar.html). The interface is similar
    to that of the "tar" command on unix systems. Each invocation of the ".ar" command
    must specify a single command option. The following commands are available for
    ".archive":'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '".archive" 点命令和 "-A" 命令行选项为 [SQLite Archive format](sqlar.html) 提供了内置支持。其接口类似于
    Unix 系统上的 "tar" 命令。每次 ".ar" 命令的调用必须指定一个单一的命令选项。以下命令适用于 ".archive"：'
- en: '| Option | Long Option | Purpose |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| Option | Long Option | Purpose |'
- en: '| -c | --create | Create a new archive containing specified files. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| -c | --create | 创建包含指定文件的新存档。 |'
- en: '| -x | --extract | Extract specified files from archive. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| -x | --extract | 从存档中提取指定的文件。 |'
- en: '| -i | --insert | Add files to existing archive. |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| -i | --insert | 添加文件到现有存档。 |'
- en: '| -r | --remove | Remove files from the archive. |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| -r | --remove | 从存档中删除文件。 |'
- en: '| -t | --list | List the files in the archive. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| -t | --list | 列出存档中的文件。 |'
- en: '| -u | --update | Add files to existing archive *if* they have changed. |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| -u | --update | 如果文件发生更改，则添加到现有存档中。 |'
- en: 'As well as the command option, each invocation of ".ar" may specify one or
    more modifier options. Some modifier options require an argument, some do not.
    The following modifier options are available:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 以及命令选项，每次调用 ".ar" 可能指定一个或多个修饰选项。某些修饰选项需要一个参数，某些则不需要。以下修饰选项可用：
- en: '| Option | Long Option | Purpose |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| Option | Long Option | Purpose |'
- en: '| -v | --verbose | List each file as it is processed. |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| -v | --verbose | 处理每个文件时列出其名称。 |'
- en: '| -f FILE | --file FILE | If specified, use file FILE as the archive. Otherwise,
    assume that the current "main" database is the archive to be operated on. |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| -f FILE | --file FILE | 如果指定了，使用文件 FILE 作为存档。否则，假定当前的 "main" 数据库是要操作的存档。
    |'
- en: '| -a FILE | --append FILE | Like --file, use file FILE as the archive, but
    open the file using the [apndvfs VFS](https://sqlite.org/src/file/ext/misc/appendvfs.c)
    so that the archive will be appended to the end of FILE if FILE already exists.
    |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| -a FILE | --append FILE | 类似于 --file，使用文件 FILE 作为存档，但使用 [apndvfs VFS](https://sqlite.org/src/file/ext/misc/appendvfs.c)
    打开文件，以便如果 FILE 已存在，则将存档追加到 FILE 的末尾。 |'
- en: '| -C DIR | --directory DIR | If specified, interpret all relative paths as
    relative to DIR, instead of the current working directory. |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| -C DIR | --directory DIR | 如果指定了，将所有相对路径解释为相对于 DIR 而不是当前工作目录。 |'
- en: '| -g | --glob | Use [glob(*Y*,*X*)](lang_corefunc.html#glob) to match arguments
    against names in the archive. |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| -g | --glob | 使用 [glob(*Y*,*X*)](lang_corefunc.html#glob) 匹配存档中的名称与参数。 |'
- en: '| -n | --dryrun | Show the SQL that would be run to carry out the archive operation,
    but do not actually change anything. |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| -n | --dryrun | 显示将运行的 SQL 来执行存档操作，但实际上不改变任何内容。 |'
- en: '| -- | -- | All subsequent command line words are command arguments, not options.
    |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| -- | -- | 所有后续的命令行单词都是命令参数，而不是选项。 |'
- en: 'For command-line usage, add the short style command-line options immediately
    following the "-A", without an intervening space. All subsequent arguments are
    considered to be part of the .archive command. For example, the following commands
    are equivalent:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 对于命令行使用，立即在 "-A" 后添加短样式命令行选项，没有空格。所有后续参数都被视为 .archive 命令的一部分。例如，以下命令是等效的：
- en: '[PRE48]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Long and short style options may be mixed. For example, the following are equivalent:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 长式和短式选项可以混合使用。例如，以下是等效的：
- en: '[PRE49]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Alternatively, the first argument following to ".ar" may be the concatenation
    of the short form of all required options (without the "-" characters). In this
    case arguments for options requiring them are read from the command line next,
    and any remaining words are considered command arguments. For example:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，".ar" 后的第一个参数可以是所有必需选项的短形式的连接（不带 "-" 字符）。在这种情况下，需要它们的选项的参数从命令行中读取，任何剩余的单词都被视为命令参数。例如：
- en: '[PRE50]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 15.1\. SQLite Archive Create Command
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15.1\. SQLite Archive Create Command
- en: Create a new archive, overwriting any existing archive (either in the current
    "main" db or in the file specified by a --file option). Each argument following
    the options is a file to add to the archive. Directories are imported recursively.
    See above for examples.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的存档，覆盖任何现有的存档（无论是在当前的 "main" 数据库中还是在由 --file 选项指定的文件中）。每个选项后面的参数都是要添加到存档中的文件。目录会递归导入。请参阅上面的示例。
- en: 15.2\. SQLite Archive Extract Command
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15.2\. SQLite Archive Extract Command
- en: Extract files from the archive (either to the current working directory or to
    the directory specified by a --directory option). Files or directories whose names
    match the arguments, as affected by the --glob option, are extracted. Or, if no
    arguments follow the options, all files and directories are extracted. Any specified
    directories are extracted recursively. It is an error if any specified names or
    match patterns cannot be found in the archive.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 从归档中提取文件（提取到当前工作目录或由 --directory 选项指定的目录）。与 --glob 选项影响的参数匹配的文件或目录将被提取。或者，如果选项后没有指定参数，则将提取所有文件和目录。如果在归档中找不到任何指定的名称或匹配模式，则会报错。
- en: '[PRE51]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 15.3\. SQLite Archive List Command
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15.3\. SQLite 归档列表命令
- en: List the contents of the archive. If no arguments are specified, then all files
    are listed. Otherwise, only those which match the arguments, as affected by the
    --glob option, are listed. Currently, the --verbose option does not change the
    behaviour of this command. That may change in the future.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 列出归档的内容。如果未指定任何参数，则会列出所有文件。否则，只列出与 --glob 选项影响的参数匹配的文件。当前，--verbose 选项不会改变此命令的行为。未来可能会改变。
- en: '[PRE52]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 15.4\. SQLite Archive Insert And Update Commands
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15.4\. SQLite 归档插入和更新命令
- en: The --update and --insert commands work like --create command, except that they
    do not delete the current archive before commencing. New versions of files silently
    replace existing files with the same names, but otherwise the initial contents
    of the archive (if any) remain intact.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: --update 和 --insert 命令的工作方式类似于 --create 命令，但它们在开始之前不会删除当前归档。文件的新版本将以静默方式替换同名的现有文件，但否则归档的初始内容（如果有）将保持不变。
- en: For the --insert command, all files listed are inserted into the archive. For
    the --update command, files are only inserted if they do not previously exist
    in the archive, or if their "mtime" or "mode" is different from what is currently
    in the archive.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 --insert 命令，将列出的所有文件插入到归档中。对于 --update 命令，仅当文件在归档中不存在，或者它们的 "mtime" 或 "mode"
    与当前归档中的不同时才会插入。
- en: 'Compatibility node: Prior to SQLite version 3.28.0 (2019-04-16) only the --update
    option was supported but that option worked like --insert in that it always reinserted
    every file regardless of whether or not it had changed.'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 兼容性注意事项：在 SQLite 版本 3.28.0（2019-04-16）之前，仅支持 --update 选项，但该选项的工作方式类似于 --insert，即始终重新插入每个文件，无论它们是否已更改。
- en: 15.5\. SQLite Archive Remove Command
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15.5\. SQLite 归档删除命令
- en: The --remove command deletes files and directories which match the provided
    arguments (if any) as affected by the --glob option. It is an error to provide
    arguments which match nothing in the archive.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: --remove 命令将删除与提供的参数（如果有）匹配的文件和目录，这受到 --glob 选项的影响。如果提供的参数与归档中的任何内容都不匹配，则会报错。
- en: 15.6\. Operations On ZIP Archives
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15.6\. ZIP 归档操作
- en: 'If FILE is a ZIP archive rather than an SQLite Archive, the ".archive" command
    and the "-A" command-line option still work. This is accomplished using of the
    [zipfile](zipfile.html) extension. Hence, the following commands are roughly equivalent,
    differing only in output formatting:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 FILE 是一个 ZIP 归档文件而不是 SQLite 归档文件，则 ".archive" 命令和 "-A" 命令行选项仍然有效。这是通过 [zipfile](zipfile.html)
    扩展实现的。因此，以下命令在输出格式方面略有不同，但在功能上大致相当：
- en: '| Traditional Command | Equivalent sqlite3.exe Command |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| 传统命令 | 等效的 sqlite3.exe 命令 |'
- en: '| unzip archive.zip | sqlite3 -Axf archive.zip |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| unzip archive.zip | sqlite3 -Axf archive.zip |'
- en: '| unzip -l archive.zip | sqlite3 -Atvf archive.zip |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| unzip -l archive.zip | sqlite3 -Atvf archive.zip |'
- en: '| zip -r archive2.zip dir | sqlite3 -Acf archive2.zip dir |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| zip -r archive2.zip dir | sqlite3 -Acf archive2.zip dir |'
- en: 15.7\. SQL Used To Implement SQLite Archive Operations
  id: totrans-275
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 15.7\. 实现 SQLite 归档操作的 SQL
- en: The various SQLite Archive Archive commands are implemented using SQL statements.
    Application developers can easily add SQLite Archive Archive reading and writing
    support to their own projects by running the appropriate SQL.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 各种 SQLite 归档命令是使用 SQL 语句实现的。应用程序开发人员可以通过运行适当的 SQL 轻松为自己的项目添加 SQLite 归档的读写支持。
- en: To see what SQL statements are used to implement an SQLite Archive operation,
    add the --dryrun or -n option. This causes the SQL to be displayed but inhibits
    the execution of the SQL.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看用于实现 SQLite 归档操作的 SQL 语句，添加 --dryrun 或 -n 选项。这会显示 SQL 语句，但不会执行它们。
- en: 'The SQL statements used to implement SQLite Archive operations make use of
    various [loadable extensions](loadext.html). These extensions are all available
    in the [SQLite source tree](https://sqlite.org/src) in the [ext/misc/ subfolder](https://sqlite.org/src/file/ext/misc).
    The extensions needed for full SQLite Archive support include:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 用于实现SQLite存档操作的SQL语句利用了各种[可加载扩展](loadext.html)。所有这些扩展都可以在[SQLite源代码树](https://sqlite.org/src)中的[ext/misc/子文件夹](https://sqlite.org/src/file/ext/misc)找到。完全支持SQLite存档所需的扩展包括：
- en: '[fileio.c](https://sqlite.org/src/file/ext/misc/fileio.c) — This extension
    adds SQL functions readfile() and writefile() for reading and writing content
    from files on disk. The fileio.c extension also includes fsdir() table-valued
    function for listing the contents of a directory and the lsmode() function for
    converting numeric st_mode integers from the stat() system call into human-readable
    strings after the fashion of the "ls -l" command.'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[fileio.c](https://sqlite.org/src/file/ext/misc/fileio.c) — 这个扩展添加了SQL函数readfile()和writefile()，用于从磁盘上的文件读取和写入内容。fileio.c扩展还包括了fsdir()表值函数，用于列出目录内容，以及lsmode()函数，用于将从stat()系统调用中获取的数值st_mode整数转换为类似于"ls
    -l"命令的可读字符串。'
- en: '[sqlar.c](https://sqlite.org/src/file/ext/misc/sqlar.c) — This extension adds
    the sqlar_compress() and sqlar_uncompress() functions that are needed to compress
    and uncompress file content as it is inserted and extracted from an SQLite Archive.'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[sqlar.c](https://sqlite.org/src/file/ext/misc/sqlar.c) — 这个扩展添加了sqlar_compress()和sqlar_uncompress()函数，用于在插入和提取SQLite存档中的文件内容时进行压缩和解压缩操作。'
- en: '[zipfile.c](zipfile.html) — This extension implements the "zipfile(FILE)" table-valued
    function which is used to read ZIP archives. This extension is only needed when
    reading ZIP archives instead of SQLite archives.'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[zipfile.c](zipfile.html) — 这个扩展实现了"zipfile(FILE)"表值函数，用于读取ZIP存档。仅在读取ZIP存档而不是SQLite存档时才需要此扩展。'
- en: '[appendvfs.c](https://sqlite.org/src/file/ext/misc/appendvfs.c) — This extension
    implements a new [VFS](vfs.html) that allows an SQLite database to be appended
    to some other file, such as an executable. This extension is only needed if the
    --append option to the .archive command is used.'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[appendvfs.c](https://sqlite.org/src/file/ext/misc/appendvfs.c) — 这个扩展实现了一个新的[VFS](vfs.html)，允许将SQLite数据库附加到其他文件，例如可执行文件。仅在使用.archive命令的--append选项时才需要此扩展。'
- en: 16\. SQL Parameters
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 16\. SQL参数
- en: SQLite allows [bound parameters](lang_expr.html#varparam) to appear in an SQL
    statement anywhere that a literal value is allowed. The values for these parameters
    are set using the [sqlite3_bind_...()](c3ref/bind_blob.html) family of APIs.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite允许在SQL语句中的任何允许字面值的地方使用[绑定参数](lang_expr.html#varparam)。这些参数的值可以使用[sqlite3_bind_...()](c3ref/bind_blob.html)系列API进行设置。
- en: 'Parameters can be either named or unnamed. An unnamed parameter is a single
    question mark ("?"). Named parameters are a "?" followed immediately by a number
    (ex: "?15" or "?123") or one of the characters "$", ":", or "@" followed by an
    alphanumeric name (ex: "$var1", ":xyz", "@bingo").'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 参数可以是命名或未命名的。未命名参数是一个问号("?")。命名参数是一个问号后面紧跟一个数字（例如"?15"或"?123"）或一个"$"、":"或"@"字符后面跟着一个字母数字名称（例如"$var1"、":xyz"、"@bingo"）。
- en: 'This command-line shell leaves unnamed parameters unbound, meaning that they
    will have a value of an SQL NULL, but named parameters might be assigned values.
    If there exists a TEMP table named "sqlite_parameters" with a schema like this:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令行 shell 将未命名的参数保持未绑定状态，意味着它们将具有SQL NULL的值，但命名参数可能会被赋值。如果存在一个命名为"sqlite_parameters"的TEMP表，其模式如下：
- en: '[PRE53]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: And if there is an entry in that table where the key column exactly matches
    the name of parameter (including the initial "?", "$", ":", or "@" character)
    then the parameter is assigned the value of the value column. If no entry exists,
    the parameter defaults to NULL.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在该表中有一条记录的键列与参数名称完全匹配（包括初始的"?"、"$"、":"或"@"字符），则参数被赋予值列的值。如果不存在条目，则参数默认为NULL。
- en: The ".parameter" command exists to simplify managing this table. The ".parameter
    init" command (often abbreviated as just ".param init") creates the temp.sqlite_parameters
    table if it does not already exist. The ".param list" command shows all entries
    in the temp.sqlite_parameters table. The ".param clear" command drops the temp.sqlite_parameters
    table. The ".param set KEY VALUE" and ".param unset KEY" commands create or delete
    entries from the temp.sqlite_parameters table.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '".parameter" 命令存在是为了简化管理此表。".parameter init" 命令（通常简写为".param init"）如果该表尚不存在，则创建temp.sqlite_parameters表。".param
    list" 命令显示temp.sqlite_parameters表中的所有条目。".param clear" 命令删除temp.sqlite_parameters表。".param
    set KEY VALUE" 和 ".param unset KEY" 命令分别在temp.sqlite_parameters表中创建或删除条目。'
- en: 'The VALUE passed to ".param set KEY VALUE" can be either a SQL literal or any
    other SQL expression or query which can be evaluated to yield a value. This allows
    values of differing types to be set. If such evaluation fails, the provided VALUE
    is instead quoted and inserted as text. Because such initial evaluation may or
    may not fail depending upon the VALUE content, the reliable way to get a text
    value is to enclose it with single-quotes protected from the above-described command-tail
    parsing. For example, (unless one intends a value of -1365):'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给".param set KEY VALUE"的VALUE可以是SQL字面量，也可以是任何其他可以评估以产生值的SQL表达式或查询。这允许设置不同类型的值。如果此类评估失败，则提供的VALUE将被引用并插入为文本。由于此类初始评估可能会根据VALUE内容成功或失败，获取文本值的可靠方法是用单引号括起来，以免受到上述命令尾部解析的保护。例如，（除非打算设置值为-1365）：
- en: '[PRE54]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Note that the double-quotes serve to protect the single-quotes and ensure that
    the quoted text is parsed as one argument.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，双引号用于保护单引号，并确保引用文本被解析为一个参数。
- en: The temp.sqlite_parameters table only provides values for parameters in the
    command-line shell. The temp.sqlite_parameter table has no effect on queries that
    are run directly using the SQLite C-language API. Individual applications are
    expected to implement their own parameter binding. You can search for "sqlite_parameters"
    in the [command-line shell source code](https://sqlite.org/src/file/src/shell.c.in)
    to see how the command-line shell does parameter binding, and use that as a hint
    for how to implement it yourself.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: temp.sqlite_parameters表仅为命令行Shell提供参数值。temp.sqlite_parameter表对使用SQLite C语言API直接运行的查询没有影响。预计各个应用程序将实施其自己的参数绑定。您可以在[命令行Shell源代码](https://sqlite.org/src/file/src/shell.c.in)中搜索"sqlite_parameters"，了解命令行Shell如何进行参数绑定，并将其用作实现的提示。
- en: 17\. Index Recommendations (SQLite Expert)
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 17\. 索引建议（SQLite专家）
- en: '**Note: This command is experimental. It may be removed or the interface modified
    in incompatible ways at some point in the future.**'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：此命令属于实验性质。在未来某个时候，可能会删除该命令或修改其接口，不向后兼容。**'
- en: For most non-trivial SQL databases, the key to performance is creating the right
    SQL indexes. In this context "the right SQL indexes" means those that cause the
    queries that an application needs to optimize run fast. The ".expert" command
    can assist with this by proposing indexes that might assist with specific queries,
    were they present in the database.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数非平凡的SQL数据库，性能的关键在于创建正确的SQL索引。在这个上下文中，“正确的SQL索引”意味着那些能够使应用程序需要优化的查询快速运行的索引。".expert"
    命令可以通过建议可能有助于特定查询的索引来提供帮助，如果这些索引存在于数据库中的话。
- en: 'The ".expert" command is issued first, followed by the SQL query on a separate
    line. For example, consider the following session:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 首先发出".expert"命令，然后在单独的行上跟随SQL查询。例如，请考虑以下会话：
- en: '[PRE55]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: In the above, the user creates the database schema (a single table - "x1"),
    and then uses the ".expert" command to analyze a query, in this case "SELECT *
    FROM x1 WHERE a=? AND b>?". The shell tool recommends that the user create a new
    index (index "x1_idx_000123a7") and outputs the plan that the query would use
    in [EXPLAIN QUERY PLAN](eqp.html) format. The user then creates an index with
    an equivalent schema and runs the analysis on the same query again. This time
    the shell tool does not recommend any new indexes, and outputs the plan that SQLite
    will use for the query given the existing indexes.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述例子中，用户创建了数据库模式（一个名为"x1"的单表），然后使用".expert"命令来分析查询，例如"SELECT * FROM x1 WHERE
    a=? AND b>?"。Shell工具建议用户创建一个新索引（索引"x1_idx_000123a7"）并以[EXPLAIN QUERY PLAN](eqp.html)格式输出该查询将使用的计划。然后用户创建具有等效模式的索引，并再次对相同的查询运行分析。这次Shell工具不建议创建任何新索引，并输出SQLite将根据现有索引为查询使用的计划。
- en: 'The ".expert" command accepts the following options:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '".expert" 命令接受以下选项：'
- en: '| Option | Purpose |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 目的 |'
- en: '| ‑‑verbose | If present, output a more verbose report for each query analyzed.
    |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| ‑‑verbose | 如果存在，为每个分析的查询输出更详细的报告。'
- en: '| ‑‑sample PERCENT | This parameter defaults to 0, causing the ".expert" command
    to recommend indexes based on the query and database schema alone. This is similar
    to the way the [SQLite query planner](optoverview.html) selects indexes for queries
    if the user has not run the [ANALYZE](lang_analyze.html) command on the database
    to generate data distribution statistics.If this option is passed a non-zero argument,
    the ".expert" command generates similar data distribution statistics for all indexes
    considered based on PERCENT percent of the rows currently stored in each database
    table. For databases with unusual data distributions, this may lead to better
    index recommendations, particularly if the application intends to run ANALYZE.For
    small databases and modern CPUs, there is usually no reason not to pass "--sample
    100". However, gathering data distribution statistics can be expensive for large
    database tables. If the operation is too slow, try passing a smaller value for
    the --sample option. |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| ‑‑sample PERCENT | 此参数默认为0，导致".expert"命令仅基于查询和数据库架构推荐索引。这类似于[SQLite 查询规划器](optoverview.html)在用户未对数据库运行[ANALYZE](lang_analyze.html)命令生成数据分布统计时为查询选择索引的方式。如果此选项传递了非零参数，则".expert"命令会为考虑的所有索引生成类似的数据分布统计，基于每个数据库表当前存储的PERCENT百分比的行数。对于具有不寻常数据分布的数据库，这可能会导致更好的索引推荐，特别是如果应用程序打算运行ANALYZE。对于小型数据库和现代CPU，通常没有理由不传递"--sample
    100"。然而，对于大型数据库表来说，收集数据分布统计可能会很昂贵。如果操作太慢，请尝试传递更小的"--sample"选项值。'
- en: The functionality described in this section may be integrated into other applications
    or tools using the [SQLite expert extension](https://www.sqlite.org/src/dir?ci=trunk&name=ext/expert)
    code.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述的功能可以通过[SQLite 专家扩展](https://www.sqlite.org/src/dir?ci=trunk&name=ext/expert)代码集成到其他应用程序或工具中。
- en: A database schema which incorporate SQL custom functions made available via
    the extension load mechanism may need special provision to work with the .expert
    feature. Because the feature uses additional connections to implement its functionality,
    those custom functions must be made available to those additional connections.
    This can be done by means of the extension load/usage options described at [Automatically
    Load Statically Linked Extensions](c3ref/auto_extension.html) and [Persistent
    Loadable Extensions](loadext.html#persist).
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SQL自定义函数制定的数据库架构，通过扩展加载机制提供的可能需要特殊配置以与.expert功能一起工作。因为该功能使用额外的连接来实现其功能，所以这些自定义函数必须在这些额外的连接中提供。可以通过在[自动加载静态链接扩展](c3ref/auto_extension.html)和[持久加载扩展](loadext.html#persist)描述的扩展加载/使用选项来完成。
- en: 18\. Working With Multiple Database Connections
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 18\. 处理多个数据库连接
- en: Beginning with version 3.37.0 (2021-11-27), the CLI has the ability to hold
    multiple [database connections](c3ref/sqlite3.html) open at once. Only one database
    connection is active at a time. The inactive connections are still open but are
    idle.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本3.37.0（2021-11-27）开始，CLI具有能力同时保持多个[数据库连接](c3ref/sqlite3.html)处于打开状态。一次只能活动一个数据库连接。非活动连接仍然打开但处于空闲状态。
- en: Use the ".connection" dot-command (often abbreviated as just ".conn") to see
    a list of database connections and an indication of which one is currently active.
    Each database connection is identified by an integer between 0 and 9\. (There
    can be at most 10 simultaneously open connections.) Change to another database
    connection, creating it if it does not already exist, by typing the ".conn" command
    followed by its number. Close a database connection by typing ".conn close N"
    where N is the connection number.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 使用".connection"点命令（通常简写为".conn"）来查看数据库连接列表，并指示当前活动的连接。每个数据库连接由0到9之间的整数标识。（最多可以同时打开10个连接。）通过键入".conn"命令后跟其编号，可以切换到另一个数据库连接，如果不存在则创建。通过键入".conn
    close N"关闭数据库连接，其中N是连接号。
- en: Though the underlying SQLite database connections are completely independent
    of one another, many of the CLI settings, such as the output format, are shared
    across all database connections. Thus, changing the [output mode](cli.html#dotmode)
    in one connection will change it in them all. On the other hand, some [dot-commands](cli.html#dotcmd)
    such as [.open](cli.html#dotopen) only affect the current connection.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然底层的 SQLite 数据库连接是彼此完全独立的，但许多 CLI 设置（如输出格式）在所有数据库连接之间共享。因此，在一个连接中更改 [输出模式](cli.html#dotmode)
    将会在所有连接中进行更改。另一方面，某些 [dot-commands](cli.html#dotcmd) 如 [.open](cli.html#dotopen)
    仅影响当前连接。
- en: 19\. Miscellaneous Extension Features
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 19\. 杂项扩展功能
- en: 'The CLI is built with several SQLite extensions that are not included with
    the SQLite library. A few add features not described in the preceding sections,
    namely:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 是由几个 SQLite 扩展构建的，这些扩展不包含在 SQLite 库中。其中一些扩展提供了前面章节中未描述的功能，特别是：
- en: the UINT collating sequence which treats unsigned integers embedded in text
    according to their value, along with other text, for ordering;
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UINT 排序序列将嵌入在文本中的无符号整数按其值及其他文本进行排序；
- en: decimal arithmetic as provided by the [decimal extension](floatingpoint.html#decext);
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 十进制算术由 [decimal extension](floatingpoint.html#decext) 提供；
- en: the [generate_series](series.html)() table-valued function;
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[generate_series](series.html)() 表值函数；'
- en: the base64() and base85() functions which encode a blob to base64 or base85
    text or decode the same to a blob; and
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: base64() 和 base85() 函数用于将 blob 编码为 base64 或 base85 文本，或将相同的内容解码为 blob；
- en: support for POSIX extended regular expressions bound to the [REGEXP](lang_expr.html#regexp)
    operator.
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持 POSIX 扩展正则表达式，绑定到 [REGEXP](lang_expr.html#regexp) 运算符。
- en: 20\. Other Dot Commands
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 20\. 其他 Dot Commands
- en: There are many other dot-commands available in the command-line shell. See the
    ".help" command for a complete list for any particular version and build of SQLite.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行 shell 中还有许多其他的 dot-commands 可用。查看 ".help" 命令以获取 SQLite 特定版本和构建的完整列表。
- en: 21\. Using sqlite3 in a shell script
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 21\. 在 shell 脚本中使用 sqlite3
- en: 'One way to use sqlite3 in a shell script is to use "echo" or "cat" to generate
    a sequence of commands in a file, then invoke sqlite3 while redirecting input
    from the generated command file. This works fine and is appropriate in many circumstances.
    But as an added convenience, sqlite3 allows a single SQL command to be entered
    on the command line as a second argument after the database name. When the sqlite3
    program is launched with two arguments, the second argument is passed to the SQLite
    library for processing, the query results are printed on standard output in list
    mode, and the program exits. This mechanism is designed to make sqlite3 easy to
    use in conjunction with programs like "awk". For example:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在 shell 脚本中使用 sqlite3 的一种方法是使用 "echo" 或 "cat" 在文件中生成一系列命令，然后在重定向输入的同时调用 sqlite3。这种方法在许多情况下都很有效。但作为额外的便利，sqlite3
    允许将单个 SQL 命令作为第二个参数输入到命令行中。当 sqlite3 程序以两个参数启动时，第二个参数将传递给 SQLite 库进行处理，查询结果将以列表模式打印到标准输出，并退出程序。此机制旨在使
    sqlite3 在与 "awk" 等程序配合使用时更加方便。例如：
- en: '[PRE56]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 22\. Marking The End Of An SQL Statement
  id: totrans-322
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 22\. 标记 SQL 语句的结束
- en: SQLite commands are normally terminated by a semicolon. In the CLI you can also
    use the word "GO" (case-insensitive) or a slash character "/" on a line by itself
    to end a command. These are used by SQL Server and Oracle, respectively, and are
    supported by the SQLite CLI for compatibility. These won't work in **sqlite3_exec()**,
    because the CLI translates these inputs into a semicolon before passing them down
    into the SQLite core.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite 命令通常以分号结尾。在 CLI 中，你还可以使用单独一行上的单词 "GO"（大小写不敏感）或斜杠字符 "/" 来结束命令。这些分别被 SQL
    Server 和 Oracle 使用，并且 SQLite CLI 支持以保持兼容性。这些在 **sqlite3_exec()** 中不起作用，因为 CLI
    在将它们传递到 SQLite 核心之前会将这些输入翻译成分号。
- en: 23\. Command-line Options
  id: totrans-324
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 23\. 命令行选项
- en: 'There are many command-line options available to the CLI. Use the --help command-line
    option to see a list:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 提供了许多命令行选项。使用 --help 命令行选项查看列表：
- en: '[PRE57]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: The CLI is flexible regarding command-line option formatting. Either one or
    two leading "-" characters are permitted. Thus "-box" and "--box" mean the same
    thing. Command-line options are processed from left to right. Hence a "--box"
    option will override a prior "--quote" option.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 在命令行选项格式上非常灵活。允许使用一个或两个前导 "-" 字符。因此，"-box" 和 "--box" 表示相同的意思。命令行选项从左向右处理。因此，"--box"
    选项将覆盖先前的 "--quote" 选项。
- en: Most of the command-line options are self-explanatory, but a few merit additional
    discussion below.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数命令行选项都不言自明，但有几个值得在下面进一步讨论。
- en: 23.1\. The --safe command-line option
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 23.1\. --safe命令行选项
- en: 'The --safe command-line option attempts to disable all features of the CLI
    that might cause any changes to the host computer other than changes to the specific
    database file named on the command-line. The idea is that if you receive a large
    SQL script from an unknown or untrusted source, you can run that script to see
    what it does without risking an exploit by using the --safe option. The --safe
    option disables (among other things):'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: --safe命令行选项尝试禁用CLI的所有可能导致除指定在命令行中命名的特定数据库文件以外的主机计算机更改的功能。其想法是，如果您从一个未知或不信任的源接收到一个大型SQL脚本，您可以运行该脚本以查看其操作，而不用担心通过使用--safe选项来避免被利用。--safe选项禁用（除其他外）：
- en: The [.open command](cli.html#dotopen), unless the --hexdb option is used or
    the filename is ":memory:". This prevents the script from reading or writing any
    database files not named on the original command-line.
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[.open命令](cli.html#dotopen)，除非使用--hexdb选项或文件名为":memory:"。这可以防止脚本读取或写入未在原始命令行中命名的任何数据库文件。'
- en: The [ATTACH](lang_attach.html) SQL command.
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ATTACH](lang_attach.html) SQL命令。'
- en: SQL functions that have potentially harmful side-effects, such as edit(), fts3_tokenizer(),
    load_extension(), readfile() and writefile().
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能具有有害副作用的SQL函数，如edit()、fts3_tokenizer()、load_extension()、readfile()和writefile()。
- en: The [.archive command](cli.html#sqlar).
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[.archive命令](cli.html#sqlar)。'
- en: The .backup and .save commands.
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .backup和.save命令。
- en: The [.import command](cli.html#csv).
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[.import命令](cli.html#csv)。'
- en: The [.load command](cli.html#dotload).
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[.load命令](cli.html#dotload)。'
- en: The .log command.
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .log命令。
- en: The .shell and .system commands.
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .shell和.system命令。
- en: The .excel, .once and .output commands.
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: .excel、.once和.output命令。
- en: Other commands that can have deleterious side effects.
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他可能具有有害副作用的命令。
- en: Basically, any feature of the CLI that reads or writes from a file on disk other
    than the main database file is disabled.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，CLI的任何读取或写入除主数据库文件以外的磁盘文件的功能都将被禁用。
- en: 23.1.1\. Bypassing --safe restrictions for specific commands
  id: totrans-343
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 23.1.1\. 为特定命令绕过--safe限制
- en: If the "--nonce NONCE" option is also included on the command-line, for some
    large and arbitrary NONCE string, then the ".nonce NONCE" command (with the same
    large nonce string) will permit the next SQL statement or dot-command to bypass
    the --safe restrictions.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令行中还包括"--nonce NONCE"选项，其中NONCE是一个大而随意的字符串，那么带有相同大随机数的".nonce NONCE"命令将允许下一个SQL语句或点命令绕过--safe限制。
- en: Suppose you want to run a suspicious script and the script requires one or two
    of the features that --safe normally disables. For example, suppose it needs to
    ATTACH one additional database. Or suppose the script needs to load a specific
    extension. This can be accomplished by preceding the (carefully audited) ATTACH
    statement or the ".load" command with an appropriate ".nonce" command and supplying
    the same nonce value using the "--nonce" command-line option. Those specific commands
    will then be allowed to execute normally, but all other unsafe commands will still
    be restricted.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您想运行一个可疑的脚本，并且该脚本需要--safe通常禁用的一个或两个功能。例如，假设它需要附加一个额外的数据库。或者假设脚本需要加载一个特定的扩展。可以通过在适当的".nonce"命令之前放置（经过仔细审核的）ATTACH语句或".load"命令，并使用"--nonce"命令行选项提供相同的nonce值来实现这一点。这些特定命令将允许正常执行，但所有其他不安全的命令仍将受到限制。
- en: The use of ".nonce" is dangerous in the sense that a mistake can allow a hostile
    script to damage your system. Therefore, use ".nonce" carefully, sparingly, and
    as a last resort when there are no other ways to get a script to run under --safe
    mode.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在某种意义上，使用".nonce"是危险的，因为一个错误可能允许敌意脚本损坏您的系统。因此，在没有其他方法可以在--safe模式下运行脚本时，请谨慎、节约地使用".nonce"，并作为最后的手段。
- en: 23.2\. The --unsafe-testing command-line option
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 23.2\. --unsafe-testing命令行选项
- en: The --unsafe-testing command-line option supports use of the CLI for internal
    testing of the SQLite library. It is not needed or useful for using the CLI as
    a utility for creating, modifying or querying SQLite databases. Its intended use
    is to permit scripted testing with direct schema changes, defensive measures defeated,
    and certain special-purpose, undocumented, test-oriented dot-commands enabled.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: --unsafe-testing命令行选项支持用于SQLite库的内部测试CLI。它对于创建、修改或查询SQLite数据库的实用程序使用不需要也不有用。其预期用途是允许使用直接模式测试的脚本化测试，防御措施被打败，以及启用某些特殊用途、未记录的、面向测试的点命令。
- en: Misbehavior which requires use of the --unsafe-testing option to be induced
    will generally not be considered a bug for that reason alone. CLI behavior with
    --unsafe-testing is not supported or defined.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，需要通过 --unsafe-testing 选项诱导的行为通常不会单独因此原因被视为错误。CLI 在 --unsafe-testing 下的行为不受支持或定义。
- en: 23.3\. The --no-utf8 and --utf8 command-line options
  id: totrans-350
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 23.3\. --no-utf8 和 --utf8 命令行选项
- en: On the Windows platform, when the console is used for input or output, translation
    is required between character encoding available from or sent to the console and
    the CLI's internal, UTF-8 text representation. Past versions of the CLI accepted
    these options to enable or disable use of a translation that relied upon a Windows
    console feature whereby it could be made to produce or accept UTF-8 on modern
    versions of the OS.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 平台上，当控制台用于输入或输出时，需要在可从控制台获得或发送的字符编码与 CLI 的内部 UTF-8 文本表示之间进行转换。CLI
    的早期版本接受这些选项，以启用或禁用依赖于 Windows 控制台功能的转换，在现代 OS 版本上它能够产生或接受 UTF-8。
- en: Present CLI versions (3.44.1 or later) do console I/O by reading or writing
    UTF-16 from/to the Windows console APIs. Because this operates correctly even
    on Windows versions going back to Window 2000, there is no longer any need for
    these options. They are still accepted, but without effect.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 现有的 CLI 版本（3.44.1 或更高版本）通过从/向 Windows 控制台 API 读取或写入 UTF-16 来进行控制台 I/O。即使在支持
    Windows 2000 的 Windows 版本上也能正常运行，因此不再需要这些选项。它们仍然被接受，但没有效果。
- en: In all cases, non-console text I/O is UTF-8 encoded.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有情况下，非控制台文本 I/O 均为 UTF-8 编码。
- en: On non-Windows platforms, these options are also ignored.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 在非 Windows 平台上，这些选项也将被忽略。
- en: 24\. Compiling the sqlite3 program from sources
  id: totrans-355
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 24\. 从源代码编译 sqlite3 程序
- en: 'To compile the command-line shell on unix systems and on Windows with MinGW,
    the usual configure-make command works:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Unix 系统和 Windows 的 MinGW 上编译命令行 shell，通常的 configure-make 命令适用：
- en: '[PRE58]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: The configure-make works whether you are building from the canonical sources
    from the source tree, or from an amalgamated bundle. There are few dependencies.
    When building from canonical sources, a working [tclsh](https://www.tcl.tk/man/tcl8.3/UserCmd/tclsh.htm)
    is required. If using an amalgamation bundle, all the preprocessing work normally
    done by tclsh will have already been carried out and only normal build tools are
    required.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是从源树的规范源代码构建，还是从集成包构建，都可以使用 configure-make 进行工作。依赖关系很少。在从规范源代码构建时，需要一个可用的
    [tclsh](https://www.tcl.tk/man/tcl8.3/UserCmd/tclsh.htm)。如果使用集成包，所有通常由 tclsh 完成的预处理工作将已经完成，只需要常规的构建工具。
- en: A working [zlib compression library](https://zlib.net) is needed in order for
    the [.archive command](cli.html#sqlar) to operate.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使 [.archive 命令](cli.html#sqlar) 正常运行，需要一个可用的 [zlib 压缩库](https://zlib.net)。
- en: 'On Windows with MSVC, use nmake with the Makefile.msc:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上使用 MSVC，使用 Makefile.msc 的 nmake：
- en: '[PRE59]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'For correct operation of the [.archive command](cli.html#sqlar), make a copy
    of the [zlib source code](https://zlib.net) into the compat/zlib subdirectory
    of the source tree and compile this way:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确运行 [.archive 命令](cli.html#sqlar)，请将 [zlib 源代码](https://zlib.net) 的副本复制到源代码树的
    compat/zlib 子目录中，并以以下方式进行编译：
- en: '[PRE60]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 24.1\. Do-It-Yourself Builds
  id: totrans-364
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 24.1\. 自行构建
- en: 'The source code to the sqlite3 command line interface is in a single file named
    "shell.c". The shell.c source file is generated from other sources, but most of
    the code for shell.c can be found in [src/shell.c.in](https://sqlite.org/src/file/src/shell.c.in).
    (Regenerate shell.c by typing "make shell.c" from the canonical source tree.)
    [Compile](howtocompile.html) the shell.c file (together with the [sqlite3 library
    source code](amalgamation.html)) to generate the executable. For example:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite3 命令行界面的源代码位于名为 "shell.c" 的单个文件中。shell.c 源文件是从其他源文件生成的，但是大部分 shell.c 的代码可以在
    [src/shell.c.in](https://sqlite.org/src/file/src/shell.c.in) 找到。（通过在规范源代码树中输入
    "make shell.c" 来重新生成 shell.c。）[编译](howtocompile.html) shell.c 文件（连同 [sqlite3 库源代码](amalgamation.html)）以生成可执行文件。例如：
- en: '[PRE61]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'The following additional compile-time options are recommended in order to provide
    a full-featured command-line shell:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用以下额外的编译时选项以提供全功能的命令行 shell：
- en: '[-DSQLITE_THREADSAFE=0](compile.html#threadsafe)'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[-DSQLITE_THREADSAFE=0](compile.html#threadsafe)'
- en: '[-DSQLITE_ENABLE_EXPLAIN_COMMENTS](compile.html#enable_explain_comments)'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[-DSQLITE_ENABLE_EXPLAIN_COMMENTS](compile.html#enable_explain_comments)'
- en: '[-DSQLITE_HAVE_ZLIB](compile.html#have_zlib)'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[-DSQLITE_HAVE_ZLIB](compile.html#have_zlib)'
- en: '[-DSQLITE_INTROSPECTION_PRAGMAS](compile.html#introspection_pragmas)'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[-DSQLITE_INTROSPECTION_PRAGMAS](compile.html#introspection_pragmas)'
- en: '[-DSQLITE_ENABLE_UNKNOWN_SQL_FUNCTION](compile.html#enable_unknown_sql_function)'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[-DSQLITE_ENABLE_STMTVTAB](compile.html#enable_stmtvtab)'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[-DSQLITE_ENABLE_DBPAGE_VTAB](compile.html#enable_dbpage_vtab)'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[-DSQLITE_ENABLE_DBSTAT_VTAB](compile.html#enable_dbstat_vtab)'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[-DSQLITE_ENABLE_OFFSET_SQL_FUNC](compile.html#enable_offset_sql_func)'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[-DSQLITE_ENABLE_JSON1](compile.html#enable_json1)'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[-DSQLITE_ENABLE_RTREE](compile.html#enable_rtree)'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[-DSQLITE_ENABLE_FTS4](compile.html#enable_fts4)'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[-DSQLITE_ENABLE_FTS5](compile.html#enable_fts5)'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
