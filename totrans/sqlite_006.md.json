["```sql\nif( a>b && c!=25 ){ d++; }\n\n```", "```sql\n#define ALWAYS(X)  (X)\n#define NEVER(X)   (X)\n\n```", "```sql\n#define ALWAYS(X)  ((X)?1:assert(0),0)\n#define NEVER(X)   ((X)?assert(0),1:0)\n\n```", "```sql\n#define ALWAYS(X)  (1)\n#define NEVER(X)   (0)\n\n```", "```sql\n#define testcase(X)\n\n```", "```sql\ntestcase( a==b );\ntestcase( a==b+1 );\nif( a>b && c!=25 ){ d++; }\n\n```", "```sql\nswitch( op ){\n  case OP_Add:\n  case OP_Subtract: {\n    testcase( op==OP_Add );\n    testcase( op==OP_Subtract );\n    /* ... */\n    break;\n  }\n  /* ... */\n}\n\n```", "```sql\ntestcase( mask & SQLITE_OPEN_MAIN_DB );\ntestcase( mask & SQLITE_OPEN_TEMP_DB );\nif( (mask & (SQLITE_OPEN_MAIN_DB|SQLITE_OPEN_TEMP_DB))!=0 ){ ... }\n\n```", "```sql\n55  static unsigned int strHash(const char *z){\n56    unsigned int h = 0;\n57    unsigned char c;\n58    while( (c = (unsigned char)*z++)!=0 ){     /*OPTIMIZATION-IF-TRUE*/\n59      h = (h<<3) ^ h ^ sqlite3UpperToLower[c];\n60    }\n61    return h;\n62  }\n\n```"]