- en: 1\. Overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://sqlite.com/series.html](https://sqlite.com/series.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The generate_series(START,STOP,STEP) [table-valued function](vtab.html#tabfunc2)
    is a [loadable extension](loadext.html) included in the SQLite source tree, and
    compiled into the [command-line shell](cli.html). The generate_series() table
    has one visible result column named "value" holding integer values and a number
    of rows determined by the parameters START, STOP, and STEP. The first row of the
    table has a value of START. Subsequent rows increment by STEP to a value not exceeding
    STOP.
  prefs: []
  type: TYPE_NORMAL
- en: The generate_series() table has additional, hidden columns named "start", "stop",
    and "step" whose values are the effective values of START, STOP and STEP as provided
    or defaulted. It also has a rowid, accessible by its usual names.
  prefs: []
  type: TYPE_NORMAL
- en: Omitted parameters take on default values. STEP defaults to 1. STOP defaults
    to 4294967295\. The START parameter is required as of version 3.37.0 (2021-11-27)
    and later and an error will be raised if START is omitted or has a self-referential
    or otherwise uncomputable value. Older versions used a default of 0 for START.
    The legacy behavior can be obtained from recent code by compiling with -DZERO_ARGUMENT_GENERATE_SERIES.
  prefs: []
  type: TYPE_NORMAL
- en: 1.1\. Equivalent Recursive Common Table Expression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The generate_series table can be simulated for positive step values using a
    [recursive common table expression](lang_with.html#recursivecte). If the three
    parameters are $start, $end, and $step, then the equivalent common table expression
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The common table expression works without having to load an extension. On the
    other hand, the extension is easier to program and faster.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Usage Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Generate all multiples of 5 less than or equal to 100:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate the 20 random integer values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Find the name of every customer whose account number is an even multiple of
    100 between 10000 and 20000.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
