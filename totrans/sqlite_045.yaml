- en: 1\. Summary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 总结
- en: 原文：[https://sqlite.com/autoinc.html](https://sqlite.com/autoinc.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/autoinc.html](https://sqlite.com/autoinc.html)
- en: The AUTOINCREMENT keyword imposes extra CPU, memory, disk space, and disk I/O
    overhead and should be avoided if not strictly needed. It is usually not needed.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果没有严格需要，应避免使用 AUTOINCREMENT 关键字，因为它会增加额外的 CPU、内存、磁盘空间和磁盘 I/O 开销。通常情况下是不必要的。
- en: In SQLite, a column with type INTEGER PRIMARY KEY is an alias for the [ROWID](lang_createtable.html#rowid)
    (except in [WITHOUT ROWID](withoutrowid.html) tables) which is always a 64-bit
    signed integer.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 SQLite 中，类型为 `INTEGER PRIMARY KEY` 的列是 [ROWID](lang_createtable.html#rowid)
    的别名（在没有 ROWID 的表中除外），它始终是一个64位有符号整数。
- en: On an [INSERT](lang_insert.html), if the ROWID or INTEGER PRIMARY KEY column
    is not explicitly given a value, then it will be filled automatically with an
    unused integer, usually one more than the largest ROWID currently in use. This
    is true regardless of whether or not the AUTOINCREMENT keyword is used.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 [INSERT](lang_insert.html) 中，如果未为 ROWID 或 INTEGER PRIMARY KEY 列明确指定值，则它将自动填充为未使用的整数，通常是当前使用的最大
    ROWID 加一。这是无论是否使用 AUTOINCREMENT 关键字都成立。
- en: If the AUTOINCREMENT keyword appears after INTEGER PRIMARY KEY, that changes
    the automatic ROWID assignment algorithm to prevent the reuse of ROWIDs over the
    lifetime of the database. In other words, the purpose of AUTOINCREMENT is to prevent
    the reuse of ROWIDs from previously deleted rows.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在 `INTEGER PRIMARY KEY` 之后出现 `AUTOINCREMENT` 关键字，则会更改自动分配 ROWID 的算法，以防止数据库生命周期内重新使用
    ROWID。换句话说，AUTOINCREMENT 的目的是防止重新使用先前删除行的 ROWID。
- en: 2\. Background
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 背景
- en: In SQLite, table rows normally have a 64-bit signed integer [ROWID](lang_createtable.html#rowid)
    which is unique among all rows in the same table. ([WITHOUT ROWID](withoutrowid.html)
    tables are the exception.)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SQLite 中，表行通常具有唯一的64位有符号整数 [ROWID](lang_createtable.html#rowid)（在 [WITHOUT
    ROWID](withoutrowid.html) 表中除外）。
- en: You can access the ROWID of an SQLite table using one of the special column
    names ROWID, _ROWID_, or OID. Except if you declare an ordinary table column to
    use one of those special names, then the use of that name will refer to the declared
    column not to the internal ROWID.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用特殊列名 ROWID、_ROWID_ 或 OID 访问 SQLite 表的 ROWID。除非声明普通表列使用其中一个特殊名称，否则使用该名称将引用已声明的列而不是内部
    ROWID。
- en: If a table contains a column of type [INTEGER PRIMARY KEY](lang_createtable.html#rowid),
    then that column becomes an alias for the ROWID. You can then access the ROWID
    using any of four different names, the original three names described above or
    the name given to the [INTEGER PRIMARY KEY](lang_createtable.html#rowid) column.
    All these names are aliases for one another and work equally well in any context.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表包含类型为 [INTEGER PRIMARY KEY](lang_createtable.html#rowid) 的列，则该列成为 ROWID 的别名。然后，可以使用任何四个不同的名称访问
    ROWID，即上述三个原始名称或给定给 [INTEGER PRIMARY KEY](lang_createtable.html#rowid) 列的名称。所有这些名称都是彼此的别名，并且在任何上下文中均有效。
- en: 'When a new row is inserted into an SQLite table, the ROWID can either be specified
    as part of the INSERT statement or it can be assigned automatically by the database
    engine. To specify a ROWID manually, just include it in the list of values to
    be inserted. For example:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当向 SQLite 表插入新行时，可以在 INSERT 语句中指定 ROWID，也可以由数据库引擎自动分配。要手动指定 ROWID，只需将其包含在要插入的值列表中。例如：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If no ROWID is specified on the insert, or if the specified ROWID has a value
    of NULL, then an appropriate ROWID is created automatically. The usual algorithm
    is to give the newly created row a ROWID that is one larger than the largest ROWID
    in the table prior to the insert. If the table is initially empty, then a ROWID
    of 1 is used. If the largest ROWID is equal to the largest possible integer (9223372036854775807)
    then the database engine starts picking positive candidate ROWIDs at random until
    it finds one that is not previously used. If no unused ROWID can be found after
    a reasonable number of attempts, the insert operation fails with an [SQLITE_FULL](rescode.html#full)
    error. If no negative ROWID values are inserted explicitly, then automatically
    generated ROWID values will always be greater than zero.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在插入时未指定 ROWID，或者指定的 ROWID 值为 NULL，则会自动创建适当的 ROWID。通常的算法是在插入之前给新创建的行一个比表中最大
    ROWID 大一的 ROWID。如果表最初为空，则使用 ROWID 1。如果最大 ROWID 等于最大可能的整数（9223372036854775807），则数据库引擎开始随机选择正候选
    ROWID，直到找到一个尚未使用的。如果在合理的尝试次数后找不到未使用的 ROWID，则插入操作会因 [SQLITE_FULL](rescode.html#full)
    错误而失败。如果没有显式插入负 ROWID 值，则自动生成的 ROWID 值始终大于零。
- en: The normal ROWID selection algorithm described above will generate monotonically
    increasing unique ROWIDs as long as you never use the maximum ROWID value and
    you never delete the entry in the table with the largest ROWID. If you ever delete
    rows or if you ever create a row with the maximum possible ROWID, then ROWIDs
    from previously deleted rows might be reused when creating new rows and newly
    created ROWIDs might not be in strictly ascending order.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，普通的 ROWID 选择算法将生成单调递增的唯一 ROWID，只要您从未使用过最大 ROWID 值，也从未删除具有最大 ROWID 的表中的条目。如果删除行或创建具有最大可能
    ROWID 的行，则在创建新行时可能会重新使用先前删除行的 ROWID，并且新创建的 ROWID 可能不是严格升序的。
- en: 3\. The AUTOINCREMENT Keyword
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. AUTOINCREMENT 关键字
- en: If a column has the type INTEGER PRIMARY KEY AUTOINCREMENT then a slightly different
    ROWID selection algorithm is used. The ROWID chosen for the new row is at least
    one larger than the largest ROWID that has ever before existed in that same table.
    If the table has never before contained any data, then a ROWID of 1 is used. If
    the largest possible ROWID has previously been inserted, then new INSERTs are
    not allowed and any attempt to insert a new row will fail with an SQLITE_FULL
    error. Only ROWID values from previous transactions that were committed are considered.
    ROWID values that were rolled back are ignored and can be reused.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列具有类型 INTEGER PRIMARY KEY AUTOINCREMENT，则使用稍有不同的 ROWID 选择算法。为新行选择的 ROWID 至少比此前同一表中已存在的最大
    ROWID 大 1。如果表以前从未包含任何数据，则使用 ROWID 1。如果先前插入了最大可能的 ROWID，则不允许新的 INSERT，并且任何尝试插入新行都将因
    SQLITE_FULL 错误而失败。仅考虑已提交的先前事务的 ROWID 值。已回滚的 ROWID 值将被忽略并可以重新使用。
- en: SQLite keeps track of the largest ROWID using an [internal table](fileformat2.html#intschema)
    named "[sqlite_sequence](fileformat2.html#seqtab)". The sqlite_sequence table
    is created automatically, if it does not already exist, whenever a normal table
    that contains an AUTOINCREMENT column is created. A row in the sqlite_sequence
    table corresponding to the table with the AUTOINCREMENT column is created the
    first time the AUTOINCREMENT table is written and updated on any subsequent writes
    that increase the maximum rowid. The content of the sqlite_sequence table can
    be modified using ordinary UPDATE, INSERT, and DELETE statements. But making modifications
    to this table will likely perturb the AUTOINCREMENT key generation algorithm.
    Make sure you know what you are doing before you undertake such changes. The sqlite_sequence
    table does not track ROWID changes associated with UPDATE statement, only INSERT
    statements.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite 使用一个名为"[sqlite_sequence](fileformat2.html#seqtab)"的[内部表](fileformat2.html#intschema)来跟踪最大的
    ROWID。sqlite_sequence 表会在创建具有 AUTOINCREMENT 列的普通表时自动创建，如果该表尚不存在。第一次写入 AUTOINCREMENT
    表时会创建与具有 AUTOINCREMENT 列的表对应的 sqlite_sequence 行，并在任何后续增加最大 ROWID 的写入操作时进行更新。可以使用普通的
    UPDATE、INSERT 和 DELETE 语句修改 sqlite_sequence 表的内容。但在进行此类更改之前，请确保知道自己在做什么。sqlite_sequence
    表不会跟踪与 UPDATE 语句相关的 ROWID 更改，只会跟踪 INSERT 语句。
- en: The behavior implemented by the AUTOINCREMENT keyword is subtly different from
    the default behavior. With AUTOINCREMENT, rows with automatically selected ROWIDs
    are guaranteed to have ROWIDs that have never been used before by the same table
    in the same database. And the automatically generated ROWIDs are guaranteed to
    be monotonically increasing. These are important properties in certain applications.
    But if your application does not need these properties, you should probably stay
    with the default behavior since the use of AUTOINCREMENT requires additional work
    to be done as each row is inserted and thus causes INSERTs to run a little slower.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 AUTOINCREMENT 关键字实现的行为与默认行为略有不同。使用 AUTOINCREMENT，自动选择的 ROWID 的行保证在同一数据库的同一表中从未使用过。而且自动生成的
    ROWID 保证是单调递增的。这些在某些应用中是重要的属性。但如果您的应用程序不需要这些属性，您可能应该继续使用默认行为，因为使用 AUTOINCREMENT
    需要在每次插入行时做额外的工作，从而导致插入操作稍慢一些。
- en: Note that "monotonically increasing" does not imply that the ROWID always increases
    by exactly one. One is the usual increment. However, if an insert fails due to
    (for example) a uniqueness constraint, the ROWID of the failed insertion attempt
    might not be reused on subsequent inserts, resulting in gaps in the ROWID sequence.
    AUTOINCREMENT guarantees that automatically chosen ROWIDs will be increasing but
    not that they will be sequential.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，“单调递增”并不意味着 ROWID 总是增加恰好一个。通常情况下增加一个。但是，如果插入失败，例如由于唯一性约束，插入失败的 ROWID 可能不会在后续插入中重新使用，从而导致
    ROWID 序列中出现间隙。AUTOINCREMENT 保证了自动选择的 ROWID 会递增，但不能保证它们会连续。
- en: Because AUTOINCREMENT keyword changes the behavior of the ROWID selection algorithm,
    AUTOINCREMENT is not allowed on [WITHOUT ROWID](withoutrowid.html) tables or on
    any table column other than INTEGER PRIMARY KEY. Any attempt to use AUTOINCREMENT
    on a [WITHOUT ROWID](withoutrowid.html) table or on a column other than the INTEGER
    PRIMARY KEY column results in an error.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 AUTOINCREMENT 关键字改变了 ROWID 选择算法的行为，因此在 [WITHOUT ROWID](withoutrowid.html)
    表或除 INTEGER PRIMARY KEY 外的任何表列上都不允许使用 AUTOINCREMENT。任何试图在 [WITHOUT ROWID](withoutrowid.html)
    表或非 INTEGER PRIMARY KEY 列上使用 AUTOINCREMENT 的尝试都会导致错误。
