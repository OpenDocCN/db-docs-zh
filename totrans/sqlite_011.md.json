["```sql\n    > 01  #!/usr/bin/tclsh\n    > 02  if {$argc!=2} {\n    > 03    puts stderr \"Usage: %s DATABASE SQL-STATEMENT\"\n    > 04    exit 1\n    > 05  }\n    > 06  package require sqlite3\n    > 07  sqlite3 db [lindex $argv 0]\n    > 08  db eval [lindex $argv 1] x {\n    > 09    foreach v $x(*) {\n    > 10      puts \"$v = $x($v)\"\n    > 11    }\n    > 12    puts \"\"\n    > 13  }\n    > 14  db close\n    > \n    > ```", "```sql\n    > 01  #include <stdio.h>\n    > 02  #include <sqlite3.h>\n    > 03  \n    > 04  static int callback(void *NotUsed, int argc, char **argv, char **azColName){\n    > 05    int i;\n    > 06    for(i=0; i<argc; i++){\n    > 07      printf(\"%s = %s\\n\", azColName[i], argv[i] ? argv[i] : \"NULL\");\n    > 08    }\n    > 09    printf(\"\\n\");\n    > 10    return 0;\n    > 11  }\n    > 12  \n    > 13  int main(int argc, char **argv){\n    > 14    sqlite3 *db;\n    > 15    char *zErrMsg = 0;\n    > 16    int rc;\n    > 17  \n    > 18    if( argc!=3 ){\n    > 19      fprintf(stderr, \"Usage: %s DATABASE SQL-STATEMENT\\n\", argv[0]);\n    > 20      return(1);\n    > 21    }\n    > 22    rc = sqlite3_open(argv[1], &db);\n    > 23    if( rc ){\n    > 24      fprintf(stderr, \"Can't open database: %s\\n\", sqlite3_errmsg(db));\n    > 25      sqlite3_close(db);\n    > 26      return(1);\n    > 27    }\n    > 28    rc = sqlite3_exec(db, argv[2], callback, 0, &zErrMsg);\n    > 29    if( rc!=SQLITE_OK ){\n    > 30      fprintf(stderr, \"SQL error: %s\\n\", zErrMsg);\n    > 31      sqlite3_free(zErrMsg);\n    > 32    }\n    > 33    sqlite3_close(db);\n    > 34    return 0;\n    > 35  }\n    > \n    > ```"]