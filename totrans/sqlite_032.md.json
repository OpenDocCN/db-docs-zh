["```sql\n> .load ./YourCode\n> \n> ```", "```sql\n> .load ./YourCode nonstandard_entry_point\n> \n> ```", "```sql\n> gcc -g -fPIC -shared YourCode.c -o YourCode.so\n> \n> ```", "```sql\n> gcc -g -fPIC -dynamiclib YourCode.c -o YourCode.dylib\n> \n> ```", "```sql\n> cl YourCode.c -link -dll -out:YourCode.dll\n> \n> ```", "```sql\n> gcc -g -shared YourCode.c -o YourCode.dll\n> \n> ```", "```sql\n    #ifdef _WIN32\n    __declspec(dllexport)\n    #endif\n    int sqlite3_extension_init( /* <== Change this name, maybe */\n      sqlite3 *db, \n      char **pzErrMsg, \n      const sqlite3_api_routines *pApi\n    ){\n      int rc = SQLITE_OK;\n      SQLITE_EXTENSION_INIT2(pApi);\n      /* insert code to initialize your extension here */\n      return rc;\n    }\n\n    ```", "```sql\n/* Add your header comment here */\n#include <sqlite3ext.h> /* Do not use <sqlite3.h>! */\nSQLITE_EXTENSION_INIT1\n\n/* Insert your extension code here */\n\n#ifdef _WIN32\n__declspec(dllexport)\n#endif\n/* TODO: Change the entry point name so that \"extension\" is replaced by\n** text derived from the shared library filename as follows:  Copy every\n** ASCII alphabetic character from the filename after the last \"/\" through\n** the next following \".\", converting each character to lowercase, and\n** discarding the first three characters if they are \"lib\".\n*/\nint sqlite3_extension_init(\n  sqlite3 *db,\n  char **pzErrMsg,\n  const sqlite3_api_routines *pApi\n){\n  int rc = SQLITE_OK;\n  SQLITE_EXTENSION_INIT2(pApi);\n  /* Insert here calls to\n  **     sqlite3_create_function_v2(),\n  **     sqlite3_create_collation_v2(),\n  **     sqlite3_create_module_v2(), and/or\n  **     sqlite3_vfs_register()\n  ** to register the new features that your extension adds.\n  */\n  return rc;\n}\n\n```"]