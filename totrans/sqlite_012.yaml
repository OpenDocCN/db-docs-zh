- en: 1\. Summary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 概述
- en: 原文：[https://sqlite.com/cintro.html](https://sqlite.com/cintro.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://sqlite.com/cintro.html](https://sqlite.com/cintro.html)
- en: 'The following two objects and eight methods comprise the essential elements
    of the SQLite interface:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 下列两个对象和八种方法构成了SQLite接口的基本元素：
- en: '**[sqlite3](c3ref/sqlite3.html)** → The database connection object. Created
    by [sqlite3_open()](c3ref/open.html) and destroyed by [sqlite3_close()](c3ref/close.html).'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3](c3ref/sqlite3.html)** → 数据库连接对象。由[sqlite3_open()](c3ref/open.html)创建，由[sqlite3_close()](c3ref/close.html)销毁。'
- en: '**[sqlite3_stmt](c3ref/stmt.html)** → The prepared statement object. Created
    by [sqlite3_prepare()](c3ref/prepare.html) and destroyed by [sqlite3_finalize()](c3ref/finalize.html).'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_stmt](c3ref/stmt.html)** → 准备语句对象。由[sqlite3_prepare()](c3ref/prepare.html)创建，由[sqlite3_finalize()](c3ref/finalize.html)销毁。'
- en: '**[sqlite3_open()](c3ref/open.html)** → Open a connection to a new or existing
    SQLite database. The constructor for [sqlite3](c3ref/sqlite3.html).'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_open()](c3ref/open.html)** → 打开到新的或现有SQLite数据库的连接。[sqlite3](c3ref/sqlite3.html)的构造函数。'
- en: '**[sqlite3_prepare()](c3ref/prepare.html)** → Compile SQL text into byte-code
    that will do the work of querying or updating the database. The constructor for
    [sqlite3_stmt](c3ref/stmt.html).'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_prepare()](c3ref/prepare.html)** → 将SQL文本编译为字节码，以执行查询或更新数据库操作。[sqlite3_stmt](c3ref/stmt.html)的构造函数。'
- en: '**[sqlite3_bind()](c3ref/bind_blob.html)** → Store application data into [parameters](lang_expr.html#varparam)
    of the original SQL.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_bind()](c3ref/bind_blob.html)** → 将应用程序数据存储到原始SQL的[参数](lang_expr.html#varparam)中。'
- en: '**[sqlite3_step()](c3ref/step.html)** → Advance an [sqlite3_stmt](c3ref/stmt.html)
    to the next result row or to completion.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_step()](c3ref/step.html)** → 推进[sqlite3_stmt](c3ref/stmt.html)至下一个结果行或完成。'
- en: '**[sqlite3_column()](c3ref/column_blob.html)** → Column values in the current
    result row for an [sqlite3_stmt](c3ref/stmt.html).'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_column()](c3ref/column_blob.html)** → 当前结果行中的列值，对应于[sqlite3_stmt](c3ref/stmt.html)。'
- en: '**[sqlite3_finalize()](c3ref/finalize.html)** → Destructor for [sqlite3_stmt](c3ref/stmt.html).'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_finalize()](c3ref/finalize.html)** → [sqlite3_stmt](c3ref/stmt.html)的析构函数。'
- en: '**[sqlite3_close()](c3ref/close.html)** → Destructor for [sqlite3](c3ref/sqlite3.html).'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_close()](c3ref/close.html)** → [sqlite3](c3ref/sqlite3.html)的析构函数。'
- en: '**[sqlite3_exec()](c3ref/exec.html)** → A wrapper function that does [sqlite3_prepare()](c3ref/prepare.html),
    [sqlite3_step()](c3ref/step.html), [sqlite3_column()](c3ref/column_blob.html),
    and [sqlite3_finalize()](c3ref/finalize.html) for a string of one or more SQL
    statements.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_exec()](c3ref/exec.html)** → 一个包装函数，执行一个或多个SQL语句的字符串，包括[sqlite3_prepare()](c3ref/prepare.html)、[sqlite3_step()](c3ref/step.html)、[sqlite3_column()](c3ref/column_blob.html)和[sqlite3_finalize()](c3ref/finalize.html)。'
- en: 2\. Introduction
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 引言
- en: SQLite has more than 225 APIs. However, most of the APIs are optional and very
    specialized and can be ignored by beginners. The core API is small, simple, and
    easy to learn. This article summarizes the core API.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite有超过225个API。但是，大多数API都是可选的和非常专业化的，初学者可以忽略它们。核心API很小、简单且易于学习。本文总结了核心API。
- en: A separate document, [The SQLite C/C++ Interface](c3ref/intro.html), provides
    detailed specifications for all C/C++ APIs for SQLite. Once the reader understands
    the basic principles of operation for SQLite, [that document](c3ref/intro.html)
    should be used as a reference guide. This article is intended as introduction
    only and is neither a complete nor authoritative reference for the SQLite API.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 单独的文档，[SQLite C/C++ 接口](c3ref/intro.html)，提供了SQLite所有C/C++ API的详细规格说明。读者一旦理解了SQLite的基本操作原理，应将该文档作为参考指南使用。本文仅作介绍，不是SQLite
    API的完整或权威参考。
- en: 3\. Core Objects And Interfaces
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 核心对象和接口
- en: 'The principal task of an SQL database engine is to evaluate SQL statements
    of SQL. To accomplish this, the developer needs two objects:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: SQL数据库引擎的主要任务是评估SQL语句。为了实现这一点，开发者需要两个对象：
- en: 'The [database connection](c3ref/sqlite3.html) object: sqlite3'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库连接（database connection）对象：sqlite3
- en: 'The [prepared statement](c3ref/stmt.html) object: sqlite3_stmt'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备语句（prepared statement）对象：sqlite3_stmt
- en: Strictly speaking, the [prepared statement](c3ref/stmt.html) object is not required
    since the convenience wrapper interfaces, [sqlite3_exec](c3ref/exec.html) or [sqlite3_get_table](c3ref/free_table.html),
    can be used and these convenience wrappers encapsulate and hide the [prepared
    statement](c3ref/stmt.html) object. Nevertheless, an understanding of [prepared
    statements](c3ref/stmt.html) is needed to make full use of SQLite.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 严格来说，不需要[预编译语句](c3ref/stmt.html)对象，因为可以使用便捷包装接口 [sqlite3_exec](c3ref/exec.html)
    或 [sqlite3_get_table](c3ref/free_table.html)，这些便捷包装封装和隐藏了[预编译语句](c3ref/stmt.html)对象。然而，理解[预编译语句](c3ref/stmt.html)对于充分利用
    SQLite 是必要的。
- en: The [database connection](c3ref/sqlite3.html) and [prepared statement](c3ref/stmt.html)
    objects are controlled by a small set of C/C++ interface routine listed below.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库连接（[sqlite3](c3ref/sqlite3.html)）和[预编译语句](c3ref/stmt.html)对象由下面列出的一小组 C/C++
    接口例程控制。
- en: '[sqlite3_open()](c3ref/open.html)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_open()](c3ref/open.html)'
- en: '[sqlite3_prepare()](c3ref/prepare.html)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_prepare()](c3ref/prepare.html)'
- en: '[sqlite3_step()](c3ref/step.html)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_step()](c3ref/step.html)'
- en: '[sqlite3_column()](c3ref/column_blob.html)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column()](c3ref/column_blob.html)'
- en: '[sqlite3_finalize()](c3ref/finalize.html)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_finalize()](c3ref/finalize.html)'
- en: '[sqlite3_close()](c3ref/close.html)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_close()](c3ref/close.html)'
- en: 'Note that the list of routines above is conceptual rather than actual. Many
    of these routines come in multiple versions. For example, the list above shows
    a single routine named [sqlite3_open()](c3ref/open.html) when in fact there are
    three separate routines that accomplish the same thing in slightly different ways:
    [sqlite3_open()](c3ref/open.html), [sqlite3_open16()](c3ref/open.html) and [sqlite3_open_v2()](c3ref/open.html).
    The list mentions [sqlite3_column()](c3ref/column_blob.html) when in fact no such
    routine exists. The "sqlite3_column()" shown in the list is a placeholder for
    an entire family of routines that extract column data in various datatypes.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意上面例程列表是概念上的而非实际的。许多这些例程存在多个版本。例如，上面的列表显示了一个名为 [sqlite3_open()](c3ref/open.html)
    的单一例程，实际上有三个稍有不同方式完成相同工作的例程： [sqlite3_open()](c3ref/open.html), [sqlite3_open16()](c3ref/open.html)
    和 [sqlite3_open_v2()](c3ref/open.html)。列表提到了 [sqlite3_column()](c3ref/column_blob.html)，实际上并没有这样的例程存在。列表中显示的
    "sqlite3_column()" 是一组例程的占位符，用于提取各种数据类型的列数据。
- en: 'Here is a summary of what the core interfaces do:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是核心接口的摘要：
- en: '**[sqlite3_open()](c3ref/open.html)**'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_open()](c3ref/open.html)**'
- en: This routine opens a connection to an SQLite database file and returns a [database
    connection](c3ref/sqlite3.html) object. This is often the first SQLite API call
    that an application makes and is a prerequisite for most other SQLite APIs. Many
    SQLite interfaces require a pointer to the [database connection](c3ref/sqlite3.html)
    object as their first parameter and can be thought of as methods on the [database
    connection](c3ref/sqlite3.html) object. This routine is the constructor for the
    [database connection](c3ref/sqlite3.html) object.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此例程打开与 SQLite 数据库文件的连接，并返回一个[数据库连接](c3ref/sqlite3.html)对象。这通常是应用程序进行的第一个 SQLite
    API 调用，并且是大多数其他 SQLite API 的先决条件。许多 SQLite 接口需要一个[数据库连接](c3ref/sqlite3.html)对象指针作为它们的第一个参数，并可以视为[数据库连接](c3ref/sqlite3.html)对象的方法。此例程是[数据库连接](c3ref/sqlite3.html)对象的构造函数。
- en: '**[sqlite3_prepare()](c3ref/prepare.html)**'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_prepare()](c3ref/prepare.html)**'
- en: This routine converts SQL text into a [prepared statement](c3ref/stmt.html)
    object and returns a pointer to that object. This interface requires a [database
    connection](c3ref/sqlite3.html) pointer created by a prior call to [sqlite3_open()](c3ref/open.html)
    and a text string containing the SQL statement to be prepared. This API does not
    actually evaluate the SQL statement. It merely prepares the SQL statement for
    evaluation.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此例程将 SQL 文本转换为[预编译语句](c3ref/stmt.html)对象，并返回指向该对象的指针。此接口需要先前调用 [sqlite3_open()](c3ref/open.html)
    创建的[数据库连接](c3ref/sqlite3.html)指针和包含要准备的 SQL 语句的文本字符串。该 API 实际上不评估 SQL 语句，而仅准备
    SQL 语句以供评估。
- en: Think of each SQL statement as a small computer program. The purpose of [sqlite3_prepare()](c3ref/prepare.html)
    is to compile that program into object code. The [prepared statement](c3ref/stmt.html)
    is the object code. The [sqlite3_step()](c3ref/step.html) interface then runs
    the object code to get a result.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将每个 SQL 语句视为一个小型计算机程序。[sqlite3_prepare()](c3ref/prepare.html) 的目的是将该程序编译为目标代码。[预编译语句](c3ref/stmt.html)就是这个目标代码。[sqlite3_step()](c3ref/step.html)
    接口然后运行目标代码以获得结果。
- en: New applications should always invoke [sqlite3_prepare_v2()](c3ref/prepare.html)
    instead of [sqlite3_prepare()](c3ref/prepare.html). The older [sqlite3_prepare()](c3ref/prepare.html)
    is retained for backwards compatibility. But [sqlite3_prepare_v2()](c3ref/prepare.html)
    provides a much better interface.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新应用程序应始终使用[sqlite3_prepare_v2()](c3ref/prepare.html)来替代[sqlite3_prepare()](c3ref/prepare.html)。旧的[sqlite3_prepare()](c3ref/prepare.html)为向后兼容而保留。但是[sqlite3_prepare_v2()](c3ref/prepare.html)提供了一个更好的接口。
- en: '**[sqlite3_step()](c3ref/step.html)**'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_step()](c3ref/step.html)**'
- en: 'This routine is used to evaluate a [prepared statement](c3ref/stmt.html) that
    has been previously created by the [sqlite3_prepare()](c3ref/prepare.html) interface.
    The statement is evaluated up to the point where the first row of results are
    available. To advance to the second row of results, invoke [sqlite3_step()](c3ref/step.html)
    again. Continue invoking [sqlite3_step()](c3ref/step.html) until the statement
    is complete. Statements that do not return results (ex: INSERT, UPDATE, or DELETE
    statements) run to completion on a single call to [sqlite3_step()](c3ref/step.html).'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个例程用于评估之前由[sqlite3_prepare()](c3ref/prepare.html)接口创建的[预编译语句](c3ref/stmt.html)。该语句在第一行结果可用的点被评估。要前进到第二行结果，请再次调用[sqlite3_step()](c3ref/step.html)。继续调用[sqlite3_step()](c3ref/step.html)，直到语句完成。不返回结果的语句（如：INSERT、UPDATE
    或 DELETE 语句）在单次调用[sqlite3_step()](c3ref/step.html)中执行完毕。
- en: '**[sqlite3_column()](c3ref/column_blob.html)**'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_column()](c3ref/column_blob.html)**'
- en: This routine returns a single column from the current row of a result set for
    a [prepared statement](c3ref/stmt.html) that is being evaluated by [sqlite3_step()](c3ref/step.html).
    Each time [sqlite3_step()](c3ref/step.html) stops with a new result set row, this
    routine can be called multiple times to find the values of all columns in that
    row.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该例程从由[sqlite3_step()](c3ref/step.html)评估的[预编译语句](c3ref/stmt.html)的当前行中返回单个列。每当[sqlite3_step()](c3ref/step.html)停在一个新的结果集行时，可以多次调用此例程来找到该行中所有列的值。
- en: As noted above, there really is no such thing as a "sqlite3_column()" function
    in the SQLite API. Instead, what we here call "sqlite3_column()" is a place-holder
    for an entire family of functions that return a value from the result set in various
    data types. There are also routines in this family that return the size of the
    result (if it is a string or BLOB) and the number of columns in the result set.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如上所述，SQLite API 中实际上不存在"sqlite3_column()"函数。相反，我们在这里称之为"sqlite3_column()"的东西是一个整个函数族的占位符，这些函数以各种数据类型从结果集返回值。此族中还有返回结果大小（如果是字符串或
    BLOB）和结果集中列数的例程。
- en: '[sqlite3_column_blob()](c3ref/column_blob.html)'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_blob()](c3ref/column_blob.html)'
- en: '[sqlite3_column_bytes()](c3ref/column_blob.html)'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_bytes()](c3ref/column_blob.html)'
- en: '[sqlite3_column_bytes16()](c3ref/column_blob.html)'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_bytes16()](c3ref/column_blob.html)'
- en: '[sqlite3_column_count()](c3ref/column_count.html)'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_count()](c3ref/column_count.html)'
- en: '[sqlite3_column_double()](c3ref/column_blob.html)'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_double()](c3ref/column_blob.html)'
- en: '[sqlite3_column_int()](c3ref/column_blob.html)'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_int()](c3ref/column_blob.html)'
- en: '[sqlite3_column_int64()](c3ref/column_blob.html)'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_int64()](c3ref/column_blob.html)'
- en: '[sqlite3_column_text()](c3ref/column_blob.html)'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_text()](c3ref/column_blob.html)'
- en: '[sqlite3_column_text16()](c3ref/column_blob.html)'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_text16()](c3ref/column_blob.html)'
- en: '[sqlite3_column_type()](c3ref/column_blob.html)'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_type()](c3ref/column_blob.html)'
- en: '[sqlite3_column_value()](c3ref/column_blob.html)'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_column_value()](c3ref/column_blob.html)'
- en: '**[sqlite3_finalize()](c3ref/finalize.html)**'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_finalize()](c3ref/finalize.html)**'
- en: This routine destroys a [prepared statement](c3ref/stmt.html) created by a prior
    call to [sqlite3_prepare()](c3ref/prepare.html). Every prepared statement must
    be destroyed using a call to this routine in order to avoid memory leaks.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该例程销毁之前由调用[sqlite3_prepare()](c3ref/prepare.html)创建的[预编译语句](c3ref/stmt.html)。为了避免内存泄漏，必须使用此例程调用销毁每个预编译语句。
- en: '**[sqlite3_close()](c3ref/close.html)**'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[sqlite3_close()](c3ref/close.html)**'
- en: This routine closes a [database connection](c3ref/sqlite3.html) previously opened
    by a call to [sqlite3_open()](c3ref/open.html). All [prepared statements](c3ref/stmt.html)
    associated with the connection should be [finalized](c3ref/finalize.html) prior
    to closing the connection.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此例程关闭之前由调用[sqlite3_open()](c3ref/open.html)打开的[数据库连接](c3ref/sqlite3.html)。连接关联的所有[预编译语句](c3ref/stmt.html)在关闭连接之前应该被[完成](c3ref/finalize.html)。
- en: 4\. Typical Usage Of Core Routines And Objects
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 核心例程和对象的典型用法
- en: An application will typically use [sqlite3_open()](c3ref/open.html) to create
    a single [database connection](c3ref/sqlite3.html) during initialization. Note
    that [sqlite3_open()](c3ref/open.html) can be used to either open existing database
    files or to create and open new database files. While many applications use only
    a single [database connection](c3ref/sqlite3.html), there is no reason why an
    application cannot call [sqlite3_open()](c3ref/open.html) multiple times in order
    to open multiple [database connections](c3ref/sqlite3.html) - either to the same
    database or to different databases. Sometimes a multi-threaded application will
    create separate [database connections](c3ref/sqlite3.html) for each thread. Note
    that a single [database connection](c3ref/sqlite3.html) can access two or more
    databases using the [ATTACH](lang_attach.html) SQL command, so it is not necessary
    to have a separate database connection for each database file.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序通常会在初始化期间使用[sqlite3_open()](c3ref/open.html)创建单个[数据库连接](c3ref/sqlite3.html)。请注意，[sqlite3_open()](c3ref/open.html)可以用于打开现有的数据库文件或创建并打开新的数据库文件。虽然许多应用程序仅使用单个[数据库连接](c3ref/sqlite3.html)，但应用程序也可以多次调用[sqlite3_open()](c3ref/open.html)来打开多个[数据库连接](c3ref/sqlite3.html)，无论是到同一数据库还是不同数据库。有时，多线程应用程序会为每个线程创建单独的[数据库连接](c3ref/sqlite3.html)。请注意，单个[数据库连接](c3ref/sqlite3.html)可以使用[ATTACH](lang_attach.html)
    SQL命令访问两个或更多数据库，因此不必为每个数据库文件创建单独的数据库连接。
- en: Many applications destroy their [database connections](c3ref/sqlite3.html) using
    calls to [sqlite3_close()](c3ref/close.html) at shutdown. Or, for example, an
    application that uses SQLite as its [application file format](appfileformat.html)
    might open [database connections](c3ref/sqlite3.html) in response to a File/Open
    menu action and then destroy the corresponding [database connection](c3ref/sqlite3.html)
    in response to the File/Close menu.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 许多应用程序在关闭时使用[sqlite3_close()](c3ref/close.html)销毁它们的[数据库连接](c3ref/sqlite3.html)。例如，使用SQLite作为其[应用文件格式](appfileformat.html)的应用程序可能会在响应文件/打开菜单操作时打开[数据库连接](c3ref/sqlite3.html)，然后在响应文件/关闭菜单时销毁相应的[数据库连接](c3ref/sqlite3.html)。
- en: 'To run an SQL statement, the application follows these steps:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行SQL语句，应用程序遵循以下步骤：
- en: Create a [prepared statement](c3ref/stmt.html) using [sqlite3_prepare()](c3ref/prepare.html).
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[sqlite3_prepare()](c3ref/prepare.html)创建[预编译语句](c3ref/stmt.html)。
- en: Evaluate the [prepared statement](c3ref/stmt.html) by calling [sqlite3_step()](c3ref/step.html)
    one or more times.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过调用[sqlite3_step()](c3ref/step.html)一次或多次来评估[预编译语句](c3ref/stmt.html)。
- en: For queries, extract results by calling [sqlite3_column()](c3ref/column_blob.html)
    in between two calls to [sqlite3_step()](c3ref/step.html).
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于查询，通过在两次调用[sqlite3_step()](c3ref/step.html)之间调用[sqlite3_column()](c3ref/column_blob.html)来提取结果。
- en: Destroy the [prepared statement](c3ref/stmt.html) using [sqlite3_finalize()](c3ref/finalize.html).
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用[sqlite3_finalize()](c3ref/finalize.html)销毁[预编译语句](c3ref/stmt.html)。
- en: The foregoing is all one really needs to know in order to use SQLite effectively.
    All the rest is optimization and detail.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以上内容实际上是有效使用SQLite所需了解的全部内容。其余内容均为优化和详细信息。
- en: 5\. Convenience Wrappers Around Core Routines
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 核心例程周围的便利包装器
- en: The [sqlite3_exec()](c3ref/exec.html) interface is a convenience wrapper that
    carries out all four of the above steps with a single function call. A callback
    function passed into [sqlite3_exec()](c3ref/exec.html) is used to process each
    row of the result set. The [sqlite3_get_table()](c3ref/free_table.html) is another
    convenience wrapper that does all four of the above steps. The [sqlite3_get_table()](c3ref/free_table.html)
    interface differs from [sqlite3_exec()](c3ref/exec.html) in that it stores the
    results of queries in heap memory rather than invoking a callback.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[sqlite3_exec()](c3ref/exec.html)接口是一个便利包装器，通过单个函数调用执行以上四个步骤。传入[sqlite3_exec()](c3ref/exec.html)的回调函数用于处理结果集中的每一行。另一个便利包装器是[sqlite3_get_table()](c3ref/free_table.html)，它也执行以上四个步骤。[sqlite3_get_table()](c3ref/free_table.html)接口与[sqlite3_exec()](c3ref/exec.html)不同之处在于它将查询结果存储在堆内存中，而不是调用回调函数。'
- en: It is important to realize that neither [sqlite3_exec()](c3ref/exec.html) nor
    [sqlite3_get_table()](c3ref/free_table.html) do anything that cannot be accomplished
    using the core routines. In fact, these wrappers are implemented purely in terms
    of the core routines.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 需要意识到，[sqlite3_exec()](c3ref/exec.html)和[sqlite3_get_table()](c3ref/free_table.html)都无法执行核心例程无法完成的任何操作。事实上，这些包装器完全基于核心例程实现。
- en: 6\. Binding Parameters and Reusing Prepared Statements
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 绑定参数并重用预编译语句
- en: 'In prior discussion, it was assumed that each SQL statement is prepared once,
    evaluated, then destroyed. However, SQLite allows the same [prepared statement](c3ref/stmt.html)
    to be evaluated multiple times. This is accomplished using the following routines:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在先前的讨论中，假设每个SQL语句只准备一次，然后被评估，然后被销毁。然而，SQLite允许同一个[准备语句](c3ref/stmt.html)被多次评估。这通过以下例程实现：
- en: '[sqlite3_reset()](c3ref/reset.html)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_reset()](c3ref/reset.html)'
- en: '[sqlite3_bind()](c3ref/bind_blob.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_bind()](c3ref/bind_blob.html)'
- en: After a [prepared statement](c3ref/stmt.html) has been evaluated by one or more
    calls to [sqlite3_step()](c3ref/step.html), it can be reset in order to be evaluated
    again by a call to [sqlite3_reset()](c3ref/reset.html). Think of [sqlite3_reset()](c3ref/reset.html)
    as rewinding the [prepared statement](c3ref/stmt.html) program back to the beginning.
    Using [sqlite3_reset()](c3ref/reset.html) on an existing [prepared statement](c3ref/stmt.html)
    rather than creating a new [prepared statement](c3ref/stmt.html) avoids unnecessary
    calls to [sqlite3_prepare()](c3ref/prepare.html). For many SQL statements, the
    time needed to run [sqlite3_prepare()](c3ref/prepare.html) equals or exceeds the
    time needed by [sqlite3_step()](c3ref/step.html). So avoiding calls to [sqlite3_prepare()](c3ref/prepare.html)
    can give a significant performance improvement.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个或多个调用[sqlite3_step()](c3ref/step.html)之后，[准备语句](c3ref/stmt.html)可以通过调用[sqlite3_reset()](c3ref/reset.html)来重置，以便再次评估。将[sqlite3_reset()](c3ref/reset.html)视为将[准备语句](c3ref/stmt.html)程序倒回到开始。在现有的[准备语句](c3ref/stmt.html)上使用[sqlite3_reset()](c3ref/reset.html)，而不是创建一个新的[准备语句](c3ref/stmt.html)，可以避免不必要地调用[sqlite3_prepare()](c3ref/prepare.html)。对于许多SQL语句，运行[sqlite3_prepare()](c3ref/prepare.html)所需的时间等于或超过[sqlite3_step()](c3ref/step.html)所需的时间。因此，避免调用[sqlite3_prepare()](c3ref/prepare.html)可以显著提高性能。
- en: It is not commonly useful to evaluate the *exact* same SQL statement more than
    once. More often, one wants to evaluate similar statements. For example, you might
    want to evaluate an INSERT statement multiple times with different values. Or
    you might want to evaluate the same query multiple times using a different key
    in the WHERE clause. To accommodate this, SQLite allows SQL statements to contain
    [parameters](lang_expr.html#varparam) which are "bound" to values prior to being
    evaluated. These values can later be changed and the same [prepared statement](c3ref/stmt.html)
    can be evaluated a second time using the new values.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 不常用的是多次评估*完全相同*的SQL语句。更常见的情况是要评估类似的语句。例如，您可能希望使用不同的值多次评估INSERT语句。或者，您可能希望在WHERE子句中使用不同的键多次评估相同的查询。为了适应这一点，SQLite允许SQL语句包含[参数](lang_expr.html#varparam)，这些参数在被评估之前被“绑定”到值上。这些值稍后可以更改，并且可以使用新值再次评估相同的[准备语句](c3ref/stmt.html)。
- en: 'SQLite allows a [parameter](lang_expr.html#varparam) wherever a string literal,
    blob literal, numeric constant, or NULL is allowed in queries or data modification
    statements. (DQL or DML) (Parameters may not be used for column or table names,
    or as values for constraints or default values. (DDL)) A [parameter](lang_expr.html#varparam)
    takes one of the following forms:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在查询或数据修改语句中允许[参数](lang_expr.html#varparam)处于字符串字面量、blob字面量、数值常量或NULL所允许的任何地方。
    (DQL或DML)（参数不能用于列名或表名，也不能作为约束或默认值的值。 (DDL)）一个[参数](lang_expr.html#varparam)采用以下形式之一：
- en: '**?**'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**?**'
- en: '**?***NNN*'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**?***NNN*'
- en: '**:***AAA*'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**:***AAA*'
- en: '**$***AAA*'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**$***AAA*'
- en: '**@***AAA*'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**@***AAA*'
- en: In the examples above, *NNN* is an integer value and *AAA* is an identifier.
    A parameter initially has a value of NULL. Prior to calling [sqlite3_step()](c3ref/step.html)
    for the first time or immediately after [sqlite3_reset()](c3ref/reset.html), the
    application can invoke the [sqlite3_bind()](c3ref/bind_blob.html) interfaces to
    attach values to the parameters. Each call to [sqlite3_bind()](c3ref/bind_blob.html)
    overrides prior bindings on the same parameter.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，*NNN*是一个整数值，*AAA*是一个标识符。参数最初具有NULL值。在首次调用[sqlite3_step()](c3ref/step.html)之前或[sqlite3_reset()](c3ref/reset.html)后立即，应用程序可以调用[sqlite3_bind()](c3ref/bind_blob.html)接口将值绑定到参数上。每次调用[sqlite3_bind()](c3ref/bind_blob.html)都会覆盖同一参数上的先前绑定。
- en: An application is allowed to prepare multiple SQL statements in advance and
    evaluate them as needed. There is no arbitrary limit to the number of outstanding
    [prepared statements](c3ref/stmt.html). Some applications call [sqlite3_prepare()](c3ref/prepare.html)
    multiple times at start-up to create all of the [prepared statements](c3ref/stmt.html)
    they will ever need. Other applications keep a cache of the most recently used
    [prepared statements](c3ref/stmt.html) and then reuse [prepared statements](c3ref/stmt.html)
    out of the cache when available. Another approach is to only reuse [prepared statements](c3ref/stmt.html)
    when they are inside of a loop.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序允许预先准备多个 SQL 语句并根据需要评估它们。没有对[准备语句](c3ref/stmt.html)的未完成数量设定任何限制。一些应用程序在启动时多次调用[sqlite3_prepare()](c3ref/prepare.html)来创建它们将来可能需要的所有[准备语句](c3ref/stmt.html)。其他应用程序保持最近使用的[准备语句](c3ref/stmt.html)的缓存，然后在可用时重用[准备语句](c3ref/stmt.html)。另一种方法是只在循环内重用[准备语句](c3ref/stmt.html)。
- en: 7\. Configuring SQLite
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7\. Configuring SQLite
- en: The default configuration for SQLite works great for most applications. But
    sometimes developers want to tweak the setup to try to squeeze out a little more
    performance, or take advantage of some obscure feature.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的 SQLite 配置对大多数应用程序效果很好。但有时开发人员希望调整设置以尝试提升一点性能，或者利用一些不常见的功能。
- en: 'The [sqlite3_config()](c3ref/config.html) interface is used to make global,
    process-wide configuration changes for SQLite. The [sqlite3_config()](c3ref/config.html)
    interface must be called before any [database connections](c3ref/sqlite3.html)
    are created. The [sqlite3_config()](c3ref/config.html) interface allows the programmer
    to do things like:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[sqlite3_config()](c3ref/config.html) 接口用于为 SQLite 进行全局、进程范围的配置更改。在创建任何[数据库连接](c3ref/sqlite3.html)之前，必须调用[sqlite3_config()](c3ref/config.html)接口。[sqlite3_config()](c3ref/config.html)接口允许程序员执行如下操作：'
- en: Adjust how SQLite does [memory allocation](malloc.html), including setting up
    alternative memory allocators appropriate for safety-critical real-time embedded
    systems and application-defined memory allocators.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整 SQLite 的[内存分配](malloc.html)，包括设置适合安全关键实时嵌入式系统和应用程序定义内存分配器的备用内存分配器。
- en: Set up a process-wide [error log](errlog.html).
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置进程范围的[错误日志](errlog.html)。
- en: Specify an application-defined page cache.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定应用程序定义的页面缓存。
- en: Adjust the use of mutexes so that they are appropriate for various [threading
    models](threadsafe.html), or substitute an application-defined mutex system.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整互斥体的使用，使其适用于各种[线程模型](threadsafe.html)，或者替换应用程序定义的互斥体系统。
- en: After process-wide configuration is complete and [database connections](c3ref/sqlite3.html)
    have been created, individual database connections can be configured using calls
    to [sqlite3_limit()](c3ref/limit.html) and [sqlite3_db_config()](c3ref/db_config.html).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在进程范围的配置完成并且创建了[数据库连接](c3ref/sqlite3.html)之后，可以使用[sqlite3_limit()](c3ref/limit.html)和[sqlite3_db_config()](c3ref/db_config.html)来配置单个数据库连接。
- en: 8\. Extending SQLite
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8\. Extending SQLite
- en: 'SQLite includes interfaces that can be used to extend its functionality. Such
    routines include:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite 包括可用于扩展其功能的接口。这些例程包括：
- en: '[sqlite3_create_collation()](c3ref/create_collation.html)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_create_collation()](c3ref/create_collation.html)'
- en: '[sqlite3_create_function()](c3ref/create_function.html)'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_create_function()](c3ref/create_function.html)'
- en: '[sqlite3_create_module()](c3ref/create_module.html)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_create_module()](c3ref/create_module.html)'
- en: '[sqlite3_vfs_register()](c3ref/vfs_find.html)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_vfs_register()](c3ref/vfs_find.html)'
- en: The [sqlite3_create_collation()](c3ref/create_collation.html) interface is used
    to create new [collating sequences](datatype3.html#collation) for sorting text.
    The [sqlite3_create_module()](c3ref/create_module.html) interface is used to register
    new [virtual table](vtab.html) implementations. The [sqlite3_vfs_register()](c3ref/vfs_find.html)
    interface creates new [VFSes](vfs.html).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[sqlite3_create_collation()](c3ref/create_collation.html) 接口用于创建新的用于排序文本的[校对顺序](datatype3.html#collation)。
    [sqlite3_create_module()](c3ref/create_module.html) 接口用于注册新的[虚拟表](vtab.html)实现。
    [sqlite3_vfs_register()](c3ref/vfs_find.html) 接口创建新的[VFS](vfs.html)。'
- en: 'The [sqlite3_create_function()](c3ref/create_function.html) interface creates
    new SQL functions - either scalar or aggregate. The new function implementation
    typically makes use of the following additional interfaces:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[sqlite3_create_function()](c3ref/create_function.html) 接口创建新的 SQL 函数 - 标量或聚合。新函数的实现通常利用以下附加接口：'
- en: '[sqlite3_aggregate_context()](c3ref/aggregate_context.html)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_aggregate_context()](c3ref/aggregate_context.html)'
- en: '[sqlite3_result()](c3ref/result_blob.html)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_result()](c3ref/result_blob.html)'
- en: '[sqlite3_user_data()](c3ref/user_data.html)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_user_data()](c3ref/user_data.html)'
- en: '[sqlite3_value()](c3ref/value_blob.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[sqlite3_value()](c3ref/value_blob.html)'
- en: All of the built-in SQL functions of SQLite are created using exactly these
    same interfaces. Refer to the SQLite source code, and in particular the [date.c](https://www.sqlite.org/src/doc/trunk/src/date.c)
    and [func.c](https://www.sqlite.org/src/doc/trunk/src/func.c) source files for
    examples.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite的所有内置SQL函数都是使用完全相同的接口创建的。请参阅SQLite源代码，特别是[date.c](https://www.sqlite.org/src/doc/trunk/src/date.c)和[func.c](https://www.sqlite.org/src/doc/trunk/src/func.c)源文件以获取示例。
- en: Shared libraries or DLLs can be used as [loadable extensions](loadext.html)
    to SQLite.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 共享库或DLL可以作为[可加载扩展](loadext.html)用于SQLite。
- en: 9\. Other Interfaces
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9\. 其他接口
- en: This article only mentions the most important and most commonly used SQLite
    interfaces. The SQLite library includes many other APIs implementing useful features
    that are not described here. A [complete list of functions](c3ref/funclist.html)
    that form the SQLite application programming interface is found at the [C/C++
    Interface Specification](c3ref/intro.html). Refer to that document for complete
    and authoritative information about all SQLite interfaces.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 本文仅提及最重要和最常用的SQLite接口。SQLite库包含许多其他实现有用功能的API，这些功能在此处未描述。SQLite应用程序编程接口的[完整功能列表](c3ref/funclist.html)可在[C/C++接口规范](c3ref/intro.html)中找到。请参阅该文档以获取关于所有SQLite接口的完整和权威信息。
